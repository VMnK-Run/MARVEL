{"code": "\\nimport java.io.*;\\n\\n/**\\n * ??\u00b4??\u00b0?????\\??? \"x\" ????????????x???3????????????????????????\\n * (1 ??? x ??? 100)\\n * \\n * (ex)\\n * 1 -> 1\\n * 3 -> 27\\n * 100 -> 1000000\\n * \\n * @author shirakawa_d\\n */\\nclass Main {\\n    public static void main(String[] args) {\\n        try {\\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\\n            String line = br.readLine();\\n            System.out.println(getCubicOf(line));\\n        } catch (Exception e) {\\n            System.out.println(e);\\n        }\\n    }\\n\\n    /**\\n     * @param line\\n     *            ??\u00b4??\u00b0x?????\\???\\n     * @return x???3???\\n     */\\n    private static long getCubicOf(String line) {\\n        long x = Long.parseLong(line);\\n        return (long)Math.pow(x, 3);\\n    }\\n}", "target": "36", "substitutes": {"br": ["wr", "bsp", "ber", "bl", "hr", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "buf", "dr", "bd", "bs", "cr", "db", "rel", "gr", "str", "bh", "bc", "bt", "bridge", "sr", "lr", "shr", "bp", "rb", "bm", "pr", "mer", "ctr", "be", "bro", "bn"], "line": ["query", "record", "Line", "column", "list", "in", "eline", "space", "iter", "inline", "e", "set", "online", "file", "next", "sequence", "comment", "phrase", "block", "status", "pe", "l", "chain", "lin", "char", "row", "out", "stroke", "text", "ine", "style", "str", "lo", "lines", "linux", "cell", "lock", "lf", "range", "LINE", "liner", "de", "print", "le", "string", "word", "command", "nl", "sl", "ln", "output", "se", "page", "link", "message", "cli", "sample", "sql", "frame", "auto", "ge", "entry"], "x": ["dx", "mx", "px", " xx", "tx", "xe", "xx", "xd", "ax", "xf", "l", "xi", "xt", "p", "xc", "xp", "xes", "fx", "i", "v", "gal", "X", "y", "xs", "wx", "yx", "rx", "xy", "z", "xxx", "xxxxxxxx", "n", "xa"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner scanner = new Scanner(System.in);\\n\t\tint A = scanner.nextInt();\\n\t\tint B = scanner.nextInt();\\n\t\tint ans = 0;\\n\t\tif (A < B) {\\n\t\t\tans = B;\\n\t\t\tB -= 1;\\n\t\t} else {\\n\t\t\tans = A;\\n\t\t\tA -= 1;\\n\t\t}\\n\t\tans += Math.max(A, B);\\n\t\tSystem.out.println(ans);\\n\t\tscanner.close();\\n\t}\\n}", "target": "75", "substitutes": {"scanner": ["canner", "caninner", "analyer", "analyener", "Scanter", "Scanning", "caner", "scanter", "Scaninner", "canener", " scanener", "analyner", "scanning", "Scaner", "Scanner", "canter", "scanener", "scaninner", "analyning", " scaner", "Scanener", "scaner", "canning", " scanter", " scaninner"], "A": ["AY", "AB", "S", "NA", "AT", "ART", "D", "This", "BA", "T", "AF", "E", "AC", "AGE", "AI", "H", "As", "P", "HA", "AS", "RA", "AD", "Ar", "CA", "V", "MA", "ASC", "SA", "AV", "ACC", "M", "ACT", "C", "LA", "AR", "a", "I", "G", "AA", "R", "TA", "AL", "IA", "GA", "AP", "L", "AU", "AST", "API", "Ax", "AN", "An"], "B": ["AB", "Bs", "BR", "BB", "J", "BU", "D", "BER", "BA", "RB", "T", "CB", "b", "IB", "VB", "USB", "Y", "Z", "P", "BT", "TB", "Blue", "V", "BO", "M", "C", "SB", "BC", "NB", "G", "I", "BE", "BI", "OB", "BS", "EB", "LB", "BL", "BM", "L", "GB", "Q", "N", "DB"], "ans": ["asks", "an", "uns", "ars", "anks", "ms", "ents", "ups", "rans", "orts", "ds", "asms", "aos", "aps", "ows", "ann", "actions", "grades", "ons", "ins", "AN", "ns", "ags", "aus", "marks", "ros", "vals", "irms", "ks", "ces", " scans", "rates", "ops", "arts", "lines", "uploads", "utters", " means", "vers", "ats", "oos", "nets", "lets", "sets", "olds", "anes", "ends", "ates", "ants", "eps", "xs", "posts", "points", "ANS", "ads", "ls", "orders", "lan", "cs", " spans", "offs", "ums", "books", "amps", "ens", "outs", "eds"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n    static Scanner sc = new Scanner(System.in);\\n    \\n    private static boolean binarySearch(int[] array, int key){\\n        int left = 0;\\n        int right = array.length;\\n        int mid = 0;\\n        while(left < right){\\n            mid = (left + right) / 2;\\n            if(array[mid] == key) return true;\\n            if(array[mid] < key){\\n                left = mid + 1;\\n            }else if(array[mid] > key){\\n                right = mid;\\n            }\\n        }\\n        return false;\\n    }\\n    \\n    private static int[] inputArray(){\\n        int num = sc.nextInt();\\n        int[] array = new int[num];\\n        for(int i = 0; i < num; i++){\\n            array[i] = sc.nextInt();\\n        }\\n        return array;\\n    }    \\n    \\n    public static void main(String[] args){\\n        int[] s = inputArray();\\n        int[] t = inputArray();\\n        int count = 0;\\n        \\n        for(int i = 0; i < t.length; i++){\\n            if(binarySearch(s, t[i])){\\n                count++;\\n            }\\n        }\\n        System.out.println(count);\\n    }\\n}\\n", "target": "138", "substitutes": {"sc": ["irc", "ch", "sb", "sync", "sw", "asc", "mc", "osc", "anc", "Sc", "scope", "sci", "c", "ctx", "r", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "st", "sch", "sec", "gc", "cl", "scan", "ss", "nc", "system", "tc", "cs", "sq", "pc", "ctl", "ct", "isc", "capt", "scl", "sv", "sp", "esc"], "array": ["order", "list", "at", "ace", "set", "all", "chain", "area", "window", "ion", "my", "Array", "current", "length", "value", "hash", "view", "closure", "archive", "rays", "result", "expression", "var", "section", "cache", "file", "table", "save", "audio", "amount", "ray", "collection", "aw", "any", "sort", "object", "history", "arr", "vector", "query", "record", "response", "element", "lower", "row", "memory", "r", "act", "RAY", "a", "number", "component", "map", "sequence", "our", "ash", "pair", "integer", "test", "now", "instance", "form", "am", "format", "trace", "air", "v", "ar", "bar", "range", "export", "app", "string", "answer", "arrow", "storage", "data", "message", "angle", "angular"], "key": ["query", "in", "list", "item", "size", "ke", "null", "check", "max", "set", "Key", "next", "o", "mode", "k", "sum", "p", "by", "row", "char", "x", "ice", "KEY", "prefix", "str", "keys", "ek", "my", "type", "y", "id", "start", "name", "what", "length", "value", "string", "hash", "m", "index", "shift", "any", "base", "rand", "code", "map", "col"], "left": ["list", "size", "lt", "open", "last", "lay", "local", "low", "from", "all", "position", "first", "l", "Left", "lower", "loc", "row", "el", "x", "out", "lex", "rel", "middle", "lo", "end", "lock", "ml", "id", "start", "half", "min", "top", "bottom", "length", "ind", "back", "le", "center", "m", "index", "nl", "shift", "minimum", "offset", "L", "pl", "net", "len", "both", "inner", "small", "sp"], "right": ["wo", "Right", "and", "last", "max", "then", "through", "w", "mr", "radius", "all", "rem", "red", "fr", "after", "ax", "first", "tr", "rd", "th", "rt", "row", "x", "middle", "correct", "med", "rel", "rew", "before", "r", "end", "range", "over", "res", "top", "length", "back", "rh", "west", "recent", "rest", "rx", "R", "self", "rw", "shift", "root", "upper", "down", "raw", "head", "full", "one", "reverse", "third", "rights", "ro"], "mid": ["mobile", "ms", "multi", "part", "mat", "nd", "partial", "px", "md", "perm", "mt", "lay", "tx", "mr", "pard", "dim", "max", "lim", "mm", "rid", "cd", "loc", "mouse", "mil", "trans", "middle", "rel", "med", "window", "my", "mi", "id", "sim", "half", "pid", "min", "mask", "minute", "ind", "le", "m", "mk", "upper", "rand", "hi", "grid", "mer", "div", "man", "Mid", "wid", "member", "mit", "mn"], "num": ["nb", "multi", "mat", "total", "max", "um", "dim", "cal", "local", "all", "np", "sum", "unit", "un", "nr", "nm", "no", "nt", "NUM", "id", "number", "col", "init", "nom", "nu", "index", "mon", "ul", "m", "mu", "us", "Num", "con", "na", "net", "len", "n", "temp", "orig", "nam", "mn"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "it", "ip", "iu", "ie", "o", "chain", "l", "zi", "xi", "b", "di", "pi", "p", "qi", "ei", "g", "wi", "mi", "v", "ini", "ci", "y", "id", "oi", "sim", "j", "io", "uri", "iq", "ni", "I", "remote", "q", "ij", "me", "init", "m", "ami", "ori", "php", "ki", "\u0438", "batch", "ii", "gi", "info", "us", "ims", "is", "li", "hi", "ui", "cli", "ji", "ix", "fi", "im", "ic", "phi", "u", "ri"], "s": ["ms", "S", "sts", "sb", "set", "ds", "l", "b", "ns", "ins", "strings", "bs", "c", "ts", "js", "str", "r", "h", "gs", "st", "ashes", "ls", "m", "sl", "ss", "sq", "cs", "us", "less", "os", "is", "z", "n", "sh", "p", "sv", "hs", "sp"], "t": ["tt", "ot", "at", "total", "it", "pt", "T", "o", "l", "tr", "b", "wt", "rt", "c", "ts", "tw", "g", "r", "v", "tn", "y", "tp", "ty", "ta", "j", "tf", "q", "st", "m", "tm", "ent", "tu", "te", "tc", "att", "tree", "txt", "ct", "n", "p", "u"], "count": ["nb", "result", "report", "add", "summary", "size", "list", "close", "total", "quiet", "check", "max", "cache", "status", "depth", "OUNT", "counter", "sum", "cd", "found", "c", "amount", "coll", "frequency", "flag", "common", "trace", "find", "nt", "score", "search", "number", "process", "length", "child", "index", "cast", "call", "Count", "cmd", "ount", "z", "stat", "code", "n", "ctr"]}}
{"code": "import java.util.*;\\npublic class Main{\\n\tpublic static void main(String[] args){\\n    \tScanner sc = new Scanner(System.in);\\n      \tint N = sc.nextInt();\\n      \tint K = sc.nextInt();\\n      \tint count = 1;\\n      \twhile(N >= K){\\n        \tN = N / K;\\n          \tcount++;\\n        }\\n      \tSystem.out.println(count);\\n    }\\n}", "target": "219", "substitutes": {"sc": ["ch", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "c", "inc", "bc", "cc", "sys", "cont", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "nc", "sq", "cs", "tc", "system", "ck", "pc", "ctl", "acc", "dc", "sa", "isc", "syn", "scl", "sh", "sv", "sp", "esc"], "N": ["NP", "NG", "S", "NA", "D", "MAX", "NV", "NM", "NH", "NF", "H", "P", "V", "NT", "M", "C", "NUM", "NO", "NE", "New", "Size", "NB", "I", "FN", "TN", "Number", "CN", "NK", "R", "ANY", "NL", "NN", "NR", "Max", "Count", "Ns", "Num", "CNN", "NPR", "Total", "Na", "NS", "L", "SN", "GN", "MN", "n", "F", "TON", "ND", "NC"], "K": ["S", "FK", "D", "KR", "T", "KK", "KS", "PK", "k", "KI", "H", "Sk", "Z", "P", "KEY", "V", "Kent", "TH", "M", "UK", "KA", "C", "X", "MC", "G", "NK", "R", "SK", "KING", "KC", "KE", "L", "B", "KB", "F", "VK", "Q", "HK"], "count": ["nb", "result", "report", "add", "size", "total", "iter", "check", "last", "max", "cache", "consider", "state", "counter", "sum", "const", "found", "c", "amount", "flag", "inc", "find", "nt", "C", "must", "current", "number", "process", "length", "ind", "follow", "child", "index", "cond", "Count", "debug", "continue", "t", "acc", "ount", "num", "ct", "n", "ctr", "second"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws Exception {\\n        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) {\\n            int N = Integer.parseInt(reader.readLine());\\n            String[] array = reader.readLine().split(\" \");\\n            int[] H = new int[N];\\n            for (int i = 0; i < N; i++) {\\n                H[i] = Integer.parseInt(array[i]);\\n            }\\n\\n            boolean ret = true;\\n\\n            for (int i = N - 1; i > 0; i--) {\\n                if (H[i] <= H[i - 1] - 2) {\\n                    ret = false;\\n                    break;\\n                }\\n\\n                if (H[i] == H[i - 1] - 1) {\\n                    H[i - 1]--;\\n                }\\n            }\\n\\n            System.out.println(ret ? \"Yes\" : \"No\");\\n        }\\n    }\\n\\n}\\n", "target": "74", "substitutes": {"N": ["NP", "NI", "S", "NA", "J", "UN", "D", "NV", "T", "NM", "NH", "K", "No", "Y", "Length", "Z", "P", "A", "NT", "V", "M", "C", "NOR", "X", "NO", "NE", "New", "Size", "NB", "I", "Number", "FN", "TN", "Node", "R", "NL", "NR", "NN", "Ns", "Num", "CNN", "NC", "NS", "L", "GN", "Q", "n", "O", "ND", "SN", "AN", "Name"], "array": ["rays", "response", "section", "integer", "time", "random", "sequence", "now", "how", "instance", "area", "details", "audio", "window", "my", "share", "Array", "ar", "ray", "RAY", "range", "collection", "export", "shape", "resource", "word", "string", "answer", "show", "arrow", "stack", "external", "function", "object", "message", "angle", "serial", "auto", "map", "archive", "our", "arr", "vector"], "H": ["HE", "Host", "J", "HTTP", "Eh", "D", "HH", "Handler", "NH", "K", "HI", "HTML", "MH", "Hash", "PH", "OH", "Head", "History", "HA", "HC", "HP", "DH", "P", "HM", "RH", "V", "TH", "AV", "M", "Help", "HB", "C", "Length", "He", "CH", "h", "HS", "His", "I", "G", "HT", "HQ", "HL", "GO", "B", "F", "GH", "SH"], "i": ["multi", "list", "si", "ip", "set", "chain", "zi", "di", "c", "window", "point", "ini", "module", "current", "me", "info", "exp", "hi", "phi", "ish", "it", "um", "status", "o", "qi", "x", "y", "sim", "uri", "q", "init", "index", "ori", "asi", "ii", "gi", "us", "cli", "ji", "inner", "ic", "ri", "bi", "ms", "iter", "iu", "key", "ei", "this", "g", "j", "io", "ni", "I", "ind", "print", "ij", "is", "li", "ui", "client", "ix", "ti", "ai", "xi", "pi", "by", "mi", "v", "ci", "id", "oi", "f", "iq", "m", "ki", "batch", "ims", "z", "im", "u"], "ret": ["result", "bool", "stay", "obj", "success", "it", "met", "true", "mt", "cat", "leg", "read", "status", "rem", "pret", "re", "ben", "tr", "dr", "del", "Ret", "lit", "arg", "rt", "out", "def", "rel", "flag", "reply", "RET", "nt", "ref", "rev", "cont", "rets", "got", "det", "rm", "res", "gt", "print", "back", "reg", "gc", "alt", "backed", "valid", "t", "exit", "ext", "repl", "mem", "elt", "reset"]}}
{"code": "import java.util.Scanner;\\nimport java.lang.Math;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner scan = new Scanner(System.in);\\n    long N = scan.nextLong();\\n    long K = scan.nextLong();\\n    scan.close();\\n\\n    long x = N % K;\\n    System.out.println(Math.min(x, K-x));\\n  }\\n}", "target": "22", "substitutes": {"scan": ["an", "scroll", "in", "query", " Scan", "report", "ch", "nn", "sync", "pass", "check", "set", "sk", "read", "all", "send", "connect", "look", "ann", "run", "clean", "see", "k", "save", "warn", "row", "out", "seek", "sc", "walk", "parse", "sin", "ner", "find", "skip", "sys", "proc", "black", "search", "can", "reach", "gc", "gate", "san", "go", "system", "se", "con", "scale", "util", "stat", "n", "store", "sur", "sql", "match", "sv", "Scan", "auto", " scanner"], "N": ["NG", "S", "NA", "J", "D", "NV", "T", "NH", "NM", "H", "Y", "P", "V", "NT", "M", "C", "X", "Ni", "NB", "I", "FN", "NW", "TN", "CN", "R", "NL", "NN", "NR", "Ns", "Num", "DN", "NS", "L", "SN", "B", "MN", "n", "ND", "NC"], "K": ["S", "J", "KR", "T", "KK", "KS", "PK", "KT", "k", "KI", "H", "Sk", "Z", "P", "V", "KN", "M", "UK", "KA", "X", "C", "W", "G", "MK", "I", "IN", "R", "SK", "KE", "L", "B", "KB", "Q", "KY"], "x": ["dx", "mx", "px", "e", "s", "w", "tx", "xx", "xd", "xf", "l", "xi", "k", "xt", "xc", "i", "xp", "d", "g", "r", "v", "X", "y", "h", "f", "xs", "wx", "q", "m", "rx", "xa", "XX", "t", "xy", "z", "ex", "xxx", "n", "ix", "p"]}}
{"code": "//package EducationalDPContest;\\n\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.Arrays;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\tstatic class FastReader \\n    { \\n        BufferedReader br; \\n        StringTokenizer st; \\n  \\n        public FastReader() \\n        { \\n            br = new BufferedReader(new\\n                     InputStreamReader(System.in)); \\n        } \\n  \\n        String next() \\n        { \\n            while (st == null || !st.hasMoreElements()) \\n            { \\n                try\\n                { \\n                    st = new StringTokenizer(br.readLine()); \\n                } \\n                catch (IOException  e) \\n                { \\n                    e.printStackTrace(); \\n                } \\n            } \\n            return st.nextToken(); \\n        } \\n  \\n        int nextInt() \\n        { \\n            return Integer.parseInt(next()); \\n        } \\n  \\n        long nextLong() \\n        { \\n            return Long.parseLong(next()); \\n        } \\n  \\n        double nextDouble() \\n        { \\n            return Double.parseDouble(next()); \\n        } \\n  \\n        String nextLine() \\n        { \\n            String str = \"\"; \\n            try\\n            { \\n                str = br.readLine(); \\n            } \\n            catch (IOException e) \\n            { \\n                e.printStackTrace(); \\n            } \\n            return str; \\n        } \\n        \\n        int[] nextIntArray(int n)\\n        {\\n        \tint a[]=new int[n];\\n        \tfor(int i=0;i<n;i++)\\n        \t{\\n        \t\ta[i]=Integer.parseInt(next()); \\n        \t}\\n        \treturn a;\\n        }\\n    } \\n\tpublic static void main(String[] args) {\\n\t\t// TODO Auto-generated method stub\\n\t\tFastReader sc=new FastReader();\\n\t\tint n=sc.nextInt();\\n\t\tint k=sc.nextInt();\\n\t\tint a[]=sc.nextIntArray(n);\\n\t\t\\n\t\t\\n\t\t//Now we have two changing variables n and k;\\n\t\t//for each i we have k choices;\\n\t\t//I need to reach from 0 to end;\\n\t\tint dp[]=new int[n+1];\\n\t\tArrays.fill(dp, Integer.MAX_VALUE);\\n\t\t//cost to reach 0 will be 0 only;\\n\t\tdp[0]=0;\\n\t\t\\n\t\tfor(int i=0;i<n;i++)\\n\t\t{\\n\t\t\t//now to cost to reach 1; \\n\t\t\t//dp[i];\\n\t\t\t//we can take k steps;\\n\t\t\t//we are already at i;\\n\t\t\tfor(int j=i+1;j<=i+k;j++)\\n\t\t\t{\\n\t\t\t\tif(j<n)\\n\t\t\t\t{\\n\t\t\t\t\tint cost=Math.abs(a[j]-a[i])+dp[i];\\n\t\t\t\t\tdp[j]=Math.min(dp[j],cost);\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(dp[n-1]);\\n\\n\t}\\n\t\\n\t\\n\\n}\\n", "target": "241", "substitutes": {}}
{"code": "import java.util.Scanner;\\n         \\n        public class Main {\\n         \\n        \tpublic static void main(String[] args) {\\n                Scanner scan = new Scanner(System.in);\\n                String price = scan.nextLine();\\n                scan.close();\\n         \\n                int otsuri = Integer.parseInt(price) % 1000;\\n                if (otsuri == 0) {\\n                    System.out.println(otsuri);\\n                } else {\\n                    System.out.println(1000 - otsuri);\\n                }\\n            }\\n        }", "target": "184", "substitutes": {"scan": ["an", "scroll", "in", "spin", "query", "sync", "pass", "check", "set", "cat", "read", "send", "connect", "run", "ann", "clean", "sum", "save", "row", "out", "seek", "sc", "sky", "get", "parse", "sin", "ner", "find", "skip", "sys", "proc", "search", "build", "can", "reach", "gate", "san", "system", "watch", "spec", "se", "con", "ser", "scale", "stat", "n", "sql", "store", "match", "auto", "sv", "Scan"], "price": ["order", "total", "pie", "priority", "time", "product", "position", "pe", " prices", "offer", "percent", "priced", "fee", "cost", "score", "payment", "date", "peer", "pro", "start", "market", "pay", "error", "currency", "rice", "rank", "euro", "value", "trade", "service", "money", "show", "pr", "grade", "Price", "tax"], "otsuri": ["tsui", "shotsuri", "potsuri", "etsuri", "OTSuni", "etsuni", "potsiri", "otsudi", "outsri", "rotsuri", "rotsuki", "tsuni", "rotsui", "otsui", "rotsudi", "tsuki", "otsiri", "rotsuu", "etsui", "tsuu", "otsuki", "outsuri", "potsuu", "etsiri", "tsri", "otsuni", "otsri", "potsri", "rotsri", "shotsuu", "tsudi", "rotsiri", "shotsri", "OTSiri", "outsuki", "OTSuri", "tsuri", "OTSui", "outsudi", "shotsui", "tsiri", "otsuu"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner scan = new Scanner(System.in);\\n\\n\t\tint n;\\n\t\tn = scan.nextInt();\\n\t\tString ss = scan.next();\\n\t\tchar[] c = ss.toCharArray();\\n\\n\t\tint ans = 0;\\n\t\tfor(int i = 0; i <= n-3; i ++) {\\n\t\t\tif(c[i] == 'A' && c[i+1] == 'B' && c[i+2] == 'C') {\\n\t\t\t\tans++;\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(ans);\\n\\n\t}\\n}\\n", "target": "110", "substitutes": {"scan": ["an", "scroll", "in", "query", " Scan", "report", "ch", "nn", "sync", "check", "set", "sm", "read", "gen", "send", "connect", "ann", "clean", "see", "sum", "save", "row", "out", "trans", "seek", "sc", "get", "walk", "g", "sin", "ner", "r", "find", "parse", "sys", "proc", "skip", "range", "search", "can", "reach", "sr", "nl", "gate", "san", "system", "se", "ser", "scale", "util", "store", "sur", "sv", "Scan", "sp"], "n": ["an", "nb", "en", "size", "nn", "names", "s", "o", "l", "np", "ns", "x", "d", "un", "g", "nt", "v", "no", "nos", "ng", "got", "min", "j", "ren", "sn", "ni", "m", "nu", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "gn", "p"], "ss": ["ses", "ms", "ess", "si", "sy", "ws", "sf", "sb", "sw", "s", "ress", "css", "\u00df", "ross", "ness", "ns", "iss", " s", "ts", "sc", "ys", "sys", "oss", "pse", "sd", "rss", "ass", "ls", "hess", "sq", "cs", "ssh", "ser", "sis", "ps", "su", "yy", "sv", "sp", "SS"], "c": ["abc", "cp", "ch", "vc", "s", "com", "cache", "cod", "cm", "csv", "mc", "chain", "b", "enc", "cd", "ec", "loc", "xc", "arc", "sc", "r", "cc", "co", "C", "ci", "v", "fc", "cb", "conv", "lc", "rc", "ac", "gc", "cl", "nc", "cs", "tc", "cf", "etc", "con", "mac", "pc", "dc", "ce", "ct", "ca", "cu", "ic", "unc", "css"], "ans": ["an", "uns", "acs", "ars", "anks", "ms", "ians", "ents", "rans", "ds", "ows", "ann", "ons", "ns", "ins", "AN", "ags", "vals", "ks", " scans", "ts", "pan", "ys", "vs", "lines", "arts", "ats", "nets", "ends", "span", "anes", "ants", "eps", "xs", "ANS", "can", "ads", "ls", "has", "san", "ots", "lan", "cs", "checks", "as", " spans", "ps", "ens", "outs", "ids", "eds"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "set", "iu", "key", "PI", "chain", "zi", "xi", "uli", "di", "pi", "qi", "x", "ei", "mi", "point", "ini", "ci", "id", "sim", "oi", "j", "uri", "iq", "ni", "I", "ind", "q", "init", "ami", "m", "me", "ori", "ki", "\u0438", "batch", "ii", "gi", "info", "slice", "ski", "eu", "to", "is", "li", "ex", "hi", "ui", "cli", "ji", "ix", "im", "phi", "ri"]}}
{"code": "import java.math.BigDecimal;\\nimport java.util.Scanner;\\n\\n \\npublic class Main {\\n \\n\tpublic static void main(String[] args) {\\n\t\t\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint L = sc.nextInt();\\n\t\t\\n\t\tdouble temp = Math.pow(L, 3) / 27;\\n\t\tSystem.out.println(BigDecimal.valueOf(temp));\\n\t\tsc.close();\\n\t\t\\n\t}\\n\t\\n}", "target": "53", "substitutes": {"sc": ["ch", "sb", "sw", "src", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "Sc", "row", "ko", "c", "arc", "bc", "cc", "sys", "SC", "lc", "rc", "sch", "sr", "nl", "gc", "cl", "scan", "ss", "reader", "nc", "system", "tc", "cs", "sq", "uc", "pc", "ser", "syn", "isc", "sh", "sv", "sp", "esc"], "L": ["S", "J", "D", "LC", "T", "TL", "K", "l", "LIN", "SL", "LU", "H", "Length", "LT", "Z", "P", "CL", "LOC", " l", "V", "LE", "LI", "M", "C", "X", "LL", "LA", "LM", "LG", "I", "G", "DL", "R", "NL", "LV", "B", "F", "N"], "temp": ["dem", "result", "relative", "perature", "null", "tmp", "adjusted", "emp", "w", "stem", "test", "T", "red", "term", "pt", "clean", "l", "tr", "tim", "sum", "prime", "mag", "tem", "c", "deg", "v", "mod", "dat", "Temp", "value", "m", "fake", "buffer", "hum", "tc", "t", "z", "mem", "p", "Temperature"]}}
{"code": "import java.util.*;\\n\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        String str = sc.next();\\n        String[] str2 = new String[3];\\n        str2 = str.split(\"\");\\n        Arrays.sort(str2);\\n        if( !(str2[1].equals(str2[2])) && str2[0].equals(str2[1]) && str2[2].equals(str2[3])) {\\n            System.out.println(\"Yes\");\\n        } else {\\n            System.out.println(\"No\");\\n        }\\n    }\\n}", "target": "33", "substitutes": {"sc": ["sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "inc", "bc", "cc", "sys", "ok", "SC", "lc", "rc", "usc", "st", "sch", "sec", "gc", "scan", "cl", "ss", "uc", "nc", "system", "cs", "tc", "sq", "pc", "ser", "isc", "desc", "syn", "scl", "sv", "rs", "sp", "esc"], "str": ["result", "obj", "iter", "vol", "s", "ocr", "read", "msg", "fr", "STR", "tr", "dr", "char", "text", "out", "c", "coll", "g", "r", "seq", "dat", "ok", "j", "pos", "print", "string", "st", "Str", "exp", "spec", "t", "br", "z", "input", "txt", "n", "div", "pr", "enc", "sp", "arr"], "str2": [" str3", "arr2", "str12", " str0", "str42", " str02", "name2", "STR52", "rep14", "form02", "obj2", "arr9", "hex2", "string12", "form12", "str02", " strL", "str52", "str256", "hexTwo", "Str4", "txt3", "form64", "strdb", "hex42", "str14", "hexL", "str3", " str48", " strTwo", "Str1", "stTwo", "string4", "arr52", "string2", "formdb", "rep48", "strL", "form2", "rep2", " str1", "strSplit", "txt2", "str9", " str9", "Str12", "serv48", "iter2", "name02", "strTwo", "str1", " str64", "hex02", " str42", " strdb", "STR12", "rep42", "name256", "stL", " strSplit", "str0", "str48", "STR02", "namedb", "STR9", "string1", "obj4", "form256", "serv2", "STR2", "txtSplit", " str4", "iter42", "objL", " str12", "txt0", "serv14", "StrL", "Str2", "st2", "st02", " str256", "str4", "Str0", " str52", "Str3", "arr4", "STR64", "StrSplit", " str14", "serv42", "str64", "obj1", "STR4"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int d = sc.nextInt();\\n        int[][] x = new int[n][d];\\n        int ans = 0;\\n        for (int i=0;i<n;i++)for (int j=0;j<d;j++)x[i][j]=sc.nextInt();\\n        for (int i=0;i<n-1;i++){\\n            for (int j=i+1;j<n;j++){\\n                int data = 0;\\n                for (int k=0;k<d;k++)data+=(x[i][k]-x[j][k])*(x[i][k]-x[j][k]);\\n                if (Math.floor(Math.sqrt(data))==Math.ceil(Math.sqrt(data)))ans++;\\n            }\\n        }\\n        System.out.println(ans);\\n    }\\n}\\n", "target": "59", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "arc", "sci", "c", "ctx", "inc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "exec", "gc", "scan", "cl", "ss", "nc", "sq", "cs", "tc", "system", "ck", "pc", "ctl", "isc", "desc", "capt", "scl", "sv", "sp", "esc"], "n": ["nb", "an", "en", "size", "nd", "nn", "names", "network", "o", "l", "np", "ns", "pi", "c", "un", "g", "r", "nt", "v", "nm", "no", "y", "ng", "on", "name", "number", "sn", "ni", "length", "nu", "m", "nl", " N", "nc", "ne", "nan", "t", "na", "z", "num", "net", "len", "dn", "N", "p", "mn"], "d": ["des", "dt", "da", "nd", "D", "ds", "w", "dom", "dim", "l", "dir", "b", "di", "cd", "del", "dd", "db", "c", "def", "g", "r", "draw", "dp", "dat", "done", "sd", "f", "den", "length", "de", "m", "pd", "dev", "debug", "dm", "t", "dc", "dh", "dist", "z", "num", "div", "dn", "du", "mind", "p", "dec"], "x": ["tt", "mx", "px", "e", "tx", "w", "xe", "xx", "xd", "o", "ax", "xf", "l", "xi", "xt", "p", "xc", "xes", "xp", "c", "ctx", "g", "ux", "v", "ox", "X", "y", "config", "h", "xs", "wx", "q", "xml", "php", "rx", "m", "index", "t", "xy", "z", "ex", "xxx", "ct", "ix", "xa", "lex", "u"], "ans": ["ies", "an", "ings", "errors", "acts", "uns", "ms", "ians", "ents", "results", "users", "s", "ds", "flags", "aps", "aos", "ows", "ann", "ins", "ns", "ones", "vals", "ks", "arts", "lines", "ats", "sets", "span", "rows", "anes", "ates", "ants", "xs", "posts", "ANS", "can", "ads", "ls", "types", "times", "lan", "cs", "os", "checks", "as", "ps", "is", "offs", "amps", "ens", "outs", "ids", "eds"], "i": ["bi", "in", "multi", "si", "at", "ti", "ai", "iter", "ip", "it", "iu", "ie", "ir", "zi", "xi", "di", "iti", "pi", "by", "qi", "ei", "this", "ion", "mi", "ity", "ini", "ci", "y", "sim", "ia", "io", "iq", "I", "ind", "ij", "ami", "init", "me", "iy", "ori", "inx", "ki", "asi", "ii", "info", "gi", "us", "ims", "is", "li", "hi", "ui", "ji", "inner", "ix", "im", "ic", "phi", "u", "ri"], "j": ["jo", "bi", "oj", "bj", "ot", "obj", "adj", "jc", "json", "J", "it", "s", "at", "vol", "pt", "o", "fr", "er", "kid", "l", "jit", "dj", "b", "jj", "jas", "aj", "jl", "bs", "by", "bo", "el", "jp", "uj", "rel", "js", "g", "ion", "v", "ja", "y", "ju", "ind", "sp", "ij", "q", "ph", "je", "jac", "kj", "ort", "m", "us", "ne", "br", "to", "z", "jump", "job", "other", "ji", "pr", "ge", "note"], "data": ["result", "size", "da", "total", "DATA", "step", "di", "sum", "area", "text", "trans", "def", "rel", "window", "relation", "draw", "share", "dat", "ta", "sd", "a", "error", "number", "extra", "length", "alpha", "value", "beta", "money", "normal", "device", "ata", "m", "mu", "dev", "zero", "lan", "debug", "raw", "na", "scale", "rand", "one", "complex", "div", "mem", "val", "average", "dec"], "k": ["ka", "kl", "ke", "kr", "kn", "wk", "kind", "ark", "sk", "key", "kg", "kan", "kid", "K", "kin", "ko", "ks", "ik", "g", "ek", "kat", "kt", "ku", "ok", "ak", "ph", "kw", "uk", "kk", "q", "sch", "kj", "mk", "ki", "km", "ck", "tk", "dk", "unk", "ijk", "kh"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    static Scanner scanner = new Scanner(System.in);\\n\\n    public static void main(String[]$) {\\n        int n = scanner.nextInt();\\n        int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;\\n        for (int i = 0; i < n; i++) {\\n            int a = scanner.nextInt();\\n            min = Math.min(min, a);\\n            max = Math.max(max, a);\\n        }\\n        System.out.println(max - min);\\n    }\\n}", "target": "214", "substitutes": {"scanner": ["scanener", " scaner", "Scanter", "canner", "Scaner", "caner", "scanter", "Scanener", " scanter", " scanener", "canener", "canter", "Scanner", "scaner"], "n": ["nb", "en", "rn", "nn", "total", "nw", "network", "l", "np", "ns", "d", "norm", "nt", "no", "nia", "nm", "ng", "on", "name", "f", "number", "sn", "ni", "nu", "m", "nl", "nc", "ln", "ne", "nan", "na", "cn", "num", "net", "N", "gn", "mn"], "min": ["floor", "in", "part", "mat", "lt", " mins", "local", "diff", "low", "mr", "from", "mid", "none", "rain", "master", "first", "l", "art", "amin", "mine", "lower", "db", "sub", "un", "rel", "left", "med", "lo", "sin", "Minimum", "mi", "mod", "only", "start", "default", "sim", "ma", "minute", "pos", "admin", "ind", "mel", "st", "m", "shift", "pre", "initial", "mins", "minimum", "sort", "MIN", "begin", "minus", "Min", "net", "emin", "mis", "inner", "mean", "average", "small", "member", "mn"], "max": ["add", "highest", "mx", "size", "mad", "largest", "total", "last", "right", "cache", "MAX", "all", "put", "ax", "chain", "master", "sum", "k", "step", "cover", "prime", "out", "x", "c", "med", "window", "act", "end", "v", "co", "mod", "range", "ma", "over", "res", "gt", "inter", "force", "value", "can", "m", "recent", "view", "rest", "Max", "huge", "grow", "wrap", "upper", "exp", "na", "full", "wall", "scale", "ex", "ca", "div", "inv", "chest", "maximum", "est"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "gu", "iu", "ie", "zi", "xi", "di", "pi", "qi", "x", "g", "my", "mi", "ini", "ci", "sim", "id", "j", "iq", "I", "ind", "q", "init", "me", "m", "ki", "batch", "ii", "gi", "us", "is", "li", "z", "hi", "ui", "cli", "sql", "ix", "im", "ic", "phi"], "a": ["an", "ana", "la", "ba", "ka", "ea", "at", "ai", "au", "eta", "o", "aaa", "b", "aj", "area", "aux", "p", "A", "v", "ma", "ta", "f", "ao", "va", "alpha", "ae", "ya", "wa", "ha", "ga", "oa", "aa", "sta", "as", "t", "apa", "pa", "na", "fa", "sa", "ca", "xa"]}}
{"code": "/*\\n* Author. Silviase(@silviasetitech)\\n* For AtCoder\\n*/\\n\\nimport java.util.*;\\nimport java.lang.*;\\nimport java.math.*;\\n\\n\\npublic class Main {\\n    public static void main(String args[]){\\n        Scanner sc = new Scanner(System.in);\\n        \\n        int n = sc.nextInt();\\n        int variety = sc.nextInt();\\n        int[] k = new int[n];\\n        int[] preference = new int[variety];\\n        int ans = 0;\\n        for (int i = 0; i < n; i++) {\\n            k[i] = sc.nextInt();\\n            for (int j = 0; j < k[i]; j++) {\\n                int tmp = sc.nextInt();\\n                preference[tmp-1]++;\\n            }\\n        }\\n        for (int i = 0; i < variety; i++) {\\n            if (preference[i] == n) {\\n                ans++;\\n            } \\n        }\\n        System.out.println(ans);\\n        sc.close();\\n    }\\n    private static int gcd(int m, int n) {\\n        if(m < n) {\\n            return gcd(n, m);\\n        }\\n        if(n == 0){\\n            return m;\\n        } \\n        return gcd(n, m % n);\\n    }\\n}", "target": "169", "substitutes": {"sc": ["irc", "ch", "sync", "sb", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "scope", "c", "ctx", "sub", "bc", "cc", "sys", "co", "fc", "sim", "SC", "conv", "lc", " Sc", "rc", "RC", "usc", "st", "sch", "sec", "gc", "cl", "scan", "pb", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "ser", "isc", "desc", "capt", "scl", "sh", "syn", "sv", "Scan", "sp", "esc"], "n": ["nb", "an", "en", "size", "nn", "s", "nor", "network", "w", "none", "o", "l", "np", "ns", "pi", "x", "c", "out", "un", "d", "mn", "g", "r", "nt", "v", "nm", "M", "no", "y", "ng", "on", "name", "ren", "number", "sn", "f", "h", "q", "fn", "nu", "nl", "normal", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "count", "net", "dn", "N", "gn", "node", "p", "u"], "variety": ["vervation", "parietal", "variious", "pariety", "generiety", "various", "Varieties", "variietal", "variieties", "parvation", "Varvation", "generious", "variiety", "parieties", "varivation", "Varancy", "varieties", "verieties", "parious", "Variety", "varietal", "varancy", "variancy", "generieties", "parancy", "verietal", "veriety", "genervation", "varvation"], "k": ["ka", "kl", "ke", "kn", "kind", "sk", "key", "kan", "kid", "K", "u", "kick", "ks", "c", "sky", "kb", "isk", "ik", "g", "ek", "v", "ku", "ak", "kk", "kw", "q", "mk", "kj", "ki", "km", "ck", "t", "dk", "p", "kernel", "ikk"], "preference": ["prefixreference", "pretvention", "premitness", "Preferred", "prefixvention", "refer", "Precision", "publicfer", "prereference", "prefixfer", "precision", "intervention", "Prevention", "premference", "publicitness", "interferred", "prefixference", "prefer", "PREfer", "publicferred", "Prefer", "PREvention", "prevention", "rereference", "reference", "pretferred", "publicference", "premferred", "Preference", "preferred", "intercision", "pretcision", "premfer", "Preitness", "PREreference", "revention", "PREference", "preitness", "pretference", "interference"], "ans": ["errors", "an", "ars", "reads", "ms", "ians", "ents", "mas", "anks", "ups", "rans", "orts", "aps", "aos", "ows", "ann", "als", "ons", "ins", "ns", "AN", "ids", "vals", "faces", "ks", " scans", "ts", "arts", "ats", "nets", "rors", "sets", "ends", "rows", "ants", "xs", "ANS", "ads", "ls", "orders", "ips", "ams", "lan", "cs", "as", "ps", "offs", "ums", "ens", "outs", "ints", "eds"], "i": ["jo", "bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "um", "o", "PI", "chain", "zi", "xi", "di", "iti", "pi", "qi", "x", "rel", "ei", "this", "wi", "mi", "point", "ity", "ini", "ci", "y", "sim", "id", "ia", "uri", "iq", "ni", "inter", "ind", "print", "ij", "I", "me", "init", "index", "ori", "iy", "ki", "\u0438", "asi", "batch", "ii", "gi", "info", "ims", "is", "li", "hi", "ui", "ji", "cli", "ix", "fi", "im", "phi", "ri"], "j": ["jo", "bi", "oj", "bj", "obj", "jc", "json", "J", "it", "ie", "ax", "kid", "jit", "dj", "b", "jj", "jas", "aj", "jl", "bo", "jp", "uj", "rel", "js", "nr", "g", "ja", "y", "ju", "ph", "jac", "ij", "q", "kj", "br", "xy", "z", "jump", "other", "job", "ji", "pr", "ge"], "tmp": ["mp", "tt", "obj", "prop", "perm", "snap", "cache", "emp", "set", "src", "test", "table", "np", "cmp", "jj", "pot", "prime", "loc", "ctx", "parent", "mint", "tp", "tf", "td", "needed", "top", "sup", "mk", "attr", "secondary", "tc", "etc", "timeout", "xy", "iott", "xxx", "temp", "angle", "yy", "mut"], "m": ["mp", "mmm", "ms", "mx", "md", "e", "perm", "arm", "mt", "sm", "cm", "mr", "um", "mid", "mc", "mm", "o", "l", "b", "om", "c", "d", "med", "g", "r", "mi", "nm", "v", "M", "pm", "y", "rm", "ma", "h", "mo", "tm", "fm", "km", "mu", "vm", "dm", "t", "gm", "mem", "man", "p", "im", "mn", "mun"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\t@SuppressWarnings(\"resource\")\\n\tpublic static void main(String args[]) {\\n\t\tScanner scanner = new Scanner(System.in);\\n\t\tint n = scanner.nextInt();\\n\t\tint m = scanner.nextInt();\\n\t\tint[] l = new int[n];\\n\\n\t\tfor (int i = 0; i < m; i++) {\\n\t\t\tl[scanner.nextInt() - 1]++;\\n\t\t\tl[scanner.nextInt() - 1]++;\\n\t\t}\\n\\n\t\tfor (int i = 0; i < l.length; i++) {\\n\t\t\tSystem.out.println(l[i]);\\n\t\t}\\n\\n\t}\\n}", "target": "57", "substitutes": {"scanner": ["signter", "canner", "canners", "Scanners", "gatening", "gatener", "gateer", "Scanter", "caner", " scanning", "scanter", "scanners", "signer", "canener", " scanener", "signner", "signners", "gateter", "scanning", "Scaner", "Scanner", "canter", "scanener", " scaner", "Scanener", "scaner", "canning", " scanter"], "n": ["nb", "an", "en", "nn", "o", "np", "k", "ns", "pi", "x", "c", "d", "r", "nm", "nt", "no", "v", "ng", "j", "number", "sn", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "N", "p", "mn"], "m": ["ms", "mx", "mas", "met", "mt", "sm", "cm", "mc", "mm", "b", "k", "c", "d", "med", "r", "mi", "v", "M", "y", "ma", "h", "mo", "q", "tm", "mu", "mb", "dm", "t", "gm", "bm", "mis", "p", "mean", "im", "mn"], "l": ["fl", "list", "kl", "lt", "ll", "lv", "lu", "ld", "lb", "p", "el", "c", "lp", "lists", "lo", "g", "r", "v", "lock", "ml", "rl", "hl", "j", "h", "lc", "like", "ell", "le", "ql", "ls", "nl", "sl", "il", "ln", "ol", "t", "li", "L", "lis", "pl", "z", "dl", "al"], "i": ["yi", "bi", "multi", "si", "ti", "ai", "ip", "it", "iu", "ie", "zi", "xi", "di", "pi", "qi", "ei", "mi", "ity", "ini", "ci", "y", "sim", "err", "oi", "id", "j", "span", "uri", "ni", "I", "ind", "print", "ij", "q", "iy", "init", "me", "ami", "ori", "php", "ki", "\u0438", "ii", "gi", "us", "ims", "is", "li", "z", "hi", "ui", "cli", "ji", "ix", "fi", "im", "ic", "phi", "ri"], "nextInt": ["NextInt", "nextINT", " nextDouble", "nextInteger", " nextFloat", "randLong", "validLong", "validINT", "prevLong", "prevINT", "nextLong", "NextINT", "firstINT", "magicInteger", "nextFloat", "firstInteger", "magicLong", "NextInteger", "randFloat", "firstInt", "randINT", "validInt", "magicINT", "NextLong", " nextINT", "randInt", "NextFloat", "prevDouble", " nextInteger", "randInteger", "nextDouble", "firstFloat", " nextLong", "prevInt", "validDouble", "magicInt"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\npublic class Main\\n{\\n    public static void main(String []args) throws IOException {\\n    \tFastScanner in  = new FastScanner(System.in);\\n    \tPrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)), false); \\n    \tsolve(in, out);\\n    \tin.close();\\n    \tout.close();\\n    }\\n    static long gcd(long a, long b){ return (b==0) ? a : gcd(b, a%b); }\\n    static int gcd(int a, int b){ return (b==0) ? a : gcd(b, a%b); }\\n    \\n    public static int[] generatePrimes(int n) {\\n\t\tboolean[] prime = new boolean[n + 1];\\n\t\tArrays.fill(prime, 2, n + 1, true);\\n\t\tfor (int i = 2; i * i <= n; i++)\\n\t\t\tif (prime[i])\\n\t\t\t\tfor (int j = i * i; j <= n; j += i)\\n\t\t\t\t\tprime[j] = false;\\n\t\tint[] primes = new int[n + 1];\\n\t\tint cnt = 0;\\n\t\tfor (int i = 0; i < prime.length; i++)\\n\t\t\tif (prime[i])\\n\t\t\t\tprimes[cnt++] = i;\\n\t\treturn Arrays.copyOf(primes, cnt);\\n\t}\\n    static class FastScanner{\\n\tBufferedReader reader;\\n\tStringTokenizer st;\\n\tFastScanner(InputStream stream){reader=new BufferedReader(new InputStreamReader(stream));st=null;}\t\\n\tString next(){while(st == null || !st.hasMoreTokens()){try{String line = reader.readLine();if(line == null){return null;}\t\t    \\n\t     st = new StringTokenizer(line);}catch (Exception e){throw new RuntimeException();}}return st.nextToken();}\\n\tString nextLine()  {String s=null;try{s=reader.readLine();}catch(IOException e){e.printStackTrace();}return s;}\t    \t  \t\\n\tint    nextInt()   {return Integer.parseInt(next());}\\n\tlong   nextLong()  {return Long.parseLong(next());}\t\t\\n\tdouble nextDouble(){return Double.parseDouble(next());}\\n\tchar   nextChar()  {return next().charAt(0);}\\n\tint[]  nextIntArray(int n)         {int[] arr= new int[n];   int i=0;while(i<n){arr[i++]=nextInt();}  return arr;}\\n\tlong[] nextLongArray(int n)        {long[]arr= new long[n];  int i=0;while(i<n){arr[i++]=nextLong();} return arr;}\t\\n\tint[]  nextIntArrayOneBased(int n) {int[] arr= new int[n+1]; int i=1;while(i<=n){arr[i++]=nextInt();} return arr;}\t    \t\\n\tlong[] nextLongArrayOneBased(int n){long[]arr= new long[n+1];int i=1;while(i<=n){arr[i++]=nextLong();}return arr;}\t    \t\\n\tvoid   close(){try{reader.close();}catch(IOException e){e.printStackTrace();}}\t\t\t\t\\n    }\\n    \\n    /********* SOLUTION STARTS HERE ************/\\n    \\n    private static void solve(FastScanner in, PrintWriter out){\\n        int n = in.nextInt();\\n        int a[] = new int[n];\\n        for(int i=0;i<n;i++)\\n        {\\n            a[i] = in.nextInt();\\n        }\\n        long sum=0L;\\n        for(int i=0;i<n;i++)\\n        {\\n            for(int j=i+1;j<n;j++)\\n            {\\n                sum += 1L*a[i]*a[j];\\n            }\\n        }\\n        \\n        out.println(sum);\\n    }\\n    /************* SOLUTION ENDS HERE **********/\\n}", "target": "126", "substitutes": {"in": [" din", "en", "In", "iter", "it", "sol", "din", "file", "source", "rin", "o", "er", "run", "l", "k", "ins", "thin", "lin", "rt", "bin", "inc", "sin", "r", "ini", "lock", "err", "on", "inside", "io", "h", "ind", "print", "q", "IN", "init", "info", "ln", "con", "gin", "isin", "t", "input", "inn", "inf", "inner", "p", "ze", "cin"], "out": ["en", "outer", "ot", "at", "ch", "OU", "null", "it", "console", "w", "put", "aos", "all", "o", "Out", "outs", "ins", "rt", "str", "or", "nt", "end", "v", "co", "sys", "err", "name", "error", "io", "res", "print", "gc", "log", "write", "OUT", "info", "cmd", "output", "os", "con", "writer", "t", "to", "ex", "net", "client", "p", "ou", "cin"], "a": ["an", "la", "ba", "ab", "da", "ea", "ai", "e", "au", "false", "true", "w", "aaaa", "o", "l", "aaa", "area", "c", "am", "d", "A", "era", "g", "r", "ar", "y", "ia", "ma", "ta", "f", "ao", "va", "alpha", "ac", "ae", "le", "xa", "ga", "oa", "aa", "t", "na", "z", "sa", "ca", "aq", "p", "al", "u"], "b": ["nb", "bi", "ba", "ab", "bl", "be", "bb", "ib", "fb", "e", "sb", "ch", "bu", "wb", "w", "o", "eb", "l", "lb", "bd", "ob", "gb", "bs", "x", "c", "d", "bg", "g", "r", "bh", "bc", "v", "bf", "y", "bt", "cb", "f", "h", "length", "back", "m", "beta", "mb", "bp", "t", "br", "base", "z", "B", "rb", "p", "al", "u"], "n": ["nb", "an", "en", "nn", "non", "network", "all", "none", "o", "l", "np", "ns", "pi", "x", "c", "d", "g", "nm", "nt", "v", "no", "ng", "on", "name", "number", "sn", "m", "nu", "nl", " N", "nc", "nan", "ne", "t", "na", "z", "num", "count", "net", "len", "dn", "N", "cn", "p", "mn"], "prime": ["result", "poly", "tie", "ve", "create", "false", "perm", "tmp", "set", "true", "cycle", "random", "test", "key", "prof", "trust", "profile", "next", "series", "spe", "pe", "ite", "shadow", "Prime", "ptr", "square", "locked", "primary", "lock", "pse", "po", "proxy", "power", "density", "inter", "force", " Prime", "hash", "pri", "secure", "index", "pre", "beta", "plus", "use", "times", "imes", "te", "se", "ime", "pipe", "xy", "tri", "tree", "pose", "pr", "reverse", "hots", "map", "sequence", "ties", "ro"], "i": ["multi", "size", "si", "ip", "PI", "l", "zi", "di", "ion", "ini", "me", "info", "hi", "p", "phi", "it", "ie", "status", "o", "qi", "x", "y", "q", "init", "ami", "index", "ori", "ii", "gi", "to", "base", "cli", "ji", "ic", "ri", "bi", "iu", "k", "ei", "g", "io", "ni", "I", "ind", "ij", "t", "is", "li", "ex", "ui", "ix", "ti", "ai", "integer", "xi", "pi", "by", "mi", "v", "ity", "ci", "id", "f", "m", "ki", "z", "im", "u"], "j": ["jo", "bi", "oj", "bj", "adj", "jc", "J", "json", "it", "false", "fr", "jit", "dj", "jas", "k", "jj", "aj", "jl", "bo", "x", "jp", "uj", "js", "iaz", "g", "v", "ja", "y", "h", "ph", "ij", "q", "kj", "us", "att", "br", "urt", "z", "jump", "other", "ji", "ix", "p", "u"], "primes": [" primens", " prrices", "bruning", "phunes", "prunes", "phimes", "plimens", "princes", "pitinces", "pituning", "plimes", "chimens", "plicks", " prices", "brimes", "plises", "pruning", "prices", "trimes", "pricks", "phimens", "prrices", "trimens", "trunes", "brinces", " pricks", " prises", "trrices", "pitimes", "primens", "phrices", "prises", " pruning", "chimes", "brices", " prunes", "chicks", "chises", "pitices", " princes"], "cnt": [" cctr", "tcnc", "Cnt", "ccnt", "cctr", "lctr", " cnc", "tcnt", "Cnc", "pcnz", "cNT", "lcct", "cct", " cnz", "pcct", "ccct", " ctr", "cnc", "nct", "tcct", " cct", "nNT", "lcnt", "lcnz", "cnz", "ntr", "tcctr", "pcnt", "Cctr", "Ctr", "Cct", "pctr", "ccNT", "nnt", "ctr", "CNT"], "reader": ["Reader", "player", "iter", "console", "read", "mr", "file", "builder", "fr", "driver", "tr", "rd", "dr", "layer", "row", "worker", "r", "iterator", "ner", "rl", "handler", "parser", "rer", "runner", "liner", "rc", "ry", "rx", "lr", "http", "handle", "buffer", "loader", "wrapper", "upper", "via", "writer", "rr", "rot", "txt", "client", "redo", "inner", "er", "rs", "rar", "ro"], "st": ["tt", "irst", "ft", "std", "nd", "ste", " est", "ost", "sts", "obj", "null", "mt", "pt", "set", "tmp", "sw", "it", "et", "fr", "sty", "first", "ld", "wt", "dr", "const", "step", "stri", "stress", "rt", "ast", "ts", "sc", "ust", "d", "str", "ptr", "r", "nt", "ST", "sth", "bt", "start", "inst", "ut", "stage", "rest", "cl", "ss", "stable", "stack", "storage", "se", "usr", "t", "ist", "sta", "St", "z", "stat", "ct", "p", "sv", "sp", "est"], "stream": ["open", "null", "console", "sw", "w", "zip", "file", "read", "next", "test", "source", "ream", "channel", "context", "sc", "this", "window", "iterator", "v", "socket", "string", "log", "stack", "wrapper", "so", "output", "path", "data", "pipe", "input", "message", "sample", "Stream", "inner", "ro"], "line": ["record", "Line", "part", "eline", "iter", "e", "inline", "online", "source", "phrase", "comment", "block", "l", "lin", "row", "text", "stroke", "ine", "lines", "point", "cell", "LINE", "liner", "word", "le", "string", "print", "train", "body", "nl", "ln", "detail", "se", "page", "data", "link", "piece", "code", "message", "sample", "frame", "entry"], "s": ["ms", "S", "ws", "sts", "sb", "set", "ds", "es", "l", "ns", "ins", "rs", "ts", "js", "str", "g", "ats", "y", "its", "h", "gs", "string", "ls", "ss", "abs", "sq", "cs", "qs", "os", "less", "se", "ims", "t", "ps", "is", "p", "fs", "hs", "gets"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString s = sc.next();\\n\t\tchar[] c = s.toCharArray();\\n\t\tchar[] start_black = new char[s.length()];\\n\t\tchar[] start_white = new char[s.length()];\\n\t\tint bCount = 0;\\n\t\tint wCount = 0;\\n\t\tfor(int i = 0; i <s.length(); i++) {\\n\t\t\tif(i%2==0) {\\n\t\t\t\tstart_black[i] = '0';\\n\t\t\t\tstart_white[i] = '1';\\n\t\t\t}\\n\t\t\telse {\\n\t\t\t\tstart_black[i] = '1';\\n\t\t\t\tstart_white[i] ='0';\\n\t\t\t}\\n\t\t}\\n\t\tfor(int i = 0; i < s.length(); i++) {\\n\t\t\tif(c[i] != start_black[i]) {\\n\t\t\t\tbCount++;\\n\t\t\t}\\n\t\t\tif(c[i] != start_white[i]) {\\n\t\t\t\twCount++;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(Math.min(wCount, bCount));\\n\t}\\n}\\n", "target": "146", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "inc", "dec", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "uc", "nc", "sq", "cs", "tc", "system", "pc", "isc", "scl", "sv", "sp", "esc"], "s": ["ings", "ses", "ms", "parts", "S", "ws", "sts", "sf", "sb", "src", "ds", "stats", "source", "series", "l", "b", "ns", "strings", "bs", "ts", "js", "comm", "str", "g", "r", "v", "sys", "ats", "search", "j", "its", "h", "conv", "xs", "gs", "string", "ls", "m", "http", "self", "ss", "sl", "abs", "sq", "less", "qs", "se", "ims", "t", "ps", "is", "n", "sql", "p", "sv", "rs", "sp"], "c": ["cp", "cur", "ch", "vc", "cache", "cat", "w", "cm", "csv", "mc", "chain", "l", "b", "k", "d", "g", "r", "cos", "bc", "v", "co", "cc", "C", "cont", "cb", "cu", "lc", "rc", "m", "gc", "cl", "nc", "cs", "cf", "tc", "con", "t", "dc", "ce", "n", "p", "unc", "cin", "u"], "start_black": ["starter_white", "start___mask", "start5wh", " start_both", "Start_brown", "starter___stock", " start_water", "starter___white", "start__wh", "Start_white", "start_water", "start5white", "start__both", "start_brown", "Start_black", "Start_wh", "start__water", "start___black", "starter_black", "end_wh", "end_system", "start5black", "end_black", "start_both", " start_wh", "start___stock", "start5system", "start___white", "start_wh", "start_stock", "start_system", "start_mask", "starter___mask", "starter_stock", "end_white", "starter___black", "starter_mask", "start__black"], "start_white": ["startptwhite", "entryptblack", "entry_black", "start_color", "end_white", "end_color", "Start_black", "Start_color", "startptgray", "start_wh", "start_prefix", "start_gray", "start64wh", "end_prefix", "entryptgray", "Start_wh", "Start_flash", "entryptwh", "entry_gray", "start64flash", "entryptwhite", "startptblack", "end_black", "entry_white", "start64white", "start64black", "entry_wh", "Start_white", "startptwh", "start_flash"], "bCount": [" bCounter", "dbCount", "bCode", "biCt", "biCast", "yCast", "dbColl", "bCounter", "bChart", "dbCast", "bColl", "bbCode", "nbCast", "bLoad", "biColl", " bColl", "biLoad", "nbCount", "yCounter", "nbChart", "bCast", "bbCount", " bCt", "nbCt", "bbCast", "biCount", "dbLoad", "yCount", " bChart", " bLoad", " bCode", "biChart", " bCast", "bbCounter", "bCt", "yCode"], "wCount": [" wFound", " wAmount", "fwCache", "nwColl", "wtAmount", " wCons", "wtCount", "fwList", "nwFind", "wbCount", " wCast", "wtCache", "wFind", "fwCount", "vCast", "nwBuild", "wCons", "wdFind", "vFound", "wtList", "wCache", "vCons", "fwAmount", " wCache", "wCast", "nwCount", "wdCount", "wBuild", "wFound", "wbBuild", "dFound", "dCons", "wbFind", "wAmount", "vCount", "wList", "wColl", " wList", "wbColl", "wdColl", "dCast", "wdBuild", "dCount"], "i": ["in", "multi", "si", "iii", "ip", "set", "chain", "zi", "di", "point", "ini", "err", "span", "me", "go", "info", "slice", "pa", "p", "phi", "it", "status", "o", "qi", "x", "vi", "cgi", "y", "sim", "uri", "q", "init", "ami", "index", "ori", "gi", "ii", "to", "cli", "ji", "ic", "ri", "bi", "iu", "source", "ei", "this", "iri", "g", "j", "io", "ni", "I", "ind", "remote", "ij", "is", "li", "ui", "ix", "ti", "ai", "xi", "pi", "mi", "ity", "ci", "oi", "id", "esi", "m", "ki", "\u0438", "page", "fi", "er", "im"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner scan = new Scanner(System.in);\\n\\n    int n = scan.nextInt();\\n    int cnt = 0;\\n\\n    outside:for(int i = 0; i <= n/4; i++){\\n      for(int j = 0; j <= n/7; j++){\\n        if(4*i + 7*j == n){\\n          System.out.println(\"Yes\");\\n          cnt++;\\n          break outside;\\n      }\\n    }\\n  }\\n\\n    if(cnt==0)\\n      System.out.println(\"No\");\\n    }\\n  }\\n", "target": "172", "substitutes": {"scan": ["an", "scroll", "in", "query", " Scan", "ch", "nn", "sync", "check", "set", "read", "send", "connect", "re", "run", "ann", "k", "sum", "save", "row", "out", "seek", "sc", "parse", "sin", "ner", "r", "skip", "find", "sys", "screen", "range", "can", "reach", "nl", "gate", "san", "system", "se", "ser", "stat", "sv", "Scan", " scanner"], "n": ["nb", "an", "en", "nn", "total", "s", "nor", "w", "all", "none", "o", "l", "np", "b", "k", "ns", "u", "out", "c", "x", "d", "un", "g", "norm", "nm", "nt", "no", "ng", "name", "f", "number", "sn", "ni", "h", "nu", "m", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "z", "num", "net", "len", "N", "p", "mn"], "cnt": ["lcpt", "Cnt", " count", "lctr", " cnc", "Cnc", "cnd", "cNT", "lcount", "mcnt", "mcNT", " cn", "Cpt", " ctr", "cnc", "cpt", "Cn", " cpt", " cnd", "lcnd", "lcnt", "lcNT", "lcnc", "Count", "Cnd", "Ctr", " cNT", "mcn", "cn", "count", "ctr", "mcnc", "CNT"], "i": ["bi", "multi", "si", "ti", "ai", "iii", "iter", "ip", "it", "iu", "ie", "zi", "xi", "di", "pi", "qi", "x", "iri", "mi", "v", "ini", "ci", "y", "sim", "iso", "ia", "a", "iq", "I", "ij", "ql", "ami", "init", "ki", "asi", "ii", "gi", "us", "ims", "is", "li", " ii", " Xi", "hi", "ui", "ix", "im", "ic", "phi", "u", "ri"], "j": ["jo", "bi", "bj", "oj", "obj", "jc", "json", "J", "pt", "fr", "lu", "b", "dj", "k", "jj", "jas", "aj", "jl", "bs", "bo", "out", "jp", "son", "uj", "js", "g", "ion", "v", "ja", "y", "err", "you", "meg", "ph", "jac", "ij", "q", "ind", "je", "kj", "ort", "us", "br", "z", "jump", "other", "job", "ji", "pr", "ge"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\n/**\\n * Created by Ayushi on 16 Feb 2020.\\n * Problem:\\n * Round:\\n */\\n\\npublic class Main {\\n    public static void main(String[] args) throws IOException {\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        String temp = br.readLine();\\n        int n = Integer.parseInt(temp);\\n        String[] ans = new String[n];\\n        int a = 0;\\n        int m = 1;\\n        HashMap<String, Integer> hmap = new HashMap<>();\\n        hmap.put(\"\", 0);\\n        for (int i = 0; i < n; i++) {\\n            temp = br.readLine();\\n\\n            if (hmap.containsKey(temp)) {\\n                hmap.replace(temp, hmap.get(temp)+1);\\n                m = Math.max(m, hmap.get(temp));\\n                ans[i] = \"\";\\n            }\\n            else {\\n                hmap.put(temp, 1);\\n                ans[i] = temp;\\n                a++;\\n            }\\n        }\\n        br.close();\\n\\n        Arrays.sort(ans);\\n        for (int j = n-a; j < n; j++) {\\n            if (hmap.get(ans[j]) != m) {\\n                ans[j] = \"\";\\n            }\\n        }\\n        Arrays.sort(ans);\\n        for (int k = 0; k < n; k++) {\\n            if (!(ans[k].equals(\"\"))) System.out.println(ans[k]);\\n        }\\n    }\\n}\\n", "target": "235", "substitutes": {"br": ["wr", "ber", "hr", "bl", "kr", "ch", "BR", "Br", "vr", "mr", "next", "rem", "fr", "driver", "tr", "b", "buf", "dr", "browser", "bd", "bs", "cr", "db", "rel", "gr", "nr", "r", "bh", "bc", "bf", "yr", "bt", "err", "bridge", "lr", "pre", "reader", "shr", "bp", "rb", "pr", "ger", "ctr", "bro", "bn"], "temp": ["json", "termin", "tmp", "time", "pt", "empty", "prime", "mod", "ta", "Temp", "tm", "buffer", "orig", "p", "cu", "result", "cp", " tmp", "null", "it", "met", "mt", "perm", "term", "phrase", "vi", "sim", "dat", "make", "index", "raw", "txt", "mem", "partial", "iter", "key", "mm", "tr", "tim", "template", "deg", "unt", "ph", "timer", "alt", "tc", "t", "cur", "emp", "stem", "test", "rem", "req", "pi", "tem", "prefix", "str", "tab", "parent", "mi", "v", "cell", "trade", "pre", "typ", "input", "hex", "mount"], "n": ["an", "nb", "en", "size", "nn", "s", "network", "o", "l", "np", "ns", "x", "c", "d", "un", "r", "nm", "nt", "no", "v", "ng", "on", "name", "number", "sn", "ni", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "net", "len", "dn", "N", "p", "mn"], "ans": ["asks", "an", "uns", "angs", "ars", "anks", "ms", "ians", "ents", "des", "eas", "names", "s", "orts", "ds", "aps", "aos", "ems", "ands", "ann", "arms", "ames", "es", "mos", "aints", "ons", "als", "ints", "ns", "ins", "ones", "aus", "ags", "anas", "tes", "ks", "ces", "ts", "atts", "idents", "arts", "lines", "vs", "vers", "ats", "ras", "anes", "ants", "eps", "els", "asts", "posts", "ANS", "gs", "ads", "ls", "orders", "unders", "ams", "cs", "works", "as", "ps", "offs", "ums", "books", "amps", "aves", "ens", "rs", "outs", "leans"], "a": ["ap", "an", "ana", "la", "at", "ai", "au", "e", "s", "w", "all", "o", "b", "aj", "area", "out", "c", "am", "d", "A", "ar", "ia", "ta", "ma", "ao", "alpha", "ac", "ae", "ach", "aw", "xa", "oa", "aa", "as", "t", "na", "z", "sa", "p", "ate", "u"], "m": ["an", "mp", "ms", "s", "mt", "max", "w", "sm", "mr", "cm", "mc", "o", "mm", " M", "l", "b", "u", "c", "am", "d", "r", "mi", "pm", "v", "M", "y", "mod", "min", "ma", "h", "f", "tm", "dm", "t", "gm", "z", "num", "bm", "em", "p", "mn"], "hmap": [" hgroup", "thshape", "hparse", "ccache", " hmac", "hashcache", "cMap", "herparse", " hmt", "ahmap", "hermt", "hlMap", "hap", "bhmap", "ahMap", "ahMAP", "hMAP", "hshape", "hlmaps", "hemap", "ehMap", "hercache", "heMap", "hermap", "hMap", "bhgroup", "Hshape", " hcache", "hashmap", "Hmap", "hcache", "hashblock", "hmmap", "bhMap", "hrmap", "hashshape", "ehblock", "ehmap", "HMap", "hlmap", "hmaps", "htap", "ehshape", "ohmt", "cap", "hashap", " hparse", "hmcache", "Hblock", "hblock", "hrMap", "heblock", " hMap", " hMAP", "htmap", "htblock", " hap", "hergroup", "bhmac", "hrgroup", "hrmac", "hmMap", "thMap", "herMap", "thblock", " hshape", "ohMap", "ohparse", "Hap", "hmac", "ahmaps", "hmt", " hblock", "heshape", "hlMAP", "hgroup", "hmgroup", "ohmap", " hmaps", "htMap", "cmap", "hashMap", "thmap"], "i": ["bi", "multi", "si", "ti", "iter", "ai", "it", "ip", "iu", "ie", "l", "zi", "xi", "b", "tim", "di", "pi", "x", "ei", "this", "g", "mi", "ini", "ci", "y", "id", "sim", "ia", "f", "iq", "uri", "inter", "ind", "I", "ij", "init", "index", "ori", "ii", "info", "gi", "is", "li", "ui", "ix", "p", "im", "ic", "phi", "ri"], "j": ["jo", "Ja", "oj", "bj", "obj", "jc", "J", "json", "jack", "it", "jet", "pt", "key", "fr", "kid", "dj", "b", "jj", "jas", "aj", "jl", "bs", "by", "out", "x", "jp", "uj", "js", "g", "off", "note", "rev", "ja", "y", "ph", "ind", "ij", "q", "je", "kj", "ne", "att", "z", "jump", "other", "job", "ev", "ji", "pr", "ix", "kh"], "k": ["ka", "kl", "kr", "kn", "wk", "kind", "ark", "sk", "key", "kid", "K", "jj", "ijk", "ko", "kick", "ks", "ikk", "isk", "g", "ik", "ek", "kar", "kat", "kt", "ask", "ku", "ok", "ak", "ph", "ack", "kw", "q", "kk", "kj", "mk", "km", "ck", "tk", "acc", "dk", "unk", "uk", "kh", "u"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n    \tScanner sc = new Scanner(System.in);\\n    \ttry {\\n    \t\tfinal int A1 = sc.nextInt();\\n    \t\tfinal int A2 = sc.nextInt();\\n    \t\tfinal int A3 = sc.nextInt();\\n\\n    \t\tif (A1 + A2 + A3 >= 22) {\\n    \t\t\tSystem.out.println(\"bust\");\\n    \t\t} else {\\n    \t\t\tSystem.out.println(\"win\");\\n    \t\t}\\n\\n    \t} finally {\\n    \t\tsc.close();\\n    \t}\\n    }\\n}\\n", "target": "129", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "cam", "asc", "mc", "osc", "scrib", "ctrl", "cmp", "anc", "cr", "ec", "Sc", "ko", "scope", "c", "ctx", "arc", "inc", "cgi", "bc", "cc", "sys", "fc", "cont", "SC", "lc", "rc", "usc", "sec", "sch", "nl", "gc", "scan", "cl", "nc", "system", "tc", "cs", "sq", "ck", "se", "pc", "ctl", "dc", "psc", "capt", "isc", "desc", "scl", "sv", "sp", "esc"], "A1": ["ACT1", "a11", "A7", "A0", "EA1", " A11", "A001", "EA0", "a7", " AOne", "AOne", "A11", "ACT001", " A001", "a2", "ACT2", "EAOne", "a001", "a0", "aOne", " A7", "ACT7", "a1", " A0", "EA11"], "A2": ["a02", "AGE01", "AGE02", "A42", "A02", " A42", "A01", "a2", "LA1", " A02", "AGE42", "LA2", "a1", "a42", " A01", "AGE2", "a01"], "A3": [" AThree", "JA3", "ETA2", "ETA3", "AThree", "EA2", "a21", "A43", "A21", "a43", "JA21", "JA43", "EA3", "a2", "EAThree", "ETAThree", "JA2", " A43", "a3", " A21"]}}
{"code": "import java.util.Map.Entry;\\nimport java.util.*;\\nimport java.math.*;\\nimport org.w3c.dom.css.Counter;\\n  \\npublic class Main{\\n    public static void main(final String[] args){\\n       \\n        final Scanner sc = new Scanner(System.in);\\n        //int N =sc.nextInt();\\n        ArrayList<Integer>  allmen =new ArrayList <Integer>();\\n        //HashSet doubled =new HashSet<Integer>();\\n        \\n        //Set<?> yourHashSet = new HashSet<>();\\n        //List<?> sortedList = new ArrayList<>(yourHashSet);\\n        \\n        int N = sc.nextInt();\\n        int K = sc.nextInt();\\n        int counter =0;\\n        //HashSet doubled =new HashSet<Integer>();\\n        for(int i =0;i <N;i++){\\n            allmen.add(i, sc.nextInt());\\n        }\\n        Collections.sort(allmen);\\n        for(int i =0;i <K;i++){\\n            counter += allmen.get(i);\\n        }\\n\\n        System.out.println(counter);\\n\\n\\n        //System.out.println(ans);\\n    }\\n}\\n    \\n\\n/*         for(int i=0;i<N-1;i++){\\n            int target = sc.nextInt();\\n            if(target < blocker){\\n                blocker = target;\\n            }\\n            if(allmen.contains(target)==false){\\n                if(target%blocker!=0){\\n                    allmen.add(target);\\n                } \\n            }\\n                else{\\n                    doubled.add(target);\\n                }       \\n            \\n        }\\n        Collections.sort(allmen);\\n         //\u753b\u9762\u8868\u793a\\n        for(int i=0;i <=allmen.size()-1;i++){\\n            boolean judge = true;\\n            int target = allmen.get(i);\\n            if(doubled.contains(target)==false){\\n                for(int X= 0;X<i;X++){\\n                    if(target% allmen.get(X)==0){\\n                        judge = false;\\n                        break;\\n                    }\\n                }\\n            }else{\\n                judge = false;\\n            }\\n            if(judge == true){\\n                ans++;\\n            }\\n        } */\\n\\n", "target": "41", "substitutes": {"sc": [" scr", " asc", "ch", "sb", "sk", " scorer", " pc", " cle", "cr", " esc", "Sc", "c", "sys", "SC", " Sc", "rc", " SC", "scan", "ss", "nc", "cs", " sk", "ser", " sp", " rc", " enc", "sp", "esc"]}}
{"code": "import java.util.Scanner;\\n\\n\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\ttry(Scanner sc = new Scanner(System.in)) {\\n\t\t\\n\t\t\tint n = sc.nextInt();\\n\t\t\tString s = sc.next();\\n\t\t\tString t = sc.next();\\n\t\t\t\\n\t\t\tfor(int i = 0 ; i < n ; i++ ) {\\n\t\t\t\tSystem.out.print(s.charAt(i));\\n\t\t\t\tSystem.out.print(t.charAt(i));\\n\t\t\t}\\n\\n\t\t}\\n\t}\\n\\n}", "target": "200", "substitutes": {"n": ["nb", "an", "en", "ot", "nn", "nw", "non", "nor", "network", "l", "np", "ns", "c", "d", "un", "nt", "no", "v", "ng", "name", "number", "sn", "ni", "nu", "m", "nl", "nc", "ln", "nan", "ne", "na", "num", "net", "N", "gn", "mn"], "s": ["ms", "S", "ws", "sts", "sb", "ds", "es", "ins", "ns", "rs", "ts", "js", "ys", "vs", "str", "sys", "ats", "xs", "gs", "st", "ls", "ss", "sl", "sq", "so", "qs", "cs", "os", "less", "se", "ps", "is", "z", "sv", "fs", "hs", "sp"], "t": ["tt", "dt", "ot", "at", "total", "it", "mt", "pt", "T", "term", "o", "tr", "wt", "rt", "ts", "tab", "nt", "or", "ty", "tf", "ta", "j", "td", "gt", "title", "st", "tm", "te", "tc", "tk", "txt", "ct"], "i": ["yi", "bi", "in", "multi", "ms", "si", "ti", "ai", "ip", "it", "iu", "gu", "zi", "xi", "di", "pi", "qi", "x", "ei", "my", "mi", "point", "ini", "ci", "y", "sim", "oi", "j", "io", "a", "uri", "I", "init", "ami", "m", "index", "ori", "ki", "\u0438", "gi", "ii", "us", "ims", "eu", "ski", "is", "li", "ex", "hi", "ui", "cli", "client", "ji", "ix", "im", "ic", "phi", "u"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tint a=sc.nextInt();\\n\t\tint b=sc.nextInt();\\n\t\tString x=\"\",y=\"\";\\n\t\tfor(int i=0;i<b;i++) {\\n\t\t\tx+=a;\\n\t\t}\\n\t\tfor(int i=0;i<a;i++) {\\n\t\t\ty+=b;\\n\t\t}\\n\t\tString[] n= {x,y};\\n\t\tArrays.parallelSort(n);\\n\t\tSystem.out.print(n[0]);\\n\t}\\n}", "target": "24", "substitutes": {"sc": ["ch", "sb", "sw", "asc", "sm", "mc", "osc", "anc", "cr", "Sc", "sel", "c", "ctx", "sub", "inc", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "nc", "sq", "cs", "tc", "pc", "ctl", "ser", "dc", "sa", "isc", "sh", "scl", "sv", "sp", "esc"], "a": ["an", "ba", "ab", "da", "ea", "at", "ai", "au", "e", "ax", "l", "ada", "aj", "c", "am", "d", "A", "ar", "ia", "ta", "ma", "f", "ao", "va", "alpha", "ac", "ae", "oa", "aa", "as", "t", "na", "pa", "sa", "ca", "aq", "p", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "e", "eb", "l", "bs", "ob", "db", "c", "d", "g", "r", "bc", "v", "cb", "j", "f", "h", "back", "m", "beta", "pb", "mb", "t", "br", "base", "z", "B", "bound", "rb", "p"], "x": ["dx", "mx", "px", "e", "tx", "w", "xe", "xx", "xd", "o", "ax", "xf", "l", "xi", "xt", "p", "foo", "xc", "text", "xp", "fx", "el", "c", "r", "v", "ux", "co", "X", "xb", "ox", "f", "xs", "wx", " X", "yx", "xml", "rx", "t", "hex", "xy", "full", "ex", "xxx", "ct", "ix", "xa"], "y": ["yi", "ies", "ay", "ot", "ye", "hot", "ey", "o", "yl", "yer", "Y", "gy", "sky", "my", "cy", "yr", "ty", "j", "vy", "uy", "yt", "py", "yout", "iy", "ya", "yo", "oy", "ny", "ym", "t", "xy", "z", "hy", "client", "yy", "axy", "er", "fy"], "i": ["multi", "si", "ti", "ai", "iii", "ip", "it", "iu", "ie", "gu", "zi", "xi", "uli", "di", "pi", "qi", "ei", "this", "mi", "ity", "ini", "uu", "ci", "err", "oi", "j", "io", "uri", "q", "init", "iy", "m", "me", "ori", "ki", "\u0438", "mu", "ii", "gi", "us", "ims", "ski", "is", "li", "hi", "ui", "cli", "ji", "client", "ix", "im", "ic", "phi"], "n": ["nb", "an", "nd", "rn", "nn", "s", "nor", "network", "o", "l", "np", "ns", "c", "nes", "d", "nr", "r", "nm", "nt", "v", "norm", "ng", "j", "h", "ren", "sn", "fn", "m", "nu", "nl", "pn", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "dn", "N", "gn", "node", "p", "note", "mn"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args){\\n        Scanner scanner = new Scanner(System.in);\\n        int h = scanner.nextInt();\\n        int a = scanner.nextInt();\\n\\n        int result = h / a;\\n        result = (h % a) == 0 ? result : result + 1;\\n\\n        System.out.println(result);\\n    }\\n}", "target": "147", "substitutes": {"scanner": ["canner", "caninner", "Scanners", "canisher", "screenter", "kinisher", "Scanter", " scanners", "caner", "scanter", "scanners", "screenners", "Scaninner", "screenner", "scanisher", " scanener", "canener", "Scaner", "screener", "Scanner", "canter", "scanener", "scaninner", " scaner", "kinter", "Scanener", "scaner", "kininner", "Scanisher", "kinner", " scanter"], "h": ["oh", "hr", "ah", "phi", "his", "uh", "gh", "l", "b", "k", "H", "hp", "x", "he", "i", "d", "hm", "r", "bh", "hd", "v", "high", "eh", "hl", "ht", "hh", "html", "ph", "rh", "q", "hash", "ha", "ho", "hw", "hz", "hi", "n", "sh", "ih", "p", "hs", "history", "kh"], "a": ["an", "la", "ba", "ab", "ea", "ai", "au", "e", "all", "o", "aaa", "b", "area", "i", "am", "A", "r", "or", "ar", "ia", "ak", "ma", "ta", "ao", "va", "ac", "ae", "m", "index", "xa", "ow", "ga", "oa", "aa", "as", "to", "na", "pa", "apa", "sa", "ca", "n", "p", "al"], "result": ["response", "report", "feature", "complete", "results", "integer", "total", "success", "successful", "diff", "test", "product", "status", "next", "term", "table", "gain", "progress", "see", "goal", "correct", "gr", "nr", "unknown", "mate", "relation", "r", "end", "score", "date", "ret", "default", "mask", "search", "res", "number", "currency", "length", "power", "value", "duration", "answer", "the", "command", "comb", "Result", "zero", "rue", "function", "continue", "data", "br", "count", "su", "message", "num", "n", "direction", "match", "other", "p", "different"]}}
{"code": "import java.util.Scanner;\\n\\npublic  class Main  {\\n\\n\tpublic static void main(String args[]) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint  A = sc.nextInt();\\n\t\tint B = sc.nextInt();\\n\t\tint T = sc.nextInt();\\n\t\tint sum = 0;\\n\t\tfor(int i = 1; i<=T; i++) {\\n\t\t\tif(i%A==0) {\\n\t\t\t\tsum += B;\\n\t\t\t}\\n\t\t\t\\n\t\t\t\\n\t\t}\\n\t\tSystem.out.println(sum);\\n\t\t\\n\t}\\n\t\\n\\n}\\n", "target": "4", "substitutes": {"sc": ["ch", "asc", "mc", "osc", "anc", "cr", "Sc", "out", "ko", "c", "inc", "g", "cgi", "bc", "cc", "sys", "fc", "cont", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "system", "cs", "tc", "sq", "ck", "tch", "pc", "ctl", "dc", "isc", "syn", "scl", "sh", "sv", "sp", "esc"], "A": ["AY", "AB", "S", "NA", "BA", "MAX", "AF", "ESS", "U", "AC", "AGE", "Length", "Y", "As", "H", "P", "AS", "RA", "CA", "V", "SA", "AV", "ACC", "ACT", "C", "Alpha", "LA", "AR", "a", "G", "I", "ALL", "AA", "R", "TA", "AL", "Count", "GA", "AP", "L", "AU", "AM", "AST", "N", "Ax", "AN", "An"], "B": ["AB", "Bs", "S", "BR", "BB", "BU", "J", "D", "BA", "CB", "U", "b", "Y", "Z", "P", "TB", "Blue", "V", "BO", "M", "C", "X", "SB", "BC", "WB", "W", "NB", "G", "I", "BI", "OB", "R", "BS", "EB", "BL", "BM", "L", "N", "DB"], "T": ["GT", "S", "TI", "J", "D", "E", "K", "H", "Y", "Z", "P", "TR", "TS", "TB", "V", "TH", "M", "C", "W", "I", "TT", "G", "TN", "R", "TC", "TA", "t", "L", "F", "Q", "N", "O"], "sum": ["result", "add", "summary", "size", "si", "total", "union", "vol", "sign", "tmp", "max", "um", " SUM", "cal", "diff", "cum", " summed", "alias", "out", "unit", "mix", "share", "cost", "score", "black", "sim", "must", "SI", "number", "alpha", "sat", "ass", "Sum", "body", "weight", "hash", "sam", "hum", "zero", "hist", "acc", "num", "count", "sa", "su", "temp", "mem", "commit", "match", "mean", "average"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "set", "iu", "gu", "ie", "chain", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "mi", "point", "v", "ci", "y", "id", "sim", "span", "j", "io", "a", "uri", "f", "I", "ind", "init", "m", "ki", "\u0438", "mu", "ii", "gi", "t", "is", "li", "hi", "ui", "cli", "n", "ji", "ix", "im", "ic", "phi", "u"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main (String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tlong nam = sc.nextLong();\\n\t\tlong ans = Long.MAX_VALUE;\\n\t\t\\n\t\tlong j = 0;\\n\t\tfor(long i = 1; i*i <= nam; i++){\\n\t\t    if(nam % i != 0){continue;}\\n\t\t    j = nam/i;\\n\t\t    ans = Math.min(ans,i + j -2);\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n}\\n", "target": "157", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "asc", "mc", "osc", "Scan", "sac", "cr", "Sc", "sel", "Desc", "c", "sub", "bc", "cc", "sys", "screen", "SC", "lc", " Sc", "rc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "system", "tc", "cs", "sq", "pc", "ser", "na", "isc", "desc", "scl", "sv", "rs", "sp", "esc"], "nam": ["tha", " Nam", "NA", "nn", "names", "nw", "snap", "NJ", "ai", "amn", "lim", "um", "filename", "dim", "cum", "NM", "ank", "amin", "tim", "sum", "ns", "loc", "mind", "tem", "am", "ram", "lam", "nm", "mi", "ame", "span", "name", "rm", "win", "ni", "ami", "nom", "tm", "mon", "sam", "san", "ny", "typ", "wal", "na", "cn", "num", "una", "mem", "n", "man", "dn", "wn", "hn", "inn", "wid", "mis", "mn"], "ans": ["ings", "an", "uns", "angs", "ars", "anks", "ians", "ms", "ents", "wan", "s", "rans", "ds", "flags", "aps", "ann", "als", "ames", "ons", "ns", "ins", "outs", "aus", "ags", "vals", "anas", "ks", "cons", "arts", "lines", " means", "vers", "ats", "nets", "oss", "iann", "anes", "ants", "eps", "xs", "posts", "ANS", "can", "gs", "ls", "ads", "ams", "ions", "lan", "cs", "os", "as", "is", "offs", "amps", "ens", "rs", "AN", "ids"], "j": ["bi", "jobs", "oj", "si", "ot", "jc", "J", "it", "json", "ds", "o", "fr", "l", "jit", "b", "dj", "k", "jj", "ns", "di", "aj", "jl", "bs", "x", "jp", "uj", "js", "g", "v", "ja", "name", "f", "jac", "ij", "q", "kj", "m", "os", "t", "br", "z", "ji", "n", "ct", "p", " J"], "i": ["yi", "bi", "in", "multi", "si", "ti", "ai", "ip", "it", "iu", "ie", "fi", "o", "l", "zi", "xi", "di", "pi", "x", "c", "d", "ei", "ik", "mi", "v", "ini", "ci", "y", "sim", "id", "f", "ni", "I", "ind", "ij", "q", "ami", "m", "index", "ki", "\u0438", "gi", "ii", "ims", "is", "li", " ii", " Xi", "hi", "ui", "cli", "n", "ix", "p", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[]args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\t\tint a = sc.nextInt();\\n\t\t\t\tint b = sc.nextInt();\\n\t\t\t\tint c = sc.nextInt();\\n\t\t\t\tint d = a-b;\\n\t\t\t\tint e = c-d;\\n      if(e<=0){\\n        System.out.println('0');\\n      }else{\\n\t\t\t\tSystem.out.println(e);\\n      }\\n\t}\\n}", "target": "45", "substitutes": {"sc": ["irc", "ch", "sb", "sw", "cle", "asc", "mc", "osc", "ctrl", "cr", "ec", "Sc", "ko", "scope", "inc", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "nc", "system", "cs", "tc", "sq", "ck", "pc", "ctl", "sa", "isc", "syn", "desc", "scl", "sh", "sv", "sp", "esc"], "a": ["an", "la", "ba", "ab", "af", "da", "ea", "at", "au", "area", "x", "am", "A", "act", "r", "ar", "ak", "ia", "ta", "ma", "f", "h", "ao", "va", "ac", "ae", "ach", "ga", "oa", "aa", "sta", "t", "sa", "ca", "n", "p", "al"], "b": ["nb", "bi", "ba", "ab", "bb", "ib", "fb", "ub", "eb", "l", "bs", "i", "g", "r", "bc", "v", "bf", "y", "cb", "f", "h", "aa", "z", "B", "rb", "n", "be", "u"], "c": ["cm", "l", "cd", "ec", "cr", "g", "r", "bc", "v", "co", "C", "ci", "fc", "cc", "cb", "f", "h", "ac", "m", "cond", "cs", "tc", "cf", "etc", "con", "t", "dc", "z", "ce", "ca", "n", "ct", "cut", "u"], "d": ["dx", "da", "D", "ds", "w", "l", "di", "dd", "db", "dra", "i", "g", "r", "v", "f", "h", "df", "de", "q", "m", "dm", "t", "dc", "data", "z", "n", "p"], "e": ["en", "ea", "w", "ee", "o", "ef", "eeee", "E", "es", "l", "element", "ec", "oe", "x", "el", "i", "ei", "g", "ue", "r", "y", "error", "f", "eg", "h", "de", "le", "m", "ele", "ent", "te", "ne", "eu", "t", "ev", "ce", "n", "ed", "p", "er", "u", "event"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main{\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\t\t\t//\u6587\u5b57\u306e\u5165\u529b\\n\\n\t\tint n = sc.nextInt();\\n\t\tint k = sc.nextInt()-1;\\n\t\tString str = sc.next();\\n\t\t\\n\t\tStringBuffer sb = new StringBuffer(str);\\n\t\tchar cc = str.toLowerCase().charAt(k);\\n\t\tsb.setCharAt(k, cc);\\n\t\tSystem.out.print(sb.toString());\\n\t\t\\n\t\t\\n\t\t\\n\t\t\\n\t}\\n\t\\n\t\\n\tstatic int gcd(int a,int b){\t\t\t\t//\u6700\u5927\u516c\u7d04\u6570\u3092\u8fd4\u3059\\n\t\tif(b == 0){\\n\t\t\treturn a;\\n\t\t}else{\\n\t\t\treturn gcd(b, a%b);\\n\t\t}\\n\t}\\n\t\\n\\n\\n\\n\\nstatic String deletestr(String base,String remove){\\n\tboolean flag = true;\\n\tfor(int i = 0;i < remove.length();i++){\\n\t\tif(i == base.length()){\\n\t\t\tflag = false;\\n\t\t\tbreak;\\n\t\t}\\n\t\tif(base.charAt(i) - remove.charAt(i) != 0 && base.charAt(i) - remove.charAt(i) != 32 &&remove.charAt(i) - base.charAt(i)  != 32){\\n\t\t\tflag = false;\\n\t\t\tbreak;\\n\t\t}\\n\t}\\n\\n\tif(flag){\\n\t\tbase = base.substring(remove.length());\\n\t}\\n\\n\treturn base;\\n\\n}\\n\\n\\n\\n}\\n\\n\\nclass Pair implements Comparable{\\n\tint from;\\n\tint end;\\n\t@Override\\n\tpublic int compareTo(Object other) {\\n\t\tPair otherpair = (Pair)other;\\n\\n\t\treturn from - otherpair.from;\\n\t}\\n}\\n\\n\\n", "target": "71", "substitutes": {"sc": [" scr", "ch", "sw", "sk", "cr", "Sc", "c", "bc", "sys", "SC", " Sc", "rc", " SC", "gc", "scan", " ss", "uc", "cl", "nc", "system", "cs", " sk", "pc", "dc", " sp", "sa", "sv", "sp"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tArrayList array = new ArrayList();\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint a = sc.nextInt();\\n\t\tboolean ans = true;\\n\t\tString w=sc.next();\\n\t\tarray.add(w);\\n\t\tfor(int i=0; i<a-1; i++) {\\n\t\t\tString w2=sc.next();\t\t\\n\t\t\tif(array.contains(w2)) {\\n\t\t\t\tans = false;\\n\t\t\t}\\n\t\t\tif(w.charAt(w.length()-1)!= w2.charAt(0)) {\\n\t\t\t\tans = false;\\n\t\t\t}\\n\t\t\tarray.add(w2);\\n\t\t\tw=w2;\\n\t\t}\\n\t\tif(ans) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t}else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t}\\n\\n}", "target": "70", "substitutes": {"array": ["rays", "echo", "order", "record", "av", "list", "expression", "pair", "au", "random", "api", "sound", "instance", "area", "foo", "row", "audio", "amount", "window", "memory", "library", "r", "ear", "Array", "v", "ar", "ray", "analysis", "RAY", "range", "address", "error", "collection", "our", "string", "hash", "answer", "aw", "batch", "NOW", "system", "upper", "arrow", "storage", "equality", "message", "angle", "angular", "auto", "map", "archive", "history", "arr", " Array", "ro"], "sc": ["irc", "ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "Sc", "sel", "sci", "c", "arc", "cons", "inc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "gc", "cl", "ss", "scan", "pb", "nc", "sq", "tc", "cs", "sic", "pc", "ctl", "ser", "dc", "psc", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "a": ["an", "access", "la", "ai", "au", "qa", "all", "from", "aka", "ax", "aaa", "b", "aj", "area", "p", "sha", "ast", "am", "d", "A", "amount", "ma", "ta", "ao", "va", "alpha", "ac", "ae", "ach", "m", "wa", "ga", "sta", "as", "t", "to", "na", "aa", "sa", "ca", "n", "xa"], "w": ["wr", "ws", "nw", "sw", "s", "wb", "wp", "now", "l", "b", "wt", "x", "c", "window", "rew", "work", "r", "ew", "g", "v", "y", "we", "W", "f", "h", "wh", "wx", "word", "kw", "st", "q", "m", "wa", "fw", "aw", "rw", "self", "ow", "wl", "hw", "wal", "t", "raw", "wall", "writer", "iw", "n", "temp", "p", "widget", "wd", "wi"], "i": ["bi", "in", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "mill", "gu", "ie", "zi", "xi", "di", "pi", "qi", "x", "g", "mi", "ini", "ci", "id", "sim", "j", "I", "ind", "q", "init", "m", "batch", "go", "ii", "gi", "us", "t", "is", "li", "ex", "hi", "ui", "cli", "n", "ix", "im", "ic", "phi"], "w2": ["wa02", "wa0", " w02", "rw4", "wd2", "waTwo", "W02", "wt2", "wlet", " wtwo", "temp2", "temp6", "nw4", " w0", "sw0", "temp4", "wtTwo", "rwlet", "wdtwo", "rw6", "W3", "wd3", "wtlet", "wa4", "wt4", "tempTwo", " w6", "nw2", "wTwo", "sw2", "w6", "walet", "W2", "wd02", "w3", "w02", "nwTwo", "wtwo", "nw6", "rw2", "w4", " w4", " wTwo", " w3", "sw02", "wa6", "Wtwo", "rwTwo", "wa2", "w0"], "ans": ["ies", "an", "uns", "acts", "ars", "ms", "mas", "anks", "ians", "s", "orts", "ds", "rans", "aps", "ows", "ann", "arms", "ons", "ins", "ns", "aus", "ids", "irms", "anas", "allows", "ks", "ces", " scans", "ys", "vs", "arts", "uploads", " means", "vers", "ats", "rets", "olds", "ras", " pans", "ants", "eps", "ays", "caps", "ANS", "gs", "can", " beans", "ls", "ams", "cs", "os", "helps", "checks", " spans", "ums", "books", "amps", "ens", "rs", "outs", "leans", "eds"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tint a[] = new int[N];\\n\t\tboolean can = false;\\n\t\tint nextId = 0;\\n\t\tint count = 0;\\n\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\ta[i] = sc.nextInt();\\n\t\t}\\n\\n\t\twhile (count != N) {\\n\t\t\tnextId = a[nextId] - 1;\\n\t\t\tcount++;\\n\t\t\tif (nextId == 1) {\\n\t\t\t\tcan = true;\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\\n\t\tif (can) {\\n\t\t\tSystem.out.println(count);\\n\t\t} else {\\n\t\t\tSystem.out.println(-1);\\n\t\t}\\n\t}\\n}\\n", "target": "175", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "sci", "c", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "pb", "nc", "sq", "tc", "cs", "ck", "pc", "ctl", "isc", "capt", "scl", "sh", "sv", "sp", "esc"], "N": ["SIZE", "NP", "NI", "S", "NA", "J", "D", "MAX", "empty", "T", "True", "NH", "NM", "K", "No", "Y", "Z", "P", "A", "NT", "V", "M", "C", "Sn", "NO", "NE", "ONE", "OK", "Size", "NB", "I", "Number", "TN", "R", "NR", "NN", "Count", "Ns", "Num", "NS", "SN", "L", "B", "GN", "Q", "n", "F", "ND", "O", "NC", "AN", "False"], "a": ["ap", "an", "ba", "ab", "ai", "au", "e", "s", "o", "l", "aaa", "b", "area", "c", "am", "A", "v", "ma", "ta", "f", "ao", "alpha", "ac", "ae", "app", "m", "aw", "ata", "ga", "oa", "aa", "as", "t", "att", "na", "apa", "array", "sta", "fa", "sa", "ca", "n", "p", "ava", "u"], "nextId": ["maxById", "maxID", "nextID", "newById", "lastId", "newid", "NextID", "newId", "nextInt", "newBack", "lastById", "futureId", "NextId", "maxId", "newInt", "NextBack", " nextById", "futureById", " nextID", "newID", "Nextid", "nextById", "futureID", "nextid", " nextBack", "nextBack", "lastID", "lastInt", " nextInt", "NextById", " nextid"], "count": ["nb", "limit", "report", "scroll", "add", "size", "list", "and", "total", "iter", "check", "max", "cache", "level", "last", "next", "all", "depth", "counter", "sum", "found", "conf", "c", "amount", "coll", "flag", "trace", "find", "nt", "draw", "no", "C", "cont", "score", "id", "must", "number", "process", "length", "ind", "child", "hold", "index", "cast", "cond", "batch", "call", "Count", "nc", "continue", "ount", "z", "num", "ct", "n", "client", "len", "ctr"], "i": ["bi", "ish", "ms", "multi", "si", "ti", "iter", "ai", "ip", "it", "iu", "gu", "ie", "di", "pi", "qi", "x", "my", "mi", "v", "ini", "ci", "y", "id", "sim", "oi", "j", "io", "uri", "I", "init", "m", "index", "ori", "\u0438", "batch", "ii", "gi", "info", "us", "t", "is", "li", "hi", "ui", "client", "n", "cli", "inner", "ix", "im", "ic", "phi", "u", "ri"], "can": ["an", "in", "ay", "ain", "could", "car", "check", "cam", "cache", "cat", " Can", "cal", "don", "ann", "CAN", "visible", "stan", "won", "sum", "cas", "cover", "out", "c", "pan", "ban", "annot", " cann", "co", "must", "ok", "conv", "may", "scan", "san", "Can", "any", "lan", "cs", "con", "valid", "pc", "util", "will", "cn", "ca", "n", "man", "cu", "unc", "fan"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner s = new Scanner(System.in);\\n\\n        // \u9ad8\u6a4b\u3001\u9752\u6728\u30e2\u30f3\u30b9\u30bf\u30fc\u8a2d\u5b9a\\n        int takaMHp = s.nextInt();\\n        final int TAKA_M_ATK = s.nextInt();\\n        int aokiMHp = s.nextInt();\\n        final int AOKI_M_ATK = s.nextInt();\\n\\n        int x = 1;\\n        while (true) {\\n            if (x % 2 == 1) {\\n                // \u9ad8\u6a4b\u30bf\u30fc\u30f3\\n                aokiMHp -= TAKA_M_ATK;\\n            } else {\\n                // \u9752\u6728\u30bf\u30fc\u30f3\\n                takaMHp -= AOKI_M_ATK;\\n            }\\n\\n            if (aokiMHp <= 0 || takaMHp <= 0) {\\n                break;\\n            }\\n            x += 1;\\n        }\\n\\n        if (takaMHp > 0) {\\n            System.out.println(\"Yes\");\\n        } else {\\n            System.out.println(\"No\");\\n        }\\n  }\\n}", "target": "186", "substitutes": {"s": ["S", "sb", "ds", "w", "es", "l", "b", "ns", "db", "out", "c", "d", "js", "r", "ner", "sys", "y", "a", "h", "m", "scan", "os", "t", "z", "n", "p", "er", "fs"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner scan = new Scanner(System.in);\\n\\n\t\tString weather = scan.next();\\n\t\tString re = \"\";\\n\\n\t\tswitch (weather) {\\n\t\tcase \"Sunny\":\\n\t\t\tre = \"Cloudy\";\\n\t\t\tbreak;\\n\t\tcase \"Cloudy\":\\n\t\t\tre = \"Rainy\";\\n\t\t\tbreak;\\n\t\tcase \"Rainy\":\\n\t\t\tre = \"Sunny\";\\n\t\t\tbreak;\\n\t\t}\\n\\n\t\tSystem.out.println(re);\\n\t\tscan.close();\\n\\n\t}\\n\\n}\\n", "target": "60", "substitutes": {"scan": ["an", "scroll", "in", "spin", "query", "list", "report", " Scan", "sync", "check", "set", "read", "send", "look", "connect", "run", "clean", "ann", "sum", "save", "row", "out", "seek", "sub", "sc", "get", "pan", "parse", "sin", "ner", "find", "skip", "sys", "proc", "plan", "screen", "search", "can", "reach", "gate", "san", "system", "watch", "spec", "se", "scale", "stat", "n", "store", "match", "auto", "sv", "Scan"], "weather": ["condition", "json", "hello", "wk", "holiday", "threat", "zip", "hot", "wer", "status", "Winter", "now", "won", "war", "when", "physical", "game", "warming", "today", "healthy", "sky", "draw", "nuts", "what", "type", "winter", "past", "feed", "html", "town", "wx", "day", "owl", "hold", "fore", "cool", "wind", "lost", "hum", "warm", "story", "reason", "location", "severe", "Weather", "widget", "wy", "street"], "re": ["rep", "arre", "report", "represent", "gre", "reat", "ree", "com", "then", "red", "rem", "bare", "spe", "fr", "pe", "oe", "real", "Re", "rel", " repro", "rew", "ue", "r", "parse", "ref", "reen", "vre", "ar", "rev", "ja", "ret", "we", "ror", "comp", "ere", "res", "rer", "ren", "ae", "reg", "ry", "are", "rely", "genre", "pretty", "replace", "rec", "sche", "ne", "con", "bre", " rep", "reason", "tree", "repl", "RE", "rex", "im", "ru", "cre", " Re", "ro"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.lang.reflect.Array;\\nimport java.util.*;\\n\\npublic class Main {\\n    static class FastReader{\\n        BufferedReader br;\\n        StringTokenizer st;\\n\\n        public FastReader(){\\n            br = new BufferedReader(new InputStreamReader(System.in));\\n        }\\n\\n        String next(){\\n            while(st==null || !st.hasMoreElements()){\\n                try{\\n                    st=new StringTokenizer(br.readLine());\\n                }\\n                catch(IOException e){\\n                    e.printStackTrace();\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n\\n        int nextInt(){\\n            return Integer.parseInt(next());\\n        }\\n\\n        Long nextLong(){\\n            return Long.parseLong(next());\\n        }\\n\\n        double nextDouble(){\\n            return Double.parseDouble(next());\\n        }\\n        String nextLine(){\\n            String str=\"\";\\n            try{\\n                str=br.readLine();\\n            }\\n            catch(IOException e){\\n                e.printStackTrace();\\n            }\\n            return str;\\n        }\\n    }\\n    public static void main(String[] args) throws IOException {\\n       FastReader in = new FastReader();\\n      int n=in.nextInt();\\n      int b[]=new int [n+1];\\n      Arrays.fill(b,0);\\n\\n      for(int i=1;i<n;i++){\\n          b[in.nextInt()]++;\\n      }\\n      for(int i=1;i<=n;i++){\\n          System.out.println(b[i]);\\n      }\\n\\n    }\\n}\\n", "target": "12", "substitutes": {"br": ["ber", "bsp", "wr", "bl", "hr", "Tr", " bro", "kr", "bb", "ch", "BR", "sb", "Br", "vr", "pt", "mr", "next", "bern", "fr", "tr", "buf", "dr", " bl", "bs", "cr", "jp", "rel", "gr", "ptr", "r", "bh", "brace", " tr", "bt", "sp", "bridge", "lr", "abl", "bra", "shr", "bp", "bre", "rb", "bm", "pr", "ctr", "p", "bro", "bn"], "st": ["std", "nd", "ste", "be", "sts", "sb", "ost", "sw", "mt", "tmp", "pt", "s", "sm", "set", "et", "sty", "first", "l", "tr", "const", "step", "th", "stri", "rt", "cr", "ust", "lo", "r", "nt", "ST", "bt", "start", "h", "sn", "inst", "ut", "stage", "rest", "sl", "stable", "stack", "so", "se", "sta", "t", "ist", "St", "z", "stat", "ct", "sh", "p", "sv", "sp", "est"], "str": ["result", "cur", "s", "ocr", "msg", "next", "comment", "key", "fr", "STR", "tr", "dr", "ns", "del", "cr", "char", "text", "format", "gr", "g", "r", "v", "cont", "ret", "name", "j", "res", "print", "string", "Str", "sl", "stable", "exp", "url", "spec", "t", "data", "txt", "pr", "div", "ctr", "p", "enc", "sp", "arr"], "in": [" din", "query", "add", "std", "In", "iter", "null", "it", "din", "file", "from", "rin", "mm", "world", "l", "ins", "rt", "conf", "bin", "out", "doc", "form", "inc", "lines", "r", "mi", "ini", "line", "err", "default", "io", "f", "ind", "al", "ac", "IN", "init", "m", "log", "reader", "il", "info", "per", "con", "readable", "gin", "is", "stream", "input", "inn", "inf", "inner", "er", "im", "ic", "cin", "mn", "ri"], "n": ["nb", "an", "nd", "and", "nn", "max", "w", "all", "o", "l", "np", "u", "ns", "k", "out", "c", "un", "g", "r", "nm", "nt", "v", "no", "ng", "name", "j", "h", "number", "sn", "ni", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "count", "len", "N", "p", "mn"], "b": ["nb", "ba", "ab", "be", "bb", "ib", "buff", "ch", "sb", "e", "fb", "wb", "eb", "lib", "l", "buf", "bd", "bs", "ob", "gb", "db", "out", "binary", "c", "d", "g", "r", "v", "bf", "y", "bt", "cb", "bar", "h", "f", "a", "emb", "m", "buffer", "mb", "bis", "bp", "t", "base", "z", "B", "rb", "bound", "p", "u"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "e", "ip", "it", "iu", "ie", "o", "PI", "zi", "xi", "di", "pi", "qi", "x", "ei", "this", "mi", "v", "ini", "ity", "ci", "y", "sim", "oi", "id", "uu", "j", "io", "a", "iq", "I", "print", "q", "ij", "init", "me", "ami", "php", "ki", "MI", "\u0438", "gi", "ii", "us", "ims", "eu", "is", "li", "ex", "hi", "ui", "cli", "ix", "p", "im", "ic", "phi", "u", "wi"], "nextInt": ["NextInt", "nextint", "readInteger", " nextDouble", "txtDouble", "readLong", "nextInteger", " nextFloat", "readFloat", "nextLong", " nextint", "nextFloat", "readDouble", "sequenceInt", "Nextint", "NextInteger", "readInt", "sequenceint", "txtFloat", "readint", "NextLong", "sequenceInteger", " nextInteger", "txtInt", "nextDouble", "sequenceLong", "txtLong", " nextLong"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        \\n        //int n = Integer.parseInt(sc.next());\\n        String s = sc.next();\\n        boolean[] isDNA = new boolean[s.length()];\\n        char c = '\\0';\\n        for(int i = 0;i<s.length();i++){\\n            c = s.charAt(i);\\n            if((c == 'A')||(c == 'C')||(c == 'G')||(c == 'T')) isDNA[i] = true;\\n        }\\n        int j =0, max=0;\\n        for(int i = 0;i<isDNA.length;i++){\\n            j=i;\\n            while((j<isDNA.length)&&isDNA[j]) j++;\\n            max = (j-i)>max ? j-i : max;\\n        }\\n        \\n        System.out.println(max);\\n    }\\n}", "target": "100", "substitutes": {"sc": [" scr", "ch", "sb", "src", "sk", "cr", "Sc", "c", " subsc", " sh", "sys", "SC", " Sc", "rc", " SC", "scan", "ss", " cr", " ss", "nc", "sq", "cs", " sk", " sp", "sa", " rc", "sv", "sp"]}}
{"code": "import java.io.*;\\n\\nclass Main{\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\twhile(true){\\n\t\t\tString lns[] = br.readLine().split(\" \");\\n\t\t\tint ln[] = parseInts(lns);\\n\t\t\tif(ln[0]==0 && ln[1]==0) break;\\n\t\t\tfor(int x=0; x<ln[0] ;x++){\\n\t\t\t\tfor(int y=0; y<ln[1]; y++){\\n\t\t\t\t\tif(y==ln[1]-1){\\n\t\t\t\t\t\tSystem.out.println(\"#\");\\n\t\t\t\t\t}else if(y==0 || x==0 || x==ln[0]-1){\\n\t\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t\t}else{\\n\t\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tSystem.out.println();\\n\t\t}\\n\t}\\n\tstatic int[] parseInts(String[] s){\\n\t\tint[] x = new int[s.length];\\n\t\tfor(int i=0;i<s.length;i++){\\n\t\t\tx[i] = Integer.parseInt(s[i]);\\n\t\t}\\n\t\treturn x;\\n\t}\\n}", "target": "87", "substitutes": {"br": ["wr", "bsp", "ber", "bi", "bl", "hr", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "b", "buf", "dr", "bd", "bs", "cr", "bg", "gr", "str", "bh", "bc", "bf", "yr", "bt", "sp", "bridge", "lr", "sr", "shr", "bp", "rb", "bm", "pr", "bro", "bn"], "lns": ["lsns", "Ln", "llny", " lny", "dlms", "Lms", "dlny", "lcs", "lls", "Lcs", "lsms", "lscs", " lcs", "llls", " lls", "dlls", "lms", " lms", "Lns", "lny", "dlns", "llms", "lsn", "llns"], "ln": ["nb", "fl", "kl", "yll", "kn", "rn", "nn", "lvl", "sol", "oln", "lig", "ll", "lv", "zn", "dial", "l", "lu", "ld", "ern", "jl", "vl", "lin", "mil", " ll", "println", "eln", "tl", "lines", "lbs", "tn", "ml", "lf", "rl", "conv", "elin", "Len", " gn", "ls", "pn", "lag", "nl", "NL", "fn", "lems", "sl", "ele", "lan", "wl", "bol", "vin", "ctl", "li", "von", "hz", "len", "n", "sql", "inn", "gn", "wn", "dl", "lon"], "x": ["mx", "ace", "time", "xd", "ax", "xf", "pe", "l", "c", "window", "ux", "ox", "exp", "xy", "ct", "n", "Ax", "xa", "p", "val", "lon", "dx", "zx", "xe", "xt", "fx", "left", "Ex", "on", "q", "index", "width", "px", "key", "k", "xc", "el", "xes", "act", "j", "a", "wx", "xs", "xxxx", "yx", "xml", "t", "ext", "ex", "ix", "e", "check", "tx", "w", "xx", "xi", "xp", "v", "X", "xb", "f", "inx", "rx", "m", "php", "batch", "att", "z", "im", "u"], "y": ["yi", "ies", "ay", "sy", "ch", "ye", "ey", "o", "ady", "yl", "b", "yer", "year", "Y", "by", "gy", "sky", "ys", "my", "cy", "yr", "sys", "sim", "ty", "j", "height", "uy", "h", "py", "yt", "ya", "iy", "ry", "yo", "oy", "yn", "ny", "ym", "xy", "z", "n", "yy", "axy", "er", "fy", "iley"], "s": ["ings", "ses", "ms", "parts", "S", "ws", "sts", "ds", "w", "es", "b", "ns", "ins", "strings", "bs", "tes", "c", "ts", "js", "vs", "r", "v", "ats", "its", "h", "a", "xs", "gs", "ashes", "ls", "m", "aws", "fs", "ss", "qs", "cs", "os", "t", "ps", "is", "n", "p", "sv", "rs", "hs", "ids"], "i": ["bi", "multi", "si", "ti", "ai", "json", "ip", "it", "iu", "key", "o", "series", "PI", "zi", "xi", "k", "di", "pi", "p", "qi", "ei", "mi", "v", "ini", "ci", "id", "oi", "span", "sim", "j", "io", "f", "uri", "ni", "I", "remote", "q", "me", "ami", "m", "php", "ori", "ki", "\u0438", "gi", "ii", "us", "is", "li", "hi", "ui", "cli", "n", "ji", "ix", "fi", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.io.*;\\nimport java.util.HashSet;\\nimport java.util.Set;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws IOException {\\n        init();\\n\\n        int N = nextInt(), M = nextInt();\\n        Set<Integer> vals = new HashSet<>();\\n        for (int i = 0; i < M; i++) vals.add(nextInt());\\n\\n        long mod = 1000000007;\\n        long[] ways = new long[N + 1];\\n\\n        ways[0] = 1;\\n\\n        for (int i = 1; i < ways.length; i++) {\\n            if (vals.contains(i)) ways[i] = 0;\\n            else ways[i] = (ways[i - 1] + (i - 2 >= 0 ? ways[i - 2] : 0)) % mod;\\n        }\\n\\n        System.out.println(ways[N]);\\n    }\\n\\n    //Input Reader\\n    private static BufferedReader reader;\\n    private static StringTokenizer tokenizer;\\n\\n    private static void init() {\\n        reader = new BufferedReader(new InputStreamReader(System.in));\\n        tokenizer = new StringTokenizer(\"\");\\n    }\\n\\n    private static String next() throws IOException {\\n        String read;\\n        while (!tokenizer.hasMoreTokens()) {\\n            read = reader.readLine();\\n            if (read == null || read.equals(\"\"))\\n                return \"-1\";\\n            tokenizer = new StringTokenizer(read);\\n        }\\n\\n        return tokenizer.nextToken();\\n    }\\n\\n    private static int nextInt() throws IOException {\\n        return Integer.parseInt(next());\\n    }\\n}", "target": "174", "substitutes": {"N": ["NP", "NI", "S", "NA", "J", "D", "T", "NH", "NM", "K", "No", "H", "Y", "P", "V", "NT", "KN", "C", "Sn", "NO", "Ni", "NE", "NB", "I", "G", "TN", "NW", "FN", "CN", "R", "NN", "NR", "Ns", "Num", "NC", "NS", "L", "GN", "Q", "n", "MN", "ND", "SN", "AN"], "M": ["MP", "S", "D", "T", "TM", "K", "MO", "MH", "H", "MT", "MU", "P", "MS", "V", "DM", "MA", "C", "MD", "LM", "MC", "I", "G", "PM", "m", "R", "MX", "MM", "MI", "L", "JM", "F", "MN", "MAN", "MF"], "vals": ["reads", "mas", "dates", "dies", "ups", "lands", "lights", "rings", "boxes", "ports", "als", "forces", "ones", "ids", "fits", "ils", "bs", "details", "plays", "phis", "stones", "iffs", "lists", "vs", "nos", "vers", "rets", "olds", "its", "phones", "xs", "els", "posts", "sels", "gs", "needs", "values", "rots", "houses", "ims", "checks", "VAL", "ps", "verts", "pins", "ves", "bys", "val", "fs", "gets", "ints"], "i": ["in", "multi", "si", "ip", "chain", "l", "zi", "di", "c", "ini", "err", "info", "exp", "hi", "p", "phi", "it", "ie", "b", "qi", "x", "y", "sim", "uri", "q", "ori", "asi", "gi", "ii", "us", "base", "cli", "ji", "ic", "ri", "bi", "iu", "gu", "jp", "ei", "g", "j", "io", "ni", "I", "ind", "print", "ij", "is", "li", "ui", "client", "ix", "yi", "ti", "ai", "xi", "pi", "by", "mi", "ity", "v", "ci", "id", "oi", "f", "iq", "m", "ki", "\u0438", "ims", "fi", "im", "u"], "mod": ["fun", "add", "floor", "mult", "ms", "bit", "sign", "perm", "set", " Mod", "term", "odd", "lib", "pad", "mode", "crit", "prime", " MOD", "bo", "mag", "Mod", "deg", "fac", "modified", "mods", "MOD", "dig", "reg", "m", "rot", "scale", "base", "round", "div", "od", "man", "temp", "mut"], "ways": ["alks", "jobs", "lands", "rings", "they", "faces", "phis", "roads", "vers", "ards", "guards", "money", "sticks", "games", "pps", "ours", "flows", "things", "lights", "planes", "ows", "banks", "services", "changes", "ges", "ones", "resources", "uses", "keeper", "oms", "lets", "hops", "bags", "values", "houses", "mes", "groups", "bys", "thumbnails", "books", "cards", "reetings", "results", "projects", " pathways", "WAYS", "eways", "tracks", "how", "grades", "views", "xes", "def", "rows", "dds", "shots", "points", "ries", "good", "mers", "photos", "rooms", "way", "hips", "ports", "keepers", "mess", "nuts", "phones", "shows", "mons", "oys", "ves", "windows", "works"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint m,f,r;\\n\t\twhile(true){\\n\t\t\tm = scan.nextInt();\\n\t\t\tf = scan.nextInt();\\n\t\t\tr = scan.nextInt();\\n\t\t\tif(m+f+r==-3) break;\\n\t\t\tint s = m+f;\\n\t\t\tif(m==-1||f==-1) {System.out.println(\"F\"); continue;}\\n\t\t\tif(s>=80) System.out.println(\"A\");\\n\t\t\tif(s>=65&&s<80) System.out.println(\"B\");\\n\t\t\tif(s>=50&&s<65) System.out.println(\"C\");\\n\t\t\tif(s>=30&&s<50){\\n\t\t\t\tif(r>=50) System.out.println(\"C\");\\n\t\t\t\telse System.out.println(\"D\");\\n\t\t\t}\\n\t\t\tif(s<30) System.out.println(\"F\");\\n\t\t}\\n\t}\\n}", "target": "118", "substitutes": {}}
{"code": "import java.io.*;\\nimport java.util.*;\\n \\npublic class Main{\\n  public static void main(String[] args) throws Exception{\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        String s=br.readLine();\\n        String[] spl=s.split(\" \");\\n        int a=Integer.parseInt(spl[0]);\\n        int b=Integer.parseInt(spl[1]);\\n        int c=Integer.parseInt(spl[2]);\\n \\n \t\tArrays.sort(spl);\\n \t\tSystem.out.println(spl[0]+\" \"+spl[1]+\" \"+spl[2]);\\n \\n    }\\n}", "target": "37", "substitutes": {"br": ["wr", "ber", "hr", "bl", "ab", "kr", "ch", "BR", "Br", "vr", "mr", "next", "fr", "tr", "buf", "dr", "browser", "bd", "bs", "cr", "bo", "db", "rel", "gr", "str", "bh", "bc", "bf", "bt", "sp", "bridge", "lr", "bp", "rb", "bm", "pr", "div", "ctr", "be", "bro", "bn", "ro"], "s": ["in", "S", "space", "sb", "src", "sol", "w", "source", "es", "l", "ns", "i", "ts", "js", "str", "g", "v", "ats", "j", "h", "f", "gs", "ls", "m", "sl", "ss", "sq", "se", "t", "ps", "is", "n", "sql", "p", "sv", "rs", "sp"], "spl": ["wr", "jo", "bsp", "pol", "pieces", "bl", "kl", "uts", "resp", "sb", "snap", "sw", "lim", "sol", "diff", "sk", "rem", "sil", "opl", "spe", "Spl", "pack", "fil", "compl", "ipp", "sem", "deb", "split", "tap", "expl", "sci", "sel", "form", "el", "comm", "dis", "pel", "dat", "decl", "sd", "eps", "swing", "ell", "steps", "sam", "sl", "broad", "cl", "sell", "isl", "flash", "dl", "se", "sing", "cil", "pl", "stab", "syn", "div", "ipl", "scl", "angular", "bol", "prim", "pp", "sql", "sp"], "a": ["an", "ba", "ab", "e", "ra", "au", "o", "l", "i", "am", "A", "r", "ar", "ta", "f", "ao", "va", "ac", "oa", "aa", "as", "z", "sa", "ca", "p", "al"], "b": ["bi", "ba", "ab", "bb", "fb", "ib", "e", "ub", "eb", "ob", "db", "g", "r", "bc", "v", "bf", "y", "cb", "j", "f", "z", "B", "rb", "n", "be"], "c": ["e", "l", "cd", "ec", "cr", "d", "g", "r", "bc", "v", "cc", "C", "cb", "f", "ac", "m", "cs", "cf", "t", "z", "count", "ce", "ca", "n", "ct", "p", "u"]}}
{"code": "//package com.company;\\n\\nimport java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n    public static class Task {\\n\\n        public void solve(Scanner sc, PrintWriter pw) throws IOException {\\n            int n = sc.nextInt();\\n            int l = sc.nextInt();\\n            String[] strings = new String[n];\\n            for (int i = 0; i < n; i++) {\\n                strings[i] = sc.next();\\n            }\\n            Arrays.sort(strings);\\n            StringBuilder sb = new StringBuilder();\\n            for (String x: strings) sb.append(x);\\n            pw.println(sb.toString());\\n\\n        }\\n    }\\n\\n    static long TIME_START, TIME_END;\\n\\n    public static void main(String[] args) throws IOException {\\n        Scanner sc = new Scanner(System.in);\\n//        Scanner sc = new Scanner(new FileInputStream(\"input\"));\\n        PrintWriter pw = new PrintWriter(new BufferedOutputStream(System.out));\\n//        PrintWriter pw = new PrintWriter(new FileOutputStream(\"input\"));\\n\\n        Runtime runtime = Runtime.getRuntime();\\n        long usedMemoryBefore = runtime.totalMemory() - runtime.freeMemory();\\n        TIME_START = System.currentTimeMillis();\\n        Task t = new Task();\\n        t.solve(sc, pw);\\n        TIME_END = System.currentTimeMillis();\\n        long usedMemoryAfter = runtime.totalMemory() - runtime.freeMemory();\\n        pw.close();\\n        System.err.println(\"Memory increased: \" + (usedMemoryAfter - usedMemoryBefore) / 1000000);\\n        System.err.println(\"Time used: \" + (TIME_END - TIME_START) + \".\");\\n    }\\n\\n    static class Scanner {\\n        StringTokenizer st;\\n        BufferedReader br;\\n\\n        public Scanner(InputStream s) {\\n            br = new BufferedReader(new InputStreamReader(s));\\n        }\\n\\n        public Scanner(FileReader s) throws FileNotFoundException {\\n            br = new BufferedReader(s);\\n        }\\n\\n        public String next() throws IOException {\\n            while (st == null || !st.hasMoreTokens())\\n                st = new StringTokenizer(br.readLine());\\n            return st.nextToken();\\n        }\\n\\n        public int nextInt() throws IOException {\\n            return Integer.parseInt(next());\\n        }\\n\\n        public long nextLong() throws IOException {\\n            return Long.parseLong(next());\\n        }\\n\\n        public String nextLine() throws IOException {\\n            return br.readLine();\\n        }\\n\\n        public double nextDouble() throws IOException {\\n            return Double.parseDouble(next());\\n        }\\n\\n        public boolean ready() throws IOException {\\n            return br.ready();\\n        }\\n    }\\n}", "target": "224", "substitutes": {}}
{"code": "\\n\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner scanner = new Scanner(System.in);\\n\t\tint a = scanner.nextInt();\\n\t\tint b = scanner.nextInt();\\n\t\tint c = scanner.nextInt();\\n\t\tint k = scanner.nextInt();\\n\t\tint ans = 0;\\n\t\tint max = 0;\\n\t\t\\n\t\tans = cal(a, b, c, k);\\n\t\tSystem.out.println(ans);\\n\t\t\\n\t\t\\n\t\tscanner.close();\\n\\n\t}\\n\t\\n\tpublic static int cal(int a, int b, int c, int n) {\\n\t\tint max = 0;\\n\t\tif (n == 0) {\\n\t\t\treturn a + b + c;\\n\t\t}\\n\t\tmax = Math.max(max, cal(a*2, b, c, n-1));\\n\t\tmax = Math.max(max, cal(a, b*2, c, n - 1));\\n\t\tmax = Math.max(max, cal(a, b, c*2, n - 1));\\n\t\treturn max;\\n\t}\\n\\n}\\n", "target": "201", "substitutes": {"scanner": ["planner", "statisher", "seeisher", "canner", "canners", "canrator", "reachner", "seener", "banner", "seeener", "scander", "Scancher", "canisher", "gatener", "gateer", "statner", "sanrator", "banener", "gatelier", "Scanter", "caner", "scanter", "sanener", "scanners", "canener", " scanener", "scanisher", "cander", "planener", "sanner", "reachener", "statter", "sanners", "plancher", "reachder", "Scaner", "scanrator", "Scanner", "statener", "canter", "reachisher", "scanener", " scanlier", "banrator", " scaner", "canlier", "scancher", "banners", "Scanener", "scanlier", "planter", "scaner", "cancher", "seeder", "Scanisher", "gateener", " scanter"], "a": ["ap", "an", "la", "ba", "ab", "af", "da", "ea", "at", "au", "ra", "e", "aka", "l", "aaa", "aj", "area", "aux", "x", "i", "am", "A", "era", "g", "r", "\u00e4", "v", "ar", "ia", "ta", "ma", "ao", "va", "app", "ac", "ae", "alpha", "ach", "ga", "oa", "aa", "as", "t", "att", "na", "pa", "apa", "fa", "sa", "isa", "ca", "aq", "al"], "b": ["nb", "bi", "ba", "bl", "ab", "abb", "bb", "ib", "fb", "sb", "e", "zb", "ub", "wb", "eb", "lib", "l", "ob", "bs", "gb", "db", "by", "i", "d", "bg", "g", "r", "bc", "v", "bf", "y", "cb", "j", "h", "f", "m", "bis", "br", "to", "t", "base", "z", "B", "rb", "p", "be", "u"], "c": ["cp", "cur", "ch", "e", "vc", "com", "cache", "cm", "mc", "l", "cd", "p", "ec", "cr", "conf", "d", "sc", "g", "r", "cos", "or", "v", "cc", "C", "ci", "fc", "bc", "cb", "co", "f", "lc", "h", "cv", "rc", "ac", "gc", "cs", "tc", "cf", "etc", "con", "pc", "dc", "z", "ce", "ct", "ca", "cu", "ic"], "k": ["ka", "kl", "kr", "ke", "kn", "sk", "key", "K", "u", "ko", "ks", "i", "ik", "ek", "r", "v", "ku", "ak", "j", "kk", "kw", "q", "ac", "m", "mk", "km", "ck", "tk", "t", "dk", "p", "ikk"], "ans": ["an", "ars", "ians", "ms", "ents", "s", "rans", "ds", "orts", "aps", "aos", "ows", "ann", "es", "actions", "ons", "ns", "ins", "aus", "vals", "ks", "ces", "pan", "arts", "lines", "vs", " means", "ats", "oss", "nets", "rows", "anes", "ates", "ants", "xs", "posts", "ANS", "ads", "ls", "orders", "ams", "types", "ions", "cs", "os", "ps", " spans", "offs", "ations", "amps", "ens", "ols", "ints", "eds"], "max": ["size", "mx", "nd", "total", "set", "all", "ax", "best", "box", "sum", "with", "prime", "out", "global", "ox", "mod", " Max", "current", "res", "wrap", "exp", "p", "mean", "limit", "cp", "largest", "mad", "s", "last", "right", "MAX", "pad", "x", "med", "end", "co", "on", "name", "ac", "Max", "upper", "pr", "auto", "average", "pop", "core", "ms", "px", "and", "major", " MAX", "cat", "conf", "act", "r", "only", "default", "print", "force", "rank", "rest", "cl", "call", "t", "na", "count", "ex", "checked", "map", "grow", "maximum", "ro", "add", "highest", "part", "now", "cmp", "pi", "work", "v", "min", "over", "ma", "gt", "m", "plus", "full", "z", "rand", "num", "div"], "n": ["nb", "an", "nn", "w", "nor", "all", "none", "o", "l", "np", "ns", "x", "i", "d", "nr", "g", "r", "no", "v", "nt", "nm", "name", "j", "h", "sn", "number", "m", "nu", "nl", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "num", "N", "p", "mn"]}}
{"code": "import java.io.*;\\n\\npublic class Main{\\n    public static void main(String[]args)throws IOException{\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        String str;\\n\\n        while((str = br.readLine()) != null){\\n            String[] str2 = str.split(\" \");\\n            int a = Integer.parseInt(str2[0]);\\n            int b = Integer.parseInt(str2[1]);\\n\\n            int digits = Integer.toString(a + b).length();\\n            System.out.println(digits);\\n        }\\n    }\\n}", "target": "176", "substitutes": {"br": ["wr", "ber", "bi", "hr", "bl", "kr", "bb", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "buf", "dr", "bd", "bs", "cr", "gb", "db", "bg", "gr", "bh", "bc", "bf", "yr", "bt", "sp", "bridge", "lr", "bp", "rb", "bm", "pr", "ctr", "be", "bro", "bn"], "str": ["cur", "obj", "iter", "e", "vol", "it", "pt", "msg", "comment", "block", "fr", "expr", "l", "tr", "STR", "req", "dr", "del", "cr", "char", "text", "form", "coll", "comm", "gr", "r", "v", "err", "dat", "name", "j", "res", "print", "string", "st", "m", "Str", "sl", "exp", "spec", "t", "z", "input", "txt", "n", "div", "syn", "pr", "sp", "arr", "entry"], "str2": ["strTwo", "Str2", "str1", "charTwo", "Str4", "stickB", "br4", "brTwo", "str4", "charB", "exp52", "StrTwo", "str5", "int1", " strTwo", "Str1", " str5", "strB", "char2", "int52", "br5", "Str5", "formTwo", "stick2", "formB", "exp2", "form2", "stickTwo", " str4", "exp1", "Str52", "int2", "br2", "str52"], "a": ["an", "la", "ba", "da", "ea", "at", "ai", "au", "ama", "aria", "aka", "anta", "aj", "area", "x", "i", "A", "era", "r", "ar", "ia", "ta", "ma", "ao", "va", "ena", "ac", "ae", "ga", "oa", "sta", "aa", "t", "apa", "sa", "ca", "aq", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "sb", "eb", "lib", "ob", "bs", "gb", "db", "c", "i", "d", "r", "bc", "v", "y", "bot", "cb", "bar", "j", "m", "beta", "mb", "blue", "bis", "bp", "B", "rb", "n", "p"], "digits": [" Digensions", "digitors", " Digits", " digals", " Digals", "divits", " Digit", " digitors", " digit", "Digensions", "Digitors", "Digits", "divit", " digensions", "Digals", "digit", "Digit", "digensions", "digals", "divitors", "divals"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tint earliest = 1200;\\n\t\tfor(int i = 1; i <= 9; i++) {\\n\t\t\tint j = i * 111;\\n\t\t\tif(N <= j && j < earliest) {\\n\t\t\t\tearliest = j;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(earliest);\\n\t}\\n\\n}\\n", "target": "106", "substitutes": {"sc": ["ch", "src", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "ner", "bc", "cc", "sys", "ok", "SC", "lc", "rc", "RC", "usc", "sch", "nl", "gc", "scan", "cl", "ss", "uc", "nc", "sq", "tc", "cs", "system", "ck", "pc", "ser", "isc", "syn", "scl", "sv", "Scan", "sp", "esc"], "N": ["NI", "S", "NA", "J", "D", "T", "NM", "K", "No", "P", "A", "NT", "V", "M", "C", "X", "NO", "Ni", "North", "I", "TN", "CN", "R", "NN", "NR", "Ns", "Num", "Na", "NS", "SN", "L", "B", "MN", "n", "ND", "NC", "Name"], "earliest": ["earinglier", "earbest", "earingtold", "earlybest", "earrett", "earingmpire", "earLatest", "earfirst", "earlygently", "evergently", "earsaple", "earingLatest", "mataple", "earlyfirst", "earsbest", "earsLatest", "earlytold", "everaple", "earingliest", "matrett", "evertold", "matlier", "everrett", "earlylier", "earmpire", "eartold", "earlier", "earsliest", "earlyLatest", "earsmpire", "earsfirst", "earsrett", "earlyliest", "everliest", "earaple", "earlympire", "earinggently", "eargently", "earingfirst", "everlier", "earingbest", "earslier", "matliest"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "s", "iu", "ie", "PI", "zi", "xi", "k", "di", "pi", "qi", "x", "ik", "mi", "v", "ini", "ci", "y", "id", "iso", "sim", "io", "f", "iq", "I", "ind", "ij", "init", "m", "ki", "\u0438", "asi", "ii", "gi", "is", "li", " ii", "hi", "ui", "n", "ix", "p", "im", "ic", "phi", "u"], "j": ["Ja", "bi", "oj", "adj", "obj", "jc", "J", "json", "it", "jack", "s", "journal", "o", "l", "jit", "dj", "b", "k", "jj", "aj", "jl", "prime", "out", "jp", "uj", "d", "js", "g", "my", "v", "ja", "y", "ju", "meg", "ind", "jac", "ij", "q", "kj", "m", "zone", "br", "t", "xy", "z", "jump", "ji", "n", "pr", "p"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.util.Arrays;\\nimport java.util.Collections;\\nimport java.util.List;\\nimport java.util.ArrayList;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        int inputCount = Integer.parseInt(br.readLine());\\n        for( int i = 0; i < inputCount; i++) {\\n            String line = br.readLine();\\n            List<Integer> sideLengthList = new ArrayList<>();\\n            for( String s : line.split(\" \")  ) {\\n                sideLengthList.add( Integer.parseInt(s) );\\n            }\\n            Collections.sort(sideLengthList, Collections.reverseOrder());\\n            int cSide = sideLengthList.get(0);\\n            int aSide = sideLengthList.get(1);\\n            int bSide = sideLengthList.get(2);\\n            if( cSide * cSide == aSide * aSide + bSide * bSide) {\\n                System.out.println(\"YES\");\\n            } else {\\n                System.out.println(\"NO\");\\n            }\\n        }\\n    }\\n}\\n\\n", "target": "65", "substitutes": {"br": ["wr", "bsp", "ber", "hr", "bl", "kr", "ch", "BR", "sb", "Br", "vr", "mr", "fr", "er", "tr", "b", "buf", "dr", "browser", "bd", "bs", "cr", "db", "rel", "gr", "r", "bh", "brace", "yr", "bt", "bridge", "lr", "shr", "bp", "rb", "pr", "ctr", "be", "bro", "Fr", "bn"], "inputCount": ["inputLength", "commandType", " inputLimit", "issueLimit", "InputCount", "issueNow", "issueConnect", " inputLength", "inputConnect", "issueType", "inputLimit", "commandConnect", "commandCount", " inputNow", "commandLimit", " inputConnect", "issueCount", "InputNow", "inputType", " inputType", "InputLength", "issueLength", "inputNow"], "i": ["bi", "multi", "ms", "si", "ai", "e", "ip", "it", "mill", "gu", "ie", "o", "di", "pi", "qi", "x", "mi", "v", "ini", "ci", "y", "sim", "id", "name", "j", "f", "iq", "I", "ind", "q", "init", "me", "m", "index", "batch", "ii", "us", "ims", "t", "is", "li", "ex", "cli", "ui", "n", "sql", "ix", "p", "im", "ic", "phi", "u"], "line": ["in", "Line", "list", "section", "side", "inline", "file", "next", "source", "block", "l", "user", "lin", "row", "text", "stroke", "ine", "str", "lines", "point", "cell", "lock", "LINE", "liner", "print", "le", "string", "body", "nl", "log", "ln", "se", "data", "page", "link", "header", "message", "sample", "frame", "sequence", "entry"], "sideLengthList": [" sideNumberMap", "sideCountListener", "sideCountSet", "sidelengthLIST", "sideDistanceList", " sideLengthL", "sidelengthList", "sideCountList", "sideLengthLens", "sideLenSet", "sideLengthSet", "sidePositionL", "sidelengthMap", " sidePositionlist", "sideDistanceLIST", "sideSizeList", "sideLenList", " sideSizeList", "sideCountlist", "sideSizeL", " sidelengthlist", "sidePositionLIST", "sideLengthlist", "sideDurationlist", "sideInfolist", " sideLengthSet", " sideNumberlist", " sidePositionLens", " sideSizeListener", "sideNumberList", " sideLengthMap", " sideLengthLIST", "sideCountL", "sideNumberLIST", "sideSizeListener", " sidelengthList", " sideLengthlist", " sideNumberSet", "sidelengthSet", "sidelengthlist", "sideCountMap", "sideLenlist", "sideNumberListener", "sideNumberSet", "sideDistancelist", "sideSizeSet", " sideNumberLIST", "sideLenListener", "sideInfoLIST", "sideLengthListener", "sideNumberL", "sideLengthMap", "sidelengthL", "sidePositionLens", " sidePositionList", "sideNumberMap", "sideNumberlist", " sideNumberL", " sidelengthL", "sidelengthListener", "sidePositionList", "sideSizeLIST", " sideSizelist", " sidelengthLIST", " sideLengthLens", "sideSizelist", "sideDistanceLens", " sidelengthListener", "sideInfoList", "sideLengthL", " sideLengthListener", "sideDurationLens", " sidePositionLIST", "sideDurationList", "sideDurationLIST", "sidePositionlist", " sideSizeSet", "sideLengthLIST", " sideNumberList", "sideInfoL"], "s": ["ms", "les", "S", "ws", "sts", "sw", "set", "single", "fts", "l", "b", "ns", "strings", "c", "ks", "ts", "js", "str", "ats", "a", "string", "ls", "fs", "aws", "tags", "ss", "sq", "cs", "qs", "less", "us", "se", "t", "ps", "is", "n", "ves", "p", "sv", "rs", "hs", "gets"], "cSide": ["cLove", "lcSide", "tcDone", "fcBlock", " cIDE", "fcSide", "cbBlock", " cBlock", "cbPanel", "cDone", "cSize", "aDone", "ciDone", "tcPe", "cbSide", "CPart", "aLove", "lcBlock", "fcIDE", "aPanel", "lcPanel", "aSize", "tcSide", "CIDE", "ciSide", "cPe", "cPanel", "lcLove", "cPart", "cbLove", "CSide", "cIDE", " cPart", "aBlock", "ciPe", "ciSize", "tcSize", "cBlock", "fcPart", "CBlock", "aPe"], "aSide": ["aiJoin", " aHalf", "aHalf", "AHalf", "vaSide", "paGroup", " aDual", " aDir", " aJoin", " aGroup", "aiId", "ASide", " aId", "aiSide", "bDual", "paSide", " aPe", "aiHalf", "AId", "vaDir", " aBlock", "aGroup", "aJoin", "vaBlock", "aId", "AJoin", "bGroup", "aDir", "bPe", "bDir", "vaDual", "aBlock", "paDir", "paPe", "bBlock", "aDual", "aPe"], "bSide": ["anotherHalf", "bPart", "ySand", "fbSand", "anotherHop", "anotherSide", " bSand", "bHalf", "gSide", "baDay", "ySide", "yDay", "gPart", "bHop", "lbHalf", "gSand", "fbSide", "bbSide", "bbHop", "bbSand", " bDay", "anotherSand", " bPart", "lbSide", "baSide", "fbDay", "baPart", "gDay", "bSand", "bDay", "baSand", "bbHalf", " bBlock", "yBlock", "fbBlock", "bBlock", "lbHop", "lbSand"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        // Your code here!\\n        Scanner sc = new Scanner(System.in);\\n        String str = sc.next();\\n        char[] c = str.toCharArray();\\n        \\n        boolean ok = false;\\n        if (c[0] == c[1] && c[2] == c[3] && c[0] != c[2]) {\\n            ok = true;\\n        } else if (c[0] == c[2] && c[1] == c[3] && c[0] != c[1]) {\\n            ok = true;\\n        } else if (c[0] == c[3] && c[1] == c[2] && c[0] != c[1]) {\\n            ok = true;\\n        }\\n        \\n        if (ok) {\\n            System.out.println(\"Yes\");\\n        } else {\\n            System.out.println(\"No\");\\n        }\\n    }\\n}", "target": "33", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\t\tint a,b,s=0;\\n\t\tString op=\"+\";\\n\t\tScanner scan = new Scanner(System.in);\\n\t\twhile(true)\\n\t\t{\\n\t\t\ta=scan.nextInt();\\n\\n\t\t\top=scan.next();\\n\t\t\tb=scan.nextInt();\\n\t\t\tif(op.equals(\"?\"))\\n\t\t\t\tbreak;\\n\t\t\t\\n\t\t\tswitch (op){\\n\t\t\t  case \"+\":\\n\t\t\t\t  s=a+b;\\n\t\t\t\t  break;\\n\t\t\t  case \"-\":\\n\t\t\t\t  s=a-b;\\n\t\t\t\t  break;\\n\t\t\t  case \"*\":\\n\t\t\t\t  s=a*b;\\n\t\t\t\t  break;\\n\t\t\t  case \"/\":\\n\t\t\t\t  s=a/b;\\n\t\t\t\t  break;\\n\t\t\t\t    default :\\n\t\t\t\t    break;\\n\t\t\t}\\n\t\tSystem.out.println(s);\\n\t\t\\n\t\t}\\n\t\t\\n\t}\\n\t}", "target": "139", "substitutes": {}}
{"code": "import java.util.*;\\nimport java.io.*;\\nimport static java.lang.Math.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\t// \u5165\u529b\\n\t\tString s = sc.next();\\n\t\tString t = sc.next();\\n\t\t\\n\t\t// \u8a08\u7b97\\n\t\tint result = 100000;\\n\t\tfor(int i = 0; i < s.length()-t.length()+1; i++){\\n\t\t    int tmp = 0;\\n\t\t    for(int j = 0; j < t.length(); j++){\\n\t\t        if(s.charAt(i+j) != t.charAt(j)) tmp++;\\n\t\t    }\\n\t\t    result = min(result, tmp);\\n\t\t}\\n\t\t\\n\t\t\\n\t\t// \u51fa\u529b\\n\t\tSystem.out.println(result);\\n\t}\\n\t\\n\tpublic static class Scanner {\\n\t\tprivate BufferedReader br; private StringTokenizer tok;\\n\t\tpublic Scanner(InputStream is) throws IOException { br = new BufferedReader(new InputStreamReader(is));}\\n\t\tprivate void getLine() throws IOException { while(!hasNext()) tok = new StringTokenizer(br.readLine());}\\n\t\tprivate boolean hasNext() { return tok != null && tok.hasMoreTokens();}\\n\t\tpublic String next() throws IOException { getLine(); return tok.nextToken();}\\n\t\tpublic int nextInt() throws IOException { return Integer.parseInt(next());}\\n\t\tpublic long nextLong() throws IOException { return Long.parseLong(next());}\\n\t\tpublic double nextDouble() throws IOException { return Double.parseDouble(next());}\\n\t}\\n}\\n", "target": "158", "substitutes": {"sc": [" screen", " Scan", " scr", " ser", " res", "sb", " cons", " scorer", " sn", " pc", "Sc", " sh", "sys", "SC", " Sc", " SC", " sl", "scan", "ss", " cr", "cs", " sk", " sp", "sa", " unsc", "n", " sun", "Scan"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\\n\t\tpublic static void main(String[] args){\\n\t\tScanner scan = new Scanner(System.in);\\n\\n\t\twhile(true){\\n\t\t\tint num = 0;\\n\t\t\tString moji = scan.next();\\n\t\t\tint moji_len = moji.length();\\n\t\t\t//??\u00a7????????\u00a8?\u00b0????????????\\??????????????????\\n\t\t\tfor(int cnt_len = 0; cnt_len < moji_len; cnt_len++){\\n\t\t\t\tchar moji_one = moji.charAt(cnt_len);\\n\t\t\t\tString moji_str = String.valueOf(moji_one);\\n\t\t\t\tint moji_int = Integer.decode(moji_str);\\n\t\t\t\tnum += moji_int;\\n\t\t\t}\\n\t\t\t//0?????\\???????????????????????\u00a8?????????????????????\\n\t\t\tif(num == 0)\\n\t\t\t\tbreak;\\n\t\t\telse\\n\t\t\t\tSystem.out.println(num);\\n\t\t}\\n\t\t//????\u00a7????\\n\t\tscan.close();\\n\t}\\n}", "target": "144", "substitutes": {"scan": ["an", "scroll", "in", "query", "report", "list", "nn", "sync", "pass", "check", "set", "read", "send", "look", "connect", "re", "run", "clean", "save", "row", "seek", "sc", "get", "sky", "walk", "parse", "sin", "ner", "skip", "find", "sys", "can", "reach", "gate", "san", "system", "watch", "nav", "se", "scale", "na", "stat", "n", "store", "match", "Scan"], "num": ["nb", "en", "multi", "cur", "set", "um", "msg", "coord", "sum", "counter", "row", "no", "NUM", "sim", "id", "conv", "number", "Number", "nom", "nu", "mon", "info", "umber", "Num", "con", "count", "orig"], "moji": ["poji", " moiji", "mooji", "koiji", "pooji", "meji", "koowa", "miiji", "moobi", "moowa", "miobi", "mioji", "meoji", " moowa", "poiji", "kooji", "poobi", "miji", " moobi", " mooji", "moiji", "koji", "meiji", "meowa"], "moji_len": ["moji_fin", "mooji_ln", "mooji_length", "moji_length", "moji_ln", "mooji_fin", "mooji_len"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        long N = sc.nextLong();\\n        long K = sc.nextLong();\\n            if(N%K < K - N%K){\\n                System.out.println(N%K);\\n            }else{\\n                System.out.println(K-N%K);\\n            }\\n    }\\n}", "target": "22", "substitutes": {"sc": [" scr", "ch", "sb", "sw", "cle", "asc", "mc", "osc", "scrib", "ctrl", "cr", "Sc", "c", "inc", "bc", "cc", "sys", "cont", "SC", "lc", "rc", "usc", "sch", "sec", "sr", "gc", "cl", "scan", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "dc", "acc", "sa", "isc", "scl", "sh", "sv", "sp", "esc"], "N": ["NG", "S", "NA", "J", "D", "NV", "T", "NH", "NM", "H", "Y", "Z", "P", "Scott", "A", "NT", "V", "M", "C", "NUM", "X", "NO", "NE", "W", "NB", "I", "FN", "TN", "G", "CN", "IN", "R", "NL", "NN", "NR", "OUT", "Num", "DN", "L", "NS", "SN", "B", "GN", "MN", "n", "F", "ND", "O", "Q", "NC", "AN", "Name"], "K": ["S", "NA", "J", "FK", "TER", "HH", "KR", "T", "Key", "KK", "Kind", "KS", "U", "PK", "KT", "k", "KI", "ID", "H", "Sk", "MT", "IK", "Z", "P", "Y", "IT", "KEY", "MS", "V", "KN", "M", "KA", "UK", "C", "X", "OK", "W", "MC", "G", "MK", "UT", "I", "OTH", "ANK", "NK", "SK", "KING", "Max", "VAL", "KE", "L", "KER", "B", "KB", "VK", "Q", "HK", "O"]}}
{"code": "\\n\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\t\\n\t\t//????????\u00a3????????????\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t//??????????????\u00a3?\u00a8?\\n\t\tboolean [][] cards = new boolean[4][13];\\n\t\t//???????????????????????? ???????????????????????????\\n\t\t//String mark = new String();\\n\t\t//????????????????????\u00b0\\n\t\tint num =sc.nextInt();\\n\t\t//??\\????????????????????????????????\u00b0????????????\\n\t\tfor(int i=0; i < num; i++){\\n\t\t\t//????????????????????????\\n\t\t\tString mark = sc.next();\\n\t\t\t//??????????????????????????\u00b0????????\\?????????????????????true\\n\t\t\tif(mark.equals(\"S\")){\\n\t\t\t\tcards[0][sc.nextInt()-1] = true;\\n\t\t\t}else if(mark.equals(\"H\")){\\n\t\t\t\tcards[1][sc.nextInt()-1] = true;\\n\t\t\t}else if(mark.equals(\"C\")){\\n\t\t\t\tcards[2][sc.nextInt()-1 ]= true; \\n\t\t\t}else if(mark.equals(\"D\")){\\n\t\t\t\tcards[3][sc.nextInt()-1] = true;\\n\t\t\t}\\n\t\t}\\n\t\t//?????????????????????????????\u00a8???\\n\t\tfor(int i = 0; i< cards.length;i++){\\n\t\t\tfor(int j=0; j< cards[0].length;j++){\\n\t\t\t\t//true??\u00a7????????????????????\u00a8???\\n\t\t\t\tif(!cards[i][j]){\\n\t\t\t\t\tif(i == 0){\\n\t\t\t\t\t\tSystem.out.println(\"S \" + (j+1));\\n\t\t\t\t\t}else if(i == 1 ){\\n\t\t\t\t\t\tSystem.out.println(\"H \" + (j+1));\\n\t\t\t\t\t}else if(i == 2){\\n\t\t\t\t\t\tSystem.out.println(\"C \" + (j+1));\\n\t\t\t\t\t}else if(i == 3){\\n\t\t\t\t\t\tSystem.out.println(\"D \" + (j+1));\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t}\\n}", "target": "189", "substitutes": {}}
{"code": "import java.util.*;\\n\\nclass Main {\\n  public static void main(String[] args) {\\n    Scanner sc=new Scanner(System.in);\\n    int A=sc.nextInt();\\n    int B=sc.nextInt();\\n    int C=sc.nextInt();\\n    int X=sc.nextInt();\\n\\n    int res=0;\\n    for (int a=0; a<=A; a++) {\\n      for (int b=0; b<=B; b++) {\\n        int c=(X-a*500-b*100)/50;\\n        if (c>=0 && c<=C)\\n          res++;\\n      }\\n    }\\n    System.out.println(res);\\n  }\\n}\\n", "target": "127", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "ctrl", "cmp", "anc", "cr", "Sc", "out", "sci", "ko", "scope", "inc", "cgi", "bc", "cc", "sys", "cont", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "gc", "cl", "ss", "scan", "nc", "system", "cs", "tc", "sq", "ck", "pc", "ctl", "dc", "isc", "syn", "scl", "sv", "sp", "esc"], "A": ["AB", "S", "AT", "D", "BA", "T", "AF", "E", "AC", "AI", "As", "P", "AS", "RA", "V", "CA", "SA", "M", "LA", "AR", "G", "I", "ABC", "AA", "R", "AL", "IA", "AP", "L", "AU", "N", "An"], "B": ["BG", "AB", "Bs", "S", "BR", "BB", "J", "D", "RB", "BA", "T", "CB", "E", "Y", "P", "V", "Bi", "BO", "M", "BC", "I", "G", "BE", "BI", "R", "BS", "EB", "BL", "L", "F", "N", "DB"], "C": ["CS", "EC", "CP", "S", "Cu", "D", "T", "CB", "E", "K", "U", "JC", "CL", "DC", "P", "V", "CA", "M", "SC", "BC", "G", "I", "CC", "Cs", "R", "YC", "CE", "CD", "L", "F", "N", "CON", "CI", "CR"], "X": ["XT", "S", "J", "ZX", "T", "E", "K", "H", "Y", "TX", "Z", "IX", "x", "P", "XL", "DX", "V", "XM", "Ex", "M", "SC", "CH", "W", "I", "G", "R", "XX", "XP", "JS", "L", "F", "Q", "N", "PC"], "res": ["result", "ms", "results", "obj", "resp", "yes", "right", "resolution", "red", "cal", "rem", "re", "progress", "Res", "req", "counter", "sum", "rs", "vals", "out", "conf", "row", "i", "RES", "def", "js", "gr", "rel", "cons", "ref", "proc", "rev", "ret", "err", "rows", "pos", "col", "index", "rest", "zero", "cs", "us", "os", "con", "ps", "rand", "ex", "count", "stock", "RE", "pres", "val", "reset"], "a": ["an", "la", "ba", "ab", "eas", "da", "ea", "at", "ai", "ra", "au", "e", "from", "aj", "area", "x", "am", "era", "r", "ar", "bar", "ia", "ta", "ma", "j", "ao", "va", "back", "ac", "ae", "alpha", "ach", "ga", "oa", "aa", "as", "sta", "att", "fa", "sa", "ca", "aq", "al", "u"], "b": ["nb", "bi", "ba", "bl", "ab", "bb", "ib", "obj", "fb", "sb", "bu", "ub", "eb", "ben", "l", "lb", "bd", "ob", "bs", "by", "db", "bin", "bo", "binary", "x", "i", "bg", "bh", "bc", "bf", "v", "bar", "cb", "j", "f", "back", "body", "beta", "bur", "ble", "batch", "mb", "bis", "br", "two", "base", "rb", "be"], "c": ["vc", "cat", "mc", "chain", "l", "k", "cmp", "cd", "crit", "anc", "cr", "conf", "ec", "cons", "cos", "bc", "fc", "co", "v", "cc", "cont", "cb", "conv", "lc", "rc", "ac", "m", "cl", "uc", "nc", "tc", "cf", "cs", "con", "t", "dc", "count", "ce", "ct", "cu", "unc", "dec", "cor"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.InputStreamReader;\\nimport java.io.PrintWriter;\\nimport java.util.StringTokenizer;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n  static InputReader in;\\n  static PrintWriter out;\\n\\n \\n\\n\\n  static class Solution {\\n    void solve() throws IOException {\\n      int[] cnt = new int[26];\\n      char[] alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u',\\n                          'v','w','x','y','z'};\\n      Scanner sc = new Scanner(System.in);\\n      while (sc.hasNext()) {\\n        String word = sc.next(); \\n        for (int i = 0; i < word.length(); i++) {\\n          for (int j = 0; j < 26; j++) {            \\n            if(alphabet[j] == word.toLowerCase().charAt(i)) {\\n              cnt[j]++;\\n            }\\n          }\\n        }\\n        \\n      }\\n      for (int i = 0; i < 26; i++) {\\n        out.println(alphabet[i] + \" : \" + cnt[i]);\\n      }\\n//      End solve()\\n    }\\n//    End Solution\\n}\\n\\n\\n  public static void main(String[] args) throws IOException {\\n    in = new InputReader(System.in);\\n    out = new PrintWriter(System.out);\\n    Solution solver = new Solution();\\n    solver.solve();\\n    out.close();\\n}\\n\\n\\n  static class InputReader {\\n    public BufferedReader br;\\n    public StringTokenizer st;\\n\\n    public InputReader(InputStream stream) {\\n      br = new BufferedReader(new InputStreamReader(stream));\\n    }\\n\\n    public int nextInt() throws IOException {\\n      while (st == null || !st.hasMoreTokens()) {\\n        st = new StringTokenizer(br.readLine());\\n      }\\n      return Integer.parseInt(st.nextToken());\\n    }\\n\\n    public long nextLong() throws IOException {\\n      while (st == null || !st.hasMoreTokens()) {\\n        st = new StringTokenizer(br.readLine());\\n      }\\n      return Long.parseLong(st.nextToken());\\n    }\\n\\n    public String next() throws IOException {\\n      while (st == null || !st.hasMoreTokens()) {\\n        st = new StringTokenizer(br.readLine());\\n      }\\n      return st.nextToken();\\n    }\\n\\n    public double nextDouble() throws IOException {\\n      while (st == null || !st.hasMoreTokens()) {\\n        st = new StringTokenizer(br.readLine());\\n      }\\n      return Double.parseDouble(st.nextToken());\\n    }\\n\\n  }\\n\\n}", "target": "242", "substitutes": {"in": ["copy", "std", "In", "iter", "null", "din", "file", "from", "rin", "re", "world", "user", "ins", "rt", "bin", "doc", "d", "str", "r", "ini", "ar", "line", "err", "io", "rc", "IN", "m", "log", "reader", "con", "t", "stream", "input", "n", "inn", "inf", "inner", "p", "ic", "cin"], "out": ["report", "at", "ch", "it", "s", "sw", "up", "w", "aos", "o", "Out", "println", "c", "r", "nt", "v", "sys", "screen", "io", "res", "gt", "print", "st", "m", "write", "OUT", "ou", "ln", "output", "os", "writer", "t", "to", "txt", "n", "p", "outs"], "cnt": [" ccount", "ncnc", "Cnt", "Ccount", "bnt", " cnc", "cst", "bounters", "ncounters", "ccount", "Cnc", "cNT", "nounter", "cct", "counter", "cnc", "Counters", " cct", "Counter", "bct", "ncount", "nNT", " counter", "ncounter", "bst", " counters", " cst", " cNT", "Cct", "nnt", "CNT", "ncnt", "counters", "Cst"], "alphabet": ["alatten", "alaton", "archatten", "variabet", "archphabet", "forthabetic", "algebra", "lettersphabet", "alphaton", "variphabet", "alphab", "palatten", "forthgebra", "lettersabet", "archaton", "alphphabet", "charabet", "alphabetic", "palabet", "alab", "forthabet", "variabetic", "forthphabet", "lettersabetic", "variab", "alphgebra", "alphatten", "alabetic", "charab", "charphabet", "lettersgebra", "archabet", "charabetic", "alabet", "palaton", "palphabet"], "sc": ["irc", "ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sci", "c", "cgi", "inc", "bc", "cc", "sys", "co", "SC", "lc", "rc", "usc", "sch", "sec", "exec", "gc", "cl", "ss", "nc", "system", "cs", "tc", "sq", "sic", "tch", "disc", "pc", "exp", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "word": ["character", "query", "language", "list", "part", "feature", "bit", "space", "Word", "bank", "w", "test", "key", "phrase", "term", "position", "letter", "question", "attribute", "comment", "won", "user", "block", "chain", "char", "tag", "text", "form", "password", "str", "window", "token", "point", "line", "name", "words", "W", "string", "document", "pattern", "train", "wl", "piece", "label", "input", "message", "frame", "sword", "vector", "event"], "i": ["yi", "bi", "multi", "si", "ti", "ai", "ip", "it", "iu", "ie", "um", "status", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "this", "iri", "wi", "mi", "point", "v", "ini", "ci", "y", "id", "sim", "ia", "name", "io", "uri", "oi", "iq", "I", "ind", "ij", "me", "init", "m", "ami", "index", "ki", "\u0438", "mu", "ii", "gi", "info", "us", "ims", "eu", "is", "li", "ex", "hi", "ui", "ji", "cli", "ix", "im", "ic", "phi", "ri"], "j": ["jo", "oj", "bj", "obj", "jc", "J", "json", "s", "right", "pt", "key", "fr", "user", "l", "dj", "jas", "k", "jj", "aj", "jl", "el", "jp", "son", "uj", "js", "g", "ion", "note", "v", "ja", "y", "bot", "ng", "on", "err", "h", "ph", "ij", "q", "je", "kj", "m", "br", "z", "job", "other", "jump", "ev", "ji", "n", "ge", "kh", "mn"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\t// \u5165\u529b\u5024\u306e\u53d6\u5f97\\n\t\tString S = sc.next();\\n\t\t\\n\t\t// \u7d50\u679c\u306e\u51fa\u529b\\n\t\tStringBuilder sb = new StringBuilder();\\n\t\tfor (int i = 0; i < S.length(); i++) {\\n\t\t\tsb.append(\"x\");\\n\t\t}\\n\t\tSystem.out.println(sb.toString());\\n\t\t\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "122", "substitutes": {"sc": [" scr", "ch", "sw", "src", "sk", "cr", "Sc", "c", "bc", "sys", "SC", " Sc", "rc", " SC", "gc", "scan", " ss", "nc", "system", "cs", " sk", "sq", "pc", "dc", " sp", "sa", "sv", "sp"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\nclass Main{\\n    public static void main(String[] args) throws IOException {\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        StringTokenizer st  = new StringTokenizer(br.readLine());\\n\\n        int A = Integer.parseInt(st.nextToken());\\n        int B = Integer.parseInt(st.nextToken());\\n        int H = Integer.parseInt(st.nextToken());\\n        int M = Integer.parseInt(st.nextToken());\\n\\n        int mins = 60*H+M;\\n\\n        double M_angle = M*6;\\n        double H_angle = mins*0.5;\\n\\n        double x1 = A*Math.cos(Math.toRadians(H_angle));\\n        double y1 = A*Math.sin(Math.toRadians(H_angle));\\n        double x2 = B*Math.cos(Math.toRadians(M_angle));\\n        double y2 = B*Math.sin(Math.toRadians(M_angle));\\n\\n        System.out.println(Math.sqrt((x2-x1)*(x2-x1)  + (y2-y1)*(y2-y1)));\\n\\n\\n\\n    }\\n\\n}", "target": "86", "substitutes": {"br": ["wr", "ber", "bi", "bl", "hr", "bb", "ch", "BR", "sb", "Br", "vr", "mr", "fr", "tr", "buf", "dr", "browser", "bd", "cr", "str", "r", "bh", "bf", "yr", "bt", "boot", "sp", "bridge", "lr", "sr", "bp", "rb", "bm", "pr", "sh", "be", "bro", "bn", "ro"], "st": ["tt", "ft", "sy", "nd", "ste", "ost", "sts", "sb", "std", "s", "mt", "set", "pt", "sm", "fr", "spe", "sty", "ld", "const", "th", "stri", "ast", "ust", "str", "nt", "ST", "sth", "bt", "cont", "start", "h", "sn", "inst", "obj", "nl", "rest", "cl", "sl", "ss", "sam", "stable", "storage", "sta", "usr", "t", "ist", "St", "stat", "ct", "desc", "sv", "sp", "est"], "A": ["AB", "S", "At", "NA", "Al", "AT", "D", "T", "AF", "E", "OA", "AC", "AI", "Y", "As", "P", "HA", "AS", "RA", "AD", "AH", "CA", "ASC", "SA", "AV", "ACC", "C", "X", "AE", "AR", "a", "I", "G", "AA", "R", "AL", "IA", "GA", "AP", "L", "AU", "AM", "N", "API", "AST", "AN", "An"], "B": ["AB", "Bs", "BR", "J", "BB", "BER", "RB", "BA", "T", "E", "b", "IB", "VB", "Y", "BY", "P", "BT", "TB", "V", "Bi", "BO", "C", "SB", "BC", "WB", "W", "NB", "G", "I", "BE", "BI", "R", "BS", "Bar", "LB", "PB", "BL", "BM", "L", "JB", "GB", "N", "O", "DB"], "H": ["HE", "J", "D", "HH", "HR", "T", "E", "Height", "HI", "HO", "MH", "Y", "OH", "P", "HA", "HM", "V", "TH", "HB", "X", "He", "W", "h", "HS", "G", "His", "HT", "Hours", "HL", "L", "N", "O", "Hour"], "M": ["S", "MP", "J", "D", "T", "TM", "E", "K", "MH", "Y", "MT", "Z", "P", "MS", "V", "DM", "C", "X", "W", "MC", "G", "I", "PM", "m", "R", "MI", "MM", "L", "F", "AM", "MAN", "N", "O", "CM"], "mins": ["ms", "ians", "mad", "Apr", "s", " minutes", "angles", "lim", "ds", "max", "GES", "radius", "mA", "locks", "ins", "Ms", "Ma", "INS", "RES", "js", "MS", "Mr", "min", "res", "HS", "limits", "ANS", "Rs", "m", "Hours", "values", "mers", "MIN", "minus", "Min", "NS", "mind", "hours"], "M_angle": ["H_hash", "M_hash", "M___angular", "M__style", "M_style", "H__angular", "H__angle", "M__angles", "H_number", "M_ang", "M_time", "M_angular", "M2hash", "M___angle", "M___hash", "H__style", "MC___hash", "H_angular", "M_angles", "M__radius", "M__number", "MC___ang", "MC___time", "M_radius", "H_style", "MC_hash", "MC_angle", "H__hash", "M_number", "H_radius", "M2angle", "M__hash", "M___number", "M___ang", "H_angles", "M__angular", "MC___angle", "M__angle", "M2radius", "M___style", "M___time", "MC_time", "MC_ang", "H__number", "H__angles", "H__radius", "M2angles"], "H_angle": ["Hmmangular", "GH_angle", "Hmmfloat", "H__angle", "H___angular", "H2angles", "Hmmangle", " H_align", "HM_angular", "H___angle", "H___align", "H___angles", "H2file", "H_file", "H64angle", "HM_trade", "Hmmtrade", " H__align", "H___pole", "H_angular", " H_file", "H_pole", "HM_angle", "H__align", "H__file", "HM_float", "H___file", "GH___angular", "H_trade", "GH_pole", " H__angles", " H__angle", "GH___angle", "H_float", "H_angles", "H2angle", "H_align", "H64angular", " H__file", "GH_angular", "H64pole", "GH___pole", " H_angles", "H__angles", "H2align"], "x1": [" x01", " x101", "wx1", " x3", "X3", "ex0", "fxOne", "key0", "key101", "fx2", "X01", "xmlfirst", "ex01", "ex3", "key1", "wx01", "X1", "x01", " xfirst", "wxOne", "xml1", "xml0", "ex1", "keyfirst", "wx2", "X0", "xml101", "xfirst", "xOne", "x3", "x0", "fx1", " xOne", "fx01", "x101", " x0"], "y1": ["yOne", "try1", "long1", "Y1", "z001", "sky001", "try4", "Y4", "y4", "ay1", "skyOne", "z1", "ay512", "skyfirst", "sky1", "zOne", "y512", " y4", "longOne", "ay2", " y512", "yfirst", "try2", "x512", "y001", "Y2", "longfirst", "long001", "zfirst"], "x2": ["tx2", "X2", "rx1", "h2", "ext2", "ex4", "ext1", "h72", "y72", "xtwo", "extwo", "ext4", "exttwo", "ex1", " x4", "ex2", "h1", "x72", " x72", "rxtwo", "rx2", "tx4", "X4", "rx4", "x4"], "y2": ["h52", "h2", "yy2", "ny02", "htwo", "h102", "ny2", "my2", "mytwo", "ytwo", "y02", "cy102", "uy02", "y102", "ay102", "ay02", "y3", " y3", "ay2", "cy02", "y52", "y0", "uytwo", "yy0", "h02", "cytwo", "uy2", "aytwo", "yy3", "cy2", " y0", "nytwo", "h3", "my02", "h0", "yy52", " y52"]}}
{"code": "import java.util.*;\\n\\nclass Main{\\npublic static void main(String[] args){\\nScanner sc = new Scanner(System.in);\\nint x =sc.nextInt();\\nint y=1;\\nfor(int i=0; i<3; i++) y *=x;\\nSystem.out.println(y);\\n}\\n}\\n\\n", "target": "36", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "asc", "mc", "osc", "cr", "Sc", "out", "sel", "c", "sub", "bc", "cc", "sys", "screen", "SC", "conv", "lc", "wx", "usc", "sch", "sec", "gc", "scan", "ss", "cl", "uc", "nc", "system", "cs", "tc", "sq", "pc", "ser", "acc", "capt", "desc", "isc", "scl", "sv", "Scan", "sp", "esc"], "x": ["dx", "mx", "px", " xx", "w", "tx", "xx", "xd", "ax", "xf", "l", "xi", "p", "fx", "xc", "xp", "d", "v", "X", "ox", "h", "wx", "xs", "length", "inx", "rx", "index", "m", "t", "xy", "z", "ex", "width", "n", "ix", "xa"], "y": ["yi", "ies", "ay", "sy", "ot", "dy", "ye", "hot", "yd", "ey", "ady", "yl", "b", "yu", "yer", "Y", "out", "gy", "sky", "my", "cy", "yr", "sys", "v", "ty", "j", "uy", "vy", "yt", "py", "ery", "ya", "iy", "ry", "yo", "oy", "yn", "ny", "ym", "t", "xy", "z", "hy", "yy", "yk", "axy"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "iu", "gu", "ie", "chain", "di", "pi", "qi", "mi", "uu", "ini", "ci", "sim", "id", "err", "j", "I", "ind", "q", "init", "m", "ki", "batch", "ii", "gi", "us", "is", "li", "base", "hi", "ui", "cli", "ix", "sequence", "im", "ic", "phi", "u"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        double a[] = new double[n];\\n        for (int i = 0; i < n; i++) {\\n            a[i] = sc.nextDouble();\\n        }\\n        sc.close();\\n\\n        double sum = 0;\\n        for (int i = 0; i < n; i++) {\\n            sum = sum + 1.0 / a[i];\\n        }\\n\\n        System.out.println(1.0 / sum);\\n    }\\n}\\n", "target": "120", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "arc", "c", "sub", "bc", "cc", "sys", "fc", "ng", "SC", "lc", "rc", "usc", "st", "sch", "sec", "nl", "gc", "cl", "ss", "scan", "pb", "nc", "system", "cs", "tc", "sq", "ck", "uc", "pc", "ctl", "isc", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "nn", "nor", "network", "all", "ll", "o", "l", "np", "k", "ns", "ned", "x", "c", "d", "un", "g", "r", "nt", "v", "no", "nm", "ng", "name", "j", "number", "sn", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "count", "ct", "len", "N", "gn", "p", "mn"], "a": ["ap", "an", "la", "ba", "ab", "da", "at", "ea", "au", "s", "all", "aaa", "b", "aux", "area", "sha", "c", "am", "A", "ia", "ta", "ma", "ao", "va", "tta", "ac", "ae", "ata", "ga", "oa", "sta", "as", "att", "aa", "na", "fa", "sa", "ca", "xa"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "gu", "PI", "chain", "zi", "xi", "di", "pi", "qi", "ei", "this", "mi", "point", "ity", "ini", "ci", "y", "sim", "err", "oi", "iso", "j", "io", "uri", "id", "I", "q", "ij", "init", "iy", "m", "me", "ori", "php", "ki", "\u0438", "batch", "gi", "ii", "info", "us", "ims", "is", "li", "base", "ex", "hi", "ui", "cli", "client", "ji", "inner", "ix", "im", "ic", "history", "phi", "u", "ri"], "sum": ["result", "add", "summary", "size", "si", "total", "vol", "tmp", "cache", "max", "set", "um", " SUM", "diff", "prof", "cum", "out", "mix", "med", "square", "cost", "mass", "black", "score", "sim", "density", "sup", "alpha", "sat", "ass", "Sum", "hash", "good", "ul", "tail", "sam", "ss", "buffer", "stack", "zero", "system", "info", "us", "scale", "full", "count", "su", "num", "sa", "temp", "ums", "other", "match", "mean", "average", "sample"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws Exception {\\n        Scanner stdin = new Scanner(System.in);\\n\\n        int N = stdin.nextInt();\\n        double sum=0;\\n        for(int i=1;i<=N;i++) {\\n        \tif(i%2!=0) {\\n        \t\tsum+=1;\\n        \t}\\n        }\\n        System.out.println(sum/N);\\n    }\\n}\\n", "target": "64", "substitutes": {"stdin": ["rowdIn", " stdIn", "standardin", "sysread", " stdisin", "STDisin", "standardout", "stdout", "rowdisin", "rowdin", "STDout", "sysIn", "STDin", "sysin", "rowdout", "stdisin", " stdread", "sysout", " stdout", "standardread", "stdIn", "standardIn", "stdread", "STDIn"], "N": ["NP", "NI", "NG", "S", "NA", "J", "D", "NV", "T", "NH", "NM", "K", "Net", "H", "Length", "Z", "P", "NT", "V", "M", "Sn", "NO", "Ni", "NE", "Size", "NB", "I", "FN", "TN", "Len", "Sum", "R", "NL", "NR", "NN", "Ns", "Num", "NC", "NS", "L", "B", "GN", "n", "ND", "SN", "AN"], "sum": ["result", "add", "summary", "size", "total", "vol", "sign", "max", "um", "cal", "cum", " summed", "out", "med", "square", "share", "cost", "mass", "score", "black", "must", "sim", "SI", "gram", "carry", "alpha", "sat", "ass", "Sum", "hash", "weight", "sam", "mu", "hum", "zero", "system", "us", "hist", "t", "scale", "acc", "base", "count", "su", "num", "n", "match", "mean", "average"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "iu", "gu", "chain", "l", "xi", "di", "pi", " x", "qi", "x", "ei", "inc", "g", "mi", "ini", "ci", "y", "sim", "id", "span", "j", "uri", "I", "ind", "q", "init", "m", "ki", "ii", "gi", "us", "is", "li", " ii", "hi", "ui", "client", "n", "ji", "cli", "ix", "im", "ic", "phi"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tchar[] c = sc.next().toCharArray();\\n\t\t\\n\t\tSystem.out.println((char)(((int)c[0])+1));\\n\t\t\\n\t\tsc.close();\\n\t}\\n\\n}\\n", "target": "150", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "cam", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "arc", "ko", "sub", "bc", "fc", "cc", "sys", "SC", "lc", "rc", "sch", "sec", "gc", "cl", "ss", "scan", "uc", "nc", "sq", "tc", "cs", "pc", "isc", "desc", "syn", "sh", "capt", "sv", "sp", "esc"], "c": ["ch", "s", "cod", "csv", "chain", "l", "b", "cd", "ec", "char", "xc", "d", "cons", "g", "fc", "cc", "v", "cont", "C", "conv", "lc", "rc", "ac", "gc", "nc", "cs", "cf", "tc", "etc", "con", "dc", "ce", "ca", "ct", "n", "cu", "enc", "unc", "dec", "u"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.InputStreamReader;\\nimport java.io.OutputStream;\\nimport java.io.PrintWriter;\\nimport java.util.ArrayList;\\nimport java.util.Collections;\\nimport java.util.List;\\nimport java.util.StringTokenizer;\\n\\n/**\\n * Built using CHelper plug-in Actual solution is at the top\\n */\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tInputStream inputStream = System.in;\\n\t\tOutputStream outputStream = System.out;\\n\t\tInputReader in = new InputReader(inputStream);\\n\t\tPrintWriter out = new PrintWriter(outputStream);\\n\t\tTask solver = new Task();\\n\t\tsolver.solve(1, in, out);\\n\t\tout.close();\\n\t}\\n\\n\tstatic class Task {\\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\\n\t\t\tint N = in.nextInt();\\n\t\t\tString L = in.next();\\n\t\t\tList<String> list = new ArrayList<>();\\n\t\t\tfor(int i = 0; i < N; i++) {\\n\t\t\t\tlist.add(in.next());\\n\t\t\t}\\n\t\t\tCollections.sort(list);\\n\t\t\tfor(int i = 0; i < N; i++) {\\n\t\t\t\tout.print(list.get(i));\\n\t\t\t}\\n\t\t}\\n\t}\\n\t\\n\tstatic class InputReader {\\n\t\tpublic BufferedReader reader;\\n\t\tpublic StringTokenizer tokenizer;\\n\\n\t\tpublic InputReader(InputStream stream) {\\n\t\t\treader = new BufferedReader(new InputStreamReader(stream), 32768);\\n\t\t\ttokenizer = null;\\n\t\t}\\n\\n\t\tpublic String next() {\\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n\t\t\t\ttry {\\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\\n\t\t\t\t} catch (IOException e) {\\n\t\t\t\t\tthrow new RuntimeException(e);\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn tokenizer.nextToken();\\n\t\t}\\n\\n\t\tpublic int nextInt() {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n\\n\t}\\n}\\n", "target": "224", "substitutes": {"inputStream": ["outputWindow", "sourceSocket", "sourceSteam", "sourceStream", "outputStreamer", "inputSteam", "contextStream", "contextStore", "dataSocket", "outputSocket", "outputStore", "contextSteam", "inputSocket", "inStore", "contextStreamer", "dataStream", "inputWindow", "outputSteam", "inStream", "inStreamer", "inputStreamer", "dataSteam", "inputStore", "dataWindow", "sourceWindow", "inSteam"], "outputStream": ["OutputForm", "outputStreamer", "writeStream", "OutputStream", "writeStreamer", "outSteam", "connectionStream", "writestream", "outputPoint", "connectionstream", "OutputSteam", "OutputPoint", "outStream", "writeSteam", " outputSteam", " outputForm", "outstream", "outputstream", "outputForm", "outputSteam", "writeForm", " outputPoint", "connectionStreamer", "outStreamer", "connectionSteam", "writePoint"], "in": ["en", "In", "local", "from", "all", "re", "l", "or", "ini", "err", "current", "log", "info", "output", "as", "n", "p", "inside", " din", "null", "it", "s", "din", "file", "rin", "run", "ins", "context", "inc", "sin", "on", "h", "q", "init", "con", "raw", "gin", "inf", "inner", "ic", "old", "iter", " IN", "source", "mc", "mm", "rt", "conf", "bin", "el", "r", "io", "ind", "IN", "per", "vin", "is", "cin", "ro", "add", "ai", "by", "form", "get", "config", "isin", "input", "inn", "er", "al"], "out": ["result", "outer", "report", "at", "OU", "null", "it", "console", "set", "check", "s", "w", "file", "pool", "aos", "all", "o", "run", "Out", "table", "user", "l", "flush", "group", "this", "gr", "r", "nt", "end", "v", "sys", "screen", "err", "current", "name", "io", "res", "print", "log", "gc", "write", "OUT", "ou", "output", "os", "cmd", "server", "t", "to", "writer", "exit", "ex", "net", "txt", "client", "n", "inner", "p", "outs"], "solver": ["Solver", " solution", "Sorter", "solution", "resolve", "resolution", " solve", " resolution", "Solve", "solve", " server", " resolve", "Solution", "sorter", " resolver", " reserver", "Server", "tsorter", "server", "tsolution", "tsolver", "resolver", "resorter", "tsolve"], "testNumber": [" testCounter", "testCount", "runCount", "runNumber", "runNo", "TestNumber", "TestCount", "TestNo", "runCounter", "testNo", " testNo", " testCount", "TestCounter", "testCounter"], "N": ["NP", "NI", "NG", "S", "NA", "D", "NM", "NH", "K", "P", "NT", "V", "M", "Sn", "NO", "Ni", "NE", "NB", "I", "Number", "TN", "Len", "CN", "Node", "R", "NL", "NN", "NR", "OUT", "Ns", "Num", "NC", "NS", "GN", "n", "ND", "SN", "AN"], "L": ["Line", "S", "J", "T", "E", "l", "ID", "P", " l", "V", "LE", "Lu", "LI", "M", "C", "X", " T", "W", "I", "R", "NL", "B", "F", " S", "O", "Name", "LIST"], "list": ["order", "add", "pair", "dict", "set", "level", "lat", "pool", "all", "ll", "single", "group", "table", "l", "chain", "del", "form", "def", "left", "coll", "lists", "this", "listed", "parent", "LI", "cont", "collection", "number", "print", "st", "ls", "php", "index", "log", "batch", "stack", "sort", "detail", "ist", "li", "array", "n", "map", "dl", "sequence", "LIST", "entry"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "iu", "ie", "o", "PI", "chain", "l", "xi", "di", "pi", "qi", "ei", "g", "my", "mi", "point", "ity", "ini", "ci", "y", "err", "id", "sim", "j", "io", "f", "iq", "I", "ind", "q", "me", "init", "m", "php", "ami", "index", "ki", "batch", "gi", "ii", "us", "ims", "is", "li", "base", "hi", "ui", "cli", "client", "ji", "n", "ix", "p", "im", "ic", "phi", "u"], "reader": ["Reader", "query", "controller", "ler", "iter", "older", "read", "linger", "builder", "file", "er", "driver", "instance", "dr", "dd", "keeper", "row", "context", "book", "worker", "r", "iterator", "ner", "oder", "rl", "handler", "finder", "parser", "rer", "runner", "rc", "timer", " viewer", "rx", " trainer", "buffer", "loader", "wrapper", "writer", "rr", "input", "inner", " recorder", "rar", " waiter", " ruler", "ro"], "tokenizer": ["okenifier", "okenner", "serialize", "tokenizers", "Tokenener", "okenize", "wordzer", "tokenerer", "wordner", "openifier", "okenizer", " tokenerer", "tagifier", " tokenifier", "wordize", " tokenzer", " tokenize", "okenizers", " tokenization", "serializer", "normalifier", "openizer", "tokenger", "okenener", "Tokenization", "normalener", "tokenifier", "wordizer", "wordifier", "tokenener", "serialifier", "normalize", "Tokenifier", "tokenize", "Tokenger", "serialzer", " tokenger", "openener", "normalizer", "okenerer", "Tokenerer", "tagizers", " tokenizers", "Tokenizer", "tokenzer", "tagner", "Tokenizers", " tokenener", "tagizer", " tokenner", "openize", "okenization", "tokenization", "tokenner", "okenger", "wordener"], "stream": ["null", "console", "zip", "file", "pool", "phrase", "source", "progress", "ream", "channel", "context", "form", "sc", "this", "window", "draw", "iterator", "v", "socket", "proc", "io", "length", "body", "secure", "view", "log", "handle", "stack", "wrapper", "buffer", "down", "output", "continue", "path", "data", "pipe", "input", "sample", "Stream", "history"]}}
{"code": "import java.util.*;\\n\\nclass Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    Set<Integer> d = new HashSet<>();\\n    for (int i = 0; i < n; i++) {\\n        d.add(sc.nextInt());\\n    }\\n    System.out.println(d.size());\\n  }\\n}", "target": "105", "substitutes": {"sc": ["ch", "sw", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "c", "inc", "bc", "cc", "sys", "fc", "SC", "sd", "lc", "rc", "cv", "usc", "sch", "sec", "gc", "cl", "sl", "ss", "pb", "nc", "sq", "tc", "cs", "pc", "ctl", "pl", "capt", "isc", "sh", "scl", "sv", "sp", "esc"], "n": ["nb", "en", "nd", "and", "nn", "nw", "nor", "l", "np", "ns", "nm", "nt", "no", "v", "ng", "j", "sn", "ni", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "N", "gn", "p", "mn"], "d": ["dx", "des", "dt", "da", "md", "dict", "dL", "ds", "D", "fd", "w", "o", "l", "ld", "di", "ded", "bd", "del", "cd", "dd", "defined", "p", "db", "out", "created", "c", "ad", "dat", "done", "sd", "f", "h", "de", "ind", "pd", "t", "data", "dh", "dn", "ed", "dl", "dec"], "i": ["bi", "in", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "gu", "iu", "ie", "xi", "di", "pi", "qi", "x", "out", "ei", "mi", "uu", "ini", "ci", "id", "sim", "j", "a", "I", "q", "init", "m", "ki", "mu", "ii", "gi", "us", "is", "li", "base", "hi", "ui", "cli", "client", "ix", "sequence", "im", "ic", "phi", "u"]}}
{"code": "import java.util.*;\\n\\nclass Main {\\n\tScanner sc;\\n\tString s;\\n\\n\tMain() {\\n\t\tsc = new Scanner(System.in);\\n\t}\\n\t\\n\tvoid calc() {\\n\t\ts = sc.next();\\n\t\tfor (int i = 0; i < s.length(); i++) {\\n\t\t\tchar c = s.charAt(i);\\n\t\t\tif ((i%2)==0) {\\n\t\t\t\tif (c != 'R' && c != 'U' && c != 'D') {\\n\t\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t\t\treturn;\\n\t\t\t\t}\\n\t\t\t} else {\\n\t\t\t\tif (c != 'L' && c != 'U' && c != 'D') {\\n\t\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t\t\treturn;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(\"Yes\");\\n\t}\\n\\n\tpublic static void main(String[] args) {\\n\t\tnew Main().calc();\\n\t}\\n}", "target": "205", "substitutes": {"sc": [" scr", "ch", "sb", "sync", "cle", "asc", " cs", "mc", "osc", " scorer", " cle", "anc", "cr", "ec", "Sc", "inc", " subsc", "bc", "cc", "sys", "SC", "lc", "rc", " SC", "usc", "sch", "sec", "sr", "gc", " cr", " ss", "cl", "scan", "sq", "nc", "cs", "ss", "uc", "pb", "pc", " rc", " unsc", "isc", "capt", "sv", "rs", "sp", "esc"], "s": [" ls", " es", "ses", " inputs", "S", " samples", " self", "ws", "sts", "sb", "ds", " cs", "csv", "bytes", "es", "l", " chars", "ns", "ins", "strings", "bs", " strings", "ts", "js", "str", " str", "ys", "g", "ats", "sys", " ts", "gs", "south", "string", "ls", "fs", " ss", "ss", "sl", "sq", "abs", "cs", "less", "qs", "ims", "sis", "ps", "is", " gets", "sql", " S", "p", "sv", "rs", "hs", "gets"], "i": ["bi", "in", "ms", "multi", "si", "ti", "ai", "ip", "it", "set", "gu", "iu", "ie", "o", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "g", "my", "mi", "point", "ini", "ci", "y", "id", "sim", "oi", "j", "a", "I", "ind", "q", "ij", "init", "me", "m", "index", "ori", "ki", "\u0438", "gi", "ii", "us", "is", "li", "ex", "hi", "ui", "cli", "n", "ji", "ix", "p", "im", "ic", "phi", "u"], "c": ["cp", "cur", "ch", "vc", "cache", "cod", "cat", "mc", "cum", "l", "k", "cmp", "cd", "ec", "char", "arc", "d", "coll", "g", "r", "cos", "bc", "v", "co", "C", "cont", "cc", "fc", "conv", "h", "lc", "rc", "ac", "can", "gc", "cl", "nc", "cs", "tc", "con", "pc", "t", "dc", "z", "ct", "cu", "enc", "unc", "col", "u"]}}
{"code": "import java.util.Scanner;\\n\\n/**\\n * @author ??\\???\\n *\\n */\\npublic class Main {\\n\\n\t/**\\n\t * @param args\\n\t */\\n\tpublic static void main(String[] args) {\\n\t\tScanner scanner = new Scanner(System.in);\\n\t\tint W = scanner.nextInt();\\n\t\tint H = scanner.nextInt();\\n\t\tint x = scanner.nextInt();\\n\t\tint y = scanner.nextInt();\\n\t\tint r = scanner.nextInt();\\n\t\tscanner.close();\\n\t\t\\n\t\tif (((0 + r) <= x) && (x <= (W - 1))\\n\t\t\t\t&& ((0 + r) <= y) && (y <= (H - 1))) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t} else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t}\\n}", "target": "171", "substitutes": {"scanner": [" Scanener", "scanNER", "canner", "canners", "generceptor", "banceptor", "rowner", "canreement", "generlier", "banner", "sanisher", "penener", "canisher", "gatener", "gateer", "banener", "penler", "Scanter", "scanler", "caner", "scanter", "sanener", "scanners", "canener", " scanener", "scanisher", "gateler", "canceptor", "sanner", "Scanator", "rowener", "sanners", "canNER", "Scaner", "canator", " Scanner", "rowter", " Scaner", "gateners", "generener", "scanreement", "Scanner", "sanNER", "canter", " Scanter", "ScanNER", "scanener", "santer", " scaner", "canlier", "canler", "penner", "gateNER", "Scanener", "rowNER", "banlier", "scaner", "scanceptor", "scanlier", "generner", " scanator", "gatereement", "scanator", "Scanisher", "gateener", "penreement", "saner", " scanter"], "W": ["SW", "EW", "VW", "MW", "WR", "w", "WH", "WT", "Width", "WD", "HTML", "Y", "Wh", "V", "WA", "M", "X", "WW", "FW", "WS", "NW", "We", "R", "WC", "DW", "CW", "OW", "RW", "WP", "XP", "Win", "L", "N", "BW", "Week"], "H": ["HE", "J", "D", "HH", "HR", "WH", "T", "NH", "K", "Height", "HI", "HTML", "MH", "Y", "OH", "HC", "HA", "P", "RH", "V", "TH", "M", "C", "X", "He", "CH", "h", "HT", "R", " h", "HQ", "B", "Q", "N", "HK"], "x": ["dx", "mx", "px", "ch", "w", "tx", "lat", "xx", "o", "ax", "xf", "l", "xi", "xt", "fx", "xc", "i", "xp", "el", "left", "window", "X", "ox", "on", "h", "wx", "xs", "rx", "m", "xy", "z", "ex", "width", "n", "ct", "ix", "p", "lex"], "y": ["ies", "ay", "sy", "ch", "iley", "pt", "hot", "lat", "ye", "ey", "o", "l", "yl", "b", "Y", "i", "sky", "my", "cy", "yr", "v", "ht", "ty", "j", "height", "h", "uy", "yt", "py", "iy", "ry", "ya", "yo", "oy", "ny", "ym", "xy", "yet", "z", "client", "n", "yy", "axy", "wy", "lon"], "r": ["result", "e", "right", "vr", "w", "mr", "re", "l", "b", "rd", "k", "dr", "rt", "c", "i", "d", "gr", "nr", "g", "v", "ar", "err", "j", "h", "f", "res", "rc", "q", "ry", "sr", "m", "R", "lr", "attr", "t", "rr", "n", "p", "er", "rs", "rar", "u", "ri"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        MyScanner sc = new MyScanner();\\n\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        int h = sc.nextInt();\\n        int m = sc.nextInt();\\n\\n        double angH = 30 * h + 0.5 * m;\\n        double angM = 6 * m;\\n        double disAng = Math.abs(angH - angM);\\n\\n        if (disAng == 0) {\\n            System.out.println(Math.abs(a - b));\\n            return;\\n        }\\n\\n        double angC = disAng;\\n        if (disAng > 180)\\n            angC = 360 - disAng;\\n        double cosC = Math.cos(Math.toRadians(angC));\\n        double c = a * a + b * b - 2 * a * b * cosC;\\n\\n        System.out.println(Math.sqrt(c));\\n    }\\n\\n    static class MyScanner {\\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1 << 15);\\n        StringTokenizer tokenizer;\\n\\n        String next() {\\n            try {\\n                while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n                    tokenizer = new StringTokenizer(reader.readLine());\\n                }\\n            } catch (IOException ignored) {\\n            }\\n            return tokenizer.nextToken();\\n        }\\n\\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n    }\\n}\\n", "target": "86", "substitutes": {"sc": ["irc", "sharp", "ch", "sync", "asc", "sm", "mc", "osc", "func", "ctrl", "cmp", "cr", "Sc", "ctx", "jp", "inc", "bc", "cc", "sys", "hl", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "pb", "nc", "sq", "tc", "cs", "uc", "pc", "ctl", "dc", "acc", "sa", "isc", "desc", "scl", "sv", "sp", "esc"], "a": ["an", "la", "ba", "ab", "da", "at", "ea", "au", "e", "w", "o", "l", "aaa", "aj", "x", "i", "am", "d", "A", "this", "g", "r", "ar", "ma", "ta", "f", "ao", "ac", "ae", "ga", "oa", "aa", "as", "sta", "t", "apa", "pa", "sa", "aq", "p", "al", "u"], "b": ["nb", "bi", "bl", "ba", "ab", "bb", "ib", "fb", "e", "sb", "s", "w", "o", "eb", "l", "ob", "db", "i", "d", "g", "r", "bc", "v", "y", "bt", "j", "f", "br", "t", "z", "B", "rb", "n", "p", "be", "u"], "h": ["oh", "hr", "ch", "w", "o", "l", "zh", "H", "he", "i", "d", "hm", "g", "r", "v", "hd", "y", "ht", "j", "hh", "rh", "ha", "ho", "hw", "t", "dh", "hz", "z", "hi", "n", "sh", "ih", "p", "hal", "kh"], "m": ["ms", "e", "md", "s", "mt", "w", "cm", "sm", "mm", "o", "l", "k", "pi", "x", "i", "am", "d", "hm", "g", "r", "mi", "pm", "v", "M", "y", "j", "f", "mu", "dm", "t", "z", "bm", "n", "em", "p", "mn"], "angH": ["angh", "langH", "angleHT", "angA", "angleA", "angP", "ANGA", "angleH", "ANGHT", "ungHL", " angHT", "angleM", "strHL", "langHL", "langP", "ungh", "ungP", " angA", "strP", "ANGH", "langh", "ungH", "angHT", "ANGM", "strh", "strH", "angHL"], "angM": ["waveMat", "angleS", "langT", "angMat", "annMI", "langM", "ungMat", "ANGT", "langW", "annH", "ANGW", "angleM", "langS", "ungM", "angleT", "waveM", "ungMI", "angMI", "angleW", "annM", "waveH", "waveMI", "angT", "ungH", "ANGS", "ANGM", "angW", "annMat", "angS"], "disAng": [" disCirc", "discArc", "disEl", "discAg", "disAnn", " disMag", "diAng", "failArc", "diAnn", "failang", "discMod", " DisAnn", "discang", "relang", " disEl", "disAg", "badAnn", "badR", " DisMag", " disR", "discAng", "DisANG", "diR", "DisArc", "disArc", "relAng", "disCirc", "discAnn", "discANG", "Disang", "disang", "relCirc", "DisAng", "failANG", "disANG", "discEl", "failAng", "disMod", "badArc", "disR", "devMag", "devEl", "relMod", "discMag", " DisAng", "diArc", " disAg", "disMag", " disang", "devAng", "devAg", " disMod", " disArc", "discCirc", " disAnn", "badAng"], "angC": ["magc", "AngC", "langG", "cosT", "langT", "magM", "magC", "cosL", "banC", "langM", "cosG", "gateL", "angCh", "cosM", "langCS", "magL", "gateC", "banCS", "angc", "angG", "AngCh", "auC", "langCh", "langCH", "AngCH", "AngCS", "banCH", "auG", "banCh", "angCS", "angCH", "cosc", "auT", "angL", "angT", "gateM", "langC", "auM", "gatec"], "cosC": [" cosL", "acAC", "cssCC", " cosCC", "cinC", "cosL", "cssB", "cosM", "consC", "acC", "cinc", "cosAC", "cinM", "cssL", "mosC", "mosCC", "acM", "cosB", "cssC", "consAC", "mosB", "mosL", "cosCC", "consc", "cinAC", "acc", "cosc", " cosB", "consM"], "c": ["abc", "toc", "cp", "e", "csv", "cum", "l", "k", "const", "crit", "cd", "ec", "conf", "arc", "cr", "d", "g", "r", "cos", "v", "fc", "C", "cont", "conv", "cu", "lc", "rc", "ac", "cz", "uc", "tc", "cf", "etc", "con", "t", "dc", "cn", "count", "ct", "n", "p", "unc", "u"], "reader": ["Reader", "in", "iter", "console", "anger", "random", "read", "ro", "file", "builder", "rd", "row", "window", "r", "iterator", "ner", "rl", "handler", "rer", "parser", "runner", "rc", "document", "service", "rx", "rator", "loader", "buffer", "draft", "upper", "writer", "rr", "stream", "input", "redo", "inner", "er", "rar", "ri"], "tokenizer": [" tokenifer", "okenifier", "Tokener", "tokenisher", "okenner", "tokenizers", "okenizer", " tokenifier", " tokenzer", " tokener", "personalifer", "kinisher", "tokeniser", "okenizers", " tokenization", "serializer", "serialer", "okeniser", " tokeniser", "okenifer", "tokenifier", "kinifer", "serialifier", "okenzer", "Tokenifier", " tokenizers", "personalizer", "Tokenizer", "tokenzer", "okenisher", "Tokenzer", "Tokenizers", "personalization", "kinizer", " tokenner", " tokenisher", "personalifier", "serialner", "okenization", "tokenization", "kinzer", "tokener", "tokenner", "okener", "tokenifer", "Tokeniser"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int size = 0, time = 0, minij, b = 0;\\n        size = sc.nextInt();\\n        int[] a = new int[size];\\n        for (int i = 0; i < size; i++) {\\n            a[i] = sc.nextInt();\\n        }\\n        for (int v = 0; v < size; v++) {\\n            minij = v;\\n            for (int w = v; w < size; w++) {\\n                if (a[w] < a[minij]) minij = w;\\n            }\\n            if (v != minij) {\\n                b = a[v];\\n                a[v] = a[minij];\\n                a[minij] = b;\\n                time++;\\n            }\\n        }\\n\\n        for (int k = 0; k < size; k++) {\\n            System.out.print(a[k]);\\n            if (k != (size - 1)) System.out.print(\" \");\\n        }\\n        System.out.print(\"\\n\");\\n        System.out.println(time);\\n\\n\\n    }\\n}\\n\\n", "target": "199", "substitutes": {"sc": ["ch", "sb", "sync", "sw", "mc", "anc", "cr", "Sc", "sci", "c", "ctx", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "st", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "pb", "nc", "system", "cs", "tc", "sq", "ck", "se", "pc", "ctl", "ser", "isc", "scl", "sv", "sp", "esc"], "size": ["SIZE", "si", "space", "total", "sid", "set", "max", "network", "empty", "s", "position", "now", "send", "l", "see", "mode", "sum", "scope", "context", "c", "window", "g", "large", "dimension", "owner", "type", "global", "id", "start", "name", "span", "height", "member", "Size", "shape", "sn", "length", "capacity", "number", "win", "sv", "south", "index", "use", "any", "zero", "zone", "se", "t", "scale", "z", "count", "num", "code", "len", "n", "city", "sh", "year", "ze", "small", "ize", "sym"], "time": ["runtime", "delay", "total", "port", "set", "TIME", "now", "depth", "Time", "tim", "clock", "counter", "context", "window", "trace", "speed", "version", "point", "date", "type", "id", "start", "height", "change", "process", "length", "timer", "duration", "m", "transform", "times", "info", "system", "tc", "task", "ime", "t", "timeout", "offset", "count", "tree", "message", "code", "year", "sequence", "history", "second"], "minij": ["maxij", "smalliji", "minrel", "Minrel", "mainij", "aminijk", "Minijk", "solijk", "mintiji", "smalliyah", "aminisch", "meanijk", "minimumiji", "minimumimir", "aminij", "minimumrel", "smallij", "minimumj", "minijk", "maxijk", "minisch", "smallija", "meanji", " minj", "maxji", "miniyah", "MinIJ", "minIJ", " minijk", "Minji", "mintiyah", "mintij", "minimir", "minimumattr", "Minik", "mainik", "solimir", "modimir", "mainijk", "minji", "miniq", "soliji", "smallijk", " miniq", "minattr", " minik", "modiji", "minija", " minisch", "minik", "smallisch", "aminija", "minimumij", "meanij", "solij", "smalliq", "mintiq", "Minij", " minattr", "miniji", "maxik", " minrel", " miniji", "minj", "mainji", "minimumijk", " minija", "minimumIJ", "Minattr", "Minj", " miniyah", "modij", " minIJ", "modijk", "meanik", " minji"], "b": ["nb", "bi", "ba", "ab", "bl", "be", "bb", "fb", "ib", "ch", "sb", "wb", "erb", "eb", "l", "bs", "gb", "bin", "c", "bg", "g", "r", "bh", "bc", "bf", "y", "j", "f", "h", "pb", "bis", "br", "t", "base", "z", "B", "rb", "u"], "a": ["ap", "an", "aff", "la", "ba", "ab", "eas", "da", "at", "ea", "ai", "au", "e", "s", "ace", "ee", "all", "o", "l", "aaa", "changes", "area", "p", "ache", "c", "am", "A", "era", "g", "act", "r", "ar", "ia", "ma", "f", "h", "ao", "ack", "app", "ac", "ae", "le", "alpha", "m", "aw", "ata", "ga", "oa", "aa", "as", "att", "t", "na", "apa", "array", "sta", "sa", "ca", "xa", "ava"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "iu", "ie", "o", "xi", "di", "ins", "pi", "x", "iri", "my", "mi", "ini", "ci", "y", "sim", "id", "j", "iq", "inter", "ind", "I", "q", "init", "me", "ami", "m", "ori", "ii", "info", "us", "li", "ex", "hi", "ui", "client", "cli", "ix", "p", "im", "ic", "phi", "u", "ri"], "v": ["nv", "val", "av", "var", "vt", "ve", "vc", "vol", "vector", "port", "e", "vr", "lv", "l", "ver", "vv", "wire", "vert", "vp", "qv", "x", "el", "c", "ov", "iv", "get", "window", "g", "vi", "vs", "version", "V", "y", "current", "j", "conv", "h", "f", "nov", "va", "cv", "vy", "vu", "value", "m", "view", "vm", "tv", "t", "ev", "vo", "n", "pr", "p", "sv", "vis", "uv", "u", "qu"], "w": ["wr", "wo", "ws", "nw", "sw", "wk", "wb", "wp", "wt", "ww", "x", "tw", "window", "work", "ew", "y", "we", "W", "h", "wh", "win", "wx", "word", "kw", "wa", "fw", "aw", "rw", "wl", "hw", "wal", "writer", "wall", "z", "widget", "iw", "width", "wat", "wid", "wd", "wi"], "k": ["add", "ka", "kl", "kr", "ke", "kn", "wk", "kind", "sk", "ark", "key", "kid", "K", "ijk", "ko", "x", "ks", "ikk", "isk", "g", "ik", "ek", "kar", "kt", "ask", "ku", "y", "ick", "ak", "j", "ind", "ac", "kw", "q", "kk", "m", "mk", "kj", "km", "ck", "tc", "tk", "acc", "z", "dk", "n", "unk", "uk", "kh", "u"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\n/**\\n * Created by khrom on 2017/06/29.\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        List<String> nums = new ArrayList<>();\\n        int index = scanner.nextInt();\\n        for (int i = 0; i < index; i++) {\\n            nums.add(scanner.next());\\n        }\\n        StringBuilder strb = new StringBuilder();\\n        for (int i = nums.size() - 1; i >= 0; i--) strb.append(nums.get(i) + \" \");\\n        strb.deleteCharAt(strb.length() - 1);\\n        System.out.println(strb.toString());\\n    }\\n}", "target": "79", "substitutes": {"scanner": ["canner", "caninner", "spening", "speter", "spener", "Scanter", "Scanning", "scner", "scanter", "Scaninner", "canener", " scanener", "scener", "scter", "scer", "scanning", "Scaner", "speener", "Scanner", "canter", "scanener", "scaninner", " scaner", "Scanener", "scaner", "canning", " scanter", " scaninner"], "nums": ["renoms", "Nums", " Nernels", "cumbers", "cums", "nals", "snoms", " nernels", "snumbers", "nuers", "Nuers", " noms", " nuers", " Noms", "snals", "numbers", " Nums", "renum", "Noms", "cuers", "nernels", "Nals", "Numbers", "noms", " Numbers", " num", "snums", "Num", "coms", "Nernels", "num", "renums", " numbers", " nals", "renumbers"], "index": ["size", "list", "loop", "si", "total", "open", "condition", "available", "foot", "level", "Index", "position", "all", "connect", "prime", "loc", "context", "x", "amount", "ion", "find", "address", "height", "error", "pos", "number", "shape", "capacity", "ind", "length", "active", "body", "initial", "connected", "zero", "head", "connection", "offset", "localhost", "count", "n"], "i": ["multi", "si", "ip", "PI", "chain", "zi", "di", "c", "my", "point", "ini", "err", "me", "iy", "info", "ski", "hi", "n", "phi", "it", "ie", "o", "qi", "x", "y", "sim", "uri", "q", "init", "ori", "asi", "gi", "ii", "us", "cli", "ji", "ic", "ri", "bi", "ms", "iu", "gu", "uli", "ei", "g", "j", "io", "a", "ni", "I", "ind", "print", "mu", "t", "is", "li", "ui", "client", "ix", "yi", "ti", "ai", "e", "xi", "pi", "mi", "ci", "m", "ki", "\u0438", "ims", "im", "u"], "strb": ["STRgb", "collb", "divl", " strl", "Strsb", " strmb", "Strba", " strgb", "prfb", "strmb", "strsb", "prb", "instab", "strxb", " strB", "stnb", "instsb", " strfb", "strrb", "strba", "instb", " strxb", "schesb", "strl", "strbt", "STRmb", "collfb", "stb", "scheB", "divnb", "Strmb", " strrb", "STRb", " strba", "divb", "strfb", "prbt", " strbt", "collxb", "strab", "stl", "strB", "Strab", "scheb", "divrb", "Strb", "instba", "solb", "solB", "solsb", " strab", "Strbt", "strgb", "schebt", "solbt", "StrB", "STRB", " strsb", "strnb", " strnb", "collbt", "Strgb", "prxb"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int t = scanner.nextInt();\\n        int ans = t+(int)Math.pow(t,2)+(int)Math.pow(t,3);\\n        System.out.println(ans);\\n    }\\n}", "target": "162", "substitutes": {"scanner": ["canner", "Scanter", "caner", "scner", "scanter", "canener", " scanener", "scener", "scter", "scer", "Scaner", "Scanner", "canter", "scanener", " scaner", "Scanener", "scaner", " scanter"], "t": ["tt", "vt", "ot", "at", "dt", "total", "it", "mt", "time", "pt", "T", "term", "o", "l", "tr", "rt", "out", "i", "c", "ts", "d", "g", "trace", "v", "type", "tp", "ty", "ta", "j", "f", "h", "st", "m", "tm", "tu", "te", "typ", "task", "tk", "to", "z", "tree", "n", "temp", "p"], "ans": ["asks", "an", "angs", "uns", "ars", "anks", "ms", "ents", "names", "s", "orts", "rans", "aps", "fts", "ann", "ins", "ns", "aus", "ks", "ces", "ts", "pan", " scans", "arts", "vs", "ats", "nets", "anners", "anes", "ates", "ants", "posts", "ANS", "can", "gs", "ls", "ads", "orders", "lan", "as", "offs", "books", "amps", "ens", "outs", "ols", "ids", "eds"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tint[] input = new int[N + 1];\\n\t\tfor (int i = 1; i <= N; i++) {\\n\t\t\tint tmp = sc.nextInt();\\n\t\t\tinput[i] = tmp;\\n\t\t}\\n\t\tint index = 1;\\n\t\tint res = 0;\\n\t\twhile (index != 2) {\\n\t\t\tif (input[index] == 0) {\\n\t\t\t\tSystem.out.println(-1);\\n\t\t\t\tSystem.exit(0);\\n\t\t\t}\\n\t\t\tint tmp = input[index];\\n\t\t\tinput[index] = 0;\\n\t\t\tindex = tmp;\\n\t\t\tres++;\\n\t\t}\\n\t\tSystem.out.println(res);\\n\\n\t}\\n}\\n", "target": "175", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "c", "ctx", "inc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "system", "nc", "tc", "cs", "sq", "ck", "pc", "ser", "ctl", "isc", "desc", "scl", "sv", "sp", "esc"], "N": ["NP", "NI", "S", "NA", "J", "D", "T", "NH", "NM", "K", "No", "Net", "Z", "P", "A", "NT", "V", "M", "C", "X", "Sn", "NO", "Ni", "NE", "Size", "NB", "I", "TN", "Len", "R", "NR", "NN", "Ns", "Num", "Total", "NC", "NS", "L", "GN", "n", "ND", "SN"], "input": ["update", "query", "in", "add", "list", "missing", "qa", "ip", "hidden", "Input", "img", "it", "up", "null", "set", "dict", "position", "source", "all", "sequence", "image", "sum", "save", "accept", "context", "out", "form", "cache", "get", "parse", "act", "internal", "load", "current", "config", "where", "length", "quick", "active", "back", "q", "print", "exec", "view", "initial", "command", "buffer", "info", "output", "storage", "help", "raw", "att", "data", "request", "queue", "inner", "control", "history", "wait"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "ri", "ie", "l", "zi", "di", "pi", "qi", "x", "my", "mi", "v", "ini", "uu", "ci", "y", "id", "sim", "j", "io", "uri", "iq", "I", "ind", "me", "m", "ori", "mu", "ii", "gi", "t", "li", "hi", "ui", "client", "n", "cli", "ji", "inner", "ix", "im", "ic", "phi", "wi"], "tmp": ["mp", "tt", "nb", "old", "result", "size", "obj", "buff", "ip", "pkg", "src", "emp", "max", "test", "next", "term", "table", "np", "cmp", "jj", "pointer", "prime", "loc", "rt", "out", "ctx", "nr", "ptr", "my", "nt", "ref", "uu", "pro", "comp", "ret", "start", "j", "td", "pos", "inter", "ind", "length", "st", "m", "mk", "sam", "buffer", "stable", "mb", "tc", "t", "offset", "count", "net", "txt", "temp", "sample", "yy", "orig", "sp"], "index": ["list", "si", "loop", "success", "set", "Index", "diff", "position", "depth", "re", "chain", "prime", "out", "seek", "unit", "addr", "find", "point", "current", "process", "length", "view", "exp", "slice", "select", "path", "offset", "location", "val", "result", "open", "level", "run", "x", "ctx", "search", "example", "server", "request", "reset", "update", "iter", "next", "key", "state", "row", "ref", "address", "pos", "number", "ind", "thread", "zero", "head", "timeout", "count", "ix", "sequence", "check", "test", "instance", "loc", "prefix", "seed", "trace", "id", "start", "range", "cond", "page", "full", "num", "mount"], "res": ["result", "ms", "results", "resp", "success", "max", "resolution", "tx", "status", "rem", "re", "expr", "progress", "Res", "req", "sum", "vals", "out", "x", "RES", "def", "cons", "rez", "r", "nt", "ref", "rev", "ret", "j", "conv", "pos", "rss", "process", "terms", "ind", "reg", "init", "has", "rest", "cond", "arr", "zero", "ps", "rand", "stock", "ex", "num", "count", "val", "rs", "reset"]}}
{"code": "\\nimport java.util.Scanner;\\n\\nclass Main {\\n\tpublic static void main(String args[]){\\n\t\t\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\t//\u6574\u6570\u306e\u6570n\u3092\u53d7\u3051\u53d6\u308b\\n\t\tString s1 = sc.next();\\n\t    int n = Integer.parseInt(s1);\\n\t    int a[] = new int[n];\\n\t    long sum = 0;\\n\t    \\n\t    //\u6574\u6570n\u304c\u6761\u4ef6\u306b\u3042\u3063\u3066\u3044\u308b\u304b\u78ba\u8a8d\\n\t    if(0 <= n && n <= 10000){\\n\t    \\n\t        //n\u56de\u3001\u6574\u6570\u3092\u8aad\u307f\u53d6\u308a\u3001\u914d\u5217\u306b\u5165\u308c\u308b\\n\t        for(int i = 0; i <= n-1; i++){\\n\t        \tString s2 = sc.next();\\n\t\t        int j = Integer.parseInt(s2);\\n\t\t        \\n\t\t        //\u5165\u529b\u3055\u308c\u305f\u6574\u6570\u304c\u6761\u4ef6\uff08\u2212\uff11\uff10\uff10\uff10\uff10\uff10\uff10\u304b\u3089\uff11\uff10\uff10\uff10\uff10\uff10\uff10\uff09\u5185\u304b\u78ba\u8a8d\\n\t\t        if(-1000000 <= j && j <=1000000){\\n\t\t            a[i] = j;\\n\t\t        }\\n\t        }\\n\t    \\n\t        //\u914d\u5217\u306e\uff10\u756a\u76ee\u306b\u5927\u304d\u306a\u6570\u3001\u6700\u5f8c\u306b\u5c0f\u3055\u306a\u6570\u304c\u6765\u308b\u3088\u3046\u306b\u4e26\u3079\u5909\u3048\u308b\\n\t        for(int i = 0; i <= a.length-1; i++){\\n\t        \tfor(int j = 0; j <= a.length-2; j++){\\n\t    \t\t    if(a[j] < a[j+1]){\\n\t    \t\t    \t    int w = a[j];\\n\t    \t\t    \t    a[j] = a[j+1];\\n\t    \t\t    \t    a[j+1] = w;\\n\t    \t    \t}\\n\t    \t    }\\n\t        }\\n\t    \\n\t        //\u914d\u5217\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u6574\u6570\u306e\u5408\u8a08\u3092\u8a08\u7b97\\n\t        for(int i = 0; i < a.length; i++){\\n\t    \t    sum = sum + (long)a[i];\\n\t        }\\n\t    }\\n\t    \\n\t    //\u6700\u5c0f\u5024\u3001\u6700\u5927\u5024\u3001\u5408\u8a08\u3092\u8868\u793a\\n\t    System.out.println(a[a.length-1] + \" \" + a[0] + \" \" + sum);\\n\t}\\n}", "target": "21", "substitutes": {"sc": [" scr", "ch", "sw", "sk", "cr", "Sc", "c", "bc", "sys", "SC", " Sc", "rc", " SC", "gc", "scan", " ss", "uc", "cl", "nc", "system", "cs", " sk", "pc", "dc", "na", " sp", "sa", "sp"]}}
{"code": "import java.util.Scanner;\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n\t\twhile(true){\\n            String x = sc.next();\\n\t\t\tint ans = 0;\\n\t\t\tif(x.equals(\"0\")){\\n\t\t\t\tbreak;\\n\t\t\t}else{\\n\t\t\t\tfor(int i=0; i<x.length(); i++){\\n\t\t\t\t\tans += Integer.parseInt(String.valueOf(x.charAt(i)));\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tSystem.out.println(ans);\\n\t\t}\\n\t}\\n}\\n\\n", "target": "144", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "sub", "dec", "bc", "cc", "sys", "fc", "ok", "SC", "conv", "lc", "usc", "sec", "sch", "gc", "cl", "scan", "uc", "nc", "sq", "tc", "cs", "rec", "pc", "dc", "isc", "desc", "syn", "sh", "scl", "sv", "sp", "esc"], "x": ["mx", "px", "nex", "hello", "tx", "w", "xe", "xx", "xd", "lat", "ax", "xf", "pe", "l", "xi", "xt", "xc", "fx", "xp", "xes", "g", "ux", "v", "co", "news", "y", "X", "xb", "ox", "h", "wx", "xs", "xxxx", "ya", "inx", "rx", "xml", "php", "xy", "z", "ex", "pl", "xxx", "ct", "ix", "xa", "rex", "lex"], "ans": ["an", "acs", "uns", "ars", "anks", "ms", "ians", "ents", "yes", "ups", "rans", "orts", "ds", "aps", "obs", "ows", "ann", "actions", "ons", "ns", "ins", "outs", "aus", "ks", "powers", " scans", "pan", "arts", "vs", " means", "vers", "ats", "nets", "oss", "lets", "ends", "anes", "ants", "eps", "xs", "posts", "ANS", "ads", "ls", " beans", "ams", "ions", "lan", "cs", " spans", "offs", "ums", "amps", "ens", "AN", "ids", "eds"], "i": ["yi", "bi", "uni", "multi", "ms", "si", "ti", "ai", "ip", "it", "iu", "ie", "gu", "o", "PI", "zi", "xi", "di", "pi", "qi", "ei", "my", "mi", "ini", "ci", "y", "sim", "span", "j", "io", "uri", "ni", "I", "q", "init", "ami", "m", "ki", "\u0438", "mu", "gi", "ii", "us", "ims", "eu", "is", "li", "hi", "ui", "cli", "ji", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.Scanner;\\n \\npublic class Main { //\u30af\u30e9\u30b9\u540d\u306fMain\\n    public static void main(String[] args) {\\n    Scanner scan = new Scanner(System.in);\\n    String n = scan.next();\\n    String d = scan.next();\\n    int N = Integer.parseInt(n);\\n    int D = Integer.parseInt(d);\\n    \\n    int ans = (N + 2*D) / (2*D +1);\\n    \\n    System.out.println(ans);\\n \\n \\n    }\\n}", "target": "238", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint A = Integer.parseInt(sc.next());\\n\t\tint B = Integer.parseInt(sc.next());\\n\t\tsc.close();\\n\\n\t\tint ans = 0;\\n\t\tint num = 1;\\n\t\twhile(num < B) {\\n\t\t\tans++;\\n\t\t\tnum = A * ans - (ans - 1);\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n\\n}\\n", "target": "101", "substitutes": {"sc": ["ch", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "arc", "c", "ko", "sub", "inc", "cgi", "bc", "cc", "sys", "fc", "SC", "lc", "rc", "usc", "sec", "sch", "nl", "gc", "scan", "cl", "ss", "uc", "nc", "system", "cs", "tc", "sq", "ck", "se", "pc", "ctl", "dc", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "A": ["AB", "S", "NA", "This", "D", "BA", "AF", "K", "AC", "U", "AI", "As", "P", "RA", "AD", "CA", "SA", "AV", "M", "ACT", "C", "X", "NUM", "AR", "a", "G", "AA", "AL", "Num", "AP", "L", "AM", "N", "AST", "Ax", "AN", "An"], "B": ["AB", "Bs", "S", "BR", "BU", "J", "BB", "D", "BA", "T", "CB", "E", "b", "IB", "VB", "Y", "Z", "P", "TB", "V", "M", "C", "SB", "BC", "NB", "G", "I", "BI", "R", "EB", "LB", "BL", "L", "F", "N"], "ans": ["asks", "an", "uns", "ars", "ians", "ms", "mas", "results", "names", "users", "s", "blocks", "beans", "um", "aps", "images", "ann", "actions", "ons", "sum", "ins", "ns", "AN", "aus", "ones", "vals", "ks", "ran", "mn", "cons", "lines", "vers", "ats", "nets", "ends", "runs", "rows", "ants", "xs", "posts", "ANS", "gs", "can", "ls", "orders", "scan", "files", "cats", "cs", "nan", "Num", "ims", "na", "offs", "ums", "n", "amps", "ens", "outs", "pages", "ids"], "num": ["an", "nb", "en", "add", "mult", "multi", "nn", "non", "umi", "snap", "um", "ord", "msg", "cal", "ann", "ver", "np", "tim", "sum", "ns", "x", "un", "nm", "no", "NUM", "span", "sim", "name", "pos", "number", "nom", "m", "index", "mon", "nu", "scan", "go", "zero", "begin", "Num", "con", "na", "count", "ums", "su", "n", "inn", "N", "mark", "mean", "uni", "mn"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String args[]) throws Exception {\\n        Scanner s = new Scanner(System.in);\\n        int n = s.nextInt();\\n        int y = s.nextInt();\\n        boolean f = false;\\n        int i = 0;\\n        int j = 0;\\n        int k = 0;\\n        for (i = 0; i <= n; i++) {\\n            for (j = 0; j <= (n - i); j++) {\\n                k = n - i - j;\\n                if (y == 10000 * i + 5000 * j + 1000 * k) {\\n                    if (n == i + j + k ) {\\n                        f = true;\\n                        break;\\n                    }\\n                }\\n            }\\n            if (f) {\\n                break;\\n            }\\n        }\\n        if (f) {\\n            System.out.println(i + \" \" + j + \" \" + k);\\n        } else {\\n            System.out.println(\"-1 -1 -1\");\\n        }\\n    }\\n}", "target": "133", "substitutes": {"s": ["ses", "ms", "S", "ws", "sts", "sb", "utils", "sw", "sm", "es", "ns", "ins", "c", "ts", "js", "ys", "g", "sys", "ats", "conv", "h", "xs", "gs", "south", "fs", "ls", "aws", "sam", "ss", "abs", "self", "sq", "less", "os", "se", "ims", "is", "sa", "p", "sv", "rs", "hs"], "n": ["nb", "en", "in", "size", "nn", "e", "w", "ll", "o", "l", "np", "ns", "pi", "x", "out", "c", "d", "nr", "g", "r", "nt", "v", "ng", "on", "a", "sn", "ni", "h", "nu", "m", " N", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "len", "N", "gn", "p", "mn"], "y": ["sy", "ot", "ch", "o", "l", "b", "pi", "Y", "by", "x", "out", "c", "sky", "g", "r", "ly", "cy", "yr", "v", "sys", "my", "ty", "a", "h", "py", "ry", "m", "yn", "oy", "ny", "t", "xy", "z", "yy", "p", "er"], "i": ["bi", "in", "multi", "si", "at", "ti", "ai", "e", "ip", "it", "iu", "ie", "ir", "o", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "iri", "ik", "mi", "v", "ini", "ci", "sim", "ia", "a", "I", "ind", "ij", "ql", "ami", "m", "index", "ki", "ii", "gi", "t", "is", "li", "hi", "ui", "ji", "ix", "p", "im", "ic", "phi", "u", "ri"], "j": ["jo", "bi", "bj", "oj", "si", "obj", "jc", "J", "json", "it", "e", "vol", "jack", "pt", "then", "ie", "o", "fr", "kid", "l", "tr", "jit", "b", "dj", "jj", "jas", "aj", "jl", "bs", "pi", "x", "el", "jp", "son", "uj", "js", "str", "g", "v", "ja", "ju", "gov", "ij", "q", "je", "kj", "m", "ii", "ne", "br", "li", "z", "jump", "job", "other", "ji", "pr", "p", "ge", "note", "u"], "k": ["ka", "kl", "ke", "kr", "kn", "ch", "wk", "kind", "sk", "key", "kan", "kid", "K", "l", "b", "kick", "ks", "isk", "ik", "ek", "kar", "v", "kt", "ku", "ok", "ak", "kk", "kw", "q", "sch", "m", "kj", "mk", "km", "ck", "tk", "t", "z", "dk", "unk", "p", "ijk", "kh", "ikk"], "f": ["fl", "fp", "fb", "sf", "w", "fd", "fr", "xf", "l", "fg", "b", "found", "p", "out", "c", "ff", "g", "bf", "v", "fc", "tf", "df", "m", "fm", "fw", "rf", "cf", "t", "fe", "fa", "F", "fi", "fs", "u"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n\tfinal static long MOD = 1000000007;\\n\tpublic static String[] Ws = null;\\n\tpublic static int wsIndx = 0;\\n\tpublic static BufferedReader in = null;\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tsolution(args);\\n\t\tif(in!=null){\\n\t\t\tin.close();\\n\t\t}\\n\t}\\n\\n\tpublic static void solution(String[] args) throws Exception{\\n\\n\t\tint N=nextInt();\\n\\n\\n\t\tSystem.out.printf(\"%.6f\\n\",(N+1)/2/(double)N);\\n\\n\t}\\n\tpublic static String[] toStringArray(String s) {\\n\t\tString[] tmp = new String[s.length()];\\n\t\tchar[] c = s.toCharArray();\\n\t\tfor (int i = 0; i < tmp.length; i++) {\\n\t\t\ttmp[i] = String.valueOf(c[i]);\\n\t\t}\\n\t\treturn tmp;\\n\t}\\n\\n\tpublic static void check() throws Exception{\\n\t\tif(in == null){\\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\\n\t\t}\\n\t\tif(Ws==null || Ws.length<=wsIndx){\\n\t\t\tWs = in.readLine().split(\" \");\\n\t\t\twsIndx=0;\\n\t\t}\\n\t}\\n\tpublic static int nextInt()throws Exception{\\n\t\tcheck();\\n\t\treturn Integer.parseInt(Ws[wsIndx++]);\\n\t}\\n\\n\tpublic static long nextLong()throws Exception{\\n\t\tcheck();\\n\t\treturn Long.parseLong(Ws[wsIndx++]);\\n\t}\\n\\n\tpublic static String nextString()throws Exception{\\n\t\tcheck();\\n\t\treturn Ws[wsIndx++];\\n\t}\\n\\n\tpublic static int[] nextInts()throws Exception{\\n\t\tcheck();\\n\t\tint[] tmp = new int[Ws.length];\\n\t\tfor(int i=0;i<tmp.length;i++){\\n\t\t\ttmp[i]=Integer.parseInt(Ws[i]);\\n\t\t}\\n\t\twsIndx=Ws.length;\\n\t\treturn tmp;\\n\t}\\n\\n\tpublic static long[] nextLongs()throws Exception{\\n\t\tcheck();\\n\t\tlong[] tmp = new long[Ws.length];\\n\t\tfor(int i=0;i<tmp.length;i++){\\n\t\t\ttmp[i]=Long.parseLong(Ws[i]);\\n\t\t}\\n\t\twsIndx=Ws.length;\\n\t\treturn tmp;\\n\t}\\n\\n\tpublic static String[] nextStrings()throws Exception{\\n\t\tcheck();\\n\t\twsIndx=Ws.length;\\n\t\treturn Ws;\\n\t}\\n\\n\\n}\\n", "target": "64", "substitutes": {"MOD": [" P", " LOG", " MS", " PID", "max", " ID", " MAX", "MAX", " U", " NUM", " M", " CAS", " mod", " stamp", " BASE", "Mod", "NUM", "mod", " Max", " O", " JD", "VALUE", " mu", " CRC", " MIN", "UID", " C", " clen"], "Ws": ["wn", "Bs", "S", "Wed", "ws", "In", "West", "Vs", "Sax", "WT", "LS", "fts", "Inv", "Sec", "wt", "Lens", "ns", "Socket", "Wars", "Js", "Its", "Wh", "Witness", "Args", "Fs", "Ring", "Sys", "Tips", "GS", "W", "WB", "Wa", "xs", "WS", "NW", "We", "gs", "Rs", "Cs", "Vers", "WC", "Str", "CW", "Windows", "Wo", "Wr", "RW", "Parts", "Es", "Words", "Wire", "Ns", "Bytes", "qs", "Syn", "Win", "Us", "NS", "War", "FS", "Dest", " WS", "Tx", "Hundreds", "Works", "Ins", "Has", "Posts"], "wsIndx": ["WsIndxc", "webkitIndn", "nsIndy", "WsIndix", "wsIndexx", "wsINDex", "Wsindix", "wtIterix", "wsindi", "nsIndexix", "WsIndex", "wsINDux", "awsIndz", "wsStrongi", "wsIdn", "webkitIndice", "wsLenv", "wsindz", "wsindxf", "wtIterxes", "wsStrongx", "wordsIndux", "wsColy", "wtIndxes", "wsINDx", "wsIndox", "wtIndi", "WsIndx", "nsIndx", "wsIndy", "wordsINDox", "wordsIndx", "WsIndxt", "wsIndi", "wsStrongxes", "wtIteri", "webkitInsy", "wsIntv", "wsPtrxt", "wsindxes", "wsIdy", "wsLenx", "wsIteri", "webkitIndy", "wsindxt", "webkitIndx", "wsIndn", "awsINDix", "awsIndex", "wsINDn", "wsIndexix", "Wsindxt", "Wsindxc", "wordsINDux", "nsIndexy", "wsindix", "nsIndp", "wsIdix", "wsIndxc", "wsPtrix", "wsIndux", "wsIndix", "wtIterx", "wsIdxc", "wsIndice", "wsInsy", "wsIndxt", "Wsindx", "wsIndxes", "wsINDz", "wsIdx", "wsindxc", "wsColx", "wsINDice", "wsPtry", "wsindex", "wsIndv", "wsIdz", "wsIdice", "WsIndxf", "awsINDex", "wsLenox", "wsINDox", "Wsindex", "wsIndexy", "wsColp", "awsIndix", "wsIntox", "wsPtrx", "nsIndexp", "wtIndx", "wsInsn", "wsINDy", "webkitInsx", "wsIndexp", "awsIndx", "wsIterxes", "awsINDx", "wsIntx", "wsInsice", "nsIndix", "wsPtrxf", "wsIndp", "wordsINDv", "wsLenux", "Wsindxf", "wsIterx", "wsIdex", "wsINDv", "nsIndexx", "wsColix", "wsIndxf", "wsindx", "awsINDz", "wsPtrp", "wordsINDx", "wordsIndv", "wsINDix", "wsIndz", "wordsIndox", "webkitInsn", "wtIndix", "wsStrongix", "wsINDxc", "wsIntux", "wsIndex", "wsIterix", "webkitInsice", "wsInsx"], "in": ["en", "std", "ws", "In", "open", "null", "it", "w", "din", "from", "mc", "rin", "source", "o", "mm", "world", "l", "oin", "b", "ins", "pi", "asin", "conf", "bin", "out", "login", "doc", "inc", "lo", "sin", "r", "mi", "or", "ini", "err", "on", "min", "ma", "h", "win", "ind", "al", "IN", "m", "init", "log", "reader", "again", "ln", "con", "gin", "t", "isin", "is", "serv", "nin", "input", "stream", "session", "inv", "n", "inn", "inf", "inner", "p", "inside", "ic", "cin"], "N": ["NG", "S", "NA", "J", "D", "NV", "T", "NM", "H", "Y", "Z", "V", "NT", "M", "C", "X", "NO", "I", "NL", "NN", "Ns", "NS", "L", "Q", "n", "ND", "O", "SN"], "s": ["ms", "parts", "S", "space", "sts", "sf", "sb", "ds", "w", "stats", "l", "b", "ns", "strings", "bs", "ts", "js", "ys", "str", "g", "r", "v", "ats", "y", "h", "xs", "gs", "string", "ls", "m", "ss", "sq", "cs", "less", "os", "t", "ps", "is", "n", "p", "sv", "rs"], "tmp": ["mp", "list", "dt", "MP", "pkg", "uff", "csv", "appy", "np", "pot", "out", "my", "nm", "bt", "current", "tp", "Temp", "tm", "buffer", "pretty", "mb", "etc", "rb", "sp", "result", "cp", "buff", "perm", "cache", "lib", "table", "ctx", "tn", "proc", "comp", "td", "cv", "cro", "fake", "net", "txt", "temp", "auto", "stuff", "pp", "nb", "obj", "partial", "resp", "zip", "mm", "aux", "db", "template", "jp", "nt", "tf", "mk", "attr", "abs", "pb", "tc", "t", "amps", "map", "tt", "cur", "qq", "img", "emp", "test", "msg", "tar", "aaa", "buf", "cmp", "tem", "rup", "tab", "dump", "cont", "top", "app", "sam", "sq", "storage", "data", "yy"], "c": ["cp", "ch", "vc", "com", "cat", "cm", "csv", "l", "b", "cas", "cd", "cr", "char", "coll", "cc", "co", "C", "v", "fc", "cb", "conv", "f", "cu", "lc", "cv", "ac", "m", "gc", "cats", "cs", "cf", "tc", "t", "dc", "cn", "ca", "ct", "p", "col"], "i": ["multi", "si", "ip", "set", "PI", "chain", "di", "ini", "err", "me", "info", "ski", " I", "phi", "it", "ie", "qi", "x", "y", "sim", "uri", "q", "ami", "init", "ori", "MI", "any", "gi", "ii", "us", "docker", "base", "cli", "ji", "ic", "ri", "fire", "bi", "ms", "iu", "ios", "ei", "this", "j", "io", "ni", "I", "remote", "ij", "is", "li", "ui", "ix", "ies", "menu", "ti", "ai", "e", "xi", "pi", "ful", "parent", "mi", "ity", "ci", "id", "oi", "f", "m", "ki", "\u0438", "batch", "ims", "fi", "im", "u"]}}
{"code": "import java.util.*;\\nimport java.math.*;\\n\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    double l = sc.nextDouble();\\n\\n    double x = l/3;\\n    double y = l/3;\\n    double z = l-x-y;\\n\\n    System.out.println(x*y*z);\\n\\n  }\\n\\n}\\n", "target": "53", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "Sc", "sel", "c", "r", "bc", "cc", "sys", "screen", "SC", "conv", "lc", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "uc", "system", "nc", "cs", "sq", "tc", "spec", "pc", "dc", "sa", "syn", "capt", "desc", "scl", "isc", "sv", "sp", "esc"], "l": ["list", "kl", "s", "ll", "o", "b", "lit", "p", "el", "c", "d", "left", "i", "lp", "lo", "g", "ly", "r", "v", "ml", "j", "h", "f", "lc", "length", "le", "q", "ls", "lr", "m", "nl", "sl", "ln", "t", "li", "L", "len", "dl", "lon"], "x": ["dx", "mx", "px", " xx", "tx", "w", "lat", "xx", "xd", "ll", "ax", "xi", "b", "xt", "fx", "xc", "i", "c", "xp", "d", "r", "v", "X", "ox", "h", "f", "xs", "wx", "yx", "rx", "m", "xa", "t", "xy", "ex", "width", "n", "ix", "p", "www"], "y": ["ies", "yi", "ay", "sy", "ch", "ye", "ey", "yd", "yz", "yl", "b", "Y", "gy", "i", "ys", "g", "ly", "my", "cy", "yr", "sys", "v", "ty", "j", "h", "vy", "uy", "py", "yt", "ry", "ya", "iy", "oy", "yn", "ny", "ym", "xy", "hy", "yy", "axy", "fy", "wy"], "z": ["zu", "nz", "s", "zip", "az", "ez", "oz", "ll", "yz", "zi", "zh", "b", "uz", "Z", "c", "i", "d", "tz", "j", "sd", "h", "zz", "iz", "zy", "zo", "cz", "gz", "zone", "t", "hz", "ze"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    int a = 0;\\n\\n    for(int i=n ; i>0 ; i--){\\n      if(String.valueOf(i).length() %2 !=0){\\n        a++;\\n      }\\n    }\\n    System.out.println(a);\\n  }\\n}\\n", "target": "135", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "Sc", "out", "sel", "c", "bc", "cc", "sys", "proc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "uc", "nc", "sq", "tc", "cs", "system", "pc", "ser", "acc", "isc", "desc", "scl", "sv", "Scan", "sp", "esc"], "n": ["nb", "nn", "nw", "nat", "l", "np", "k", "ns", "c", "d", "nr", "g", "r", "nt", "nm", "no", "v", "ng", "j", "number", "sn", "ni", "nu", "m", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "num", "net", "N", "gn", "p", "mn"], "a": ["an", "la", "ba", "ab", "da", "ai", "au", "total", "ee", "o", "aaa", "b", "aj", "area", "out", "c", "am", "d", "A", "ia", "done", "ta", "ma", "ao", "alpha", "ac", "ae", "index", "wa", "ha", "ga", "oa", "aa", "att", "t", "action", "sta", "to", "na", "as", "pa", "fa", "count", "sa", "ca", "aq", "xa"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "gu", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "mi", "v", "ini", "ci", "y", "sim", "id", "j", "ni", "I", "q", "init", "m", "ori", "ki", "\u0438", "ii", "gi", "t", "is", "li", "hi", "ui", "cli", "ji", "ix", "p", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\nimport java.lang.*;\\npublic class Main{\\n\t/*static double res=0;\\n\t static void help(int p,int r,int n){\\n\t\tdouble tmp=p;\\n\t\tfor(int i=1;i<=n;i++){\\n\t\t\tdouble x=1+(double)r/1200 ;\\n\t\t\ttmp*=x;\\n\t\t}\\n\t\tres+=tmp;\\n\t\tint k=100000,m=360;\\n\t\tfor(int i=m;i>0;i--){\\n\t\t\thelp(k,5,i);\\n\t\t}\\n\t\tSystem.out.println(\"paid amount \"+k*m+\" \");\\n\t\tSystem.out.println((long)res);\\n\t}\\n*/\\npublic static void main(String[] args) {\\n        Scanner s = new Scanner(System.in);\\n        int n=s.nextInt();\\n\t\tint[] arr=new int[n+1];\\n\t\t//Set<Integer>set=new HashSet<>();\\n\t\tMap<Integer,Integer>map=new HashMap<>();\\n\t\tfor(int i=0;i<n;i++){\\n\t\t\tint x=s.nextInt();\\n\t\t\t\\n\t\t\tmap.put(x,i+1);\\n\t\t}\\n\t\t\\n\t\tStringBuilder sb=new StringBuilder();\\nfor(int i=1;i<=n;i++){\\n\tsb.append(map.get(i)+\" \");\\n\t\\n}\t\t\\nSystem.out.println(sb);\\n\t\t}\\n    }\\n\t\\n\t\t\\n\t\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n", "target": "227", "substitutes": {"s": ["in", "ses", "ms", "S", "ws", "sts", "sb", "ds", "sol", "stats", "ns", "rs", "ts", "js", "ys", "g", "socket", "sys", "ats", "j", "conv", "h", "xs", "gs", "ls", "aws", "sam", "ss", "abs", "sq", "cs", "qs", "less", "ps", "sa", "p", "sv", "fs", "hs", "gets"], "n": ["nb", "nd", "rn", "nn", "nw", "nor", "l", "np", "b", "k", "ns", "i", "c", "d", "nr", "norm", "nt", "no", "nm", "v", "r", "ng", "j", "number", "sn", "ni", "nu", "m", "nl", "nc", "nan", "t", "na", "z", "cn", "num", "count", "len", "N", "gn", "p", "mn"], "arr": ["list", "obj", "au", "all", "fr", "ax", "tr", "buf", "dr", "arg", "row", "gr", "str", "air", "nt", "ar", "ray", "err", "res", "ij", "aa", "br", "rr", "array", "ev", "map", "rs", "par"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.io.IOException;\\nimport java.util.NoSuchElementException;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        Scanner in = new Scanner(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        ATheNumberOfEvenPairs solver = new ATheNumberOfEvenPairs();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class ATheNumberOfEvenPairs {\\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\\n            int n = in.nextInt();\\n            int m = in.nextInt();\\n            int total = n + m;\\n            int pattern = calcNumOfCombination(total, 2);\\n            int pair = n * m;\\n\\n            if (n == 0 || m == 0) {\\n                out.println(pattern);\\n            } else {\\n                out.println(pattern - pair);\\n            }\\n\\n\\n        }\\n\\n        int calcNumOfCombination(int n, int r) {\\n            int num = 1;\\n            for (int i = 1; i <= r; i++) {\\n                num = num * (n - i + 1) / i;\\n            }\\n            return num;\\n        }\\n\\n    }\\n\\n    static class Scanner {\\n        private final InputStream in;\\n        private final byte[] buffer;\\n        private int ptr;\\n        private int buflen;\\n\\n        public Scanner(InputStream in) {\\n            this.in = in;\\n            this.buffer = new byte[1024];\\n            this.ptr = 0;\\n            this.buflen = 0;\\n        }\\n\\n        private boolean hasNextByte() {\\n            if (ptr < buflen) return true;\\n            else {\\n                ptr = 0;\\n                try {\\n                    buflen = in.read(buffer);\\n                } catch (IOException e) {\\n                    e.printStackTrace();\\n                }\\n                if (buflen <= 0) return false;\\n            }\\n            return true;\\n        }\\n\\n        private byte readByte() {\\n            if (hasNextByte()) return buffer[ptr++];\\n            return -1;\\n        }\\n\\n        private boolean isPrintableChar(byte c) {\\n            return '!' <= c && c <= '~';\\n        }\\n\\n        private void skipUnprintable() {\\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) {\\n                ptr++;\\n            }\\n        }\\n\\n        public boolean hasNext() {\\n            skipUnprintable();\\n            return hasNextByte();\\n        }\\n\\n        public int nextInt() {\\n            if (!hasNext()) throw new NoSuchElementException();\\n            int n = 0;\\n            boolean minus = false;\\n            byte b = readByte();\\n            if (b == '-') {\\n                minus = true;\\n                b = readByte();\\n            }\\n            if (b < '0' || '9' < b) throw new NumberFormatException();\\n            while (true) {\\n                if ('0' <= b && b <= '9') {\\n                    n *= 10;\\n                    n += b - '0';\\n                } else if (b == -1 || !isPrintableChar(b)) {\\n                    return minus ? -n : n;\\n                } else {\\n                    throw new NumberFormatException();\\n                }\\n                b = readByte();\\n            }\\n        }\\n\\n    }\\n}\\n\\n", "target": "49", "substitutes": {"inputStream": ["errorSteam", "sourceSocket", "sourceSteam", "sourceStream", " inputSteam", "inputFile", "errorStreamer", "outputFile", "inputSteam", "outputStreamer", " inputstream", "errorStream", "sourceFile", "inputstream", "outputSocket", " inputStreamer", "inputSocket", " inputSocket", "errorstream", "outputstream", "outputSteam", " inputFile", "inputStreamer"], "outputStream": ["resultSet", "resultStream", " outputstream", "outputStreamer", "outputSet", "writeStream", "OutputStream", "writeStreamer", "connectionStream", "OutputPort", "writestream", "connectionstream", "resultPort", "OutputSteam", "resultSteam", " outputSet", " outputStreamer", " outputPort", "writeSteam", " outputSteam", "outputPort", "outputstream", "OutputSet", "outputSteam", "connectionStreamer", "connectionSteam"], "in": ["en", "In", "local", "from", "l", "sum", "or", "ini", "err", "current", "me", "log", "info", "as", "nin", "p", "inside", "pin", "null", "it", "s", "din", "file", "rin", "o", "run", "ins", "context", "inc", "ner", "end", "on", "h", "win", "st", "can", "init", "exec", "ssl", "con", "raw", "gin", "inf", "inner", "ic", "ri", "old", "iter", "up", "mc", "mm", "state", "oin", "thin", "lin", "conf", "bin", "this", "conn", "io", "ind", "IN", "xml", "show", "t", "is", "serv", "stream", "ex", "client", "cin", "add", "ai", "e", "w", "read", "asin", "kin", "doc", "form", "get", "ma", "reader", "os", "ing", "isin", "input", "inn", "er", "al"], "out": ["outer", "report", "copy", "list", "at", "ch", "obj", "null", "it", "s", "set", "OU", "up", "w", "cache", "aos", "pool", "all", "o", "hit", "Out", "table", "user", "l", "flush", "sum", "this", "nt", "end", "conn", "co", "sys", "v", "screen", "err", "name", "io", "res", " Out", "conv", "ut", "print", "log", "gc", "write", "OUT", "ou", "output", "os", "raw", "t", "to", "writer", "ex", "net", "txt", "client", "inner", "outs"], "solver": ["Solver", "resolar", " solution", "jsolver", "solution", "resolve", "jsolve", "resolution", " solve", "ssolve", "Solve", "ssolver", "solve", "searcher", "solar", "ssearcher", "Solution", "jsearcher", " solar", "ssolution", "Searcher", "jsolution", "Solar", "resolver"], "testNumber": ["caseNum", "testNum", "testnumber", "casenumber", " testNum", "TestNumber", "TestNum", "TestNo", "caseNo", "caseNumber", "Testnumber", "testNo", " testNo", " testnumber"], "n": ["nb", "an", "en", "nn", "nw", "e", "s", "network", "ll", "o", "l", "np", "k", "ns", "x", "un", "d", "mn", "g", "nt", "norm", "v", "y", "ng", "on", "name", "j", "h", "number", "sn", "a", "fn", "nu", "normal", "nc", "ln", "ne", "nan", "t", "na", "cn", "net", "dn", "N", "gn", "p", "u"], "m": ["ms", "mat", "perm", "mt", "sm", "cm", "mr", "mc", "mm", "o", "l", "k", "middle", "d", "multiple", "mate", "g", "mi", "v", "M", "y", "j", "ma", "h", "f", "mo", "me", "tm", "mu", "month", "t", "gm", "mem", "man", "em", "p", "mut", "mn"], "total": ["result", "shared", "size", "complete", "partial", "unique", "human", "eta", "mt", "max", "equal", "all", "mm", "sum", "ful", "nt", "no", "primary", "global", "current", "done", "ta", "number", "normal", "mon", "stable", "otal", "Total", "t", "full", "count", "net", "N", "p", "sequence"], "pattern": ["field", "column", "part", "card", "Pattern", "integer", "test", "matched", "comment", "phrase", "question", "group", "step", "counter", "char", "x", "template", "style", "format", "password", "prefix", "pat", "address", "type", "name", "mask", "number", "print", "string", "example", "pixel", "value", "command", "zero", "debug", "path", "att", "data", "offset", "rule", "repeat", "match", "p"], "pair": ["part", "side", "pen", "equal", "diff", "key", "phrase", "group", "pad", "coord", "counter", "portion", "p", "char", "split", "prefix", "mate", "parse", "parent", "air", "half", "error", "inter", "print", "pixel", "child", "batch", "function", "two", "offset", "arity", "repeat", "map", "both", "match", "par"], "r": ["result", "rate", "rn", "e", "right", "w", "mr", "ro", "radius", "o", "re", "l", "rd", "k", "rt", "d", "nr", "g", "or", "ar", "range", "f", "res", "h", "rc", "q", "ry", "R", "sr", "rec", "t", "p", "er", "rs", "rar", "u", "ri"], "num": ["nb", "result", "en", "mom", "mult", "multi", "add", "nn", "success", "unique", "max", "um", "msg", "cal", "term", "single", "cum", "np", "coord", "tim", "sum", "x", "unit", "draw", "nm", "no", "nt", "NUM", "mod", "id", "fac", "number", "alph", "rank", "nom", "nu", "index", "mon", "pn", "zero", "info", "quant", "Num", "na", "count", "node", "p", "mean", "mn"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "o", "l", "zi", "xi", "di", "pi", "ite", "qi", "x", "g", "mi", "uu", "ini", "ci", "y", "iso", "sim", "j", "f", "iq", "I", "ki", "gi", "ii", "info", "is", "li", "hi", "ui", "cli", "ix", "p", "im", "ic", "phi", "u", "ri"], "buffer": ["scroll", "limit", "column", "uf", "display", "buff", "iter", "cache", "read", "file", "phrase", "comment", "source", "block", "variable", "table", "buf", "channel", "binary", "row", "db", "template", "password", "window", "memory", "address", "line", "bar", "screen", "shape", "length", "document", "value", "command", "index", "device", "batch", "stack", "Buffer", "output", "data", "page", "base", "input", "tree", "header", "message", "code", "mem", "queue", "temp", "frame", "p", "sequence", "button", "history"], "ptr": ["pointers", "rep", "fp", " pointer", "pers", "perm", "tmp", "pert", "pt", "prev", "depth", "pad", "tr", "np", "req", "buf", "dr", "dep", "expr", "th", "pointer", "prime", "loc", "seek", "ctx", "jp", "ts", "rel", "addr", "Ptr", "ref", "address", "proc", "err", "tp", "td", "inter", "length", "ind", "inters", "index", "attr", "pend", "head", "pc", "ps", "offset", "tip", "bp", "br", "dest", "pr", "temp", "ctr", "p", "sp"], "buflen": ["burvlener", "buplEN", "bullength", " bullenn", "bufcen", " buplun", "bufolen", "bullen", "buvlEN", "burvlEN", "bufcaren", "bufrEN", "buflens", "bullens", "bufcine", "buglun", "buplen", "bufline", " buflength", "buplens", "bumlength", "buflength", "buflaren", "burvlen", "bugline", "buglens", "uuflen", "uukline", " buplens", "buflener", "uuflens", "buklens", " bullen", "buvlag", " buflun", "bullenn", "uuklaren", "buflag", "buglen", "bullun", "burvlag", "burflen", "bufolag", " bullun", "bulfener", "buflenn", "fuflength", " buflens", "buglength", "bukline", "burflag", "fuflens", "bulfun", "fumlEN", " bullength", "burflener", " buflenn", "uuklens", "bulfEN", "buklen", "bumlen", "fuflen", "buflEN", "bufolEN", "uuklen", "bumlEN", "buplun", "buvlen", "bumlens", "burflEN", "uufline", "buvlener", "bufrength", "bufcens", "bulfength", "bufren", "bufrens", "buglaren", " buplength", "uuflaren", "bulfenn", "buplength", "bulfag", "buglenn", "buflun", "fumlens", "fuflEN", " buplen", "bufolener", "bulfen", "buklaren", "fumlength", "fumlen"], "c": ["cp", "cur", "ch", "e", "content", "cod", "w", "cat", "l", "k", "cmp", "cd", "ec", "char", "xc", "x", "d", "g", "bc", "fc", "cc", "C", "ci", "v", "cb", "f", "cu", "lc", "a", "h", "ac", "gc", "uc", "tc", "cf", "cs", "t", "dc", "pc", "ce", "code", "ct", "p", "col", "u"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  public static void main(String args[]) {\\n    Scanner sc = new Scanner(System.in);\\n    \\n    int N = sc.nextInt();\\n    int[] x = new int[N];\\n    for (int i = 0; i < N; i++) {\\n      x[i] = sc.nextInt();\\n      if (isMultiples(2, x[i])) {\\n        if (isMultiples(3, x[i]) || isMultiples(5, x[i])) {\\n          continue;\\n        }\\n\t    System.out.println(\"DENIED\");\\n        return;\\n      }\\n    }\\n    \\n    System.out.println(\"APPROVED\");\\n  }\\n  public static boolean isMultiples(int multiples, int n) {\\n    return ((n % multiples) == 0);\\n  }\\n}", "target": "113", "substitutes": {"sc": [" scr", "si", "ch", "sync", "sb", "sw", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "Sc", "sel", "c", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "ss", "scan", "nc", "sq", "cs", "tc", "ck", "pc", "ctl", "dc", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "N": ["NP", "NI", "NG", "S", "NA", "J", "D", "T", "NH", "NM", "K", "No", "P", "NT", "V", "M", "C", "X", "Sn", "NO", "Ni", "NE", "Size", "NB", "I", "Number", "TN", "Len", "Node", "R", "NR", "NN", "Ns", "Num", "NS", "SN", "L", "GN", "ND", "O", "NC"], "x": ["tt", "cross", "mx", "px", "e", "check", "tx", "xe", "xx", "xd", "lat", "ey", "ax", "xf", "l", "xi", "xt", "p", "xc", "xes", "xp", "c", "act", "ux", "v", "ox", "X", "y", "f", "xs", "wx", "rx", "index", "exp", "xy", "ext", "z", "ex", "ct", "ix", "xa", "im", "lex"], "i": ["bi", "multi", "ms", "list", "si", "menu", "ti", "iter", "ai", "ip", "it", "set", "iu", "gu", "ie", "gl", "o", "chain", "user", "xi", "di", "pi", "qi", "out", "g", "my", "mi", "parent", "v", "ini", "ci", "y", "id", "sim", "j", "io", "uri", "f", "iq", "I", "ind", "ij", "init", "ami", "m", "me", "ori", "ki", "batch", "gi", "ii", "info", "us", "t", "is", "li", "z", "hi", "ui", "ji", "cli", "ix", "im", "ic", "phi", "u", "ri"], "multiples": ["Multiples", " multiple", "Multibles", "muples", " multicles", "multilements", "tucles", "mulements", "multiple", "Multilements", "multicles", "Multicles", "muple", "mupling", "tuple", " multipling", "tuples", "multibles", "tubles", "multipling", "Multiple", " multilements", " multibles", "Multipling"], "n": ["nb", "nn", "names", "nor", "w", "l", "np", "ns", "c", "d", "nr", "g", "nm", "nt", "tn", "y", "ng", "j", "number", "sn", "m", "nu", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "num", "count", "net", "dn", "mn"]}}
{"code": "import java.util.HashMap;\\nimport java.util.Scanner;\\nimport java.util.stream.IntStream;\\nimport java.lang.Math;\\n\\npublic class Main {\\n    public static void main(String args[]){\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int d = sc.nextInt();\\n\\n        int ans = 0;\\n        for(int i = 0; i < n; i++){\\n            double key = sc.nextDouble();\\n            double value = sc.nextDouble();\\n            double r = Math.pow(key, 2) + Math.pow(value, 2);\\n            double a = Math.sqrt(r);\\n            if(a <= d){\\n                ans++;\\n            }\\n        }\\n        System.out.println(ans);\\n    }\\n}", "target": "42", "substitutes": {"sc": ["irc", "ch", "sync", "console", "cam", "asc", "mc", "osc", "uc", "ctrl", "cmp", "anc", "cr", "Sc", "scope", "sci", "c", "ctx", "inc", "cgi", "bc", "cc", "sys", "fc", "SC", "lc", " Sc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "ss", "scan", "pb", "nc", "sq", "cs", "system", "tc", "ck", "se", "ssl", "pc", "ctl", "psc", "isc", "desc", "scl", "sh", "sv", "sp", "esc", "qu"], "n": ["nb", "an", "en", "nn", "nw", "network", "o", "l", "np", "k", "ns", "c", "un", "nr", "nt", "no", "ng", "name", "number", "sn", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "net", "N", "p", "mn"], "d": ["size", "dt", "did", "nd", "da", "s", "D", "w", "ds", "dom", "fd", "dim", "l", "dir", "b", "di", "del", "dd", "db", "out", "x", "g", "days", "end", "td", "f", "sd", "density", "ind", "de", "m", "pd", "dm", "t", "dc", "dh", "data", "gd", "dn", "p", "dec"], "ans": ["an", "acs", "uns", "ars", "ms", "ians", "ents", "results", "s", "orts", "ds", "aps", "aos", "ows", "ann", "ons", "ns", "ins", "ags", "vals", "x", "ks", " scans", "ts", "arts", "lines", "vs", "ats", "ends", "rows", "ants", "xs", "ANS", "gs", "can", "ls", "ads", "ips", "ots", "cs", "ps", "offs", "ums", "amps", "ens", "rs", "outs", "ids", "eds"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "gu", "iu", "ie", "zi", "xi", "di", "pi", "qi", "x", "mi", "v", "ini", "ci", "y", "id", "sim", "ia", "j", "iq", "I", "ind", "print", "q", "init", "me", "m", "ki", "batch", "go", "ii", "us", "is", "li", " ii", "hi", "ui", "ix", "p", "ic", "phi"], "key": ["query", "item", "pair", "json", "dict", "Key", "position", "ey", "kid", "k", "by", "char", "row", "KEY", "prefix", "str", "parent", "owner", "primary", "score", "y", "id", "name", "search", "where", "title", "string", "hash", "index", "root", "info", "link", "label", "code", "client", "map", "entry"], "value": ["update", "val", "result", "field", "feature", "ve", "hello", "local", "test", "position", "place", "attribute", "Value", "see", "vp", "unit", "style", "volume", "ue", "parent", "version", "v", "default", "current", "name", "number", "VALUE", "word", "function", "tv", "data", "widget", "rule", "sample", "sequence", "description", "vector"], "r": ["rect", "rate", "vr", "mr", "red", "radius", "re", "fr", "rd", "dr", "rt", "cr", "gr", "nr", "v", "ar", "err", "rm", "res", "rc", "rh", "rx", "sr", "rf", "R", "lr", "m", "attr", "rr", "br", "rb", "repl", "p", "rs", "rar", "ro"], "a": ["an", "la", "av", "ba", "ab", "eas", "ea", "at", "au", "o", "aaa", "b", "aj", "area", "sha", "am", "A", "act", "ar", "ia", "ta", "ma", "va", "alpha", "ac", "ae", "ata", "aa", "as", "ova", "sta", "na", "pa", "apa", "sa", "ca", "xa"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n    public static void main(String[]arg){\\n\\n        Scanner sc = new Scanner(System.in);\\n\\n        while(true){\\n            int n = sc.nextInt();\\n            if(n == 0) break;\\n            int[] s = new int[n];\\n\\n            int sum = 0;\\n\\n            for(int i =0; i < n; i++){\\n                s[i] = sc.nextInt();\\n                sum = sum + s[i];\\n            }\\n            double ave = 0, var = 0;\\n\\n            ave = sum / (double)n;\\n\\n            double sum2 = 0;\\n\\n            for(int k = 0; k < n; k++){\\n                sum2 = sum2 + (s[k] - ave) * (s[k] - ave);\\n            }\\n\\n            var = sum2 / (double)n;\\n\\n            System.out.printf(\"%.8f\\n\",Math.sqrt(var));\\n\\n        }\\n\\n    }\\n}\\n", "target": "203", "substitutes": {"arg": ["Arg", "param", "argument", "w", "test", "A", "flag", "str", "parse", "Args", "v", "ray", "line", "name", "gs", "command", "rest", "cmd", "arp", "params", " Arg", "spec", "usr", "path", "dest"], "sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "arc", "sci", "c", "ctx", "bc", "cc", "sys", "fc", "co", "ng", "SC", "conv", "lc", "rc", "cv", "usc", "sec", "nl", "gc", "scan", "ss", "cl", "pb", "nc", "sq", "cs", "tc", "ck", "se", "pc", "ctl", "dc", "isc", "desc", "sh", "scl", "sv", "sp", "esc"], "n": ["nb", "nn", "nw", "nat", "nor", "network", "all", "ll", "none", "o", "l", "np", "ns", "out", "c", "d", "un", "nr", "g", "nt", "no", "nm", "nia", "v", "y", "ng", "name", "j", "number", "sn", "ni", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "net", "count", "len", "node", "N", "gn", "dn", "p", "note", "mn"], "s": ["ses", "ms", "items", "S", "si", "sts", "sb", "e", "ds", "w", "stats", "ports", "es", "l", "services", "ns", "ins", "strings", "bs", "rs", "c", "ts", "js", "vs", "v", "sys", "ats", "its", "h", "a", "xs", "gs", "ls", "m", "ss", "sl", "sq", "so", "qs", "cs", "bis", "ims", "t", "ps", "is", "sa", "states", "p", "sv", "fs", "hs", "gets", "ints"], "sum": ["add", "summary", "size", "ms", "si", "total", "vol", "um", "cal", "all", "cum", "sav", "save", "out", "mix", "med", "cos", "ity", "sys", "mean", "oss", "v", "sim", "sup", "sv", "sat", "ass", "weight", "hash", "m", "ul", "index", "sam", "mu", "use", "go", "zero", "so", "info", "us", "sort", "se", "na", "util", "num", "su", "sa", "count", "mem", "umm", "Sum", "average", "al"], "i": ["bi", "in", "ms", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "status", "o", "PI", "zi", "xi", "di", "pi", "qi", "x", "ei", "my", "mi", "point", "ini", "ci", "y", "sim", "id", "j", "io", "uri", "I", "ind", "init", "me", "ami", "ori", "\u0438", "batch", "ii", "gi", "info", "us", "is", "li", "hi", "ui", "ji", "ix", "im", "ic", "phi", "u", "ri"], "ave": ["ale", "val", "ive", "av", "rate", "ka", "af", "ay", "aul", "ve", " weave", "ain", "au", "rade", "ai", "aler", "um", "ee", "ade", "sav", "ver", "rat", "save", "rage", "ice", "am", "goal", "aver", "ue", "air", "AV", "off", "act", "have", "ame", "wave", "ume", "ta", "age", "va", "ack", "ena", "le", "slave", "are", "aw", "te", "se", "aved", "as", "acc", "scale", "na", "ca", "vae", "ose", "aves", "mean", "average", "al"], "var": ["nv", "av", "ve", "cat", "func", "sav", "ver", "rat", "Var", "rad", "const", "rt", "vec", "iv", "grad", "aver", "v", "ar", "bar", "fac", "rank", "weight", "cast", "dev", "quant", "usr", "ser", "acc", "num", "val", "par", "arr"], "sum2": ["matchtwo", " sumtwo", "mix42", "mix4", "sum02", "um4", "Sum3", "sum4", "match3", "um42", " SUM3", " SUMdb", "umdb", " sumdb", "sum42", " SUM02", "um02", "sumtwo", " sum42", "umtwo", "Sum4", "match2", "sum3", " sum3", " sum02", " sum4", "um3", "mix2", "match4", "sumdb", "mix3", "um2", " SUM2", "Sum2"], "k": ["ka", "kl", "kr", "ke", "kn", "kit", "wk", "kind", "ark", "sk", "key", "kg", "kid", "K", "ijk", "ko", "ks", "isk", "ik", "work", "ek", "g", "kar", "kt", "ask", "UK", "ku", "kat", "ok", "ak", "ph", "kw", "q", "kk", "kj", "mk", "ki", "km", "ck", "tk", "dk", "unk", "uk", "kh", "ikk"]}}
{"code": "import java.util.Scanner;\\n\\n//AtCoder Beginner Contest 148\\n//B\tStrings with the Same Length\\npublic class Main {\\n\\n\tstatic final int MOD = 1000000007;\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = Integer.parseInt(sc.next());\\n\t\tString S = sc.next();\\n\t\tString T = sc.next();\\n\t\tsc.close();\\n\\n\t\tStringBuilder sb = new StringBuilder();\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\tsb.append(S.charAt(i));\\n\t\t\tsb.append(T.charAt(i));\\n\t\t}\\n\t\tSystem.out.println(sb.toString());\\n\t}\\n}\\n", "target": "200", "substitutes": {}}
{"code": "import java.io.*;\\npublic class Main {\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString str = br.readLine();\\n\t\tString[] strs = str.split(\" \");\\n\t\tint a = Integer.parseInt(strs[0]);\\n\t\tint b = Integer.parseInt(strs[1]);\\n\t\tint x = a * b;\\n\t\tint y = (a*2)+(b*2);\\n\t\tSystem.out.println(x + \" \" + y);\\n\t\tbr.close();\\n\t}\\n}", "target": "92", "substitutes": {"br": ["wr", "ber", "bi", "hr", "bl", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "browser", "buf", "dr", "bd", "bs", "cr", "rel", "bg", "gr", "r", "bh", "bc", "bf", "yr", "bt", "bridge", "lr", "shr", "bp", "adr", "rb", "repl", "bm", "pr", "be", "bro", "arr", "bn"], "str": ["wr", "obj", "ch", "iter", "it", "vol", "s", "ocr", "fr", "tr", "STR", "dr", "cr", "char", "text", "out", "coll", "gr", "comm", "g", "r", "line", "err", "dat", "string", "st", "sec", "Str", "sl", "stable", "exp", "raw", "t", "txt", "n", "pr", "div", "sp", "arr"], "strs": ["collb", "divl", " strl", "stps", "streamjs", "strgs", "sts", "divs", "streamrs", "Strgs", " strjs", " strrs", "strps", "intgs", "grs", "streamps", "intps", "ints", "colll", "strl", " strps", "divb", "grgs", "Strs", "strrs", "streams", "strb", "Strps", "colls", "strjs", "stjs", "grps", " strb"], "a": ["ap", "an", "la", "ba", "ab", "ea", "at", "ai", "ra", "au", "o", "ax", "l", "aaa", "aj", "area", "i", "am", "A", "r", "act", "ar", "ia", "ta", "ma", "f", "ao", "va", "ac", "ga", "oa", "aa", "as", "t", "na", "pa", "z", "sa", "isa", "n", "aq", "p", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "e", "ib", "sb", "wb", "eb", "lib", "l", "ob", "bs", "gb", "by", "db", "c", "i", "d", "bg", "g", "r", "bc", "v", "bar", "cb", "j", "f", "m", "beta", "mb", "bis", "bp", "t", "z", "B", "rb", "n", "p", "u"], "x": ["dx", "mx", "px", " xx", "w", "tx", "xe", "xx", "xd", "o", "ax", "xf", "l", "xi", "xt", "fx", "xc", "i", "xp", "g", "v", "ux", "X", "ox", "on", "f", "xs", "wx", "yx", "rx", "m", "xa", "t", "xy", "z", "ex", "ix", "p", "lex"], "y": ["yi", "ay", "sy", "ch", "dy", "yd", "o", "ey", "l", "Y", "gy", "out", "i", "sky", "cy", "v", "icy", "ty", "j", "vy", "uy", "py", "ery", "yt", "ry", "iy", "m", "oy", "ny", "ym", "t", "iny", "xy", "z", "hy", "yy", "axy", "p", "fy"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\\n\t\tScanner scan = new Scanner(System.in);\\n\\n\t\tint intSumNum = 0;\\n\\n\t\tint r = scan.nextInt();\\n\t\tint c = scan.nextInt();\\n\t\tint[][] ary = new int[r+1][c+1];\\n\\n\t\t//r*c\\n\t\tfor(int i =0; i < r ; i++){\\n\\n\t\t\tfor(int j = 0; j < c; j++ ){\\n\\n\t\t\t\tary[i][j] = scan.nextInt();\\n\t\t\t}\\n\t\t}\\n\t\tfor(int k = 0; k < r + 1; k++){\\n\t\t\tfor(int l = 0; l < c + 1; l++){\\n\t\t\t\t//?????????????????????????????????????????????\\n\t\t\t\tif(l != c && k != r){\\n\t\t\t\t\tary[k][c] += ary[k][l];\\n\t\t\t\t}\\n\t\t\t\t//???????????????????????????\\n\t\t\t\tif(k != r){\\n\t\t\t\t\tary[r][l] += ary[k][l];\\n\t\t\t\t}\\n\\n\t\t\t\tSystem.out.print(ary[k][l]);\\n\t\t\t\tif(l != c){\\n\t\t\t\t\tSystem.out.print(\" \");\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tSystem.out.println();\\n\t\t}\\n\t}\\n}", "target": "23", "substitutes": {}}
{"code": "import java.io.*;\\nimport java.util.*;\\nimport java.lang.Math;\\n\\npublic class Main {\\n    static boolean check(String s){\\n        int n = s.length();\\n        for(int i = 0; i < n ; ++i){\\n            if(s.charAt(i) != s.charAt(n-1-i)){\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        String s = sc.next();\\n        int n = s.length();\\n        String a = s.substring(0, (n-1)/2);\\n        String b = s.substring((n+3)/2-1, n);\\n        String ans = \"No\";\\n        if(check(s) && check(a) && check(b)) ans = \"Yes\";\\n        System.out.println(ans);\\n    }\\n}", "target": "123", "substitutes": {"s": ["ms", "S", "ws", "e", "sb", "sts", "sw", "sf", "ds", "w", "stats", "source", "series", "es", "l", "ns", "ins", "bs", "c", "ts", "js", "str", "g", "vs", "r", "ys", "v", "ats", "y", "its", "sd", "h", "f", "gs", "st", "string", "ls", "m", "fs", "south", "http", "ss", "sl", "abs", "sq", "less", "cs", "os", "qs", "se", "spec", "t", "ps", "is", "sql", "p", "sv", "rs", "sp"], "n": ["nb", "en", "in", "size", "nn", "names", "nw", "e", "w", "network", "all", "ll", "o", "l", "np", "k", "ns", "c", "d", "un", "g", "norm", "nm", "no", "v", "nt", "ng", "on", "name", "j", "h", "number", "sn", "ni", "length", "f", "ren", "m", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "dn", "N", "p", "note", "mn"], "i": ["bi", "in", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "l", "zi", "xi", "di", "pi", "qi", "x", "g", "my", "mi", "v", "ini", "ci", "y", "sim", "err", "id", "j", "f", "uri", "I", "ind", "q", "init", "me", "m", "ami", "ori", "ki", "ii", "gi", "us", "is", "li", "ex", "hi", "ui", "ji", "cli", "ix", "fi", "im", "ic", "phi", "u", "ri"], "sc": ["ch", "sync", "sw", "cle", "asc", "osc", "anc", "sac", "cr", "ec", "Sc", "c", "dec", "bc", "cc", "sys", "fc", "SC", "lc", " Sc", "cv", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "sq", "cs", "tc", "disc", "pc", "sa", "isc", "desc", "syn", "sh", "scl", "sv", "sp", "esc"], "a": ["ap", "an", "aff", "la", "ba", "ab", "eas", "da", "ea", "at", "ai", "au", "o", "ax", "aaa", "aj", "area", "c", "am", "A", "act", "r", "ar", "ma", "ao", "alpha", "ac", "ae", "app", "ga", "oa", "sta", "aa", "as", "apa", "sa", "ca", "p", "u"], "b": ["nb", "bi", "ba", "ab", "fb", "ib", "bb", "sb", "eb", "lib", "ob", "gb", "bs", "db", "c", "d", "bg", "g", "r", "bc", "v", "y", "bot", "cb", "bar", "j", "back", "body", "beta", "mb", "blue", "bis", "bp", "t", "br", "base", "B", "rb", "be"], "ans": ["an", "angs", "uns", "ars", "anks", "ms", "ents", "ups", "rans", "orts", "ds", "flags", "aps", "fts", "ands", "ann", "arms", "ons", "ns", "ins", "aus", "uds", "ros", "vals", "ks", "cons", "ys", "vs", "arts", " means", "ats", "ends", "ras", "olds", "ates", "ants", "eps", "xs", "posts", "ANS", "gs", "ads", "ls", "orders", "ots", "cs", "ps", "ums", "amps", "ens", "rs", "ids", "eds"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = Integer.parseInt(sc.next());\\n        int[] w = new int[n+1];\\n        for(int i = 1;i<=n;i++){\\n            w[i] += w[i-1] + Integer.parseInt(sc.next());\\n        }\\n        int min = Integer.MAX_VALUE;\\n        for(int i = 1;i<=n;i++){\\n            if(min > Math.abs(w[n] - w[i] * 2)){\\n                min = Math.abs(w[n] - w[i] * 2);\\n            }\\n        }\\n        System.out.println(min);\\n    }\\n}", "target": "2", "substitutes": {"sc": ["irc", "ch", "sync", "sw", "cle", "asc", "mc", "osc", "func", "anc", "cr", "ec", "Sc", "sel", "arc", "c", "bc", "cc", "sys", "fc", "SC", "lc", " Sc", "rc", " SC", "usc", "sch", "sec", "gc", "cl", "nc", "sq", "cs", "tc", "pc", "ctl", "isc", "desc", "capt", "scl", "sv", "sp", "esc"], "n": ["nb", "an", "en", "nn", "network", "all", "ll", "o", "l", "np", "k", "ns", "out", "c", "d", "un", "nr", "g", "nt", "v", "no", "nm", "ng", "on", "name", "j", "ren", "number", "sn", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "p", "mn"], "w": ["wr", "var", "wo", "ws", "wcs", "nw", "sw", "wb", "wp", "wt", "c", "d", "window", "rew", "ew", "v", "y", "we", "words", "W", "h", "eps", "wh", "wx", "f", "word", "kw", "q", "wm", "m", "wa", "aw", "fw", "weights", "rw", "exp", "wl", "hw", "wal", "wall", "z", "widget", "wat", "p", "weight", "wid", "wd", "wi"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iii", "set", "iu", "ie", "PI", "chain", "l", "zi", "xi", "di", "pi", "qi", "ei", "g", "mi", "ini", "ci", "y", "sim", "err", "oi", "id", "j", "io", "uri", "name", "iq", "ni", "I", "ind", "print", "q", "ij", "iy", "me", "init", "ami", "ori", "ki", "\u0438", "asi", "batch", "gi", "ii", "info", "us", "ims", "eu", "to", "is", "li", "hi", "ui", "cli", "client", "ji", "ix", "im", "ic", " j", "phi", "u", "ri"], "min": ["required", "lt", "partial", "max", "sol", "diff", "local", "low", "aug", "test", "none", "next", "mine", "master", "amin", "best", "req", "sum", "opt", "lower", "conf", "latest", "rel", "margin", "Minimum", "dec", "v", "lock", "mod", "only", "default", "mint", "j", "minute", "just", "Mini", "mini", "print", "init", "m", "beta", "initial", "me", "log", "mins", "minimum", "sort", "MIN", "ne", "Min", "stat", "emin", "temp", "val", "small", "second", "mn"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint max = 1;\\n\t\tint sum = 0;\\n\t\tfor (int i = 0; i < 3; i++) {\\n\t\t\tint tmp = sc.nextInt();\\n\t\t\tsum += tmp;\\n\t\t\tif (tmp > max) {\\n\t\t\t\tmax = tmp;\\n\t\t\t}\\n\t\t}\\n\t\tsum -= max;\\n\\n\t\tint k = sc.nextInt();\\n\t\tfor (int i = 0; i < k; i++) {\\n\t\t\tmax *= 2;\\n\t\t}\\n\\n\t\tSystem.out.println(sum + max);\\n\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "201", "substitutes": {"sc": ["irc", "ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "scrib", "anc", "cr", "Sc", "arc", "sci", "c", "cgi", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "sec", "sch", "gc", "cl", "scan", "go", "pb", "nc", "sq", "tc", "cs", "ssl", "tch", "pc", "ctl", "psc", "isc", "capt", "syn", "sh", "scl", "cu", "sv", "sp", "esc"], "max": ["limit", "size", "mx", "ms", "mad", "total", "null", "last", "right", "MAX", " MAX", "cache", "set", "ax", "best", "prime", "conf", "x", "out", "c", "ctx", "med", "window", "end", "v", "co", "global", "mod", "default", "range", "min", "ma", "res", "gt", "rank", "hash", "m", "index", "rest", "Max", "root", "head", "t", "scale", "full", "dot", "rand", "count", "num", "temp", "map", "n", "mind", "p", "mean", "maximum"], "sum": ["result", "add", "summary", "spread", "size", "ms", "si", "total", "vol", "cache", "um", " SUM", "cum", "mm", " summed", "cmp", "doc", "x", "out", "mix", "med", "cost", "sys", "black", "score", "mod", "sim", "must", "sup", "alpha", "post", "ass", "hash", "weight", "Sum", "m", "index", "sam", "mu", "tu", "sort", "us", "se", "hist", "na", "acc", "full", "count", "num", "su", "sa", "mem", "temp", "match", "mean", "average"], "i": ["bi", "uni", "multi", "si", "ti", "ai", "iter", "ip", "it", "s", "iu", "ie", "o", "chain", "zi", "xi", "di", "iti", "pi", "qi", "ei", "mi", "ity", "ini", "ci", "id", "sim", "j", "io", "uri", "iq", "ni", "ind", "print", "q", "init", "me", "m", "index", "iy", "ori", "ki", "\u0438", "go", "ii", "gi", "info", "us", "ims", "is", "li", " ii", "ex", "hi", "ui", "cli", "ji", "ix", "im", "ic", "phi"], "tmp": ["mp", "tt", "nb", "cp", "mut", "cur", "obj", "pkg", "perm", "buff", "img", "emp", "snap", "src", "term", "mm", "np", "lambda", "jj", "cmp", "pot", "prime", "ctx", "prefix", "nt", "comp", "mint", "tp", "ty", "tf", "td", "j", "top", "gt", "inter", "alpha", "st", "nom", "m", "tm", "mk", "pre", "attr", "sq", "tc", "etc", "amp", "t", "clip", "timeout", "xy", "txt", "temp", "tg", "yy", "orig", "dust", "small", "sp", "col"], "k": ["ka", "kl", "ke", "kr", "kn", "w", "sk", "key", "kid", "K", "ko", "ks", "ik", "g", "ek", "kar", "ku", "ok", "ak", "j", "kk", "q", "kw", "m", "mk", "kj", "km", "ck", "tk", "z", "dk", "n", "uk", "kh"]}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n\t\\n    public static void main(String[] args) {\\n    \tScanner sc = new Scanner(System.in);\\n    \tint S = sc.nextInt();\\n    \tList<Integer> list = new ArrayList<>();\\n    \tlist.add(S);\\n    \twhile (true) {\\n        \tif (S%2 == 0) {\\n        \t\tS /= 2;\\n        \t\tif (list.contains(S)) {\\n        \t\t\tbreak;\\n        \t\t} else {\\n        \t\t\tlist.add(S);\\n        \t\t}\\n        \t} else {\\n        \t\tS = 3*S+1;\\n        \t\tif (list.contains(S)) {\\n        \t\t\tbreak;\\n        \t\t} else {\\n        \t\t\tlist.add(S);\\n        \t\t}\\n        \t}\\n    \t}\\n    \tSystem.out.println(list.size()+1);\\n    }\\n}", "target": "166", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "sub", "bc", "cc", "sys", "screen", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "uc", "nc", "system", "cs", "sq", "se", "pc", "dc", "desc", "isc", "sh", "scl", "sv", "Scan", "sp", "esc"], "S": ["CSS", "SF", "SOURCE", "ID", "SAM", "P", "SM", "SA", "ST", "TPS", "Success", "G", "IS", "SP", "VAL", " I", "L", "N", "s", "ESS", "SL", "SEC", " s", "MS", "Si", "C", "SI", "SR", "SK", "ASS", "VS", "FS", "B", "Sample", "CS", "T", "STAT", "SU", "US", "TS", "Prime", "V", "ASC", "M", "RS", "W", "I", "BS", "F", "SAN", "DS", "J", "D", "SER", "K", "Scale", "SE", "H", "Y", "Z", "PS", "SIM", "X", "SB", "GS", "Size", "Part", "HS", "WS", "Series", "R", " N", "JS", "NS", "Security", "SN", "SS"], "list": ["limit", "add", "summary", "old", "size", "and", "open", "sync", "null", "check", "set", "level", "tmp", "cache", "dict", "file", "lat", "pool", "all", "status", "test", "block", "acl", "group", "table", "l", "see", "state", "out", "def", "left", "get", "lists", "listed", "parent", "load", "cont", "search", "collection", "shape", "print", "st", "view", "log", "pre", "batch", "pretty", "write", "ssl", "info", "detail", "object", "output", "sort", "ist", "li", "array", "L", "tree", "net", "code", "queue", "filter", "map", "layout", "dl", "sequence", "history", "LIST", "entry"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\nclass Main{\\n    public static void main(String args[])throws IOException{\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        int num1=0,num2=0;\\n        String s = br.readLine();\\n        String[] str = s.split(\" \");\\n        int[] x = new int[str.length];\\n        for(int i=0; i<str.length; i++){\\n            x[i] = Integer.parseInt(str[i]);\\n        }\\n        Arrays.sort(x);\\n        for(int i=0; i<str.length-1; i++){\\n            System.out.print(x[i] +\" \");\\n        }\\n        System.out.println(x[str.length-1]);\\n    }\\n}", "target": "37", "substitutes": {"br": ["wr", "ber", "bi", "hr", "bl", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "er", "tr", "buf", "dr", "bd", "bs", "cr", "rel", "gr", "r", "bh", "bf", "yr", "bt", "boot", "sp", "st", "bridge", "lr", "bp", "rb", "bm", "pr", "be", "bro", "ro"], "num1": ["NUM3", "NUM1", "number1", "num01", "number0", "Num1", "Num0", "num3", "number01", "num0", "Num01", "number3", "Num3", "NUM0", "NUM01"], "num2": ["number1", "num02", "sum2", " num02", "num3", " num3", "sum02", "number3", "number02", "sum3", "sum1", "number2"], "s": ["in", "S", "sb", "sw", "l", "b", "strings", "bs", "ts", "js", "g", "r", "v", "ats", "j", "its", "f", "a", "gs", "string", "ls", "m", "Str", "sl", "ss", "sq", "less", "t", "ps", "n", "p", "sv", "rs", "sp"], "str": ["rep", "wr", "bl", "obj", "ch", "sts", "vol", "it", "sw", "pt", "sol", "ll", "fr", "chain", "expr", "tr", "STR", "b", "dr", "ns", "del", "stri", "strings", "split", "char", "form", "ts", "rel", "ust", "gr", "comm", "r", "seq", "dec", "v", "dat", "j", "res", "inst", "string", "st", "sec", "ls", "Str", "sl", "stack", "qs", "exp", "spec", "att", "sta", "data", "dist", "tree", "txt", "len", "div", "desc", "ctr", "rs", "enc", "sp", "arr"], "x": ["dx", "tt", "mx", "px", "e", "tx", "w", "xe", "xx", "xd", "ax", "xf", "xi", "xt", "p", "xc", "xes", "xp", "fx", "v", "ox", "X", "y", "conv", "h", "xs", "wx", "php", "rx", "index", "xy", "ex", "xxx", "ct", "n", "ix", "xa", "rex", "lex"], "i": ["bi", "uni", "multi", "si", "ti", "ai", "e", "ip", "it", "ri", "iu", "ie", "gu", "o", "chain", "zi", "xi", "di", "pi", "qi", "c", "ei", "this", "g", "mi", "point", "ity", "ini", "ci", "y", "sim", "err", "id", "oi", "j", "span", "uri", "io", "ni", "I", "ind", "remote", "q", "ij", "init", "iy", "m", "me", "ami", "ki", "\u0438", "ogi", "batch", "ii", "info", "gi", "us", "is", "li", "base", "hi", "ui", "cli", "client", "ji", "ix", "fi", "im", "ic", "phi", "fire"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\npublic static void main(String args[]) {\\n\tint x;\\n\tint j;\\n\tint key;\\n\tScanner num = new Scanner(System.in);\\n\tx = num.nextInt();\\n\tint a[] = new int[x];\\n\tfor (int i=0;i<a.length;i++) {\\n\t\ta[i]=num.nextInt();\\n\t}\\n\t\\n\tfor(int k=0;k<a.length;k++) {\\n\t\tif(k<a.length-1)\\n\t\t\tSystem.out.printf(a[k]+\" \");\\n\t\telse\\n\t\t\tSystem.out.printf(a[k]+\"\\n\");\\n\t}\\n    \\n\tfor(int i=1;i<a.length;i++) {\\n\t\tkey = a[i];\\n\t\tj = i - 1;\\n\t\twhile (a[j]>key && j>=0) {\\n\t\t\ta[j+1]=a[j];\\n\t\t\tj--;\\n\t\t\tif (j<0) {\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\t\ta[j+1]= key;\\n\t\tfor(int k=0;k<a.length;k++) {\\n\t\t\tif(k<a.length-1)\\n\t\t\t\tSystem.out.printf(a[k]+\" \");\\n\t\t\telse\\n\t\t\t\tSystem.out.printf(a[k]+\"\");\\n\t\t}\\n\t\tSystem.out.println(\"\");\\n\t}\\n}\\n}", "target": "69", "substitutes": {"x": ["dx", "in", "mx", "px", " xx", "e", "w", "tx", "xx", "o", "ax", "xf", "l", "xi", "xt", "xc", "r", "v", "y", "X", "ox", "h", "f", "xs", "wx", "q", "m", "index", "rx", "t", "xy", "z", "ex", "width", "n", "ix", "p", "ic", "u"], "j": ["bi", "si", "obj", "jc", "J", "json", "it", "pt", "journal", "o", "fr", "block", "kid", "l", "jit", "dj", "b", "jj", "aj", "jl", "bs", "prime", "row", "jp", "uj", "left", "js", "g", "r", "my", "v", "ja", "y", "io", "res", "ind", "ij", "q", "je", "kj", "ne", "t", "br", "to", "z", "jump", "job", "other", "ji", "n", "pr", "p", "ge", "u"], "key": ["item", "ke", "json", "e", "max", "kind", "ie", "Key", "ee", "next", "ey", "o", "kid", "leader", "char", "bo", "by", "KEY", "prefix", "str", "keys", "ek", "my", "no", "v", "type", "y", "id", "start", "name", "ak", "here", "h", "kk", "kw", "q", "le", "hash", "m", "index", "mk", "value", "ki", "shift", "ry", "ck", "te", "ole", "link", "code", "n", "p", "val"], "num": ["nb", "en", "mom", "eng", "obj", "snap", "sm", "um", "gnu", "cal", "gen", "ann", "np", "sum", "cmp", "bin", "get", "gener", "norm", "nm", "no", "NUM", "hog", "ng", "conv", "gram", "number", "Number", "alph", "nom", "nu", "mon", "sam", "scan", "info", " nu", "Num", "con", "na", "util", "gm", "n", "mark", "prim", "nam", "bn"], "a": ["ap", "an", "ana", "da", "at", "ace", "all", "area", "ache", "c", "window", "ta", "ae", "go", "as", "n", "p", "result", "ab", "au", "cache", "o", "b", "changes", "A", "ia", "h", "va", "alpha", "ac", "aa", "to", "array", "ca", "ava", "arr", "history", "la", "ba", "eas", "ada", "aux", "era", "act", "ya", "wa", "oa", "t", "na", "fa", "ed", "parts", "ea", "e", "ama", "aka", "aaa", "form", "am", "d", "trace", "v", "ar", "ma", "f", "ao", "ack", "app", "m", "ata", "ga", "att", "sta", "data", "z", "sa", "im"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "e", "iu", "ie", "ir", "o", "chain", "zi", "xi", "di", "pi", "qi", "g", "ik", "my", "mi", "point", "v", "ini", "ity", "ci", "y", "sim", "id", "io", "f", "iq", "inter", "ind", "I", "ij", "init", "me", "m", "index", "ori", "ami", "ki", "batch", "any", "ii", "info", "gi", "ims", "is", "li", "ex", "ui", "ji", "inner", "ix", "im", "ic", "phi", "ri"], "k": ["ka", "kl", "ke", "kr", "kn", "it", "wk", "max", "w", "ark", "sk", "kind", "kan", "kid", "K", "jj", "ijk", "ko", "kick", "ks", "isk", "ik", "g", "ek", "kat", "work", "kt", "ask", "ku", "y", "ick", "ok", "ak", "ind", "ph", "kk", "kw", "q", "ac", "ack", "kj", "mk", "ki", "km", "ck", "tk", "acc", "z", "dk", "unk", "uk", "kh"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tint X = sc.nextInt();\\n\t\tint array[] = new int[N];\\n\t\tint msum = 0;\\n\t\tint mmin = 100000;\\n\\n\t\tfor(int i = 0; i < N; i++) {\\n\t\t\tarray[i] = sc.nextInt();\\n\t\t\tmsum += array[i];\\n\t\t\tif(mmin > array[i]) {\\n\t\t\t\tmmin = array[i];\\n\t\t\t}else {\\n\t\t\t\tmmin = mmin;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println((X-msum)/mmin + N);\\n\t}\\n\\n}\\n", "target": "3", "substitutes": {"sc": ["ch", "sb", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sci", "c", "inc", "bc", "cc", "sys", "fc", "ng", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "pb", "nc", "system", "cs", "tc", "sq", "ck", "pc", "ctl", "dc", "pl", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "N": ["NP", "NI", "S", "NA", "J", "D", "T", "NM", "NH", "K", "H", "Y", "Z", "P", "A", "V", "NT", "M", "C", "NO", "NE", "NB", "I", "TN", "Node", "R", "NN", "NR", "Ns", "Num", "NS", "L", "SN", "F", "Q", "n", "GN", "ND", "O", "NC", "AN"], "X": ["XT", "FX", "S", "J", "T", "K", "U", "EX", "H", "Y", "TX", "Z", "IX", "x", "P", "XL", "DX", "XM", "V", "M", "C", "UX", "W", "I", "R", "MX", "AX", "XXX", "XX", "XP", "F", "Q", "O"], "array": ["result", "record", "var", "list", "section", "integer", "ace", "tmp", "sequence", "all", "now", "attribute", "table", "chain", "image", "instance", "save", "area", "lower", "ape", "audio", "ary", "row", "form", "amount", "memory", "window", "share", "air", "Array", "v", "ar", "ray", "address", "atomic", "range", "collection", "a", "number", "export", "component", "string", "stage", "hash", "answer", "aw", "view", "actor", "system", "sort", "upper", "storage", "object", "function", "as", "raw", "other", "message", "angle", "angular", "node", "auto", "archive", "arr", "vector"], "msum": [" msain", "mmsum", "mmum", "msain", "umsumm", "umssum", "pssum", "umsum", "MSumm", "mscan", "mmcan", "mdumm", "msumm", "inscan", "insum", "mssum", "umscan", "MSum", "mdsum", "psum", "msuum", "mmumm", " msuum", "insumm", "mduum", "MSuum", "MSsum", "mdum", "inssum", "psumm", " msumm", "MSain", " mssum", "psain"], "mmin": ["mrbest", "vmin", "rmMin", "Mfree", "mMin", "bmmini", "mmmax", "mtsmall", "MMin", "vsmall", "wmminimum", "rmmini", "cminimum", "mmonly", "gmMin", "mmax", "cmin", "gmbest", "mminimum", "monly", "mtMin", "mmMin", "vminimum", "mcsmall", "vme", "rmmax", "cmini", "mrMin", "mname", " mminimum", "mcmin", "bmminimum", " mfree", "Mmax", "mtmin", "mme", "mlt", "Mmini", "mcme", "msmall", "wmsum", "mmminimum", " mmini", "bmname", "vMin", "Mmin", " mMin", "mcMin", " mlt", "vsum", "wmmin", "cname", " mname", "mbest", " monly", "gmmin", "vlt", "mmbest", "mfree", "wmlt", "mtme", "Monly", " mmax", "mmmin", "rmmin", "mrmin", "mmini", "bmmin", "mrminimum", "gmminimum", "mmfree"], "i": ["bi", "multi", "list", "si", "ti", "ai", "iter", "ip", "it", "json", "gu", "iu", "ie", "key", "o", "chain", "zi", "xi", "b", "di", "pi", "qi", "x", "ei", "g", "ik", "mi", "point", "v", "ini", "ci", "y", "id", "sim", "j", "io", "a", "uri", "f", "I", "ind", "q", "ij", "init", "m", "index", "ori", "\u0438", "batch", "ii", "gi", "info", "us", "slice", "to", "is", "li", "z", "ui", "ji", "n", "cli", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.Scanner;\\n \\npublic class Main {\\n    public static void main(String[] args) {\\n       try {\\n\t\t\tScanner sc=new Scanner(System.in);\\n\t\t\tint d=sc.nextInt();\\n\t\t\tint t=sc.nextInt();\\n\t\t\tint s=sc.nextInt();\\n\t\t\tint k=t*s;\\n\t\t\tif(k>=d) {\\n\t\t\t\tSystem.out.println(\"Yes\");\\n\t\t\t}\\n\t\t\telse {\\n\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t}\\n\t\t}catch(Exception e) {\\n\t\t\t\\n\t\t}\\n\\n    }\\n}", "target": "246", "substitutes": {"sc": ["irc", "ch", "sync", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "ko", "c", "ctx", "inc", "cgi", "dec", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "nc", "sq", "cs", "tc", "system", "ck", "pc", "ctl", "syn", "isc", "scl", "sh", "sv", "sp", "esc"], "d": ["dt", "da", "nd", "e", "ds", "D", "fd", "w", "l", "dir", "b", "di", "cd", "dd", "db", "ad", "c", "i", "g", "r", "v", "id", "dat", "j", "sd", "f", "h", "de", "q", "m", "pd", "dm", "z", "dk", "n", "od", "p"], "t": ["tt", "dt", "ot", "total", "e", "mt", "pt", "T", "o", "l", "b", "wt", "rt", "out", "c", "i", "ts", "g", "v", "tn", "y", "tp", "j", "ta", "h", "a", "f", "td", "tf", "m", "tm", "tu", "tc", "z", "n", "p"], "s": ["S", "si", "sts", "e", "ds", "w", "l", "b", "ns", "ins", "bs", "c", "ks", "ts", "i", "js", "ys", "g", "v", "j", "sd", "h", "f", "a", "q", "gs", "ls", "m", "ss", "cs", "os", "is", "z", "n", "p", "sp", "u"], "k": ["ka", "ke", "kr", "w", "sk", "kid", "K", "b", "x", "ks", "i", "c", "g", "ik", "v", "ku", "ok", "j", "kk", "q", "kw", "m", "kj", "mk", "ki", "ck", "tk", "z", "dk", "n", "unk", "p", "uk", "kh"]}}
{"code": "import java.util.Scanner;\\nclass Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    int m = sc.nextInt();\\n    int c = 0, pen = 0;\\n    int[] r = new int[n + 1];\\n    for(int i = 0; i < m; i++){\\n      int p = sc.nextInt();\\n      if(sc.next().equals(\"WA\")){\\n        if(r[p] >= 0)r[p]++;\\n      }else{\\n        if(r[p] >= 0){\\n          pen += r[p];\\n          c++;\\n          r[p] = -1;\\n        }\\n      }\\n    }\\n    System.out.println(c+\" \"+pen);\\n  }\\n}", "target": "48", "substitutes": {"sc": ["irc", "ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "inc", "dec", "bc", "cc", "sys", "fc", "ng", "ok", "SC", "lc", "rc", "usc", "st", "sch", "sec", "exec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "sq", "cs", "tc", "ck", "pc", "ctl", "dc", "ser", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "an", "en", "nn", "network", "o", "l", "np", "k", "ns", "pi", "x", "nm", "nt", "v", "conn", "on", "j", "a", "sn", "nu", "nl", "nc", "ne", "t", "cn", "num", "net", "len", "N", "mn"], "m": ["ms", "mx", "mt", "cm", "mc", "mm", "o", "l", "b", "k", "d", "g", "mi", "nm", "v", "M", "ma", "j", "h", "f", "tm", "dm", "t", "gm", "bm", "man", "N", "im", "mn"], "c": ["en", "cp", "cur", "ch", "e", "s", "com", "w", "cal", "o", "chain", "l", "pad", "b", "k", "cd", "pointer", "anc", "cr", "arc", "x", "row", "d", "coll", "g", "cy", "bc", "v", "co", "C", "ci", "cont", "f", "h", "lc", "cu", "ren", "a", "ac", "gc", "nc", "cs", "tc", "cf", "con", "pc", "t", "z", "count", "ce", "ct", "ca", "cut", "ic", "unc", "u"], "pen": ["paren", "fp", "en", "pol", "ke", "pin", "pair", "snap", "png", "don", "re", "sten", "pe", "spe", "won", "pad", "ping", "qual", "qv", "fen", "pan", "rel", "ptr", "conn", "lock", "we", "pid", "po", "ren", "cu", "ket", "fat", "pn", "pri", "phy", "pre", "bra", "cro", "pain", "con", "Pen", "pc", "pa", "len", "pr", "capt", "pres", "cut", "que", "ped"], "r": ["rect", "rate", "rn", "it", "vr", "w", "ir", "mr", "re", "fr", "l", "b", "rd", "dr", "rt", "cr", "d", "rel", "nr", "g", "or", "v", "ar", "rg", "rl", "range", "rm", "reb", "res", "ren", "rc", "rh", "q", "R", "sr", "lr", "ur", "rw", "rec", "br", "rus", "rb", "pr", "er", "rs", "rar", "ru", "ro"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "gu", "ie", "zi", "xi", "di", "pi", "x", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "io", "a", "I", "ind", "init", "ki", "ii", "gi", "us", "is", "li", "hi", "ui", "ix", "im", "ic", "phi"], "p": ["ap", "cp", "part", "pers", "pair", "pkg", "at", "ip", "perm", "port", "pt", "wp", "pe", "pad", "progress", "np", "ping", "pi", "vp", "P", "op", "jp", "lp", "point", "pat", "peer", "pid", "tp", "span", "j", "pos", "ph", "post", "pn", "php", "exp", "bp", "pc", "ps", "tip", "pa", "br", "pl", "client", "pr", "pp", "par", "sp", "pai"]}}
{"code": "import java.util.*;\\nclass Main{\\n\tstatic Scanner s = new Scanner(System.in);\\n\tpublic static void main(String[] args) {\\n\t\tint a=Integer.parseInt(s.next()),\\n\t\t    b=Integer.parseInt(s.next()),\\n\t\t    c=Integer.parseInt(s.next()),\\n\t\t    cnt=0;\\n\t\tfor(int i=a;i<=b;i++) {\\n\t\t\tif(c%i==0)\\n\t\t\t\tcnt++;\\n\t\t}\\n\t\tSystem.out.println(cnt);\\n\t}\\n}", "target": "190", "substitutes": {"s": ["ses", "ms", " inputs", "S", "ws", "sts", "sb", "sw", "ds", "sol", "w", "ns", "ins", "fps", "ts", "d", "comm", "js", "g", "r", "v", "sys", "ats", "conv", "h", "xs", "gs", "south", "ls", "m", "aws", "ers", "ss", "abs", "sq", "cs", "less", "qs", "ims", "t", "n", "p", "sv", "rs"], "a": ["an", "la", "ba", "ab", "ea", "at", "ai", "au", "o", "aaa", "ada", "aj", "area", "am", "A", "ar", "ia", "ta", "ma", "ao", "va", "alpha", "ac", "ae", "ga", "oa", "aa", "as", "t", "sta", "na", "pa", "z", "sa", "ca", "n", "isa", "xa", "u"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "bas", "wb", "erb", "eb", "l", "lb", "ob", "bs", "gb", "bo", "db", "bh", "bc", "bf", "y", "bar", "cb", "f", "mb", "bis", "br", "base", "B", "rb", "n"], "c": ["cp", "ch", "e", "cache", "cm", "mc", "cum", "l", "k", "cr", "ec", "conf", "d", "sc", "g", "r", "bc", "v", "cc", "C", "fc", "co", "cb", "conv", "f", "h", "lc", "cu", "ac", "m", "gc", "uc", "nc", "cs", "cf", "tc", "con", "t", "dc", "z", "count", "ce", "ct", "n", "p", "unc", "u"], "cnt": [" ccur", " ccount", "Cnt", "Ccount", "cumcount", "cst", "cumnt", "scnt", "ccount", "cumNT", "cNT", "cct", "scct", "nst", "sctr", " ctr", "scpt", "nct", "Ccur", "cpt", "ccur", " cpt", " cct", "nNT", "cumcur", "ntr", " cst", "npt", " cNT", "Cct", "nnt", "ctr", "CNT", "Cst"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "iu", "ie", "o", "zi", "xi", "k", "di", "pi", "qi", "x", "ei", "ik", "mi", "v", "ini", "uu", "ci", "y", "sim", "span", "j", "conv", "iq", "I", "ij", "q", "m", "ki", "mu", "asi", "ii", "gi", "ims", "is", "li", "z", "hi", "ui", "cli", "n", "client", "ix", "fi", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.InputStreamReader;\\nimport java.math.BigDecimal;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tFastScanner sc = new FastScanner(System.in);\\n\t\tlong a = sc.nextLong();\\n\t\tString b = sc.next();\\n\t\tBigDecimal x = new BigDecimal(a);\\n\t\tBigDecimal y = new BigDecimal(b);\\n\t\tBigDecimal q = x.multiply(y);\\n\t\tBigDecimal ans = q.setScale(0, BigDecimal.ROUND_DOWN);\\n\t\tSystem.out.println(ans);\\n\t}\\n\t\\n\tstatic class FastScanner {\\n\t\tprivate BufferedReader reader = null;\\n\t    private StringTokenizer tokenizer = null;\\n\t    public FastScanner(InputStream in) {\\n\t        reader = new BufferedReader(new InputStreamReader(in));\\n\t        tokenizer = null;\\n\t    }\\n\\n\t    public String next() {\\n\t        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n\t            try {\\n\t                tokenizer = new StringTokenizer(reader.readLine());\\n\t            } catch (IOException e) {\\n\t                throw new RuntimeException(e);\\n\t            }\\n\t        }\\n\t        return tokenizer.nextToken();\\n\t    }\\n\\n\t    public String nextLine() {\\n\t        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n\t            try {\\n\t                return reader.readLine();\\n\t            } catch (IOException e) {\\n\t                throw new RuntimeException(e);\\n\t            }\\n\t        }\\n\\n\t        return tokenizer.nextToken(\"\\n\");\\n\t    }\\n\\n\t    public long nextLong() {\\n\t        return Long.parseLong(next());\\n\t    }\\n\\n\t    public int nextInt() {\\n\t        return Integer.parseInt(next());\\n\t    }\\n\\n\t    public double nextDouble() {\\n\t         return Double.parseDouble(next());\\n\t     }\\n\\n\t    public int[] nextIntArray(int n) {\\n\t        int[] a = new int[n];\\n\t        for (int i = 0; i < n; i++)\\n\t            a[i] = nextInt();\\n\t        return a;\\n\t    }\\n\\n\t    public long[] nextLongArray(int n) {\\n\t        long[] a = new long[n];\\n\t        for (int i = 0; i < n; i++)\\n\t            a[i] = nextLong();\\n\t        return a;\\n\t    }\\n\t}\\n}\\n", "target": "15", "substitutes": {"sc": ["ch", "sb", "sync", "src", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "arc", "sci", "c", "ctx", "bc", "cc", "sys", "fc", "proc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "pb", "nc", "sq", "tc", "cs", "pc", "ctl", "isc", "desc", "scl", "sv", "rs", "ic", "sp", "esc"], "a": ["an", "la", "ba", "ab", "da", "ea", "at", "ai", "au", "e", " ab", "qa", " ba", " amount", " at", "aos", "aka", "o", "ax", "aaa", " na", "ada", " ca", "aux", " ax", "area", "el", "c", "am", " ta", "A", " alpha", "ar", " sa", "ia", "ta", "ak", "ma", " af", "ao", "va", "j", "alpha", "ac", "ae", "ya", "ach", "m", "wa", "ha", "ata", "xa", "ga", "oa", "aa", "sta", "as", "data", "na", "pa", " ra", " pa", "fa", "apa", "sa", "ca", " addr", "p", "ava"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "e", "sb", "bas", "eb", " B", "bs", "ob", "db", "c", "d", "bg", "bh", "bc", "bf", "v", "bar", "xb", "cb", "j", "ble", "pb", "blue", "bis", "br", "base", "z", "B", "rb", "u"], "x": ["dx", "mx", "px", "e", "tx", "w", "xe", "xx", "xd", "ax", "xf", "l", "xi", "xc", "fx", "c", "xp", "ux", "X", "ox", "xb", "f", "wx", "xs", "rx", "xa", "xy", "z", "ex", "ix", "p"], "y": ["ies", "yi", "ay", "sy", "ch", "e", "xx", "hot", "ey", "o", "yer", "Y", "sky", "ys", "my", "cy", "sys", "ty", "j", "io", "vy", "py", "yt", "ry", "iy", "yo", "oy", "ny", "ym", "xy", "z", "yy", "fy"], "q": ["query", "qt", "tt", "dq", "qq", "quit", "ch", "qa", "qual", "k", "Query", " Q", "qi", "c", "g", "ox", "iq", "ql", "ry", "m", "quant", "sq", "qs", "t", "z", "Qu", "Q", "eq", "p", "requ", "qu"], "ans": [" asks", "an", "ars", "ues", "ms", "ents", "anks", " sans", "ds", " plans", "aos", "ann", "es", " qual", " marks", "ns", "ins", "vals", " pan", " fans", "ks", " scans", "cons", "arts", "vs", " means", "ats", "ants", "eps", "xs", "ANS", "gs", " beans", "ls", " ants", "cs", "qs", "os", "as", " spans", "ps", "amps", "ens", "sv", "rs", "AN"], "reader": ["Reader", "query", "result", "iter", "console", "read", "mr", "builder", "file", "source", "driver", "rd", "dr", "row", "dra", "context", "worker", "this", "r", "iterator", " readers", " Reader", "ner", "line", "rl", "handler", " read", "resource", "io", "parser", "rer", "runner", "rc", "walker", "rx", "self", " writer", "buffer", "loader", "readable", "writer", "rr", "data", "stream", "input", "inner", "er", "rs", "rar", "ro"], "tokenizer": ["tokeniter", "Tokenener", "tooliser", "terminiler", "toolformer", "canizer", " tokenifier", "terminister", " tokenization", "tokenger", "serialifier", "wordiser", "Tokenifier", "tokenize", " tokenger", "Tokenifer", "characterizer", "tagner", "operatorization", "tokenister", "tokenisher", "tokenizers", "tagisher", "tokeniler", "okenizer", "okenister", "tagifier", "tagzer", "toolizer", " tokeniser", "tokenifier", "okenformer", "wordization", "okenzer", "serialzer", "canger", "Tokenizer", "tokenzer", "tokenformer", "operatorizer", "serialiler", " tokenister", "okeniler", "wordener", "characteriler", " tokenifer", "toolisher", "toolener", "filizer", "tagiler", " tokenize", " tokeniler", "Tokenner", "tagister", "okenizers", "tokenener", "okenisher", "Tokenzer", " tokenner", "serialener", "tokenization", "characterisher", "toolization", "filener", "canifer", "tagiter", "okenize", "filifier", "canization", " tokenzer", "characterizers", "tokeniser", "serializer", "filifer", "okenifer", "wordizer", "terminize", "tagizers", "terminizer", "Tokeniter", "operatorisher", " tokeniter", " tokenener", "tagizer", "serialister", "okenization", "tokenner", "okenger", "operatorformer", "tokenifer"], "in": ["std", "In", "it", "null", "check", "din", "file", "from", "source", "o", "world", "l", "dir", "ins", "rt", "conf", "bin", "out", "doc", "c", "inc", "r", "ini", "cont", "line", "err", "id", "ma", "io", "ac", "IN", "m", "log", "info", "con", "t", "is", "stream", "input", "net", "inn", "inner", "p", "cin"], "n": ["nb", "an", "en", "nn", "e", "nw", "names", "w", "network", "all", "o", "l", "np", "ns", "out", "c", "d", "un", "g", "r", "nm", "nos", "nt", "no", "v", "on", "name", "j", "number", "sn", "h", "ni", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "natural", "z", "cn", "num", "net", "len", "N", "p", "mn"], "i": ["ies", "bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "set", "iu", "ie", "PI", "xi", "di", "pi", "ful", "qi", "ei", "my", "mi", "ity", "ini", "ci", "sim", "oi", "start", "id", "j", "io", "f", "err", "I", "ind", "print", "ij", "iy", "init", "ami", "me", "m", "ki", "\u0438", "MI", "batch", "gi", "ii", "us", "ims", " I", "is", "li", "ex", "hi", "ui", "cli", "ji", "ix", "im", "ic", "phi", "u", "fire"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n    public static void main(String[] args){\\n\tScanner sc = new Scanner(System.in);\\n    int x = Integer.parseInt(sc.next());\\n    int coin500 = x / 500;\\n    int remain = x - coin500 * 500;\\n    System.out.println(coin500 * 1000 + (remain / 5) * 5);\\n    }\\n      \\n      \\n}", "target": "180", "substitutes": {"sc": ["ch", "sync", "sw", "src", "cle", "asc", "mc", "scrib", "osc", "anc", "sac", "cr", "ec", "Sc", "sel", "c", "sub", "dec", "bc", "cc", "sys", "screen", "SC", "lc", "usc", "sch", "sec", "rx", "gc", "scan", "cl", "ss", "nc", "sq", "tc", "cs", "disc", "pc", "isc", "capt", "desc", "scl", "sv", "sp", "esc"], "x": ["dx", "px", "e", "tx", "w", "xe", "xx", "xd", "coin", "xf", "l", "xi", "k", "xt", "xc", "fx", "i", "c", "xp", "ctx", "xes", "v", "X", "y", "ox", "on", "f", "xs", "wx", "php", "rx", "xa", "t", "xy", "z", "ex", "ct", "n", "ix", "p", "rex", "ic"], "coin500": [" coin350", "Bitcoin350", "bitcoin750", "coin750", "oin200", "bitcoin600", "cash50", "oin1000", "money350", "city375", "coin1000", "Bitcoin200", "bitcoin200", "coin350", "Bitcoin1000", "money750", "coin375", "cash375", "city350", "coin200", "cash500", "money500", "Bitcoin500", "city50", "bitcoin350", "coin50", "oin500", " coin50", "coin600", "oin350", "bitcoin1000", "money600", "oin600", "bitcoin500", "oin750", "cash350", "city500", " coin375"], "remain": ["Remain", "REMained", " remaining", "REMain", "delaining", "remains", "deloval", "removal", "REMaining", "resains", "Remains", "Remained", "Removal", "delains", "remaining", " removal", " remains", "resained", "resain", "remained", "Remaining", "resaining", "delain", "REMains"]}}
{"code": "import java.io.BufferedInputStream;\\nimport java.io.BufferedOutputStream;\\nimport java.io.PrintWriter;\\nimport java.util.HashSet;\\nimport java.util.Scanner;\\nimport java.util.Set;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws Exception {\\n        try (BufferedInputStream in = new BufferedInputStream(System.in);\\n             PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out))) {\\n\\n            Scanner sc = new Scanner(in);\\n\\n            // 10:42-\\n\\n            int mod = 1_000_000_007;\\n            int n = sc.nextInt();\\n            int m = sc.nextInt();\\n            int[] as = new int[m];\\n\\n            Set<Integer> broken = new HashSet<>();\\n            for (int i = 0; i < as.length; i++) broken.add(sc.nextInt());\\n\\n            int[] dp = new int[n + 1];\\n            dp[0] = 1;\\n\\n            for (int i = 1; i <= n; i++) if (!broken.contains(i)) {\\n                dp[i] += dp[i - 1];\\n                dp[i] %= mod;\\n                if (i - 2 >= 0) dp[i] += dp[i - 2];\\n                dp[i] %= mod;\\n            }\\n\\n            out.println(dp[n]);\\n        }\\n    }\\n}\\n", "target": "174", "substitutes": {"sc": ["si", "ch", "sw", "sk", "ec", "Sc", "c", "bc", "sys", "SC", " Sc", "rc", " SC", "cv", "gc", "scan", "ss", "uc", "cl", "nc", "sq", "cs", "se", "pc", " sp", "sa", "sv", "sp"]}}
{"code": "import java.util.Arrays;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\n/**\\n * B - ROT N\\n */\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n\\n        Scanner sc = new Scanner( System.in );\\n        // \u6587\u5b57\u5217\u306e\u6841\u6570\\n        int n = sc.nextInt();\\n        String s = sc.next();\\n        String result = \"\";\\n\\n        List<String> alphabetsList = Arrays.asList( \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\" );\\n\\n        for( int i = 0; i < s.length(); i++ ) {\\n//            System.out.println(\"charat : \" + s.charAt( i ));\\n            int key = alphabetsList.indexOf( String.valueOf( s.charAt( i ) ) );\\n            if( key + n >= 26 ) {\\n                key -= 26;\\n            }\\n//            System.out.println(\"key : \" + key );\\n            result += alphabetsList.get( key + n );\\n        }\\n\\n        System.out.println( result );\\n\\n        sc.close();\\n    }\\n}", "target": "13", "substitutes": {"sc": [" scr", "ch", "sk", " scorer", "cr", "Sc", "c", "r", " sh", "sys", "SC", " Sc", "rc", " SC", "nl", "scan", "ss", "system", "cs", " sk", "tk", "se", "ser", " sp", "sa", " rc", "sv", "sp"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.OutputStream;\\nimport java.io.PrintWriter;\\nimport java.io.BufferedWriter;\\nimport java.io.Writer;\\nimport java.io.OutputStreamWriter;\\nimport java.util.InputMismatchException;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n *\\n * @author David Wu\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader in = new InputReader(inputStream);\\n        OutputWriter out = new OutputWriter(outputStream);\\n        TaskC solver = new TaskC();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class TaskC {\\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\\n            int picks = 0;\\n            int[] ratings = new int[8];\\n            int n = in.readInt();\\n            for (int i = 0; i < n; i++) {\\n                int k = in.readInt();\\n                if (k <= 399) {\\n                    ratings[0] = 1;\\n                    continue;\\n                }\\n                if (k <= 799) {\\n                    ratings[1] = 1;\\n                    continue;\\n                }\\n                if (k <= 1199) {\\n                    ratings[2] = 1;\\n                    continue;\\n                }\\n                if (k <= 1599) {\\n                    ratings[3] = 1;\\n                    continue;\\n                }\\n                if (k <= 1999) {\\n                    ratings[4] = 1;\\n                    continue;\\n                }\\n                if (k <= 2399) {\\n                    ratings[5] = 1;\\n                    continue;\\n                }\\n                if (k <= 2799) {\\n                    ratings[6] = 1;\\n                    continue;\\n                }\\n                if (k <= 3199) {\\n                    ratings[7] = 1;\\n                    continue;\\n                }\\n                picks++;\\n            }\\n\\n            int counter = 0;\\n            for (int i : ratings) {\\n                if (i == 1) {\\n                    counter++;\\n                }\\n            }\\n            if (counter == 0) {\\n                out.print(1);\\n            } else {\\n                out.print(counter);\\n            }\\n            counter += picks;\\n            out.print(\" \" + counter);\\n\\n\\n        }\\n\\n    }\\n\\n    static class InputReader {\\n        private InputStream stream;\\n        private byte[] buf = new byte[1024];\\n        private int curChar;\\n        private int numChars;\\n        private InputReader.SpaceCharFilter filter;\\n\\n        public InputReader(InputStream stream) {\\n            this.stream = stream;\\n        }\\n\\n        public int read() {\\n            if (numChars == -1) {\\n                throw new InputMismatchException();\\n            }\\n            if (curChar >= numChars) {\\n                curChar = 0;\\n                try {\\n                    numChars = stream.read(buf);\\n                } catch (IOException e) {\\n                    throw new InputMismatchException();\\n                }\\n                if (numChars <= 0) {\\n                    return -1;\\n                }\\n            }\\n            return buf[curChar++];\\n        }\\n\\n        public int readInt() {\\n            int c = read();\\n            while (isSpaceChar(c)) {\\n                c = read();\\n            }\\n            int sgn = 1;\\n            if (c == '-') {\\n                sgn = -1;\\n                c = read();\\n            }\\n            int res = 0;\\n            do {\\n                if (c < '0' || c > '9') {\\n                    throw new InputMismatchException();\\n                }\\n                res *= 10;\\n                res += c - '0';\\n                c = read();\\n            } while (!isSpaceChar(c));\\n            return res * sgn;\\n        }\\n\\n        public boolean isSpaceChar(int c) {\\n            if (filter != null) {\\n                return filter.isSpaceChar(c);\\n            }\\n            return isWhitespace(c);\\n        }\\n\\n        public static boolean isWhitespace(int c) {\\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\\n        }\\n\\n        public interface SpaceCharFilter {\\n            public boolean isSpaceChar(int ch);\\n\\n        }\\n\\n    }\\n\\n    static class OutputWriter {\\n        private final PrintWriter writer;\\n\\n        public OutputWriter(OutputStream outputStream) {\\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\\n        }\\n\\n        public OutputWriter(Writer writer) {\\n            this.writer = new PrintWriter(writer);\\n        }\\n\\n        public void print(Object... objects) {\\n            for (int i = 0; i < objects.length; i++) {\\n                if (i != 0) {\\n                    writer.print(' ');\\n                }\\n                writer.print(objects[i]);\\n            }\\n        }\\n\\n        public void close() {\\n            writer.close();\\n        }\\n\\n        public void print(int i) {\\n            writer.print(i);\\n        }\\n\\n    }\\n}\\n\\n", "target": "94", "substitutes": {"inputStream": ["inputForm", "outputView", "sourceSteam", "sourceStream", " inputSteam", "currentSteam", "inView", "inputFile", "outputStreamer", "outputFile", "inputSteam", " inputForm", "sourceFile", "currentView", "inputView", "currentStream", "outputForm", "outputSteam", " inputFile", "inStream", "inStreamer", "currentStreamer", "inputStreamer", "sourceForm", "inSteam"], "outputStream": ["resultStream", "applicationGate", "inputSteam", "applicationSteam", "outSteam", "resultPoint", "connectionStream", "outputPoint", "connectionstream", "inputstream", "connectionPort", "resultSteam", "resultGate", "outStream", "applicationStream", " outputGate", " outputSteam", "outputPort", "outstream", "outputstream", "outputSteam", " outputPoint", "applicationPoint", "inputPort", "connectionSteam", "outputGate", "outPort"], "in": ["old", "add", "ain", "In", "iter", "null", "it", "up", "local", "din", "file", "from", "source", "rin", "o", "re", "run", "mm", "l", "ins", "rt", "conf", "context", "bin", "el", "doc", "get", "form", "inc", "r", "or", "ini", "ar", "err", "on", "ma", "io", "ind", "ac", "IN", "init", "m", "log", "reader", "info", "con", "gin", "isin", "is", "serv", "input", "net", "inn", "inf", "inner", "er", "inside", "cin", "ro"], "out": ["outer", "report", "list", "at", "OU", "null", "it", "s", "tmp", "obj", "up", "w", "cache", "aos", "pool", "all", "o", "Out", "table", "ver", "l", "flush", "b", "rt", "by", "this", "gr", "nt", "end", "conn", "sys", "co", "v", "y", "err", "screen", "io", "conv", "print", "can", "m", "log", "gc", "write", "OUT", "ou", "output", "os", "con", "t", "to", "ex", "one", "net", "client", "store", "p", "er", "outs"], "solver": ["Solver", " solution", "solution", "resolve", "resolution", " solve", "Solve", "solve", "soln", "Solution", "solved", "Solved", "tsolved", "Soln", "tsoln", "tsolution", "tsolver", "resolver", "resolved", "tsolve", " soln"], "testNumber": [" testCounter", "trialnumber", "testNum", " trialNumber", "trialNumber", "testnumber", " testNum", "trialCounter", "trialNum", " trialCounter", " trialnumber", " testnumber", "testCounter", " trialNum"], "picks": ["Pics", "paticked", "Pickers", " pics", "pickers", "npics", "impickers", "pares", "picking", "impicked", " picking", "nics", "npicks", "Picks", "patics", "picked", "patares", "tics", "tares", " picked", "nicks", "npicked", "nicking", "paticks", "impics", "Picking", "ticks", "pics", "nickers", "npares", " pickers", "ticked", "impicks", "Picked"], "ratings": ["ratrencies", "statings", "caties", " ratifications", "quanties", "quantributes", "ratsings", "latings", " ratables", "ratries", "ratations", "Ratensions", "ratsions", "Rating", "quanting", "quantations", "rotensions", "stating", " raties", "raties", "Rations", "ratsifications", "rding", "ratensions", "ratsifiers", "statategories", "ratables", "rotums", "roties", "statrencies", "requings", "requies", "quantings", "ratsing", "Ratifications", "datations", "ratsums", " ratrencies", " ratifiers", "statries", " ratributes", "ratsabilities", "catifications", " ratities", " ratations", "Ratations", "ratums", "statations", "datings", "rotions", "ratsributes", "serving", "quantrencies", "latities", "lating", "rdities", "Ratings", "ratsensions", "Raties", "requing", "rotings", "catensions", "rdings", "staties", "ratabilities", " ratensions", "servions", "ratifiers", "rotifiers", "statabilities", "rdifications", "datries", "rotifications", "ratsables", "rations", "quantategories", "ratsations", "requables", "latifications", " ratategories", " ratums", " rating", "rating", "ratsies", "ratifications", "ratributes", " rations", "ratities", " ratries", "dating", "catings", "servifications", "servings", "ratategories", " ratabilities"], "n": ["nb", "nn", "names", "nw", "o", "l", "np", "ns", "d", "un", "nr", "norm", "nt", "v", "nos", "no", "ng", "Ni", "name", "j", "sn", "ni", "m", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "NS", "cn", "num", "net", "N", "p", "mn"], "i": ["bi", "multi", "si", "ti", "ai", "e", "it", "ip", "s", "iu", "o", "l", "zi", "xi", "b", "di", "pi", "qi", "x", "d", "ei", "mi", "v", "ini", "ci", "y", "sim", "oi", "name", "id", "j", "a", "iq", "ni", "I", "ind", "ij", "me", "init", "m", "index", "ki", "go", "ii", "gi", "us", "ims", "t", "is", "li", "z", "ui", "ji", "ix", "p", "im", "ic", "u"], "k": ["ka", "kl", "ke", "kr", "kn", "wk", "kind", "sk", "key", "mc", "aka", "kid", "jj", "tek", "ko", "kick", "ks", "work", "ik", "ek", "kar", "kt", "ku", "ky", "ok", "ak", "ack", "kw", "kk", "ac", "uk", "kj", "mk", "ki", "km", "ck", "tc", "tk", "dk", "unk", "HK", "ijk", "kh", "ikk"], "counter": ["order", "card", "loop", "total", "time", "random", "master", "clock", "cookie", "cover", "created", "common", "point", "current", "runner", "value", "walker", "buffer", "times", "continue", "chart", "creator", "result", "ounter", "controller", "outer", "processor", "status", "cpu", "browser", "nr", "iterator", "co", "collection", "conv", "Counter", "index", "loader", "con", "inner", "vector", "ier", "record", "iter", "console", "cm", "next", "pointer", "memory", "number", "currency", "timer", "wrapper", "another", "system", "zero", "count", "ctr", "sequence", "entry", "check", "comment", "instance", "book", "over", "finder", "gc", "computer", "code", "message", "ter"], "stream": ["pair", "REAM", "console", "port", " reader", "content", "read", "file", "driver", "ream", "channel", "context", "form", "window", "iterator", "socket", "type", "line", " upstream", "view", "reader", "stack", "buffer", "spec", "path", "pipe", "input", "Stream"], "buf": ["var", "cur", "uf", "buff", "pkg", "iter", "img", "tmp", "msg", "cap", "db", "vec", "str", "seq", "proc", "err", "cb", "conv", "cv", "rc", "buffer", "Buffer", "br", "rb", "mem", "queue", "ctr", "arr"], "curChar": ["s", "read", "println", "def", "cont", "Print", "_", "num"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.Scanner;\\n\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\\n\t\tScanner scan=new Scanner(new BufferedReader(new InputStreamReader(System.in)));\\n\t\tint x=scan.nextInt();\\n\t\tint s=x%60;\\n\t\tx=x/60;\\n\t\tint m=x%60;\\n\t\tint h=x/60;\\n\\n\t\tSystem.out.println(h+\":\"+m+\":\"+s);\\n\\n\t}\\n\\n}", "target": "84", "substitutes": {"br": ["ber", " bro", " BR", "BR", "mr", " ba", " repl", "fr", "rain", "er", "browser", "dr", " bu", " bl", "bin", "bh", "bt", " sr", " er", " bre", " fr", "bp", " flash", " pr", "bm", "be", " dr", " browser"], "scan": ["an", "query", "be", "ch", "nn", "check", "set", "read", "re", "ann", "spe", "run", "char", "row", "bin", "sel", "out", "sc", "pan", "get", "parse", "sin", "ner", "skip", "sys", "proc", "range", "conv", "can", "sch", "gc", "gate", "san", "con", "ser", "stat", "syn", "mem", "n", "sv", "Scan"], "x": ["dx", "mx", "px", "e", "w", "tx", "xe", "xx", "xd", "ax", "xf", "l", "xi", "b", "xt", "xc", "i", "c", "xp", "d", "ctx", "g", "r", "v", "ux", "X", "y", "on", "ox", "conv", "f", "xs", "wx", "st", "xml", "rx", "index", "xa", "t", "is", "xy", "z", "ex", "width", "n", "ix", "p", "rex", "im", "lex"], "s": ["ies", "ms", "S", "ds", "sol", "ans", "o", "es", "l", "b", "ns", "rs", "c", "i", "ts", "g", "ats", "conv", "a", "f", "xs", "ls", "ss", "sq", "cs", "os", "t", "ps", "is", "z", "n", "p", "fs", "hs", "eds"], "m": ["mp", "ms", "mx", "md", "e", "mt", "w", "sm", "mc", "o", "mm", "l", "b", "c", "i", "d", "g", "r", "mi", "v", "M", "j", "f", "a", "mo", "tm", "mu", "vm", "dm", "t", "gm", "z", "n", "p"], "h": ["oh", "ch", "e", "w", "l", "b", "zh", "H", "host", "he", "c", "i", "d", "hm", "g", "r", "bh", "v", "hd", "high", "id", "hl", "j", "f", "hh", "a", "ph", "hash", "ha", "t", "hex", "dh", "hz", "z", "hi", "n", "sh", "ih", "p", "hs", "hal", "kh", "u"]}}
{"code": "import java.util.Scanner;\\nimport java.util.ArrayList;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        System.out.print(a*b);\\n        System.out.print(\" \");\\n        System.out.println((a+b)*2);\\n    }\\n}", "target": "92", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "ctrl", "cmp", "anc", "sac", "cr", "Sc", "c", "inc", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "uc", "nc", "system", "cs", "tc", "sq", "ck", "se", "pc", "isc", "syn", "desc", "scl", "sh", "sv", "sp", "esc"], "a": ["an", "aff", "la", "ba", "ab", "da", "ea", "at", "ai", "au", "ama", "aka", "aaa", "aj", "area", "x", "sha", "i", "d", "A", "era", "act", "ia", "ta", "ma", "admin", "ao", "va", "alpha", "ac", "ae", "ga", "oa", "sta", "aa", "t", "apa", "na", "sa", "ca", "n", "div", "aq", "p"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "fb", "sb", "eb", "l", "ob", "gb", "bs", "db", "x", "by", "c", "i", "d", "g", "bc", "v", "y", "bar", "cb", "j", "h", "back", "m", "mb", "bis", "bp", "t", "br", "base", "z", "B", "rb", "n", "p", "u"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner scanner = new Scanner(System.in);\\n\t\t\\n\t\tint n = scanner.nextInt();\\n\t\tint m = scanner.nextInt();\\n\t\t\\n\t\tint[][] a = new int[n][m];\\n\t\tint[] b = new int[m];\\n\t\t\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tfor (int j = 0; j < m; j++)\\n\t\t\t\ta[i][j] = scanner.nextInt();\\n\t\t}\\n\t\t\\n\t\tfor (int i = 0; i < m; i++)\\n\t\t\tb[i] = scanner.nextInt();\\n\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tint c = 0;\\n\t\t\tfor (int j = 0; j < m; j++) {\\n\t\t\t\tc += (a[i][j] * b[j]);\\n\t\t\t}\\n\t\t\tSystem.out.println(c);\\n\t\t}\\n\t}\\n\\n}\\n\\n", "target": "185", "substitutes": {"scanner": ["scanener", " scaner", "Scanter", "canner", "Scaner", "caner", "scanter", "Scanener", " scanter", " scanener", "canener", "canter", "Scanner", "scaner"], "n": ["an", "nb", "en", "nn", "network", "o", "l", "np", "ns", "pi", "x", "un", "nr", "g", "r", "nt", "v", "nm", "no", "y", "ng", "on", "name", "span", "sn", "fn", "nu", "nl", "nc", "ny", "ln", "ne", "nan", "t", "na", "z", "net", "dn", "N", "p", "mn"], "m": ["mp", "ms", "mat", "perm", "s", "mt", "cm", "um", "mr", "mc", "rem", "all", "mm", "o", "l", "k", "pi", "x", "d", "med", "g", "r", "mi", "nm", "v", "M", "pm", "y", "span", "rm", "ma", "h", "f", "mo", "me", "mk", "tm", "km", "mu", "mb", "dm", "t", "z", "gm", "bm", "mis", "man", "em", "p", "im", "mn", "mun"], "a": ["ap", "an", "acs", "av", "ba", "ab", "ai", "au", "s", "anta", "o", "l", "aaa", "aj", "area", "am", "A", "r", "ar", "ia", "ta", "ao", "ac", "ae", "ata", "xa", "ga", "oa", "aa", "as", "t", "att", "apa", "sa", "ca", "p", "al", "u"], "b": ["nb", "bi", "ba", "bl", "ab", "bb", "fb", "ib", "e", "sb", "wb", "eb", "l", "ob", "bs", "bo", "db", "d", "g", "r", "bc", "v", "bf", "bar", "cb", "h", "another", "bis", "bp", "t", "br", "z", "B", "rb", "be"], "i": ["ish", "si", "at", "ti", "ai", "iii", "ip", "it", "iu", "ie", "ir", "PI", "zi", "xi", "di", "iti", "pi", "qi", "ei", "this", "ik", "ion", "mi", "ity", "ini", "ci", "iso", "sim", "id", "ia", "io", "uri", "ni", "I", "ind", "al", "ij", "q", "iy", "init", "ami", "me", "ori", "ki", "\u0438", "asi", "ii", "info", "gi", "us", "ims", "is", "li", "hi", "ui", "ji", "ix", "fi", "im", "ic", "phi", "ri"], "j": ["jo", "Ja", "oj", "bj", "ot", "obj", "si", "jc", "json", "it", "J", "s", "pt", "o", "fr", "ax", "l", "jit", "tr", "dj", "jas", "jj", "di", "aj", "jl", "by", "el", "jp", "uj", "rel", "js", "og", "g", "off", "r", "ion", "v", "ja", "y", "ju", "ng", "ind", "sp", "ij", "q", "py", "ph", "je", "kj", "ort", "jac", "us", "ne", "br", "li", "z", "jump", "ev", "ji", "pr", "ix", "p", "note", "mn"], "c": ["cp", "total", "cache", "cat", "cm", "cal", "csv", "cum", "cd", "crit", "p", "cr", "arc", "out", "d", "sc", "cost", "cc", "fc", "C", "cont", "v", "lc", "rc", "ac", "gc", "category", "uc", "tc", "cs", "cf", "con", "pc", "t", "dc", "z", "count", "ce", "ct", "ca", "cu", "unc", "u", "chart"]}}
{"code": "import java.util.*;\\npublic class Main{\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint n = sc.nextInt();\\n\t\tint a[] = new int[n];\\n\t\tint count = 0;\\n\t\tint precount = 0;\\n\\n\t\tfor (int i = 0;i<n ;i++ ) {\\n\t\t\ta[i] = sc.nextInt();\\n\t\t}\\n\\n\t\tfor (int i = 0;i<n ;i++ ) {\\n\t\t\tif (a[i]%2==0) {\\n\t\t\t\tprecount++;\\n\t\t\t\tif (a[i]%3==0||a[i]%5==0) {\\n\t\t\t\t\tcount++;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\\n\t\tif (count==precount) {\\n\t\t\tSystem.out.println(\"APPROVED\");\\n\t\t}else{\\n\t\t\tSystem.out.println(\"DENIED\");\\n\t\t}\\n\\n\t}\\n}\\n", "target": "113", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "sm", "mc", "anc", "cr", "Sc", "sel", "c", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "sq", "cs", "tc", "ck", "pc", "ctl", "dc", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "an", "en", "size", "nn", "null", "nor", "network", "ll", "o", "l", "np", "k", "ns", "c", "d", "g", "nt", "nm", "v", "no", "ng", "name", "j", "number", "sn", "length", "fn", "m", "nu", "nl", " N", "nc", "ne", "nan", "t", "na", "z", "cn", "net", "num", "len", "N", "p", "mn"], "a": ["ap", "an", "la", "ba", "ab", "parts", "eas", "da", "ea", "obj", "list", "au", "e", "all", "aaa", "b", "aux", "area", "c", "am", "A", "era", "v", "ar", "ia", "ma", "ta", "h", "ao", "alpha", "ac", "ae", "app", "ach", "m", "ata", "ga", "oa", "aa", "as", "att", "t", "na", "sta", "array", "fa", "sa", "ca", "p", "history", "arr"], "count": ["result", "scroll", "report", "nb", "core", "size", "list", "contact", "close", "total", "quiet", "check", "test", "status", "comment", "depth", "chain", "allow", "sum", "const", "counter", "found", "conf", "c", "amount", "coll", "frequency", "find", "nt", "cont", "search", "collection", "number", "length", "print", "force", "hold", "index", "cast", "cond", "log", "call", "Count", "info", "continue", "ount", "code", "num", "ct", "ctr", "match", "sequence", "history"], "precount": ["precounter", "prelength", "preclose", "PRECount", "postlength", "precode", "precache", "postcode", "Precode", "prec", " prec", "preCount", "interCount", " preclose", " precache", "postclose", "Preclose", "Precount", "intercounter", " precode", "Prelength", "intercache", "postcount", "intercount", "PreCount", "PREcount", " precounter", "Prec", "PREcache", "PREcounter", " preCount", "postc", " prelength", "postCount"], "i": ["bi", "in", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "gu", "o", "PI", "chain", "zi", "xi", "progress", "di", "pi", "qi", "ei", "this", "mi", "point", "v", "ini", "ity", "ci", "y", "sim", "err", "oi", "id", "j", "io", "uri", "I", "ind", "print", "ij", "q", "init", "iy", "m", "index", "ori", "me", "ki", "\u0438", "php", "batch", "ii", "gi", "info", "eu", "to", "is", "li", "base", "hi", "ui", "cli", "client", "fire", "ji", "ix", "fi", "im", "ic", "phi", "ri"]}}
{"code": "import java.util.Scanner;\\nimport java.util.Arrays;\\n\\npublic class Main{\\npublic static void main(String[] args){\\nScanner scan=new Scanner(System.in);\\nint n=scan.nextInt();\\nint m=scan.nextInt();\\nint[] p=new int[m];\\nString[] s=new String[m];\\n\\nint i=0;\\nfor(i=0;i<m;i++){\\n    p[i]=scan.nextInt();\\n    s[i]=scan.next();\\n}\\n  \\nint[] a=new int[n];\\nint[] b=new int[n];\\nfor(i=0;i<n;i++){\\n    a[i]=0;\\n    b[i]=0;\\n}\\n  \\nfor(i=0;i<m;i++){\\n    if(s[i].equals(\"WA\")&&b[p[i]-1]==0){\\n        a[p[i]-1]=a[p[i]-1]+1;\\n    }\\n    if(s[i].equals(\"AC\")&&b[p[i]-1]==0){\\n        b[p[i]-1]=b[p[i]-1]+1;\\n    }\\n}\\n\\nint sum=0;\\nint summ=0;\\nfor(i=0;i<n;i++){\\n  if(b[i]==1){\\n  sum=sum+a[i];\\n  }\\n  summ=summ+b[i];\\n}\\n\\nSystem.out.println(summ+\" \"+sum);\\n}\\n}", "target": "48", "substitutes": {"scan": ["an", "scroll", "in", "query", " Scan", "report", "spin", " scanner", "ch", "sync", "sign", "pass", "check", "cat", "sm", "read", "gen", "send", "connect", "ann", "run", "see", "by", "row", "out", "sc", "cgi", "g", "sin", "ner", "r", "parse", "skip", "sys", "proc", "black", "find", "sim", "range", "search", "io", "can", "reach", "show", "gc", "gate", "san", "system", "se", "con", "ser", "link", "na", "stat", "store", "sur", "auto", "sql", "Scan", "sp"], "n": ["nb", "an", "en", "ms", "nn", "network", "all", "none", "o", "l", "np", "ns", "pi", "x", "c", "d", "un", "g", "r", "nt", "v", "nm", "no", "M", "y", "on", "name", "j", "ren", "sn", "h", "fn", "nu", "nl", "nc", "ln", "nan", "ne", "t", "na", "cn", "num", "net", "dn", "N", "mn"], "m": ["ms", "mat", "md", "perm", "mt", "cm", "mr", "mc", "all", "mm", "o", "l", "k", "c", "d", "g", "r", "mi", "pm", "v", "M", "y", "mod", "rm", "j", "ma", "h", "f", "mo", "length", "mk", "dm", "t", "gm", "bm", "mis", "man", "im", "mn", "mun"], "p": ["rep", "mp", "ap", "fp", "cp", "pers", "pkg", "ip", "it", "perm", "pg", "pt", "wp", "o", "pe", "l", "pad", "np", "ping", "u", "pi", "vp", "P", "op", "c", "jp", "lp", "ctx", "g", "r", "pm", "pat", "point", "dp", "pro", "pid", "tp", "j", "app", "post", "pre", "pb", "exp", "bp", "pc", "ps", "t", "pa", "tip", "pl", "pr", "pp", "sp"], "s": ["ses", "ms", "S", "si", "sts", "sb", "sign", "stats", "series", "ns", "ins", "strings", "bs", "text", "c", "ts", "sc", "str", "g", "r", "v", "sys", "ats", "j", "h", "sn", "f", "gs", "string", "st", "ls", "ss", "sl", "sq", "so", "cs", "bis", "se", "t", "ps", "is", "sing", "sa", "sql", "sh", "sv", "rs", "sp", "u"], "i": ["multi", "list", "si", "json", "ip", "iii", "PI", "chain", "l", "zi", "di", "c", "my", "point", "ini", "err", "me", "info", "exp", " I", "hi", "phi", "it", "ie", "status", "o", "qi", "vi", "ik", "y", "sim", "ia", "uri", "q", "init", "ami", "index", "ori", "ii", "gi", "us", "cli", "ji", "ic", "ri", "fire", "bi", "iter", "iu", "gu", "key", "series", "ei", "this", "g", "isi", "j", "io", "I", "ind", "print", "ij", "t", "is", "li", "ex", "ui", "client", "ix", "yi", "ti", "ai", "xi", "pi", "mi", "ci", "oi", "id", "ki", "\u0438", "batch", "fi", "er", "im", " j", "wi"], "a": ["ap", "an", "av", "la", "ba", "ab", "at", "ea", "ai", "au", "w", "o", "aaa", "aj", "area", "el", "c", "am", "ad", "A", "r", "act", "ar", "ia", "ma", "ao", "va", "app", "ac", "ae", "ach", "ata", "abs", "ga", "oa", "aa", "as", "att", "na", "apa", "pa", "sa", "ca", "aq", "al", "u"], "b": ["nb", "bi", "ba", "bl", "ab", "abb", "be", "bb", "fb", "ib", "sb", "wb", "o", "eb", "l", "bd", "ob", "bs", "gb", "bin", "bo", "db", "c", "bg", "g", "r", "bh", "bc", "v", "bf", "y", "cb", "j", "h", "ac", "ble", "pb", "bis", "aa", "bp", "br", "B", "rb", "u"], "sum": ["result", "report", "summary", "add", "size", "multi", "si", "total", "vol", "set", "cache", "max", "um", "diff", "cal", " SUM", "prof", "comment", "cum", "mm", "u", "mary", "out", "mix", "med", "share", "dump", "mean", "score", "sim", "html", "sup", "hash", "ul", "index", "sam", "dev", "zero", "us", "se", "acc", "num", "count", "sa", "su", "mem", "div", "sample", "umm", "Sum", "average", "ash"], "summ": ["lsumm", "rsum", "lsamm", " sump", "samm", "sump", "tum", "tsum", "rsamm", "tsamm", "tumm", "msumm", "msamm", "psamm", "rsump", "Scum", "tsumm", "rsumm", "psum", "Sum", "scum", "tamm", "tsump", " samm", "Samm", "psumm", "lsum", "lscum", "tump", "psump", "Summ", "Sump", "msum", " scum", "msump"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        StringBuilder sb = new StringBuilder();\\n        \\n        String symbol = \"#\";\\n        String dot = \".\";\\n        \\n        while (true) {\\n            String[] ary = br.readLine().split(\" \");\\n            int numH = Integer.parseInt(ary[0]);\\n            int numW = Integer.parseInt(ary[1]);\\n            \\n            if(numH == 0 && numW == 0){\\n                break;\\n            }\\n            \\n            for (int i = 0; i < numH; i++) {\\n                for (int j = 0; j < numW; j++) {\\n                    if (i == 0 || i == (numH - 1)) {\\n                        sb.append(symbol);\\n                    } else if (j == 0 || j == (numW - 1)) {\\n                        sb.append(symbol);\\n                    } else if (numW > 2 && numH > 2){\\n                        sb.append(dot);\\n                    } else {\\n                        sb.append(symbol);\\n                    }\\n                }\\n                sb.append(\"\\n\");\\n            }\\n            sb.append(\"\\n\");\\n        }\\n        \\n        System.out.print(sb);\\n    }\\n}", "target": "19", "substitutes": {"br": ["wr", "bsp", "ber", "bi", "hr", "bl", "kr", "bb", "ch", "BR", "Br", "vr", "mr", "fr", "eb", "er", "tr", "b", "buf", "dr", "bd", "bs", "cr", "db", "jp", "str", "bh", "bc", "bf", "yr", "bt", "sp", "bridge", "lr", "bp", "rb", "bm", "pr", "be", "bro", "bn"], "sb": ["nb", "bj", "abb", "si", "bb", "ib", "fb", "buff", "zb", "sf", "ub", "rub", "erb", "func", "eb", "sbm", "bps", "orb", "see", "b", "lb", "sound", "gob", "bs", "gb", "db", "lp", "addr", "bg", "kb", "bh", "bf", "sth", "bt", "SB", "xb", "arb", "cb", "conv", "esm", "sn", "rob", "sg", "obb", "shell", "ls", "rpm", "gc", "bash", " SB", "ssl", "sq", "pb", "mb", "bis", "bp", "rb", "sa", "stab", "sql", "scl", "sv", "sp"], "symbol": ["shadowstant", "pymbol", "stylock", " syometric", "yeter", "syometric", "seletter", "symmbol", "symeter", " syntax", "tylock", "sylock", "seeter", "syric", "syletter", "shipstant", "symletter", "sentax", "shadowntax", "symric", "shipmer", "symmer", "symstant", "syeter", "styntax", "symb", "symer", " syric", "pyric", "yletter", "shipmbol", " symb", "stymbol", "syntax", "pyntax", "stymb", "symometric", "yntax", "symntax", " sylock", "tymbol", "shipntax", "ymbol", "sembol", "pyometric", "systant", "tyntax", "tymb", "shadowmer", "shadowmbol"], "dot": ["cross", "dt", "ot", "touch", "fly", "jack", "spot", "otted", "dos", "domain", "lat", "msg", "comment", "fix", "sum", "bang", "pot", " dotted", "shadow", "prefix", "mot", "bot", "solid", "drop", "top", "psy", "sat", "normal", "scan", " DOT", " Dot", "cot", "select", "dash", "dollar", "jump", " dots", "sym"], "ary": ["ical", "multi", "ay", "erey", "ory", "urry", "bare", "aria", "dial", "re", "aries", "tr", "eway", "aux", "arry", "uary", "binary", "ARY", "sky", "nr", "air", "sys", "ar", "ray", "y", "arb", "etry", "ty", "io", "ere", "itary", "inter", "ery", "ry", "are", "rely", "secondary", "info", "aro", "arity", "dry", "fy", "arie"], "numH": ["subjectHI", "tenh", " numOH", "blockMH", "nomP", "numberH", "numHH", "numHA", "numOH", "rankH", "rankMH", " numHH", "sumH", "sumW", "numHI", " numHA", "numP", "drawHH", "nuW", "numHT", "numberh", "nuHA", "sumHT", "numHTTP", " numHI", "tenHT", "rankOH", "rankh", "drawHTTP", "subjectHT", "drawHT", "nuh", "tenHTTP", "nomW", "nuOH", " numMH", "numberHTTP", "numberHT", "nuHH", "blockh", "drawH", "drawHA", "tenH", "nomH", " numP", "nuP", "subjectH", "nomOH", " numHT", " numh", "sumHI", "subjectW", "drawh", "blockH", "numMH", "nuH", "blockOH", "numh"], "numW": ["dataVW", "NUMV", "namVW", "numberJ", "numberWC", "NUMW", " numV", "namH", "umW", " numWC", "namW", "monW", "numberH", "nmW", "nmEW", "numVW", "numEW", "nEW", "umVW", "umw", "markW", "nmWC", "umH", " numWR", "nW", " numJ", "dataH", "namWC", "numWR", "numV", "namWR", " numw", "monWR", "markV", "numJ", "nVW", "numberW", "numberVW", "numL", "NUML", "markw", "umJ", "nWC", "dataW", "numberEW", "numw", "monH", "nmVW", "NUMw", "markL", "umWC", "dataw", "monWC", " numL", "namw", "numWC"], "i": ["bi", "multi", "si", "ti", "iter", "iii", "ip", "it", "iu", "ie", "o", "l", "zi", "xi", "di", "pi", "qi", "x", "mi", "v", "ini", "ci", "y", "id", "ia", "io", "iq", "ni", "I", "ind", "ij", "q", "init", "ami", "m", "me", "ori", "ki", "\u0438", "ii", "info", "gi", "is", "li", "hi", "ui", "ji", "ix", "fi", "im", "ic", "phi", "ri"], "j": ["jo", "oj", "bj", "obj", "jc", "J", "json", "it", "e", "s", "ie", "o", "fr", "er", "l", "b", "dj", "k", "jj", "aj", "jl", "out", "el", "jp", "x", "uj", "rel", "js", "str", "g", "r", "v", "ja", "y", "err", "sp", "jac", "ij", "q", "je", "kj", "m", "ne", "to", "li", "z", "job", "jump", "ji", "n", "pr", "p", "ge"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\npublic static void main(String[] args) {\\nScanner sc = new Scanner(System.in);\\n\\n\\nwhile(true){\\nint i,j,k;\\ndouble sum=0,ave,s=0,sg=0; \\n\\n\\nj = sc.nextInt();\\nint[] intarray = new int[j];\\n\\nif (j == 0 ){\\n    break;\\n}\\n\\nfor(i=0;i<j;i++){\\n\\n intarray[i] = sc.nextInt();\\n\\nsum = sum + intarray[i];\\n}\\nave = sum/j;\\n\\nfor(k=0;k<j;k++){\\n\\n    s =  s + (intarray[k]-ave)*(intarray[k]-ave);\\n}\\n\\n\\n\\nsg = Math.sqrt(s/j);\\n\\nSystem.out.println(sg);\\n\\n}\\n}\\n}\\n", "target": "203", "substitutes": {"sc": ["irc", "ch", "sync", "sw", "cle", "cam", "asc", "mc", "osc", "anc", "cr", "Sc", "sci", "c", "ctx", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "ss", "cl", "pb", "nc", "sq", "cs", "tc", "system", "pc", "ctl", "dc", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "i": ["yi", "bi", "multi", "list", "si", "ti", "ai", "it", "ip", "iu", "ie", "source", "l", "zi", "xi", "di", "pi", "qi", "x", "iat", "ei", "this", "ik", "my", "mi", "point", "ini", "ci", "y", "sim", "id", "ia", "iso", "io", "f", "uri", "I", "ind", "print", "ij", "ami", "init", "me", "index", "ori", "\u0438", "asi", "ii", "gi", "t", "is", "li", "hi", "ui", "inner", "ix", "im", "ic", "phi", "u", "ri"], "j": ["Ja", "bj", "si", "obj", "jc", "J", "json", "it", "ch", "vol", "o", "l", "tr", "dj", "b", "jj", "aj", "jl", "prime", "bo", "x", "jp", "c", "uj", "js", "str", "g", "r", "v", "ja", "ju", "y", "gov", "f", "ut", "ij", "q", "je", "kj", "m", "ne", "org", "t", "br", "z", "jump", "ji", "n", "pr", "p", "im"], "k": ["ka", "kl", "ke", "kr", "kn", "wk", "kind", "ark", "sk", "key", "kg", "kan", "kid", "K", "ko", "ks", "isk", "ik", "ek", "kt", "ask", "ku", "ak", "ack", "kk", "kw", "uk", "q", "kj", "mk", "ki", "km", "ck", "tk", "dk", "unk", "ijk", "kh", "ikk"], "sum": ["add", "summary", " sums", "size", "si", "total", "au", "vol", "max", "um", "diff", "cal", "cum", "sav", "save", "out", "c", "med", "v", "mass", "sim", "sv", "sat", "Sum", "ass", "m", "ul", "hash", "index", "me", "sam", "ss", "hum", "zero", "dev", "us", "se", "scale", "util", "num", "su", "sa", "count", "n", "mem", "mean", "average"], "ave": ["ale", "ge", "ive", "av", "rate", "ay", "ve", "ain", "ai", "au", "rade", "aler", "um", "ade", "aka", "ang", "sav", "rat", "save", "ape", "rage", "ice", "aver", "ue", "ane", "air", "have", "mean", "ame", "ume", "age", "ack", "sv", "ae", "shot", "are", "slave", "aw", "root", "te", "se", "aved", "scale", "leave", "osa", "vae", "ose", "aves", "ate", "average", "ake"], "s": ["summary", "ms", "S", "si", "sb", "set", "ds", "sw", "sol", "stats", "w", "single", "l", "b", "ins", "ns", "save", "c", "ts", "d", "js", "g", "v", "sys", "y", "sd", "a", "f", "gs", "sat", "ls", "m", "sam", "ss", "sl", "sq", "cs", "os", "se", "t", "ps", "simple", "stat", "su", "sa", "n", "p", "sv", "rs", "sp", "sym"], "sg": ["si", "ain", "ws", "SG", "squ", "sb", "ag", "gam", "msg", "sbm", "np", "vd", "ags", "gb", "lp", "g", "igm", "hd", "sys", "rg", "igma", "tp", "orr", "sd", "rss", "gs", "sch", "gp", "sr", "gc", "ssl", "erg", "sq", "tk", "gm", "gd", "su", "sa", "sql", "tg", "sur", "dl", "sv", "sp", "cfg", "pg"], "intarray": ["intarchive", " intarr", "iattribute", " intstring", "INTArray", "intArray", "interarchive", "inetarr", "iarr", "interarray", "inpair", "iangular", " intarchive", "INTarr", "ivar", "Intcollection", "intattribute", "uintarray", "intstring", "intarr", "iarray", "ipair", "IntArray", "intlist", "inetarray", "inangular", "instring", "uintarchive", "interlist", "inetattribute", "INTarray", "inarray", "Intarr", " intattribute", "intvar", "interarr", "intcollection", "intangular", " intArray", " intlist", "INTcollection", " intvar", "iArray", "intpair", "icollection", " intangular", "Intvar", "istring", " intpair", "uintarr", "uintlist", "Intarray"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n\\n        Scanner sc = new Scanner(System.in);\\n        double W = sc.nextDouble();\\n        double H = sc.nextDouble();\\n        double x = sc.nextDouble();\\n        double y = sc.nextDouble();\\n\\n        double area = W*H/2;\\n        int isMulti = 0;\\n        if (x == W/2 && y == H/2) {\\n            isMulti = 1;\\n        }\\n\\n        System.out.println(String.format(\"%.6f\", area) + \" \" + isMulti);\\n    }\\n\\n}", "target": "182", "substitutes": {"sc": ["ch", "sync", "asc", "mc", "osc", "ctrl", "cmp", "anc", "cr", "Sc", "out", "ko", "c", "bc", "cc", "sys", "cont", "screen", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "gc", "scan", "cl", "ss", "uc", "nc", "system", "cs", "tc", "sq", "pb", "ck", "pc", "ctl", "dc", "isc", "desc", "scl", "sv", "sp", "esc"], "W": ["SW", "EW", "VW", "MW", "D", "WR", "w", "WH", "Width", "WD", "HTML", "Y", "Length", "Wh", "A", "V", "WI", "TH", "WA", "M", "C", "X", "WW", "FW", "WB", "Size", "WS", "NW", "We", "WE", "WC", "R", "DW", "CW", "OW", "RW", "WM", "WP", "Win", "L", "B", "F", "Q", "N", "BW", "SH", "Weight"], "H": ["HE", "HTTP", "Eh", "D", "HH", "HR", "WH", "T", "NH", "K", "Height", "HI", "HTML", "MH", "HD", "Y", "OH", "HO", "Length", "HC", "P", "HA", "AH", "RH", "V", "TH", "High", "M", "C", "HB", "X", "He", "CH", "h", "HS", "height", "G", "His", "HT", " h", "HQ", "ANG", "L", "B", "N", "SH"], "x": ["dx", "mx", "px", "at", "tx", "w", "lat", "xx", "xd", "ax", "xf", "l", "xi", "xt", "xc", "fx", "xp", "el", "i", "left", "act", "X", "ox", "on", "h", "wx", "xs", "rx", "XP", "xy", "ex", "width", "ix"], "y": ["ies", "ay", "sy", "ot", "ch", "ye", "ey", "yl", "b", "Y", "by", "i", "sky", "ys", "my", "cy", "v", "yr", "sys", "on", "ty", "j", "h", "yt", "py", "ya", "iy", "m", "oy", "ym", "ny", "xy", "z", "n", "yy", "lon"], "area": ["usage", "arma", "size", "ea", "space", "total", "au", "eta", " areas", "rea", "radius", "aria", "aka", "ada", "Area", "ATA", "amount", "era", "window", "usa", "SA", "address", "type", "iso", "range", "ta", "a", "number", "length", "va", "alpha", "value", "TA", "ha", "near", "oa", "zone", "data", "scale", "apa", "base", "count", "sa", "width", "angle", "average"], "isMulti": ["isSingle", "IsSingle", "simMultiple", "IsMulti", "hasMultiple", "simMulti", "hasMult", "isMult", " isMult", "IsMult", "hasSingle", "isMultiple", " isMultiple", "simSingle", "simMult", " isSingle", "IsMultiple", "hasMulti"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        String s = sc.next();\\n        int c = 0;\\n        if (s.substring(0,1).equals(\"1\")) c++;\\n        if (s.substring(1,2).equals(\"1\")) c++;\\n        if (s.substring(2,3).equals(\"1\")) c++;\\n        System.out.println(c);\\n\t}\\n}", "target": "165", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "ko", "sel", "dec", "bc", "cc", "sys", "SC", "lc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "sq", "cs", "tc", "system", "pc", "ser", "capt", "isc", "desc", "scl", "sv", "rs", "sp", "esc"], "s": ["in", "ms", "S", "space", "ws", "sts", "sb", "sf", "sw", "ds", "stats", "state", "ns", "i", "ts", "js", "str", "g", "v", "sys", "ats", "j", "its", "h", "conv", "gs", "st", "string", "ls", "m", "aws", "sl", "ss", "abs", "sq", "less", "qs", "se", "t", "ps", "is", "su", "n", "sql", "sv", "rs", "sp"], "c": ["add", "cur", "cache", "w", "cm", "mc", "o", "chain", "b", "k", "counter", "cd", "pointer", "ec", "conf", "arc", "out", "x", "i", "d", "coll", "g", "draw", "fc", "co", "C", "cont", "cc", "err", "current", "fac", "y", "v", "conv", "a", "h", "lc", "f", "cv", "col", "ac", "rc", "m", "gc", "call", "uc", "cs", "tc", "con", "pc", "t", "dc", "z", "count", "ce", "code", "ct", "n", "ca", "cu", "enc", "unc", "dec", "u"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint l = sc.nextInt();\\n\t\tint r = sc.nextInt();\\n\\n\t\tlong min = 9999;\\n\\n\t\tfor (long i = l; i < r; i++) {\\n\t\t\tfor (long j = i + 1; j <= r; j++) {\\n\t\t\t\tlong num = (i * j) % 2019;\\n\t\t\t\tif (min > num) {\\n\t\t\t\t\tmin = num;\\n\t\t\t\t\tif (min == 0) {\\n\t\t\t\t\t\tSystem.out.println(min);\\n\t\t\t\t\t\treturn;\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(min);\\n\\n\t}\\n\\n}\\n", "target": "193", "substitutes": {"sc": ["ch", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "ko", "c", "inc", "ner", "bc", "cc", "sys", "ok", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "nc", "system", "cs", "tc", "sq", "ck", "se", "pc", "ctl", "dc", "isc", "scl", "sv", "sp", "esc"], "l": ["e", "ll", "o", "b", "ld", "pi", "loc", "x", "c", "d", "lp", "tl", "g", "ly", "v", "ml", "hl", "h", "f", "lc", "le", "ls", "m", "ul", "nl", "sl", "il", "ol", "ln", "t", "li", "L", "z", "pl", "len", "n", "p", "u"], "r": ["rn", "ir", "mr", "ro", "re", "b", "rd", "rid", "rt", "cr", "c", "d", "nr", "g", "ar", "range", "rm", "h", "res", "rc", "q", "sr", "m", "R", "rf", "lr", "rec", "t", "rr", "br", "rb", "n", "pr", "p", "er", "rs", "rar", "ru", "ri"], "min": ["snap", "max", "diff", "local", "dim", "low", "amin", "best", "sum", "no", "mod", "value", "me", "log", "scale", "Min", "n", "mean", "tail", "limit", "mine", "sub", "rel", "med", "Minimum", "version", "sim", "mint", "minute", "fn", "sort", "MIN", "emin", "len", "temp", "sample", "second", "partial", "aug", "next", "none", "lower", "margin", "only", "default", "Mini", "mini", "ni", "nom", "beta", "rest", "mins", "minimum", "zero", "ne", "small", "dem", "lt", "sol", "test", "const", "cmp", "un", "mi", "lock", "start", "m", "mon", "sam", "rand", "stat", "mn"], "i": ["yi", "bi", "in", "multi", "si", "ti", "ai", "ip", "it", "iu", "ir", "ie", "o", "zi", "xi", "di", "pi", "x", "ei", "iri", "ik", "mi", "v", "ini", "ci", "y", "ia", "io", "I", "ind", "ij", "m", "ki", "asi", "ii", "gi", "ims", "is", "li", " Xi", "hi", "ui", "ji", "n", "ix", "im", "ic", "phi", "u", "ri"], "j": ["jo", "bi", "bj", "oj", "obj", "jc", "J", "json", "it", "jack", "fr", "jit", "lu", "dj", "b", "k", "jj", "jas", "ld", "aj", "jl", "bs", "jp", "son", "uj", "js", "g", "v", "ja", "y", "gov", "jac", "ij", "q", "je", "kj", "br", "z", "job", "jump", "other", "ji", "pr", "ge", "im", "kh", " J"], "num": ["nb", "mom", "obj", "missing", "total", "nn", "snap", "um", "local", "cal", "next", "ver", "np", "tim", "sum", "cmp", "nm", "no", "dec", "NUM", "name", "conv", "number", "nom", "nu", "m", "mon", "fn", "pn", "index", "mu", "ne", "Num", "valid", "con", "na", "net", "n", "node", "temp", "val", "nam", "mn"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint employee = sc.nextInt();\\n\t\tint[] results = new int[employee];\\n\t\tfor (int i = 0; i < employee - 1; i++) {\\n\t\t\tint boss = sc.nextInt();\\n\t\t\tresults[boss - 1]++;\\n\t\t}\\n\t\tsc.close();\\n\t\tfor (int result : results) {\\n\t\t\tSystem.out.println(result);\\n\t\t}\\n\t}\\n\\n}\\n", "target": "12", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "arc", "c", "sub", "inc", "dec", "bc", "cc", "sys", "fc", "SC", "lc", "rc", "cv", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "pb", "nc", "system", "tc", "cs", "sq", "ck", "pc", "ctl", "dc", "pl", "isc", "syn", "scl", "sh", "sv", "sp", "esc"], "employee": ["fundee", "occupette", "Employey", "Employees", "fundey", "employement", "employe", "occupees", "funde", "employees", " employette", "occuporg", "employey", "eyees", "Employee", "Employau", "employau", "occupee", "occupement", "occupau", "Employe", "fundees", "occupey", "eyee", "occupe", "Employorg", "employase", "occupase", "eyement", "eyase", " employase", "eyau", "eyorg", "employette", " employement", "employorg", "eyette"], "results": ["reports", "pieces", "reads", "roots", "successful", "blocks", "rings", "aps", "ports", "finals", "places", "grades", "changes", "abilities", "Results", "views", "details", "marks", "vals", "maps", "ces", "rates", "RESULTS", "uploads", "forms", "sets", "runs", "ends", "rows", "its", "res", "posts", "prints", "needs", "orders", "values", "artifacts", "times", "helps", "games", "checks", "valid", "tests", "amps", "works", "outs", "ults"], "i": ["multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "gu", "ie", "xi", "di", "pi", "qi", "x", "ei", "mi", "ini", "ci", "y", "id", "sim", "j", "io", "I", "ind", "q", "init", "m", "ki", "ii", "gi", "is", "li", "hi", "ui", "cli", "ix", "im", "ic", "phi", "u", "fire"], "boss": ["manager", "Boss", "mor", "gre", "ross", "rain", "crow", "world", "chain", "alias", "mob", "leader", "rail", "weak", "ossus", "fall", "password", "cow", "grand", "shield", "arge", "guard", "big", "proxy", "little", "ass", "fat", "slave", "adiator", "walker", "machine", "gate", "oire", "storm", "less", "piece", "asser", "bus", "peg", "ghost"], "result": ["report", "feature", "card", "were", "pair", "complete", "successful", "success", "product", "test", "diff", "status", "comment", "block", "see", "ful", "char", "row", "def", "correct", "relation", "mate", "date", "ret", "resource", "res", "number", "currency", "back", "value", "mark", "Result", "respond", "continue", "valid", "page", "direction", "rule", "su", "message", "register", "match", "description", "entry"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint X = sc.nextInt();\\n\t\twhile (!isPrime(X)) {\\n\t\t\tX++;\\n\t\t}\\n\t\tSystem.out.println(X);\\n\t\tsc.close();\\n\t}\\n\\n\t//\u7d20\u6570\u5224\u5b9a\\n\t//\u8a08\u7b97\u91cfO(\u221aN)\\n\tpublic static boolean isPrime(long n) {\\n\t\tif (n == 1) {\\n\t\t\treturn false;\\n\t\t}\\n\t\tfor (long i = 2; i * i <= n; i++) {\\n\t\t\tif (n % i == 0) {\\n\t\t\t\treturn false;\\n\t\t\t}\\n\t\t}\\n\t\treturn true;\\n\t}\\n}", "target": "183", "substitutes": {"sc": ["cur", "ch", "sw", "cle", "src", "sm", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "row", "arc", "c", "sub", "inc", "bc", "cc", "sys", "fc", "SC", "lc", "rc", "cv", "usc", "sch", "sec", "sr", "nl", "gc", "cl", "ss", "scan", "uc", "nc", "sq", "tc", "cs", "ck", "pc", "pl", "isc", "capt", "syn", "cu", "sv", "sp", "esc"], "X": ["XT", "FX", "J", "MAX", "T", "PE", "Xi", "Value", "K", "U", "EX", " x", "H", "Y", "TX", "Z", "IX", "x", "XL", "P", "DX", "V", "TH", "Ex", "C", "UX", "Int", "I", "MX", "Max", "AX", "Java", "CE", "XXX", "XX", "EXT", "XP", "VAL", "L", "OX", "Tx", "Q", "F", "N", "Ax", "TY"]}}
{"code": "\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws NumberFormatException,\\n\t\t\tIOException {\\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(\\n\t\t\t\tSystem.in));\\n\t\tStringBuilder builder = new StringBuilder();\\n\t\tStringTokenizer tokenizer;\\n\t\tint a = Integer.parseInt(reader.readLine());\\n\t\tint n = Integer.parseInt(reader.readLine());\\n\t\tint[] nums = new int[a];\\n\t\tfor (int i = 0; i < a; i++) {\\n\t\t\tnums[i] = i + 1;\\n\t\t}\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\ttokenizer = new StringTokenizer(reader.readLine(), \",\");\\n\t\t\tint x = Integer.parseInt(tokenizer.nextToken()) - 1;\\n\t\t\tint y = Integer.parseInt(tokenizer.nextToken()) - 1;\\n\t\t\tint tmp = nums[x];\\n\t\t\tnums[x] = nums[y];\\n\t\t\tnums[y] = tmp;\\n\t\t}\\n\t\tfor (int i = 0; i < a; i++) {\\n\t\t\tbuilder.append(nums[i]).append('\\n');\\n\t\t}\\n\t\tSystem.out.print(builder);\\n\\n\t}\\n\\n}", "target": "156", "substitutes": {"reader": ["Reader", "reads", "cur", "iter", "open", "older", "journal", "read", "linger", "driver", "rd", "layer", "dd", "row", "READ", "r", "iterator", "ner", "oder", "rl", "handler", "range", "loading", "parser", "runner", "length", "rc", "bridge", "http", "ocker", "buffer", "loader", "upper", "reading", "url", "readable", "writer", "rr", "rot", "radio", "archive", "client", "redo", "inner", "er", "rs", "rar", "history", "ro"], "builder": ["order", "der", "uf", "ener", "buff", "BU", "sb", "utils", "Builder", "board", "test", "now", "war", "b", "buf", "built", "row", "library", "ward", "or", "black", "bar", "conv", "parser", "build", "operator", "runner", "word", "ql", "builders", "good", "atter", "buffer", "oster", "loader", "upper", "pb", "url", "writer", "full", "message", "temp", "building", "hex", "control"], "tokenizer": ["vectorization", "Tokener", "tagization", "serialize", "partize", "okenize", "tagize", "okenizer", "noization", "nocer", " tokenize", " tokener", "vectorcer", "Tokenner", " tokenization", "serializer", "noize", "tokenger", "serialer", "vectorize", "partcer", "partization", " tokencer", "vectorizer", "tunger", "tokenize", "partizer", "Tokenger", " tokenger", "tagcer", "noizer", "Tokenizer", "tagizer", " tokenner", "okencer", "tunize", "serialner", "Tokenize", "tokencer", "okenization", "tokenization", "tokener", "tokenner", "tunizer", "tunner"], "a": ["an", "in", "ba", "ab", "at", "ai", "au", "all", "o", "ax", "aaa", "b", "pi", "aj", "area", "c", "am", "d", "A", "r", "act", "ity", "ar", "type", "span", "ia", "ta", "ma", "j", "ao", "va", "alpha", "ac", "ae", "m", "ga", "oa", "aa", "as", "t", "to", "na", "pa", "z", "sa", "ca", "p", "al", "u"], "n": ["an", "nb", "en", "nd", "nn", "s", "w", "nor", "ll", "o", "l", "np", "b", "k", "ns", "c", "d", "mn", "un", "r", "nt", "no", "on", "j", "sn", "nu", "m", "nl", "nan", "ne", "t", "na", "z", "net", "N", "p", "u"], "nums": ["taves", "Nums", "renamps", " numbs", " nubes", "Nives", "Noms", "mounters", "anaves", "kumbers", "numbs", "anomes", "nounters", " num", " nives", " nales", "renums", "enumers", "nives", "cumbers", "toms", "nomes", "enaves", "nuers", " nuers", "namps", "cales", " nails", "nuumbers", "cuers", "Numbers", "noms", "anums", "tomes", "Num", "mumps", " numps", " numbers", "mumbers", "tums", "mums", "cums", "renubes", "numers", " numers", "enums", "Nuers", " noms", " nounters", "nubes", "kumbs", "naves", "Numbs", "cubes", "nuails", "Nounters", "nuales", "kums", "Numps", "nuums", "Numers", " namps", "anumers", "cum", "cails", "numbers", "tumers", "enomes", "kives", "numps", "nales", "num", "nails", "camps", "tumbers", "renumbers"], "i": ["multi", "si", "iii", "ip", "PI", "l", "zi", "di", "ini", "iy", "me", "info", " I", "p", "phi", "it", "s", "ie", "o", "qi", "cgi", "sim", "uri", "q", "init", "ami", "index", "ori", "gi", "ii", "us", "to", "base", "cli", "ji", "ic", "ri", "bi", "iu", "iti", "ei", "this", "g", "j", "io", "I", "ind", "ij", "mu", "is", "li", "ui", "client", "ger", "ix", "ti", "ai", "umi", "xi", "pi", "mi", "v", "ity", "ci", "iso", "id", "oi", "f", "iq", "php", "m", "ki", "\u0438", "eu", "z", "im", "u", "wi"], "x": ["dx", "mx", "px", "e", "tx", "w", "xe", "xx", "xd", "ax", "xf", "l", "xi", "xt", "fx", "xc", "xp", "act", "v", "ox", "X", "f", "wx", "xs", "inx", "rx", "m", "xa", "t", "xy", "z", "ex", "xxx", "ct", "ix", "p"], "y": ["ay", "ot", "e", "pt", "hot", "xx", "et", "ye", "ey", "o", "l", "b", "Y", "by", "gy", "my", "cy", "v", "yr", "sys", "ty", "j", "vy", "uy", "py", "yt", "ry", "iy", "m", "yo", "oy", "ny", "ym", "t", "xy", "z", "yy", "axy", "p", "fy"], "tmp": ["porary", "mp", "tt", "mmm", "nb", "cp", "vt", "MP", "obj", "pair", "buff", "qq", "img", "cache", "emp", "test", "xx", "same", "mm", "pad", "np", "cmp", "jj", "ctx", "cow", "prefix", "v", "ret", "td", "wx", "xxxx", "m", "mk", "mb", "tc", "etc", "amp", "xy", "net", "txt", "xxx", "temp", "checked", "yy", "orig"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint n = scan.nextInt();\\n\t\tint a[] = new int[114514];\\n\t\t\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\ta[i] = scan.nextInt();\\n\t\t}\\n\t\t\\n\t\tint q = scan.nextInt();\\n\t\tint ans = 0;\\n\t\tfor (int i=0; i<q; i++) {\\n\t\t\tint key = scan.nextInt();\\n\t\t\tint ng = -1; int ok = n;\\n\t\t\twhile (Math.abs(ok-ng) > 1) {\\n\t\t\t\tint mid = (ok+ng)/2;\\n\t\t\t\tif (a[mid] >= key) ok = mid;\\n\t\t\t\telse ng = mid;\\n\t\t\t}\\n\t\t\tif (a[ok]==key) ans++;\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(ans);\\n\t}\\n}\\n\\n\\n", "target": "138", "substitutes": {"scan": ["an", "scroll", "in", "query", "report", "ch", "nn", "sync", "sign", "check", "pass", "cat", "sm", "read", "send", "connect", "re", "ann", "run", "see", "save", "p", "by", "row", "out", "sc", "pan", "cgi", "g", "sin", "ner", "r", "parse", "v", "sys", "find", "skip", "black", "conn", "sim", "search", "sn", "can", "reach", "m", "sr", "gc", "gate", "san", "system", "sche", "se", "con", "ser", "link", "na", "store", "sur", "sql", "sv", "Scan"], "n": ["nb", "an", "en", "in", "nn", "network", "o", "l", "np", "k", "ns", "x", "c", "d", "un", "g", "nt", "v", "no", "y", "on", "name", "j", "sn", "m", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "N", "p", "mn"], "a": ["ap", "an", "ba", "ab", "eas", "parts", "at", "ea", "ai", "au", "set", "ama", "all", "aaa", "b", "aux", "area", "p", "c", "am", "A", "act", "ar", "ia", "ma", "ta", "f", "h", "ao", "ack", "alpha", "ac", "ae", "app", "m", "wa", "index", "ga", "exp", "oa", "aa", "as", "t", "att", "na", "pa", "sta", "sa", "ca", "xa", "u"], "i": ["in", "multi", "si", "ip", "PI", "chain", "zi", "di", "my", "ini", "load", "err", "iy", "go", "info", " I", "hi", "phi", "it", "ie", "o", "qi", "x", "y", "sim", "ia", "init", "ami", "index", "ori", "ii", "gi", "us", "cli", "ji", "ic", "ri", "bi", "iter", "gu", "iu", "et", "iti", "ei", "iri", "j", "io", "I", "ind", "print", "ij", "is", "li", "ui", "client", "ix", "ti", "ai", "xi", "pi", "mi", "v", "ci", "oi", "id", "f", "iq", "m", "ki", "batch", "ims", "im", "u"], "q": ["query", "qt", "dq", "qq", "quit", "ch", "qa", "e", "quer", "qual", "k", "conf", "qi", "x", "qv", "g", "ue", "v", "j", "f", "iq", "m", "sq", "quant", "qs", "quality", "t", "z", "Q", "queue", "aq", "p", "requ", "que", "qu"], "ans": ["ies", "an", "ings", "uns", "ms", "ians", "ents", "results", "s", "ds", "flags", "sk", "aps", "ows", "ann", "es", "ons", "ns", "ins", "ones", "vals", "ks", "ops", "ts", "ys", "keys", "vs", "lines", "arts", "ats", "rows", "anes", "ants", "xs", "ANS", "gs", "can", "ls", "ams", "ots", "cs", "os", "ims", "ps", "ations", "amps", "ens", "outs", "ids", "eds"], "key": ["pop", "item", "ke", "ip", "check", "max", "Key", "next", "ey", "o", "pe", "leader", "k", "sum", "by", "char", "x", "KEY", "ek", "my", "parent", "v", "type", "y", "id", "ky", "name", "lock", "j", "start", "where", "kk", "hash", "pri", "m", "index", "mk", "ry", "ki", "info", "ck", "link", "tip", "base", "p", "val"], "ng": ["resh", "NG", "eng", "ms", "mx", "nd", "nn", "md", "nz", "mill", "wk", "next", "gen", "ang", "mm", "ping", "ns", "dd", "out", "med", "nr", "window", "ig", "g", "my", "nm", "ning", "no", "gov", "j", "sd", "meg", "sam", "ss", "mb", "ny", "ck", "nc", "ne", "na", "ming", "rand", "z", "net", "mem", "wn", "mg", "sp", "mn"], "ok": ["pop", "oh", "ms", "ot", "nd", "md", "it", "yes", "check", "max", "nz", "ocr", "sk", "kok", "now", "none", "o", "ang", "ready", "k", "ob", "loc", "ko", "out", "ks", "ops", "ik", "off", "or", "nt", "no", "ek", "ku", "id", "ak", "j", "OK", "res", "ind", "ack", "kk", "good", "m", "mk", "km", "ck", "Ok", "ow", "cmd", "os", "oc", "typ", "valid", "rand", "od", "awk", "ook", "ro"], "mid": ["mmm", "ms", "mad", "nd", "partial", "md", "mt", "tx", "mr", "mm", "uid", "kid", "rid", "cd", "trans", "middle", "sub", "med", "my", "mi", "nm", "mod", "id", "pid", "mask", "min", "mini", "ind", "le", "m", "mk", "cond", "month", "mit", "mac", "rand", "tri", "hi", "mer", "Mid", "man", "wid", " Mid", "mn"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        MyScanner sc = new MyScanner();\\n        PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\\n        String s = sc.next();\\n        int ans = 0; int run = 0;\\n        for (int i = 0; i < 3; i++) {\\n            if (s.charAt(i) == 'R') {\\n                run++;\\n            } else {\\n                ans = Math.max(ans, run);\\n              \trun = 0;\\n            }\\n        }\\n        ans = Math.max(ans, run);\\n        out.println(ans);\\n        out.close();\\n    }\\n\\n\\n    //-----------MyScanner class for faster input----------\\n    public static class MyScanner {\\n        BufferedReader br;\\n        StringTokenizer st;\\n\\n        public MyScanner() {\\n            br = new BufferedReader(new InputStreamReader(System.in));\\n        }\\n\\n        String next() {\\n            while (st == null || !st.hasMoreElements()) {\\n                try {\\n                    st = new StringTokenizer(br.readLine());\\n                } catch (IOException e) {\\n                    e.printStackTrace();\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n\\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n\\n        double nextDouble() {\\n            return Double.parseDouble(next());\\n        }\\n\\n        String nextLine() {\\n            String str = \"\";\\n            try {\\n                str = br.readLine();\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            return str;\\n        }\\n\\n\\n    }\\n\\n}", "target": "141", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "sci", "c", "dec", "bc", "cc", "sys", "ok", "SC", "lc", "usc", "sch", "sec", "gc", "scan", "ss", "cl", "uc", "nc", "sq", "tc", "cs", "spec", "se", "pc", "ser", "isc", "desc", "scl", "sv", "rs", "sp", "esc"], "out": ["result", "in", "report", "outer", "list", "display", "at", "null", "it", "up", "w", "file", "all", "aos", "o", "Out", "flush", "ver", "sum", "crit", "bin", "println", "str", "dis", "window", "r", "v", "sys", "co", "screen", "err", "name", "error", "io", "res", "print", "st", "can", "log", "ou", "OUT", "write", "cmd", "output", "os", "info", "con", "t", "writer", "to", "full", "input", "net", "client", "n", "env", "auto", "outs"], "s": ["ms", "S", "ws", "sts", "sb", "w", "stats", "source", "b", "strings", "c", "ts", "js", "str", "g", "r", "v", "f", "h", "a", "gs", "string", "ls", "m", "ss", "sq", "qs", "spec", "t", "ps", "is", "su", "n", "sql", "p", "sv", "rs", "gets"], "ans": ["asks", "an", "uns", "en", "ars", "reads", "ians", "ms", "mas", "ents", "anks", "and", "results", "names", "yes", "users", "orts", "ups", "aps", "ains", "ands", "ows", "ann", "arms", "ons", "ins", "ns", "AN", "aus", "uds", "ros", "vals", "powers", "ran", "un", "cons", "mn", "pan", "arts", "lines", "ats", "nets", "runs", "olds", "rows", "ras", "ants", "posts", "ANS", "ads", "ls", "ers", "ions", "lan", "cs", "ors", "ores", "offs", "ums", "ations", "n", "amps", "ens", "rs", "outs", "ids", "eds"], "run": ["fun", "add", "sync", "pass", "check", "set", "read", "all", "block", "rain", "step", "row", "unit", "ran", "un", "coll", "r", "seq", "find", "end", "roll", "co", "load", "fail", "runs", "range", "une", "rm", "res", "play", "runner", "process", "rc", "reg", "nl", "log", "scan", "thread", "call", "sl", "cmd", "con", "fin", "rand", "su", "round", "len", "Run", "n", "man", "running", "val", "ru", "ro"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "set", "iu", "gu", "ie", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "mi", "v", "ini", "ci", "y", "id", "sim", "ia", "j", "I", "ind", "m", "ori", "ki", "\u0438", "batch", "ii", "gi", "mac", "t", "is", "li", "ex", "hi", "ui", "cli", "ji", "ix", "p", "im", "ic", " j", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n public static void main(String args[]) {\\n   Scanner sc = new Scanner(System.in);\\n   int n = sc.nextInt();\\n   char[] nChar = String.valueOf(n).toCharArray();\\n   int sn = 0;\\n   for (int i = 0; i < nChar.length; i++) {\\n          sn += Integer.parseInt(String.valueOf(nChar[i]));\\n   }\\n   if(n % sn == 0) {\\n      System.out.println(\"Yes\");\\n      return;\\n   } \\n   System.out.println(\"No\");\\n }\\n}", "target": "195", "substitutes": {"sc": ["ch", "sync", "sw", "asc", "mc", "osc", "anc", "cr", "Sc", "Desc", "c", "inc", "dec", "bc", "cc", "sys", "ng", "SC", "conv", "lc", " Sc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "uc", "nc", "system", "cs", "tc", "sq", "rec", "pc", "acc", "sa", "isc", "desc", "syn", "scl", "sv", "Scan", "sp", "esc"], "n": ["nb", "nn", "nw", "o", "l", "np", "ns", "c", "d", "nr", "norm", "nt", "nm", "v", "tn", "ng", "j", "ren", "number", "fn", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "net", "dn", "N", "gn", "p"], "nChar": ["cnStr", "nByte", "tStr", "nMat", " nStr", "iMat", "iCh", " nCharacter", "NCh", " nCar", "nCharacter", "tMat", "cnChar", "nCh", "iByte", "tchar", "nchar", "nDir", "cnchar", " nByte", "iCharacter", "cnCar", "NDir", "NCharacter", "nStr", " nMat", "nCar", "iChar", "NChar", "tCh", "tChar", " nchar", "iDir", "tByte", "tCar", " nDir", " nCh"], "sn": ["si", "nn", "sf", "sb", "sw", "sync", "snap", "sol", "oln", "sk", "sm", "sum", "ns", "stri", "nr", "tn", "Sn", "span", "sd", "cu", "number", "st", "pn", "sr", "fn", "nl", "gc", "sam", "sl", "ss", "sq", "so", "ln", "nc", "cs", "na", "SN", "cn", "num", "su", "sa", "syn", "inn", "gn", "sh", "dl", "sv", "scl", "sp", "bn"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "set", "gu", "ie", "o", "PI", "chain", "l", "di", "pi", "qi", "x", "ei", "my", "mi", "point", "ini", "ci", "y", "id", "err", "sim", "j", "a", "uri", "I", "q", "init", "m", "ori", "ki", "\u0438", "ii", "gi", "us", "slice", "is", "li", "base", "z", "ex", "hi", "ui", "cli", "ji", "ix", "im", "ic", "phi", "ri"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Scanner;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tint n=sc.nextInt();\\n\t\tList<Integer> list=new ArrayList<Integer>();\\n\t\tint c=1000;\\n\t\twhile(c>0) {\\n\t\t\tif(n>=c) {\\n\t\t\t    list.add(n/c);\\n\t\t\t}else {\\n\t\t\t\tlist.add(0);\\n\t\t\t}\\n\t\t\tn%=c;\\n\t\t\tc/=10;\\n\t\t}\\n\\n\\n\t\tfor(int i=0;i<=7;i++) {\\n\t\t\tString s=Integer.toBinaryString(i);\\n\\n\t\t\tint a=Integer.valueOf(s);\\n\t\t\tString b=String.format(\"%03d\",a);\\n\t\t\t;\\n\t\t\tchar[] e=b.toCharArray();\\n\t\t\tint k=keisan(list,e);\\n\t\t\tif(k==7) {\\n\t\t\t\te[0]=(e[0]=='1')?'+':'-';\\n\t\t\t\te[1]=(e[1]=='1')?'+':'-';\\n\t\t\t\te[2]=(e[2]=='1')?'+':'-';\\n\t\t\t\tfor(int j=0;j<3;j++) {\\n\t\t\t\t\tSystem.out.print(list.get(j));\\n\t\t\t\t\tSystem.out.print(e[j]);\\n\t\t\t\t}\\n\t\t\t\tSystem.out.print(list.get(3)+\"=7\");\\n\t\t\t\tbreak;\\n\t\t\t}\\n\\n\\n\t\t}\\n\\n\\n\\n\t}\\n\\n\tpublic static int keisan(List<Integer> list,char[] e) {\\n\t\tint k=list.get(0);\\n\t\tif(e[0]=='1') {\\n\t\t\tk+=list.get(1);\\n\t\t}else {\\n\t\t\tk-=list.get(1);\\n\t\t}\\n\t\tif(e[1]=='1') {\\n\t\t\tk+=list.get(2);\\n\t\t}else {\\n\t\t\tk-=list.get(2);\\n\t\t}\\n\t\tif(e[2]=='1') {\\n\t\t\tk+=list.get(3);\\n\t\t}else {\\n\t\t\tk-=list.get(3);\\n\t\t}\\n\t\treturn k;\\n\\n\t}\\n\\n\\n\\n}\\n", "target": "152", "substitutes": {"sc": ["ch", "sb", "sync", "asc", "mc", "osc", "sac", "ec", "cr", "Sc", "sel", "r", "ner", "bc", "cc", "sys", "SC", " Sc", "rc", "usc", "st", "sch", "sr", "nl", "gc", "cl", "ss", "scan", "uc", "nc", "system", "cs", "sq", "se", "pc", "ser", "isc", "scl", "sv", "Scan", "sp", "esc"], "n": ["nb", "en", "size", "nn", "nor", "o", "l", "np", "ns", "x", "d", "nr", "g", "nt", "v", "nm", "y", "ng", "current", "number", "sn", "m", "nu", "nl", "nc", "ne", "nan", "t", "na", "cn", "num", "count", "net", "dn", "N", "p", "u"], "list": ["json", "set", "local", "lat", "all", "ll", "single", "chain", "l", "out", "load", "log", "L", "pl", "p", "LIST", "null", "cache", "pool", "block", "table", "see", "alist", "del", "left", "listed", "sys", "proc", "ml", "line", "collection", "st", "ls", "array", "net", "filter", "history", "old", "record", "elist", "next", "el", "def", "this", "lists", "r", "nt", "print", "ul", "cl", "detail", "t", "ist", "li", "tree", "dl", "map", "sequence", "entry", "add", "dict", "msg", "form", "get", "parent", "v", "cont", "string", "php", "the", "pre", "batch", "stack", "data", "code"], "c": ["cp", "size", "cur", "com", "cat", "cm", "mc", "l", "cd", "conf", "x", "d", "g", "r", "cos", "cc", "co", "C", "ci", "f", "lc", "rc", "ac", "m", "gc", "cl", "nc", "tc", "cs", "cf", "con", "t", "dc", "cn", "count", "ce", "ct", "p", "cut", "ic", "unc", "col"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "iu", "ie", "o", "chain", "di", "pi", "x", "g", "mi", "ini", "ci", "y", "id", "sim", "f", "iq", "I", "ind", "init", "m", "index", "ki", "ii", "info", "us", "t", "is", "li", "ui", "ix", "p", "im", "ic", "phi", "u"], "s": ["ms", "si", "S", "sb", "l", "ns", "ts", "js", "r", "ats", "y", "sim", "its", "sd", "gs", "string", "ls", "ss", "sl", "sq", "os", "se", "as", "t", "ps", "is", "z", "sa", "p", "sv", "rs"], "a": ["ba", "ab", "si", "ea", "at", "ai", "o", "aaa", "aj", "area", "am", "d", "A", "ar", "y", "ia", "ta", "ma", "f", "ao", "alpha", "ac", "ata", "xa", "oa", "aa", "sta", "t", "as", "na", "pa", "z", "sa", "ca", "isa", "p"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "sb", "buff", "wb", "eb", "l", "bs", "gb", "binary", "db", "d", "bg", "r", "v", "bf", "y", "bt", "f", "m", "pb", "bp", "t", "z", "B", "rb", "p"], "e": ["ge", "en", "event", "be", "ea", "ve", "it", "at", "ee", "xe", "entity", "ie", "et", "all", "o", "er", "eb", "E", "es", "pe", "l", "eeee", "re", "see", "element", "ec", "oe", "x", "el", "d", "ei", "g", "ue", "r", "end", "v", "y", "err", "range", "eg", "eps", "f", "de", "le", "ae", "me", "m", "ele", "ent", "te", "exp", "ome", "ne", "se", "eu", "t", "entry", "ffe", "ev", "one", "ce", "ex", "ed", "p", "ze", "note", "est"], "k": ["ka", "kl", "ke", "kr", "kn", "it", "max", "kind", "w", "sk", "ark", "key", "kok", "o", "kan", "K", "u", "ko", "kick", "d", "ks", "g", "ik", "ek", "kar", "kt", "UK", "ku", "y", "id", "ok", "ak", "h", "ack", "print", "kk", "kw", "q", "uk", "ac", "m", "mk", "kj", "km", "ck", "tk", "z", "dk", "num", "unk", "ijk", "kh", "ikk"], "j": ["jo", "oj", "bj", "obj", "jc", "J", "json", "jack", "jet", "pt", "it", "msg", "o", "ax", "kid", "dj", "jas", "jj", "aj", "jl", "bo", "x", "jp", "uj", "og", "js", "g", "v", "ja", "y", "ng", "on", "err", "ph", "ij", "q", "je", "kj", "att", "br", "z", "jump", "job", "ji", "ct", "pr", "kh"]}}
{"code": "import java.util.*;\\nimport java.math.*;\\nimport java.util.Scanner;\\nimport java.math.BigInteger;\\n   \\npublic class Main {\\n\tstatic final long mod = (int)(1e9+7);\\n\tstatic final int inf=(int)(1e9);\\n\tstatic final int maxn=(int)(1e5+10);\\n\tstatic long ksm(long a,long b) {\\n\t\tlong ret=1;\\n\t\twhile(b!=0) {\\n\t\t\tif(b%2==1) {\\n\t\t\t\tret=ret*a%mod;\\n\t\t\t}\\n\t\t\tb>>=1;\\n\t\t\ta=a*a%mod;\\n\t\t}\\n\t\treturn ret;\\n\t}\\n\tpublic static void main(String[] args) {\\n    \tScanner cin=new Scanner(System.in);\\n    \tString s=cin.next();\\n    \tint len=s.length();\\n    \tint cnt=0,ans=0;\\n    \tfor(int i=0;i<len;i++) {\\n    \t\tif(s.charAt(i)=='A'||s.charAt(i)=='C'||s.charAt(i)=='G'||s.charAt(i)=='T') {\\n    \t\t\tcnt++;\\n    \t\t}else {\\n    \t\t\tcnt=0;\\n    \t\t}\\n    \t\tans=Math.max(ans, cnt);\\n    \t}\\n    \tSystem.out.println(ans);\\n    }\\n}", "target": "100", "substitutes": {"mod": ["fun", "add", "mult", "bit", "mut", "perm", "sign", "set", " Mod", "term", "put", "lib", "ver", "sum", "cmp", "prime", "bo", "trans", "d", "Mod", "tab", "deg", "fac", "id", "sim", "min", "mods", "modified", "MOD", "ind", "post", "le", "reg", "m", "dev", "scale", "base", "num", "div", "od", "man", "mem", "val", "module", "dec"], "inf": ["aff", "mult", "ib", "lim", "lab", "eb", "prime", "bin", "eff", "ref", "bf", "Inf", "err", "fac", "reb", "mask", "f", "rob", "ind", "cond", "abs", "zero", "exp", "frac", "base", "bound", "inv", "ipl"], "maxn": ["Maxn", " maxN", "maxnum", "axn", "maxN", "MaxN", " maxnum", "axnum", "Maxs", "Maxnum", "axN", "axs", " maxs", "maxs"], "a": ["an", "add", "la", "ba", "ab", "da", "at", "ea", "au", "it", "o", "l", "area", "arg", "x", "ad", "out", "am", "c", "A", "d", "r", "v", "ar", "y", "ia", "ta", "ma", "f", "j", "ao", "alpha", "ac", "ae", "m", "index", "oa", "aa", "as", "t", "na", "z", "sa", "isa", "n", "p", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "e", "sb", "fb", "buff", "w", "o", "eb", "l", "ob", "bs", "gb", "bo", "x", "binary", "c", "d", "bg", "g", "r", "bc", "v", "bf", "y", "cb", "j", "body", "m", "beta", "pb", "mb", "bis", "bp", "t", "br", "base", "z", "B", "rb", "n", "p", "u"], "ret": ["val", "result", "ba", "uf", "be", "obj", "total", "nz", "it", "iter", "au", "re", "l", "best", "sum", "Ret", "lit", "arg", "rt", "out", "x", "ad", "eff", "def", "reset", "g", "RET", "r", "nt", "ref", "v", "rev", "ar", "pro", "j", " Ret", "res", "gt", "back", "q", "value", "m", "alt", "att", "t", "repl", "n", "mem", "p", "arr"], "cin": ["nir", " din", "irin", "tic", "nar", "din", "rin", "crow", "Sin", "issan", "cone", "jin", "sac", "asin", "kin", "lin", "Skin", " sin", "arin", "tin", "sin", "cos", "Si", "ini", "zin", "ci", "zar", "circ", "pic", "zo", "cci", "gin", "isin", "cus", "cil", "nie", "ce", "eye", "uin", "tan", " cis", "dar"], "s": ["ms", "S", "ws", "sts", "sb", "sw", "ds", "gets", "series", "l", "ns", "ins", "strings", "bs", "c", "ts", "sc", "js", "str", "g", "lines", "r", "sys", "ats", "its", "conv", "h", "xs", "bits", "gs", "string", "ls", "fs", "ss", "sl", "abs", "sq", "cs", "qs", "bis", "ims", "t", "ps", "is", "n", "sql", "p", "sv", "rs", "hs", "sp"], "len": ["en", "size", "kl", "lvl", "lim", "all", "ll", "lv", "l", "ld", "Length", "vl", "el", "vec", "nt", "lf", "hl", "lc", "length", "le", "Len", "ls", "nl", "cl", "sl", "lan", "ln", "fin", "li", "L", "pl", "n", "elt", "dl", "val", "wid", " clen"], "cnt": ["rcnt", "Cnt", " count", " cnc", "Cnc", "cNT", "icct", "cct", " ccont", "gtr", "gct", " crt", "Crt", " ctr", "Cpt", "cnc", "nct", "crt", "cpt", "icnt", " cpt", " cct", "nNT", "ccont", "icNT", "rcrt", "gount", "Count", "Ccont", "gnt", "Ctr", "iccont", "npt", " cNT", "Cct", "rcount", "count", "nnt", "ctr", "rcnc", "CNT"], "ans": ["an", "uns", "angs", "ars", "anks", "ms", "ents", "ians", "ups", "rans", "aps", "ows", "ann", "ons", "ints", "ins", "ns", "ags", "aus", "ros", "anas", "ks", "arts", "vers", "ats", "nets", "ends", "ras", "anes", "ants", "xs", "posts", "ANS", "ads", "ls", "ips", "ions", "cs", "os", "offs", "ums", "amps", "ens", "rs", "outs", "ids", "eds"], "i": ["bi", "in", "multi", "ms", "si", "ti", "ai", "iter", "it", "ip", "gu", "iu", "status", "o", "series", "zi", "xi", "di", "pi", "qi", "x", "c", "ei", "cgi", "mi", "v", "ini", "ci", "y", "sim", "oi", "ia", "j", "io", "uri", "ni", "I", "remote", "q", "init", "ami", "m", "ori", "ki", "\u0438", "ii", "gi", "info", "us", "slice", "ski", "eu", "to", "is", "li", "ex", "hi", "ui", "cli", "ji", "ix", "ic", "phi", "u", "ri"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args)throws Exception {\\n\\n\t    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t    String line = br.readLine();\\n\t    //\u6587\u5b57\u5217\u306b\u5148\u982d\u53c8\u306f\u6700\u5f8c\u306b\u7a7a\u767d\u6587\u5b57\u304c\u304f\u3063\u4ed8\u3044\u3066\u3044\u308b\u5834\u5408\u3001\u305d\u308c\u3089\u3092\u5168\u3066\u53d6\u308a\u9664\u304d\u307e\u3059\u3002\\n\t    line = line.trim();\\n\t    //\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u3092\u533a\u5207\u308a\u6587\u5b57\u3068\u3057\u3066\u6271\u3046\\n\t    String[] readLineArray = line.split(\"[\\\\s+]\");\\n\t    //\u5909\u6570\u306b\u914d\u5217\u3092\u4ee3\u5165\\n\t    int count = 0;\\n\t    int a = Integer.parseInt(readLineArray[0]);\\n\t    int b = Integer.parseInt(readLineArray[1]);\\n\t    int c = Integer.parseInt(readLineArray[2]);\\n\t    for (int i = a;i<=b;i++){\\n\t    \tif(c%i ==0){\\n\t    \t\tcount++;\\n\t    \t}\\n\t    }\\n\t    System.out.println(count);\\n\t}\\n\\n}", "target": "190", "substitutes": {"br": ["wr", "bsp", "bi", "ber", "bl", "hr", "ba", "kr", "bb", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "b", "buf", "dr", "bd", "gb", "cr", "gr", "str", "r", "bh", "bc", "yr", "bt", "sp", "lr", "shr", "bp", "rb", "bm", "pr", "be", "bro", "bn"], "line": ["result", "in", "Line", "std", "e", "s", "msg", "next", "status", "l", "foo", "row", "text", "out", "str", "lines", "r", "err", "LINE", "string", "command", "nl", "buffer", "ln", "output", "raw", "data", "input"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tint[] data = new int[10];\\n\t\tfinal String BR = System.getProperty(\"line.separator\");\\n\t\tint first = 0, second = 0, third = 0;\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t\tfor (int i = 0; i < 10; i++) {\\n\t\t\tdata[i] = Integer.parseInt(in.readLine());\\n\t\t}\\n\t\tfor (int datum : data) {\\n\t\t\tint temp1 = 0, temp2 = 0;\\n\t\t\tfor (int j = 1; j <= 3; j++) {\\n\t\t\t\tif (first < datum) {\\n\t\t\t\t\ttemp1 = first;\\n\t\t\t\t\ttemp2 = second;\\n\t\t\t\t\tfirst = datum;\\n\t\t\t\t\tsecond = temp1;\\n\t\t\t\t\tthird = temp2;\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t\tif (second < datum) {\\n\t\t\t\t\ttemp2 = second;\\n\t\t\t\t\tsecond = datum;\\n\t\t\t\t\tthird = temp2;\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t\tif (third < datum) {\\n\t\t\t\t\tthird = datum;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(first + BR + second + BR + third);\\n\t}\\n}", "target": "164", "substitutes": {"data": ["result", "reports", "dates", "size", "items", "da", "missing", "list", "total", "dict", "results", "cache", "next", "images", "DATA", "bytes", "table", "tr", "di", "resources", "details", "vals", "multiple", "def", "d", "this", "window", "options", "dat", "config", "done", "apps", "index", "values", "ata", "mu", "files", "batch", "buffer", "info", "params", "array", "num", "div", " DATA", "map", "sequence", "dec", "entry"], "BR": ["BG", "AB", "REM", "BB", "BU", "Br", "TER", "ENC", "RB", "BER", "HR", "DR", "VER", "DIR", "STR", "STDOUT", "UR", "BP", "TAG", "OR", "BY", "BT", "CHAR", "RA", "TR", "COLOR", "VR", "TH", "NOR", "BRE", "SB", "LL", "SR", "BC", "NB", "BE", "BN", "R", "FB", " br", "DERR", "OUT", "ER", "BL", "br", "BM", "REL", "B", "RE", "ARA", "BW", "CR"], "first": ["part", "fourth", "total", "major", "First", "last", "fifth", "prev", "next", "all", "now", "single", "from", "fr", "master", "art", "user", "th", "lower", "middle", "format", "left", "this", "phone", "before", "prefix", "primary", "only", "start", "current", "name", "half", "minute", "top", "title", "back", "st", "string", "alpha", "index", "initial", "pre", "self", "use", "sort", "front", "month", "head", "full", "header"], "second": ["size", "fourth", "division", "section", "false", "last", "then", "future", "s", "fifth", "next", "now", "series", "after", "below", "security", "lower", "sequent", "secret", "middle", "left", "sort", "lo", "screen", "only", "minute", "number", "bottom", "seconds", "south", "sec", "service", "st", "string", "shell", "course", "again", "another", "system", "secondary", "front", "bis", "server", "se", "zero", "minimum", "two", "zone", "foreign", "other", "session", "video", " seconds", "Second", "sequence", "small", "ter"], "third": ["der", "relative", "part", "Fourth", "fourth", "division", "thirds", "integer", "last", "right", "then", "through", "fifth", "forth", "frog", "Third", "comment", "deep", "odd", "tr", "rd", "th", "also", "dd", "ary", " Third", "middle", "ust", "three", "share", "TH", "half", "IRD", "ard", "minute", "critical", "td", " fourth", "sup", "component", "back", "inter", "star", "command", "recent", "rest", "secondary", "directory", "central", "div", "important", "quarter", "ter", "entry"], "in": ["add", "std", "In", "it", "check", "din", "file", "from", "rin", "o", "world", "b", "ins", "thin", "conf", "bin", "out", "doc", "c", "ad", "lines", "r", "ini", "err", "default", "io", "f", "IN", "m", "log", "reader", "OUT", "info", "con", "gin", "isin", "t", "is", "stream", "input", "n", "inn", "inf", "inner", "er", "cin"], "i": ["multi", "ms", "si", "ai", "iter", "ip", "it", "iu", "ie", "o", "l", "pi", "qi", "x", "my", "mi", "v", "ini", "load", "ci", "y", "id", "sim", "name", "you", "io", "uri", "f", "iq", "I", "ind", "print", "q", "ij", "init", "me", "m", "index", "batch", "ii", "gi", "us", "ims", "t", "is", "li", "ui", "n", "inner", "ix", "p", "im", "ic", "phi", "fire"], "datum": ["catatum", "catum", "tenumption", "dataem", "dataatum", "datem", " datUM", "dataum", "datUM", "Datnum", "datom", "detatum", "tenum", "latatum", "datarum", " datumeric", "drawum", "detum", " datrum", "datumption", "catem", "datumeric", "detrum", "uuum", "latum", "datatum", "Datum", "latumer", " datums", "montumer", " datom", "datumer", "Datumeric", "detUM", " datatum", "digumeric", "datums", "digatum", "datanum", "latom", "dtumeric", "drawom", "uuumer", "catnum", "montum", "latumeric", "datrum", "uuaum", "montumption", "dataUM", "dignum", "digUM", "Datums", "drawumer", "montaum", "dtum", "dtatum", "digem", "catUM", "drawumeric", "dtumer", "digum", "uuumption", " datumer", " datnum", "tenaum", "digums", "tenumer", "datnum"], "temp1": ["temp9", "emp3", "emp2", "emp0", "template2", "temp6", " temp3", "tem2", "tem9", "temp4", " temp4", "tmped", "emp6", "tem6", "tmp4", "emp1", " temped", "Temp9", "template9", "Temp0", "emp4", "temp0", "emped", "template1", "temped", " temp6", "tem1", " temp0", "Temp2", "template6", "temp3", "Temp1", "Temp6", "tmp3", "tmp1"], "temp2": ["temp8", "template02", " temp32", "emp8", "emp3", "emp2", "template05", "Temp05", "tem02", "stem1", "temp5", "template2", "Temp02", "tem2", "Temp32", "buffer2", "tmp2", "tem8", "stemTwo", "perm2", "tem5", "temp05", "buffer1", "tmpTwo", "temp02", "emp02", "Temp5", " temp5", "emp1", "stem02", "stem2", "tmp02", "emp32", "tmp8", "template1", " temp02", "tem3", "tmp3", "tem1", "perm1", "temp32", "perm02", "Temp2", "temp3", "permTwo", "Temp1", "buffer05", "tempTwo", "buffer02", "tmp1"], "j": ["jo", "oj", "bj", "obj", "at", "jc", "json", "J", "jack", "fr", "ax", "kid", "jit", "dj", "b", "k", "jj", "jas", "aj", "jl", "el", "jp", "uj", "js", "g", "ja", "y", "err", "q", "ij", "kj", "ort", "att", "z", "jump", "other", "job", "ji", "n", "pr", "ge", "im", "mn"]}}
{"code": "import java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Arrays;\\nimport java.util.InputMismatchException;\\nimport java.util.NoSuchElementException;\\n\\npublic class Main {\\n\\n\tstatic PrintWriter out;\\n\tstatic InputReader ir;\\n\tstatic long[] f, fi;\\n\\n\tstatic void solve() {\\n\t\tint n = ir.nextInt();\\n\t\tint a = ir.nextInt();\\n\t\tint b = ir.nextInt();\\n\t\tout.println((int) Math.min(n * a, b));\\n\t}\\n\\n\tpublic static void main(String[] args) {\\n\t\tir = new InputReader(System.in);\\n\t\tout = new PrintWriter(System.out);\\n\t\tsolve();\\n\t\tout.flush();\\n\t}\\n\\n\tstatic class InputReader {\\n\\n\t\tprivate InputStream in;\\n\t\tprivate byte[] buffer = new byte[1024];\\n\t\tprivate int curbuf;\\n\t\tprivate int lenbuf;\\n\\n\t\tpublic InputReader(InputStream in) {\\n\t\t\tthis.in = in;\\n\t\t\tthis.curbuf = this.lenbuf = 0;\\n\t\t}\\n\\n\t\tpublic boolean hasNextByte() {\\n\t\t\tif (curbuf >= lenbuf) {\\n\t\t\t\tcurbuf = 0;\\n\t\t\t\ttry {\\n\t\t\t\t\tlenbuf = in.read(buffer);\\n\t\t\t\t} catch (IOException e) {\\n\t\t\t\t\tthrow new InputMismatchException();\\n\t\t\t\t}\\n\t\t\t\tif (lenbuf <= 0)\\n\t\t\t\t\treturn false;\\n\t\t\t}\\n\t\t\treturn true;\\n\t\t}\\n\\n\t\tprivate int readByte() {\\n\t\t\tif (hasNextByte())\\n\t\t\t\treturn buffer[curbuf++];\\n\t\t\telse\\n\t\t\t\treturn -1;\\n\t\t}\\n\\n\t\tprivate boolean isSpaceChar(int c) {\\n\t\t\treturn !(c >= 33 && c <= 126);\\n\t\t}\\n\\n\t\tprivate void skip() {\\n\t\t\twhile (hasNextByte() && isSpaceChar(buffer[curbuf]))\\n\t\t\t\tcurbuf++;\\n\t\t}\\n\\n\t\tpublic boolean hasNext() {\\n\t\t\tskip();\\n\t\t\treturn hasNextByte();\\n\t\t}\\n\\n\t\tpublic String next() {\\n\t\t\tif (!hasNext())\\n\t\t\t\tthrow new NoSuchElementException();\\n\t\t\tStringBuilder sb = new StringBuilder();\\n\t\t\tint b = readByte();\\n\t\t\twhile (!isSpaceChar(b)) {\\n\t\t\t\tsb.appendCodePoint(b);\\n\t\t\t\tb = readByte();\\n\t\t\t}\\n\t\t\treturn sb.toString();\\n\t\t}\\n\\n\t\tpublic int nextInt() {\\n\t\t\tif (!hasNext())\\n\t\t\t\tthrow new NoSuchElementException();\\n\t\t\tint c = readByte();\\n\t\t\twhile (isSpaceChar(c))\\n\t\t\t\tc = readByte();\\n\t\t\tboolean minus = false;\\n\t\t\tif (c == '-') {\\n\t\t\t\tminus = true;\\n\t\t\t\tc = readByte();\\n\t\t\t}\\n\t\t\tint res = 0;\\n\t\t\tdo {\\n\t\t\t\tif (c < '0' || c > '9')\\n\t\t\t\t\tthrow new InputMismatchException();\\n\t\t\t\tres = res * 10 + c - '0';\\n\t\t\t\tc = readByte();\\n\t\t\t} while (!isSpaceChar(c));\\n\t\t\treturn (minus) ? -res : res;\\n\t\t}\\n\\n\t\tpublic long nextLong() {\\n\t\t\tif (!hasNext())\\n\t\t\t\tthrow new NoSuchElementException();\\n\t\t\tint c = readByte();\\n\t\t\twhile (isSpaceChar(c))\\n\t\t\t\tc = readByte();\\n\t\t\tboolean minus = false;\\n\t\t\tif (c == '-') {\\n\t\t\t\tminus = true;\\n\t\t\t\tc = readByte();\\n\t\t\t}\\n\t\t\tlong res = 0;\\n\t\t\tdo {\\n\t\t\t\tif (c < '0' || c > '9')\\n\t\t\t\t\tthrow new InputMismatchException();\\n\t\t\t\tres = res * 10 + c - '0';\\n\t\t\t\tc = readByte();\\n\t\t\t} while (!isSpaceChar(c));\\n\t\t\treturn (minus) ? -res : res;\\n\t\t}\\n\\n\t\tpublic double nextDouble() {\\n\t\t\treturn Double.parseDouble(next());\\n\t\t}\\n\\n\t\tpublic int[] nextIntArray(int n) {\\n\t\t\tint[] a = new int[n];\\n\t\t\tfor (int i = 0; i < n; i++)\\n\t\t\t\ta[i] = nextInt();\\n\t\t\treturn a;\\n\t\t}\\n\\n\t\tpublic long[] nextLongArray(int n) {\\n\t\t\tlong[] a = new long[n];\\n\t\t\tfor (int i = 0; i < n; i++)\\n\t\t\t\ta[i] = nextLong();\\n\t\t\treturn a;\\n\t\t}\\n\\n\t\tpublic char[][] nextCharMap(int n, int m) {\\n\t\t\tchar[][] map = new char[n][m];\\n\t\t\tfor (int i = 0; i < n; i++)\\n\t\t\t\tmap[i] = next().toCharArray();\\n\t\t\treturn map;\\n\t\t}\\n\t}\\n\\n\tstatic void tr(Object... o) {\\n\t\tout.println(Arrays.deepToString(o));\\n\t}\\n}\\n", "target": "213", "substitutes": {"out": ["result", "outer", "ot", "obj", "at", "ch", "it", "null", "s", "up", "w", "tx", "file", "aos", "Out", "l", "println", "window", "r", "nt", "sys", "oss", "news", "screen", "err", "co", "name", "error", "io", "conv", "gt", "print", "log", "ou", "OUT", "write", "output", "os", "info", "writer", "t", "serv", "to", "ex", "net", "txt", "client", "inner", "p", "outs"], "ir": ["ier", "rect", "irc", "hr", "ibr", "IR", "iter", "vr", "mr", "rin", "fr", "ira", "er", "dir", "dr", "rt", "iv", "pir", "addr", "mir", "drm", "Ir", "iri", "nr", "r", "ner", "ris", "yr", "ear", "ar", "irm", "err", "rl", "hl", "io", "rer", "rob", "ire", "inter", "ij", "river", "lr", "sr", "http", "reader", "rr", "adr", "rir", "rb", "pr", "iro", "ih", "irs", "ior", "rint", "ri"], "f": ["fp", "fb", "e", "sf", "fd", "xf", "p", "ff", "d", "v", "bf", "fc", "lf", "tf", "h", "df", "rf", "fm", "cf", "t", "fo", "fe", "fa", "ef", "fs"], "fi": ["fl", "bi", "si", "fb", "ti", "ib", "sf", "fd", "fr", "pi", "iat", "ff", "ei", "bf", "fc", "ci", "lf", "ni", "fn", "fu", "ii", "cf", "fo", "fe", "li", "fa", "hi", "ct"], "n": ["nb", "nv", "nn", "nw", "w", "l", "np", "ns", "d", "nm", "nt", "v", "on", "j", "ni", "fn", "nu", "nl", "nc", "ln", "nan", "ne", "t", "na", "cn", "num", "net", "dn", "N", "p", "mn"], "a": ["an", "ba", "ab", "ea", "ai", "au", "s", "ax", "aj", "area", "x", "am", "A", "r", "ar", "ak", "ia", "ao", "va", "ae", "ata", "oa", "aa", "sta", "as", "na", "pa", "sa", "aq", "p", "al"], "b": ["nb", "bi", "ba", "ab", "bl", "be", "bb", "fb", "ib", "e", "wb", "eb", "l", "lb", "bd", "ob", "gb", "bs", "db", "binary", "d", "bg", "g", "r", "bh", "bc", "v", "bf", "y", "bar", "cb", "xb", "bt", "reb", "j", "h", "back", "emb", "beta", "pb", "mb", "bis", "bp", "t", "br", "base", "z", "B", "rb", "bound", "p", "u"], "in": ["en", "ain", "pin", "In", "null", "it", "up", "local", "din", "file", "from", "source", "rin", "mc", "run", "mm", "l", "ins", "arg", "rt", "conf", "bin", "doc", "form", "asin", "get", "inc", "r", "mi", "or", "ini", "err", "io", "h", "win", "ind", "ac", "IN", "init", "log", "reader", "con", "t", "gin", "is", "isin", "nin", "stream", "input", "serv", "ex", "inn", "inf", "inner", "p", "ic", "cin"], "buffer": ["result", "limit", "scroll", "size", "uf", "display", "buff", "iter", "cache", "phrase", "source", "block", "bytes", "variable", "table", "buf", "store", "binary", "row", "template", "password", "paste", "memory", "library", "window", "address", "screen", "number", "reference", "length", "print", "document", "bridge", "append", "command", "view", "device", "batch", "stack", "Buffer", "output", "bone", "page", "stream", "input", "base", "header", "message", "queue", "temp", "mem", "database", "match", "sequence", "button", "history", "frame"], "curbuf": ["crubdf", " curbip", "ecurbbuf", "csriburg", "csurbuf", " curbuff", "criburg", "curbbuf", "curguf", " crobuf", "acribuff", " crobip", "cuberull", "caurull", "crobull", "crubull", "Curbuf", "acurbuf", "curbeduff", "curbind", "ecubuf", "acurbf", "cigrurg", "acribf", "acribuf", "ecurbind", "cribuf", "crubbuf", "caurip", "cubuf", "acurbuff", " curboe", "curboe", "Curbdf", "crobf", "cribuff", "culpuff", "curoe", "cubbuf", "culpuf", "cigruf", "curull", "Curbull", "Crobdf", "ecubbuf", " crobpu", "csurbbuf", "cribib", "crobdf", "curduf", "Curduf", "csribuf", " curuff", "curbeduf", "culpbuf", " curuf", "cruffuf", "crobip", "curburg", "curdbuf", "curbpu", "curuf", " curoe", "Curdbuf", "csribib", "curgoe", "cubind", "curbdf", "crobpu", "curdull", "curbedoe", "Curbf", "crubf", "curgull", "acurbbuf", "curuff", "curind", "Curbient", "cururg", "cauruf", "ecurbuf", " curbpu", "Curdull", "culpf", "cubuff", "crobient", "curib", "Curbbuf", "Crobuf", "cuberbuf", "csurburg", "cigrib", "cuberuf", "caurpu", " curbull", "cruffdf", "curbf", "curdient", "Crobf", "curbull", "crubip", " crobull", "crobbuf", "curguff", "crobuff", "crufff", "curbib", "acribbuf", "cribbuf", "cribind", " curull", "crubpu", "cribf", "crobuf", "Crobbuf", "ecubuff", "crubuf", "curbedull", "csribbuf", "curbip", "curbuff", "cruffbuf", "Curdient", "cuberient", "ecurbuff", "curbient", "csurbib", "cigrbuf", "ecubind"], "lenbuf": ["Lenvec", "enpkg", "lnbuffer", "lenprop", "lnbuf", "lenqueue", "lengthbuffer", "lnbr", " lenvec", "lnpkg", "Lenbr", "enbuffer", "lanqueue", "Lenbuffer", "lenvec", "lnbuff", "Lenbytes", " lenbytes", "lonpkg", "Lenbuff", "enbuf", "lenbuff", "enbuff", "lnerr", "enbr", "lnprop", " lenprop", "lenbuffer", "Lenbuf", "lonbuf", "lonbuffer", "lengtherr", " lenbuffer", "lanprop", "lengthqueue", "lenpkg", "lenerr", "lonbuff", "lenbr", "lenbytes", "lengthbuf", "lanbuf", " lenqueue", " lenerr", "lanbuffer", "lnbytes", "lnvec", "lnqueue"], "c": ["abc", "cp", "vc", "w", "mc", "l", "k", "cmp", "const", "cr", "conf", "xc", "x", "\u00e7", "ec", "d", "bc", "cc", "v", "C", "ci", "fc", "fac", "cont", "conv", "cu", "lc", "rc", "ac", "gc", "category", "uc", "cs", "cf", "tc", "con", "t", "pc", "dc", "z", "count", "code", "num", "ct", "ca", "ce", "p", "ic", "unc", "col", "u"], "sb": ["nb", "bsp", "bj", "bb", "ib", "zb", "sf", "ub", "sm", "erb", "sbm", "eb", "lb", "gob", "bd", "bs", "gb", "ob", "db", "lp", "bg", "kb", " sob", "bh", "bf", "sth", "bt", "SB", "cb", "sg", "sam", "abs", "pb", "ssl", "sq", "mb", "bp", "rb", "sa", "sv", "stuff", "sp"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n\tprivate static final Scanner scan = new Scanner(System.in);\\n\\n\tpublic static void main(String[] args){\\n\t\tint N = scan.nextInt();\\n\t\tfor(int i = 0; i < N; i++){\\n\t\t\tint a = scan.nextInt();\\n\t\t\tint b = scan.nextInt();\\n\t\t\tint c = scan.nextInt();\\n\t\t\tif(a * a == b * b + c * c | b * b == a * a + c * c | c * c == a * a + b * b){\\n\t\t\t\tSystem.out.println(\"YES\");\\n\t\t\t} else{\\n\t\t\t\tSystem.out.println(\"NO\");\\n\t\t\t}\\n\t\t}\\n\t}\\n}", "target": "65", "substitutes": {"scan": ["an", "query", "in", "report", " Scan", "list", "scroll", "ch", "nn", "sync", "set", "read", "send", "connect", "re", "ann", "pack", "see", "save", "p", "row", "out", "seek", "sc", "get", "walk", "parse", "trace", "r", "find", "skip", "sys", "sim", "range", "search", "io", "export", "can", "reach", "nl", "gc", "gate", "san", "write", "system", "info", "transform", "se", "con", "ser", "link", "na", "scale", "util", "stat", "n", "store", "sur", "sql", "auto", "sv", "Scan", " scanner"], "N": ["NP", "NI", "NG", "S", "NA", "J", "D", "T", "NM", "NH", "K", "No", "Y", "Z", "P", "V", "NT", "M", "C", "X", "Ni", "Size", "NB", "I", "Number", "TN", "R", "NR", "NN", "Ns", "Num", "Total", "NS", "L", "SN", "B", "F", "n", "O", "NC"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "gu", "iu", "ie", "di", "pi", "qi", "x", "g", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "io", "iq", "I", "q", "init", "me", "m", "ki", "ii", "gi", "us", "is", "li", "z", "ex", "hi", "ui", "n", "sql", "ix", "im", "ic", "phi", "u"], "a": ["an", "la", "ba", "ab", "j", "ea", "ai", "e", "au", "ah", "aka", "o", "l", "aaa", "aj", "area", "am", "A", "g", "r", "v", "ar", "name", "ia", "ta", "ma", "f", "h", "ao", "va", "ack", "alpha", "ac", "ae", "app", "m", "ga", "oa", "aa", "as", "t", "sta", "pa", "sa", "ca", "n", "aq", "p", "be", "al", "u"], "b": ["nb", "bi", "ba", "ab", "bl", "be", "bb", "ib", "fb", "e", "sb", "bu", "ub", "wb", "o", "eb", "lib", "l", "ob", "bs", "gb", "db", "d", "g", "r", "bc", "v", "bf", "y", "cb", "j", "f", "h", "m", "bis", "t", "z", "B", "rb", "n", "p", "u"], "c": ["ch", "e", "vc", "w", "cm", "o", "l", "k", "cd", "ec", "cr", "arc", "x", "d", "sc", "g", "r", "bc", "v", "cc", "C", "co", "fc", "ci", "ar", "name", "cb", "f", "lc", "cu", "h", "rc", "ac", "m", "cl", "uc", "cs", "tc", "cf", "t", "dc", "pc", "z", "ce", "ct", "n", "p", "ic", "u"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.IOException;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tBufferedReader input = new BufferedReader(new InputStreamReader(System.in));\\n\t\tStringBuilder sb = new StringBuilder();\\n\t\tint n = 0;\\n\t    double avg = 0;\\n\t\t  \\n\t\twhile((n = Integer.parseInt(input.readLine())) != 0){\\n\t\t  String line = input.readLine();\\n\t\t  String[] str = line.split(\" \");\\n\t\t  double[] data = new double[n];\\n\t\t  \\n\t\t  double sum = 0 , scat = 0 , dev = 0;\\n\t\t  for(int i = 0 ; i < n ; i ++){\\n\t\t\t  data[i] = Double.parseDouble(str[i]);\\n\t\t\t  sum += data[i];\\n\t\t\t  avg = sum / (double)n ;\\n\t\t  }\\n\t\t  for(int j = 0 ; j < n ; j++){\\n\t\t\t  scat += Math.pow(avg - data[j], 2); \\n\t\t  }\\n\t\t  \\n\t\t  dev = Math.sqrt(scat/(double)n);\\n\t\t  sb.append(dev + \"\\n\");\\n\t\t  \\n\t\t}\\n\t\tSystem.out.print(sb);\\n\t\t\\n\t}\\n\\n}", "target": "203", "substitutes": {"input": ["submit", "in", "add", "open", "ip", "Input", "quick", "file", "source", "from", "background", "acl", "image", "upload", "api", "accept", "enter", "out", "form", " Input", "get", "this", "parse", "socket", "load", "proc", "bt", "hub", "start", "io", "feed", "rc", "active", "init", "http", "initial", "buffer", "reader", "sq", "ssl", "cmd", "output", "raw", "amp", "select", "client", "more", "java", "inner", "history"], "sb": ["nb", "bsp", "si", "bb", "ws", "zb", "sf", "sw", "ub", "wb", "sm", "erb", "eb", "lb", "b", "buf", "gob", "bd", "bs", "gb", "ob", "lp", "bg", "kb", "bh", "bf", "sth", "bt", "SB", "xb", "cb", "sn", "rob", "sg", "gc", "pb", "sq", "ssl", "amp", "rb", "sa", "sql", "scl", "sv", "sp"], "n": ["nb", "an", "en", "nn", "names", "nw", "s", "network", "all", "ll", "none", "o", "l", "np", "k", "ns", "c", "d", "un", "g", "r", "nt", "v", "conn", "no", "nm", "y", "ng", "norm", "name", "a", "number", "sn", "ni", "h", "q", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "count", "N", "gn", "p"], "avg": ["averm", "avet", "aversum", "wavsum", " avgs", "wavm", " avt", " avd", "avm", "avesum", "averz", "scm", "avegm", "avergs", "wavg", "Avd", "Avgs", "avem", "scgm", "avgm", "avt", "scz", "aveg", "avegs", "avsum", "wavgs", "aved", "Avt", "avz", "avergm", "avez", "Avg", "averg", "scg", "avd", "avgs"], "line": ["in", "Line", "list", "part", "eline", "ste", "side", "inline", "next", "block", "l", "lin", "row", "text", "out", "ine", "cell", "lf", "LINE", "name", "liner", "lc", "le", "string", "shell", "nl", "log", "sl", "ln", "url", "detail", "raw", "se", "link", "page", "label", "frame", "sequence", "sp", "note", "entry"], "str": ["list", "obj", "sts", "s", "next", "fr", "oct", "chain", "tr", "STR", "dr", "step", "stri", "char", "split", "text", "form", "comm", "gr", "r", "rip", "dat", "name", "string", "st", "Str", "sl", "stack", "url", "spec", "att", "piece", "txt", "sequence", "sp", "arr"], "data": ["result", "des", "size", "items", "da", "results", "missing", "obj", "dict", "cache", "ds", "stats", "all", "now", "DATA", "series", "np", "step", "di", "ns", "p", "details", "db", "def", "rel", "d", "draw", "no", "dat", "current", "done", "extra", "value", "aw", "values", "ata", "batch", "zero", "info", "params", "ne", "buffer", "raw", "valid", "scale", "xy", "count", "mem", "div", "store", "map", "val"], "sum": ["av", "summary", "add", "size", "si", "total", "vol", "set", "um", "cal", "all", "cum", "mm", "out", " Sum", "med", "norm", "nt", "v", "sys", "oss", "sim", "fac", "h", "sat", "Sum", "hash", "ul", "sam", "zero", "system", "so", "us", "se", "t", "util", "num", "count", "sa", "su", "mem", "temp", "mean", "average"], "scat": ["ecat", " scash", "ccate", "ecAT", "escAT", "SCrt", "oscash", "ecit", "scash", " scats", "escit", "ancact", "scats", " scit", "oscrt", "oscat", "ccact", "scAT", "oscap", "escate", "ancag", "ancate", "escag", "scrt", " scap", "ccat", "SCap", "ecats", "ancat", "scag", "SCat", "escat", "ccag", " scAT", "scact", "scap", "SCash", "scate", "scit", "escats", "escact", " scrt"], "dev": ["dem", "nv", "av", "var", "des", "spread", "adj", "ve", "gu", "diff", "develop", "development", "driver", "ver", "del", "warn", "dd", "ov", "def", "d", "unknown", "tech", "nt", "adv", "det", "error", "sd", "den", "nov", "df", "rent", "Dev", "device", "stable", "debug", "dist", "dot", "priv", "ev", "DEV", "div", "mem"], "i": ["bi", "multi", "list", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "et", "o", "PI", "chain", "zi", "xi", "di", "pi", "qi", "this", "ei", "ik", "mi", "v", "ini", "ci", "id", "sim", "oi", "io", "uri", "I", "ind", "q", "ij", "me", "init", "ami", "index", "ki", "\u0438", "batch", "ii", "gi", "info", "us", " I", "is", "li", "ui", "ji", "inner", "ix", "fi", "im", "ic", "phi", "ri"], "j": ["jo", "oj", "bj", "obj", "jc", "json", "J", "pt", "ie", "key", "fr", "jit", "dj", "b", "k", "jj", "jas", "aj", "jl", "bo", "jp", "uj", "js", "off", "v", "ja", "y", "bot", "err", "ph", "jac", "q", "ij", "je", "kj", "us", "att", "br", "z", "jump", "other", "job", "ji", "ge"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n\\n        int n = sc.nextInt(); //n\u3068\u3044\u3046\u5909\u6570\u3092\u4f5c\u308a\u3001\u6a19\u6e96\u5165\u529b\u304b\u3089\u6570\u5b57\u3092\u4e00\u3064\u8aad\u307f\u53d6\u3063\u3066\u3001n\u306b\u5165\u308c\u308b\\n        int q = sc.nextInt();\\n\\n        String s = sc.next();\\n\\n        int[] l = new int[q];\\n        int[] r = new int[q];\\n        int[] t = new int[n];\\n\\n        for (int i = 0; i < q; i++) {\\n            l[i] = sc.nextInt();\\n            r[i] = sc.nextInt();\\n        }\\n\\n        for (int i = 0; i < n - 1; i++) {\\n            t[i + 1] = s.substring(i, i+2).equals(\"AC\") ? t[i] + 1 : t[i];\\n        }\\n\\n        for (int i = 0; i < q; i++) {\\n            int res = t[r[i] - 1] - t[l[i] - 1];\\n\\n            System.out.println(res);\\n        }\\n    }\\n}\\n", "target": "52", "substitutes": {"sc": ["ch", "sb", "sw", "asc", "sm", "mc", "osc", "cr", "ec", "Sc", "sel", "c", "sub", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "uc", "nc", "sq", "cs", "tk", "pc", "sa", "capt", "isc", "scl", "sv", "sp", "esc"], "n": ["nb", "en", "rn", "nn", "s", "l", "ns", "ern", "c", "i", "d", "nr", "ner", "nm", "nt", "v", "r", "name", "h", "f", "sn", "m", "nu", "ne", "z", "count", "N", "p"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n\\n        Scanner sc = new Scanner(System.in);\\n        String s = sc.nextLine();\\n\\n        char[] chars = s.toCharArray();\\n\\n        int sum = 0;\\n        for (int i = 0; i <chars.length; i++) {\\n            sum += Character.getNumericValue(chars[i]);\\n        }\\n\\n        if (sum % 9 == 0) {\\n            System.out.println(\"Yes\");\\n        } else {\\n            System.out.println(\"No\");\\n        }\\n\\n\\n\\n    }\\n}", "target": "93", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "ec", "Sc", "sel", "c", "sub", "inc", "dec", "bc", "cc", "sys", "SC", "lc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "system", "cs", "tc", "sq", "se", "pc", "ser", "isc", "desc", "syn", "sh", "scl", "sv", "sp", "esc"], "s": ["in", "ms", "S", "space", "sts", "sf", "sb", "src", "source", "gets", "b", "ns", "strings", "bs", "c", "ts", "js", "str", "g", "v", "sys", "ats", "h", "gs", "st", "ls", "m", "sam", "ss", "sq", "qs", "se", "ps", "is", "n", "sql", "p", "sv", "rs", "sp"], "chars": ["contats", "chas", "charrs", "scrs", " Chars", "scats", "chacters", "Chas", " chants", " chonds", "contacters", "chats", "contars", " chrs", "scars", "charats", "Chats", "scas", " Chants", "chonds", "chants", "charonds", "contrs", " Chrs", " chats", "characters", "Chrs", "Chars", "charars", "chrs", " Chonds", " chacters", "charas", "charants"], "sum": ["result", "summary", "size", "si", "total", "success", "vol", "sign", "tmp", "max", "um", "dim", "cal", " SUM", "cum", "amount", "share", "black", "mass", "score", "sim", "fac", "must", "SI", "cu", "sup", "ass", "sat", "hash", "Sum", "weight", "tail", "sam", "mu", "hum", "zero", "acc", "scale", "num", "count", "sa", "su", "n", "temp", "mem", "match", "mean", "average"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "major", "ip", "it", "set", "gu", "iu", "ie", "key", "o", "PI", "chain", "xi", "di", "pi", "qi", "ei", "g", "my", "mi", "point", "ini", "ci", "y", "id", "err", "sim", "span", "j", "io", "a", "uri", "ma", "I", "ind", "q", "init", "m", "ki", "\u0438", "ii", "gi", "us", "ski", "t", "is", "li", "ex", "hi", "ui", "cli", "client", "ji", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    \\n    int[] list = new int[5];\\n    for (int i=0; i<list.length; i++) {\\n      list[i] = sc.nextInt();\\n    }\\n    int k = sc.nextInt();\\n    \\n    int max = 0;\\n    for (int i=0; i<list.length; i++) {\\n      for (int j=i+1; j<list.length; j++) {\\n        max = Math.max(max, list[j]-list[i]);\\n      }\\n    }\\n    \\n    if (max > k) {\\n      System.out.println(\":(\");\\n    }\\n    else {\\n      System.out.println(\"Yay!\");\\n    }\\n  }\\n}", "target": "66", "substitutes": {"sc": ["si", "ch", "sb", "sync", "sw", "cle", "asc", "mc", "osc", "scrib", "anc", "cr", "Sc", "sci", "c", "ctx", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "pb", "nc", "sq", "cs", "tc", "system", "tch", "pc", "ctl", "dc", "psc", "isc", "scl", "sv", "sp", "esc"], "list": ["result", "old", "add", "item", "obj", "iter", "dict", "null", "set", "tmp", "mt", "test", "lat", "msg", "all", "block", "l", "art", "chain", "table", "user", "feat", "del", "tag", "out", "form", "def", "left", "lists", "listed", "parent", "nt", "no", "v", "load", "line", "we", "range", "current", "print", "word", "st", "show", "index", "pre", "the", "batch", "sort", "dl", "spec", "detail", "valid", "data", "ist", "li", "array", "L", "pl", "net", "tree", "temp", "filter", "map", "sequence", "note", "LIST"], "i": ["in", "multi", "si", "ip", "ir", "chain", "zi", "di", "ion", "my", "ini", "me", "info", "hi", "p", "phi", "it", "ie", "um", "status", "qi", "y", "sim", "ia", "uri", "q", "init", "ami", "ori", "ii", "gi", "to", "ji", "inner", "ic", "ri", "jo", "bi", "iter", "iu", "iti", "ei", "io", "I", "ind", "print", "ij", "mu", "is", "li", "ui", "ix", "ti", "ai", "e", "xi", "pi", "mi", "ity", "v", "ci", "iso", "uci", "iq", "inx", "m", "ki", "batch", "ims", "im", "u"], "k": ["ka", "kl", "ke", "kr", "kn", "wk", "w", "sk", "key", "mc", "kid", "K", "ko", "ks", "g", "ek", "v", "ku", "ok", "ak", "kk", "q", "kw", "m", "mk", "kj", "km", "ck", "tk", "t", "dk", "n", "p"], "max": ["pop", "add", "cp", "mx", "size", "mad", "ms", "total", "check", "tmp", "right", "MAX", "last", "up", "set", "next", "all", "key", "ax", "after", "best", "sum", "with", "p", "prime", "conf", "row", "x", "med", "window", "or", "end", "r", "v", "mod", "id", "default", "current", "range", "min", "ma", "res", "top", "gt", "inter", "rank", "append", "can", "hash", "star", "m", "recent", "rest", "Max", "huge", "mk", "head", "move", "full", "ext", "dot", "rand", "count", "scale", "cut", "n", "checked", "auto", "map", "ge", "grow", "maximum"], "j": ["jo", "bi", "bj", "oj", "obj", "at", "json", "J", "it", "s", "e", "jc", "pt", "o", "fr", "l", "dj", "b", "jj", "aj", "jl", "bo", "out", "jp", "son", "uj", "js", "g", "r", "v", "ja", "y", "ph", "jac", "ij", "q", "kj", "m", "ne", "br", "z", "jump", "other", "job", "ji", "n", "pr"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.*;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tint[]a=new int[n+4];\\n\t\tint[]b =new int[n];\\n\t\tfor(int i =0;i<n;i++)b[i]=sc.nextInt();\\n\t\tfor(int i =n-1;i>=0;i--) {\\n\t\t\ta[b[i]]=Math.max(a[b[i]],1+a[b[i]+1] );\\n\t\t}\\n\t\tif(a[1]==0) {\\n\t\t\tSystem.out.println(-1);\\n\t\t}else System.out.println(n-a[1]);\\n\t}\\n\tstatic int gcd(int a,int b) {\\n\t\tif(a==0)return b;\\n\t\treturn gcd(b%a,a);\\n\t}\\n\t  static class Scanner {\\n\t        StringTokenizer st;\\n\t        BufferedReader br;\\n\t \\n\t        public Scanner(FileReader r) {\\n\t            br = new BufferedReader(r);\\n\t        }\\n\t \\n\t        public Scanner(InputStream s) {\\n\t            br = new BufferedReader(new InputStreamReader(s));\\n\t        }\\n\t \\n\t        public String next() throws IOException {\\n\t            while (st == null || !st.hasMoreTokens())\\n\t                st = new StringTokenizer(br.readLine());\\n\t            return st.nextToken();\\n\t        }\\n\t \\n\t        public int nextInt() throws IOException {\\n\t            return Integer.parseInt(next());\\n\t        }\\n\t \\n\t        public long nextLong() throws IOException {\\n\t            return Long.parseLong(next());\\n\t        }\\n\t \\n\t        public String nextLine() throws IOException {\\n\t            return br.readLine();\\n\t        }\\n\t \\n\t        public double nextDouble() throws IOException {\\n\t            String x = next();\\n\t            StringBuilder sb = new StringBuilder(\"0\");\\n\t            double res = 0, f = 1;\\n\t            boolean dec = false, neg = false;\\n\t            int start = 0;\\n\t            if (x.charAt(0) == '-') {\\n\t                neg = true;\\n\t                start++;\\n\t            }\\n\t            for (int i = start; i < x.length(); i++)\\n\t                if (x.charAt(i) == '.') {\\n\t                    res = Long.parseLong(sb.toString());\\n\t                    sb = new StringBuilder(\"0\");\\n\t                    dec = true;\\n\t                } else {\\n\t                    sb.append(x.charAt(i));\\n\t                    if (dec)\\n\t                        f *= 10;\\n\t                }\\n\t            res += Long.parseLong(sb.toString()) / f;\\n\t            return res * (neg ? -1 : 1);\\n\t        }\\n\t \\n\t        public boolean ready() throws IOException {\\n\t            return br.ready();\\n\t        }\\n\t    }\\n}\\n", "target": "234", "substitutes": {"sc": ["irc", "ch", "sync", "asc", "mc", "osc", "cr", "ec", "Sc", "sci", "c", "ctx", "bc", "cc", "sys", "co", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "ss", "pb", "nc", "sq", "tc", "cs", "pc", "dc", "na", "isc", "capt", "scl", "sh", "sv", "rs", "sp", "esc"], "n": ["nb", "en", "size", "nn", "e", "nw", "w", "network", "ll", "o", "l", "np", "k", "ns", "pi", "out", "c", "d", "un", "nm", "nt", "v", "no", "ng", "on", "name", "j", "number", "sn", "fn", "nu", "m", "nl", "nc", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "p"], "a": ["ap", "an", "aff", "la", "ba", "ab", "eas", "da", "at", "ea", "ai", "au", "e", "it", "w", "all", "o", "l", "aaa", "area", "c", "am", "d", "A", "window", "g", "act", "ar", "y", "bar", "ma", "j", "h", "ao", "ta", "alpha", "ac", "ae", "app", "al", "m", "ata", "abs", "ga", "oa", "aa", "att", "as", "sta", "t", "array", "z", "num", "sa", "ca", "isa", "div", "auto", "aq", "p", "ava", "arr", "u"], "b": ["nb", "bi", "ba", "ab", "bl", "be", "bb", "ib", "fb", "e", "it", "bu", "wb", "o", "eb", "l", "bd", "ob", "bs", "gb", "bo", "db", "out", "c", "d", "g", "bc", "v", "y", "bar", "cb", "reb", "j", "h", "app", "emb", "body", "m", "beta", "belt", "mb", "blue", "bis", "bp", "base", "z", "B", "rb", "bound", "p", "u"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "ri", "iu", "ie", "fi", "status", "o", "chain", "l", "zi", "xi", "k", "di", "pi", "qi", "c", "g", "parent", "mi", "point", "ity", "ini", "ci", "y", "id", "sim", "oi", "j", "io", "uri", "ni", "I", "ind", "ij", "q", "iy", "me", "m", "ki", "ment", "\u0438", "batch", "ii", "gi", "info", "us", "ims", "is", "li", "hi", "ui", "cli", "ji", "ix", "p", "im", "ic", "phi", "u", "fire"], "st": [" St", "bl", "irst", "std", "nd", "ste", "ost", "sts", "it", "sw", "mt", "sm", "et", "fr", "first", "tr", "rd", "dr", "const", "step", "th", "stri", "cr", "rt", " ST", "ust", "str", "lo", "nt", "ST", "sth", "bt", "h", "inst", "sn", "ut", "stage", "rest", "cl", "sl", "stable", "stack", "ss", "se", "t", "ist", "St", "util", "stat", " superst", "ct", "sh", "be", "sp", "est"], "br": ["ber", "bsp", "bi", "wr", "bl", "hr", "ba", "kr", "BR", "Br", "vr", "mr", "bern", "fr", "tr", "buf", "dr", "bd", "bs", "cr", "rel", "gr", "str", "bh", "bc", "bt", "err", "rob", "sp", "bridge", "lr", "sr", "shr", "bp", "bre", "stat", "rb", "bm", "pr", "ctr", "bro", "bn"], "r": ["in", "hr", "rn", "w", "mr", "fr", "re", "l", "rd", "dr", "rt", "cr", "c", "d", "g", "ar", "err", "h", "rc", "ry", "sr", "R", "lr", "ur", "reader", "rr", "rand", "rb", "pr", "p", "er", "rs", "rar", "ro"], "s": ["ies", " es", "ses", " inputs", "parts", "S", " samples", "sts", "ds", "w", " rs", "es", "ns", " streams", "services", "p", "c", "ts", "js", "ys", "g", "ats", "its", "h", "xs", "gs", "ls", "m", "ers", "rest", "ss", "os", "as", "t", "ps", "sa", "ings", "rs", "ids", "eds"], "x": ["px", " xx", "e", "w", "tx", "xe", "xx", "lat", "o", "xf", "l", "xi", "xt", "xc", "c", "fx", "xes", "xp", "v", "ux", "X", "y", "xs", "wx", "rx", "xa", "t", "xy", "z", "ex", "xxx", "ix", "p", "u"], "sb": ["nb", "bj", "si", "bb", "sf", "sm", " db", "lb", "bd", "gb", "db", "lp", "kb", "bf", "bt", "SB", "xb", "cb", "sg", " SB", "pb", "sq", "tk", "bp", "rb", "sa", "sql", "sv", "sp"], "res": ["result", "ms", " total", "fd", " cs", "re", " reg", "Res", "vals", "def", "RES", "ret", "j", "pos", "df", "Val", "q", " val", " ret", " fu", "os", "ps", "base", " df", "val"], "f": ["fp", "e", "fd", "o", "k", "c", "ff", "d", "g", "fc", "v", "fac", "tf", "j", "df", "frac", "t", "fo", "fa", "F", "p", "val", "fs", "u"], "start": ["in", "add", "ish", "part", "it", "check", "max", "set", "next", "from", "first", "art", "state", "step", "started", "starting", "Start", "trans", "d", "end", "id", "j", "pos", "ind", "star", "init", "shift", "rest", "begin", "head", "t", "offset", "p", "sp", "stop"], "dec": [" decimal", " inc", " sign", " div", " decode", " decl", " precision", " prec", " leaf", " den", " norm", "ec", " esc", "inc", "Dec", " exp", " ec", " def", " signed", " win", " val", "dev", " desc", " num", " rev", " rec", " enc", " reverse"], "neg": ["false", "orient", "yes", "sign", "gen", "not", "neutral", "del", "bo", "ko", "sub", "rel", "flag", "cos", "no", "dirty", "rev", "ok", "decl", "pos", "nov", "Neg", "cond", "zero", "minus", "rec", "ne", "nan", "disc", "rot", "pred", "priv", "jump", "reverse", "negative", "inf", "mut", "und", " Neg"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n  public static void main (String[] args) {\\n\\n    Scanner sc = new Scanner(System.in);\\n    \\n    long A = sc.nextLong();\\n    long B = sc.nextLong();\\n    long C = sc.nextLong();\\n    long D = sc.nextLong();\\n\\n    sc.close();\\n\\n    long lcm_ = lcm(C, D);\\n\\n    long A1 = A / C;\\n    long B1 = B / C;\\n    long AB1 = B1 - A1;\\n    if (A % C == 0) {\\n      AB1++;\\n    }\\n\\n    long A2 = A / D;\\n    long B2 = B / D;\\n    long AB2 = B2 - A2;\\n    if (A % D == 0) {\\n      AB2++;\\n    }\\n\\n    long A3 = A / lcm_;\\n    long B3 = B / lcm_;\\n    long AB3 = B3 - A3;\\n    if (A % lcm_ == 0) {\\n      AB3++;\\n    }\\n\\n    long AB = AB1 + AB2 - AB3;\\n\\n    System.out.println(B - A + 1 - AB);\\n\\n  }\\n\\n  public static long gcd(long x, long y){\\n\\n    if (y == 0) {\\n      return x;\\n    }\\n    \\n    return gcd(y, x % y);\\n    \\n  }\\n\\n  public static long lcm(long x, long y) {\\n\\n\t\treturn x / gcd(x, y) * y;\\n  \\n  }\\n\\n}", "target": "9", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "asc", "mc", "osc", "ctrl", "cmp", "anc", "cr", "ec", "Sc", "ko", "arc", "c", "ctx", "sub", "inc", "bc", "fc", "cc", "sys", "cont", "SC", "conv", "lc", " Sc", "rc", " SC", "usc", "st", "sch", "sec", "sr", "gc", "cl", "scan", "ss", "nc", "sq", "cs", "tc", "ck", "pc", "ctl", "dc", "isc", "syn", "desc", "scl", "capt", "sv", "Scan", "sp", "esc"], "A": ["ACH", "S", "NA", "At", "AAA", "AT", "One", "BA", "T", "AF", "EA", "AC", "JA", "AI", "Area", "H", "As", "P", "HA", "AS", "Ar", "AH", "AD", "CA", "MA", "V", "SA", "Array", "ACC", "AV", "ACT", "X", "AE", "M", "LA", "AR", "a", "I", "G", "AA", "ALL", "R", "App", "AK", "AL", "IA", "GA", "AP", "L", "Av", "AU", "AM", "Ac", "All", "API", "AST", "ARC", "AN", "An"], "B": ["Bs", "S", "BR", "BB", "J", "BU", "BA", "T", "Builder", "Business", "E", "b", "IB", "VB", "H", "Y", "BY", "P", "Be", "V", "Bi", "BO", "M", "LIB", "SB", "BC", "WB", "NB", "I", "G", "BE", "BI", "OB", "Big", "R", "LB", "Base", "PB", "BL", "BM", "L", "Ab", "Ber", "F", "GB", "N", "DB"], "C": ["CS", "CP", "EC", "S", "CT", "T", "CB", "E", "K", "U", "Co", "H", "Y", "Z", "DC", "P", "CL", "c", "JC", "V", "CA", "Ch", "M", "X", "SC", "BC", "G", "I", "CC", "CON", "Cs", "YC", "R", "CW", "CE", "CD", "CNN", "L", "F", "CF", "N", "O", "CM", "CR", "Con"], "D": ["DP", "S", "DS", " d", "Diff", "T", "E", "DR", "DD", "U", "LD", "DA", "DE", "WD", "DOS", "Y", "Z", "DC", "P", "d", "V", "DM", "Dec", "Def", "M", "X", "DO", "G", "I", "DL", "Dir", "R", "DF", "Date", "CD", "DN", "Both", "L", "DT", "F", "Ds", "Q", "DEV", "N", "O", "Do", "DB", "DI", "DOM", "DIR"], "lcm_": [" lmmmm", "relcm_", "nlcm_", "relCM1", "lcd2", "lcmPr", "relCM_", "relcm1", "lremmm", "lcm2", "nlkm_", "lcd_", " lmm_", "lkm_", "lcmP", "lcom_", " lcmP", "lcm1", "lcom2", "lCMmm", "lrem_", "lwm_", "relcm______", " lcm2", "lcd1", "lcd______", " lcmmm", "lcmmm", "lCM______", "lcomPr", "lcomP", "lmm1", "lmm______", " lcmPr", "lfm_", "lmm_", "lCM1", "lcdPr", "lcm______", "lmmmm", "relCM______", "lcdP", "lCM_"], "A1": ["A0", " A11", "AB0", "ABOne", "COne", " AOne", "A11", "AOne", "C11", "C1", "B0", "AB11", "C0", " A0", "B11"], "B1": ["BBOne", "BB2", "A0", "ABOne", "AB0", "IB0", "IB2", "A4", " BOne", "B4", "B0", "AB4", "IB4", "BOne", "BB1", "IB1"], "AB1": ["OB1", "Ab1", "Ab3", "BB2", "AB0", "ABOne", "BB3", "OB0", "AbOne", "BONE", "ab1", "OB2", "AH0", "abONE", "ab9", "AB9", "AbONE", "Ab9", "B001", "BB0", "Ab2", "AH1", "Ab001", "BB001", "ABONE", "AB001", "OB001", "B9", "AH001", "abOne", "BOne", "AH2", "BB1"], "A2": [" A05", "Array1", "A05", "ESS05", "ESS1", "ESS2", "Array2", "A4", "Arraybot", "Array05", "B4", " Abot", "AB4", "Abot", " A4", "ESSbot"], "B2": ["b02", "btwo", "Btwo", " B02", "Builder2", "Buildertwo", "b05", "A4", " B05", "Builder02", "B02", " B4", "B4", "B05", "b2", "AB4", " Btwo", "Builder05"], "AB2": ["Ab1", " AB4", "Ab3", "B182", "AB182", "BB", "BB2", "ASTtwo", "AST4", "BB3", "AST3", "CBtwo", "OB4", "AST2", "CB4", "ABTwo", "BBB", "LABTwo", "OB2", " AB182", "CB2", "LAB2", "AbB", "ABB", "OB3", "BTwo", " ABTwo", "B4", "OBtwo", "Ab2", "LAB4", "AB4", "ABtwo", "LAB182", "BB1", "CB3"], "A3": [" A03", " A003", "AH003", "AB003", "AUthree", "A03", "AH03", "AHthree", "AU3", " Athree", "AH3", "Athree", "A003", "AU03", "AU003", "B003"], "B3": ["BuilderIII", "Bthree", "CIII", "Builderthird", "Builderthree", "Bthird", "Builder1", "B03", "C3", "Builder2", "Builder03", "Athree", "Cthird", "Builder3", " BIII", "C03", " Bthird", "ABthree", " B03", "BIII"], "AB3": ["BB4", "OB1", "Ab3", "BB8", "BB2", "BB3", "AB0", "Ab43", "OB8", "OB4", "AB23", "IB8", "Ab4", "BB103", "AH0", "AH23", "AH43", "OB2", "Ab103", "AH3", "IB2", "AB8", "OB3", "BB1", "OB103", "ab3", "ab43", "Ab2", "AB43", "ab0", "AB4", "Ab23", "AB103", "ab23", "Ab0", "IB3", "IB1"], "AB": ["AY", "UB", "ab", "BB", "RB", "BA", "LAB", "CB", "AF", "AC", "IB", "BP", "AI", "AD", "AH", "ARB", "SA", "AV", "ACC", "SB", "AR", "ABC", "AA", "OB", "Tab", "TA", "EB", "IA", "PB", "BM", "AG", "Ab", "AM", "GB", "DB"], "x": ["dx", "in", "px", " xx", "e", "w", "tx", "xe", "xx", "xd", "o", "ax", "l", "xi", "b", "xt", "fx", "i", "xp", "d", "xc", "c", "g", "r", "v", "X", "ox", "on", "id", "ty", "h", "a", "wx", "xs", "xxxx", "yx", "rx", "m", "xa", "xy", "z", "ex", "xxx", "ix", "p", "val"], "y": ["yi", "ies", "ay", "sy", "ch", "e", "dy", "ye", "xx", "key", "ey", "yd", "o", "yz", "l", "b", "Y", "gy", "i", "c", "out", "d", "ys", "g", " Y", "my", "cy", "ly", "v", "ity", "yr", "ty", "j", "vy", "h", "uy", "yt", "ery", "py", "ry", "ya", "iy", "m", "yo", "oy", "yx", "ny", "ym", "t", "xy", "z", "yy", "year", "fy", "wy"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.InputMismatchException;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        FastReader in = new FastReader(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        ALucky7 solver = new ALucky7();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class ALucky7 {\\n        public void solve(int testNumber, FastReader s, PrintWriter out) {\\n            int n = s.nextInt();\\n            String str = n + \"\";\\n            if (str.charAt(0) == '7' || str.charAt(1) == '7' || str.charAt(2) == '7') {\\n                out.println(\"Yes\");\\n            } else {\\n                out.println(\"No\");\\n            }\\n        }\\n\\n    }\\n\\n    static class FastReader {\\n        private InputStream stream;\\n        private byte[] buf = new byte[1024];\\n        private int curChar;\\n        private int numChars;\\n        private FastReader.SpaceCharFilter filter;\\n\\n        public FastReader(InputStream stream) {\\n            this.stream = stream;\\n        }\\n\\n        public int read() {\\n            if (numChars == -1) {\\n                throw new InputMismatchException();\\n            }\\n            if (curChar >= numChars) {\\n                curChar = 0;\\n                try {\\n                    numChars = stream.read(buf);\\n                } catch (IOException e) {\\n                    throw new InputMismatchException();\\n                }\\n                if (numChars <= 0) {\\n                    return -1;\\n                }\\n            }\\n            return buf[curChar++];\\n        }\\n\\n        public int nextInt() {\\n            int c = read();\\n            while (isSpaceChar(c)) {\\n                c = read();\\n            }\\n            int sgn = 1;\\n            if (c == '-') {\\n                sgn = -1;\\n                c = read();\\n            }\\n            int res = 0;\\n            do {\\n                if (c < '0' || c > '9') {\\n                    throw new InputMismatchException();\\n                }\\n                res *= 10;\\n                res += c - '0';\\n                c = read();\\n            } while (!isSpaceChar(c));\\n            return res * sgn;\\n        }\\n\\n        public boolean isSpaceChar(int c) {\\n            if (filter != null) {\\n                return filter.isSpaceChar(c);\\n            }\\n            return isWhitespace(c);\\n        }\\n\\n        public static boolean isWhitespace(int c) {\\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\\n        }\\n\\n        public interface SpaceCharFilter {\\n            public boolean isSpaceChar(int ch);\\n\\n        }\\n\\n    }\\n}\\n\\n", "target": "99", "substitutes": {"inputStream": ["helloFile", "inLog", "outputSource", "Inputstream", "inputFile", "outputFile", "inputSteam", "inputSource", "InputFile", "outputLog", "inSource", "helloStream", "InputLog", "inputstream", "InputSource", "helloSteam", "InputSteam", "inputLog", "instream", "helloSource", "outputstream", "outputSteam", "InputStream", "inStream"], "outputStream": ["networkStream", "OutputForm", "networkStreamer", "outForm", "outputStreamer", "inputSteam", "networkSteam", "OutputStream", "outSteam", "OutputPort", "inputstream", "OutputSteam", "networkstream", "outStream", " outputPort", " outputSteam", " outputForm", "outputPort", "outstream", "outputstream", "outputForm", "outputSteam", "outStreamer", "inputStreamer", "outPort"], "in": ["In", "iter", "null", "it", "up", "sol", "w", "din", "file", "from", "rin", "o", "run", "l", "ins", "bin", "context", "i", "doc", "get", "this", "sin", "r", "ini", "err", "current", "on", "io", "conv", "h", "ind", "IN", "init", "m", "log", "reader", "info", "con", "t", "gin", "isin", "is", "input", "inn", "inf", "inner", "p", "inside", "ic", "cin"], "out": ["result", "outer", "report", "summary", "list", "at", "OU", "null", "it", "set", "obj", "w", "file", "msg", "put", "aos", "pool", "o", "all", "Out", "table", "user", "flush", "l", "sum", "crit", "rt", "this", "or", "nt", "end", "v", "co", "sys", "conn", "screen", "err", "name", "io", " Out", "conv", "print", "exec", " OUT", "log", "gc", "write", "OUT", "ou", "output", "os", "t", "to", "writer", "ex", "net", "txt", "client", "temp", "inner", "p", "outs"], "solver": ["Solver", " solution", "Sorter", "solution", "resolve", "sol", " solve", "resolution", "isolve", "resol", "Solve", "Sol", "solve", "Solution", "isolver", "sorter", " sol", "isorter", "resolver", "resorter", "isolution"], "testNumber": ["testNum", " attemptNum", " attemptnumber", " attemptNo", " testNum", "TestNumber", "TestNum", "TestNo", "testNo", "Testnumber", " attemptNumber", "testnumber", " testNo", " testnumber"], "s": ["ses", "S", "ws", "sts", "sb", "sw", "ds", "w", "stats", "es", "b", "ns", "ins", "i", "ts", "js", "ys", "sin", "socket", "sys", "ats", "its", "h", "xs", "gs", "ls", "fs", "ss", "ssl", "sq", "os", "ims", "as", "t", "ps", "is", "serv", "p", "rs"], "n": ["nb", "nn", "nw", "nor", "o", "l", "np", "b", "k", "ns", "i", "d", "nr", "nt", "ng", "j", "number", "sn", "m", "nu", "ln", "ne", "t", "na", "z", "cn", "num", "node", "N", "p", "mn"], "str": ["list", "cur", "obj", "iter", "vol", "sol", "ocr", "msg", "ll", "fr", "re", "expr", "tr", "STR", "dr", "del", "cr", "char", "coll", "gr", "r", "seq", "err", "name", "j", "print", "string", "st", "Str", "sl", "exp", "url", "spec", "raw", "usr", "t", "data", "hex", "br", "txt", "temp", "div", "pr", "syn", "p", "desc", "enc", "sp", "arr"], "stream": ["loop", "REAM", "open", "iter", "sw", "console", "network", "read", "file", "pool", "engine", "status", "source", "driver", "table", "chain", "mode", "instance", "ream", "channel", "host", "context", "row", "form", "window", "or", "iterator", "speed", "socket", "each", "screen", "current", "handler", "io", "h", "resource", "service", "http", "view", "handle", "buffer", "wrapper", "stack", "reader", "ssl", "output", "storage", "system", "path", "data", "pipe", "input", "util", "message", "client", "sample", "Stream"], "buf": ["bl", "var", "cur", "uf", "fb", "buff", "pkg", "img", "tmp", "wb", "msg", "bytes", "cap", "box", "b", "db", "doc", "vec", "bin", "norm", "rab", "seq", "tab", "cb", "Buff", "conv", "bed", "cv", "emb", "bag", "buffer", "batch", "mb", "Buffer", "cmd", "br", "data", "rb", "txt", "mem", "queue", "temp", "arr"], "curChar": [" curchar", "curByte", "Curchar", "curVar", "ctrChar", "CurCh", "ctrchar", "rcByte", "ctrCh", "CurByte", "curchar", "curCh", " curByte", "ctrByte", " curCh", "rcChar", "ctrVar", "rcVar", "rcCh", " curVar", "CurChar", "CurVar"], "numChars": ["NumCARS", "numCheARS", "numColars", "numberchats", "sumChrs", "numberChats", "numchars", "numchrs", "numcharts", "numberchrs", "numCHords", "NumChrs", "numCHards", "numChats", "NumCords", "NumCars", "numThrs", "numThers", "numCARS", "NumchARS", "numberChrs", "numThars", "NumChars", "sumCharts", "numThats", " numchars", "sumChars", "numCHARS", "numCords", "NumCharts", " numChARS", "numberchars", "numClarts", "Numcharts", "NumChARS", "numchats", "numchards", "numCers", "numClrs", "sumCarts", " numChords", "numCars", "NumCrs", "numCheards", "numClats", "numberchARS", "numColrs", "numChears", "sumCrs", " numchARS", " numChards", "numChords", "numClars", "numChards", "numChrs", "numTharts", " numchards", "numCarts", "numberChARS", "numThARS", "sumCars", "numColARS", "sumCers", "numchARS", "numColats", "NumChords", "sumChers", " numchords", "numChers", "numClARS", "numColords", "numCharts", "Numchats", "NumChats", "numChARS", "numCHars", "Numchars", "numchords", "numCheords", "numberChars", "numCrs"], "filter": ["policy", "check", "processor", "file", "test", "term", "Filter", "source", "filename", "table", "fil", "channel", "accept", "ref", "type", "only", "handler", "config", "name", "conv", "callback", "fn", " filters", "loader", "spec", "writer", "map", "match"], "c": ["abc", "cp", "cur", "vc", "e", "com", "cache", "cat", "cm", "mc", "cum", "chain", "l", "b", "cmp", "cd", "enc", "p", "cr", "conf", "xc", "arc", "char", "i", "d", "g", "cos", "r", "bc", "fc", "v", "C", "cc", "co", "comp", "cb", "cont", "conv", "f", "h", "lc", "rc", "ac", "can", "m", "gc", "uc", "nc", "tc", "cs", "cf", "exp", "con", "pc", "dc", "t", "z", "ce", "ct", "cu", "ic", "unc", "col", "u"], "sgn": [" sbn", " sign", "sign", "Sgn", "sbn", "insign", "insbn", " sgate", " sig", "Sign", "Sbn", "gsgate", "Sig", "gsgn", "sgate", "sig", "gsign", "insgn", "gsbn", "insgate"], "res": ["result", "ms", "des", "results", "obj", "resp", "pers", "vol", "max", "ress", "resolution", "red", "rem", "re", "Res", "req", "crit", "cr", "vals", "vec", "RES", "cons", "js", "def", "gr", "rel", "ret", "conv", "rss", "resource", "rc", "reg", "rest", "cs", "os", "ps", "rand", "pres", "div", "cu", "respons", "reset"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tScanner sca = new Scanner(System.in);\\n\t\tString str = sca.next();\\n\\n\t\tint result = 0;\\n\t\tfor(int i = 0; i < str.length(); i++) {\\n\t\t\tif(str.charAt(i) != str.charAt(str.length() - 1 - i)) {\\n\t\t\t\tresult++;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(result/2);\\n\t}\\n}\\n", "target": "115", "substitutes": {}}
{"code": "import java.util.*;\\nimport static java.lang.Integer.*;\\nimport static java.lang.Long.*;\\nimport static java.lang.Math.*;\\nimport static java.lang.System.*;\\n\\npublic class Main {\\n\tpublic static int N = 3;\\n\tpublic static void main(String[] args) {\\n\t\tint i,j;\\n\t\tScanner sc = new Scanner(in);\\n\t\tint[] a = new int[3];\\n\t\ta[0] = parseInt(sc.next());\\n\t\ta[1] = parseInt(sc.next());\\n\t\ta[2] = parseInt(sc.next());\\n\t\tsc.close();\\n\t\tArrays.parallelSort(a);\\n\t\tif(a[0]==5&&a[1]==5&&a[2]==7) {\\n\t\t\tout.println(\"YES\");\\n\t\t} else {\\n\t\t\tout.println(\"NO\");\\n\t\t}\\n\t}\\n}\\n", "target": "16", "substitutes": {"N": ["size", "S", " D", "J", " L", "D", "T", " M", "E", "K", "Y", "Z", "P", "A", "V", " n", "M", "C", "NO", "I", "R", "NR", "Ns", "Num", "L", "B", "n", " C"], "i": ["in", "ai", "e", "o", "l", "b", "k", "x", "c", "r", "v", "y", "ia", "io", "f", "I", "ij", "q", "m", "ii", "t", "li", "z", "n", "p", "u"], "j": ["obj", "jc", "J", "it", "key", "next", "l", "b", "k", "jj", "aj", "jl", "jp", "js", "g", "r", "v", "ja", "q", "ij", "m", "kj", "z", "jump", "ji", "n", "p"], "sc": ["irc", "ch", "sync", "sw", "cle", "cam", "asc", "mc", "osc", "func", "anc", "cr", "Sc", "sel", "sci", "c", "ctx", "arc", "sub", "dec", "bc", "cc", "fc", "co", "sim", "SC", "mic", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "uc", "pb", "nc", "sq", "cs", "tc", "tch", "pc", "dc", "ctl", "capt", "isc", "cer", "scl", "desc", "sh", "sv", "sp", "esc"], "a": ["an", "aff", "la", "add", "ba", "ab", "parts", "eas", "da", "ea", "at", "au", "set", "all", "aka", "l", "aaa", "b", "changes", "aux", "area", "x", "c", "am", "d", "A", "era", "act", "v", "y", "ia", "ma", "ta", "ao", "ack", "alpha", "ac", "ae", "le", "app", "answer", "m", "wa", "aw", "index", "ata", "zero", "ga", "oa", "att", "aa", "as", "to", "na", "pa", "apa", "data", "fa", "ce", "sa", "ca", "active", "ed", "p", "button", "ava"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tArrayList<String> lines = new ArrayList<String>();\\n\t\tint c = 0;\\n\\n\t\twhile (true) {\\n\t\t\tString next = sc.nextLine();\\n\\n\t\t\tif (next.equals(\"0\")) {\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tlines.add(next);\\n\t\t\tc++;\\n\t\t}\\n\\n\t\tfor (int i = 0; i < c; i++) {\\n\t\t\tString s = lines.get(i);\\n\t\t\tint sum = 0;\\n\t\t\tfor (int j = 0; j < s.length(); j++) {\\n\t\t\t\tint in = Integer.parseInt(s.substring(j, j + 1));\\n\t\t\t\tsum += in;\\n\t\t\t}\\n\t\t\tSystem.out.println(sum);\\n\t\t}\\n\\n\t}\\n\\n}", "target": "144", "substitutes": {}}
{"code": "import java.util.*;\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int D = sc.nextInt();\\n    int N = sc.nextInt();\\n    output(D, N);\\n  }\\n  public static void output(int D, int N) {\\n    if (N != 100) {\\n      System.out.println((int) (N * Math.pow(100, D)));\\n    } else {\\n      System.out.println((int) ((N + 1) * Math.pow(100, D)));\\n    }\\n  }\\n}\\n", "target": "245", "substitutes": {"sc": ["ch", "sb", "sw", "asc", "sm", "mc", "osc", "anc", "cr", "Sc", "c", "sub", "inc", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "uc", "nc", "sq", "cs", "tc", "pc", "ctl", "sa", "capt", "isc", "scl", "sv", "sp", "esc"], "D": ["DP", "ORD", "S", "DS", "STD", "PD", "T", "DATA", "DR", "DD", "LD", "FD", "DE", "H", "Y", "P", "DC", "d", "AD", "DX", "V", "DM", "M", "C", "MD", "X", "DO", "I", "G", "VD", "Dir", "IN", "R", "DF", "CD", "DN", "L", "B", "F", "Q", "Ds", "DEV", "ND", "Do", "DB", "DI", "DOM", "DIR"], "N": ["NP", "NI", "NG", "S", "NA", "J", "NV", "T", "NH", "NM", "K", "H", "Y", "P", "NT", "V", "M", "C", "NUM", "NO", "Ni", "NE", "W", "NB", "I", "G", "TN", "FN", "NW", "CN", "R", "NL", "NN", "NR", "OUT", "Ns", "Num", "CNN", "NPR", "L", "NS", "SN", "B", "F", "MN", "n", "GN", "O", "ND", "NC"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\nclass Main{\\n  public static void main(String args[]) throws IOException{\\n   BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n   String line = br.readLine();\\n   String[] token = line.split(\"\");\\n\\n\\n   for (int i = 0; i < token.length; i++){\\n\t   if( Character.isUpperCase(line.charAt(i) )){\\n\t\t   token[i] = token[i].toLowerCase();\\n\t   }else if( Character.isLowerCase(line.charAt(i)) ){\\n\t\t   token[i] = token[i].toUpperCase();\\n\t   }\\n\t   System.out.print(token[i]);\\n   }\\n\\n   System.out.println();\\n\\n  }\\n}", "target": "192", "substitutes": {"br": ["wr", "bsp", "ber", "hr", "bl", "kr", "ch", "BR", "Br", "vr", "mr", "next", "fr", "er", "tr", "buf", "dr", "bd", "bs", "cr", "db", "rel", "gr", "nr", "str", "bh", "bc", "brace", "yr", "bt", "sp", "bridge", "lr", "mk", "bp", "rb", "bm", "pr", "ctr", "be", "bro"], "line": ["in", "Line", "list", "eline", "iter", "inline", "level", "online", "file", "key", "source", "now", "phrase", "block", "pe", "l", "chain", "lin", "row", "text", "out", "ine", "str", "lines", "lo", "no", "cell", "lf", "range", "LINE", "liner", "word", "le", "string", "shell", "body", "nl", "log", "handle", "buffer", "ln", "output", "raw", "se", "page", "link", "pipe", "header", "node", "frame", "sequence", "note", "entry"], "token": ["field", "result", "column", "response", "list", "item", "part", "complete", "second", "mat", "total", "iter", "console", "cycle", "processor", "key", "term", "position", "phrase", "block", "attribute", "single", "variable", "table", "state", "wt", "element", "channel", "tag", "char", "row", "form", "template", "oken", "prefix", "statement", "trace", "twitter", "forward", "KEN", "topic", "type", "bar", "Token", "span", "number", "component", "word", "string", "pattern", "normal", "factor", "buffer", "batch", "stack", "task", "function", "t", "piece", "label", "stat", "tree", "rule", "temp", "node", "match", "sequence", "description", "note", "vector", "event"], "i": ["in", "multi", "list", "si", "ip", "chain", "di", "c", "my", "ini", "err", "span", "res", "me", "info", "slice", "n", "phi", "wait", "it", "ie", "status", "o", "qi", "x", "vi", "y", "uri", "q", "init", "index", "ori", "ii", "gi", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "key", "ei", "g", "j", "io", "a", "ni", "I", "ind", "remote", "ij", "rest", "t", "is", "li", "ui", "ix", "ti", "ai", "xi", "pi", "mi", "ci", "id", "oi", "m", "batch", "ims", "eu", "z", "sql", "fi", "im", "u"]}}
{"code": "\\nimport java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputReader in = new InputReader(System.in);\\n        PrintWriter w = new PrintWriter(System.out);\\n        long n = in.nextLong();\\n        StringBuilder result = new StringBuilder();\\n        while (n > 0) {\\n            n--;\\n            result.insert(0, (char) ('a' + n % 26));\\n            n /= 26;\\n        }\\n        w.println(result.toString());\\n        w.close();\\n    }\\n\\n    static class InputReader {\\n\\n        private final InputStream stream;\\n        private final byte[] buf = new byte[8192];\\n        private int curChar, snumChars;\\n        private SpaceCharFilter filter;\\n\\n        public InputReader(InputStream stream) {\\n            this.stream = stream;\\n        }\\n\\n        public int snext() {\\n            if (snumChars == -1)\\n                throw new InputMismatchException();\\n            if (curChar >= snumChars) {\\n                curChar = 0;\\n                try {\\n                    snumChars = stream.read(buf);\\n                } catch (IOException e) {\\n                    throw new InputMismatchException();\\n                }\\n                if (snumChars <= 0)\\n                    return -1;\\n            }\\n            return buf[curChar++];\\n        }\\n\\n        public int nextInt() {\\n            int c = snext();\\n            while (isSpaceChar(c)) {\\n                c = snext();\\n            }\\n            int sgn = 1;\\n            if (c == '-') {\\n                sgn = -1;\\n                c = snext();\\n            }\\n            int res = 0;\\n            do {\\n                if (c < '0' || c > '9')\\n                    throw new InputMismatchException();\\n                res *= 10;\\n                res += c - '0';\\n                c = snext();\\n            } while (!isSpaceChar(c));\\n            return res * sgn;\\n        }\\n\\n        public long nextLong() {\\n            int c = snext();\\n            while (isSpaceChar(c)) {\\n                c = snext();\\n            }\\n            int sgn = 1;\\n            if (c == '-') {\\n                sgn = -1;\\n                c = snext();\\n            }\\n            long res = 0;\\n            do {\\n                if (c < '0' || c > '9')\\n                    throw new InputMismatchException();\\n                res *= 10;\\n                res += c - '0';\\n                c = snext();\\n            } while (!isSpaceChar(c));\\n            return res * sgn;\\n        }\\n\\n        public int[] nextIntArray(int n) {\\n            int a[] = new int[n];\\n            for (int i = 0; i < n; i++) {\\n                a[i] = this.nextInt();\\n            }\\n            return a;\\n        }\\n\\n        public long[] nextLongArray(int n) {\\n            long a[] = new long[n];\\n            for (int i = 0; i < n; i++) {\\n                a[i] = this.nextLong();\\n            }\\n            return a;\\n        }\\n\\n        public String readString() {\\n            int c = snext();\\n            while (isSpaceChar(c)) {\\n                c = snext();\\n            }\\n            StringBuilder res = new StringBuilder();\\n            do {\\n                res.appendCodePoint(c);\\n                c = snext();\\n            } while (!isSpaceChar(c));\\n            return res.toString();\\n        }\\n\\n        public String nextLine() {\\n            int c = snext();\\n            while (isSpaceChar(c))\\n                c = snext();\\n            StringBuilder res = new StringBuilder();\\n            do {\\n                res.appendCodePoint(c);\\n                c = snext();\\n            } while (!isEndOfLine(c));\\n            return res.toString();\\n        }\\n\\n        public boolean isSpaceChar(int c) {\\n            if (filter != null)\\n                return filter.isSpaceChar(c);\\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\\n        }\\n\\n        private boolean isEndOfLine(int c) {\\n            return c == '\\n' || c == '\\r' || c == -1;\\n        }\\n\\n        public interface SpaceCharFilter {\\n            public boolean isSpaceChar(int ch);\\n        }\\n    }\\n}", "target": "191", "substitutes": {"in": ["en", "In", "iter", "din", "file", "read", "from", "rin", "mm", "run", "l", "b", "ins", "arg", "rt", "bin", "out", "get", "inc", "r", "ini", "ar", "err", "on", "io", "h", "f", "ind", "IN", "m", "aw", "reader", "ssl", "output", "con", "gin", "is", "serv", "input", "ex", "inn", "inf", "inner", "er", "ic", "cin", "ri"], "w": ["wr", "ws", "e", "nw", "sw", "s", "wb", "wp", "o", "l", "b", "wt", "out", "d", "r", "ew", "v", "y", "we", "W", "h", "Writer", "wx", "wh", "kw", "wa", "aw", "rw", "write", "hw", "writer", "wal", "web", "t", "p", "widget"], "n": ["nb", "an", "en", "size", "nn", "max", "nor", "ll", "l", "np", "ns", "x", "d", "nr", "g", "norm", "nt", "v", "nm", "ng", "on", "name", "j", "ren", "number", "sn", "fn", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "dn", "N", "gn", "p", "note"], "result": ["response", "report", "summary", "feature", "create", "display", "results", "complete", "pair", "successful", "success", "console", "test", "term", "block", "master", "table", "first", "binary", "out", "created", "description", "style", "prefix", "memory", "r", "ret", "search", "make", "number", "power", "word", "print", "answer", "command", "join", "buffer", "Result", "replace", "output", "continue", "function", "data", "reason", "message", "sql", "database", "match", "sequence"], "stream": ["loop", "iter", "open", "sync", "console", "sw", "port", "cache", "src", "network", "read", "status", "engine", "source", "pool", "driver", "table", "chain", "instance", "mode", "ream", "channel", "context", "out", "form", "window", "speed", "iterator", "parent", "socket", "v", "type", "line", "cont", "screen", "collection", "h", "feed", "st", "http", "view", "handle", "sl", "wrapper", "stack", "reader", "buffer", "ssl", "system", "storage", "spec", "path", "data", "pipe", "input", "client", "sample", "Stream"], "buf": ["nb", "bl", "cur", "uf", "fb", "buff", "pkg", "img", "tmp", "wb", "msg", "pool", "next", "aka", "bytes", "cap", "box", "b", "bs", "db", "bin", "vec", "out", "font", "str", "norm", "seq", "fac", "cb", "Buff", "alph", "cv", "bag", "mu", "batch", "buffer", "cmd", "Buffer", "br", "abet", "rb", "txt", "mem", "queue", "temp", "arr"], "curChar": ["curByte", "curCol", " curPos", "curVar", "ctrChar", "corChar", "contVar", "CurCh", "curChan", "CurCol", "rcPos", "rcCol", "CurByte", "corChan", "curCh", " curCharacter", " curByte", "ctrByte", "curCharacter", " curCh", " curChan", "contCharacter", "contChar", "corByte", "rcChar", "contCh", "corCh", "ctrPos", "CurPos", "rcVar", "ctrVar", "rcCh", " curCol", "CurChar", " curVar", "rcCharacter", "CurVar", "CurChan", "curPos"], "snumChars": ["snumbchords", "snumchats", "snumFormairs", "snomchARS", "snamChARS", "snumchords", "snamChars", "snumbChars", "snomchers", "snumChats", "snumCords", "snumCharars", "snUMChrs", "snumCHms", "snumbchars", "snUMCHars", "snUMChcs", "snumCms", "snumCHaps", "snumchARS", "snumChords", "snumFormARS", "snumChARS", "snumbcharms", "snumChairs", "snumCharms", "snumColers", "snumMars", "snomChairs", "snumCHarms", "snumMarms", "snumbCharms", "snumErords", "snumChcs", "snumchers", "snumCHins", "snumColcs", "snumchms", "snumChins", "snumErins", "snumChaps", "snumCHords", "snumCrs", "snUMChars", "snumMats", "snomchairs", "snumChrs", "snomChars", "snumFormars", "snumColARS", "snumCHats", "snamCARS", "snumCARS", "snumCairs", "snumpCords", "snumMords", "snomchars", "snumchars", "snamCaps", "snomChARS", "snumCharairs", "snumColins", "snumErars", "snumCins", "snumchaps", "snumCaps", "snamChaps", "snumChers", "snumcharms", "snUMCHrs", "snumColrs", "snumpCars", "snumFormers", "snumpCins", "snumColars", "snumCharords", "snumChms", "snumpChairs", "snUMCHins", "snumCHrs", "snumpChars", "snomChers", "snumCars", "snumchairs", "snumCharins", "snumErairs", "snamCars", "snUMChins", "snumbChats", "snumColairs", "snumCHcs", "snumCHARS", "snumbchats", "snumbChords", "snamChms", "snUMCHcs", "snumCcs", "snumCHars", "snumpChins", "snumpCairs", "snumpChords", "snamCms"], "filter": ["check", "set", "test", "term", "Filter", "func", "chain", "table", "fil", "const", "channel", "accept", "ref", "fac", "handler", "config", "cb", "mask", "conv", "f", "ac", "hash", "fn", " filters", "closure", "cf", "map", "match"], "c": ["abc", "cp", "cur", "vc", "com", "cache", "cm", "mc", "chain", "l", "cmp", "cd", "enc", "anc", "cr", "ec", "conf", "arc", "xc", "sc", "comm", "g", "cos", "bc", "fc", "co", "C", "ci", "cont", "cc", "v", "cb", "conv", "f", "lc", "rc", "ac", "can", "init", "gc", "cl", "uc", "nc", "cs", "cf", "tc", "etc", "con", "pc", "dc", "t", "ce", "ct", "cu", "ic", "unc", "col", "cor"], "sgn": ["isGN", " sbn", " sg", " sign", "dsgate", "rsGN", "sign", "dsign", "dsagn", "sbn", "isign", "sagn", "tsagn", " sGN", "iswin", "tsgate", "rsign", "nsgn", "nsgate", "psreg", "swin", "esbn", "rswin", "sreg", "psign", "nsagn", "psgn", "psg", "nsign", "psagn", "gsreg", "sGN", " swin", "rsgn", "sg", "dsreg", "tsgn", "tsign", "gsgn", "sgate", "gsg", "gsagn", "isgn", "gsign", "esign", "dsgn", "esgn"], "res": ["resh", "val", "des", " RES", "ms", "results", "resp", "obj", "vol", "ress", "resolution", "red", "rem", "re", "Res", "req", "ins", "vals", "vec", "out", "RES", "cons", "js", "gr", "reset", "rel", " Res", "rez", "r", "def", "rev", "ret", "conv", "rss", "resource", "rc", "reg", "rest", "cond", "zero", "cs", "us", "os", "ser", "ps", "rand", "stock", "count", "num", "pres", "div", "respons", "rs", "arr"]}}
{"code": "import java.util.*;\\n\\n/**\\n * A\\n */\\n\\n// bubble sort\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        \\n        Scanner sc  = new Scanner(System.in);\\n\\n        int n = sc.nextInt();\\n        int count=0;\\n        int array[] = new int[n];\\n\\n        for(int i=0; i<n; i++) {\\n            array[i] = sc.nextInt();\\n        }\\n\\n        sc.close();\\n\\n        /**\\n        * 1 bubbleSort(A, N) // N \u500b\u306e\u8981\u7d20\u3092\u542b\u3080 0-\u30aa\u30ea\u30b8\u30f3\u306e\u914d\u5217 A\\n        * 2   flag = 1 // \u9006\u306e\u96a3\u63a5\u8981\u7d20\u304c\u5b58\u5728\u3059\u308b\\n        * 3   while flag\\n        * 4     flag = 0\\n        * 5     for j \u304c N-1 \u304b\u3089 1 \u307e\u3067\\n        * 6       if A[j] < A[j-1]\\n        * 7         A[j] \u3068 A[j-1] \u3092\u4ea4\u63db\\n        * 8         flag = 1\\n        */\\n\\n        boolean flag = true;\\n\\n        while(flag) {\\n\\n            flag = false;\\n            \\n            for(int j=n-1; j>=1; j--) {\\n\\n                if(array[j] < array[j-1]) {\\n\\n                    int tmp = array[j];\\n                    array[j] = array[j-1];\\n                    array[j-1] = tmp;\\n\\n                    count++;\\n                    flag = true;\\n                    \\n                }\\n\\n            }\\n\\n        }\\n\\n        for(int i=0; i<n; i++) {\\n            \\n            System.out.print(array[i]);\\n\\n            if(i != n-1) {\\n                System.out.print(\" \");\\n            }\\n\\n        }\\n\\n        System.out.println();\\n        System.out.println(count);\\n    \\n    }\\n}\\n", "target": "170", "substitutes": {}}
{"code": "import java.util.Arrays;\\nimport java.util.HashMap;\\nimport java.util.Map;\\nimport java.util.Map.Entry;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tString[] t  = sc.nextLine().split(\" \");\\n\t\tint n       = Integer.parseInt(t[0]);\\n\t\tint m       = Integer.parseInt(t[1]);\\n\t\tint a;\\n\t\tString b;\\n\t\tboolean[] x = new boolean[n];\\n\t\tArrays.fill(x, false);\\n\t\tMap<Integer, Integer> map = new HashMap<>();\\n\\n\t\tfor(int i = 0; i < m; i++) {\\n\\n\t\t\ta = sc.nextInt() - 1;\\n\t\t\tb = sc.next();\\n\t\t\tif(!x[a]) {\\n\t\t\t\tif(b.equals(\"WA\")) {\\n\t\t\t\t\tif(map.containsKey(a)) {\\n\t\t\t\t\t\tmap.put(a, map.get(a) + 1);\\n\t\t\t\t\t}else {\\n\t\t\t\t\t\tmap.put(a, 1);\\n\t\t\t\t\t}\\n\t\t\t\t}else {\\n\t\t\t\t\tx[a] = true;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tint c = 0;\\n\t\tint d = 0;\\n\\n\t\tfor(boolean q : x) {\\n\t\t\tif(q)c++;\\n\t\t}\\n\t\tfor(Entry<Integer, Integer> w : map.entrySet()) {\\n\t\t\tif(x[w.getKey()]) {\\n\t\t\t\td += w.getValue();\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(c + \" \" + d);\\n\t}\\n}", "target": "48", "substitutes": {"sc": ["irc", "ch", "sync", "sw", "src", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "arc", "sci", "ctx", "sub", "inc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "sr", "gc", "cl", "ss", "nc", "sq", "cs", "tc", "spec", "pc", "ctl", "isc", "capt", "desc", "scl", "sp", "esc"], "t": ["tt", "qt", "dt", "ot", "at", "it", "s", "mt", "pt", "T", "o", "l", "tr", "rt", "template", "ts", "g", "trace", "r", "v", "y", "tp", "ty", "ta", "j", "h", "title", "st", "tm", "ent", "tu", "types", "te", "typ", "att", "tip", "tree", "txt", "p"], "n": ["nb", "an", "en", "size", "nn", "o", "l", "np", "k", "ns", "mn", "nr", "r", "nm", "v", "nt", "no", "y", "on", "j", "h", "sn", "nc", "na", "z", "num", "net", "count", "len", "N", "p", "u"], "m": ["ms", "e", "s", "mt", "cm", "mc", "o", "mm", "l", "k", "g", "r", "mi", "nm", "v", "M", "y", "j", "h", "f", "tm", "km", "z", "gm", "num", "bm", "p", "mn"], "a": ["ap", "an", "aff", "la", "access", "ba", "ab", "eas", "part", "ea", "ra", "au", "s", "o", "l", "aaa", "aux", "area", "aj", "el", "am", "ast", "A", "sha", "era", "act", "ar", "ame", "y", "ia", "ta", "ma", "f", "j", "ao", "va", "app", "ac", "ae", "alpha", "ach", "ga", "oa", "aa", "sta", "att", "as", "apa", "pa", "na", "fa", "sa", "ca", "p", "u"], "b": ["nb", "bi", "ba", "abb", "ab", "bl", "be", "bb", "ib", "fb", "e", "sb", "bu", "erb", "o", "eb", "lib", " B", "k", "bs", "ob", "binary", "bo", "db", " eb", "by", "bg", "bh", "bc", "v", "bf", "y", "bar", "cb", "j", "f", "bis", "bp", "br", "base", "B", "rb", "p", "u"], "x": ["cross", "mx", "px", " xx", "e", "dict", "check", "edit", "tx", "xe", "xx", "xd", "ax", "xf", "xi", "xt", "p", "xc", "xes", "xp", "fx", "ctx", "work", "act", "ux", "v", "news", "ox", "y", "X", "xb", "xs", "wx", "xxxx", "xml", "rx", "cox", "xy", "z", "ex", "xxx", "ct", "checked", "ix", "xa", "rex", "lex"], "map": ["ap", "mp", "add", "cp", "list", "create", "complete", "policy", "collect", "open", "dict", "apper", "mt", "cache", "set", "place", "mm", "block", "group", "master", "pack", "table", "pe", "ape", "maps", "form", "window", "parse", "load", "lock", "address", "mg", "ml", "make", "shape", "MAP", "app", "print", "hash", "index", "view", "tool", "use", "batch", "replace", "mb", "link", "scale", "one", "tree", "code", "metadata", "mem", "store", "man", "control", "module"], "i": ["multi", "si", "ti", "ai", "it", "ip", "iu", "ie", "o", "l", "zi", "xi", "di", "pi", "qi", "g", "mi", "v", "ini", "ci", "y", "id", "sim", "ia", "j", "io", "I", "ind", "print", "me", "ki", "gi", "ii", "info", "us", "is", "li", "hi", "ui", "ix", "p", "im", "phi", "u"], "c": ["add", "cp", "cur", "e", "s", "com", "cm", "o", "l", "k", "cd", "cr", "r", "cc", "co", "C", "ci", "y", "v", "cb", "h", "lc", "f", "cu", "rc", "ac", "gc", "uc", "nc", "cs", "con", "dc", "z", "count", "ce", "ct", "ca", "p", "cut", "unc", "u"], "d": ["dx", "add", "des", "dt", "da", "nd", "e", "md", "D", "diff", "ds", "dim", "fd", "l", "di", "cd", "bd", "dd", "dra", "ad", "draw", "v", "mod", "y", "dat", "done", "j", "sd", "td", "de", "pd", "dev", "debug", "dm", "data", "dh", "z", "gd", "div", "od", "p"], "q": ["query", "qt", "dq", "qq", "quit", "ch", "qa", "o", "k", "qv", "qi", "comm", "g", "v", "y", "j", "h", "f", "iq", "ql", "secure", "sq", "ck", "qs", "confirmed", "z", "Q", "sh", "p", "que", "qu"], "w": ["wr", "var", "ws", "nw", "wb", "wp", "now", "l", "th", "tw", "g", "rew", "r", "ew", "end", "v", "we", "W", "h", "wh", "wx", "word", "kw", "le", "wa", "aw", "rw", "wine", "ow", "exp", "write", "hw", "raw", "wal", "writer", "wall", "z", "ex", "iw", "way", "er", "wd"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        Scanner in = new Scanner(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        Multiplication3 solver = new Multiplication3();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class Multiplication3 {\\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\\n\\n            String[] inputs = in.nextLine().split(\" \");\\n            long a = Long.parseLong(inputs[0]);\\n            long b = Long.parseLong(inputs[1].replaceAll(\"\\\\.\", \"\"));\\n\\n            out.append(String.valueOf(a * b / 100));\\n\\n\\n        }\\n\\n    }\\n}\\n\\n", "target": "15", "substitutes": {"inputStream": ["inputForm", "outputSource", " inputSteam", "currentSteam", "outputStreamer", "inputSteam", "inputSource", " inputForm", "inputstream", "imageSteam", "currentstream", "imageSource", "currentStream", "instream", "imageStream", "imageForm", "outputstream", "outputForm", "outputSteam", "inStream", "inStreamer", "currentStreamer", "inputStreamer", " inputSource", "inSteam"], "outputStream": ["inputForm", "currentSteam", "OutputForm", "noteForm", "outputStreamer", "noteMachine", "successForm", "inputSteam", "OutputStream", "noteStream", "OutputSteam", "successStream", "successStreamer", "currentStream", "OutputMachine", "successSteam", " outputSteam", " outputForm", "noteSteam", "outputMachine", "currentForm", "outputForm", "outputSteam", "currentStreamer", "inputStreamer", " outputMachine"], "in": [" din", "en", "In", "iter", "null", "it", "s", "local", "din", "file", "source", "mc", "rin", "o", "mm", "run", "l", "dir", "ins", "lin", "rt", "bin", "context", "c", "i", "kin", "conf", "doc", "inc", "sin", "r", "mi", "ini", "err", "current", "on", "config", "io", "h", "ind", "can", "IN", "init", "fs", "log", "scan", "reader", "info", "output", "con", "as", "gin", "isin", "is", "t", "serv", "input", "inn", "inf", "inner", "p", "er", "inside", "ic", "cin"], "out": ["result", "outer", "report", "list", "at", "OU", "json", "null", "it", "port", "set", "check", "cache", "w", "s", "up", "aos", "comment", "put", "o", "group", "Out", "table", "user", "flush", "by", "x", "gr", "this", "window", "r", "nt", "end", "v", "sys", "co", "err", "on", "name", "io", "res", "conv", "print", "can", "log", "gc", "scan", "write", "OUT", "info", "output", "os", "ou", "cmd", "server", "t", "to", "writer", "con", "ex", "net", "client", "temp", "n", "inner", "p", "outs"], "solver": ["Solver", " solution", "solution", "insolution", "resolve", "sol", " solve", "resolution", "unsolving", "insolving", "unsolver", "resol", "Solve", "Sol", "solve", "insolved", "Solution", "solved", " sol", "resolving", "unsolution", "solving", "resolver", "resolved", "insolver", "unsolved"], "testNumber": [" testCounter", " scenarionr", " scenarioCounter", " scenarioNumber", " testnr", " suiteCounter", " suitenr", "testnr", " suiteNumber", "testCounter"], "inputs": [" inputNames", "hiddenb", "injs", "InputNames", "inputms", "Inputves", " inputms", "Inputls", "outputms", "ins", "hiddenves", "humans", "inNames", "Inputb", "Inputms", "humanb", "Inputjs", "outputs", "inputb", "hiddens", "Inputs", "inputves", "outputls", "inputls", "inputjs", "humanves", " inputjs", " inputls", "inputNames"], "a": ["an", "aff", "la", "ba", "ab", "da", "ea", "ai", "au", "qa", "s", "l", "aaa", "aj", "area", "eff", "A", "era", "act", "ia", "ma", "ta", "ao", "va", "alpha", "ac", "ae", "za", "ga", "sta", "as", "t", "aa", "apa", "na", "sa", "ca", "n", "aq", "xa"], "b": ["nb", "bi", "ba", "ab", "be", "fb", "bb", "ib", "sb", "wb", "eb", "lib", "l", " B", "bd", "bs", "ob", "deb", "db", "gb", "c", "i", "d", "amb", "bc", "y", "cb", "beta", "bis", "t", "two", "B", "rb", "n"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint a = sc.nextInt();\\n\t\tint b = sc.nextInt();\\n\t\tint c = 0;\\n\\n\t\twhile(1+c*(a-1) < b) c++;\\n\\n\t\tSystem.out.println(c);\\n\t}\\n}", "target": "101", "substitutes": {"sc": ["ch", "sb", "sync", "sw", "cle", "asc", "sm", "mc", "osc", "ctrl", "cr", "ec", "Sc", "scope", "sub", "inc", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "nc", "sq", "cs", "tc", "pc", "ctl", "sa", "isc", "syn", "desc", "sh", "scl", "sv", "sp", "esc"], "a": ["an", "aff", "la", "ba", "ab", "ea", "at", "ai", "au", "ama", "aka", "aj", "area", "am", "d", "A", "r", "ia", "ta", "ma", "f", "ao", "va", "app", "ac", "ae", "alpha", "ach", "abs", "oa", "aa", "as", "sa", "ca", "isa"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "e", "sb", "eb", "l", "bs", "ob", "db", "i", "d", "r", "bc", "v", "y", "cb", "j", "f", "h", "t", "to", "base", "B", "rb", "n", "p"], "c": ["cp", "e", "s", "com", "cm", "l", "const", "k", "cd", "crit", "cr", "i", "d", "g", "bc", "fc", "cc", "C", "v", "cb", "f", "lc", "cu", "rc", "col", "ac", "m", "gc", "uc", "cs", "cf", "tc", "t", "dc", "z", "count", "ce", "ct", "n", "ca", "ctr", "p", "unc", "dec", "u"]}}
{"code": "\\nimport java.util.*;\\nimport java.text.*;\\n\\n\\npublic class Main\\n{\\n\tpublic static void main(String[] args)\\n\t{\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint counter = 0;\\n\t\t// # of friends\\n\t\tint a = sc.nextInt();\\n\t\t// min height\\n\t\tint b = sc.nextInt();\\n\\n\\n\t\tfor(int i = 1; i <= a ; i++)\\n\t\t{\\n\t\t\t// height in cm.\\n\t\t\tint c = sc.nextInt();\\n\t\t\t\tif(c >= b)\\n\t\t\t\t{\\n\t\t\t\t\tcounter++;\\n\\n\t\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(counter);\\n\t}\\n}", "target": "145", "substitutes": {"sc": [" scr", "ch", "sb", "sw", "src", "sk", " scorer", "Sc", "c", "sys", "SC", "res", " Sc", "rc", " SC", "nl", "gc", "scan", " ss", "nc", "system", " sk", "cs", " sp", "sa", "txt", "sv", "sp"], "counter": ["list", "loop", "total", "vector", "set", "level", "pool", "table", "instance", "sum", "const", "pointer", "nr", "nt", "number", "Counter", "timer", "buffer", "system", "nc", "continue", "ser", "count", "num", "ctr", "ter"]}}
{"code": "import java.util.Scanner;\\n \\npublic class Main {\\n \\n\tpublic static final MyScanner in = new MyScanner();\\n \\n\tpublic static void main(String[] args) {\\n \\n\t\tchar[] s = in.nextLine().toCharArray();\\n\t\tSystem.out.println(s[0] == s[1] && s[0] == s[2] ? \"No\" : \"Yes\");\\n\t}\\n\\n\tpublic static class MyScanner{\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString nextLine() {return sc.nextLine();}\\n\t\tString next() {return sc.next();}\\n\t\tint nextInt() {return Integer.valueOf(sc.next());}\\n\t\tlong nextLong() { return Long.valueOf(sc.next());}\\n\t}\\n\\n}", "target": "76", "substitutes": {"in": [" din", "en", "In", "null", "din", "file", "mc", "all", "rin", "mm", "run", "world", "l", "user", "ins", "thin", "conf", "bin", "out", "doc", "i", "ill", "inc", "lines", "sin", "r", "ini", "line", "err", "io", "win", "ac", "IN", "xml", "m", "log", "scan", "reader", "info", "ln", "con", "gin", "isin", "is", "stream", "input", "session", "n", "inn", "inf", "inner", "ic", "cin"], "s": ["ms", "parts", "items", "S", "pers", "sts", "sf", "sb", "content", "ds", "stats", "b", "ins", "ns", "changes", "strings", "bs", "tes", "i", "c", "ts", "js", "str", "ys", "v", "ats", "styles", "words", "xs", "bits", "gs", "ls", "has", "aws", "ss", "abs", "sq", "cs", "qs", "os", "ps", "is", "sql", "states", "sh", "sv", "rs", "hs", "gets", "ids"], "sc": ["mp", "ch", "sb", "sync", "sw", "cle", "cam", "asc", "mc", "osc", "func", "ctrl", "anc", "cr", "ec", "Sc", "sci", "c", "bc", "cc", "sys", "fc", "SC", "conv", "mic", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "uc", "pb", "sq", "nc", "cs", "tc", "tch", "disc", "pc", "dc", "ctl", "capt", "isc", "scl", "sh", "cu", "sv", "enc", "sp", "esc"]}}
{"code": "import java.io.PrintWriter;\\nimport java.util.ArrayList;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        try (InputReader in = new InputReader(); PrintWriter out = new PrintWriter(System.out)) {\\n            new Main().solve(in, out);\\n        }\\n    }\\n\\n    private void solve(InputReader in, PrintWriter out) {\\n        ArrayList<Integer> list = new ArrayList<>();\\n        list.add(in.nextInt());\\n        list.add(in.nextInt());\\n        list.add(in.nextInt());\\n        list.add(in.nextInt());\\n        list.add(in.nextInt());\\n\\n        ArrayList<Integer> nextTImeList = new ArrayList<>();\\n        for (Integer i : list) {\\n            nextTImeList.add((i % 10 == 0) ? i : i - (i % 10) + 10);\\n        }\\n\\n        int min = Integer.MAX_VALUE;\\n        for (int i = 0; i < list.size(); i++) {\\n            int sum = 0;\\n            for (int j = 0; j < list.size(); j++) {\\n                sum += (i == j) ? list.get(j) : nextTImeList.get(j);\\n            }\\n\\n            min = Math.min(min, sum);\\n        }\\n\\n        out.println(min);\\n    }\\n}\\n\\nclass InputReader implements AutoCloseable {\\n    private final Scanner sc = new Scanner(System.in);\\n\\n    String next() {\\n        return this.sc.next();\\n    }\\n\\n    int nextInt() {\\n        return Integer.parseInt(this.sc.next());\\n    }\\n\\n    long nextLong() {\\n        return Long.parseLong(this.sc.next());\\n    }\\n\\n    double nextDouble() {\\n        return Double.parseDouble(this.sc.next());\\n    }\\n\\n    @Override\\n    public void close() {\\n        this.sc.close();\\n    }\\n}\\n", "target": "63", "substitutes": {"in": ["en", "at", "In", "local", "from", "all", "l", "c", "or", "ini", "info", "n", "p", "ze", " din", "it", "null", "com", "din", "file", "rin", "o", "ins", "ad", "inc", "on", "st", "init", "ssl", "con", "gin", "inf", "inner", "ic", "old", "iter", "cm", "source", "mm", "bin", "el", "this", "r", "io", "ind", "IN", "xml", "cl", "t", "vin", "is", "stream", "cin", "ro", "add", "read", "by", "doc", "form", "d", "get", "str", "mi", "ar", "id", "ma", "le", "m", "reader", "data", "input", "inn", "er", "al"], "out": ["result", "outer", "at", "ch", "obj", "OU", "null", "it", "s", "up", "w", "aos", "status", "all", "o", "Out", "user", "l", "b", "by", "bin", "c", "this", "window", "str", "r", "nt", "parent", "v", "sys", "co", "screen", "err", "on", "name", "io", "res", "gt", "print", "m", "log", "ou", "OUT", "info", "output", "os", "writer", "t", "to", "input", "ex", "net", "txt", "client", "n", "p", "outs"], "list": ["add", "record", "multi", "loop", "and", "null", "dict", "set", "tmp", "mt", "level", "local", "lat", "pool", "all", "ll", "single", "block", "lv", "group", "acl", "table", "chain", "l", "alist", "del", "form", "def", "left", "lists", "library", "listed", "parent", "nt", "v", "cont", "ml", "search", "collection", "top", "print", "le", "st", "ls", "index", "log", "cl", "batch", "stack", "ist", "li", "array", "base", "tree", "L", "net", "pl", "queue", "map", "filter", "dl", "sequence", "LIST", "entry"], "nextTImeList": ["nextTEmeList", "nextTIpeList", "nextTImesKnown", "nextTIpeGroup", "nextTEMeKnown", "nextMIMeL", "nextTIMeArray", "nextTIMeL", "nextTAmeArray", "nextTIpeSet", "nextTImesList", "nextTAmeList", "nextTAmeSet", "nextTAMeList", "nextTImesArray", "nextTImeL", "nextMImeList", "nextTIpeArray", "nextMImeL", "nextTEMeList", "nextMIMeList", "nextTImeGroup", "nextTAMeSet", "nextTIMeKnown", "nextTImeKnown", "nextTAMeGroup", "nextTEmeL", "nextMIMeArray", "nextTIMeGroup", "nextTImesL", "nextTIpeKnown", "nextTImeSet", "nextTAmeGroup", "nextTIMeSet", "nextTEmeKnown", "nextTIpeL", "nextTAMeArray", "nextMImeArray", "nextTEMeL", "nextTIMeList", "nextTImeArray"], "i": ["bi", "multi", "si", "ti", "ai", "integer", "it", "ip", "iu", "ie", "status", "o", "chain", "l", "zi", "xi", "di", "pi", "by", "qi", "x", "g", "ik", "my", "mi", "v", "ini", "ci", "y", "oi", "id", "ia", "io", "uri", "a", "iq", "f", "I", "ij", "ami", "init", "m", "index", "ki", "ii", "gi", "info", "t", "is", "li", "hi", "ui", "ix", "p", "im", "ic", "phi", "u", "ri"], "min": ["floor", "summary", "lt", "partial", "last", "max", "sol", "diff", "local", "low", "next", "none", "mine", "best", "amin", "cmp", "lower", "conf", "rel", "margin", "med", "Minimum", "lock", "mod", "mint", "start", "default", "minute", "search", "Mini", "mini", "print", "init", "m", "me", "initial", "log", "mins", "minimum", "sort", "MIN", "minus", "dist", "scale", "Min", "stat", "emin", "div", "sample", "temp", "mem", "mind", "mean", "average", "small", "reset", "mn"], "sum": ["result", "add", "summary", "size", "si", "total", "vol", "tmp", "max", "um", "diff", "cal", " SUM", "prof", "all", "cum", " summed", "mary", "doc", "mix", "med", "share", "mean", "mod", "sim", "fac", "sup", "alpha", "ass", "hash", "m", "sam", "dev", "hum", "num", "su", "count", "sa", "mem", "n", "other", "temp", "match", "Sum", "average"], "j": ["jo", "oj", "bj", "obj", "jc", "json", "J", "it", "s", "jet", "pt", "o", "fr", "l", "dj", "b", "k", "jj", "aj", "jl", "el", "jp", "uj", "js", "g", "v", "ja", "y", "err", "on", "h", "ph", "ind", "ij", "q", "jac", "je", "kj", "m", "exp", "att", "br", "t", "z", "jump", "other", "job", "ji", "n", "pr", "p", "ge", "note"], "sc": ["ch", "sb", "cle", "asc", "mc", "scrib", "osc", "func", "cr", "ec", "Sc", "c", "ctx", "dec", "bc", "cc", "sys", "fc", "co", "proc", "ci", "SC", "mic", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "uc", "pb", "nc", "sq", "tc", "cs", "go", "scan", "tch", "disc", "pc", "ser", "dc", "ctl", "isc", "desc", "cer", "scl", "sh", "sv", "sp", "esc"]}}
{"code": "\\nimport java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    void run() {\\n        Scanner sc = new Scanner(System.in);\\n\\n        int n = sc.nextInt();\\n        int[] aArr = new int[n];\\n        int[] bArr = new int[n];\\n        int[] cArr = new int[n - 1];\\n\\n        for (int i = 0; i < n; i++) {\\n            aArr[i] = sc.nextInt() - 1;\\n        }\\n        for (int i = 0; i < n; i++) {\\n            bArr[i] = sc.nextInt();\\n        }\\n        for (int i = 0; i < n - 1; i++) {\\n            cArr[i] = sc.nextInt();\\n        }\\n\\n        int sum = 0;\\n        sum += bArr[aArr[0]];\\n        for (int i = 1; i < n; i++) {\\n            sum += bArr[aArr[i]];\\n            boolean hoge = aArr[i - 1] + 1 == aArr[i];\\n            if (hoge) {\\n//                System.out.println(i + \" x\");\\n                sum += cArr[aArr[i] - 1];\\n            }\\n        }\\n\\n        // write your code\\n        System.out.println(sum);\\n    }\\n\\n    void debug(Object... os) {\\n        System.err.println(Arrays.deepToString(os));\\n    }\\n\\n    public static void main(String[] args) {\\n        new Main().run();\\n    }\\n}\\n", "target": "223", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "scope", "sci", "c", "ctx", "inc", "bc", "cc", "sys", "fc", "SC", "sd", "conv", "lc", "rc", "usc", "st", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "ssl", "nc", "system", "tc", "cs", "sq", "pb", "pc", "ctl", "psc", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "an", "en", "nn", "names", "network", "all", "ll", "none", "o", "after", "l", "np", "ns", "pi", "out", "c", "d", "un", "comm", "window", "r", "nm", "nt", "v", "no", "ng", "on", "name", "j", "ren", "number", "sn", "a", "q", "m", "nu", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "num", "net", "count", "nil", "dn", "N", "ct", "p", "mn"], "aArr": ["aArtm", "aTrn", "aARg", "aArld", "aGrr", "aArn", "aVerg", " aAttl", "aErg", " aTrn", " aArrs", "aGrrs", "aArtr", "aArrs", "aInterrs", "aAttrs", "bArbr", " aAttr", "aCurr", "aArtn", " aArld", " aTrrc", "aAttl", "aErl", " aAttrc", "eArrc", "aCurl", "aArtrc", "aVerbr", "bAttrs", "aVerr", "aTrg", "aErn", "aAttm", " aTrg", "aArbr", "aCurrc", "aErm", " aArg", "aInterg", "bAttbr", " aTrr", "aTrrc", "eArr", "aAttbr", " aTrld", "bAttg", "aArg", "bAttr", "eArn", " aArrc", "aErr", "aInterbr", "aGrl", "aArm", "eArm", "aARn", " aAttrs", "aAttrc", "aTrr", "bArg", "aInterr", "aTrld", "aAttr", " aArm", " aArn", "aCurrs", "aVerrs", "aARld", "aErld", "aArl", "aErrs", " aArl", "aErrc", "aGrrc", "aAttg", "aArrc", "aARrc", "aARr", "bArrs", "aAttn"], "bArr": [" bArn", " bUrr", "bErdr", "aArn", "bEln", "bAttn", "bErc", "bArrt", "bUrrd", "bAgrd", "bErn", " bUrrt", "cErr", "bShn", "bEll", "bVerr", "bARrr", "bAttl", "bArc", "bUrn", "bArrr", "bElr", "aErl", "bErrt", "bErrr", "bUrrt", "bAgr", "bArl", "bErl", "aErn", "bARrt", "bAgrt", "bAgrs", "bUrr", "bArrd", "bShrt", "bARn", "cErn", "bArdr", " bUrrd", "cArrt", " bVern", "cArc", "bEldr", "bVerrr", " bArrs", "aArdr", "bVerrt", "bAttdr", "bShc", "bAttr", " bArrd", "aErr", "bErr", " bArrt", " bVerrt", "aErdr", "bShr", "bARr", "cArn", "cErc", "cErrt", "aArl", " bUrrs", "bArn", "bVern", " bVerrr", "bUrc", "bArrs", "bUrrs", " bVerr", " bArrr"], "cArr": ["cCurc", "bCurl", " cArdr", " cAgar", "cRrb", "cCurr", "cArrb", " cAgr", "bCurr", "cArl", "cRar", "cCurl", "bCurc", "cRdr", "bCurrs", "cAgdr", " cArrb", "cTrc", "cAgr", "cTrl", "cArc", " cArar", " cAgdr", "bArl", "cTrrs", "cArrs", "cCurrs", "cArdr", "cRr", "cTrr", "cArar", "cAgar", " cAgrb", "bArrs", "bArc", "cAgrb"], "i": ["multi", "si", "ip", "set", "ico", "chain", "l", "zi", "di", "ion", "my", "point", "ini", "err", "iy", "me", "info", "mac", "hi", "associated", "phi", "it", "ie", "o", "qi", "x", "ik", "y", "sim", "ia", "uri", "q", "init", "ami", "ori", "ii", "gi", "to", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "gu", "et", "mm", "dr", "ei", "this", "j", "io", "ni", "I", "ind", "ij", "is", "li", "ex", "ui", "client", "ger", "ix", "ti", "ai", "e", "xi", "pi", "ice", "mi", "ity", "v", "ci", "iso", "oi", "id", "f", "ki", "\u0438", "batch", "ims", "fi", "im", "u"], "sum": ["result", "add", "summary", "si", "total", "vol", "success", "set", "cache", "um", " SUM", "cal", "status", "comment", "prof", "cum", "state", "doc", "out", "mix", "share", "mean", "oss", "sim", "fac", "ma", "density", "alpha", "sat", "ass", "hash", "weight", "st", "sam", "use", "hum", "us", "se", "num", "su", "sa", "commit", "mem", "temp", "match", "Sum", "average", "sp"], "hoge": ["woedge", "hoGe", " hogre", " hoedge", "huedge", " hallgre", "hoedge", "houe", "HOue", "boue", " hoGe", "woGe", "woge", "boge", "HOedge", "huue", "HOge", "boedge", "huge", "wogre", " halledge", " hallGe", "hogre", " hallge"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.InputMismatchException;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n *\\n * @author niko\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader in = new InputReader(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        Task solver = new Task();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class Task {\\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\\n            String c = in.readString();\\n            if (c.charAt(0) >= 'A' && c.charAt(0) <= 'Z') {\\n                out.println('A');\\n            } else\\n                out.println('a');\\n        }\\n\\n    }\\n\\n    static class InputReader {\\n        private final InputStream stream;\\n        private final byte[] buf = new byte[8192];\\n        private int curChar;\\n        private int snumChars;\\n\\n        public InputReader(InputStream stream) {\\n            this.stream = stream;\\n        }\\n\\n        public int read() {\\n            if (snumChars == -1)\\n                throw new InputMismatchException();\\n            if (curChar >= snumChars) {\\n                curChar = 0;\\n                try {\\n                    snumChars = stream.read(buf);\\n                } catch (IOException e) {\\n                    throw new InputMismatchException();\\n                }\\n                if (snumChars <= 0)\\n                    return -1;\\n            }\\n            return buf[curChar++];\\n        }\\n\\n        public String readString() {\\n            int c = read();\\n            while (isSpaceChar(c)) c = read();\\n            StringBuilder res = new StringBuilder();\\n            do {\\n                res.appendCodePoint(c);\\n                c = read();\\n            } while (!isSpaceChar(c));\\n            return res.toString();\\n        }\\n\\n        public boolean isSpaceChar(int c) {\\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\\n        }\\n\\n    }\\n}\\n\\n", "target": "80", "substitutes": {"inputStream": ["thisFile", "startSteam", "thisSteam", "startstream", " inputSteam", "inputFile", "outputStreamer", "outputFile", "inputSteam", "startStreamer", "thisSocket", "startStream", "helloStream", "inputstream", "hellostream", "outputSocket", "helloSteam", "inputSocket", " inputSocket", "outputstream", "outputSteam", " inputFile", "thisStream", "inputStreamer", "helloStreamer"], "outputStream": ["printStreamer", "webStream", "OutputForm", "webstream", "outputStreamer", "inputSteam", "webSteam", "outputSet", "OutputStream", "printStream", "connectionStream", "printstream", "connectionForm", "inputstream", "OutputSteam", " outputSet", "printSteam", " outputSteam", " outputForm", "outputstream", "outputForm", "OutputSet", "outputSteam", "connectionSet", "connectionSteam", "inputStreamer", "webStreamer"], "in": [" din", "old", "en", "add", "In", "iter", "null", "it", "s", "up", "local", "din", "file", "source", "from", "rin", "mm", "run", "l", "ins", "rt", "kin", "bin", "context", "i", "doc", "by", "get", "this", "form", "inc", "sin", "r", "ini", "err", "current", "on", "config", "io", "h", "ind", "al", "IN", "init", "log", "reader", "con", "raw", "t", "gin", "is", "input", "n", "inn", "inf", "inner", "p", "er", "inside", "cin", "ro"], "out": ["result", "manager", "outer", "report", "list", "OU", "at", "json", "null", "it", "check", "set", "s", "cache", "w", "aos", "all", "next", "o", "run", "Out", "table", "user", "l", "flush", "group", "this", "r", "nt", "end", "v", "co", "sys", "conn", "screen", "err", "on", "name", "io", "print", "can", "exec", "log", "gc", "write", "OUT", "ou", "output", "os", "cmd", "raw", "t", "to", "writer", "ex", "net", "txt", "client", "temp", "n", "inner", "p", "outs"], "solver": ["Solver", " solution", "Sorter", "solution", "insolution", "resolve", "sol", " solve", "resolution", "resol", "Solve", "Sol", "insolve", "solve", "Solution", "sorter", " sol", "insorter", "resolver", "insolver", "resorter"], "testNumber": [" attemptNumbers", " testNumbers", "testNum", " attemptNum", " attemptnumber", "testNumbers", "testnumber", "tasknumber", " testNum", "taskNum", "taskNumbers", " attemptNumber", "taskNumber", " testnumber"], "c": ["abc", "csv", "chain", "l", "ctrl", "cr", "char", "sc", "comm", "err", "cb", "etc", "ct", "n", "p", "cu", "cp", "s", "com", "cache", "b", "cd", "anc", "ec", "i", "cc", "co", "C", "y", "comp", "conv", "h", "ac", "can", "uc", "nc", "cs", "con", "pc", "ce", "ca", "ic", "unc", "cat", "cm", "mc", "k", "conf", "arc", "xc", "\u00e7", "g", "r", "fc", "a", "rc", "cl", "tc", "cf", "t", "cn", "count", "desc", "cur", "ch", "e", "vc", "cod", "w", "cum", "cmp", "d", "cos", "bc", "v", "cont", "ci", "f", "lc", "m", "gc", "dc", "z", "enc", "col", "u"], "stream": ["loop", "REAM", "open", "sync", "console", "sw", "port", "cache", "network", "read", "zip", "pool", "engine", "next", "local", "file", "chain", "state", "table", "upload", "instance", "mode", "channel", "host", "context", "row", "form", "impl", "window", "speed", "iterator", "each", "socket", "cont", "io", "h", "collection", "http", "view", "thread", "buffer", "wrapper", "stack", "reader", "ssl", "output", "transform", "storage", "path", "spec", "exp", "pipe", "link", "input", "util", "message", "client", "sample", "Stream", "inner", "steam"], "buf": ["bl", "cur", "uf", "fb", "buff", "pkg", "img", "tmp", "wb", "cat", "pool", "eb", "bytes", "cap", "box", "b", "bs", "db", "bin", "vec", "ctx", "tab", "seq", "ref", "bar", "cb", "conv", "Buff", "alph", "cv", "bed", "emb", "bag", "mu", "buffer", "batch", "mb", "abs", "Buffer", "cmd", "br", "rb", "queue", "mem", "temp", "arr"], "curChar": [" curchar", "curByte", "curCol", " curPos", "charchar", "Curchar", " CurCol", "ctrChar", " CurCh", "CurCh", "CurCol", "ctrchar", "rcPos", "ctrCharacter", "ctrCh", "CurByte", "curchar", "curCh", " curCharacter", "charCh", " CurByte", " curByte", "charCharacter", "ctrByte", " CurChar", "curCharacter", "CurCharacter", " curCh", "rcChar", "ctrPos", " curCol", "rcCh", "CurChar", "rcCharacter", "charChar", "curPos"], "snumChars": ["snumbchords", "snumThARS", "snumCharags", "snumbchrs", "snumChags", "snumCannels", "snumbChers", "snumchords", "snumbChars", "snumCHags", "snumsChags", "snumCords", "snumCharars", "snumCharannels", "snumerCrs", "snumbchars", "snumThags", "snummChcs", "snummChars", "snumChords", "snumerChrs", "snumsChARS", "snumbCompases", "snumCers", "snumChARS", "snummChords", "snumsChrs", "snumMars", "snumbCompars", "snummChaps", "snumThrs", "snumerCannels", "snumCHases", "snumClords", "snumChcs", "snumchers", "snumCharases", "snumMrs", "snumchrs", "snumChaps", "snumerCars", "snumCrs", "snumsCHars", "snumCHicks", "snumChrs", "snumbChicks", "snumsChars", "snumerChannels", "snummMars", "snumCHannels", "snumCARS", "snumMords", "snumbCompARS", "snumchars", "snumerChags", "snumClars", "snumClaps", "snumChicks", "snumChannels", "snumMcs", "snumerCags", "snumMaps", "snumChers", "snumCags", "snumsCHARS", "snumCompars", "snumbChases", "snumChases", "snumbCompicks", "snummMords", "snumCHrs", "snummMaps", "snumThars", "snumCars", "snumsCHrs", "snumClcs", "snumCompARS", "snumerChars", "snumCompicks", "snumCharARS", "snumbChrs", "snumCHARS", "snumbChords", "snummMcs", "snumCharicks", "snumMers", "snumCHars", "snumbchers", "snumCharrs", "snumsCHags", "snumCompases", "snumbChARS"], "res": ["ber", "result", "ms", "resp", "pers", "results", "vol", "right", "ress", "red", "rem", "re", "Res", "req", "ons", "box", "aux", "RES", "rel", "gr", "cons", "js", "def", " Res", "r", "sys", "rev", "ret", "ng", "conv", "reg", "mk", "rest", "pas", "cond", "cms", "us", "ps", "full", "pres", "rs", "reset", "ro"]}}
{"code": "\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.InputStreamReader;\\nimport java.util.*;\\n\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws IOException {\\n        Scanner s = new Scanner(System.in);\\n        System.out.println((char)(s.next().charAt(0)+1));\\n\\n    }\\n\\n}\\n\\n\\n\\n\\nclass Scanner\\n{\\n    StringTokenizer st;\\n    BufferedReader br;\\n\\n    public Scanner(InputStream s){\tbr = new BufferedReader(new InputStreamReader(s));}\\n\\n    public String next() throws IOException\\n    {\\n        while (st == null || !st.hasMoreTokens())\\n            st = new StringTokenizer(br.readLine());\\n        return st.nextToken();\\n    }\\n\\n    public int nextInt() throws IOException {return Integer.parseInt(next());}\\n\\n    public long nextLong() throws IOException {return Long.parseLong(next());}\\n\\n    public String nextLine() throws IOException {return br.readLine();}\\n\\n    public double nextDouble() throws IOException\\n    {\\n        String x = next();\\n        StringBuilder sb = new StringBuilder(\"0\");\\n        double res = 0, f = 1;\\n        boolean dec = false, neg = false;\\n        int start = 0;\\n        if(x.charAt(0) == '-')\\n        {\\n            neg = true;\\n            start++;\\n        }\\n        for(int i = start; i < x.length(); i++)\\n            if(x.charAt(i) == '.')\\n            {\\n                res = Long.parseLong(sb.toString());\\n                sb = new StringBuilder(\"0\");\\n                dec = true;\\n            }\\n            else\\n            {\\n                sb.append(x.charAt(i));\\n                if(dec)\\n                    f *= 10;\\n            }\\n        res += Long.parseLong(sb.toString()) / f;\\n        return res * (neg?-1:1);\\n    }\\n\\n    public boolean ready() throws IOException {return br.ready();}\\n\\n\\n}", "target": "150", "substitutes": {"s": ["ies", "ses", "ms", "parts", "S", "ws", "sts", "ds", "ans", "w", "es", "l", "b", "ns", "ins", "services", "bs", "rs", "c", "ts", "js", "ys", "lines", "r", "sys", "ats", "its", "h", "a", "xs", "scripts", "gs", "ls", "m", "ers", "aws", "ss", "sl", "ssl", "sq", "qs", "cs", "os", "se", "ims", "t", "ps", "is", "n", "p", "sv", "fs", "sp", "ids"], "st": ["irst", "ft", "sy", "nd", "ste", "lt", "sts", "ost", "mt", "sw", "tmp", "sm", "et", "stop", "sty", "first", "l", "art", "const", "step", "th", "rt", "ts", "ust", "str", "r", "nt", "ST", "sth", "bt", "must", "inst", "sn", "ut", "rest", "cl", "ss", "sl", "stable", "so", "se", "sta", "t", "ist", "St", "z", "stat", "sa", "ct", "sh", "p", "sv", "rs", "sp", "std", "est"], "br": ["ber", "wr", "bl", "hr", "kr", "ch", "BR", "Br", "vr", "mr", "next", "fr", "tr", "b", "buf", "dr", "bd", "bs", "cr", "db", "jp", "gr", "nr", "str", "ptr", "r", "bh", "or", "brace", "bc", "bt", "bar", "j", "rob", "sp", "bridge", "lr", "nl", "shr", "bp", "bre", "rb", "bm", "pr", "ctr", "rs", "bro", "bn"], "x": ["mx", "px", "nex", "e", "check", "tx", "w", "xe", "xx", "o", "ax", "xf", "l", "xi", "xt", "p", "xc", "fx", "xp", "r", "act", "v", "ux", "X", "y", "ox", "xb", "j", "h", "wx", "xs", "xxxx", "xml", "php", "rx", "inx", "t", "hex", "xy", "ext", "z", "ex", "xxx", "n", "sql", "ix", "xa", "rex", "lex"], "sb": ["nb", "bj", "si", "bb", "ib", "fb", "sf", "zb", "sw", "wb", "rub", "erb", "ub", "sbm", "eb", "bps", "orb", "b", "lb", "bs", "gb", "ob", "db", "lp", "sc", "bg", "kb", "bh", "umb", "bf", "bt", "SB", "cb", "arb", "sd", "rob", "sg", "shell", "sch", "sam", "bag", "abs", "pb", "sq", "ssl", "mb", "bis", "bp", "rb", "sa", "stab", "sh", "soc", "sv", "stuff", "hs", "sp"], "res": ["rep", "result", "resh", "des", "ms", "resp", "results", "ress", "red", "rem", "re", "fr", "Res", "req", "reed", "vals", "out", "vec", "RES", "def", "rel", "gr", "cons", "d", "rez", " Res", "r", "js", "g", "rev", "ret", "fac", "j", "conv", "pos", "rss", "df", "reg", "fs", "rest", "frac", "os", "fin", "ps", "rand", "pres", "div", "p", "val", "rs", "reset"], "f": ["fun", "fp", "uf", "fb", "vol", "sf", "fort", "fd", "fr", "l", "b", "fx", "out", "c", "ff", "d", "fre", "r", "fc", "v", "bf", "fac", "tf", "conv", "h", "df", "j", "q", "m", "fm", "cf", "fin", "t", "fe", "fa", "F", "len", "n", "p", "ef", "fs"], "start": ["in", "add", "size", "iter", "it", "check", "set", "through", "from", "first", "art", "starting", "Start", "origin", "before", "end", "y", "id", "j", "pos", "a", "top", "ind", "init", "shift", "rest", "index", "pre", "begin", "head", "t", "offset", "base", "n", "p", "sp", "reset", "stop"], "i": ["bi", "multi", "si", "ti", "ai", "e", "ip", "it", "iu", "o", "chain", "zi", "xi", "b", "di", "pi", "qi", "ei", "mi", "v", "ini", "ci", "y", "id", "j", "I", "ij", "init", "m", "index", "ori", "ki", "\u0438", "ii", "gi", "us", "ims", "is", "li", "hi", "ui", "cli", "n", "ji", "ix", "im", "ic", "phi", "u", "ri"], "dec": ["DEC", "des", "da", "sign", "unic", "oct", "dir", "dep", "del", "ec", "deb", "bin", "loc", "vec", "def", "rel", "inc", "Dec", "cos", "deg", "decl", "pos", "eg", "den", "de", "dig", "sec", "reg", "pri", "bad", "digit", "dev", "exp", "rec", "frac", "minus", "disc", "fin", "hex", "div", "desc", "negative", "enc"], "neg": ["bit", "orient", "yes", "sign", "not", "gen", "anim", "oct", "dep", "del", "ko", "bo", "bin", "rel", "coll", "flag", "Dec", "norm", "deg", "cos", "no", "rev", "mod", "bot", "decl", "pos", "den", "nov", "de", "Neg", "ind", "sec", "reg", "zero", "cats", "minus", "rec", "ne", "eval", "disc", "agg", "pred", "rot", "priv", "dest", "inv", "reverse", "desc", "negative", "git", "und"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n= sc.nextInt();\\n        int k= sc.nextInt();\\n        double ans= 0.0;\\n        ans+=Math.max(0.0,(double)(n-k)/n);\\n\\n        for (int i=1; i<=Math.min(n,k); i++)\\n        {\\n            int tmp=i;\\n            int count=0;\\n            while(tmp<k)\\n            {\\n                tmp*=2;\\n                count++;\\n            }\\n            ans+=(Math.pow(0.5,(double)count)*(double)1/n);\\n\\n        }\\n        System.out.println(String.format(\"%.10f\", ans));\\n\\n\\n    }\\n}", "target": "20", "substitutes": {"sc": ["ch", "sb", "sync", "sw", "s", "cle", "asc", "src", "mc", "osc", "ctrl", "Sync", "anc", "cr", "Sc", "c", "ctx", "inc", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "ser", "isc", "scl", "sv", "sp", "esc"], "n": ["nb", "en", "size", "nd", "nn", "total", "s", "w", "o", "l", "np", "ns", "out", "c", "x", "d", "g", "r", "nm", "nt", "v", "j", "a", "f", "sn", "q", "m", "nu", "nl", "nc", "ln", "ne", "t", "na", "z", "cn", "num", "net", "len", "N", "p", "mn"], "k": ["ka", "kl", "ke", "kr", "kn", "wk", "w", "sk", "key", "kid", "K", "ko", "kick", "ks", "ik", "g", "ek", "kar", "v", "kt", "ku", "ak", "j", "ket", "kk", "q", "kw", "m", "mk", "kj", "ki", "km", "ck", "tk", "t", "dk", "p", "uk", "kh"], "ans": ["an", "uns", "ars", "reads", "ms", "ents", "anks", "yes", "s", "orts", "ds", "rans", "stats", "aps", "ann", "ons", "sum", "ns", "outs", "ins", "aus", "cas", "ros", "vals", "anas", "ks", "ces", "ts", " scans", "ops", "rates", "arts", "vs", " means", "vers", "ats", "lets", "sets", "ates", "ants", "posts", "ANS", "can", "ls", "ams", "ots", "cs", "os", "checks", "offs", "amps", "ens", "rs", "AN", "leans", "eds"], "i": ["bi", "in", "ish", "multi", "si", "ti", "ai", "integer", "ip", "it", "port", "iu", "ie", "l", "imm", "xi", "instance", "di", "pi", "qi", "x", "ei", "ik", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "I", "ind", "print", "ij", "inter", "m", "index", "ori", "ki", "asi", "batch", "ii", "gi", "t", "to", "is", "li", "hi", "ui", "ix", "p", "im", "ic", "phi", "ri"], "tmp": ["mp", "tt", "nb", "cp", "cur", "obj", "buff", "perm", "max", "emp", "test", "pool", "now", "odd", "np", "jj", "cmp", "prime", "ctx", "prefix", "common", "ptr", "my", "nt", "v", "j", "td", "sup", "ind", "alpha", "cv", "nom", "m", "mk", "index", "tc", "cmd", "etc", "t", "other", "num", "temp", "p", "mut", "sp"], "count": ["nb", "add", "list", "size", "multi", "cur", "total", "check", "cache", "max", "last", "cycle", "test", "next", "key", "counter", "sum", "cd", "found", "const", "cmp", "c", "ptr", "find", "nt", "cont", "current", "tf", "number", "length", "ind", "child", "index", "cond", "call", "Count", "acc", "ount", "code", "num", "ct", "other", "temp", "ctr", "race"]}}
{"code": "\\nimport java.util.*;\\nimport java.lang.*;\\nimport java.math.*;\\n\\npublic class Main {\\n\t\\n\tScanner sc = new Scanner(System.in);\\n\t\\n\tvoid run() {\\n\t\t\\n\t\tString s = sc.next();\\n\t\t\\n\t\tStringBuffer strBuf = new StringBuffer(s);\\n\t\t\\n\t\tstrBuf = strBuf.reverse();\\n\t\t\\n\t\ts = strBuf.toString();\\n\t\t\\n\t\tSystem.out.println(s);\\n\t\t\\n\t\t\\n\t\t\\n\t}\\n\t\\n\tpublic static void main(String[] args) {\\n\t\t\\n\t\tnew Main().run();\\n\t\t\\n\t}\\n}", "target": "237", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "sub", "dec", "bc", "cc", "sys", "ng", "ok", "SC", "conv", "lc", "rc", "sch", "sec", "gc", "cl", "scan", "nc", "sq", "cs", "tc", "pc", "ser", "syn", "isc", "desc", "scl", "sv", "rs", "sp", "esc"], "s": ["ms", "S", "sts", "sb", "sync", "set", "w", "stats", "csv", "l", "b", "ns", "ins", "strings", "bs", "i", "c", "ts", "str", "g", "r", "v", "y", "j", "conv", "f", "h", "a", "q", "string", "gs", "prints", "ls", "m", "aws", "ss", "sq", "qs", "less", "raw", "t", "ps", "is", "z", "su", "n", "p", "sv", "rs", "hs", "gets"], "strBuf": ["strBslu", " strBBhung", "arrOBbuf", "strMuff", "strBbuf", "StrBsuf", "strCBuff", " strBuff", "strBhung", "strBuff", "strOBbuff", " strLuf", "strBsuff", "strBsuf", "arrBbuff", "strMBuff", "strCBbuff", "strVBuf", "arrBbuf", "StrBuf", "arrOBbuff", " strBBuff", "StrBbuf", "StrBlu", "arrBuff", " strBhung", "strMhung", "strOBbuf", "strLBuff", "strOBuf", "strMbuf", "strOBBuff", " strBbuf", "strVBhung", "strBBuff", "strMlu", "strBBhung", "StrBslu", "StrBsuff", "StrBsbuf", "strLuff", "arrBuf", "strLbuf", "arrOBuf", "strBbuff", "strBlu", "strBBuf", "arrOBuff", "strOBuff", "StrBuff", " strBBuf", "strCBlu", "strCBuf", "strBsbuf", "strLuf", " strLbuf", " strLBuff", "strCBbuf", "strVBuff", "strMuf", " strLuff"]}}
{"code": "import java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString str = sc.nextLine();\\n\t\tString[] strArray = new String[3];\\n\\n\t\tstrArray = str.split(\" \");\\n\t\tArrays.sort(strArray);\\n\\n\t\tif (\"557\".equals(String.join(\"\", strArray))) {\\n\t\t\tSystem.out.println(\"YES\");\\n\t\t} else {\\n\t\t\tSystem.out.println(\"NO\");\\n\t\t}\\n\t}\\n}\\n", "target": "16", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "ec", "Sc", "c", "dec", "bc", "cc", "sys", "ok", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "nc", "system", "tc", "cs", "sq", "pc", "isc", "desc", "syn", "sh", "scl", "sv", "sp", "esc"], "str": ["result", "obj", "vol", "s", "status", "fr", "STR", "tr", "utt", "dr", "char", "text", "out", "coll", "gr", "g", "r", "seq", "parse", "dec", "dat", "name", "j", "print", "string", "st", "Str", "exp", "raw", "data", "br", "t", "z", "input", "txt", "n", "ctr", "enc", "sp", "arr"], "strArray": [" strOrder", " strTable", " strString", "objAr", "stringTable", "spArray", "stringAr", "nameRAY", "StrAll", "StrString", "stringRAY", "strString", "strParts", "StrArray", "spTable", "spParts", "sparray", "StrList", "nameOrder", "nameArray", "strRAY", "stringOrder", " strAr", "strAll", "stringParts", "strTable", "stringString", " strarray", "stringArray", "StrAr", "Strarray", "strList", "strarray", " strParts", "strOrder", "nameAr", "stringarray", " strList", "objarray", " strRAY", "objArray", "objList", "stringAll", "strAr", " strAll"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tString[] array=new String[n];\\n\t\tString buff1=\"\",buff2=\"\";\\n\\n\t\tfor(int i=0;i<n;i++) {\\n\t\t\tarray[i]=sc.next();\\n\t\t}\\n\t\tfor(int i=0;i<n-1;i++) {\\n\t\t\tfor(int j=i+1;j<n;j++) {\\n\t\t\t\tif(array[i].equals(array[j])) {\\n\t\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t\t\tSystem.exit(0);\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tfor(int i=0;i<n-1;i++) {\\n\t\t\tbuff1=array[i].substring(array[i].length()-1,array[i].length());\\n\t\t\tbuff2=array[i+1].substring(0,1);\\n\t\t\tif(!buff1.equals(buff2)) {\\n\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t\tSystem.exit(0);\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(\"Yes\");\\n\t}\\n}\\n\\n\\n", "target": "70", "substitutes": {"sc": ["ch", "sb", "sw", "src", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "arc", "sci", "c", "sel", "inc", "bc", "cc", "sys", "fc", "ng", "SC", "conv", "lc", "rc", "usc", "st", "sec", "sch", "sr", "nl", "gc", "cl", "ss", "scan", "uc", "nc", "sq", "cs", "tc", "pc", "ser", "ctl", "isc", "syn", "desc", "scl", "sv", "Scan", "sp", "esc"], "n": ["nb", "en", "nn", "names", "non", "s", "nor", "network", "all", "ll", "none", "o", "l", "np", "ns", "x", "c", "d", "un", "g", "r", "nm", "nt", "v", "no", "ng", "on", "name", "number", "sn", "m", "nu", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "num", "net", "count", "ct", "len", "N", "nil", "p", "note", "mn"], "array": ["rays", "order", "av", "record", "var", "list", "pair", "section", "random", "test", "all", "sequence", "now", "attribute", "series", "chain", "table", "instance", "area", "binary", "row", "audio", "ape", "form", "ary", "format", "this", "memory", "library", "window", "share", "trace", "Array", "v", "ar", "ray", "address", "member", "range", "collection", "a", "shape", "number", "length", "component", "string", "stage", "hash", "answer", "the", "closure", "actor", "batch", "buffer", "stack", "arrow", "storage", "function", "external", "object", "data", "equality", "raw", "code", "message", "angle", "store", "map", "archive", "our", "history", "arr", "vector"], "buff1": ["Buff1", "buffer5", "buf0", "buffOnce", "buf01", "buffer0", "uff8", "Buff0", "buffer2", "ja01", "ja8", "buffer1", "buff01", "rend1", "uff01", "uff1", "buff8", "buf5", "buf2", "rend01", "rend8", "buf1", "uffOnce", "buff5", " buff0", "Buff2", "buffer01", "Buff5", "buff0", " buff01", "rendOnce", "jaOnce", "ja1"], "buff2": ["Buff1", "uf02", "buff3", "buffer4", "Bufftwo", "uff4", "buffer0", "Buff0", "bufftwo", "buffer2", "buff4", "buffer1", " bufftwo", "uff2", "uff1", "buffertwo", " buff02", "bb3", "Buff3", "bb2", "buffer3", "uf2", "uff02", "Buff02", "Buff2", "uf4", "uf1", "buff0", "buff02", "bb0", "bb1", "buffer02"], "i": ["multi", "si", "iii", "ip", "ir", "PI", "l", "zi", "di", "ion", "ini", "err", "ret", "iy", "me", "info", "slice", "hi", "phi", "it", "ie", "um", "qi", "ik", "y", "sim", "ia", "uri", "q", "init", "ami", "ori", "ii", "gi", "us", "to", "cli", "ji", "inner", "ic", "ri", "bi", "iter", "iu", "iti", "this", "ei", "iri", "g", "io", "I", "ind", "ij", "is", "li", "ui", "client", "ix", "entry", "ti", "ai", "user", "xi", "pi", "mi", "ity", "ci", "iso", "id", "you", "range", "iq", "ki", "\u0438", "ims", "eu", "sql", "im", "u"], "j": ["jo", "bi", "bj", "oj", "ot", "obj", "at", "nd", "json", "J", "it", "s", "jc", "jack", "pt", "jet", "key", "o", "l", "jit", "dj", "k", "jj", "aj", "jl", "x", "el", "jp", "uj", "js", "str", "g", "v", "ja", "y", "ph", "jac", "ij", "q", "je", "kj", "m", "br", "z", "jump", "job", "ev", "ji", "pr"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scn=new Scanner(System.in);\\n\t\tint n=scn.nextInt();\\n\t\tint k=scn.nextInt();\\n\t\tint[] arr=new int[n];\\n\t\tfor(int i=0;i<n;i++) {\\n\t\t\tarr[i]=scn.nextInt();\\n\t\t}\\n\t\tSystem.out.println(frog1(arr,k));\\n\t\t\\n\t\t\\n\t}\\n\tpublic static int frog1(int[] heights,int k) {\\n\t\t\\n\t\tint[] dp=new int[heights.length];\\n\t\tdp[0]=0;\\n\t\tdp[1]=Math.abs(heights[0]-heights[1]);\\n\t\t\\n\t\tint min=0;\\n\t\tfor(int vidx=2;vidx<heights.length;vidx++) {\\n\t\t\tmin=Integer.MAX_VALUE;\\n\t\t\tfor(int j=vidx-k;j<vidx;j++) {\\n\t\t\t\tif((j)<0) {\\n\t\t\t\t\tcontinue;\\n\t\t\t\t}\\n\t\t\\n\t\t\t\tint val=Math.abs(heights[vidx]-heights[j])+dp[j];\\n\t\t\t\t\\n\t\t\t\tif(min>val) {\\n\t\t\t\t\tmin=val;\\n\t\t\t\t\tdp[vidx]=min;\\n\t\t\t\t}\\n\t\t\t\t\\n\t\t\t}\\n\t\t\t\\n\t\t\t\\n\t\t}\\n\t\t\\n\t\treturn dp[heights.length-1];\\n\t\t\t\\n\t}\\n\\n}\\n", "target": "241", "substitutes": {"scn": ["ancconn", "iscl", "scr", " scr", "cron", "descn", "secn", "ancner", "crr", "iscn", "scanconn", "Scne", "secne", "scne", "escn", "Scon", "iscne", "crne", "escne", "scner", "esccn", "crn", "seccn", "Scn", " scconn", " scl", "descne", "Scr", "escl", "isccn", "sccn", " sccn", "scann", "scconn", " scann", " scne", "desccn", "scanner", "scon", " scon", "secann", "ancn", "scanon", "ancon", "scl", " scner", "descann"], "n": ["nb", "an", "en", "nn", "w", "o", "l", "np", "ns", "x", "c", "d", "g", "r", "nt", "nm", "v", "y", "ng", "on", "a", "number", "sn", "f", "q", "m", "nu", "nl", "nc", "ln", "ne", "t", "na", "z", "cn", "num", "len", "N", "p", "mn"], "k": ["ka", "kl", "ke", "kr", "kn", "max", "w", "sk", "key", "kid", "K", "l", "b", "ko", "ks", "c", "d", "ik", "g", "r", "ek", "v", "kt", "y", "id", "ok", "ak", "h", "kk", "q", "kw", "m", "kj", "mk", "ki", "km", "ck", "tk", "t", "z", "num", "dk", "p", "ijk", "kh", "u"], "arr": ["av", "ars", "var", "ab", "bl", "list", "obj", "iter", "au", "img", "aug", "ll", "fr", "ax", "aaa", "buf", "dr", "arg", "ARR", "row", "Ar", "coll", "gr", "rel", "r", "align", "Array", "ar", "ray", "arb", "dat", "bar", "res", "iq", "app", "ij", "attr", "stack", "arp", "aa", "br", "rr", "agg", "array", "grid", "pr"], "i": ["ms", "multi", "si", "ti", "ai", "iter", "ip", "it", "set", "iu", "ie", "PI", "di", "pi", "qi", "x", "g", "my", "mi", "ini", "ci", "y", "sim", "err", "id", "io", "f", "I", "ind", "q", "init", "me", "m", "batch", "ii", "info", "us", "gi", "ims", "is", "li", "ex", "hi", "ui", "inner", "ix", "im", "phi"], "heights": ["heocks", "hights", " heIGHT", "HEats", "heIGHTS", "hyeks", "leight", "weads", "hyigh", "height", "heuds", "keuds", "weIGHTS", "keIGHT", "theights", " heigh", "Heeks", "hists", "leIGHTS", "theocks", "Heigh", "heeks", " heets", "hocks", "leights", "hows", " heists", "hIGHT", "HEuds", "HEists", "heigh", " heats", "weists", "hyads", " height", "theils", "HEights", "HEIGHT", "hight", "weeks", "Height", "meists", "keights", "meows", "leets", "heIGHT", "weats", "weigh", "hyums", "hyIGHTS", "meights", "meight", "heils", "heists", "weums", " heuds", " heums", "heows", " heads", "heats", "HEIGHTS", "HeIGHTS", "Heights", "theIGHT", " heils", "weights", " heocks", "heads", "hyights", "hils", "heums", " heIGHTS", "heets", " heows", "Heets"], "dp": ["bsp", "dx", "fp", "cp", "DP", "delay", "dq", "dt", "pkg", "ds", "dos", "wp", "dial", "dep", "dj", "np", "dr", "di", "cd", "p", "deb", "vp", "db", "dd", "tap", "jp", "d", "def", "lp", "ptr", "pm", "tp", "decl", "df", "gp", "pd", "pas", "pb", "arp", "dm", "bp", "dc", "dh", "ps", "adr", "pipe", "dk", "pr", "dl", "pp", "hs", "wd"], "min": ["lt", "vol", "max", "sol", "local", "dim", "low", "status", "diff", "none", "rain", "mine", "first", "amin", "best", "opt", "sum", "lower", "doc", "latest", "rel", "d", "Minimum", "mi", "v", "mean", "lock", "mod", "mint", "start", "default", "minute", "ma", "Mini", "just", "ni", "mini", "ind", "value", "init", "m", "pre", "mins", "minimum", "sort", "MIN", "ne", "Min", "stat", "emin", "len", "div", "pr", "p", "small", "mit", "mn"], "vidx": ["voidx", "ridix", "visinx", "ridv", "circxi", "vidlex", "virtix", "vinpx", "viux", "vinv", "vij", "vixi", "vinX", "virty", "virtpx", "vinix", "circux", "virtX", "vinex", "visX", "vineX", "vinz", "ridz", "vidy", "visy", "bidX", "viv", "virtox", "viny", "virtx", "viix", "bidux", "vidox", "vinux", "vininx", "vix", "vinx", "visx", "vidux", "vidz", "bidy", "vinw", "viney", "vidv", "voidxi", "vidX", "bidx", "vidinx", "vinlex", "virtw", "voidux", "vipx", "viw", "vidw", "vineux", "vidj", "vidix", "virtinx", "circx", "vilex", "circj", "visox", "visix", "viz", "viy", "vinox", "virtlex", "voidj", "vidpx", "vidxi", "ridx", "virtux"], "j": ["jo", "oj", "bj", "obj", "jc", "J", "json", "jack", "let", "it", "pt", "fr", "kid", "l", "tr", "jit", "dj", "b", "jj", "jas", "aj", "jl", "by", "x", "el", "jp", "uj", "js", "g", "v", "ja", "y", "gov", "h", "jac", "ij", "q", "_", "je", "kj", "br", "z", "jump", "other", "job", "ji", "pr", "p", " J"], "val": ["pol", "obj", "vol", "pal", "sol", "test", "cal", "all", "lev", "pret", "func", "fill", "lib", "l", "step", "cmp", "loc", "vals", "sel", "db", "el", "x", " Val", "conf", "rel", "ctx", "unit", "v", " aval", "bil", "Val", "alpha", "value", "reg", "pre", "abs", "il", "aval", "VAL", "serv", "li", "label", "util", "stat", "div", "elt", "rol", "p", "eval"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        try (Scanner scanner = new Scanner(System.in);) {\\n            int x = scanner.nextInt();\\n            int ans = 0;\\n            if (x == 0) {\\n                ans = 1;\\n            }\\n            System.out.println(ans);\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n        }\\n    }\\n}", "target": "148", "substitutes": {"x": ["an", "dx", "mx", "px", "nz", "tx", "w", "xx", "xd", "ax", "xf", "xi", "xt", "xc", "fx", "i", "xp", "xes", "ux", "v", "X", "y", "xb", "ox", "wx", "xs", "inx", "rx", "index", "xy", "z", "ex", "xxx", "n", "ix", "xa"], "ans": ["asks", "an", "angs", "acs", "ars", "anks", "ms", "mas", "ents", "reads", "names", "stats", "aos", "aps", "ann", "arms", "es", "ins", "ns", "aus", "anas", "ks", " scans", "pan", "ts", "aces", "arts", "ys", "uploads", "ats", "oos", "nets", "lets", "rors", "olds", "anes", "ants", "eps", "ays", "xs", "posts", "ANS", "ads", "ls", "lan", "cs", " spans", "amps", "ens", "outs", "ids", "eds"]}}
{"code": "\\nimport java.util.*;\\npublic class Main{\\n public static void main(String[] args) {\\n   Scanner kbd = new Scanner(System.in);\\n   int n=kbd.nextInt();\\n   String[] A= new String[n];\\n   for(int i=0;i<n;i++){\\n     A[i]=kbd.next();\\n}\\nint x=1;\\nArrays.sort(A);\\nfor(int i=0;i<n-1;i++){\\nif(!(A[i].equals(A[i+1]))){\\n  x=x+1;\\n}\\n}\\nSystem.out.println(x);\\n}\\n}\\n", "target": "98", "substitutes": {"kbd": ["ikdd", "kmd", "tkBD", "kds", "ckcd", "mkmd", " kmd", "ikbd", "tkdd", "Kcd", "kdd", "ckdd", "mkdd", "Kbd", " kcd", "tkbd", "tkds", "kBD", "Kdd", "ikBD", " kds", "Kmd", "kcd", "mkbd", "ckmd", "mkcd", "ckbd", " kBD", "ikds", " kdd"], "n": ["nb", "en", "nn", "names", "nor", "network", "all", "ll", "none", "o", "l", "np", "k", "ns", "c", "d", "un", "g", "norm", "nm", "nt", "no", "v", "ng", "name", "j", "number", "sn", "ni", "fn", "nu", "m", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "cn", "num", "net", "count", "ct", "len", "N", "p", "mn"], "A": ["AY", "AB", "At", "J", "AT", "This", "PA", "BA", "AF", "mA", "EA", "AC", "JA", "H", "As", "HA", "P", "Ar", "CA", "V", "MA", "SA", "AV", "Array", "M", "C", "ACT", "X", "AE", "Alpha", "LA", "AR", "W", "a", "I", "AA", "What", "App", "IA", "GA", "The", "Answer", "AP", "L", "Av", "B", "AU", "AM", "All", "N", "API", "An", "RAM"], "i": ["yi", "bi", "in", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "gu", "chain", "zi", "xi", "di", "iti", "pi", "qi", "ei", "g", "ik", "my", "mi", "point", "ity", "ini", "ci", "iso", "sim", "err", "oi", "j", "io", "uri", "I", "ind", "q", "ij", "init", "ami", "m", "iy", "ori", "me", "ki", "\u0438", "batch", "ii", "gi", "info", "us", "ims", "is", "li", "base", "hi", "ui", "cli", "client", "ji", "ix", "fi", "im", "ic", "phi", "u", "ri"], "x": ["dx", "add", "mx", "px", "nz", "max", "w", "tx", "xe", "xx", "status", "xd", "ax", "xf", "xi", "xt", "step", "p", "fx", "out", "xp", "xc", "c", "ux", "v", "X", "ox", "y", "a", "wx", "xs", "yx", "inx", "rx", "m", "index", "t", "xy", "z", "ex", "ix", "xa"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tBufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString s;\\n\t\tint inCnt = 0;\\n\t\twhile ((s = stdIn.readLine()) != null) {\\n\t\t\tinCnt++;\\n\t\t\tif (inCnt % 2 == 1)\\n\t\t\t\tcontinue;\\n\t\t\tString[] se = s.split(\" \");\\n\t\t\t// int e = Integer.valueOf(se[0]);\\n\t\t\tdoMain(inCnt, se);\\n\t\t}\\n\t\tSystem.exit(0);\\n\t}\\n\\n\tprivate static void doMain(int inCnt, String[] se) {\\n\t\tSystem.out.print(se[se.length - 1]);\\n\t\tfor (int i = se.length - 2; i >= 0; i--) {\\n\t\t\tSystem.out.print(\" \" + se[i]);\\n\t\t}\\n\t\tSystem.out.println(\"\");\\n\\n\t}\\n}", "target": "79", "substitutes": {"stdIn": ["standardIns", "stdOut", "STDIns", "stdin", "din", "dIN", "stdIns", "standardOn", "STDin", "dIn", " stdIns", " stdIN", "standardOut", " stdin", " stdOut", "stdOn", "STDOn", "STDOut", "standardIn", "stdIN", " stdOn", "STDIn", "STDIN"], "s": [" ls", "ms", "S", "ws", "e", "sb", "sts", "w", "source", "gets", "l", "b", "ns", "i", "c", "ts", "js", "str", "g", "v", " ts", "its", "h", "f", "gs", "string", "ls", "m", "ss", "sl", " ss", "sq", "qs", "cs", "os", "less", "t", "ps", "is", "txt", "n", "sample", "p", "sv", "rs", "hs", "sp"], "inCnt": [" dinCdef", " inCcount", "inRnt", " dinCnt", "inCNT", " dinCust", "inDpt", "inStCount", "inDnt", "inMcNT", "inMcCount", "innDNT", "inStNT", "inMccount", " incnt", " incCount", " incNT", "incnt", "inMustNT", "inDst", "inCust", "inCst", "inCpt", "inStnt", "inRNT", "inDNT", "inStcount", "innDpt", "inMustdef", "incust", "inCcount", " inCNT", "incCount", "inRpt", "inMcnt", "inMustnt", "innCnt", "incNT", "innDst", "incdef", "incpt", "innCst", " inCCount", "inccount", "inCdef", "inCCount", "inRst", "innDnt", "innCpt", "innCNT", "inMustust", " inccount", " dinCNT", "incst"], "se": ["ses", "des", "si", "ve", "e", "ase", "cle", "fr", "pe", "es", "SE", "th", "sel", "el", "parse", "we", "de", "st", "sec", "me", "sl", "sq", "te", "ne", "sa", "sh", "ge", "sp", "est"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n\\n        int min = 1000000000;\\n        int max = 0;\\n        for (int i = 0; i < N; i++) {\\n            int A = sc.nextInt();\\n            if (A < min) {\\n                min = A;\\n            }\\n            if(A > max) {\\n                max = A;\\n            }\\n        }\\n        System.out.println(max - min);\\n\\n    }\\n}\\n", "target": "214", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "ko", "c", "inc", "bc", "cc", "sys", "fc", "ok", "SC", "lc", " Sc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "system", "tc", "cs", "sq", "ck", "se", "pc", "ctl", "dc", "pl", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "N": ["NP", "NI", "NG", "NA", "NM", "Ne", "NH", "K", "No", "EN", "NT", "V", "M", "X", "Sn", "NO", "Ni", "NE", "NB", "I", "TN", "Len", "NL", "NN", "NR", "Ns", "Num", "Na", "NS", "SN", "L", "GN", "n", "ND", "NC", "NY"], "min": ["mp", "in", "lt", "partial", " mins", "sol", "diff", "local", "low", "from", "don", "master", "first", "l", "amin", "lower", "latest", "sub", "rel", "lo", "Minimum", "mi", "lock", "mod", "start", "default", "range", "mask", "minute", "ma", "Mini", "just", "mini", "mel", "ind", "st", "me", "m", "may", "initial", "pre", "mins", "minimum", "MIN", "begin", "Min", "n", "filter", "man", "inner", "temp", "mean", "small", "mit", "mn"], "max": ["limit", "add", "mx", "size", "mad", "total", "last", "right", "MAX", "history", "w", "next", "ax", "best", "sum", "step", "aj", "prime", "conf", "x", "out", "latest", "med", "window", "act", "end", "v", "high", "mod", "range", "default", "ma", "res", "gt", "can", "m", "recent", "rest", "Max", "view", "huge", "wrap", "upper", "exp", "wall", "full", "base", "na", "net", "cut", "n", "inv", "mean", "grow", "maximum"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "iter", "it", "ip", "iu", "ie", "PI", "di", "pi", "x", "out", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "io", "a", "I", "ind", "q", "init", "me", "m", "ki", "MI", "ii", "gi", "us", "t", "is", "li", "z", "hi", "ui", "cli", "ix", "im", "ic", "phi", "u"], "A": ["AB", "Action", "VA", "At", "NA", "S", "AT", "D", "PA", "BA", "AF", "mA", "K", "EA", "AC", "AGE", "JA", "AI", "Ma", "Y", "As", "H", "HA", "P", "RA", "V", "MA", "CA", "ASC", "SA", "AV", "ACC", "M", "C", "ACT", "Array", "AE", "Alpha", "LA", "AR", "a", "G", "I", "AA", "IA", "GA", "The", "AP", "L", "B", "AU", "AM", "API", "O", "AN", "An"]}}
{"code": "import java.util.Arrays;\\nimport java.util.HashMap;\\nimport java.util.Map;\\nimport java.util.Map.Entry;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner in = new Scanner(System.in);\\n\t\tint n = in.nextInt();\\n\t\tMap<String, Long> map = new HashMap<>();\\n\t\tlong total = 0;\\n\t\tfor ( int i = 0; i < n; i++ ) {\\n\t\t\tchar[] s = in.next().toCharArray();\\n\t\t\tArrays.sort(s);\\n\t\t\tString key = new String(s);\\n\t\t\tLong cnt = (map.containsKey(key) ? map.get(key) + 1 : 1);\\n\t\t\tmap.put(key, cnt);\\n\t\t}\\n\\n\t\tfor ( Entry<String, Long> en : map.entrySet() ) {\\n\t\t\tLong v = en.getValue();\\n\t\t\ttotal += v * (v - 1) / 2;\\n\t\t}\\n\\n\t\tSystem.out.println(total);\\n\t\tin.close();\\n\t}\\n}", "target": "32", "substitutes": {"in": [" din", "spin", "add", "std", "In", "iter", "it", "ai", "din", "read", "file", "all", "source", "from", "run", "world", "l", "user", "ins", "thin", "rt", "by", "bin", "out", "asin", "conf", "inc", "sin", "ner", "r", "ini", "line", "err", "id", "on", "io", "ind", "IN", "init", "m", "log", "scan", "reader", "ssl", "info", "ln", "per", "gin", "isin", "is", "to", "stream", "input", "inn", "inf", "inner", "p", "ic", "cin"], "n": ["nb", "nd", "nn", "nor", "network", "ll", "o", "l", "np", "ns", "d", "un", "nr", "nt", "nm", "ng", "j", "number", "sn", "ni", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "num", "net", "N", "gn", "p", "mn"], "map": ["ap", "mp", "manager", "cp", "add", "list", "create", "complete", "policy", "collect", "menu", "open", "dict", "apper", "snap", "mt", "cache", "set", "sm", "place", "block", "mm", "group", "master", "table", "pack", "cap", "sum", "cmp", "save", "ape", "form", "maps", "parse", "pm", "load", "mask", "make", "where", "shape", "process", "MAP", "app", "hash", "m", "index", "cast", "view", "use", "handle", "batch", "per", "link", "scale", "forge", "pl", "tree", "one", "pose", "metadata", "mem", "store", "match", "man", "module"], "total": ["shared", "summary", "size", "ot", "complete", "unique", "human", "eta", "last", "max", "pdf", "equal", "available", "stats", "all", " summed", "translation", "OTAL", "sum", "tty", "percent", "counter", "created", " tot", "amount", "goal", "nt", "no", " totals", "global", "you", " Tot", "done", " Total", "number", "free", "good", "normal", "ent", "huge", "quant", "otal", " overall", "zero", "confirmed", "used", "valid", "Total", "t", "scale", "full", "base", "tree", "net", "count", "num", "temp", "everything", "serial", "tax", "note"], "i": ["bi", "multi", " ie", "ms", "si", " iter", "ti", "ai", "it", "ip", "iu", "ie", "o", "chain", "di", "pi", " x", "qi", "x", " my", " init", "my", "mi", "ini", "ci", "y", "sim", "id", "err", "j", "iq", "I", "ind", "print", "q", "init", "me", "m", "index", " di", "batch", "ii", "us", " I", "is", "li", " ii", "ex", "ui", "ix", "im", "ic", "phi", "wait"], "s": ["ms", "S", "space", "sts", "sf", "sb", "ds", "w", "source", "csv", "es", "l", "b", "ns", "tes", "c", "ts", "js", "str", "r", "ats", "y", "h", "gs", "string", "fs", "ls", "aws", "ss", "abs", "sq", "sort", "cs", "qs", "less", "os", "ps", "is", "simple", "sql", "p", "sv", "rs", "hs", "gets"], "key": ["query", "item", "obj", "pair", "pkg", "tmp", "set", "Key", "source", "phrase", "ey", "et", "chain", "ver", "k", "sum", "tag", "by", "char", "row", "host", "KEY", "sky", "prefix", "str", "my", "cy", "owner", "ref", "ek", "parent", "point", "y", "id", "peer", "name", "primary", "lock", "title", "q", "value", "hash", "mk", "root", "info", "mac", "link", "tip", "label", "base", "ex", "client", "node", "er", "col", "entry"], "cnt": ["acount", " ccount", "acnn", " count", " cCount", "cred", "lcnn", "catnt", " cnn", "ccount", "cNT", "countnt", "lcount", "countNT", "lcred", "countcount", " cred", "catcount", "catNT", "acnt", "lcnt", "cCount", "catCount", "countCount", "cnn", " cNT", "count", "acred"], "en": ["oen", "eng", "des", "ven", "ener", "nel", "nex", "sen", "ke", "e", "pen", "ene", "gen", "et", "ade", "ey", "enc", "EN", "he", "jen", "enz", "een", "eh", "on", "den", "de", "zen", "ent", "ean", "En", "atten", "em", "ens", "er", "ense", "env", "mn", "mun"], "v": ["nv", "val", "var", "vt", "ve", "vc", "e", "w", "lv", "l", "ver", "vv", "k", "vp", "qv", "x", "c", "V", "vs", "f", "h", "a", "va", "cv", "value", "m", "tv", "t", "ev", "p", "sv", "uv", "u"]}}
{"code": "import java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner((System.in));\\n\t\tint[] a = new int[3];\\n\t\tint sum = 0;\\n\\n\t\tfor (int i = 0; i < 3; i++) {\\n\t\t\ta[i] = sc.nextInt();\\n\t\t}\\n\t\t\\n\t\tArrays.sort(a);\\n\t\t\\n\t\tsum = (a[1] - a[0]) + (a[2] - a[1]);\\n\t\t\\n\t\tSystem.out.println(sum);\\n\t\t\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "247", "substitutes": {"sc": ["ch", "sb", "sw", "asc", "sm", "mc", "osc", "scrib", "anc", "cr", "Sc", "arc", "c", "sub", "bc", "cc", "sys", "co", "fc", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "nl", "gc", "cl", "ss", "scan", "pb", "nc", "sq", "tc", "cs", "uc", "ck", "pc", "ctl", "na", "psc", "capt", "syn", "isc", "sh", "scl", "sv", "sp", "esc"], "a": ["ap", "an", "la", "ba", "ab", "eas", "parts", "da", "at", "ea", "obj", "au", "set", "cache", "w", "o", "es", "l", "aaa", "b", "aux", "area", "am", "A", "era", "v", "ia", "ma", "ta", "h", "f", "ao", "eps", "ack", "alpha", "ac", "ae", "app", "m", "aw", "abs", "ga", "oa", "aa", "att", "as", "sta", "na", "apa", "z", "fa", "sa", "ca", "ed", "p", "pp"], "sum": ["result", "add", "summary", "report", "size", "ot", "si", "total", "vol", "union", "max", "set", "um", "diff", "cum", "mm", "SU", "zh", "doc", "cost", "black", "mass", "score", "sim", "alph", "sup", "ass", "hash", "Sum", "weight", "tail", "index", "sam", "ss", "tu", "dev", "zero", "loss", "us", "se", "acc", "num", "su", "count", "sa", "mem", "match", "mean", "average", "ash"], "i": ["bi", "multi", "ms", "si", "ti", "iter", "ai", "ip", "it", "gu", "ie", "key", "o", "chain", "di", "pi", "qi", "x", "c", "my", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "io", "uri", "I", "ind", "q", "init", "m", "\u0438", "batch", "gi", "ii", "us", "is", "li", "hi", "ui", "cli", "n", "client", "ix", "p", "sequence", "im", "ic", "phi", "u"]}}
{"code": "import java.util.*;\\nimport java.math.BigInteger;\\nclass Main{\\n\\n     public static void main(String []args){\\n      Scanner scan = new Scanner(System.in);\\n      int x = scan.nextInt();\\n      for(int i = 6 ; i >=0 ; i--){\\n          if(Math.pow(2,i)<=x){\\n            System.out.println((int)Math.pow(2,i));\\n            break;\\n          }\\n      }\\n    }\\n}", "target": "225", "substitutes": {"scan": ["an", "scroll", "in", "query", " Scan", "spin", "report", "ch", "nn", "sync", "check", "set", "read", "connect", "look", "send", "run", "save", "row", "out", "seek", "sc", "sky", "get", "walk", "parse", "sin", "ner", "r", "skip", "find", "sys", "black", "screen", "search", "can", "reach", "gate", "san", "write", "system", "se", "ser", "stat", "n", "sv", "Scan", " scanner"], "x": ["dx", "tt", "mx", "px", " xx", "max", "tx", "w", "xe", "xx", "xd", "ax", "xf", "l", "xi", "xt", "p", "xc", "xp", "g", "v", "X", "y", "xb", "ox", "f", "h", "wx", "xs", "inx", "rx", "m", "t", "xy", "z", "ex", "xxx", "n", "xa"], "i": ["yi", "bi", "multi", "si", "ti", "ai", "it", "ip", "iu", "gu", "o", "chain", "zi", "xi", "di", "pi", "qi", "ei", "my", "mi", "v", "ini", "ci", "y", "oi", "sim", "j", "io", "a", "iq", "ni", "I", "q", "init", "ori", "ki", "\u0438", "asi", "ii", "gi", "info", "slice", "ims", "ski", "t", "is", "li", "z", "hi", "ui", "cli", "n", "ix", "im", "ic", "phi", "ri"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n\\n        int sum = 0;\\n        while (scanner.hasNextInt()) {\\n            int a = scanner.nextInt();\\n            int b = scanner.nextInt();\\n            System.out.println(getDigit(a + b));\\n        }\\n    }\\n\\n    static int getDigit(int value) {\\n        if (value == 0) { return 1; }\\n\\n        int digit = 0;\\n\\n        while (value > 0) {\\n            value /= 10;\\n            digit++;\\n        }\\n\\n        return digit;\\n    }\\n\\n}", "target": "176", "substitutes": {"scanner": [" Scanener", "canner", "canners", "reachners", "reachner", "Scanter", " scanners", "caner", "scanter", "scanners", "canener", " scanener", "reachener", "Scanator", "Scaner", "canator", " Scanner", " Scaner", "Scanner", "canter", " Scanter", "scanener", " scaner", "Scanener", " scanator", "scaner", "scanator", "reacher", " scanter"], "sum": ["result", "add", "size", "si", "total", "sign", "set", "max", "um", "diff", "cap", "bin", "doc", "alpha", "hash", "Sum", "index", "sam", " num", "usr", "head", "data", "acc", "base", "count", "mem", "weight", "tail"], "a": ["an", "aff", "la", "ba", "ab", "ea", "au", "aaaa", "anta", "aka", "l", "aaa", "aj", "aux", "am", "d", "A", "era", "ia", "ta", "ma", "f", "ao", "va", "alpha", "ae", "oa", "aa", "sta", "t", "as", "na", "apa", "z", "sa", "ca", "isa", "aq", "xa"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "sb", "e", "lab", "eb", "l", "bs", "ob", "by", "db", "i", "c", "d", "g", "bc", "v", "y", "bar", "cb", "j", "beta", "mb", "blue", "bis", "z", "B", "rb", "n", "u"], "value": ["result", "think", "record", "expression", "python", "size", "integer", "total", "hello", "json", "max", "position", "sequence", "now", "always", "attribute", "Value", "variable", "see", "image", "save", "text", "unit", "multiple", "get", "volume", "version", "v", "address", "padding", "default", "number", "currency", "length", "VALUE", "vote", "money", "index", "values", "initial", "function", "raw", "data", "scale", "dollar", "label", "num", "code", "message", "input", "commit", "something", "other", "widget", "p", "val", "maximum", "second", "vector"], "digit": ["character", "result", "bug", "bit", "and", "integer", "total", "it", "sign", "digital", "cat", " digits", "fd", "unsigned", "png", "term", "ension", "letter", "odd", " number", "visible", "colour", "feat", "tag", "char", "doc", "unit", "d", "goal", "format", "flag", "inc", "dimension", "dec", "dump", "umeric", "degree", "id", "number", "alpha", "dig", "index", "factor", "uint", "die", "inant", "zero", "debug", "dated", "dot", "rand", "num", "dest", "commit", "important", "negative", "val", "git", "figure", "event"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO Auto-generated method stub\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString s = sc.next();\\n\t\tsolve(s, s.length());\\n\t}\\n\\n\tprivate static void solve(String s, int len) {\\n\t\t// TODO Auto-generated method stub\\n\t\tlong sum = 0;\\n\t\tfor(int i = 0; i < len; i++) {\\n\t\t\tsum += s.charAt(i) - '0';\\n\t\t}\\n\t\tif (sum % 9 == 0) \\n\t\t\tSystem.out.println(\"Yes\");\\n\t\telse \\n\t\t\tSystem.out.println(\"No\");\\n\t}\\n\\n}\\n", "target": "93", "substitutes": {}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner scan = new Scanner(System.in);\\n        int s = Integer.parseInt(scan.next());\\n        int w = Integer.parseInt(scan.next());\\n        scan.close();\\n\\n        if (w >= s) {\\n            System.out.println(\"unsafe\");\\n        } else {\\n            System.out.println(\"safe\");\\n        }\\n\\n    }\\n}", "target": "177", "substitutes": {"scan": ["an", "scroll", "in", "query", " Scan", "report", "nn", "iter", "check", "set", "read", "send", "re", "ann", "run", "clean", "see", "sum", "char", "row", "out", "trans", "seek", "sc", "cgi", "parse", "sin", "ner", "r", "find", "skip", "sys", "proc", "black", "range", "search", "can", "reach", "sr", "gate", "san", "go", "system", "sort", "begin", "sche", "se", "con", "ser", "scale", "stat", "n", "serial", "auto", "match", "sv", "Scan", " scanner"], "s": ["ms", "S", "ws", "e", "sw", "l", "b", "ns", "ins", "ks", "i", "ts", "c", "js", "ys", "g", "r", "v", "sd", "h", "a", "xs", "gs", "ls", "fs", "m", "aws", "ss", "sl", "sq", "cs", "os", "t", "ps", "is", "z", "n", "p", "sv", "rs"], "w": ["wr", "ws", "wcs", "nw", "sw", "wb", "wp", "wt", "window", "r", "v", "we", "words", "W", "h", "wh", "win", "wx", "word", "kw", "wm", "m", "wa", "fw", "rw", "wl", "hw", "t", "wal", "z", "width", "n", "p", "weight", "wid", "wd", "wi"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\n\\npublic class Main{\\n\\n    static int INFTY = Integer.MAX_VALUE;\\n    public static void main (String args[]){\\n        //\u521d\u671f\u51e6\u7406\\n        Scanner sc=new Scanner(System.in);\\n        // BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        // try{\\n            // int n = Integer.parseInt(br.readLine());\\n            \\n        int N = sc.nextInt();\\n        int L = sc.nextInt();\\n        int[] arr = new int[N+1];\\n        int minAbs=INFTY;\\n        int minNum=0;\\n        int ans=0;\\n        for(int i=1;i<=N;i++){\\n            arr[i]=L+i-1;\\n            ans+=arr[i];\\n            if(minAbs>Math.abs(arr[i])){\\n                minAbs=Math.abs(arr[i]);\\n                minNum=i;\\n            }\\n        }\\n        ans=ans-arr[minNum];\\n        System.out.println(ans);\\n\\n    }\\n\\n\\n}", "target": "91", "substitutes": {"INFTY": ["INftYS", " INFTy", "INVERTX", " INfty", "INFTy", " INFTX", "INFTYS", "INVTX", " INftY", " INftX", "INVERTy", "INftX", "INfty", "INVERTY", "INVTY", " INFTYS", " INftYS", "INVTy", "INVTYS", "INftY", "INVERTYS", "INFTX"]}}
{"code": "import java.io.*;\\n\\nclass Main{\\n\tpublic static void main(String args[]) throws IOException{\\n\t\tBufferedReader buf = new BufferedReader(new InputStreamReader(System.in));\\n\t\t\\n\t\twhile(true){\\n\t\t\tString[] str = buf.readLine().split(\" \");\\n\t\t\tint H = Integer.parseInt(str[0]);\\n\t\t\tint W = Integer.parseInt(str[1]);\\n\t\t\tif(H==0 && W==0)\\n\t\t\t\tbreak;\\n\t\t\tfor(int i=1; i<=H; i++){\\n\t\t\t\tfor(int j=1; j<=W; j++){\\n\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t}\\n\t\t\t\tSystem.out.println();\\n\t\t\t}\\n                  System.out.println();\\n      \\n\t\t}\\n\t}\t\\n}", "target": "87", "substitutes": {"buf": ["nb", "bl", "eng", "uf", "buff", "pkg", "tmp", "msg", "pool", "block", "b", "req", "aux", "bs", "foo", "bo", "db", "def", "bg", "window", "bh", "ered", "bar", "cb", "Buff", "cv", "bag", "mu", "buffer", "mb", "Buffer", "cmd", "etc", "bp", "br", "rot", "rb", "aer", "queue", "mem"], "str": ["part", "obj", "ch", "sts", "it", "vol", "s", "cat", "fr", "oct", "tr", "STR", "dr", "del", "stri", "char", "split", "text", "coll", "gr", "comm", "r", "dec", "line", "dat", "name", "st", "string", "sec", "Str", "sl", "exp", "cs", "att", "br", "data", "input", "txt", "len", "n", "div", "elt", "ctr", "desc", "hex", "enc", "sp", "arr"], "H": ["HE", "J", "Host", "Eh", "D", "HH", "This", "HR", "NH", "Height", "HI", "HO", "MH", "HTML", "HD", "OH", "FH", "HA", "DH", "AH", "HM", "RH", "TH", "High", "M", "HB", "X", "He", "CH", "h", "HS", "His", "I", "HT", "HQ", "HL", "N", "HK"], "W": ["SW", "EW", "VW", "S", "MW", "IF", "J", "WAR", "WR", "w", "Sw", "WH", "T", "WT", "Width", "Watch", "WD", "Y", "P", "Wh", "V", "M", "WA", "X", "WW", "FW", "I", "WS", "NW", "We", "WE", "R", "WC", "DW", "Wi", "CW", "OW", "WM", "WP", "Win", "L", "B", "F", "RE", "N", "BW"], "i": ["yi", "jo", "bi", "in", "multi", "si", "ai", "iter", "it", "ip", "iu", "ie", "zi", "xi", "di", "pi", "qi", "x", "ei", "or", "mi", "v", "ini", "ci", "y", "sim", "ia", "a", "iq", "ni", "I", "ind", "inter", "ij", "init", "ami", "ori", "ki", "asi", "ii", "info", "ims", "is", "li", "ui", "inner", "ix", "im", "ic", "phi", "ri"], "j": ["jo", "bj", "oj", "obj", "jc", "json", "J", "it", "fr", "kid", "dj", "b", "k", "jj", "jas", "aj", "jl", "out", "jp", "uj", "rel", "js", "g", "no", "v", "ja", "y", "err", "ph", "sp", "q", "ij", "kj", "ne", "z", "job", "jump", "other", "ji", "pr", "ge", "note"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\t\\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\\n\t\t\\n\t\tint H = Integer.parseInt(st.nextToken());\\n\t\tint A = Integer.parseInt(st.nextToken());\\n\t\tint i;\\n\t\tfor(i=1; i<10001; i++) {\\n\t\t\tH -= A;\\n\t\t\tif(H <= 0)\\n\t\t\t\tbreak;\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(i);\\n\t}\t\\n\\n}", "target": "147", "substitutes": {"br": ["wr", "bsp", "ber", "bl", "hr", "ab", "ba", "kr", "bb", "ch", "BR", "Br", "vr", "mr", "fr", "eb", "tr", "b", "buf", "dr", "bd", "bs", "cr", "gb", "gr", "str", "bh", "bc", "bf", "yr", "bt", "sp", "bridge", "lr", "bp", "rb", "bm", "pr", "er", "bro", "bn"], "st": ["tt", "ft", "std", "sy", "ste", "ost", "sts", "sb", "nd", "s", "mt", "set", "pt", "et", "spe", "sty", "tr", "th", "stri", "ast", "ts", "ust", "str", "nt", "ST", "bt", "start", "sd", "td", "sn", "inst", "rest", "ss", "stable", "sl", "se", "sta", "t", "ist", "St", "ct", "sh", "sv", "sp", "est"], "H": ["HE", "J", "Host", "HTTP", "D", "HH", "T", "his", "NH", "E", "K", "Ha", "HI", "HO", "MH", "OH", "Head", "HA", "P", "HC", "DH", "he", "SHA", "HM", "V", "TH", "High", "M", "HB", "X", "He", "CH", "h", "HS", "I", "His", "HT", "R", "HQ", "HL", "L", "B", "N", "HP"], "A": ["AB", "S", "NA", "au", "J", "PA", "AF", "E", "K", "AC", "U", "JA", "As", "HA", "P", "CA", "MA", "V", "SA", "M", "C", "AE", "Alpha", "LA", "He", "a", "I", "G", "alpha", "AA", "TA", "AL", "IA", "GA", "AP", "L", "B", "AU", "N", "O", "Ax", "AN", "An"], "i": ["bi", "in", "multi", "si", "ti", "ai", "iter", "it", "ip", "s", "iu", "o", "chain", "l", "zi", "xi", "HI", "di", "pi", "qi", "x", "c", "ei", "mi", "v", "ini", "ci", "y", "err", "sim", "id", "j", "io", "h", "a", "I", "ind", "print", "init", "m", "index", "batch", "go", "ii", "gi", "info", "t", "is", "li", "hi", "cli", "ui", "ix", "p", "im", "ic", "phi"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws IOException{\\n\t\tInputStreamReader in = new InputStreamReader(System.in);\\n\t\tBufferedReader br = new BufferedReader(in);\\n\t\tString[] line = br.readLine().split(\" \");\\n\t\tint a = Integer.parseInt(line[0]);\\n\t\tint b = Integer.parseInt(line[1]);\\n\t\t\\n\t\tbr.close();\\n\\n\t\tfloat price;\\n\t\t\\n\t\tfor(int i = 0;i<10000;i++) {\\n\t\t\tif((int)(i*0.08) == a && (int)(i*0.10) == b) {\\n\t\t\t\tSystem.out.println(i);\\n\t\t\t\treturn;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(-1);\\n\t}\\n}\\n", "target": "121", "substitutes": {"in": [" din", "en", "std", "In", "iter", "it", "din", "ro", "from", "all", "rin", "world", "user", "l", "ins", "rt", "bin", "out", "doc", "d", "inc", "lo", "r", "mi", "ini", "ar", "err", "io", "ac", "IN", "init", "log", "reader", "OUT", "info", "con", "gin", "t", "is", "serv", "stream", "input", "n", "inn", "inf", "inner", "er", "ic", "cin", "ri"], "br": ["wr", "ber", "bi", "hr", "bl", "kr", "be", "ch", "BR", "Br", "last", "mr", "fr", "tr", "buf", "dr", "bd", "cr", "out", "jp", "rel", "gr", "str", "r", "bh", "brace", "bt", "cb", "io", "sp", "bridge", "lr", "reader", "shr", "bp", "rb", "repl", "bm", "pr", "ctr", "er", "bro", "ro"], "line": ["field", "query", "column", "Line", "part", "list", "eline", "space", "inline", "ip", "port", "cle", "profile", "block", "chain", "l", "user", "lin", "char", "row", "stroke", "ine", "style", "lines", "parse", "tab", "no", "cell", "date", "range", "LINE", "liner", "word", "le", "shell", "log", "ln", "detail", "zone", "se", "piece", "page", "link", "rule", "node", "frame", "entry"], "a": ["ap", "an", "aff", "la", "ba", "ab", "ea", "ai", "ra", "au", "ama", "o", "ax", "aaa", "area", "x", "A", "r", "act", "ity", "ar", "ia", "ma", "ta", "ao", "alpha", "ac", "ae", "app", "ach", "ata", "ua", "ga", "oa", "aa", "sta", "t", "as", "sa", "ca", "n", "p", "u"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "sb", "s", "wb", "o", "eb", "l", "lb", "ob", "db", "c", "d", "g", "r", "bc", "v", "bf", "y", "bot", "f", "beta", "ble", "bis", "t", "base", "B", "bound", "rb", "n", "p", "u"], "price": [" fraction", " fin", " total", " res", " tmp", " out", " precision", " e", " scale", " start", " alpha", " tick", " f", "f", " threshold", "value", " val", " resp", " ret", " r", " factor", " df", "val", " rate", " delta", " p"], "i": ["multi", "si", "json", "ip", "l", "zi", "di", "c", "window", "my", "point", "ini", "err", "info", "hi", "p", "phi", "wait", "it", "qi", "x", "y", "sim", "name", "uri", "q", "init", "index", "gi", "ii", "us", "cli", "ji", "ic", "bi", "iter", "hello", "iu", "key", "series", "ei", "this", "iri", "g", "j", "I", "ij", "li", "ui", "ix", "sequence", "ti", "ai", "xi", "pi", "mi", "v", "ci", "iso", "id", "oi", "iq", "php", "m", "ki", "batch", "z", "im", "u"]}}
{"code": "import java.util.Scanner;\\n \\npublic class Main {\\n \\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\t\\n\t\tint count=0;\\n\t\tlong blueCount=0;\\n\t\tlong aAmari=0;\\n\t\t\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tlong N=sc.nextLong();\\n\t\tlong A=sc.nextLong();\\n\t\tlong B=sc.nextLong();\\n\t\t//\u4f55\u56de\u3001A+B\u306e\u7d44\u307f\u5408\u308f\u305b\u304c\u7d9a\u304f\u304b\\n\t\tlong syou=N/(A+B);\\n\t\t//A+B\u306e\u3042\u307e\u308a\\n\t\tlong kaisu=N%(A+B);\\n\t\t\\n\t\t\tif(kaisu==0) {\\n\t\t\t\tblueCount=A*syou;\\n\t\t\t}else {\\n\t\t\t\tif(kaisu<A) {\\n\t\t\t\t\tblueCount=(A*syou)+kaisu;\\n\t\t\t\t}else {\\n\t\t\t\taAmari=kaisu-A;\\n\t\t\t\tif(aAmari<B) {\\n\t\t\t\t\tblueCount=(A*syou)+A;\\n\t\t\t\t}else {\\n\t\t\t\t\taAmari=aAmari-B;\\n\t\t\t\t\tblueCount=(A*syou)+A+aAmari;\\n\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t}\\n\t\tSystem.out.println(blueCount);\\n\t\t\\n\t}\\n \\n}", "target": "217", "substitutes": {}}
{"code": "/*\\n *created by Kraken on 19-04-2020 at 17:29\\n */\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    FastReader sc = new FastReader();\\n    long n = sc.nextLong();\\n    int m = sc.nextInt();\\n    long sum = 0;\\n    for (int i = 0; i < m; i++) sum += sc.nextLong();\\n    System.out.println((sum <= n) ? n - sum : \"-1\");\\n  }\\n\\n  static class FastReader {\\n\\n    BufferedReader br;\\n\\n    StringTokenizer st;\\n\\n    public FastReader() {\\n      br = new BufferedReader(new InputStreamReader(System.in));\\n    }\\n\\n    String next() {\\n      while (st == null || !st.hasMoreElements()) {\\n        try {\\n          st = new StringTokenizer(br.readLine());\\n        }\\n        catch (IOException e) {\\n          e.printStackTrace();\\n        }\\n      }\\n      return st.nextToken();\\n    }\\n\\n    int nextInt() {\\n      return Integer.parseInt(next());\\n    }\\n\\n    long nextLong() {\\n      return Long.parseLong(next());\\n    }\\n\\n    double nextDouble() {\\n      return Double.parseDouble(next());\\n    }\\n\\n    String nextLine() {\\n      String str = \"\";\\n      try {\\n        str = br.readLine();\\n      }\\n      catch (IOException e) {\\n        e.printStackTrace();\\n      }\\n      return str;\\n    }\\n  }\\n}\\n", "target": "108", "substitutes": {"sc": ["ch", "sync", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "c", "ctx", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "cv", "usc", "sch", "sec", "gc", "cl", "ss", "uc", "nc", "sq", "cs", "tc", "ck", "sic", "pc", "ctl", "dc", "cus", "psc", "isc", "desc", "cer", "scl", "sh", "cu", "sv", "sp", "esc"], "n": ["nb", "en", "size", "nn", "nz", "nw", "total", "s", "ll", "o", "l", "np", "ns", "x", "out", "c", "un", "d", "nt", "conn", "v", "nm", "number", "sn", "nu", "nl", "ny", "nc", "ln", "ne", "t", "na", "z", "cn", "num", "net", "count", "len", "N", "gn", "p"], "m": ["mx", "ms", "perm", "mt", "sm", "cm", "mc", "mm", "o", "l", "k", "c", "d", "med", "mi", "v", "M", "rm", "ma", "j", "h", "f", "tm", "km", "mb", "dm", "t", "gm", "bm", "man", "p", "mn"], "sum": ["result", "add", "summary", "size", " sums", "ms", "si", "total", "vol", "s", "set", "max", "tmp", "um", " SUM", "diff", "cum", " summed", "pi", "out", " Sum", "med", "nt", "ity", "v", "mod", "sim", "sat", "weight", "hash", "Sum", "ass", "index", "sam", "mu", "tu", "zero", "us", "ne", "scale", "na", "acc", "count", "num", "su", "sa", "mem", "temp", "mean", "average"], "i": ["bi", "in", "multi", "si", "ti", "ai", "ip", "it", "iu", "ie", "gu", "o", "zi", "xi", "di", "pi", "qi", "x", "my", "mi", "ini", "ci", "y", "id", "sim", "j", "io", "I", "ind", "ki", "ii", "gi", "us", "is", "li", "hi", "ui", "cli", "ix", "p", "im", "phi"], "br": ["ber", "bsp", "wr", "bl", "hr", "kr", "ch", "BR", "Br", "vr", "mr", "next", "fr", "tr", "b", "buf", "browser", "dr", "bd", "bs", "cr", "jp", "rel", "gr", "ptr", "r", "bh", "bc", "bt", "sp", "bridge", "itter", "lr", "abl", "shr", "bp", "bre", "bm", "pr", "ctr", "bro", "bn"], "st": ["tt", "bl", "ft", "std", "nd", "ste", "be", "sts", "ost", "lt", "sw", "mt", "set", "pt", "sm", "et", "fr", "sty", "l", "tr", "const", "th", "stri", "rt", "ts", "ust", "r", "nt", "ST", "bt", "start", "td", "inst", "sn", "ut", "stage", "rest", "cl", "sl", "ss", "stack", "stable", "so", "se", "sta", "t", "ist", "St", "stat", "ct", "sh", "p", "sv", "sp", "est"], "str": ["wr", "result", "s", "msg", "next", "fr", "STR", "tr", "dr", "ns", "del", "cr", "char", "text", "rel", "gr", "cert", "r", "v", "sys", "cont", "ret", "pse", "inst", "res", "print", "string", "Str", "ent", "stable", "shr", "exp", "rec", "raw", "usr", "t", "dist", "txt", "temp", "ctr", "p", "sp", "arr"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int N = sc.nextInt();    \\n    ArrayList<Integer> list = new ArrayList<>();\\n    int sum = 0;\\n    \\n    for(int i=0; i<N; i++) {\\n      list.add(sc.nextInt());\\n    }\\n    Collections.sort(list, Collections.reverseOrder());\\n    for(int j=0; j<list.size(); j++) {\\n      if(j % 2 == 0) {\\n        sum += list.get(j);\\n      } else {\\n        sum -= list.get(j);\\n      }\\n    }\\n    System.out.println(sum);\\n  }\\n}\\n", "target": "132", "substitutes": {"sc": ["ch", "sb", "sw", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "Sc", "c", "ctx", "inc", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "nl", "gc", "cl", "ss", "scan", "pb", "nc", "sq", "cs", "system", "pc", "ctl", "dc", "isc", "capt", "sh", "scl", "sv", "sp", "esc"], "N": ["NP", "NI", "NG", "S", "NA", "J", "D", "T", "NM", "NH", "K", "Net", "NT", "V", "M", "X", "Sn", "NO", "Ni", "NE", "W", "Size", "NB", "I", "Number", "TN", "G", "NL", "NR", "NN", "Ns", "Num", "NS", "L", "GN", "n", "ND", "SN"], "list": ["old", "add", "null", "dict", "set", "tmp", "local", "lat", "diff", "pool", "all", "source", "now", "block", "lv", "ll", "acl", "table", "l", "see", "chain", "csv", "out", "form", "none", "def", "left", "get", "lists", "listed", "parent", "nt", "load", "cont", "collection", "number", "length", "print", "st", "show", "index", "pre", "log", "the", "batch", "stack", "sort", "detail", "dl", "valid", "ist", "li", "array", "L", "pl", "tree", "temp", "n", "filter", "queue", "map", "match", "sequence", "LIST", "entry"], "sum": ["result", "add", "summary", "size", "si", "total", "union", "vol", "max", "tmp", "gam", "um", " SUM", "cal", "diff", "cum", " summed", "mm", "out", "mix", "amount", "med", "cos", "v", "black", "mass", "sim", "must", "SI", "number", "alph", "sup", "alpha", "Sum", "hash", "weight", "tail", "index", "sam", "hum", "zero", "sort", "us", "hist", "na", "scale", "base", "acc", "num", "count", "su", "commit", "temp", "n", "match", "mean", "average"], "i": ["bi", "in", "multi", "si", "ti", "ai", "e", "ip", "it", "iu", "ie", "o", "PI", "l", "xi", "di", "pi", "qi", "x", "my", "mi", "v", "ini", "ci", "y", "sim", "oi", "id", "io", "uri", "inter", "print", "q", "me", "m", "ii", "gi", "info", "us", "is", "li", "hi", "ui", "ix", "im", "ic", "phi", "u", "wi"], "j": ["jo", "oj", "bj", "obj", "jc", "json", "J", "it", "jack", "jet", "pt", "w", "key", "o", "fr", "kid", "l", "state", "jit", "b", "dj", "k", "jj", "aj", "jl", "by", "out", "x", "c", "jp", "uj", "og", "js", "gr", "g", "v", "ja", "y", "err", "bot", "on", "h", "ind", "jac", "ij", "q", "sp", "je", "m", "kj", "index", "exp", "att", "t", "br", "z", "job", "other", "jump", "ji", "n", "pr", "ix", "ge", "im"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        int[] result = {a + b, a - b, a * b};\\n        int max = result[0];\\n        for (int i = 0; i < 3; i++) {\\n            if (max < result[i]) {\\n                max = result[i];\\n            }\\n        }\\n        System.out.println(max);\\n        sc.close();\\n    }\\n}", "target": "188", "substitutes": {"sc": ["ch", "sb", "sw", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "ko", "sel", "c", "arc", "sub", "inc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sec", "sch", "nl", "gc", "cl", "scan", "nc", "system", "tc", "cs", "sq", "ck", "pc", "ctl", "psc", "isc", "capt", "desc", "scl", "sh", "syn", "sv", "sp", "esc"], "a": ["an", "la", "ba", "ab", "da", "ea", "at", "au", " A", "ama", "all", "aka", "ax", "aaa", "aj", "area", "aux", "x", "c", "am", "out", "A", "era", "g", "v", "ar", "ia", "ak", "ma", "ta", "f", "ao", "alpha", "ac", "ae", "index", "ga", "oa", "sta", "aa", "as", "na", "sa", "ca", "p", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "fb", "e", "sb", "eb", "l", "bs", "ob", "gb", "db", "c", "d", "g", "r", "bc", "v", "bf", "y", "bar", "j", "h", "f", "length", "m", "blue", "t", "z", "B", "rb", "n", "p", "u"], "result": ["response", "report", "list", "feature", "complete", "results", "total", "json", "success", "dict", "integer", "cache", "set", "successful", "test", "status", "comment", "all", "term", "table", "progress", "cup", "def", "mate", "r", "score", "date", "ret", "search", "done", "error", "res", "number", "currency", "power", "word", "trade", "answer", "command", "buffer", "Result", "info", "replace", "output", "function", "valid", "data", "rule", "message", "match", "sequence"], "max": ["highest", "size", "mx", "ms", "mad", "largest", "major", "total", "last", "right", "MAX", "now", "ax", "progress", "best", "sum", "x", "latest", "real", "med", "end", "v", "global", "mod", "lock", "range", "default", "id", "min", "ma", "res", "gt", "length", "rank", "m", "recent", "rest", "Max", "view", "huge", "t", "scale", "full", "count", "n", "checked", "auto", "p", "mean", "maximum"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "json", "ip", "it", "ie", "o", "chain", "zi", "xi", "di", "pi", "qi", "ei", "this", "my", "mi", "point", "v", "ini", "ci", "y", "id", "sim", "span", "j", "io", "uri", "I", "ind", "q", "init", "me", "m", "index", "ori", "\u0438", "ii", "gi", "info", "us", "is", "li", "ex", "hi", "ui", "cli", "ji", "ix", "fi", "im", "ic", "phi", "ri"]}}
{"code": "import java.util.*;\\npublic class Main {\\n    public static void main(String[] args){\\n    \tScanner sc = new Scanner(System.in);\\n    \tint n=sc.nextInt();\\n        int m =sc.nextInt();\\n        int r;\\n        for(;;){\\n            r=n%m;\\n            if(r==0){\\n            \tSystem.out.println(m);\\n            \tbreak;\\n            }\\n            n=m;\\n            m=r;\\n        }\\n\\n    }\\n}\\n", "target": "0", "substitutes": {"sc": ["irc", "ch", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "c", "ctx", "inc", "cgi", "dec", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "nc", "sq", "cs", "tc", "ck", "pc", "ctl", "dc", "sa", "capt", "isc", "desc", "scl", "sv", "sp", "esc"], "n": ["nb", "nv", "en", "nn", "s", "w", "o", "l", "np", "k", "ns", "x", "c", "i", "d", "nr", "g", "nt", "v", "nm", "on", "j", "h", "sn", "nu", "nl", "nc", "ln", "ne", "t", "na", "z", "cn", "num", "dn", "N", "p", "mn"], "m": ["mp", "ms", "md", "perm", "e", "s", "mt", "sm", "cm", "w", "mr", "msg", "mc", "mm", "o", "l", "tr", "b", "k", "u", "c", "i", "d", "med", "g", "mi", "nm", "v", "M", "pm", "mod", "rm", "j", "ma", "h", "f", "me", "tm", "mu", "vm", "dm", "t", "gm", "message", "bm", "p", "mut", "mn"], "r": ["result", "rate", "rn", "e", "right", "vr", "w", "mr", "re", "fr", "l", "rd", "dr", "k", "u", "rt", "cr", "i", "c", "d", "nr", "v", "im", "err", "range", "ret", "rm", "reb", "res", "f", "rc", "rh", "q", "sr", "R", "lr", "ur", "t", "br", "rr", "rand", "rb", "repl", "p", "er", "rs", "rar", "ror"]}}
{"code": "import java.util.*;\\nimport java.math.*;\\n\\nclass Main {\\n  public static void main(String[] args) {\\n    Scanner stdIn = new Scanner(System.in);\\n    int n = stdIn.nextInt();\\n    int x = stdIn.nextInt();\\n    int[] l = new int[n];\\n    for(int i = 0;i<n;i++) {\\n      l[i] = stdIn.nextInt();\\n    }\\n    int count = 0;\\n    int current = 0;\\n     while(true) {\\n       if(current<=x) {\\n         count += 1;\\n         if(count-1==l.length) break;\\n         current = current + l[count-1];\\n       } else {\\n         break;\\n       }\\n     }\\n     System.out.println(count);\\n  }\\n}\\n", "target": "130", "substitutes": {"stdIn": ["standardin", "standardIns", "stdOut", "STDIns", "stdin", "standardCon", "ndOut", "stdIns", "stdCon", "ndIn", "ndIs", "randInit", "standardInit", " stdIns", " stdInit", "standardOut", "ndCon", "randOut", " stdin", " stdOut", "stdIs", "STDIs", "randIn", "randin", "standardIn", "ndIns", " stdIs", " stdCon", "STDIn", "stdInit"], "n": ["nb", "en", "size", "nn", "network", "o", "np", "k", "ns", "c", "nr", "r", "nt", "v", "no", "y", "ng", "on", "name", "j", "number", "sn", "length", "m", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "N", "p"], "x": ["dx", "mx", "px", "tx", "w", "xx", "o", "ax", "xf", "xi", "xt", "xc", "xp", "v", "X", "y", "ox", "h", "f", "xs", "xxxx", "wx", "inx", "rx", "m", "xa", "t", "xy", "z", "ex", "xxx", "ix", "p"], "l": ["fl", "list", "kl", "lt", "local", "ll", "lv", "o", "ld", "lb", "lit", "p", "el", "c", "lp", "tl", "g", "r", "v", "lock", "ml", "hl", "rl", "j", "h", "lc", "le", "ls", "m", "lr", "nl", "sl", "ln", "li", "L", "z", "pl", "len", "dl"], "i": ["bi", "multi", "ms", "si", "ti", "iter", "ai", "ip", "it", "iu", "gu", "ie", "chain", "zi", "di", "pi", "by", "qi", "ei", "my", "mi", "v", "ini", "ci", "y", "sim", "id", "err", "oi", "j", "uri", "I", "init", "ki", "\u0438", "batch", "ii", "gi", "us", "ims", "is", "li", "base", "hi", "ui", "client", "inner", "ix", "im", "ic", "phi", "u", "ri"], "count": ["scroll", "size", "list", "total", "max", "depth", "counter", "sum", "c", "frequency", "common", "find", "score", "process", "length", "value", "child", "info", "continue", "ount", "ct", "val", "result", "unique", "cache", "level", "cycle", "cd", "scope", "amount", "cc", "C", "name", "search", "collection", "index", "history", "reset", "nb", "report", "core", "key", "state", "nt", "number", "ind", "thread", "call", "t", "ctr", "add", "cur", "check", "test", "now", "const", "th", "found", "flag", "draw", "cell", "follow", "cond", "batch", "Count", "z", "num", "code"], "current": ["update", "result", "copy", "multi", "cur", "complete", "at", "total", "last", "set", "max", "local", "next", "position", "now", "single", "first", "counter", "loc", "reported", "latest", "c", "get", "this", "ptr", "cont", "currently", "Current", "default", "number", "top", "length", "remote", "component", "active", "index", "initial", "continue", "used", "offset", "present", "ct", "temp", "p", "sequence", "mount"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n\\n        Scanner scanner = new Scanner(System.in);\\n\\n        String input = scanner.nextLine();\\n\\n        String[] values = input.split(\" \");\\n        int A = Integer.parseInt(values[0]);\\n        int B = Integer.parseInt(values[1]);\\n        int C = Integer.parseInt(values[2]);\\n\\n        int x = A - B;\\n        int answer;\\n        if (x <= C) {\\n            answer = C - x;\\n        } else {\\n            answer = 0;\\n        }\\n\\n        System.out.println(answer);\\n    }\\n}\\n", "target": "45", "substitutes": {"scanner": [" Scanener", "canner", " Scanlier", "Scanter", "caner", "scanter", "canener", " scanener", "Scaner", " Scanner", "Scanner", "canter", " Scanter", "scanener", " scaner", "canlier", "Scanlier", "Scanener", "scanlier", "scaner", " scanter"], "input": ["query", "result", "in", "report", "add", "qa", "json", "Input", "read", "source", "csv", "question", "accept", "text", "form", "get", "this", "prefix", "current", "config", "active", "value", "string", "command", "index", "initial", "view", "reader", "buffer", "cmd", "output", "raw", "data", "request", "message", "sql", "sample", "history", "entry"], "values": ["ues", "flows", "dates", "roots", "items", "stores", "users", "blocks", "versions", "issues", "ports", "aps", "images", "bytes", "objects", "actions", "places", "cells", "years", "services", "changes", "models", "views", "strings", "details", "vals", "maps", "lists", "vs", "days", "forms", "styles", "bes", "settings", "terms", "points", "value", "seconds", "weights", "files", "ples", "times", "tests", "verts", "pins", "groups", "modules", "ves"], "A": ["AB", "S", "AT", "This", "D", "T", "AF", "E", "AC", "U", "H", "As", "P", "RA", "V", "CA", "SA", "M", "X", "AE", "AR", "a", "G", "I", "AA", "R", "AL", "IA", "AP", "L", "AU", "N", "An"], "B": ["UB", "AB", "Bs", "BR", "BB", "J", "D", "RB", "BA", "T", "CB", "E", "IB", "b", "VB", "Y", "P", "Bern", "TB", "Blue", "V", "Bi", "BO", "M", "BC", "WB", "NB", "G", "I", "OB", "R", "EB", "LB", "L", "GB", "N", "DB"], "C": ["CS", "EC", "S", "CT", "D", "T", "CB", "E", "K", "U", "CV", "H", "Y", "Z", "P", "DC", "JC", "c", "V", "CA", "M", "X", "BC", "W", "G", "I", "CC", "R", "Count", "CNN", "L", "F", "Q", "N", "O", "CM"], "x": ["dx", "mx", "px", "e", "w", "tx", "xe", "xx", "ax", "xf", "l", "xi", "xt", "p", "xc", "c", "i", "xp", "act", "v", "X", "y", "ox", "a", "number", "wx", "xs", "f", "rx", "index", "any", "XX", "t", "xy", "z", "ex", "xxxxxxxx", "xxx", "n", "ct", "ix", "xa"], "answer": ["result", "query", "response", "echo", "ve", "close", "qa", "ace", "cache", "know", "poll", "ee", "wer", "next", "term", "consider", "say", "question", "choice", "see", "offer", "review", "accept", "reply", "window", "mate", "approximately", "version", "asm", "ask", "address", "option", "err", "remember", "search", "error", "oval", "interpret", "number", "q", "value", "string", "vote", "answered", "zero", "Answer", "equ", "valid", "array", "exit", "request", "code", "message", "ce", "one", "aq", "install", "energy", "archive", "ror", "entry"]}}
{"code": "\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.io.PrintWriter;\\nimport java.util.StringTokenizer;\\n\\npublic class Main\\n{\\n  static class FastScanner\\n  {\\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n    StringTokenizer st = new StringTokenizer(\"\");\\n    \\n    String next() {\\n      while(!st.hasMoreTokens()) {\\n        try {\\n          st = new StringTokenizer(br.readLine());\\n        } catch (IOException e) {}\\n      }\\n      return st.nextToken();\\n    }\\n    \\n    int nextInt() {\\n      return Integer.parseInt(next());\\n    }\\n    \\n    long nextLong() {\\n      return Long.parseLong(next());\\n    }\\n    \\n  }\\n  \\n  public static void main(String[] args) {\\n    FastScanner fs = new FastScanner();\\n    int n = fs.nextInt();\\n    int k = fs.nextInt();\\n    int[] arr = new int[n];\\n    for(int i = 0; i < n; ++i) {\\n      arr[i] = fs.nextInt();\\n    }\\n    int[] dp = new int[n];\\n    for(int i = 1; i < n; ++i) {\\n      int min = Integer.MAX_VALUE;\\n      for(int j = 1; j <= k; ++j) {\\n        int val = Integer.MAX_VALUE;\\n        if(i-j >= 0) {\\n          val = dp[i-j] + (int)Math.abs(arr[i-j]-arr[i]);\\n        }\\n        if(val < min) {\\n          min = val;\\n        }\\n        \\n      }\\n      dp[i] = min;\\n    }\\n    PrintWriter out = new PrintWriter(System.out);\\n    out.println(dp[n-1]);\\n    out.close();\\n  }\\n}\\n", "target": "241", "substitutes": {"br": ["wr", "bsp", "ber", "bl", "hr", "kr", "bb", "ch", "BR", "sb", "Br", "vr", "mr", "next", "fr", "tr", "b", "buf", "dr", "bs", "cr", "gb", "str", "r", "bh", "bc", "bf", "bt", "lr", "abs", "shr", "bp", "rb", "bm", "pr", "bro", "bn"], "st": ["tt", " St", "ft", "std", "nd", "ste", " est", "sts", "sy", "ost", "s", "mt", "set", "pt", "sm", "sw", "sb", "et", "stop", "fr", "sty", "stan", "state", "l", "ld", "const", "th", "stri", "cr", "rt", "ast", "ts", "ust", " ST", "str", "nt", "ST", "sth", "start", "inst", "sn", "stage", "rest", "ss", "stable", "stack", "se", "sta", "t", "ist", "St", "stat", "ct", "sv", "sp", "est"], "fs": ["fp", "ms", "fb", "sf", "ds", "fd", "aos", "fts", "ios", "ns", "fps", "aux", "fits", "bs", "ils", "rs", "ks", "ts", "iffs", "js", "ys", "vs", "lbs", "fc", "Fs", "bf", "sys", "bc", "lf", "ics", "ats", "f", "xs", "gs", "ls", "fw", "gc", "uss", "ss", "qs", "cf", "cs", "bis", "ims", "os", "ps", "hz", "FS", "irs", "hs", "gets"], "n": ["nb", "an", "en", "size", "nn", "nw", "network", "all", "none", "o", "l", "np", "ns", "u", "pi", "x", "c", "d", "un", "nr", "g", "r", "nm", "nt", "no", "v", "ng", "on", "name", "a", "number", "sn", "ni", "pn", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "p", "mn"], "k": ["an", "ka", "kl", "ke", "kr", "kn", "max", "w", "sk", "key", "o", "kid", "K", "l", "b", "ko", "x", "c", "ks", "g", "ik", "r", "ek", "v", "ku", "y", "ok", "h", "f", "q", "kk", "kw", "m", "mk", "kj", "ki", "ck", "t", "z", "p"], "arr": ["rep", "av", "ars", "var", "bl", "ab", "obj", "au", "img", "ress", "aug", "ang", "fr", "aaa", "buf", "dr", "par", "db", "Ar", "coll", "rel", "gr", "addr", "r", "act", "Array", "ar", "ray", "arb", "err", "inst", "iq", "alph", "app", "attr", "batch", "arp", "att", "aa", "data", "acc", "array", "pl", "rb", "repl", "pr", "elt", "rs", "enc"], "i": ["bi", "ish", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "o", "zi", "xi", "di", "pi", "by", "qi", "x", "this", "ei", "g", "ik", "my", "mi", "ity", "ini", "v", "ci", "y", "id", "ia", "io", "name", "iq", "I", "ind", "q", "ij", "me", "init", "m", "ami", "index", "ki", "\u0438", "ii", "info", "gi", "is", "li", "base", "hi", "ui", "ji", "inner", "ix", "p", "im", "ic", "phi", "u", "ri"], "dp": ["rep", "mp", "fp", "cp", "DP", "dq", "dt", "pkg", "ip", "ds", "dim", "wp", "wd", "bps", "np", "dj", "dep", "dr", "di", "dd", "p", "vp", "db", "tap", "hp", "jp", "lp", "pm", "tp", "df", "gp", "pd", "pb", "dm", "bp", "dc", "ps", "pa", "adr", "dh", "dl", "pp"], "min": ["lt", "max", "sol", "local", "diff", "dim", "none", "first", "l", "best", "amin", "sum", "cmp", "lower", "conf", "rel", "d", "med", "Minimum", "mi", "pm", "v", "mean", "mod", "only", "start", "mint", "minute", "recomm", "mini", "Val", "ind", "value", "init", "m", "beta", "pre", "mins", "minimum", "sort", "MIN", "Min", "li", "stat", "emin", "temp", "div", "p", "small", "mit", "mn"], "j": ["oj", "bj", "obj", "jc", "J", "json", "it", "jack", "s", "pt", "ie", "o", "fr", "l", "dj", "b", "jj", "jas", "di", "aj", "jl", "bs", "x", "jp", "uj", "rel", "js", "g", "off", "v", "ja", "y", "ju", "ia", "h", "jac", "ij", "q", "kj", "exp", "us", "li", "z", "jump", "ed", "ji", "ix", "er", "im"], "val": ["update", "bal", "pol", "obj", "vol", "pal", "max", "level", "sol", "tx", "test", "cal", "all", "lev", "pret", "lib", "l", "req", "cmp", "vals", "sel", "x", "el", "unit", "rel", "def", "v", "fail", "res", "cho", "Val", "al", "col", "value", "pre", "cond", "dev", "aval", "valid", "VAL", "serv", "li", "util", "pl", "pr", "div", "rol", "elt", "ival", "eval"], "out": ["in", "outer", "obj", "at", "ch", "null", "it", "console", "cache", "up", "file", "aos", "o", "Out", "flush", "sum", "ins", "crit", "c", "window", "r", "nt", "conn", "co", "sys", "v", "screen", "err", "name", "io", "res", "ut", "print", "init", "ul", "log", "gc", "ou", "OUT", "write", "output", "os", "us", "con", "writer", "t", "ex", "input", "net", "txt", "client", "inner", "p", "outs"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main { \\n\tpublic static void main(String[] args){\\n        // \u5909\u6570\u3068\u914d\u5217\\n\tString str;\\n        int inNumber1, inNumber2, inNumber3;\\n \\n        // \u5404\u6570\u5b57\u306e\u5165\u529b\\n        Scanner scan = new Scanner(System.in);\\n        str = scan.next();\\n        inNumber1 = Integer.parseInt(str);\\n        str = scan.next();\\n        inNumber2 = Integer.parseInt(str);\\n        str = scan.next();\\n        inNumber3 = Integer.parseInt(str);\\n\\n        // \u6761\u4ef6\u5224\u5b9a\\n        if(inNumber1 < inNumber2 && inNumber2 < inNumber3)\\n                System.out.println(\"Yes\");\\n        else\\n                System.out.println(\"No\");\\n\t}\\n}", "target": "168", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] arges) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString line = sc.nextLine();\\n\t\tString[] k = line.split(\" \");\\n\t\tint v = Integer.parseInt(k[0]);\\n\t\tint v2 = Integer.parseInt(k[1]);\\n\t\tif (v == v2) {\\n\t\t\tSystem.out.println(\"a == b\");\\n\t\t} else if (v > v2) {\\n\t\t\tSystem.out.println(\"a > b\");\\n\t\t} else if (v < v2) {\\n\t\t\tSystem.out.println(\"a < b\");\\n\t\t}\\n\\n\t}\\n}", "target": "179", "substitutes": {"arges": [" targes", "argsed", " arged", "arge", " arge", " targess", "argse", "argsess", "argess", "argses", " argess", " targe", " targed", "arged"], "sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "out", "sel", "c", "sub", "ner", "dec", "bc", "cc", "sys", "screen", "SC", "conv", "lc", "rc", "usc", "sec", "sch", "nl", "gc", "cl", "scan", "ss", "nc", "system", "tc", "cs", "sq", "se", "pc", "ser", "desc", "isc", "syn", "scl", "soc", "sh", "sv", "sp", "esc"], "line": ["result", "in", "Line", "inline", "file", "key", "next", "block", "l", "lin", "row", "text", "out", "c", "ine", "str", "lines", "r", "point", "cell", "lf", "LINE", "f", "liner", "lc", "word", "le", "string", "ls", "nl", "log", "ln", "detail", "se", "data", "link", "page", "header", "n", "sample", "frame"], "k": ["ka", "kl", "ke", "kr", "kn", "wk", "max", "w", "kind", "sk", "set", "key", "kan", "K", "ko", "kick", "ks", "kb", "work", "ik", "g", "ek", "keys", "ku", "ok", "ak", "j", "ack", "kw", "q", "kk", "kj", "mk", "km", "ck", "tk", "dk", "unk", "pp", "kh", "ikk"], "v": ["av", "size", "vt", "ve", "vc", "vol", "e", "w", "lv", "l", "b", "wire", "pi", "vert", "vp", "ov", "i", "c", "iv", "d", "V", "vi", "g", "vs", "version", "rev", "current", "gov", "j", "conv", "a", "f", "h", "nov", "va", "q", "value", "m", "view", "dev", "tv", "t", "ev", "inv", "n", "p", "sv", "vis", "uv", "u"], "v2": ["k3", " v0", "v1", " v5", "va2", "ev5", "V2", "ev2", "v5", "vtwo", "v3", "vatwo", "k1", "vb", "va0", "V1", "k2", "v0", "Vtwo", "kb", "V0", "ev1", " v3", "fpl", " v1", "va1", "vpl", "V3", " vpl", " vtwo", "V5", "ev3", "Vpl", "f3", "Vb", " vb", "f2", "f1"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tlong X = Long.parseLong(sc.next());\\n\\n\t\tlong yokin = 100;\\n\t\tint counter = 0;\\n\t\twhile (!(yokin >= X)) {\\n\t\t\tyokin *= 1.01;\\n\t\t\tcounter++;\\n\t\t}\\n\\n\t\tSystem.out.println(counter);\\n\t}\\n}", "target": "107", "substitutes": {"sc": ["cur", "ch", "sync", "sw", "src", "cle", "asc", "mc", "scrib", "osc", "anc", "cr", "Sc", "sel", "c", "ner", "dec", "bc", "cc", "sys", "SC", "res", "lc", " Sc", "rc", "RC", "usc", "sch", "nl", "gc", "cl", "scan", "uc", "nc", "sq", "tc", "cs", "pc", "ser", "dc", "isc", "syn", "desc", "scl", "Scan", "sp", "esc"], "X": ["XT", "FX", "CPU", "MAX", "ZX", "T", "K", "U", "EX", " x", "H", "Y", "TX", "Z", "IX", "x", "XL", "P", "DX", "XM", "V", "UX", "I", "MX", "AX", "XXX", "XX", "XP", "L", "OX", "F", "Q", "N", "TY", "XY"], "yokin": ["payone", "jRandom", "jMAX", "yone", "verymax", "sytotal", "yProgress", "myoffset", "gyProgress", "syone", "gyield", "payrow", "yoffset", "paymax", "cyRandom", "saymax", "symax", "mymax", "sayield", "ytotal", "yield", "myProgress", "ynmax", "cyprogress", "paytotal", "gymax", "yRandom", "syrow", "ymax", "jmax", "sayProgress", "ynMAX", "cyMAX", "ynRandom", "cymax", "yrow", "verytotal", "veryrow", "yMAX", "jprogress", "myield", "gyoffset", "ynprogress", "yprogress", "veryone", "sayoffset"], "counter": ["order", "ounter", "controller", "record", "card", "loop", "total", "integer", "iter", "TER", "console", "time", "cycle", "random", "processor", "clock", "cookie", "percent", "pointer", "book", "created", "amount", "ter", "frequency", "nr", "window", "trace", "rew", "nt", "collection", "finder", "number", "Counter", "currency", "inter", "walker", "timer", "system", "zero", "continue", "external", "writer", "count", "num", "repeat", "message", "TRY", "ctr", "sequence", "second", "vector", "entry"]}}
{"code": "import java.io.*;\\n  \\n  \\npublic class Main {  \\n    public static void main(String[] args)throws IOException{\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        Main m = new Main();\\n        String line = br.readLine();\\n        int[] num = m.splitIntChange(line);\\n          \\n        if(num[0] < num[1]){\\n            System.out.println(\"a < b\");\\n        }\\n        else if(num[0] > num[1]){\\n            System.out.println(\"a > b\");\\n        }\\n        else if(num[0] == num[1]){\\n            System.out.println(\"a == b\");\\n        } \\n    }\\n \\n    public int[] splitIntChange(String str){\\n        String[] str_ = str.split(\" \");\\n        int strlen = str_.length;\\n        int[] numarray = new int[strlen];\\n         \\n        for(int i = 0;i < strlen;i++){\\n            numarray[i] = Integer.parseInt(str_[i]); \\n        }\\n         \\n        return numarray;\\n    }\\n}", "target": "179", "substitutes": {"br": ["wr", "ber", "bi", "bl", "hr", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "er", "tr", "b", "buf", "dr", "bd", "cr", "gr", "r", "bh", "bc", "bf", "bt", "sp", "bridge", "lr", "shr", "bp", "rb", "bm", "pr", "div", "be", "bro", "bn"], "m": ["mp", "ms", "md", "mt", "sm", "mr", "mc", "mm", "o", "l", "b", "om", "c", "d", "hm", "g", "r", "mi", "pm", "v", "M", "mod", "j", "f", "h", "a", "tm", "mk", "dm", "t", "gm", "bm", "n", "p"], "line": ["in", "Line", "list", "eline", "inline", "file", "read", "next", "source", "block", "fr", "pe", "l", "chain", "lin", "row", "text", "out", "ine", "lines", "r", "cell", "date", "lf", "LINE", "liner", "number", "word", "le", "string", "st", "nl", "log", "buffer", "ln", "raw", "se", "link", "page", "header", "code", "n", "frame", "entry"], "num": ["nb", "en", "eng", "multi", "total", "check", "um", "dim", "cal", "gen", "ord", "cum", "ver", "np", "coord", "tim", "sum", "save", "loc", "bo", "form", "out", "comm", "note", "draw", "nm", "no", "dec", "NUM", "proc", "dat", "conv", "number", "alph", "nom", "nu", "good", "mon", "sam", "go", "dev", "zero", "tu", "Num", "con", "na", "count", "su", "net", "n", "div", "grade", "desc", "orig", "mem", "nam"], "str": ["wr", "in", "ch", "iter", "it", "vol", "s", "pt", "w", "l", "STR", "tr", "b", "stri", "cr", "char", "text", "out", "c", "coll", "comm", "g", "r", "v", "cont", "err", "dat", "j", "res", "q", "string", "st", "Str", "us", "exp", "spec", "t", "txt", "n", "p", "enc", "sp", "arr"], "str_": ["strlab", "dirlab", "piecelab", " strlab", "piece_", "comm2", "string2", "string_", "del_", "comm_", "str2", "int_", "int2", "dir_"], "strlen": ["stringlen", "intlen", "intlvl", "strmem", "strLen", "arrLen", "nlen", "strlength", " strLen", " strlength", "intlength", "strlib", " strlib", "stringlength", "arrlength", "arrlen", "nLen", "nlvl", "arrlvl", " strlvl", "strlvl", "stringlvl", "arrlib", "arrmem", "nlength", "stringLen", "intmem", " strmem", "intLen", "intlib"], "numarray": ["alpharea", "numcollection", "numrange", "sortarray", "umbercollection", "nuarr", "numray", "narray", "sortarr", "nuArray", "sumray", "nrange", "nuarray", "nurange", "alpharr", "umberarray", " numrecord", "sumcollection", " numray", "umberarr", "alpharray", "umberray", "sortarea", "numrecord", "numarea", "numArray", " numarea", "alphrecord", "narr", "numarr", "sortrecord", " numarr", "nArray", "sumarr", " numrange", "sumarray", " numcollection", " numArray"], "i": ["bi", "multi", "si", "ti", "iter", "ai", "ip", "it", "iu", "key", "o", "series", "chain", "xi", "di", "pi", "qi", "x", "c", "ei", "mi", "point", "v", "ini", "ci", "y", "id", "sim", "j", "io", "a", "uri", "I", "remote", "q", "init", "php", "ami", "ki", "\u0438", "batch", "ii", "gi", "us", "ims", "is", "li", "hi", "ui", "cli", "n", "ji", "ix", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\nimport java.lang.*;\\nimport java.io.*;\\nimport java.util.*;\\n\\npublic class Main{  \\n\t\\n \tpublic static final Scanner in =new Scanner(System.in);\\n \tpublic static void main(String args []){\\n\\n \t\t\tint a [] = new int [3];\\n \t\t\t a[0] = in.nextInt();\\n \t\t\t  a[1] = in.nextInt();\\n \t\t\t   a[2] = in.nextInt();\\n \t\t\t  int temp = a[0];\\n \t\t\t  a[0]=a[1];\\n \t\t\t  a[1]=temp;\\n \t\t\t  int tem = a[2];\\n \t\t\t  a[2]=a[0];\\n \t\t\t  a[0]=tem;\\n \t\t\t  System.out.print(a[0]+\" \"+a[1]+\" \"+a[2]);\\n \t\t\\n \t}\\n\\n\\n}", "target": "149", "substitutes": {"in": [" din", "en", "std", "In", "it", "din", "read", "file", "all", "source", "rin", "mm", "run", "l", "state", "sum", "ins", "bin", "out", "doc", "c", "i", "str", "inc", "sin", "r", " In", "or", "conn", "ini", "mi", "line", "err", "on", "io", "conv", "pos", "win", "ind", "IN", "m", "log", "scan", "reader", "info", "ln", "gin", "t", "is", "vin", "isin", "stream", "input", "net", "n", "inn", "inf", "inner", "cin"], "a": ["ap", "an", "da", "at", " A", "set", "ace", "all", "l", "area", "window", "ja", "ta", "ae", "go", "as", "pa", "aq", "p", "val", "xa", "ab", "au", "cache", "b", "changes", "A", "y", "ia", "change", "alpha", "ac", "aa", "to", "apa", "ce", "ca", "ava", "la", "ba", "eas", "aos", "aux", "era", "j", "command", "wa", "oa", "action", "t", "na", "fa", "count", "ed", "add", "parts", "ea", "aaa", "form", "am", "trace", "ar", "ma", "export", "f", "ao", "app", "le", "ata", "ga", "sta", "att", "sa", "u"], "temp": ["porary", "mp", "tt", "cel", "perature", "dem", "iter", "tmp", "emp", "stem", "pt", "test", "term", "cum", "tr", "cap", "tim", "template", "cell", "v", "unt", "mod", "mint", "dat", "ty", "Temp", "tm", "pre", "fake", "hum", "tc", "t", "txt", "mem", "cold", "cu", "Temperature", "sp"], "tem": ["dem", "tt", "met", "tmp", "emp", "sm", "stem", "lim", "term", "prof", "cum", "mm", "tar", "tim", "tex", "template", "Tem", "sim", "ty", "ta", "Temp", "there", "sex", "tm", "sam", "htm", "hum", "stable", "tc", "tv", "t", "em", "mem", "cold", "cu", "im", "sym"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args ) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint gameCount = Integer.parseInt(sc.nextLine());\\n\\n\t\tint totalPointTaro = 0;\\n\t\tint totalPointHanako = 0;\\n\\n\t\tfor (int i = 0; i < gameCount; i++) {\\n\t\t\tString[] cards = sc.nextLine().split(\" \");\\n\t\t\tif (cards[0].compareTo(cards[1]) == 0 ) {\\n\t\t\t\ttotalPointTaro += 1;\\n\t\t\t\ttotalPointHanako += 1;\\n\t\t\t} else if (cards[0].compareTo(cards[1]) > 0) {\\n\t\t\t\ttotalPointTaro += 3;\\n\t\t\t} else {\\n\t\t\t\ttotalPointHanako += 3;\\n\t\t\t}\\n\\n\t\t}\\n\t\tsc.close();\\n\\n\t\tSystem.out.printf(\"%d %d\\n\", totalPointTaro, totalPointHanako);\\n\\n\t}\\n}\\n", "target": "206", "substitutes": {"sc": ["irc", "cur", "ch", "sync", "cle", "asc", "mc", "osc", "scrib", "ctrl", "anc", "cr", "Sc", "sel", "c", "sub", "inc", "dec", "bc", "cc", "sys", "screen", "SC", "lc", "rc", "usc", "sec", "gc", "cl", "scan", "nc", "system", "cs", "tc", "sq", "ck", "disc", "pc", "ctl", "pl", "isc", "capt", "syn", "scl", "sh", "sv", "sp", "esc"], "gameCount": ["gameCode", "Gamecount", "gameLength", "GameSize", "leagueCode", "gameGroup", " gameCode", " gameLength", " gameGroup", "GameCount", "leagueSize", "leagueCount", "GameCode", "GameLength", "gamecount", "leaguecount", "gameSize", " gamecount", "GameGroup", "leagueLength", "leagueGroup", " gameSize"], "totalPointTaro": ["totalPointsTaro", "totalPointNaco", "totalPointtargo", "totalPointLaco", "totalPointtosa", "totalPointLargo", "totalpointRarro", "totalPointHaro", "totalPointsNaro", "totalPointNarro", "totalPointRosa", "totalTypeTro", "totalPointtaro", "totalPointsNosa", "totalPointtarro", "totalPointsTargo", "totalPointTaco", "totalPointTargo", "totalpointRaro", "totalTypeTumbo", "totalPointNargo", "totalPointRro", "totalPointRargo", "totalpointTaro", "totalpointTaco", "totalPointTosa", "totalPointNaro", "totalPointRaro", "totalPointRaco", "totalPointHumbo", "totalPointTumbo", "totalPointRazo", "totalPointLarro", "totalPointTro", "totalPointNosa", "totalPointRarro", "totalTypeTazo", "totalPointLaro", "totalPointsTosa", "totalpointRargo", "totalPointRumbo", "totalpointTarro", "totalPointTarro", "totalPointTazo", "totalTypeTaro", "totalPointsNarro", "totalPointHazo", "totalPointsTarro", "totalpointTargo", "totalpointRaco", "totalPointHro", "totalPointsNargo"], "totalPointHanako": ["totalPointWanoko", "totalPointsWanako", "totalPointKinako", "totalPointWanography", "totalPointWanako", "totalPointsHanko", "totalPointHanoko", "totalPointhanjin", "totalPointsWanko", "totalPointsWanema", "totalPointSonoko", "totalPointsWanoko", "totalPointhanako", "totalPointsHanema", "totalPointsWanazo", "totalPointWanema", "totalPointsWanography", "totalPointsHanako", "totalPointHanasha", "totalPointHanography", "totalPointsHanography", "totalPointKinasha", "totalPointSonasha", "totalPointWanazo", "totalPointsHanjin", "totalPointHanjin", "totalPointSonko", "totalPointsWanjin", "totalPointsWanasha", "totalPointhanoko", "totalPointsHanoko", "totalPointKinography", "totalPointHanazo", "totalPointWanko", "totalPointKinazo", "totalPointHanema", "totalPointKinjin", "totalPointKinko", "totalPointKinema", "totalPointhanography", "totalPointWanjin", "totalPointhanema", "totalPointKinoko", "totalPointhanazo", "totalPointWanasha", "totalPointHanko", "totalPointsHanasha", "totalPointSonako", "totalPointsHanazo"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "e", "ip", "it", "mill", "set", "gu", "iu", "ie", "status", "xi", "counter", "di", "pi", " x", "qi", "x", " my", " init", "g", "mi", "ini", "ci", "sim", "id", "j", "I", "ind", "q", "init", "me", "m", "index", "batch", "ii", "us", " I", "is", "li", " ii", "ex", "ui", "cli", "n", "sql", "ix", "im", "ic", "u"], "cards": ["pieces", "card", "clips", "lights", "lands", "ds", "boxes", "flags", "comments", "bytes", "actions", "cells", "services", "ids", "details", "plays", "ways", "holders", "hands", "keys", "codes", "lines", "days", "ends", "olds", "rows", "ards", "styles", "fields", "caps", "posts", "bits", "ads", "gs", "orders", "ls", "values", "tags", "ips", "sticks", "craft", "cats", "times", "photos", "checks", "tests", "ims", "ps", "pins", "groups", "cases", "letters", "pps", "balls", "rules"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\\n        int A = in.nextInt();\\n        int B = in.nextInt();\\n\\n        System.out.println(A * B);\\n        in.close();\\n    }\\n}", "target": "35", "substitutes": {"in": [" din", "query", "en", "add", "std", "In", "null", "it", "check", " IN", "din", "read", "file", "all", "rin", "world", "l", "user", "sum", "ins", "thin", "kin", "bin", "out", "c", "conf", "doc", "d", "inc", "r", "end", "ini", "err", "on", "f", "ind", "can", "IN", "init", "log", "reader", "info", "output", "per", "raw", "readable", "con", "isin", "is", "serv", "stream", "input", "session", "client", "n", "inn", "inner", "cin"], "A": ["AB", "S", "D", "BA", "T", "AF", "mA", "E", "EA", "AC", "AGE", "H", "As", "P", "HA", "RA", "AD", "V", "CA", "SA", "ACC", "AV", "M", "C", "AE", "Alpha", "LA", "AR", "G", "AA", "R", "AL", "IA", "GA", "AP", "L", "UA", "AU", "N", "AN", "An"], "B": ["AB", "BR", "J", "BB", "BF", "D", "BA", "T", "Bill", "E", "b", "IB", "VB", "Y", "USB", "MB", "BY", "P", "Z", "TB", "V", "M", "C", "SB", "BC", "NB", "G", "I", "BE", "BI", "OB", "R", "Bar", "EB", "FB", "LB", "L", "GB", "N", "DB"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n\\n        String s = sc.next();\\n        String[] str = new String[4];\\n        str = s.split(\"\");\\n        if (str[0].equals(str[1]) && str[2].equals(str[3]) && !str[1].equals(str[2]))\\n            System.out.println(\"Yes\");\\n        else if (str[0].equals(str[2]) && str[1].equals(str[3]) && !str[1].equals(str[2]))\\n            System.out.println(\"Yes\");\\n        else if (str[0].equals(str[3]) && str[1].equals(str[2]) && !str[1].equals(str[0]))\\n            System.out.println(\"Yes\");\\n        else\\n            System.out.println(\"No\");\\n    }\\n}", "target": "33", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "dec", "bc", "cc", "sys", "SC", "lc", "rc", "RC", "usc", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "uc", "nc", "system", "cs", "tc", "sq", "pc", "ser", "isc", "desc", "sv", "rs", "sp", "esc"], "s": ["in", "ms", "S", "sts", "sb", "sw", "w", "source", "l", "b", "ns", "strings", "c", "i", "ts", "js", "g", "r", "v", "sys", "h", "gs", "string", "ls", "m", "ss", "sq", "less", "t", "ps", "n", "p", "sv", "rs"], "str": ["list", "chain", "STR", "char", "c", "gr", "comm", "js", "err", "ret", "recomm", "exp", "url", "br", "n", "elt", "p", "val", "sp", "stick", "it", "expr", "text", "rel", "sys", "dat", "st", "exec", "Str", "sl", "cs", "raw", "ev", "txt", "pr", "temp", "arr", "wr", "rep", "old", "obj", "iter", "sts", "vol", "tr", "dr", "strings", "ts", "g", "r", "act", "j", "print", "cl", "attr", "t", "ext", "tree", "desc", "rs", "cur", "ch", "dict", "check", "sw", "sol", "msg", "fr", "req", "ns", "form", "v", "inst", "string", "spec", "att", "data", "inv", "div", "hex", "er", "enc"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int[] h = new int[n];\\n        for(int i = 0;i < n;i++) h[i] = sc.nextInt();\\n        long[] memo = new long[n];\\n        for(int i = 0;i < n;i++) memo[i] = -1;\\n        System.out.println(dp(n, h, n - 1, memo));\\n    }\\n\\n    private static long dp(int n, int[] h, int i, long[] memo) {\\n        if(memo[i] != -1) return memo[i];\\n        else {\\n            long cost1;\\n            long cost2;\\n            if(i == 0) {\\n                cost1 = 0;\\n                cost2 = 0;\\n            }\\n            else if(i == 1) {\\n                cost1 = dp(n, h, i - 1, memo) + Math.abs(h[i] - h[i - 1]);\\n                cost2 = Long.MAX_VALUE;\\n            }\\n            else {\\n                cost1 = dp(n, h, i - 1, memo) + Math.abs(h[i] - h[i - 1]);\\n                cost2 = dp(n, h, i - 2, memo) + Math.abs(h[i] - h[i - 2]);  \\n            }\\n            long result = Long.min(cost1, cost2);\\n            memo[i] = result;\\n            return result;\\n        }\\n    }\\n\\n}\\n", "target": "1", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "src", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "c", "ner", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "rc", " SC", "usc", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "pb", "nc", "sq", "cs", "tc", "system", "ck", "se", "pc", "isc", "syn", "scl", "sv", "Scan", "sp", "esc"], "n": ["nb", "an", "en", "in", "nn", "nw", "non", "s", "w", "network", "nor", "all", "ll", "o", "l", "np", "k", "ns", "pi", "out", "x", "c", "d", "un", "nr", "g", "r", "nm", "nt", "no", "v", "ng", "on", "name", "j", "number", "sn", "ni", "a", "ren", "fn", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "is", "z", "cn", "num", "net", "len", "dn", "N", "gn", "p", "mn"], "h": ["oh", "hr", "ch", "ah", "it", "help", "cache", "history", "w", "uh", "ll", "fr", "zh", "b", "th", "H", "hp", "host", "he", "hm", "g", "ptr", "r", "bh", "hd", "v", "eh", "hl", "y", "ht", "here", "j", "hh", "html", "f", "ph", "rh", "q", "hash", "has", "http", "ha", "ho", "exp", "hw", "hist", "hex", "hz", "dh", "z", "hi", "sh", "ih", "p", "pp", "hs", "hal", "kh"], "i": ["multi", "list", "si", "ip", "set", "PI", "chain", "zi", "di", "my", "point", "ini", "err", "me", "iy", "info", "hi", "p", "phi", "it", "ie", "status", "o", "b", "qi", "x", "y", "sim", "ia", "uri", "q", "init", "ami", "index", "ori", "any", "gi", "ii", "us", "to", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "key", "source", "ios", "iti", "ei", "this", "iri", "g", "ly", "j", "io", "I", "ind", "print", "ij", "remote", "is", "li", "ex", "ui", "client", "ix", "ti", "ai", "e", "xi", "pi", "parent", "mi", "v", "ity", "ci", "oi", "id", "f", "m", "ki", "\u0438", "batch", "ims", "fi", "im", "u"], "memo": ["meti", "memso", "mete", "histbo", "emo", " membo", "histo", " memor", "meoo", "gemo", " mempo", "weightola", "memola", "mmo", "varioa", "zeroo", "prio", "meso", "histmo", "histodo", " memano", "memorybo", "chrono", "sortology", "servmo", "weightoa", " memgo", "servano", "sorto", "emor", "memano", "emle", "Memo", "memorygo", "Meme", "memor", "meta", "memmo", "Memi", "indexmo", "memi", "Mema", "varion", "priology", "sortoo", "indexo", "gembo", "vario", "meos", "indexot", "membo", "chronso", "temo", "memorye", "mee", "prioo", " memoa", "servpo", "memoryi", " memology", "mmbo", "variola", " memso", "zeroe", "memodo", "zeromo", " memot", " memmo", " memon", "mmoo", "temgo", "temodo", "mema", "meo", "mem2", "tembo", "memos", " memola", "Memmo", "memoryo", "temoo", "memology", "weighton", "empo", "memoo", "meto", "servle", "memot", "servo", "memle", "temmo", "memoa", "indexano", "memgo", "Memos", " memodo", "meme", "memorya", "memon", "gemoo", "chronoo", "servor", "zeroos", "pribo", " mem2", "memoryoo", "servot", "me2", "chron2", " memoo", "mempo", " memle", "sortbo", "gemology", "weighto", "mmology"], "cost1": ["coin001", "resource01", "check2", "costOne", "costone", "checkOne", "resource1", "coin01", "const0", " costOne", "cost00", "loss1", "coin00", "resource00", "Cost1", " cost3", "resource001", "callone", " cost001", "Cost3", "scoreOne", "score1", " cost01", "CostOne", " cost0", "cost0", "call001", "call00", "check1", "call1", "loss2", "call01", "loss01", "Costone", "score001", "cost001", "Cost2", "coin1", "check3", "const2", "score2", "scoreone", "loss0", "cost01", " costone", "const1", "cost3", "const01"], "cost2": ["costtwo", "find1", "call2", "weight1", " costtwo", "findtwo", "calltwo", " costTwo", "ranktwo", "rank1", "weighttwo", "adapt62", "Cost1", " cost3", "grade1", " cost56", "Costtwo", "adapt1", "Cost3", "costTwo", "adapt2", "grade56", "find102", "call1", " cost62", "gradetwo", "cost62", "weight2", "weightTwo", "transformtwo", "rank2", "Cost2", " cost102", "cost42", "transform102", "cost56", "grade62", " cost42", "find42", "adapt56", "grade2", "transform1", "cost102", "cost3", "transform2", "gradeTwo", "call42", "rank3", "find2"], "result": ["report", "summary", "feature", "complete", "results", "pair", "total", "integer", "success", "successful", "tmp", "product", "test", "diff", "profile", "func", "cmp", "p", "distance", "description", "goal", "mate", "relation", "r", "date", "ret", "comp", "current", "res", "number", "f", "df", "currency", "value", "duration", "mark", "wrapper", "Result", "function", "valid", "dist", "count", "match", "vector"]}}
{"code": "import java.util.*;\\n\\nclass Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n\\n        //\u5909\u6570\u5b9a\u7fa9\\n        int h,m;\\n        String str,str1,tmp;\\n        StringBuffer sb;\\n\\n        while(true){\\n            //\u30ab\u30fc\u30c9\u306e\u5c71\u6587\u5b57\u5217\u53d7\u53d6\\n            str = sc.nextLine();\\n\\n            //\u7d42\u4e86\u6761\u4ef6\u5b9a\u7fa9\\n            if(str.equals(\"-\")) break;\\n            \\n            //\u30b7\u30e3\u30c3\u30d5\u30eb\u56de\u6570\u53d7\u53d6\\n            str1 = sc.nextLine();\\n            m = Integer.parseInt(str1);\\n\\n            //String\u30af\u30e9\u30b9\u2192StringBuffer\u30af\u30e9\u30b9\\n            sb = new StringBuffer(str);\\n\\n            for(int i = 0;i < m;i++){\\n                //h\u53d7\u53d6\\n                str1 = sc.nextLine();\\n                h = Integer.parseInt(str1);\\n                //\u6587\u5b57\u5217\u5206\u5272\\n                tmp = sb.substring(0,h);\\n                //\u672b\u5c3e\u306b\u6587\u5b57\u5217\u8ffd\u52a0\\n                sb.append(tmp);\\n                //\u982d\u306e\u6587\u5b57\u5217\u524a\u9664\\n                sb.delete(0,h);\\n            }\\n            System.out.println(sb);\\n        }\\n    }\\n}\\n", "target": "216", "substitutes": {"sc": [" scr", "ch", "sb", "src", "sk", "cr", "Sc", "c", "sys", "SC", " sa", " Sc", "rc", " SC", "cv", "gc", "scan", " cr", " ss", "ss", "sq", "system", "cs", " sk", " sp", "sa", "sv", "sp"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tlong n=sc.nextLong();\\n\t\tString s=sc.next();\\n\t\tint count=0;\\n\t\tfor(int i=1;i<s.length();i++) {\\n\t\t\tif(s.substring(i-1, i).equals(s.substring(i, i+1))) {\\n\t\t\t\tcount++;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(n-count);\\n\\n\t}\\n}\\n\\n", "target": "218", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "ko", "sel", "c", "inc", "dec", "bc", "cc", "sys", "cont", "ng", "ok", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "nc", "sq", "cs", "tc", "ck", "pc", "ctl", "isc", "capt", "desc", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "en", "ot", "nn", "total", "w", "ll", "l", "np", "ns", "c", "d", "nr", "nt", "v", "ng", "number", "sn", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "ct", "dn", "N", "p"], "s": ["ms", "S", "sts", "sb", "sf", "sw", "stats", "gets", "l", "b", "strings", "bs", "c", "ts", "js", "str", "g", "r", "sys", "ats", "its", "h", "xs", "gs", "st", "string", "ls", "aws", "sl", "ss", "sq", "qs", "less", "t", "ps", "is", "sql", "p", "sv", "rs", "sp"], "count": ["nb", "old", "add", "size", "list", "total", "nn", "check", "test", "all", "now", "counter", "sum", "const", "found", "with", "th", "c", "amount", "coll", "flag", "d", "find", "nt", "cont", "current", "h", "number", "length", "ind", "print", "hold", "index", "cond", "call", "Count", "nc", "ount", "z", "num", "ct", "sequence"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "iu", "gu", "ie", "o", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "mi", "ini", "ci", "y", "id", "oi", "j", "io", "a", "uri", "ni", "I", "ind", "init", "ami", "m", "index", "ki", "gi", "ii", "us", "to", "is", "li", "base", "z", "hi", "ui", "cli", "ix", "sequence", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint D = sc.nextInt();\\n\t\tint N = sc.nextInt();\\n\t\tint answer = 0;\\n\\n\t\tanswer = (int)Math.pow(100, D) * (N + N / 100);\\n\\n\t\tSystem.out.println(answer);\\n\t}\\n}\\n", "target": "245", "substitutes": {"sc": ["irc", "ch", "sw", "asc", "mc", "osc", "anc", "cr", "Sc", "c", "ctx", "sub", "inc", "cgi", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "system", "cs", "tc", "sq", "ck", "se", "pc", "ctl", "dc", "isc", "scl", "sh", "sv", "sp", "esc"], "D": ["DP", "S", "DS", "PD", "DR", "DD", "WD", "FD", "DA", "DE", "DC", "P", "d", "A", "DX", "V", "DM", "M", "C", "X", "DO", "DL", "R", "DF", "DN", "L", "B", "F", "Q", "Ds", "ND", "Do", "DB", "DI", "DIR"], "N": ["NP", "NI", "S", "NA", "J", "T", "NH", "E", "K", "NM", "H", "EN", "P", "NT", "V", "M", "C", "X", "Ni", "NE", "W", "Number", "I", "G", "TN", "CN", "R", "NN", "NR", "Ns", "Num", "NS", "L", "F", "Q", "n", "O", "SN"], "answer": ["rep", "result", "query", "response", "echo", "ve", "poll", "wer", "next", "say", "term", "question", "support", "see", "offer", "area", "review", "accept", "distance", "reply", "window", "approximately", "ask", "address", "option", "ret", "remember", "search", "interpret", "q", "string", "answered", "value", " unanswered", "vote", "index", "zero", "output", "object", "Answer", "equ", "exit", "message", "n", "sample", "aq", "blank", "energy", "sequence", "entry"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO Auto-generated method stub\\n\t\tScanner scanner = new Scanner(System.in);\\n\t    int N = scanner.nextInt();\\n\t    \\n\t    for(int i=0;i<N;i++) {\\n\t\t    int A = scanner.nextInt();\\n\t\t    if(A%2==0 && A%3!=0 && A%5!=0) {\\n\t    \t\tSystem.out.println(\"DENIED\");\\n\t    \t\tSystem.exit(0);\\n\t\t    }\\n\t    }\\n    \tSystem.out.println(\"APPROVED\");\\n\t  \\n  \t\tscanner.close();\\n\t}\\n\\n}", "target": "113", "substitutes": {}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        // Your code here!\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        \\n        int num = N % 10;\\n        String a = null;\\n        \\n        if(num == 3){\\n            a = \"bon\";\\n        } else if(num == 0||num==1||num==6||num==8){\\n            a = \"pon\";\\n        } else {\\n            a =\"hon\";\\n        }\\n        \\n        System.out.println(a);\\n    }\\n}\\n", "target": "178", "substitutes": {}}
{"code": "\\nimport java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tString s[] = new String[N];\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\ts[i] = sc.next();\\n\t\t}\\n\t\tString t[] = new String[N];\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\tchar[] chars = s[i].toCharArray();\\n\t\t\tArrays.sort(chars);\\n\t\t\tt[i] = new String(chars);\\n\t\t}\\n\t\tArrays.sort(t);\\n\t\tlong ans = 0;\\n\t\tint tmp = 0;\\n\t\tfor (int i = 0; i < N - 1; i++) {\\n\t\t\tif (t[i].equals(t[i + 1])) {\\n\t\t\t\ttmp++;\\n\t\t\t} else {\\n\t\t\t\tans += ((long)(tmp+1)*tmp)/2; \\n\t\t\t\ttmp = 0;\\n\t\t\t}\\n\t\t}\\n\t\t\tans += ((long)(tmp+1)*tmp)/2; \\n\t\t\ttmp = 0;\\n\t\tSystem.out.println(ans);\\n\t}\\n}", "target": "32", "substitutes": {"sc": ["ch", "sync", "sb", "src", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "arc", "sci", "c", "sel", "bc", "cc", "sys", "ng", "SC", "conv", "lc", " Sc", "rc", "usc", "st", "sch", "sec", "sr", "nl", "gc", "cl", "ss", "scan", "nc", "sq", "cs", "tc", "pc", "ser", "isc", "syn", "capt", "scl", "desc", "sv", "Scan", "sp", "esc"], "N": ["NP", "NI", "NG", "S", "NA", "D", "NV", "T", "NM", "NH", "K", "Net", "Length", "Z", "P", "NT", "V", "M", "C", "NUM", "Sn", "NO", "NE", "Size", "NB", "I", "Number", "TN", "We", "ALL", "NOTE", "IN", "Len", "FN", "R", "ANY", "NL", "NR", "NN", "INT", "Ns", "Num", "NC", "NS", "L", "GN", "F", "n", "O", "ND", "SN", "AN"], "s": ["ses", "ms", "S", "sts", "sb", "ds", "gets", "l", "ins", "ns", "strings", "bs", "rs", "ts", "js", "ys", "vs", "str", "ats", "sys", "its", "xs", "gs", "st", "ls", "ss", "sl", "sq", "so", "qs", "cs", "ims", "se", "ps", "is", "sa", "n", "sv", "fs", "hs", "sp"], "i": ["multi", "si", "ip", "PI", "chain", "zi", "di", "my", "point", "ini", "load", "err", "iy", "me", "info", "hi", "phi", "it", "ie", "um", "status", "o", "qi", "ine", "ik", "y", "sim", "uri", "q", "init", "ami", "index", "ori", "ii", "gi", "cli", "ji", "inner", "ic", "fire", "ri", "bi", "iter", "iu", "gu", "mm", "dr", "ios", "iti", "ei", "this", "g", "j", "io", "ni", "I", "ind", "print", "ij", "is", "li", "ex", "ui", "client", "ix", "eric", "ti", "ai", "e", "xi", "pi", "mi", "ity", "ci", "oi", "you", "id", "f", "m", "ki", "\u0438", "batch", "im", "u"], "t": ["tt", "dt", "ot", "at", "total", "it", "mt", "pt", "test", "T", "o", "table", "l", "tr", "b", "wt", "rt", "tem", "c", "template", "ts", "g", "r", "nt", "v", "unt", "type", "bt", "y", "tp", "ty", "ta", "td", "tf", "f", "q", "st", "m", "tm", "ent", "tu", "te", "tc", "att", "to", "txt", "ct", "temp", "n", "p"], "chars": ["chors", " char", "charrs", "quars", "carts", "Chorts", "chearts", "chorts", " charts", "quats", "cars", "chears", "chats", "char", " chrs", "quarts", "cheorts", "charats", "Chats", "charts", "chear", "quans", "cans", " chorts", "charors", " chats", "Chans", "cats", "chans", "Chars", "cors", "chrs", "charars", "crs", " chors", "Charts", "Char"], "ans": ["an", "angs", "uns", "ars", "anks", "ms", "ents", "reads", "rans", "ds", "beans", "orts", "stats", "flags", "aps", "ods", "ows", "ann", "ons", "ns", "ags", "ins", "aus", "ks", "ts", "arts", "lines", "ats", "oos", "lets", "sets", "olds", "anes", "ants", "xs", "posts", "ANS", "ads", "ls", "ams", "ions", "os", "offs", "ums", "amps", "ens", "rs", "outs", "oots", "eds"], "tmp": ["mp", "tt", "nb", "qq", "vt", "obj", "buff", "nd", "perm", "snap", "pkg", "cache", "emp", "img", "md", "uff", "msg", "pool", "png", "mm", "tar", "np", "aaa", "cmp", "pot", "rt", "prime", "dd", "out", "ctx", "prefix", "ptr", "nt", "uu", "tn", "proc", "bt", "cb", "tp", "tf", "td", "po", "needed", "top", "wx", "gt", "sup", "m", "mk", "tm", "good", "sam", "attr", "tu", "pretty", "mb", "gz", "cmd", "etc", "amp", "offset", "xy", "timeout", "offs", "txt", "temp", "important", "sp"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        FastReader in = new FastReader(System.in);\\n        PrintWriter pw = new PrintWriter(System.out);\\n        // Code starts from here //\\n        String s = in.next();\\n        if(s.contains(\"7\")) pw.println(\"Yes\");\\n        else pw.println(\"No\");\\n        pw.close();\\n    }\\n\\n\\n\\n\\n\\n\\n    /****************************************\\n     ******* IO STUFF STARTS FROM HERE ******\\n     ****************************************/\\n\\n    static void debug(Object... obj) {\\n        System.err.println(Arrays.deepToString(obj));\\n    }\\n\\n    static class FastReader {\\n        InputStream is;\\n        private byte[] inbuf = new byte[1024];\\n        private int lenbuf = 0, ptrbuf = 0;\\n\\n        public FastReader(InputStream is) {\\n            this.is = is;\\n        }\\n\\n        public int readByte() {\\n            if (lenbuf == -1) throw new InputMismatchException();\\n            if (ptrbuf >= lenbuf) {\\n                ptrbuf = 0;\\n                try {\\n                    lenbuf = is.read(inbuf);\\n                } catch (IOException e) {\\n                    throw new InputMismatchException();\\n                }\\n                if (lenbuf <= 0) return -1;\\n            }\\n            return inbuf[ptrbuf++];\\n        }\\n\\n        public boolean isSpaceChar(int c) {\\n            return !(c >= 33 && c <= 126);\\n        }\\n\\n        private boolean isEndOfLine(int c) {\\n            return c == '\\n' || c == '\\r' || c == -1;\\n        }\\n\\n        public int skip() {\\n            int b;\\n            while ((b = readByte()) != -1 && isSpaceChar(b)) ;\\n            return b;\\n        }\\n\\n        public String next() {\\n            int b = skip();\\n            StringBuilder sb = new StringBuilder();\\n            while (!(isSpaceChar(b))) {\\n                sb.appendCodePoint(b);\\n                b = readByte();\\n            }\\n            return sb.toString();\\n        }\\n\\n\\n        public String nextLine() {\\n            int c = skip();\\n            StringBuilder sb = new StringBuilder();\\n            while (!isEndOfLine(c)) {\\n                sb.appendCodePoint(c);\\n                c = readByte();\\n            }\\n            return sb.toString();\\n        }\\n\\n        public int nextInt() {\\n            int num = 0, b;\\n            boolean minus = false;\\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\\n            if (b == '-') {\\n                minus = true;\\n                b = readByte();\\n            }\\n            while (true) {\\n                if (b >= '0' && b <= '9') {\\n                    num = (num << 3) + (num << 1) + (b - '0');\\n                } else {\\n                    return minus ? -num : num;\\n                }\\n                b = readByte();\\n            }\\n        }\\n\\n        public long nextLong() {\\n            long num = 0;\\n            int b;\\n            boolean minus = false;\\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\\n            if (b == '-') {\\n                minus = true;\\n                b = readByte();\\n            }\\n\\n            while (true) {\\n                if (b >= '0' && b <= '9') {\\n                    num = (num << 3) + (num << 1) + (b - '0');\\n                } else {\\n                    return minus ? -num : num;\\n                }\\n                b = readByte();\\n            }\\n        }\\n\\n        public double nextDouble() {\\n            return Double.parseDouble(next());\\n        }\\n\\n        public char[] next(int n) {\\n            char[] buf = new char[n];\\n            int b = skip(), p = 0;\\n            while (p < n && !(isSpaceChar(b))) {\\n                buf[p++] = (char) b;\\n                b = readByte();\\n            }\\n            return n == p ? buf : Arrays.copyOf(buf, p);\\n        }\\n\\n        public char readChar() {\\n            return (char) skip();\\n        }\\n    }\\n}", "target": "99", "substitutes": {"in": [" din", "In", "iter", "it", "din", "read", " out", "file", "rin", "run", " cir", "user", "ins", "thin", "rt", "bin", "out", "i", "get", "r", "zin", "ini", "err", "io", " inf", " inh", "IN", " intr", " nin", "reader", "info", "rec", "output", "readable", "gin", "isin", "is", "serv", "stream", "input", "txt", "n", "inn", "inf", "rs"], "pw": ["psw", "spsw", "spws", "pws", " pwr", "Pw", " psw", "spwr", "spw", "Pws", " pws", "Psw", "Pwr", "pwr"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n    Main(){\\n\tScanner sc = new Scanner(System.in);\\n\tint[] a = new int[3];\\n\\n\twhile(sc.hasNext()){\\n\t    int n = sc.nextInt();\\n\t    for(int cs = 0; cs < n; cs++){\\n\t\tfor(int i = 0; i < 3; i++){\\n\t\t    a[i] = sc.nextInt();\\n\t\t    a[i] *= a[i];\\n\t\t}\\n\t\tArrays.sort(a);\\n\t\tString s = \"NO\";\\n\t\tif(a[0]+a[1] == a[2]) s = \"YES\";\\n\t\tSystem.out.println(s); \\n\t    }\\n\t}\\n    }\\n    public static void main(String[] args){\\n\tnew Main();\\n    }\\n}", "target": "65", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "sci", "c", "arc", "sub", "dec", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sec", "nl", "gc", "cl", "scan", "ss", "pb", "nc", "sq", "tc", "ck", "pc", "dc", "ctl", "isc", "capt", "syn", "scl", "desc", "sh", "sv", "sp", "esc"], "a": ["ap", "an", "acs", "la", "aff", "ba", "ab", "eas", "da", "ea", "at", "ai", "au", "e", "eta", "w", "all", "o", "l", "aaa", "b", "changes", "pi", "aux", "area", "x", "el", "c", "am", "d", "A", "act", "v", "ar", "ia", "ma", "j", "f", "ta", "ao", "ack", "alpha", "ac", "ae", "m", "aw", "ata", "abs", "ga", "oa", "aa", "att", "as", "t", "na", "apa", "array", "pa", "z", "sta", "fa", "sa", "ca", "isa", "p", "arr"], "n": ["nb", "nd", "nn", "nw", "nor", "o", "l", "np", "ns", "conf", "c", "d", "nr", "nt", "v", "no", "name", "sn", "fn", "nu", "nl", " N", "nc", "ln", "ne", "t", "na", "z", "cn", "num", "net", "N", "gn", "mn"], "cs": ["CS", " ns", "acs", "ars", "cp", "ms", "wcs", " cons", "ds", "cells", "ns", "cd", "ins", "cas", "rs", "c", "ks", "ts", " c", "js", "vs", "cc", "ics", "co", "ci", "fc", " nos", "cv", "ac", "gs", "Cs", "ls", "gc", "ss", "nc", "ck", "tc", "cf", "spec", "ims", "pc", "ps", "cus", "cn", " cis", "ctr", "cu", "fs", "ic", "css"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "ri", "iu", "o", "zi", "di", "pi", "p", "qi", "x", "c", "ei", "my", "mi", "point", "ini", "ci", "y", "id", "sim", "oi", "j", "io", "I", "ind", "print", "ij", "init", "ki", "asi", "ii", "gi", "info", "ims", "is", "li", "ex", "hi", "ui", "ix", "fi", "im", "ic", "phi", "u", "wi"], "s": ["ms", "des", "S", "ws", "sb", "ds", "w", "stats", "csv", "https", "ows", "als", "l", "b", "ns", "ins", "c", "ts", "d", "js", "str", "r", "v", "ats", "y", "its", "h", "eps", "f", "gs", "prints", "ls", "m", "has", "fs", "ss", "qs", "shows", "less", "t", "ps", "is", "sql", "p", "rs", "hs", "gets"]}}
{"code": "\\n\\nimport java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws IOException{\\n\t\tBufferedReader br =new BufferedReader(new InputStreamReader(System.in));\\n\t\tString i1[]=br.readLine().split(\" \");\\n\t\tint n=Integer.parseInt(i1[0]);\\n\t\tint k=Integer.parseInt(i1[1]);\\n\t\t\\n\t\tlong a[]=new long[n+1];\\n\t\tint count=0;\\n\t\tString line = br.readLine();\\n\t\twhile ( line != null  &&  !line.equals(\"\")) {\\n\t\t    \\n\t    \tint snack=Integer.parseInt(line);\\n\t\t\tString users[]=br.readLine().split(\" \");\\n\t\t\tfor(int i=0;i<users.length;i++)\\n\t\t\t{\\n\t\t\t\ta[Integer.parseInt(users[i])-1]++;\\n\t\t\t}\\n\t\t\t\\n\t\t\tline=br.readLine();\\n\t\t}\\n\t\tfor(int i=0;i<n;i++)\\n\t\t{\\n\t\t\tif(a[i]==0)\\n\t\t\t{\\n\t\t\t\tcount++;\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(count);\\n\t}\\n\\n}\\n", "target": "81", "substitutes": {"br": ["wr", "ber", "hr", "bl", "bb", "ch", "BR", "sb", "Br", "vr", "pt", "mr", "rem", "fr", "tr", "b", "browser", "dr", "buf", "bd", "bs", "cr", "db", "jp", "rel", "gr", "r", "bh", "bc", "bf", "yr", "bt", "bridge", "lr", "pre", "reader", "shr", "bp", "adr", "rb", "repl", "bm", "div", "pr", "ger", "ctr", "be", "bro", "Fr", "bn"], "i1": ["i0", "siars", "si3", "i3", "xi3", "si2", "pi3", "is2", "pi0", "xi1", "xi0", "pi2", "si1", "i2", "piars", "iars", "isars", "is0", " i2", "is1", "xi2", "pi1", " i0", "si0", " i3"], "n": ["nb", "an", "en", "nn", "o", "l", "np", "ns", "pi", "x", "out", "c", "nr", "nt", "v", "nm", "no", "on", "j", "pos", "sn", "length", "nu", "m", "nl", " N", "nc", "ln", "ne", "t", "na", "z", "cn", "num", "len", "N", "p", "mn"], "k": ["ka", "size", "kl", "ke", "kn", "it", "max", "w", "kind", "sk", "key", "K", "b", "ks", "g", "ik", "ek", "v", "ok", "ak", "j", "q", "m", "mk", "km", "t", "z", "p"], "a": ["an", "acs", "la", "ba", "ab", "da", "at", "au", "e", "s", "ama", "all", "o", "l", "aaa", "b", "c", "am", "A", "v", "ma", "ta", "f", "ao", "tta", "ac", "m", "wa", "ata", "xa", "ga", "aa", "as", "t", "data", "na", "array", "z", "sa", "p", "ava", "u"], "count": ["nb", "result", "report", "add", "core", "size", "summary", "list", "total", "quiet", "max", "cache", "cat", "status", "counter", "sum", "const", "found", "conf", "c", "amount", "coll", "flag", "trace", "find", "nt", "score", "cont", "must", "number", "process", "length", "hold", "index", "gc", "call", "Count", "info", "t", "acc", "ount", "z", "stat", "code", "num", "ct", "ctr", "race"], "line": ["record", "Line", "eline", "stay", "ste", "inline", "e", "online", "file", "next", "comment", "block", "chain", "l", "pe", "char", "row", "text", "stroke", "ine", "lo", "trace", "lines", "point", "cell", "lock", "range", "LINE", "liner", "word", "le", "string", "print", "body", "command", "nl", "log", "buffer", "zero", "ln", "url", "se", "link", "page", "pipe", "li", "label", "base", "rule", "code", "message", "sample", "store", "frame", "sequence", "history", "entry"], "snack": ["sniff", "Sniff", " sniff", "Snack", "gniff", "gnack", "gnak", "Snak", " snock", "Snock", "snak", "snock", " snak", "gnock"], "users": ["runners", "videos", "ians", "dates", "parents", "names", "people", "boxes", "they", "mates", "ames", "mails", "user", "ients", "uses", "resources", "workers", "lines", "uploads", "days", "vers", "authors", "rows", "owners", "months", "userc", "posts", " Users", "ers", "packages", "files", "Users", "username", "us", "papers", "usr", "ors", "members", "plugins", "pins", "staff", "groups", "docs", "states", "stars", "pages", "ids"], "i": ["in", "multi", "si", "ip", "PI", "chain", "zi", "di", "c", "point", "ini", "err", "me", "iy", "info", "hi", "phi", "it", "ie", "o", "qi", "y", "sim", "uri", "q", "init", "ami", "MI", "gi", "ii", "to", "base", "cli", "ji", "ic", "history", "ri", "bi", "ms", "gu", "iu", "series", "ei", "this", "g", "j", "I", "remote", "is", "li", "ui", "ix", "yi", "ti", "ai", "xi", "pi", "ice", "mi", "ity", "ci", "oi", "f", "iq", "php", "m", "ki", "\u0438", "batch", "ims", "eu", "fi", "im", "u"], "parseInt": [" parseINT", "reachLong", "reachInteger", "floatINT", "reachINT", " parseInteger", "jsonLong", "reachInt", "jsonInteger", " parseLong", "packINT", "parseINT", "parseLong", "seLong", "jsonInt", "seINT", "seFloat", "parseFloat", "packLong", "seInteger", "packFloat", "floatInt", "packInteger", "seInt", "floatInteger", " parseFloat", "floatLong", "packInt", "parseInteger", "jsonINT"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint h = sc.nextInt();\\n\t\tint n = sc.nextInt();\\n\t\tint sum = 0;\\n\\n\t\tfor(int i = 0; i < n ; i++) {\\n\t\t\tsum += sc.nextInt();\\n\t\t}\\n\\n\t\tif(sum >= h) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t}else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t}\\n\\n}\\n", "target": "95", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "ko", "c", "jp", "comm", "inc", "cgi", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "system", "cs", "tc", "sq", "ck", "tch", "pc", "ctl", "dc", "pl", "isc", "scl", "sh", "sv", "sp", "esc"], "h": ["oh", "hr", "ch", "total", "ah", "s", "w", "uh", "l", "zh", "b", "k", "H", "hp", "he", "c", "g", "bh", "hd", "v", "high", "hl", "ht", "hh", "ph", "q", "hash", "m", "head", "t", "hz", "hi", "count", "num", "sh", "ih", "p", "hs", "kh"], "n": ["nb", "en", "ot", "nd", "nn", "nw", "s", "w", "nor", "o", "l", "np", "ns", "x", "out", "c", "d", "nr", "nt", "v", "no", "nm", "j", "sn", "ni", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "num", "net", "N", "p", "mn"], "sum": ["add", "summary", "size", "si", "total", "vol", "set", "um", "dim", "cal", "cum", " summed", "SU", "out", "mix", "black", "mass", "sim", "must", "fac", "cu", "alph", "sup", "alpha", "ass", "hash", "weight", "Sum", "tail", "sam", "mu", "tu", "ho", "zero", "hum", "scale", "acc", "num", "count", "su", "sa", "mem", "match", "mean", "average"], "i": ["bi", "ms", "multi", "si", "ti", "ai", "iter", "ip", "it", "gu", "iu", "ie", "zi", "xi", "di", "pi", "by", "qi", "ei", "mi", "ini", "ci", "id", "sim", "j", "io", "I", "ind", "q", "init", "m", "ki", "\u0438", "ii", "gi", "us", "is", "li", "ui", "cli", "ix", "im", "ic", "phi"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\npublic class Main\\n{\\n    \\n\tpublic static void main(String[] args) throws Exception{\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString[] s = br.readLine().trim().split(\" \");\\n\t\tint a = Integer.parseInt(s[0]);\\n\t\tint b = Integer.parseInt(s[1]);\\n\t\tint c = Integer.parseInt(s[2]);\\n\t\tint k = Integer.parseInt(s[3]);\\n\t\tint ans = 0;\\n\t    if(k >= a){\\n\t        ans += a;\\n\t        k -= a;\\n\t    }\\n\t    else{\\n\t        ans = k;\\n\t        k = 0;\\n\t    }\\n\\n\t    if(k >= b){\\n\t        k -= b;\\n\t    }\\n\t    else{\\n\t        k = 0;\\n\t    }\\n\t\\n\t    if(k >= c){\\n\t        ans -= c;\\n\t        k -= c;\\n\t    }\\n\t    else{\\n\t        ans = ans-k;\\n\t    }\\n\t    System.out.println(ans);\\n\t}\\n}\\n\\n", "target": "56", "substitutes": {"br": ["wr", "ber", "bi", "hr", "bl", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "er", "tr", "buf", "dr", "bd", "bs", "cr", "db", "gr", "str", "bh", "bf", "bt", "sp", "bridge", "sr", "lr", "shr", "bp", "rb", "bm", "pr", "sh", "be", "bro", "bn"], "s": ["ies", "ses", "ms", "parts", "S", "ws", "sts", "ds", "w", "l", "ins", "ns", "strings", "details", "rs", "tes", "ts", "js", "ys", "vs", "v", "ats", "its", "eps", "xs", "els", "bits", "gs", "ashes", "ls", "aws", "ers", "ss", "sl", "abs", "sq", "qs", "os", "ims", "t", "ps", "n", "sql", "sv", "fs", "hs", "gets"], "a": ["an", "la", "av", "ba", "ab", "eas", "access", "ea", "ai", "au", "ace", "o", "l", "aaa", "art", "area", "x", "i", "am", "ad", "A", "r", "act", "ar", "ia", "ak", "ta", "ma", "admin", "ao", "va", "alpha", "app", "ae", "ac", "any", "ga", "oa", "aa", "as", "t", "apa", "pa", "na", "sa", "ca", "n", "auto", "p", "al", "u"], "b": ["bi", "ba", "ab", "bl", "be", "bb", "ib", "e", "fb", "sb", "it", "wb", "erb", "o", "eb", "l", "bs", "gb", "by", "db", "x", "ob", "i", "bo", "bg", "g", "r", "bc", "v", "bf", "y", "bar", "cb", "j", "h", "f", "back", "beta", "mb", "to", "B", "rb", "n", "p", "u"], "c": ["abc", "cp", "cur", "ch", "e", "com", "cod", "cm", "mc", "l", "p", "ec", "cr", "d", "g", "r", "bc", "v", "fc", "C", "ci", "co", "cc", "cb", "f", "lc", "cv", "rc", "ac", "m", "gc", "uc", "nc", "tc", "cs", "cf", "etc", "con", "t", "dc", "cn", "ce", "ct", "n", "ca", "cu", "ic", "unc", "u"], "k": ["an", "ka", "kl", "ke", "kr", "kn", "ch", "w", "kind", "sk", "key", "mc", "kg", "o", "kan", "gh", "kid", "K", "l", "rek", "ijk", "ko", "x", "kick", "ikk", "d", "i", "conf", "kb", "ks", "ik", "g", "ek", "r", "kar", "v", "kt", "ku", "ok", "ak", "j", "f", "ack", "q", "kk", "kw", "sch", "m", "mk", "kj", "ki", "km", "gate", "ck", "tc", "tk", "z", "dk", "n", "unk", "p", "uk", "kernel", "kh", "u"], "ans": ["asks", "an", "angs", "uns", "ars", "anks", "ians", "ms", "ents", "mas", "acts", "acs", "names", "yes", "rans", "ds", "sk", "aos", "aps", "ands", "ann", "es", "ank", "ons", "ns", "ins", "ags", "aus", "ids", "anc", "cas", "vals", "anas", "ks", " scans", "cons", "aces", "arts", "vs", " means", "ats", "oss", "olds", "anes", "ates", "ants", "posts", "aned", "ANS", "ads", "gs", "ls", "ers", "ams", "lan", "cs", "us", "os", "as", " spans", "cus", "offs", "ations", "amps", "ens", "rs", "AN", "leans", "eds"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner in = new Scanner(System.in);\\n\t\t\\n\t\tint n = in.nextInt();\\n\t\tint d = in.nextInt();\\n\t\t\\n\t\t// \u5b88\u5099\u7bc4\u56f2\\n\t\td = d*2 +1;\\n\t\t\\n\t\tif(n%d == 0) {\\n\t\t\tSystem.out.println(n/d);\\n\t\t} else {\\n\t\t\tSystem.out.println(n/d +1);\\n\t\t}\\n\t\t\\n\t\tin.close();\\n\t}\\n}\\n", "target": "238", "substitutes": {"in": [" din", "en", "std", "pin", "In", "it", "sol", " IN", "din", "file", "all", "rin", "world", "l", "user", "sum", "ins", "thin", "kin", "bin", "out", "doc", "i", "conf", "inc", "sin", "r", "or", "ini", "line", "err", "id", "pid", "io", "conv", "h", "ind", "IN", "log", "scan", "reader", "OUT", "info", "ln", "per", "con", "readable", "gin", "isin", "is", "vin", "nin", "serv", "input", "session", "client", "inn", "inf", "inner", "cin"], "n": ["en", "nn", "o", "l", "ns", "c", "i", "nr", "ner", "nm", "nt", "r", "v", "no", "on", "name", "j", "h", "f", "sn", "m", "nl", "ln", "ne", "t", "num", "N", "p"], "d": ["dx", "dt", "nd", "dL", "D", "ds", "fd", "dir", "ld", "b", "di", "cd", "dd", "c", "v", "id", "sd", "f", "de", "ind", "m", "pd", "dm", "t", "dh", "od", "p"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scan = new Scanner(System.in);\\n        int num = scan.nextInt();\\n        String str = scan.next();\\n        String alpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\\n        String result = \"\";\\n\\n        for (int i = 0; i < str.length(); i++) {\\n            char c = str.charAt(i);\\n            int wantGet = (alpha.indexOf(c) + num) % 26;\\n            String[] alphaList = alpha.split(\"\");\\n            result += alphaList[wantGet];\\n        }\\n\\n        System.out.println(result);\\n    }\\n}", "target": "13", "substitutes": {"scan": ["an", "scroll", "in", "query", " Scan", "report", " scanner", "ch", "sync", "pass", "check", "set", "sm", "read", "connect", "send", "re", "ann", "clean", "run", "sum", "by", "row", "out", "seek", "trans", "sc", "get", "walk", "parse", "sin", "ner", "r", "find", "skip", "sys", "proc", "search", "can", "reach", "gate", "san", "system", "se", "ser", "scale", "n", "store", "sur", "auto", "sv", "Scan", "sp"], "num": ["nb", "eng", "total", "success", "check", "um", "cal", "next", "np", "sum", "th", "om", "x", "nr", "nm", "no", "end", "dec", "NUM", "name", "conv", "number", "Number", "nu", "index", "mon", "m", "zero", "Num", "con", "to", "na", "offset", "su", "n", "node", "uni"], "str": ["list", "cur", "obj", "it", "vol", "s", "set", "msg", "status", "fr", "expr", "STR", "tr", "dr", "char", "text", "out", "ts", "sc", "gr", "r", "seq", "ar", "name", "j", "res", "string", "st", "m", "Str", "buffer", "output", "exp", "spec", "url", "data", "t", "br", "input", "txt", "n", "pr", "desc", "orig", "p", "enc", "arr"], "alpha": ["arch", "list", "si", " Alpha", "asc", "up", "all", "acl", "face", "alias", "char", "meta", "asa", "prefix", "parent", "escape", "capital", "primary", "ar", "iso", "ame", "Alpha", "name", "ma", "a", "admin", "alph", "top", "title", "ac", "init", "beta", "initial", "pretty", "system", "upper", "hex", "acc", "base", "pha", "ca", "letters", "important", "auto", "xa", "history"], "result": ["report", "response", "summary", "list", "feature", "expression", "complete", "results", "total", "success", "cache", "product", "test", "diff", "comment", "term", "out", "text", "rendered", "goal", "prefix", "relation", "r", "ret", "current", "search", "make", "res", "number", "string", "value", "answer", "command", "buffer", "Result", "wrapper", "transform", "output", "continue", "valid", "data", "reason", "request", "message", "match", "sequence", "description"], "i": ["yi", "bi", "in", "multi", "si", "ti", "ai", "ip", "it", "iu", "gu", "ie", "o", "zi", "xi", "di", "pi", "qi", "x", "ei", "my", "mi", "ini", "ci", "y", "id", "oi", "j", "a", "I", "ind", "ij", "m", "ori", "ki", "batch", "go", "ii", "gi", "us", "is", "li", "hi", "ui", "ji", "n", "ix", "im", "ic", "phi", "u", "ri"], "c": ["abc", "cp", "ch", "vc", "cat", "l", "ctrl", "b", "k", "p", "char", "arc", "xc", "sc", "fc", "v", "C", "ci", "cc", "cont", "a", "f", "lc", "h", "ac", "m", "uc", "tc", "cf", "t", "dc", "code", "ce", "ct", "n", "cu", "ic", "unc", "u", "cor"], "wantGet": ["needWant", " wantGET", "WantGet", "needPut", "doneGet", "cheatGet", "cheatGET", "doneGET", "needsWant", "needsGet", "needsGET", "wantGetting", "donePut", "needGet", " wantSet", "WantSet", "WantGetting", "wantWant", "wantGET", "needsPut", "doneWant", " wantGetting", "WantGET", "needGET", "wantPut", "cheatSet", "wantSet", "cheatGetting"], "alphaList": ["aL", " alphaArray", "aMap", "maMap", "alphalist", "alist", " alphaL", " alphaSet", "alphaL", "maL", "accList", "accSet", "betaSet", " alphaMap", " alphalist", "aList", "alphaArray", "malist", "betaArray", "alphaMap", "betalist", "alphaSet", "acclist", "maList", "betaList", "accArray"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\\n\tpublic static void main(String[] args) {\\n\t\t(new Main()).execute();\\n\t}\\n\tpublic void execute() {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t// \u6574\u6570\u306e\u5165\u529b\\n\t\tint  N = sc.nextInt();\\n\t\tLong A[] = new Long[N+2] ;\\n\t\tLong B[] = new Long[N+1] ;\\n\\n\t\tfor( int i = 1 ; i <= N + 1; i ++ ) {\\n\t\t\tA[i] = sc.nextLong();\\n\t\t}\\n\t\tfor( int i = 1 ; i <= N ; i ++ ) {\\n\t\t\tB[i] = sc.nextLong();\\n\t\t}\\n\\n\t\t//\\n\t\tLong yoryoku = 0L ;\\n\t\tLong mCountSum = 0L ;\\n\t\tfor( int i = 1 ; i <= N ; i ++ ) {\\n\t\t\tLong mCount = 0L ;//\u30e2\u30f3\u30b9\u30bf\u30fc\u3092\u5012\u3057\u3066\u3082\u3089\u3048\u308b\u4eba\u6570\\n\t\t\tif(yoryoku <= A[i]) {//\u4f59\u529b\u3088\u308a\u591a\u3044\u5834\u5408\\n\t\t\t\tmCount =  yoryoku ;//\u307e\u305a\u4f59\u529b\u5206\u3092\u5012\u3059\\n\t\t\t\tLong nokori = A[i] - yoryoku ;//\u6b8b\u308a\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u6570\\n\t\t\t\tif(nokori <= B[i]) {//\u6b8b\u308a\u3092\u5012\u305b\u308b\u306a\u3089\\n\t\t\t\t\tmCount = A[i] ;//\u5168\u6ec5\u3055\u305b\u308b\\n\t\t\t\t\tyoryoku = B[i] - nokori ; //\u4f59\u529b\u3092\u66f4\u65b0\\n\t\t\t\t}else {//\u5012\u305b\u306a\u3044\u306a\u3089\u5012\u305b\u308b\u3060\u3051\\n\t\t\t\t\tmCount += B[i] ;\\n\t\t\t\t\tyoryoku = 0L ;\\n\t\t\t\t}\\n\t\t\t}else {//\u4f59\u529b\u3088\u308a\u5c11\u306a\u3044\u30e2\u30f3\u30b9\u30bf\u30fc\u306a\u3089\\n\t\t\t\tmCount = A[i] ; //\u5168\u6ec5\u3055\u305b\u308b\\n\t\t\t\tyoryoku = B[i] ; //\u3059\u3079\u3066\u3092\u4f59\u529b\u306b\u3059\u308b\\n\t\t\t}\\n\t\t\tmCountSum += mCount ;\\n\t\t}\\n\t\t//\u6700\u5f8c\u306e\u753a\\n\t\tif(0 < yoryoku) {\\n\t\t\tif(yoryoku <= A[N+1]) {//\u4f59\u529b\u3088\u308a\u591a\u3044\u5834\u5408\\n\t\t\t\tmCountSum += yoryoku ;\\n\t\t\t}else {\\n\t\t\t\tmCountSum += A[N+1] ; //\u5168\u6ec5\u3055\u305b\u308b\\n\t\t\t}\\n\t\t}\\n\\n\\n\t\tSystem.out.println(mCountSum);\\n\t}\\n}\\n", "target": "159", "substitutes": {}}
{"code": "import java.util.*;\\nimport java.io.*;\\npublic class Main {\\n    static InputStreamReader r;\\n    public static void main(String[] args) throws Exception {\\n        r = new InputStreamReader(System.in);\\n        int c = r.read();\\n        int nextC = c + 1;\\n\\n        System.out.println((char)nextC);\\n    }\\n\\n    public static String nextString() throws Exception {\\n        String res = \"\";\\n        while (true) {\\n            int c = r.read();\\n            if (c == 32 || c == 0 || c == -1) {\\n                break;\\n            }\\n            res += (char)c;\\n        }\\n        return res;\\n    }\\n\\n    public static int nextInt() throws Exception {\\n        return Integer.parseInt(nextString());\\n    }\\n\\n    public static long nextLong() throws Exception {\\n        return Long.parseLong(nextString());\\n    }\\n}", "target": "150", "substitutes": {"r": ["rate", "hr", "rn", "it", "right", "w", "mr", "rem", "fr", "re", "rd", "dr", "rt", "cr", "i", "d", "rel", "nr", "g", "ar", "rg", "err", "rl", "rm", "h", "f", "rc", "q", "m", "sr", "R", "rx", "rw", "reader", "rec", "rr", "t", "br", "rb", "n", "pr", "p", "er", "rs", "rar", "ro"], "c": ["abc", "cp", "ch", "com", "cache", "cod", "cat", "cm", "cam", "mc", "l", "b", "const", "cmp", "cd", "pointer", "anc", "p", "cr", "conf", "xc", "arc", "ec", "i", "\u00e7", "d", "sc", "bc", "cc", "fc", "C", "ci", "v", "cont", "cb", "ar", "conv", "f", "h", "lc", "a", "rc", "ac", "m", "gc", "cl", "uc", "nc", "cs", "cf", "tc", "con", "pc", "dc", "t", "count", "ce", "ca", "ct", "div", "n", "ctr", "cu", "ic", "unc", "col", "u", "cor"], "nextC": ["nextG", "replyPC", "replyc", "continuec", "nextJC", "nextc", "replyJC", "successC", "adjc", "adjC", "continueC", "adjPC", "replyC", "continueL", "adjJC", " nextPC", "continueG", " nextL", " nextJC", "successL", "nextPC", " nextG", "successc", "successG", " nextc", "nextL"], "res": ["rep", "result", "resh", "val", "des", "results", "pers", "resp", "json", "ress", "resolution", "tx", "red", "msg", "rem", "css", "key", "re", "fr", "chain", "Res", "req", "rs", "out", "RES", "cons", "gr", "js", "str", "clus", "prefix", "rel", "sys", "rev", "ret", "resource", "conv", "terms", "reg", "rest", "pas", "arr", "cs", "us", "ps", "txt", "pres", "p", "respons", "reset"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n\\n        int N = scanner.nextInt();\\n        long[] A = new long[N + 1];\\n        long[] B = new long[N];\\n\\n        for (int i = 0 ; i < N + 1 ; i++) {\\n            A[i] = scanner.nextLong();\\n        }\\n\\n        for (int i = 0 ; i < N ; i++) {\\n            B[i] = scanner.nextLong();\\n        }\\n\\n        long answer = 0;\\n        for (int i = 0 ; i < N ; i++) {\\n            answer += Math.min(A[i], B[i]);\\n            B[i] = B[i] - Math.min(A[i], B[i]);\\n            answer += Math.min(A[i + 1], B[i]);\\n            A[i + 1] -= Math.min(A[i + 1], B[i]);\\n        }\\n\\n        System.out.println(answer);\\n      }\\n}\\n", "target": "159", "substitutes": {"scanner": ["canner", "annner", "caninner", "anner", "Scanter", "caner", "caninger", "scanter", "Scaninner", "canener", " scanener", "scaninger", "Scaner", "anninger", "annter", "Scanner", "Scaninger", "canter", "scanener", "scaninner", " scaner", "Scanener", "scaner", " scanter", " scaninner"], "N": ["NP", "NG", "NI", "None", "S", "NA", "J", "UN", "D", "NV", "T", "NH", "NM", "K", "Net", "Y", "P", "NT", "V", "M", "C", "NO", "Ni", "NE", "Size", "NB", "I", "G", "TN", "Node", "R", "ANY", "NL", "NN", "NR", "NOW", "OUT", "Ns", "Num", "NC", "NS", "L", "MAN", "F", "n", "GN", "ND", "O", "SN", "AN", "Name"], "A": ["AY", "AB", "At", "Al", "AT", "Auth", "This", "BA", "AF", "EA", "AC", "U", "JA", "ATA", "H", "As", "P", "RA", "Ar", "AH", "CA", "MA", "SA", "AV", "Array", "ACC", "ACT", "M", "AE", "And", "Alpha", "LA", "AR", "I", "G", "AA", "R", "TA", "App", "AL", "ACE", "IA", "The", "Answer", "AP", "L", "Av", "AU", "AM", "F", "All", "AST", "API", "AN", "An", "RAM"], "B": ["BG", "AB", "Bs", "S", "BR", "BB", "BU", "J", "Two", "RB", "BA", "Builder", "CB", "T", "E", "U", "IB", "b", "VB", "Y", "USB", "BY", "P", "BT", "Bern", "TB", "Blue", "V", "BD", "Array", "M", "C", "SB", "BC", "WB", "NB", "I", "G", "BE", "BI", "OB", "Bar", "BS", "R", "EB", "FB", "LB", "Buffer", "PB", "Other", "Answer", "BM", "BL", "L", "F", "GB", "DB"], "i": ["multi", "list", "si", "ip", "set", "chain", "zi", "di", "c", "my", "point", "ini", "err", "iy", "me", "info", "exp", "hi", "phi", "it", "ie", "status", "o", "qi", "y", "sim", "ia", "uri", "q", "init", "ami", "ii", "gi", "cli", "ji", "inner", "ic", "ri", "bi", "iu", "iti", "ei", "this", "j", "io", "I", "ind", "ij", "is", "li", "ui", "client", "ger", "ix", "ies", "ti", "ai", "xi", "pi", "parent", "mi", "ity", "v", "ci", "iso", "oi", "id", "m", "ki", "\u0438", "batch", "ims", "fi", "im", "u"], "answer": ["result", "query", "response", "echo", "record", "ve", "ace", "cache", "um", "ee", "wer", "next", "poll", "question", "after", "see", "api", "evaluate", "offer", "review", "oe", "description", "reply", "window", "trace", "version", "v", "ask", "address", " answered", "ret", "option", "remember", "notice", "error", "search", "interpret", "number", "ell", "q", "value", "answered", " unanswered", "vote", "eni", "replace", "ze", "output", "continue", "Answer", "equ", "uno", "onse", "array", "ce", "message", "store", "aq", "install", "energy", "archive", "entry"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n\tpublic static void main(String[] args){\\n\t\t//new Main().printHelloWorld();\\n\t\tSystem.out.println(new Main().ITP1_1_B(Integer.parseInt(new Scanner(System.in).next())));\\n\t}\\n\\n\tpublic void printHelloWorld(){\\n\t\tSystem.out.println(\"Hello World\");\\n\t}\\n\\n\tpublic int ITP1_1_B(int x){\\n\t\treturn x*x*x;\\n\t}\\n}", "target": "36", "substitutes": {}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n  public static void main (String[] args) {\\n\\n    Scanner sc = new Scanner(System.in);\\n    \\n    int N = sc.nextInt();\\n    String[] W = new String[N];\\n\\n    for (int i = 0; i < N; i++) {\\n      W[i] = sc.next();\\n    }\\n\\n    sc.close();\\n\\n    String result = \"Yes\";\\n\\n    for (int i = 0; i < N; i++) {\\n      for (int j = i + 1; j < N; j++) {\\n        if (W[i].equals(W[j])) {\\n          result = \"No\";\\n          break;\\n        }\\n      }\\n      if (result == \"No\") {\\n        break;\\n      }\\n    }\\n\\n    String start = \"\";\\n\\n    if (result == \"Yes\") {\\n      for (int i = 0; i < N; i++) {\\n        if (i != 0) {\\n          String[] s_ = W[i].split(\"\");\\n          if (s_[0].equals(start)) {\\n            start = s_[s_.length - 1];\\n          } else {\\n            result = \"No\";\\n            break;\\n          }\\n        } else {\\n          String[] s_ = W[i].split(\"\");\\n          start = s_[s_.length - 1];\\n        }\\n      } \\n    }\\n\\n    System.out.println(result);\\n\\n  }\\n\\n}", "target": "70", "substitutes": {"sc": ["ch", "sb", "sync", "sw", "src", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "row", "arc", "c", "sub", "inc", "bc", "cc", "sys", "screen", "SC", "lc", " Sc", "rc", "usc", "sec", "sch", "gc", "cl", "ss", "scan", "uc", "nc", "sq", "cs", "tc", "system", "pc", "ctl", "ser", "dc", "isc", "capt", "scl", "sv", "Scan", "sp", "esc"], "N": ["NP", "NI", "NG", "S", "NA", "J", "D", "T", "Ne", "NH", "NM", "K", "No", "Net", "Y", "P", "NT", "V", "M", "C", "NOR", "Sn", "NO", "Ni", "NE", "Size", "NB", "I", "G", "TN", "FN", "NOTE", "Node", "R", "ANY", "NL", "NR", "NN", "Ns", "Num", "NC", "NS", "L", "GN", "F", "n", "ND", "SN", "AN"], "W": ["SW", "EW", "VW", "MW", "Ws", "S", "J", "WAR", "WR", "w", "WT", "T", "Watch", "E", "WER", "H", "Y", "P", "Wh", "V", "WA", "M", "C", "WW", "FW", "WB", "Writer", "G", "WS", "NW", "We", "WE", "DW", "WC", "CW", "Windows", "OW", "WM", "RW", "GV", "Write", "WP", "VS", "L", "F", "Q", "BW", "Week"], "i": ["in", "multi", "si", "iii", "ip", "ir", "PI", "chain", "l", "zi", "di", "ini", "err", "ret", "me", "info", "slice", "hi", "n", "p", "phi", "it", "ie", "um", "status", "qi", "ik", "y", "sim", "name", "ia", "uri", "q", "init", "ami", "index", "ori", "asi", "ii", "gi", "us", "to", "base", "cli", "ji", "inner", "ic", "history", "ri", "bi", "record", "iter", "iu", "iti", "ei", "this", "iri", "g", "io", "a", "I", "ind", "print", "ij", "is", "li", "ex", "ui", "client", "ix", "entry", "ti", "ai", "e", "xi", "pi", "mi", "ity", "v", "ci", "id", "iq", "m", "ki", "\u0438", "batch", "ims", "eu", "im", "u"], "result": ["report", "response", "summary", "feature", "stay", "complete", "results", "section", "total", "successful", "success", "false", "true", "product", "test", "status", "comment", "term", "chain", "folder", "goal", "RESULTS", "str", "relation", "r", "clear", "draw", "type", "ret", "current", "date", "search", "error", "make", "res", "done", "runner", "process", "currency", "string", "value", "answer", "command", "join", "Result", "transform", "debug", "output", "confirmed", "continue", "function", "valid", "reason", "rule", "request", "message", "reverse", "grade", "match", "sequence", "description", "event"], "j": ["jo", "bi", "bj", "oj", "obj", "jc", "J", "json", "it", "pt", "key", "l", "dj", "b", "k", "jj", "aj", "jl", "jp", "uj", "js", "str", "g", "v", "ja", "y", "h", "ph", "jac", "ij", "q", "_", "kj", "m", "br", "z", "jump", "job", "other", "ev", "ji", "n", "pr", "ix", "note"], "start": ["add", "part", "iter", "open", "it", "help", "tmp", "set", "check", "test", "next", "source", "send", "from", "first", "art", "step", "started", "starting", "Start", "char", "style", "get", "prefix", "window", "before", "origin", "str", "end", "ST", "parse", "search", "print", "st", "string", "init", "star", "shift", "index", "join", "pre", "use", "rest", "begin", "offset", "base", "input", "client", "entry", "starter", "sp", "reset", "stop"], "s_": ["abs_", "ts_____", "series_", "ss_", "js_", "s_____", " s_____", "str_", "ls_", "sym_____", "s______", "str______", "os_", "ds_", "sym_", "se_", " s______", "series______", "ts_"]}}
{"code": "import java.util.Scanner;\\n\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint N = sc.nextInt();\\n\t\tint D = sc.nextInt() * 2 + 1;\\n\t\tint ans =0;\\n\t\tans = N/D;\\n\t\tif (N%D > 0) {ans++;}\\n\\n\t\tSystem.out.println(ans);\\n\\n\t}\\n}\\n", "target": "238", "substitutes": {"sc": ["ch", "sync", "sw", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "ko", "c", "sub", "inc", "bc", "cc", "sys", "fc", "ok", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "system", "cs", "tc", "sq", "ck", "se", "pc", "ctl", "isc", "scl", "sh", "sv", "sp", "esc"], "N": ["NP", "NI", "NG", "S", "NA", "J", "T", "NM", "NH", "K", "H", "P", "A", "NT", "V", "M", "C", "X", "NE", "NB", "I", "G", "TN", "NW", "FN", "CN", "R", "NL", "NN", "NR", "Ns", "Num", "CNN", "NS", "L", "SN", "B", "GN", "MN", "n", "ND", "O", "NC", "AN"], "D": ["SIZE", "DP", "S", "DS", "J", "PD", "T", "E", "DD", "FD", "DE", "H", "Z", "DC", "P", "d", "V", "DM", "M", "C", "DO", "G", "I", "R", "Di", "DF", "DN", "L", "B", "F", "Ds", "Q", "ND", "O", "DB", "DI", "DIR"], "ans": ["asks", "an", "uns", "acs", "ars", "reads", "ms", "ents", "anks", "s", "ds", "aps", "aos", "ann", "actions", "ons", "ins", "ns", "outs", "ags", "vals", "ks", " scans", "arts", "lines", " means", "ats", "nets", "olds", "anes", "ates", "ants", "eps", "xs", "posts", "ANS", "can", "gs", "ls", " Ans", "ads", "orders", "ips", "ions", "lan", "cs", "os", "nan", "as", " spans", "ores", "offs", "ums", "books", "n", "amps", "ens", "AN", "ids", "eds"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws Exception {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tString[] days={\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\",\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"};\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString W = in.readLine();\\n\\n\t\tlong ans =-1;\\n\t\tfor(int i = 0;i<days.length;i++){\\n\t\t\tif(W.equals(days[i])){\\n\t\t\t\tans=1;\\n\t\t\t\tfor(int k=i+1;k<days.length;k++){\\n\t\t\t\t\tif(\"SUN\".equals(days[k])){\\n\t\t\t\t\t\tbreak;\\n\t\t\t\t\t}\\n\t\t\t\t\tans++;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tif(ans != -1){\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\\n\t}\\n\\n\\n}\\n", "target": "136", "substitutes": {}}
{"code": "import java.util.*;\\nimport java.util.PriorityQueue;\\n\\npublic class Main\\n{\\n  public static void main(String[] args)\\n  {\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    PriorityQueue<Double> q = new PriorityQueue<Double>();\\n    for(int i = 0; i < n; ++i)\\n    {\\n      double x = sc.nextDouble();\\n      q.add(x);\\n    }\\n    while(q.size() > 1)\\n    {\\n      double a = q.poll();\\n      double b = q.poll();\\n      q.add((a+b)/2.0);\\n    }\\n    double ans = q.poll();\\n\\n    System.out.println(ans);\\n  }\\n\\n}\\n", "target": "232", "substitutes": {"sc": [" scr", "ch", "sync", "sb", "sw", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "sci", "c", "bc", "cc", "sys", "fc", "SC", "sd", "lc", " Sc", "rc", "usc", "st", "sch", "sec", "nl", "gc", "cl", "ss", "pb", "nc", "sq", "tc", "cs", "pc", "ctl", "isc", "scl", "sh", "sv", "sp", "esc", "qu"], "n": ["nb", "nv", "en", "size", "nd", "nn", "nw", "l", "np", "ns", "c", "d", "nr", "nt", "nm", "no", "ng", "j", "number", "sn", "ni", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "net", "N", "gn", "mn"], "q": ["query", "qt", "list", "dq", "qq", "quit", "ch", "qa", "pkg", "it", "sync", "check", "ve", "e", "vc", "quick", "msg", "ll", "pe", "ctrl", "ld", "req", "qv", "form", "db", "ctx", "qi", "get", "gr", "comm", "iv", "ig", "ue", "v", "ox", "y", "quote", "j", "wait", "needed", "eq", "iq", "ack", "le", "cl", "sq", "ck", "qs", "info", "z", "Q", "queue", "aq", "sh", "p", "requ", "pp", "que", "pg", "qu"], "i": ["bi", "multi", "ms", "si", "ai", "iter", "ip", "it", "gu", "ie", "iu", "zi", "xi", "di", "pi", "qi", "g", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "io", "I", "ind", "init", "me", "m", "index", "gi", "ii", "us", "info", "t", "is", "li", "ex", "ui", "cli", "ix", "im", "ic", "phi", "u"], "x": ["dx", "mx", "px", " xx", "tx", "xe", "xx", "xd", "ax", "xf", "xi", "xt", "fx", "xc", "xp", "el", "ux", "v", "gal", "ox", "y", "X", "xb", "wx", "xs", "xxxx", "xml", "inx", "rx", "php", "xy", "z", "ex", "ct", "ix", "xa", "lex"], "a": ["ap", "an", "la", "ba", "ab", "da", "ea", "at", "ai", "au", "s", "ax", "l", "aaa", "aj", "area", "am", "A", "act", "\u00e4", "ar", "ia", "ma", "ao", "va", "app", "ac", "alpha", "ae", "za", "oa", "sta", "aa", "as", "na", "pa", "apa", "sa", "ca", "aq", "al"], "b": ["nb", "bi", "ba", "ab", "bb", "ib", "fb", "sb", "eb", "bd", "bs", "gb", "ob", "db", "bo", "by", "bg", "or", "bc", "bf", "y", "cb", "j", "back", "body", "mb", "blue", "bis", "bp", "br", "two", "B", "rb", "be"], "ans": ["ies", "an", "uns", "asks", "ars", "anks", "ms", "ents", "rans", "aps", "aos", "ands", "ann", "mails", "ons", "ins", "ns", "aus", "ros", "anas", "ks", "cons", "arts", "ats", "anes", "ates", "ants", "aned", "ANS", "gs", "ads", "ls", "ots", "cs", "ades", "os", "as", "ps", "ums", "amps", "ens", "leans", "eds"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner s = new Scanner(System.in);\\n        int num = s.nextInt();\\n        int[] a = new int[num];\\n        int cnt = 0;\\n        for (int i = 0; i < num; i++) {\\n            a[i] = s.nextInt();\\n        }\\n\\n        while (allEven(a)) {\\n            division(a);\\n            cnt++;\\n        }\\n        System.out.println(cnt);\\n        s.close();\\n    }\\n\\n    public static void division(int[] num) {\\n        for (int i = 0; i < num.length; i++) {\\n            num[i] /= 2;\\n        }\\n    }\\n\\n    public static boolean allEven(int[] num) {\\n        int cnt = 0;\\n        boolean ret = false;\\n        for (int i = 0; i < num.length; i++) {\\n            if (num[i] % 2 == 0) {\\n                cnt++;\\n            }\\n        }\\n        if (cnt == num.length) {\\n            ret = true;\\n        }\\n        return ret;\\n    }\\n}", "target": "196", "substitutes": {"s": ["ses", "ms", "S", "ws", "sts", "sb", "sf", "sw", "ds", "sm", "sol", "stats", "gets", "es", "l", "b", "ns", "ins", "c", "ts", "sc", "js", "sys", "ats", "search", "h", "xs", "gs", "south", "ls", "http", "fs", "sam", "sl", "ss", "ssl", "sq", "so", "less", "bis", "abs", "self", "se", "as", "sort", "ps", "is", "sa", "syn", "p", "sv", "rs", "hs", "sp"], "num": ["en", "multi", "total", "tmp", "dim", "np", "coord", "sum", "unit", "common", "nm", "no", "mod", "Number", "nu", "go", "su", "n", "man", "orig", "bn", "eng", "perm", "cache", "um", "cal", "won", "save", "alph", "init", "index", "Num", "con", "valid", "to", "one", "net", "len", "temp", "nb", "none", "tim", "nt", "number", "den", "nom", "digit", "mu", "tu", "zero", "na", "other", "count", "note", "dec", "mat", "uf", "missing", "nn", "non", "img", "ord", "msg", "bid", "rem", "cum", "mont", "buf", "th", "loc", "form", "un", "NUM", "top", "m", "mon", "div", "hex", "prim", "im", "nam"], "a": ["ap", "an", "aff", "la", "ba", "ab", "da", "ea", "au", "img", "o", "l", "aaa", "b", "aux", "area", "am", "A", "era", "act", "ar", "ia", "ta", "ma", "ao", "ack", "alpha", "ac", "ae", "ha", "ga", "oa", "sta", "aa", "att", "as", "na", "pa", "sa", "ca", "p"], "cnt": [" cctr", "acount", "Cnt", "lcst", " count", "cctr", "cred", " cnc", "dount", "cst", "Crand", "cumnt", " crand", "cumNT", "Cnc", "acct", " Cct", "cNT", "cct", "conpt", "conret", " Count", "acnc", " cred", "Cpt", "cnc", "nct", "cpt", " Cred", " cpt", "dnt", "dnc", "cret", "conNT", "acpt", "acnt", " cct", "crand", "cumpt", "nNT", "lcnt", "cumctr", "connt", "lcNT", "nount", "CNT", " Cnt", " cret", "Count", " cst", "Cctr", "npt", " cNT", "count", "lcrand", "nnt", "nret", "dct", "nnc", "acred", "Cst"], "i": ["multi", "si", "ip", "set", "PI", "chain", "zi", "di", "my", "ini", "err", "iy", "me", "info", "hi", "phi", "it", "ie", "o", "qi", "ik", "y", "sim", "uri", "q", "init", "ami", "ori", "gi", "ii", "us", "base", "cli", "ji", "ic", "fire", "ri", "bi", "iu", "gu", "key", "et", "ei", "g", "j", "io", "ni", "I", "ij", "is", "li", "ui", "client", "ix", "yi", "ti", "ai", "xi", "pi", "ice", "mi", "v", "ity", "ci", "oi", "id", "m", "ki", "\u0438", "batch", "ims", "eu", "fi", "er", "im", "u", "wi"], "ret": ["result", "report", "bool", "ft", "fit", "success", "it", "last", "mt", "cat", "red", "status", "rem", "not", "pret", "re", "Ret", "aux", "rt", "out", "jp", "rel", "def", "flag", "reset", "RET", "nt", "deg", "ref", "rev", "cont", "rets", "det", "rm", " Ret", "res", "gt", "print", "reg", "ry", "cond", "alt", "backed", "mb", "cmd", "continue", "ert", "valid", "txt", "elt", "val", "arr"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        \\n        Scanner sc = new Scanner(System.in);\\n        int[] A = new int[3];\\n\\n        for(int i = 0; i < 3; i++ ) A[i] = sc.nextInt();\\n        \\n        Arrays.sort(A);\\n        int ans = A[2] - A[0];\\n        \\n        System.out.println(ans);\\n    }\\n}\\n", "target": "247", "substitutes": {"sc": ["ch", "sync", "sw", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "c", "bc", "cc", "sys", "screen", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "uc", "nc", "system", "tc", "cs", "sq", "spec", "pb", "pc", "capt", "isc", "desc", "scl", "syn", "sv", "sp", "esc"], "A": ["AY", "AB", "At", "NA", "AT", "This", "PA", "BA", "D", "AF", "mA", "EA", "AC", "U", "JA", "AI", "H", "Y", "As", "HA", "P", "RA", "Ar", "CA", "MA", "ASC", "SA", "AV", "ACC", "M", "ACT", "C", "WA", "AE", "And", "Alpha", "Array", "LA", "AR", "W", "a", "I", "G", "AA", "App", "ANG", "GA", "IA", "The", "AP", "L", "Av", "AU", "B", "AM", "All", "N", "API", "AN", "An"], "i": ["spin", "bi", "in", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "gu", "iu", "ie", "key", "chain", "xi", "b", "di", "pi", "qi", "x", "c", "my", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "io", "uri", "I", "ind", "ij", "q", "init", "me", "m", "ki", "batch", "gi", "ii", "used", "is", "li", "hi", "ui", "cli", "n", "client", "ix", "im", "ic", "phi", "u", "ri"], "ans": ["asks", "angs", "uns", "an", "ars", "reads", "ms", "ents", "names", "rans", "orts", " plans", "ands", "ann", "mails", "AN", "ins", "faces", "trans", "ks", " scans", "pan", "arts", "lines", "uploads", " means", "ats", "sets", "olds", "anes", "ates", "ants", "posts", "ANS", "ads", "ls", "orders", "lan", "ades", "nan", " spans", "offs", "books", "amps", "outs", "ids", "eds"]}}
{"code": "import java.util.*;\\nimport static java.lang.Math.*;\\n\\npublic class Main{\\n\tpublic static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int cnt_all = 0;\\n        for(int i=1; i<=n; i+=2){\\n            int cnt = 0;\\n            for(int j=1;j<=n;j++){\\n                if(i>=j && i%j==0){\\n                    cnt++;\\n                }\\n            }\\n            if(cnt == 8){\\n                cnt_all++;\\n            }\\n        }\\n        System.out.println(cnt_all);\\n    }\\n}", "target": "85", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "c", "bc", "cc", "sys", "screen", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "uc", "nc", "system", "cs", "sq", "se", "pc", "acc", "capt", "isc", "desc", "scl", "syn", "sv", "Scan", "sp", "esc"], "n": ["nb", "en", "nn", "total", "w", "all", "o", "l", "np", "k", "ns", "out", "x", "c", "d", "g", "nm", "nt", "no", "v", "ng", "number", "sn", "ni", "q", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "num", "net", "N", "p", "mn"], "cnt_all": ["cnc_both", "cgt_none", "cnc_all", "cnt_full", "count_all", "cnt_both", "cnt2all", "cnt2empty", "count_total", "cnt_empty", "count_full", "cnc_total", "cnt_total", "count_empty", "cgt_total", "cnt2total", "cnt2both", "cnt_none", "cnt2full", "cgt_ALL", "cgt_all", "cnt_ALL", "cnc_full"], "i": ["bi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "zi", "xi", "di", "pi", "by", "x", "ei", "ik", "mi", "v", "ini", "ci", "y", "sim", "iso", "iq", "I", "ij", "ami", "init", "m", "ki", "ii", "gi", "us", "is", "li", " Xi", "hi", "ui", "ji", "ix", "im", "ic", "phi", "u", "ri"], "cnt": [" cctr", "Cnt", "cctr", " cnc", " rcnt", " rcpt", " rcnc", "scnt", "Cnc", "cnd", " rcctr", "cct", "Cot", "mcnt", "scctr", "ctnt", " cn", " cot", "cnc", "scpt", "cpt", "scnc", " cpt", "mcct", " cnd", "mcot", " cct", "mcnd", "ctnd", "ctpt", "cot", "mcpt", "ctn", "mcn", "Cct", "cn", "mcnc"], "j": ["jo", "bi", "oj", "bj", "si", "obj", "jc", "J", "json", "max", "pt", "o", "fr", "kid", "l", "jit", "b", "dj", "k", "jj", "jas", "aj", "jl", "bs", "bo", "el", "jp", "uj", "d", "js", "g", "off", "ion", "v", "ja", "y", "f", "sp", "ind", "ij", "q", "jac", "kj", "m", "ne", "br", "to", "t", "z", "job", "jump", "other", "ji", "pr", "div", "p", "ge", "im", "u"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        // Your code here!\\n        Scanner sc = new Scanner(System.in);\\n        String S = sc.next();\\n        int zeroCnt = 0;\\n        int oneCnt = 0;\\n        int min = 0;\\n        for(int i = 0;i <S.length();i++){\\n            if(S.charAt(i) == '0'){\\n                zeroCnt++;\\n            }\\n        }\\n        oneCnt = S.length()-zeroCnt;\\n        min = Math.min(zeroCnt,oneCnt);\\n        System.out.println(min*2);\\n    }\\n}\\n", "target": "14", "substitutes": {}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    String S = sc.next();\\n    String T = sc.next();\\n    int A = sc.nextInt();\\n    int B = sc.nextInt();\\n    String U = sc.next();\\n    if (U.equals(S)){\\n      System.out.printf(\"%d %d\", A-1, B);\\n    }else{\\n      System.out.printf(\"%d %d\", A, B-1);\\n    }\\n  }\\n}\\n", "target": "155", "substitutes": {"sc": ["irc", "ch", "sync", "sw", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "ko", "sel", "c", "scope", "sci", "cons", "inc", "cgi", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", " Sc", "rc", " SC", "usc", "sch", "sec", "gc", "cl", "pb", "nc", "sq", "cs", "tc", "ck", "tch", "pc", "ctl", "dc", "capt", "isc", "scl", "sh", "sv", "sp", "esc"], "S": ["CS", "SF", "s", "D", "E", "STR", "SU", "SL", "SE", "H", "Y", "Z", "P", "TS", "V", "SA", "ST", "M", "C", "X", "SD", "SI", "SC", "I", "G", "R", "L", "F", "Q", "N", "SS"], "T": ["XT", "GT", "VT", "WT", "TM", "E", "Y", "Z", "P", "TR", "TB", "TS", "V", "M", "C", "W", "G", "TT", "TN", "R", "TA", "t", "L", "Tu", "F", "N", "O", "Type"], "A": ["AB", "NA", "AT", "D", "PA", "BA", "AF", "EA", "AC", "H", "As", "P", "HA", "AS", "RA", "AD", "AH", "CA", "V", "SA", "AV", "ACC", "C", "X", "AE", "Alpha", "LA", "AR", "a", "I", "AA", "R", "TA", "AL", "IA", "AP", "L", "N", "API", "AN", "An"], "B": ["AB", "Bs", "BR", "BB", "BU", "J", "D", "BER", "BA", "E", "b", "IB", "VB", "Y", "Z", "P", "BY", "TB", "V", "BD", "BO", "M", "C", "SB", "BC", "WB", "NB", "G", "I", "BE", "BI", "OB", "R", "BS", "BL", "L", "GB", "N", "DB"], "U": ["OU", "UV", "UD", "D", "EU", "E", "SU", "US", "u", "UR", "H", "Y", "UU", "MU", "P", "Z", " u", "V", "Ut", "UE", "M", "UX", "X", "UM", "W", "I", "UT", "G", "UF", "UP", "R", "Us", "L", "F", "UL", "UID", "O", "UI", "UC"]}}
{"code": "import java.util.Scanner;\\n\\n \\npublic class Main {\\n \\n\tpublic static void main(String[] args) {\\n\t\t\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint H = sc.nextInt();\\n\t\tint N = sc.nextInt();\\n\t\t\\n\t\tfor(int i = 0; i < N; i++) {\\n\t\t\tH = H - sc.nextInt();\\n\t\t}\\n\\n\t\tif(H <= 0) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t}else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t\tsc.close();\\n\t}\\n\t\\n}", "target": "95", "substitutes": {"sc": ["irc", "ch", "sync", "sb", "cle", "asc", "mc", "osc", "scrib", "ctrl", "anc", "cr", "ec", "Sc", "ko", "arc", "c", "ctx", "sub", "inc", "cgi", "bc", "cc", "sys", "fc", "co", "SC", "lc", "rc", "usc", "st", "sch", "sec", "gc", "cl", "scan", "pb", "nc", "system", "tc", "cs", "sq", "ck", "pc", "ctl", "dc", "isc", "capt", "syn", "scl", "sh", "sv", "sp", "esc"], "H": ["HE", "J", "HTTP", "Eh", "D", "HH", "HR", "WH", "T", "NH", "K", "U", "HI", "HD", "HO", "MH", "Y", "OH", "FH", "HC", "HA", "P", "DH", "HM", "V", "TH", "High", "M", "C", "HB", "X", "He", "CH", "h", "HS", "His", "I", "G", "HT", " h", "HQ", "HL", "HF", "L", "B", "F", "Q", "HK"], "N": ["NP", "NI", "NG", "S", "NA", "T", "Ne", "NH", "K", "NM", "No", "P", "V", "NT", "M", "C", "Sn", "NO", "Ni", "NE", "W", "NB", "I", "TN", "Len", "R", "NL", "NR", "NN", "Ns", "Num", "NC", "NS", "L", "GN", "n", "ND", "SN", "NY"], "i": ["bi", "in", "multi", "ms", "si", "ti", "iter", "e", "ip", "it", "ai", "set", "gu", "iu", "ie", "b", "di", "pi", "qi", "x", "mi", "no", "v", "ini", "ci", "y", "sim", "id", "j", "uri", "I", "q", "init", "m", "ii", "gi", "us", "t", "is", "li", "ex", "ui", "cli", "n", "ix", "ic", "phi", "u"]}}
{"code": "import java.util.*;\\n\\n \\nclass Main {\\n \\n    private static Scanner sc = new Scanner(System.in);\\n \\n    public static void main(String[] args) {\\n        String s[] =new String[5];\\n        for(int i=0;i<5;i++){\\n            s[i]=sc.next();\\n        }\\n        int k=Integer.parseInt(sc.next());\\n        int antn[] =new int[5];\\n        for(int i=0;i<5;i++){\\n            antn[i]=Integer.parseInt(s[i]);\\n        }\\n        for(int r=0;r<5;r++){\\n            for(int t=0;t<4;t++){\\n                if(Math.abs(antn[r]-antn[t])>k){\\n                    System.out.println(\":(\");\\n                    return;\\n                }\\n            }\\n        }\\n        System.out.println(\"Yay!\");\\n    }\\n}", "target": "66", "substitutes": {"sc": ["irc", "ch", "sb", "sync", "cle", "asc", "mc", "osc", "scrib", "anc", "cr", "Sc", "arc", "sel", "c", "cons", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "pb", "nc", "system", "cs", "tc", "sq", "uc", "tch", "pc", "dc", "ctl", "isc", "desc", "scl", "sv", "sp", "esc"], "s": ["ses", "ms", "S", "ws", "sts", "ds", "sol", "w", "ubs", "l", "services", "ins", "ns", "strings", "bs", "c", "ts", "ogs", "js", "str", "vs", "v", "ats", "its", "h", "eps", "xs", "gs", "sels", "prints", "ls", "gins", "fs", "aws", "string", "m", "ss", "abs", "sq", "so", "qs", "cs", "ims", "se", "ps", "is", "n", "p", "sv", "rs", "hs", "gets"], "i": ["in", "multi", "si", "ip", "ir", "PI", "chain", "l", "zi", "di", "point", "ini", "iy", "me", "info", "hi", "n", "p", "phi", "it", "ie", "o", "qi", "y", "sim", "name", "uri", "q", "init", "ori", "ii", "gi", "us", "cli", "ji", "inner", "ic", "ri", "bi", "iter", "iu", "gu", "ios", "iti", "ei", "this", "j", "io", "I", "ind", "print", "mu", "is", "li", "ui", "client", "ix", "ti", "ai", "xi", "pi", "ful", "mi", "v", "ci", "id", "oi", "you", "uci", "iq", "ki", "\u0438", "batch", "ims", "im"], "k": ["ka", "kl", "kr", "ke", "it", "max", "w", "sk", "key", "o", "K", "ko", "ks", "kb", "ik", "g", "ek", "v", "ku", "start", "ok", "ak", "j", "kk", "q", "kw", "m", "mk", "km", "ck", "tk", "z", "dk", "unk", "n", "p", "ikk"], "antn": ["artne", "ntnu", "annotne", "rtg", "otn", "rtnames", "annotk", "ANTn", "annotn", "antk", "ANTg", "otns", "rtn", "ANTna", "ntn", "antsns", "entN", "otnu", "entns", "antsn", "antsne", "ntk", "antg", "antsN", "artnu", "rtna", "antna", "antne", " antna", "antnames", "otne", "artns", "ANTnames", "annotns", "entk", "artn", "entn", "antns", "antnu", "entne", " antg", "antN", "ntne", " antnames", "ntN", "ntns"], "r": ["result", "hr", "at", "e", "right", "ri", "w", "mr", "o", "re", "fr", "run", "l", "tr", "art", "b", "rd", "dr", "rid", "rad", "rt", "cr", "out", "rel", "d", "gr", "nr", "g", "v", "ar", "y", "err", "range", "j", "h", "res", "a", "rc", "q", "reg", "ry", "m", "R", "sr", "rec", "rr", "br", "rb", "pr", "n", "p", "er", "rs", "ru", "u", "ro"], "t": ["qt", "tt", "dt", "ot", "at", "ti", "total", "it", "pt", "w", "tx", "lat", "fort", "T", "et", "not", "o", "l", "tr", "b", "wt", "rt", "out", "unit", "c", "ts", "tw", "g", "tz", "trace", "nt", "kt", "v", "unt", "type", "y", "bt", "ty", "tf", "j", "ta", "td", "gt", "q", "yt", "st", "ent", "ant", "te", "tc", "to", "z", "tree", "txt", "ct", "n", "p"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n    private static Scanner sc = new Scanner(System.in);\\n\\n    public static void main(String args[]) {\\n\\n        String s = sc.nextLine();\\n\\n        int l = s.length();\\n\\n        String ans1, ans2;\\n\\n        StringBuilder sb1 = new StringBuilder();\\n        StringBuilder sb2 = new StringBuilder();\\n\\n        for (int i=0; i < l; i++) {\\n            sb1.append(i % 2 == 0 ? \"1\" : \"0\");\\n            sb2.append(i % 2 != 0 ? \"1\" : \"0\");\\n        }\\n\\n        ans1 = sb1.toString();\\n        ans2 = sb2.toString();\\n\\n        int d1 = distance(s, ans1);\\n        int d2 = distance(s, ans2);\\n\\n        System.out.println(d1 > d2 ? d2 : d1);\\n\\n    }\\n\\n    private static int distance(String s, String target) {\\n        int c = 0;\\n        char[] s1 = s.toCharArray();\\n        char[] s2 = target.toCharArray();\\n        for (int i=0; i < s.length(); i++) {\\n            if (s1[i] != s2[i])\\n                c++;\\n        }\\n        return c;\\n    }\\n\\n}\\n", "target": "146", "substitutes": {"sc": ["ch", "sb", "sync", "asc", "mc", "osc", "cr", "ec", "Sc", "sel", "bc", "cc", "fc", "sys", "SC", "lc", "rc", "sch", "sec", "nl", "gc", "cl", "ss", "nc", "sq", "cs", "tc", "pc", "isc", "desc", "scl", "soc", "sv", "rs", "sp", "esc"], "s": ["ies", "in", "ms", "S", "space", "ws", "sts", "sb", "sw", "ds", "set", "w", "stats", "source", "es", "b", "ns", "strings", "bs", "ts", "js", "str", "g", "ys", "r", "v", "ats", "sys", "search", "its", "f", "eps", "xs", "h", "gs", "string", "st", "ls", "m", "http", "south", "sam", "sl", "ss", "abs", "sq", "self", "less", "qs", "os", "ims", "t", "ps", "is", "n", "sql", "p", "sv", "rs", "hs", "sp"], "l": ["list", "kl", "lt", "ll", "o", "b", "lit", "loc", "x", "el", "d", "lp", "left", "tl", "g", "lo", "v", "ml", "j", "f", "lc", "length", "le", "ls", "m", "nl", "sl", "ln", "isl", "dl", "ol", "t", "li", "L", "z", "pl", "len", "n", "p"], "ans1": [" ansit", "ants3", "ms01", "annA", " ansA", "an1", "ann1", "insOne", "msOne", " ansOne", "ins1", "ants1", " ansb", " ans01", "ansb", "ansA", "antsOne", "msb", "ans01", "insb", "ats3", "ansit", "ansOne", "ats1", "antsA", "an3", "ans3", "annOne", "atsit", "ann3", "ms1", " ans3", "ins01", "anit"], "ans2": ["us2", "aus4", "usTwo", "vsTwo", "us02", "ats2", "osTwo", "userstwo", "unstwo", "ostwo", "ats02", "users2", "uns2", "os02", "vs02", "atsTwo", "aus2", "austwo", "ans4", "names2", "os2", "anstwo", "namesTwo", "ansTwo", "users4", "ans02", "atstwo", "uns02", "ats4", "unsTwo", "names02", "namestwo", "ausTwo", "vs2", "usersTwo"], "sb1": ["bs2", "bhA", "sb01", "sg01", "stab1", "soc11", "sc2", "sbA", "sb001", "bh11", "stab51", "bj11", "sb51", "bh1", "sq01", "sb100", "bs001", "sc1", "bh01", "rb1", "sgA", "rb001", "sg11", "bs1", "bs51", "soc1", "bj100", "rb51", "stab100", "soc100", "sqA", "sb11", "sq1", "rb2", "sq11", "sg1", "stab11", "soc51", "sc51", "sc001", "bj51", "bj1"], "sb2": ["bs2", "sftwo", "gb2", "sf2", "rb42", "zb2", "lpTwo", "zbtwo", "lp42", "gbTwo", "soctwo", "bs42", "rb1", "sbtwo", "sbTwo", "gb42", "bs1", "rbtwo", "kb1", "sf1", "kb42", "sb42", "rb2", "soc2", "zb1", "kbtwo", "sbto", "lp2", "kb2", "sfto", "gbtwo", "socTwo", "zbto", "lptwo", "bstwo", "bsto", "soc42"], "i": ["in", "multi", "si", "ip", "chain", "zi", "di", "my", "point", "ini", "err", "span", "me", "info", "hi", "phi", "it", "ie", "o", "qi", "y", "sim", "uri", "q", "init", "ami", "index", "ii", "gi", "us", "to", "cli", "ji", "ri", "bi", "iter", "iu", "gu", "series", "ei", "g", "j", "a", "I", "ind", "print", "remote", "mu", "is", "li", "ex", "ui", "ix", "\u00ed", "ti", "ai", "xi", "pi", "mi", "ci", "id", "oi", "you", "f", "m", "ki", "\u0438", "batch", "ims", "sql", "im", "wi"], "d1": ["dt11", " D001", "dONE", "d91", " d91", "d3", "dl1", "DONE", "dt1", "dd2", "d11", "dt2", " D2", " d3", " D91", "r001", " d11", "dd3", "D2", "r91", "r1", "dl2", "dl3", "r2", "d001", " D1", "D1", "D3", "dd1", "dt3", "ddONE", "D11", "dlONE", " d001"], "d2": [" d02", "v1", "ld2", "d3", "dt2", "vtwo", "v3", "ldtwo", "dtTwo", "D02", "da2", " d3", "dtwo", "Dtwo", " dtwo", "ld1", "daTwo", "ld02", "D2", "dTwo", "da3", "datwo", "d02", "v2", "D1", "D3", "dt3", "dttwo", " dTwo"], "target": ["result", "hat", "json", "null", "test", "next", "source", "term", "table", "alias", "b", "arg", "Target", "arget", "jp", "rel", "goal", "this", "origin", "v", "current", "default", "top", "gt", "pattern", "join", "self", "buffer", "output", "t", "link", "base", "dest", "auto", "match", "stop"], "c": ["cp", "size", "w", "cm", "o", "k", "cd", "p", "cr", "conf", "xc", "arc", "x", "d", "r", "bc", "cc", "fc", "C", "cont", "ci", "v", "cb", "h", "a", "lc", "cv", "rc", "ac", "m", "gc", "uc", "nc", "tc", "cs", "con", "pc", "t", "dc", "count", "ce", "num", "ca", "n", "ct", "code", "cu", "unc", "u"], "s1": ["hs2", "sOne", " sOne", "s11", " s01", "ss2", "gs11", "S11", "s01", "SOne", "S01", "gsOne", "ss8", " s11", "s8", "gs01", " s8", "gs1", "ss11", "hs1", "hs8", "hs11", "ss1", "S1"], "s2": ["strother", "jsB", "servother", "js2", "iother", "i02", "i3", " s02", "servB", "str3", "i2", "js0", " s0", "s3", "serv2", "s0", "serv0", "jsother", "sother", " s3", "s02", " sB", "str2", "str02", "sB", " sother"]}}
{"code": "import java.util.Scanner;\\n  \\nclass Main{\\n  public static void main(String[] arg){\\n    int n, m, l;\\n    int [][] a,b;\\n    long [][] c;\\n \\n    Scanner in = new Scanner(System.in);\\n\\n    n = in.nextInt();\\n    m = in.nextInt();\\n    l = in.nextInt();\\n\\n    a = new int[n][m];\\n    b = new int[m][l];\\n    c = new long[n][l];\\n\\n    for(int i=0; i<a.length; i++){\\n        in.nextLine();\\n        for(int j=0; j<a[0].length; j++)\\n            a[i][j] = in.nextInt();\\n    }\\n\\n    for(int i=0; i<b.length; i++){\\n        in.nextLine();\\n        for(int j=0; j<b[0].length; j++)\\n            b[i][j] = in.nextInt();\\n    }\\n\\n    for(int i=0; i<c.length; i++)\\n        for(int j=0; j<c[0].length; j++)\\n            c[i][j] = 0;\\n\\n    for(int i=0; i<n; i++)\\n        for(int j=0; j<l; j++)\\n            for(int k=0; k<m; k++)\\n                c[i][j] += a[i][k]*b[k][j];\\n \\n    for(int i=0,j; i<c.length; i++){\\n        for(j=0; j<c[0].length-1; j++)\\n            System.out.print(c[i][j] + \" \");\\n        System.out.println(c[i][j]);\\n    }\\n \\n  }\\n}", "target": "204", "substitutes": {"arg": ["Arg", "param", "argument", "test", "re", "foo", "template", "flag", "Args", " argument", "config", "command", "rest", " arguments", "use", "GV", "cmd", "arp", "params", " Arg", "spec", "path", "class", "txt"], "n": ["nb", "an", "en", "ot", "nn", "e", "o", "np", "ns", "x", "am", "d", "un", "mn", "out", "g", "r", "nm", "nt", "no", "v", "y", "on", "h", "sn", "fn", "nu", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "net", "dn", "N", "p", "u"], "m": ["ms", "md", "e", "s", "mt", "sm", "cm", "mr", "um", "mc", "mm", "o", "u", "pi", "x", "am", "d", "g", "r", "mi", "nm", "v", "M", "y", "ml", "rm", "ma", "h", "f", "q", "me", "mk", "tm", "mu", "dm", "t", "gm", "z", "bm", "em", "len", "p", "im", "al", "mn"], "l": ["fl", "list", "kl", "s", "ll", "o", "lu", "lit", "lin", "el", "lp", "d", "g", "ly", "r", "v", "ml", "lc", "length", "le", "q", "shell", "ls", "ul", "nl", "sl", "ln", "ol", "dl", "t", "li", "L", "z", "pl", "len", "p", "u"], "a": ["ap", "an", "aff", "av", "acs", "ba", "ab", "eas", "ea", "at", "ai", "au", "e", "s", "o", "aaa", "aj", "area", "aux", "am", "A", "act", "r", "ar", "ia", "ta", "ma", "ao", "va", "alpha", "ac", "ae", "app", "AA", "ata", "abs", "ga", "oa", "aa", "as", "att", "sta", "na", "apa", "array", "fa", "sa", "ca", "p", "al", "u"], "b": ["nb", "bi", "ba", "ab", "bl", "be", "bb", "ib", "fb", "e", "sb", "zb", "bu", "ub", "buff", "wb", "o", "eb", "ob", "bs", "gb", "bo", "bin", "db", "binary", "bg", "r", "bh", "bc", "bf", "y", "bt", "cb", "reb", "back", "beta", "pb", "mb", "bis", "bp", "br", "beck", "base", "z", "B", "rb"], "c": ["cp", "cur", "ch", "e", "com", "cache", "cm", "csv", "mc", "o", "chain", "ctrl", "cd", "crit", "ec", "cr", "arc", "xc", "conf", "out", "d", "sc", "g", "r", "cos", "bc", "cc", "co", "C", "cont", "v", "fc", "config", "conv", "h", "cu", "lc", "f", "rc", "cv", "ac", "gc", "cs", "cf", "tc", "etc", "con", "t", "dc", "cn", "count", "ce", "ct", "ca", "p", "circle", "ic", "unc", "dec", "u"], "in": ["en", "add", "std", "ain", "at", "In", "ch", "it", "din", "file", "from", "all", "rin", "mm", "source", "sum", "ins", "pi", "lin", "by", "bin", "out", "conf", "doc", "d", "get", "inc", "r", "end", "ini", "line", "err", "on", "io", "ind", "al", "can", "IN", "init", "log", "scan", "reader", "info", "ln", "con", "as", "t", "readable", "is", "isin", "nin", "stream", "input", "ex", "net", "gin", "serv", "inn", "inf", "inner", "sql", "er", "ic", "cin"], "i": ["yi", "bi", "si", "ti", "ai", "ip", "it", "iu", "ie", "ir", "status", "zi", "xi", "di", "iti", "pi", "p", "by", "qi", "this", "ei", "g", "ion", "ik", "mi", "ity", "ini", "ci", "y", "id", "sim", "name", "ia", "io", "uri", "iq", "I", "ind", "ij", "q", "init", "ami", "iy", "index", "me", "ori", "ki", "ii", "info", "gi", "ims", "to", "is", "li", "hi", "ui", "ji", "cli", "ix", "fi", "im", "ic", "phi", "ri"], "j": ["poly", "adj", "json", "pt", "ax", "jl", "bo", "out", "uj", "js", "ion", "off", "ja", "err", "ng", "res", "kj", "br", "job", "p", "sp", "bj", "oj", "it", "s", "ie", "o", "jas", "x", "y", "sim", "on", "q", "je", "to", "ev", "ji", "pr", "jo", "bi", "ot", "obj", "jc", "key", "tr", "dr", "jj", "el", "jp", "og", "g", "ju", "io", "ind", "ij", "t", "ody", "ix", "ijk", "note", "bl", "e", "J", "fr", "kid", "jit", "dj", "aj", "by", "v", "att", "z", "jump", "er", "im", "col"], "k": ["ka", "kl", "ke", "kr", "kn", "it", "wk", "kind", "ark", "sk", "key", "kg", "kid", "K", "ijk", "ko", "ks", "isk", "ik", "g", "ek", "kt", "ku", "y", "ok", "ak", "kk", "kw", "q", "kj", "mk", "ki", "km", "ck", "tk", "z", "unk", "uk", "kh", "u"]}}
{"code": "\\nimport java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n      String[] nyu=sc.nextLine().split(\" \");\\n   //  String nyu=sc.nextLine();\\n\\nint A=Integer.parseInt(nyu[0]);\\nint B=Integer.parseInt(nyu[1]);\\n\\nString ny[]=sc.nextLine().split(\"\");\\n\\nfor(int i=0;i<ny.length;i++){\\nif(i==B-1){\\nSystem.out.print(ny[i].toLowerCase());\\n}else{\\nSystem.out.print(ny[i]);\\n}\\n\\n}\\n\\n\t}\\n}", "target": "71", "substitutes": {"sc": [" scr", "ch", "sync", "sb", "src", "asc", "sm", "mc", "osc", "cr", "Sc", "sel", "c", "sub", "bc", "cc", "sys", "screen", "SC", "lc", "rc", "usc", "sch", "sec", "scan", "cl", "ss", "nc", "sq", "cs", "system", "pc", "syn", "capt", "desc", "scl", "isc", "sh", "sv", "sp", "esc"], "nyu": ["snc", "ryU", "naiu", "nac", "snu", "nyiu", "nyU", "ryc", "naU", "nau", "ryu", "ryiu", "snU", "nyc", "sniu"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint x = sc.nextInt();\\n\t\tint n = sc.nextInt();\\n\t\tString[] nums = new String[n];\\n\t\tfor (int i = 0; i < n; i++){\\n\t\t\tnums[i] = sc.next();\\n\t\t}\\n\t\tsc.close();\\n\t\tfor(int count = 0;;count++){\\n\t\t\tif (!(Arrays.asList(nums).contains(String.valueOf(x-count)))){\\n\t\t\t\tSystem.out.println(x-count);\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tif (!(Arrays.asList(nums).contains(String.valueOf(x+count)))){\\n\t\t\t\tSystem.out.println(x+count);\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\t}\\n}\\n", "target": "228", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "arc", "sci", "c", "sub", "inc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sec", "gc", "cl", "scan", "ss", "pb", "nc", "sq", "cs", "tc", "ck", "se", "pc", "ctl", "dc", "isc", "capt", "scl", "sh", "sv", "sp", "esc"], "x": ["dx", "px", "hello", "check", "tx", "w", "xx", "xff", "xd", "ax", "xf", "l", "xi", "xt", "step", "xc", "fx", "xp", "ctx", "v", "ux", "X", "ox", "y", "on", "h", "f", "xs", "wx", "xml", "rx", "index", "batch", "exp", "t", "hex", "xy", "z", "ex", "xxx", "ct", "ix", "p", "history"], "n": ["nb", "en", "size", "nn", "w", "network", "nor", "all", "o", "l", "np", "b", "k", "ns", "out", "c", "d", "r", "nt", "v", "nm", "no", "on", "j", "number", "sn", "ni", "length", "nu", "m", "nl", " N", "nc", "ln", "ne", "t", "na", "z", "num", "net", "N", "p"], "nums": ["neums", "pronumers", " nomes", "Nums", "cems", "names", "neamps", "cumbers", "cums", "nuomes", "pronames", "nomes", "neumbers", "naspers", "numers", "cails", " numers", "pronaspers", "caspers", "nuames", " nems", " noms", "comes", "namps", "numbers", " naspers", " nails", "Noms", "pronums", " names", "Nems", "Numbers", "noms", "nuails", "cumers", "cames", "neames", "coms", "nems", "nuums", "nails", "camps", " numbers", " namps"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "set", "gu", "iu", "ie", "zi", "di", "pi", "qi", "ei", "iri", "my", "mi", "ini", "ci", "iso", "sim", "err", "id", "j", "io", "uri", "iq", "I", "ind", "q", "init", "m", "ori", "\u0438", "ii", "gi", "us", "is", "li", "base", "hi", "ui", "client", "cli", "inner", "ix", "im", "ic", "phi", "u", "ri"], "count": ["scroll", "add", "report", "size", "list", "cur", "total", "iter", "check", "set", "cache", "cat", "cycle", "time", "flags", "test", "status", "now", "first", "l", "counter", "sum", "cd", "found", "conf", "c", "ctx", "d", " c", "amount", "draw", "nt", "each", "cc", "cont", "err", "span", "current", "only", "f", "number", "length", "ind", "print", "force", "ach", "hold", "index", "cast", "cond", "call", "batch", "Count", "cmd", "con", "acc", "ount", "z", "code", "ct", "ctr", "race", "history"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\npublic class Main  {\\n    public static void main(String args[]) {\\n      FastScanner fs=new FastScanner();    \\n      PrintWriter out=new PrintWriter(System.out);\\n        int x=fs.nextInt();\\n        out.println(x==1?0:1);\\n        out.flush();\\n        out.close();\\n    }\\n\tstatic void ruffleSort(int[] a) {\\n \t\tRandom random=new Random();\\n\t\tint n=a.length;\\n\t\tfor (int i=0; i<n; i++) {\\n\t\t\tint oi=random.nextInt(n), temp=a[oi];\\n\t\t\ta[oi]=a[i]; a[i]=temp;\\n\t\t}\\n\t\tArrays.sort(a);\\n\t}\\n}\\n        class FastScanner {\\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\\n\t\tStringTokenizer st=new StringTokenizer(\"\");\\n\t\t\\n\t\tString next() {\\n\t\t\twhile (!st.hasMoreTokens())\\n\t\t\t\ttry {\\n\t\t\t\tst=new StringTokenizer(br.readLine());\\n\t\t\t\t}\\n\t\t\t\tcatch (IOException e) {\\n\t\t\t\t\te.printStackTrace();\\n\t\t\t\t}\\n\t\t\treturn st.nextToken();\\n\t\t}\\n\t\tString nextLine() {\\n\t\t    String str=\"\";\\n\t\t    try {\\n\t\t        str=br.readLine();\\n\t\t    }\\n\t\t    catch (IOException e) {\\n\t\t        e.printStackTrace(); \\n\t\t    }\\n\t\t    return str;\\n\t\t}\\n\t\tint nextInt() {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n\t\tdouble nextDouble() {\\n\t\t    return Double.parseDouble(next());\\n\t\t}\\n\t\tlong nextLong() {\\n\t\t\treturn Long.parseLong(next());\\n\t\t}\\n\t\tint[] readArray(int n) {\\n\t\t\tint[] a=new int[n];\\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\\n\t\t\treturn a;\\n\t\t}\\n\t}", "target": "148", "substitutes": {"fs": ["ms", "ws", "sf", "s", "fd", "mr", "aos", "ios", "ns", "fps", "uds", "gb", "bs", "ks", "ts", "js", "linux", "vs", "bf", "Fs", "sys", "fc", "io", "f", "ours", "res", "df", "gs", "ls", "gc", "cs", "cf", "os", "ims", "ps", "FS", "irs", "rs", "outs", "gets"], "out": ["in", "outer", "obj", "at", "null", "s", "console", "file", "put", "aos", "o", "Out", "flush", "outs", "bin", "println", "c", "r", "nt", "conn", "sys", "co", "screen", "err", "error", "io", "res", "f", "conv", "print", "fn", "log", "buffer", "write", "OUT", "info", "output", "os", "writer", "t", "input", "ex", "net", "txt", "client", "p", "ou"], "x": ["dx", "mx", "px", " xx", "w", "tx", "xe", "xx", "xff", "ax", "xf", "xi", "xt", "p", "xc", "fx", "xp", "xes", "v", "ux", "y", "X", "ox", "xs", "wx", "xxxx", "yx", "rx", "t", "xy", "z", "ex", "xxx", "ix", "xa"], "a": ["an", "la", "ba", "ab", "eas", "parts", "da", "ea", "at", "qa", "au", "e", "s", "w", "aos", "all", "o", "l", "aaa", "b", "changes", "area", "c", "am", "d", "A", "era", "esa", "v", "ar", "ia", "ma", "j", "f", "ao", "va", "app", "ac", "ae", "al", "m", "wa", "ata", "abs", "ga", "oa", "aa", "as", "data", "att", "na", "sta", "array", "t", "fa", "pa", "ce", "sa", "ca", "z", "p", "ava", "arr", "u"], "random": ["query", "relative", "nd", "unique", "mist", "mr", "ro", "local", "from", "gen", "clean", "prime", "seed", "smart", "gener", "draw", "r", "monkey", "memory", "unt", "no", "ng", "res", "remote", "free", "initial", "normal", "andom", "system", "natural", "rand", "sample", "serial", "auto", "creator"], "n": ["nb", "nv", "an", "size", "nd", "nn", "names", "nw", "e", "nat", "nor", "network", "w", "all", "o", "l", "np", "b", "k", "ns", "pi", "c", "d", "un", "nr", "g", "r", "nm", "nt", "no", "v", "y", "ng", "on", "name", "j", "h", "sn", "ni", "f", "number", "q", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "count", "len", "N", "p", "mn"], "i": ["in", "multi", "si", "ip", "PI", "l", "zi", "di", "my", "ini", "iy", "me", "hi", "p", "phi", "it", "s", "ie", "o", "qi", "cgi", "y", "sim", "q", "init", "ami", "ori", "ii", "gi", "us", "cli", "ji", "ic", "fire", "bi", "iu", "gu", "ei", "this", "iri", "g", "ly", "j", "io", "ni", "I", "ind", "remote", "ij", "mu", "li", "ui", "ix", "ti", "ai", "port", "xi", "pi", "mi", "v", "ity", "ci", "id", "f", "iq", "php", "m", "ki", "\u0438", "ims", "eu", "fi", "im", "u"], "oi": ["bi", "si", "ti", "ai", "ip", "eta", "oid", "o", "ico", "rio", "oin", "di", "pi", "ei", "iri", "pu", "mi", "ini", "ci", "iso", "ta", "uri", "cu", "ni", "ori", "eni", "ki", "obo", "asi", "ii", "oa", "ovi", "li", "xy", "hi", "ui", "ji", "fi", "ati", "phi"], "temp": ["tt", "partial", "iter", "perm", "null", "tmp", "emp", "pt", "test", "pool", "term", "mm", "master", "tr", "tim", "tty", "prime", "tem", "template", "ptr", "v", "unt", "mod", "mint", "ta", "td", "Temp", "tm", "pre", "thread", "buffer", "alt", "pretty", "fake", "tc", "t", "timeout", "txt", "mem", "orig"], "br": ["wr", "bsp", "ber", "hr", "bl", "kr", "ch", "BR", "sb", "Br", "vr", "mr", "fr", "rain", "tr", "b", "browser", "dr", "buf", "cr", "gr", "ptr", "r", "bh", "yr", "bt", "sp", "bridge", "sr", "lr", "her", "shr", "bp", "rb", "pr", "ctr", "p", "er", "bro"], "st": ["tt", "irst", "std", "nd", "ste", "ost", "sts", "struct", "sb", "sw", "mt", "s", "set", "et", "fr", "sty", "stan", "l", "tr", "dr", "const", "th", "stri", "stress", "cr", "rt", "ast", "ts", "ust", " ST", "r", "nt", "ST", "bt", "start", "inst", "stage", "rest", "sl", "stable", "stack", "ss", "so", "storage", "sta", "se", "t", "ist", "usr", "St", "stat", "ct", "sh", "sp", "est"], "str": ["cur", "vol", "it", "s", "sw", "ocr", "msg", "fr", "STR", "tr", "dr", "ns", "stri", "p", "cr", "char", "text", "gr", "g", "r", "spr", "v", "sys", "j", "res", "inst", "print", "string", "Str", "ent", "sl", "stable", "shr", "cs", "spec", "t", "txt", "div", "pr", "ctr", "hex", "enc", "sp", "arr"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main{\\n public static void main(String[] args){\\n  int S;\\n  Scanner scn = new Scanner(System.in);\\n  S = scn.nextInt();\\n  int hour;\\n  int minute;\\n  int second;\\n  hour = S/3600;\\n  minute = (S-3600*hour)/60;\\n  second = S-3600*hour-minute*60;\\n\\n  System.out.println(hour+\":\"+minute+\":\"+second);\\n}\\n}", "target": "84", "substitutes": {"S": ["SIZE", "J", "s", "D", "SER", "OS", "T", "E", "STAT", "SU", "U", "H", "Y", "SAM", "P", "Serial", "AS", "TS", "A", "MS", "V", "SA", "Si", "M", "C", "RS", "X", "SI", "Size", "I", "G", "IS", "seconds", "R", "JS", "L", "NS", "B", "F", "N", "SN", "SS"], "scn": ["scr", " scr", "rcn", "syN", "Scne", "scne", " scN", "rcr", "scN", "Scn", "Scnl", "Scr", "rcne", " scz", "Scz", " scnl", "scz", "scnl", " scne", "ScN", "synl", "rcz", "syr", "syn"], "hour": ["ive", "manager", "floor", "hr", "item", "ost", "integer", "hello", "port", "week", "time", "author", "HH", "OUR", "century", "always", "block", "image", "H", "dd", "prime", "host", "he", "night", "today", "volume", "era", "home", "itude", "each", "owner", "address", "date", "iso", "noon", "change", "h", "over", "height", "hh", "inter", "remote", "operator", "day", "hop", "me", "http", "digit", "ha", "actor", "horse", "month", "server", "impact", "angle", "hours", "employ", "store", "year", "Hour", "ter"], "minute": ["field", "manager", "column", "relative", "part", "itime", "division", "integer", "condition", "param", "s", " minutes", "time", "century", "mid", "local", "dim", "coin", "attribute", "voice", "communication", "conference", "managed", "distance", "middle", "volume", "before", "ute", "mi", "pai", "ule", "requisite", "min", "ma", "uri", "Simon", "day", "UTE", "service", "command", "morning", "money", "m", "subject", "MI", "digit", "mon", "minimum", "method", "directory", "piece", "direction", "message", "demon", "client", "man", "frame", "third", "member", "quarter"], "second": ["slot", "value", "fourth", "section", "condition", "position", "security", "sound", "lower", "secret", "screen", "min", "component", "remote", "seconds", "sec", "service", "sector", "pixel", "string", "south", "course", "sex", "use", "system", "minimum", "secondary", "billion", "bis", "zone", "two", "timeout", "video", "session", "message", " seconds", "Second", "frame", "third", "small"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main (String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint nam = sc.nextInt();\\n\t\t\\n\t\tString ans = \"No\";\\n\t\tfor(int i = 1; i <= 9; i++){\\n\t\t    for(int j = 1; j <= 9;j++){\\n\t\t        if(i * j == nam){\\n\t\t            ans = \"Yes\";\\n\t\t            break;\\n\t\t        }\\n\t\t    }\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(ans);\\n\t}\\n}\\n", "target": "194", "substitutes": {"sc": ["ch", "sync", "sw", "asc", "mc", "osc", "anc", "sac", "cr", "Sc", "sel", "c", "sub", "bc", "cc", "sys", "screen", "SC", "conv", "lc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "uc", "nc", "sq", "tc", "cs", "pc", "ser", "acc", "isc", "desc", "scl", "sv", "Scan", "sp", "esc"], "nam": [" Nam", "nn", "names", "tmp", "filename", "dim", "amin", "sum", "loc", "am", "ram", "nm", "ident", "ame", "sim", "name", "sn", "win", "ind", "ami", "fn", "nom", "index", "tm", "sam", "san", "ny", "typ", "iam", "na", "num", "n", "mem", "man", "dn", "val", "im", "mn"], "ans": ["an", "angs", "uns", "ars", "anks", "ms", "ians", "acs", "ents", "anon", "s", "rans", "ds", "aos", "ems", "aps", "ann", "arms", "aints", "ons", "ins", "ns", "aus", "ros", "ks", " orphans", "ears", "arts", "annot", " means", "utters", "ats", "oss", "ras", "sd", "ants", "eps", "posts", "aned", "ANS", "can", "ads", " beans", "ls", "sam", "san", "said", "ams", "ots", "lan", "amps", "ens", "rs", "ods", "ols", "leans", "eds"], "i": ["aci", "bi", "multi", "si", "ti", "ai", "it", "ip", "ri", "iu", "ie", "zi", "xi", "di", "pi", "by", "qi", "x", "ik", "my", "mi", "ini", "ci", "y", "sim", "pai", "ia", "a", "iq", "I", "ij", "ami", "init", "me", "ki", "asi", "gi", "ii", "ims", "is", "li", " Xi", "hi", "ui", "n", "ix", "im", "ic", "phi", "wi"], "j": ["jo", "bi", "oj", "bj", "obj", "jc", "json", "J", "jack", "it", "pt", "key", "fr", "kid", "dj", "b", "k", "jj", "jas", "aj", "jl", "bs", "out", "jp", "son", "uj", "js", "str", "g", "ion", "v", "ja", "ju", "err", "name", "ph", "q", "ij", "je", "kj", "ort", "ne", "br", "t", "li", "z", "job", "other", "jump", "ji", "pr", "n", "p", "ge"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString t = sc.next();\\n\t\tString[] target = t.split(\"\");\\n\t\tint ans = 0;\\n\t\tfor (String a : target) {\\n\t\t\tans += Integer.parseInt(a);\\n\t\t}\\n\t\tif (ans % 9 == 0) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t} else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t\t\\n\t}\\n}\\n", "target": "93", "substitutes": {}}
{"code": "import java.util.Arrays;\\nimport java.util.Scanner;\\nclass Main {\\n    \\n    public static void main(String args[]){\\n        Scanner scanner = new Scanner(System.in);\\n        int n = scanner.nextInt();\\n        int m = scanner.nextInt();\\n        \\n        int[][] A = new int[n][m];\\n        int[] b = new int[m];\\n        int[] sum = new int[m];\\n\\n        scanner.nextLine();\\n        for(int i=0;i<n;i++){\\n            String input = scanner.nextLine();\\n            String inputTmp[] = input.split(\" \");\\n            int j = 0;\\n            for (String num : inputTmp) {\\n                A[i][j] = Integer.parseInt(num);\\n                j++;\\n            }\\n        }\\n\\n        for(int i=0;i<m;i++){\\n            int num = scanner.nextInt();\\n            b[i] = num;\\n        }\\n        \\n        for(int[] a: A){\\n            int val = 0;\\n            for(int k = 0;k<m;k++){\\n                val += a[k] * b[k];\\n            }\\n            System.out.println(val);\\n        }\\n    }\\n}\\n\\n", "target": "185", "substitutes": {"scanner": ["canner", "gatener", "gateer", "gatelier", "Scanter", "caner", "scanter", "canener", " scanener", "gateter", "Scaner", "Scanner", "canter", "scanener", " scanlier", " scaner", "canlier", "Scanener", "scanlier", "scaner", " scanter"], "n": ["nb", "an", "en", "nn", "network", "o", "l", "np", "ns", "x", "c", "un", "nr", "g", "r", "nt", "v", "nm", "no", "M", "y", "ng", "on", "name", "sn", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "net", "N", "p", "mn"], "m": ["mp", "ms", "perm", "mt", "cm", "um", "mr", "mc", "rem", "mm", "o", "l", "pi", "om", "c", "d", "g", "r", "mi", "pm", "v", "M", "y", "mod", "rm", "ma", "h", "f", "q", "me", "tm", "km", "dm", "t", "gm", "bm", "em", "p", "im", "mn", "mun"], "A": ["AB", "S", "At", "AT", "D", "This", "BA", "T", "AF", "K", "AC", "H", "Y", "As", "Area", "P", "HA", "Ar", "V", "CA", "SA", "Array", "Args", "M", "C", "ACT", "X", "AE", "Alpha", "AR", "G", "AA", "ABC", "alpha", "R", "AP", "L", "B", "AU", "AM", "N", "API", "Ax", "An"], "b": ["nb", "bi", "ba", "bl", "ab", "be", "bb", "ib", "fb", "e", "sb", "wb", "BA", "o", "eb", "l", "bs", "ob", "binary", "bo", "x", "gb", "c", "bin", "d", "g", "r", "bc", "v", "bf", "y", "bt", "cb", "f", "t", "base", "z", "B", "rb", "p", "u"], "sum": ["result", "add", "size", "si", "total", "set", "um", "test", "cal", "diff", "cum", "cmp", "sc", "mod", "sim", "alpha", "ac", "Sum", "ul", "mu", "data", "acc", "scale", "na", "count", "sa", "mem", "mean"], "i": ["bi", "in", "multi", "si", "ti", "ai", "e", "ip", "it", "iu", "ie", "o", "PI", "zi", "xi", "di", "pi", "qi", "x", "ei", "this", "g", "mi", "ity", "ini", "ci", "y", "sim", "id", "ia", "name", "err", "on", "iq", "f", "I", "ind", "uri", "q", "ij", "ni", "init", "me", "index", "ori", "ami", "iy", "ki", "io", "ii", "info", "gi", " I", "is", "li", "hi", "ui", "ji", "cli", "ix", "p", "im", "ic", "phi", "u", "ri"], "input": ["in", "add", "focus", "qa", "hello", "ip", "Input", "read", "source", "from", "context", "text", "form", "unit", "def", "get", "unknown", "prefix", "current", "config", "ty", "feed", "active", "string", "pattern", "xml", "command", "index", "view", "initial", "info", "output", "url", "select", "raw", "data", "request", "sample", "history"], "inputTmp": ["inputPmb", "inputEmp", "inputtmp", "inputtmb", "inputTMP", "inputSpl", " inputTcp", " inputSmp", "inputtmm", " inputEMP", "inputEcp", "inputTmb", "inputLcp", "inputTpl", "inputLMP", " inputTMP", "inputSMP", "inputScp", " inputEmm", " inputTmm", "inputtMP", " inputSpl", " inputScp", "inputLmp", "inputLpl", " inputTmb", "inputTcp", "inputEpl", "inputTmm", " inputSMP", "inputPmp", "inputEmm", "inputSmp", "inputEmb", " inputEmp", "inputEMP", "inputPMP", " inputEmb", " inputTpl", "inputPmm"], "j": ["bj", "oj", "obj", "jc", "json", "J", "it", "pt", "key", "fr", "kid", "l", "jit", "dj", "jj", "jas", "aj", "jl", "jp", "uj", "js", "g", "ion", "v", "ja", "y", "ind", "sp", "ij", "q", "kj", "br", "z", "jump", "job", "other", "ji", "pr", "im", "note"], "num": ["result", "nb", "si", "total", "hello", "snap", "check", "umi", "um", "test", "cal", "dim", "rem", "coord", "np", "tim", "row", "text", "nam", "unit", "draw", "nm", "no", "uu", "NUM", "name", "conv", "number", "cu", "alph", "bum", "ph", "nom", "nu", "index", "mon", "sam", "mu", "zero", "info", "Num", "valid", "data", "dash", "na", "reason", "one", "net", "node", "temp", "hex", "note"], "a": ["an", "acs", "ba", "ab", "ea", "at", "au", "s", "w", "ee", "o", "aaa", "area", "c", "am", "v", "ar", "bar", "ia", "ma", "ao", "va", "alpha", "ac", "app", "ata", "another", "aa", "as", "t", "sta", "pa", "z", "sa", "ca", "p", "u"], "val": ["bal", "pol", "var", "vol", "pal", "lay", "tx", "sol", "test", "cal", "pret", "als", "buf", "crit", "vals", "db", "sel", "el", "grad", "def", "rel", "v", "gold", "mean", "mod", "ret", "oval", "fol", "cho", "Val", "ind", "alpha", "value", "arr", "AL", "dev", "aval", "eval", "valid", "VAL", "data", "base", "util", "pl", "div", "rol", "ival", "al"], "k": ["ka", "kl", "kr", "ke", "kn", "wk", "kind", "ark", "sk", "key", "kg", "kid", "K", "ijk", "ko", "kick", "ks", "isk", "ik", "kat", "ek", "kt", "ask", "ku", "ok", "ak", "ph", "kw", "kk", "q", "kj", "mk", "ki", "km", "ck", "tk", "z", "dk", "unk", "uk", "kh", "u"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n\\n    String strDate = sc.next();\\n\\n    String[] dates = strDate.split(\"/\");\\n    int month = Integer.parseInt(dates[1]);\\n\\n    if (month > 4) {\\n      System.out.println(\"TBD\");\\n    } else {\\n      System.out.println(\"Heisei\");\\n    }\\n  }\\n}\\n", "target": "163", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "s", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "inc", "dec", "bc", "cc", "sys", "screen", "SC", "lc", "usc", "sec", "sch", "gc", "cl", "scan", "ss", "uc", "nc", "system", "tc", "cs", "sq", "pc", "ser", "isc", "desc", "syn", "scl", "sv", "sp", "esc"], "strDate": ["StrDay", "StrDat", " strDat", "strDat", "arrDay", "Strdate", " strTime", "strdate", " strdate", "arrDate", "StrDate", "stdate", "strDay", "StrTime", "stDate", "arrdate", "arrTime", "stDat", " strDay", "stDay", "strTime"], "dates": ["reports", "opens", " Saturdays", " Dates", "lights", "dos", "issues", "grades", "years", "changes", "ones", "leases", "notes", "plates", "rates", "yrs", "days", "poses", "forms", "downs", "nets", "sets", "ends", "ages", "ates", "fixes", "months", "points", "ches", "Days", "events", "rots", "games", "papers", "checks", "tests", "dated", "verts", "states", "works", "endars", "gets"], "month": ["field", "mobile", "mmm", "major", "week", "century", "key", "Month", "mm", "th", "tag", "row", "night", "my", "date", "mod", "period", "min", "minute", "town", "mini", "mo", "months", "day", "may", "m", "index", "mon", "tom", "method", "season", "hour", "count", "quarter", "mer", "other", "year", "member"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\nimport java.math.*;\\nimport java.math.BigInteger;\\nclass Main\\n{    \\n    public static void main(String args[])\\n    {\\n        StringBuilder ans=new StringBuilder();\\n        FastReader in=new FastReader();    \\n        int N=in.nextInt();\\n        int A[]=new int[N];\\n       // Arrays.fill(A,0);\\n        for(int i=0; i<N; i++)A[i]=in.nextInt();\\n        //start at 0 and finish at\\n       // int i=0;\\n        long cost=0;\\n        int dp[]=new int[N];\\n        \\n        for(int i=0; i<N; i++)\\n        {\\n            if(i==0)\\n            {dp[0]=0;continue;\\n            }\\n            if(i==1)\\n            {\\n                dp[1]=Math.abs(A[1]-A[0]);\\n                continue;\\n            }\\n           \\n            dp[i]=Math.min((Math.abs(A[i]-A[i-1])+dp[i-1]),(Math.abs(A[i]-A[i-2])+dp[i-2]));\\n        }\\n        System.out.println(dp[N-1]);\\n    }\\n\\n\\n    static  long pow(long a,long b)\\n    {\\n        long mod=1000000007;\\n        long pow=1;\\n        long x=a;\\n        while(b!=0)\\n        {\\n            if((b&1)!=0)pow=(pow*x)%mod;\\n            x=(x*x)%mod;\\n            b/=2;\\n        }\\n        return pow;\\n    }\\n\\n    static int bits(long x)\\n    {\\n        int n=(int)(Math.floor(Math.log(x)/Math.log(2)))+1;\\n        return (1<<n);\\n    }\\n\\n    static long rev(long x)\\n    {\\n        int n=(int)(Math.floor(Math.log(x)/Math.log(2)))+1;\\n\\n        return ((1<<n)-1)^x;\\n    }\\n    //fucntions\\n    //fucntions\\n    //fucntions\\n    //fucntions\\n    static int[] input(int A[]) //input of Int Array\\n    {\\n        FastReader in=new FastReader();\\n        int N=A.length;\\n        for(int i=0; i<N; i++)\\n        {\\n            A[i]=in.nextInt();\\n        }\\n        return A;\\n    }\\n\\n    static long[] input(long A[]) //Input of long Array\\n    {\\n        FastReader in=new FastReader();\\n        for(int i=0; i<A.length; i++)A[i]=in.nextLong();\\n        return A;\\n    }\\n\\n    static long lcm(long a,long b)\\n    {\\n        return (a*b)/GCD(a,b);\\n    }\\n\\n    static long GCD(long a,long b) //wrong output if a ||b are intially zero\\n    {\\n        if(b==0)\\n        {\\n            return a;\\n        }\\n        else return GCD(b,a%b );\\n    }\\n\\n    static boolean isPrime(int N)\\n    {\\n        for(int i=2; i*i<N; i++)\\n            if(N%i==0)return false;\\n        return true;\\n    }\\n\\n}\\n//Code For FastReader\\n//Code For FastReader\\n//Code For FastReader\\n//Code For FastReader\\nclass FastReader\\n{\\n    BufferedReader br;\\n    StringTokenizer st;\\n    public FastReader()\\n    {\\n        br=new BufferedReader(new InputStreamReader(System.in));\\n    }\\n\\n    String next()\\n    {\\n        while(st==null || !st.hasMoreElements())\\n        {\\n            try\\n            {\\n                st=new StringTokenizer(br.readLine());\\n            }\\n            catch(IOException e)\\n            {\\n                e.printStackTrace();\\n            }\\n        }\\n        return st.nextToken();\\n    }\\n\\n    int nextInt()\\n    {\\n        return Integer.parseInt(next());\\n    }\\n\\n    long nextLong()\\n    {\\n        return Long.parseLong(next());\\n    }\\n\\n    double nextDouble()\\n    {\\n        return Double.parseDouble(next());\\n    }\\n\\n    String nextLine()\\n    {\\n        String str=\"\";\\n        try\\n        {\\n            str=br.readLine();\\n        }\\n        catch (IOException e)\\n        {\\n            e.printStackTrace();\\n        }\\n        return str;\\n    }\\n\\n}", "target": "1", "substitutes": {"ans": [" AN", "Bs", " res", " sans", " answer", "sb", " parser", " buf", "builder", " ba", " pat", " na", " std", " as", "out", " name", "SB", " sa", " bo", " names", " bean", " af", " buff", " SB", " san", " scratch", " os", " scanner"], "in": [" din", "add", "In", "din", "mr", "from", "rin", "ins", "thin", "asin", "conf", "bin", "out", "i", "d", "get", "this", "r", "proc", "io", "f", "ind", "IN", "xml", "m", "log", "scan", "reader", "info", "con", "gin", "isin", "is", "input", "n", "inn", "inf", "inner", "er", "cin", "ri"], "N": ["NP", "NI", "S", "NA", "J", "D", "T", "NM", "NH", "K", "P", "V", "NT", "M", "C", "X", "NO", "Ni", "NB", "I", "TN", "NN", "NR", "Ns", "Num", "NS", "L", "SN", "B", "Q", "n", "ND", "NC"], "A": ["AB", "S", "At", "NA", "AT", "D", "BA", "T", "E", "U", " a", "As", "Z", "P", "Ar", "V", "SA", "M", "C", "AR", "a", "I", "G", "R", "L", "B", "O", "An"]}}
{"code": "\\nimport java.util.*;\\nclass Main{\\n public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n      int a = sc.nextInt();\\n      int b = sc.nextInt();\\n      int c = sc.nextInt();\\n      int d = sc.nextInt();\\n      int t = 0;\\n   for(int i = 0;i <= a;i++){\\n    for(int q = 0;q <= b;q++){\\n      for(int h = 0; h <= c; h++){\\n        if(d == i * 500 + q * 100 + h * 50){\\n        t++;\\n        }\\n      }  \\n     }\\n    }\\n   System.out.println(t);\\n } \\n}", "target": "127", "substitutes": {"sc": ["ch", "sb", "sync", "sw", "asc", "mc", "osc", "anc", "cr", "Sc", "out", "ko", "scope", "ctx", "inc", "g", "cgi", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "pb", "nc", "system", "cs", "tc", "sq", "ck", "pc", "ctl", "dc", "acc", "isc", "capt", "scl", "sv", "sp", "esc"], "a": ["an", "la", "ba", "ab", "da", "ea", "at", "ai", "au", "o", "l", "aj", "area", "am", "A", "r", "act", "ar", "ia", "ta", "ma", "ao", "va", "alpha", "ac", "ae", "ga", "oa", "aa", "as", "sta", "sa", "ca", "n"], "b": ["nb", "bi", "ba", "ab", "bb", "fb", "ib", "sb", "eb", "l", "bs", "ob", "gb", "db", "by", "g", "r", "bc", "v", "bf", "y", "cb", "f", "br", "B", "rb", "ca", "n", "p", "be"], "c": ["cp", "ch", "e", "cm", "cd", "ec", "ctx", "bc", "cc", "co", "C", "ci", "fc", "cb", "f", "lc", "ac", "m", "cs", "tc", "cf", "etc", "con", "dc", "cn", "ce", "ca", "n", "ct", "cu", "u"], "d": ["des", "dt", "da", "e", "D", "ds", "w", "l", "dir", "di", "bd", "dd", "x", "out", "ad", "g", "r", "v", "dp", "dat", "td", "f", "df", "de", "sd", "m", "pd", "dm", "dc", "dh", "z", "n", "p", "dec"], "t": ["result", "tt", "dt", "ot", "at", "total", "e", "it", "pt", "w", "test", "T", "status", "not", "o", "tr", "wt", "rt", "out", "ts", "trace", "type", "y", " T", "ret", "tp", "ty", "ta", "tf", "j", "done", "title", "m", "ent", "tu", "te", "tc", "ert", "z", "tree", "ct", "n", "p"], "i": ["bi", "in", "multi", "si", "at", "ai", "ip", "it", "iu", "ir", "o", "zi", "xi", "di", "pi", "qi", "this", "mi", "ity", "ini", "v", "ci", "sim", "ret", "ia", "j", "iq", "I", "ij", "init", "m", "index", "ki", "ii", "to", "is", "li", "hi", "ui", "ix", "p", "im", "ic", "phi", "u", "ri"], "q": ["query", "qt", "ms", "dq", "qq", "quit", "ch", "qa", "check", "w", "quer", "question", "qual", "req", "k", "qi", "qv", "el", "ue", "ox", "quote", "j", "cu", "iq", "ph", "ql", "ry", "ur", "sq", "quant", "qs", "cmd", "z", "Q", "eq", "aq", "p", "requ", "pp", "que", "u", "qu"], "h": ["oh", "hr", "ch", "ah", "help", "his", "hel", "gh", "zh", "th", "H", "hp", "he", "hm", "bh", "hd", "hs", "high", "eh", "hl", "err", "ht", "j", "height", "html", "hh", "ph", "rh", "hash", "ach", "her", "ha", "go", "ho", "hi", "pr", "hn", "sh", "ih", "hu", "kh"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args){\\n    \tScanner scanner = new Scanner(System.in);\\n      \\n      \tint five = 0;\\n      \tint seven = 0;\\n      \\n      \tfor(int i = 0; i < 3; i++) {\\n        \tint number = scanner.nextInt();\\n          \\n          \tif(number == 5) {\\n            \tfive = five + 1;\\n            } else if(number == 7) {\\n            \tseven = seven + 1;\\n            }\\n        }\\n         \\n      \tif(five == 2 && seven == 1) {\\n        \tSystem.out.println(\"YES\");\\n          \treturn;\\n        }\\n          \\n       \tSystem.out.println(\"NO\");  \t\\n\t}\\n}\\n \\n\\n \\n\\n", "target": "16", "substitutes": {"scanner": ["canner", "queryer", "queryner", "Scaniner", "caniner", "Scanning", " scanning", "queryiner", "caner", "canener", " scanener", "garener", "scanning", "garer", "queryener", "Scaner", "scanener", " scaner", "scaniner", "Scanener", "garning", "scaner", "garner", "Scanner"], "five": ["fruit", "floor", "jo", "ten", " twenty", "sharp", "tie", "integer", "hello", "pie", "jack", "fifth", "low", "single", "pocket", "odd", "olulu", "lift", "numbered", "four", "inches", "silver", "safety", "three", "approximately", "eight", "half", "teen", "where", "rice", "power", "le", "money", "nine", "Eight", "Five", "enty", "zero", "fish", "yellow", "six", "knife", "los", "per", "two", "rito", "necessary", "dollar", "life", " fifty", "hey", "one", "few", "inner", "lex"], "seven": ["manager", "ten", "sharp", "largest", "mill", "imil", "forth", "alse", "aug", "higher", "series", "water", "rown", "mallow", "meet", "four", "inches", "rose", "mate", "approximately", "ward", "each", "iron", "eight", "you", "meg", "mother", "safe", "may", "hold", "many", "nine", "spring", "Seven", "broad", "username", "another", "massive", "minimum", "rue", "six", "necessary", "ipper", "smith", "rus", "conservative", "whatever", "figure"], "i": ["multi", "si", "ti", "ai", "iter", "ip", "it", "e", "mill", "gu", "iu", "ie", "chain", "xi", "di", "pi", "qi", "x", "mi", "uu", "ini", "ci", "y", "id", "err", "sim", "j", "io", "iq", "inter", "I", "q", "init", "m", "index", "batch", "ii", "gi", "info", "us", "t", "is", "li", " ii", "ex", "hi", "ui", "cli", "n", "sql", "ix", "im", "ic", "phi", "wait"], "number": ["result", "record", "language", "integer", "total", "hello", "notation", "status", "position", "block", "numbered", "step", "counter", "some", "government", "correct", "volume", "password", "work", "phone", "square", "version", "no", "news", "padding", "date", "resource", "Number", "length", "print", "document", "value", "string", "duration", "money", "normal", "another", "zero", "umber", "function", "directory", "necessary", "scale", "num", "request", "message", "n", "bill", "note", "entry"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    int v[] = new int[n];\\n    int c[] = new int[n];\\n    int ans = 0;\\n    for(int i=0;i<n;i++){\\n      v[i] = sc.nextInt();\\n    }\\n    for(int j=0;j<n;j++){\\n      c[j] = sc.nextInt();\\n    }\\n    for(int k=0;k<n;k++){\\n      if(v[k] - c[k] >= 0){\\n        ans += v[k] - c[k];\\n      }\\n    }\\n    System.out.println(ans);\\n  }\\n}", "target": "26", "substitutes": {"sc": ["irc", "ch", "sync", "sb", "sw", "cle", "src", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "ctx", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "dc", "psc", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "an", "en", "in", "size", "nd", "nn", "names", "network", "all", "ll", "none", "o", "l", "np", "ns", "pi", "out", "d", "un", "nr", "g", "nm", "nt", "no", "ng", "on", "name", "ren", "number", "sn", "init", "fn", "m", "nu", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "z", "num", "net", "nil", "len", "dn", "N", "p", "mn"], "v": ["nv", "val", "av", "vt", "ve", "e", "vc", "s", "vr", "w", "lv", "o", "l", "ver", "b", "vv", "pi", "vert", "vp", "qv", "x", "iv", "d", "vi", "V", "vs", "r", "g", "y", "conv", "f", "va", "cv", "m", "tv", "t", "ev", "vo", "p", "sv", "uv", "u", "qu"], "c": ["cp", "cur", "ch", "vc", "e", "s", "cat", "cm", "mc", "csv", "o", "chain", "l", "b", "conf", "x", "d", "g", "r", "bc", "co", "C", "ci", "cc", "fc", "h", "f", "a", "lc", "cu", "rc", "m", "cs", "tc", "cf", "etc", "con", "t", "pc", "dc", "z", "ce", "ct", "ca", "p", "ic", "u"], "ans": ["ings", "an", "uns", "angs", "ars", "anks", "ms", "ians", "ents", "acs", "mas", "ups", "rans", "orts", "asks", "aps", "ports", "ann", "ons", "ins", "ns", "AN", "aus", "ags", "vals", "ks", " scans", "arts", "lines", " means", "ats", "nets", "sets", "ends", "olds", "ants", "xs", "posts", "alls", "ANS", "gs", "ads", "ls", "orders", "ots", "lan", "cs", "as", "offs", "amps", "ens", "outs", "ids", "eds"], "i": ["bi", "ish", "si", "ti", "ai", "ip", "it", "iu", "ie", "ir", "zi", "xi", "di", "pi", "qi", "x", "this", "ei", "my", "mi", "ini", "ci", "y", "sim", "ia", "io", "inter", "ij", "q", "ami", "init", "ori", "ki", "\u0438", "ii", "gi", "info", "us", "is", "li", "ex", "hi", "ui", "ji", "ix", "im", "phi", "u", "ri"], "j": ["jo", "oj", "bj", "obj", "jc", "json", "J", "it", "pt", "fr", "kid", "dj", "b", "jj", "jas", "aj", "jl", "x", "jp", "son", "uj", "rel", "js", "str", "g", "r", "ja", "y", "ju", "ph", "ind", "ij", "q", "jac", "je", "kj", "us", "br", "z", "jump", "job", "other", "ji", "pr", "ge", "im", "u"], "k": ["ka", "kl", "ke", "kr", "kn", "kit", "wk", "kind", "ark", "sk", "key", "kg", "kan", "kid", "K", "ijk", "ko", "kick", "ks", "ikk", "ik", "g", "ek", "kat", "kar", "kt", "ask", "ku", "ok", "ak", "kk", "kw", "q", "kj", "mk", "ki", "km", "ck", "tk", "dk", "unk", "uk", "kh", "u"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int k = sc.nextInt();\\n    int x = sc.nextInt();\\n    int min = -1000000;\\n    int max = 1000000;\\n    int black[] = new int[2*k-1];\\n    for(int i=0;i<2*k-1;i++){\\n      black[i]=x-k+i+1;\\n    }\\n    for(int i=0;i<2*k-1;i++){\\n      if(black[i]>=min&&black[i]<=max){\\n        System.out.print(black[i]+\" \");\\n      }\\n    }    \\n  }\\n}", "target": "207", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "out", "sel", "c", "ctx", "sub", "inc", "bc", "cc", "sys", "screen", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "nc", "sq", "cs", "tc", "system", "ck", "pc", "ctl", "ser", "isc", "desc", "scl", "sv", "sp", "esc"], "k": ["ka", "kl", "ke", "kr", "kn", "ch", "w", "kind", "sk", "kok", "kid", "K", "l", "ko", "kick", "c", "ikk", "isk", "ik", "g", "ek", "ku", "ok", "ak", "j", "h", "ack", "kk", "q", "kw", "m", "mk", "kj", "ki", "km", "ck", "tk", "z", "dk", "n", "p", "ijk", "kh", "u"], "x": ["px", "tx", "w", "xx", "o", "ax", "l", "xi", "b", "xt", "xc", "c", "r", "v", "X", "y", "ox", "on", "j", "f", "h", "xs", "m", "rx", "t", "xy", "z", "ex", "n", "ix", "p", "u"], "min": ["in", "lt", "sol", "local", "mid", "low", "none", "mm", "rain", "amin", "thin", "lower", "un", "lo", "my", "mi", "mod", "bot", "start", "default", "range", "ma", "mask", "minute", "mel", "m", "initial", "mins", "minimum", "dev", "MIN", "begin", "Min", "pl", "emin", "man", "mean", "small", "mn"], "max": ["core", "mx", "last", "right", "up", "MAX", "ax", "with", "sum", "prime", "conf", "out", "med", "window", "r", "end", "act", "v", "co", "ox", "mod", "range", "default", "ma", "res", "gt", "m", "recent", "rest", "Max", "grow", "crop", "upper", "exp", "wall", "full", "ex", "n", "cut", "maximum"], "black": ["copy", "dark", "buff", "white", "empty", "red", "block", "ank", "allow", "bd", "bo", "Black", "stroke", "disable", "def", "ink", "off", "light", "skip", "lock", "bird", " Black", "mask", "hack", "where", "ard", "grey", "wh", "ack", "back", "kw", "star", " blacks", "good", "cond", "broad", "ck", "zero", "yellow", "gray", "blue", "remove", "mac", "raw", "wood", "dash", "clip", " BLACK", "stock", "pl", "other", "tan", "blank", "sh", "both", "clear", "green"], "i": ["in", "multi", "si", "ip", "set", "chain", "zi", "di", "ini", "err", "span", "iy", "me", "ski", "hi", "uni", "phi", "it", "ie", "o", "qi", "cgi", "ik", "sim", "uri", "q", "init", "ami", "ori", "asi", "ii", "gi", "us", "base", "cli", "ji", "ic", "ri", "bi", "iu", "key", "uli", "ei", "isi", "j", "io", "ni", "I", "ind", "ij", "mu", "is", "li", "ui", "client", "ger", "ix", "yi", "ti", "ai", "xi", "pi", "mi", "ity", "ci", "oi", "esi", "iq", "php", "ki", "\u0438", "batch", "eu", "fi", "im", "u"]}}
{"code": "import java.util.*;\\nimport java.lang.Math;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner s = new Scanner(System.in);\\n        long n = s.nextLong();\\n        long l = 1;\\n        for (int i= 1; i <= Math.sqrt(n); i ++) {\\n            if (n % i == 0)\\n                l=i;\\n        }\\n        System.out.println(l + (n / l) - 2);\\n    }\\n}", "target": "157", "substitutes": {"s": ["ses", "ms", "S", "ws", "sts", "sb", "sw", "ds", "sol", "stats", "es", " scanners", "ns", "ts", "js", "ys", "sys", "ats", "search", "conv", "xs", "gs", "ls", "fs", "ss", "abs", "sq", "qs", "as", "ps", "is", "sv", "rs", "hs", "gets"], "n": ["nb", "en", "nn", "total", "nw", "nor", "w", "ll", "o", "np", "ns", "d", "un", "norm", "nt", "nm", "v", "ng", "j", "number", "sn", "ni", "fn", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "L", "cn", "num", "net", "len", "dn", "N", "gn", "p"], "l": ["la", "it", "w", "ll", "lv", "o", "lu", "b", "lb", "ld", "lit", "pi", "lin", "el", "x", "d", "lp", "c", "g", "lo", "r", "v", "lock", "ml", "hl", "j", "h", "lc", "length", "le", "ls", "m", "nl", "sl", "ln", "dl", "t", "li", "L", "z", "len", "p", "al", "u"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "o", "zi", "xi", "k", "di", "pi", "p", "qi", "x", "d", "ei", "ik", "mi", "v", "ini", "ci", "id", "j", "io", "a", "f", "I", "m", "index", " di", "ori", "ki", "\u0438", "asi", "ii", "gi", "us", "is", "li", " ii", "hi", "ui", "cli", "ix", "fi", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scanner = new Scanner(System.in);\\n\t\tint length = scanner.nextInt(), minimum = 0, maximum = 0;\\n\t\tlong total = 0;\\n\\n\t\tfor (int i = 0; i < length; i++) {\\n\t\t\tint number = scanner.nextInt();\\n\\n\t\t\tif (i == 0) {\\n\t\t\t\tminimum = number;\\n\t\t\t\tmaximum = number;\\n\t\t\t}\\n\\n\t\t\ttotal += number;\\n\\n\t\t\tif (number < minimum)\\n\t\t\t\tminimum = number;\\n\t\t\tif (number > maximum)\\n\t\t\t\tmaximum = number;\\n\t\t}\\n\\n\t\tSystem.out.println(minimum + \" \" + maximum + \" \" + total);\\n\t}\\n}", "target": "21", "substitutes": {"scanner": ["scanener", " scaner", "Scanter", "canner", "Scaner", "caner", "scanter", "Scanener", " scanter", " scanener", "canener", "canter", "Scanner", "scaner"], "length": ["ish", "size", "list", "loop", "partial", "integer", "json", "last", "level", "position", "l", "family", "Length", "amount", "volume", "library", "end", "load", "lock", "padding", "type", "shape", "ENGTH", "idth", "duration", "php", "string", "ment", "ln", "L", "count", "len", "angle", "ength", "frame", "sequence"], "minimum": ["manager", "required", "largest", "partial", "integer", "taker", "optional", "information", "alter", "local", "position", "attribute", "variable", "first", "portion", "lower", "latest", "please", "multiple", "common", "approximately", "Minimum", "mi", "average", "sufficient", "reasonable", "member", "default", "range", "requisite", "min", "minute", "period", "operator", "reference", "basic", "may", "duration", "m", "initial", "within", "username", "imum", "begin", "existence", " minimal", "method", "conservative", "termination", "module", "small", "second"], "maximum": ["significant", "historic", "limit", "creation", "highest", "largest", "successful", "information", "max", "exclusive", "history", "MAX", "higher", "provided", "increasing", "latest", "typically", "absolute", "great", " largest", "multiple", "volume", "approximately", "extreme", "sufficient", "high", "immigration", "requisite", "collection", "reference", "capacity", "restricted", "there", "initial", "within", "upper", "secondary", "million", "existence", "directory", "impact", "necessary", "majority", "conservative", "hest", "maxwell", "Maximum", "termination", "most", "sequence", "international"], "total": ["result", "summary", "size", "complete", "unique", "human", "eta", "successful", "max", "equal", "sequence", "all", " summed", "translation", "OTAL", "sum", "percent", "ful", "created", "latest", "meta", "amount", "trace", "no", " totals", "current", "done", "ta", " Total", "gross", "normal", "zero", "otal", "info", "pleted", "Total", "t", "full", "num", "count", " all", "net", "n", "checked", "serial", "printed", " TOTAL", "average", "note"], "i": ["bi", "in", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "key", "l", "xi", "k", "di", "pi", "qi", "x", "g", "mi", "v", "ini", "ci", "y", "id", "sim", "span", "j", "io", "iq", "I", "ind", "q", "init", "me", "m", "index", "\u0438", "ii", "gi", "info", "us", "slice", "ski", "is", "li", "z", "ui", "n", "sql", "ix", "im", "ic", "phi", "u"], "number": ["result", "nb", "record", "language", "integer", "nn", "notation", "hello", "non", "product", "next", "position", "key", "block", "group", "numbered", "portion", "element", "unit", "x", "amount", "volume", "password", "work", "nr", "frequency", "token", "version", "no", "point", "NUM", "date", "news", "span", "padding", "name", "currency", "Number", "print", "word", "document", "string", "duration", "value", "money", "php", "normal", "zero", "umber", "object", "function", "directory", "to", "na", "num", "request", "message", "n", "node", "something", "note"]}}
{"code": "import java.util.*;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner s = new Scanner(System.in);\\n        int d = s.nextInt();\\n        // int  a = d % 10;\\n\\n        // if(a == 3) {\\n        //     System.out.println(\"bon\");\\n        // } else if( a== 0 || a == 1 || a == 6 || a == 8) {\\n        //     System.out.println(\"pon\");\\n        // } else {\\n        //     System.out.println(\"hon\");\\n        // }\\n        String str = s.next();\\n        char c[] = str.toCharArray();\\n        if(c.length>d) {\\n            StringBuilder sb = new StringBuilder();\\n            for (int i = 0; i < d; i++) {\\n                sb.append(c[i]);\\n            }\\n            sb.append(\"...\");\\n            System.out.println(sb.toString());\\n        } else {\\n            System.out.println(str);\\n        }\\n    }\\n}", "target": "248", "substitutes": {"s": ["ses", "ms", "S", "pers", "ws", "sts", "sb", "ds", "sol", "b", "ns", "rs", "c", "ts", "sc", "ys", "socket", "sys", "ats", "v", "y", "conv", "h", "xs", "gs", "ls", "ss", "abs", "sq", "qs", "cs", "ps", "is", "p", "sv", "fs", "hs"], "d": ["dx", "std", "e", "D", "fd", "dir", "b", "ld", "bd", "db", "c", "ident", "v", "y", "id", "start", "name", "sd", "ind", "dev", "t", "z", "rand", "count", "n", "ed", "p"]}}
{"code": "import java.util.*;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n        Scanner stdIn = new Scanner(System.in);\\n        int n = stdIn.nextInt();\\n        int[] a = new int[n];\\n        int[] b = new int[n];\\n        int[] c = new int[n-1];\\n        for(int i = 0;i<n;i++) {\\n            a[i] = stdIn.nextInt();\\n        }\\n\\n        for(int i = 0;i<n;i++) {\\n            b[i] = stdIn.nextInt();\\n        }\\n\\n        for(int i = 0;i<n-1;i++) {\\n            c[i] = stdIn.nextInt();\\n        }\\n\\n        int count = 0;\\n\\n        for(int i = 0;i<b.length;i++) {\\n            count += b[i];\\n        }\\n        //System.out.println(count);\\n\\n        for(int i = 0;i<b.length-1;i++) {\\n            if(a[i]!=n && a[i]+1 == a[i+1]) {\\n                count += c[a[i]-1];\\n            }\\n        }\\n        System.out.println(count);\\n    }\\n}", "target": "223", "substitutes": {"stdIn": ["standardin", "standardIns", "stdOut", "ndin", "STDIns", "stdin", "randIns", "ndOut", "stdIns", "standardBody", "STDin", "ndIn", "stdBody", "ndIs", "randInit", "standardInit", "standardIs", " stdIns", " stdInit", "randOut", "standardOut", "stdIs", " stdin", " stdOut", "ndBody", "randIn", "STDOut", "randin", " stdBody", "standardIn", "ndIns", " stdIs", "STDIn", "stdInit"], "n": ["nb", "an", "en", "ot", "nn", "names", "null", "network", "all", "ll", "none", "o", "after", "l", "np", "ns", "pi", "x", "un", "out", "window", "g", "r", "nm", "nt", "v", "no", "ng", "on", "name", "j", "number", "sn", "ren", "length", "pos", "q", "m", "nu", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "num", "net", "len", "N", "p", "note"], "a": ["ap", "an", "av", "ba", "ab", "ea", "ai", "au", "e", "s", "o", "l", "aaa", "aux", "area", "am", "A", "act", "r", "v", "ar", "j", "ma", "f", "ao", "alpha", "ac", "ae", "m", "ga", "oa", "aa", "as", "t", "sa", "ca", "p"], "b": ["nb", "bi", "ba", "ab", "bl", "abb", "be", "bb", "fb", "ib", "sb", "e", "s", "erb", "o", "eb", "l", "aaa", "lb", "ob", "bs", "gb", "db", "d", "bc", "bf", "v", "y", "bar", "bt", "arb", "cb", "j", "f", "rob", "back", "emb", "ble", "pb", "bis", "bp", "br", "B", "rb", "p", "u"], "c": ["cp", "ch", "e", "cm", "crit", "cd", "ec", "cr", "xc", "d", "sc", "r", "cos", "bc", "v", "cc", "C", "cont", "co", "fc", "lc", "cv", "m", "cs", "cf", "tc", "etc", "con", "t", "dc", "z", "cn", "ce", "ct", "ca", "cu", "unc"], "i": ["in", "multi", "si", "json", "ip", "set", "chain", "zi", "di", "ion", "point", "ini", "err", "iy", "info", "ski", "hi", "phi", "it", "ie", "qi", "ik", "y", "sim", "ia", "uri", "q", "init", "ami", "ori", "ii", "gi", "us", "to", "cli", "ji", "ic", "ri", "bi", "iu", "ios", "jp", "ei", "g", "j", "io", "ni", "ind", "remote", "ij", "mu", "is", "li", "ui", "client", "ix", "ies", "yi", "ti", "ai", "e", "xi", "pi", "mi", "ity", "ci", "oi", "id", "m", "ki", "\u0438", "batch", "ims", "fi", "im", "u", "wi"], "count": ["result", "nb", "add", "total", "cache", "test", "now", "counter", "sum", "cd", "found", "th", "conf", "ctx", "amount", "flag", "common", "nt", "v", "C", "cont", "type", "current", "error", "h", "length", "hold", "index", "cast", "gc", "call", "Count", "t", "acc", "ount", "ct", "ctr", "p", "val", "history"]}}
{"code": "\\nimport java.util.*;\\n\\n/**\\n * Main\\n */\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t// \u6574\u6570\u306e\u5165\u529b\\n\t\tint N = sc.nextInt();\\n\t\tint V[] = new int[N];\\n\t\tint C[] = new int[N];\\n\t\tint mouke[] = new int[N];\\n\t\tint ans = 0;\\n\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\tV[i] = sc.nextInt();\\n\t\t}\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\tC[i] = sc.nextInt();\\n\t\t\tans += Math.max(V[i] - C[i], 0);\\n\t\t}\\n\\n\t\tSystem.out.println(ans);\\n\\n\t\tsc.close();\\n\t}\\n};", "target": "26", "substitutes": {"sc": [" scr", "ch", "sb", " scorer", "cr", "Sc", "c", " sh", "sys", "proc", "SC", " sa", " Sc", "rc", " SC", "scan", " cr", " ss", "ss", "sq", "system", "cs", " sk", " sw", " sp", "sa", "sv", "sp"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        String line = sc.nextLine();\\n        char[] line1 = line.toCharArray();\\n        if(line1[0] == line1[1]){\\n            if(line1[2] != line1[1]){\\n                if(line1[2] == line1[3])\\n                System.out.println(\"Yes\");\\n                else\\n                System.out.println(\"No\");\\n            }\\n            else\\n            System.out.println(\"No\");\\n        }\\n        else if(line1[0] == line1[2]){\\n            if(line1[0] != line1[1]){\\n                if(line1[1] == line1[3])\\n                System.out.println(\"Yes\");\\n                else\\n                System.out.println(\"No\");\\n            }\\n            else\\n            System.out.println(\"No\");\\n        }\\n        else if(line1[0] == line1[3]){\\n            if(line1[0] != line1[1]){\\n                if(line1[1] == line1[2])\\n                System.out.println(\"Yes\");\\n                else\\n                System.out.println(\"No\");\\n            }\\n            else\\n            System.out.println(\"No\");\\n        }\\n        else if(line1[1] == line1[2]){\\n            if(line1[0] != line1[1]){\\n                if(line1[0] == line1[3])\\n                System.out.println(\"Yes\");\\n                else\\n                System.out.println(\"No\");\\n            }\\n            else\\n            System.out.println(\"No\");\\n        }\\n        else if(line1[1] == line1[3]){\\n            if(line1[0] != line1[1]){\\n                if(line1[0] == line1[2])\\n                System.out.println(\"Yes\");\\n                else\\n                System.out.println(\"No\");\\n            }\\n            else\\n            System.out.println(\"No\");\\n        }\\n        else if(line1[2] == line1[3]){\\n            if(line1[1] != line1[2]){\\n                if(line1[0] == line1[1])\\n                System.out.println(\"Yes\");\\n                else\\n                System.out.println(\"No\");\\n            }\\n            else\\n            System.out.println(\"No\");\\n        }\\n        else\\n        System.out.println(\"No\");\\n    }\\n}", "target": "33", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "Sync", "anc", "cr", "ec", "Sc", "c", "bc", "cc", "sys", "screen", "SC", "lc", " Sc", "rc", "RC", "sch", "sec", "sr", "nl", "scan", "ss", "cl", "system", "nc", "cs", "tc", "sq", "pc", "isc", "desc", "syn", "scl", "sv", "sp", "esc"], "line": ["in", "Line", "list", "space", "e", "inline", "file", "source", "block", "pe", "l", "lin", "char", "row", "out", "text", "ine", "str", "lo", "cell", "lock", "LINE", "liner", "lc", "word", "le", "string", "shell", "nl", "log", "sl", "ln", "ne", "se", "page", "link", "pipe", "base", "code", "sample", "frame", "sp"], "line1": ["chain61", " line3", "chain118", "layer001", "range001", " line8", "chain91", "level001", "store31", "handle21", "inline51", "lock01", "Print", "deviceone", "frame100", " line6", "handle1001", "line11", "device15", "range100", "Line1", "line0", "dateone", "entry6", "line21", "queue9", "line01", "rule100", " lineOne", " line001", "range1", "inline001", "note1", "tile001", "chain1", " line91", "point41", " line30", "point91", "chain31", " line14", " line1001", "pointone", "stay8", "record31", "entry14", "node1", "record101", "thread60", "group1", "point15", "ine41", "ine1", "lock31", "rule51", "queue118", "netAP", "record01", "line15", "site41", "frame127", "chain01", "lineOne", "point51", "entry41", "node101", "point21", "date60", "level1", "point9", "range6", "inline101", "handle1", "stay001", "line18", "node41", "lockone", "queue001", "email1", "stay01", " line15", "lineMap", "rule91", "queue1", "storeP", "point1", "line17", "line8", "device17", "thread1", " line11", "inline91", " lineHistory", "entry9", "device1", "record001", "lineone", "entry15", "line30", "date1", "_", "record15", "chainOne", "chain15", "entry100", "device11", " line118", "tile118", "inline31", "line127", "stay61", "rule1", "chain41", "device30", "ine18", "store001", "line2", "point101", "tileone", " line21", "ine30", "ineP", "lock118", "pointapp", "threadAP", "Line3", " line2", "handle101", "Line2", "lineAP", "lockapp", "net001", "line14", "Exception", "net1", "lock41", "entryone", "ine11", "ine127", "stay31", "line101", "rule15", "thread15", "record16", "entry1", "deviceHistory", "ine91", "line61", "ine100", "point30", "point16", "entryMap", "email21", "lineapp", "lock14", "pageOne", "line60", "lockOne", "LINEone", "line1001", "note001", "chainone", "line001", "point001", "layer15", " line0", "line3", "line100", "inlineone", "node127", "node001", "lock100", "layer91", "nodeone", "node11", "lock91", "group91", "net60", "ine17", " line101", "range118", "node31", "LINE1", " line01", "se", "line9", "chain11", "layer1", "LINEOne", "lineP", "func", "date001", "email101", "group15", "cont", "line41", "email15", "inline21", "frame1", "lock21", "lock1001", "stayone", "inline1", "page2", "note0", "page3", "record1", "lock15", " lineMap", "ine001", "record0", "node15", "LineOne", "dateAP", "net15", "chain8", "lock101", "net01", "line31", "point118", "point14", "lock1", "line6", " lineapp", "group100", "ineone", "line51", "site01", "handle001", "Ex", "queueP", "chain101", "site1", "rule101", "ln", "entry118", "point100", "lineHistory", "rangeone", "handle91", "site14", "lockMap", "LINE6", "chain6", "node100", "siteOne", "store1", "queue14", " line41", "chain100", " line100", "levelone", "ineHistory", "entry001", "chain17", "frame18", "inline15", "stay1", "node18", "chain001", "net16", "ine15", "node01", "chain30", "line118", "site100", "site001", "point01", "entry31", "point11", " line31", "lock30", " line61", "date15", "line91", " lineone", "tile1", "page1", "netone", "lock001", "line16", "level118"]}}
{"code": "import java.math.BigInteger;\\nimport java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.Collections;\\nimport java.util.Comparator;\\nimport java.util.HashMap;\\nimport java.util.HashSet;\\nimport java.util.Iterator;\\nimport java.util.List;\\nimport java.util.Map;\\nimport java.util.Map.Entry;\\nimport java.util.PriorityQueue;\\nimport java.util.Scanner;\\n\\nclass Main {\\n    static final int MOD = 1000000007;\\n    static final int INF = 1 << 30;\\n    static final int ALF = 26;\\n\\n    Main() {\\n        Scanner sc = new Scanner(System.in);\\n        int A = sc.nextInt();\\n        int B = sc.nextInt();\\n        System.out.println(1+2+3-A-B);\\n    }\\n\\n    public static void main(String[] args) {\\n        new Main();\\n    }\\n}\\n", "target": "236", "substitutes": {"MOD": ["DEC", "RO", "REM", " MAX", "MAX", "EXP", "LAB", "VER", "FF", "REF", " mod", "PER", "AD", "RES", "MAG", "MS", "Mod", "MODE", "MD", "mod", "OK", "RC", "CC", "MIN", "LOG", "UL", "COM", "MAC"], "INF": ["PINDF", "INV", "PINV", "PINF", "InF", "InDF", "INDF", "InFF", " INV", "INFF", " INDF", "PINFF", "InV", " INFF"], "ALF": ["ILC", "ULG", "ULC", "ULV", "ILG", "ASF", "ULF", "ILV", "ILF", "ASG", "ASV", "ALG", "ALC", "ASC", "ALV"], "sc": ["ch", "sync", "cle", "cam", "asc", "mc", "osc", "cr", "Sc", "scope", "c", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "cv", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "pb", "nc", "system", "cs", "tc", "sq", "disc", "tch", "pc", "acc", "syn", "isc", "desc", "scl", "capt", "sh", "sv", "sp", "esc"], "A": ["AB", "S", "D", "BA", "AF", "E", "ESS", "AC", "AGE", "H", "Y", "P", "RA", "AD", "MA", "SA", "Array", "AV", "M", "C", "ACT", "X", "LA", "AR", "a", "G", "ABC", "AA", "AL", "IA", "AP", "L", "AU", "AM", "N", "Ax", "An"], "B": ["AB", "S", "J", "BB", "D", "RB", "BA", "T", "E", "b", "IB", "VB", "H", "Y", "USB", "P", "Bern", "Blue", "V", "BD", "BO", "M", "C", "G", "I", "BI", "R", "EB", "FB", "LB", "BM", "BL", "L", "Brian", "F", "N", "O", "DB"]}}
{"code": "import java.util.*;\\nimport static java.lang.System.*;\\n\\npublic class Main{\\n  public static void main(String[] args){\\n\t  Scanner sc = new Scanner(System.in);\\n\t  \\n\t  int N = sc.nextInt();\\n\t  int[] A = new int[N+1];\\n\t  int[] B = new int[N];\\n\t  long count = 0;  \\n\t  for(int i=0; i<N+1; i++) {\\n\t\t  A[i] = sc.nextInt();\\n\t  }\\n\t  for(int i=0; i<N; i++) {\\n\t\t  B[i] = sc.nextInt();\\n\t  }\\n\t  \\n\t  for(int i=0; i<N; i++) {\\n\t\t  int n = Math.min(A[i], B[i]);\\n\t\t  count += n;\\n\t\t  B[i] -= n;\\n\t\t  A[i] -= n;\\n\t\t  int m = Math.min(A[i+1], B[i]);\\n\t\t  count += m;\\n\t\t  A[i+1] -= m;\\n\t  }\\n\t  out.println(count);  \\n\t  \\n  }\\n}", "target": "159", "substitutes": {"sc": ["irc", "si", "ch", "sync", "sw", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "Sc", "sci", "c", "ctx", "Desc", "bc", "cc", "sys", "fc", "SC", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "pb", "nc", "sq", "cs", "tc", "system", "pc", "ctl", "psc", "isc", "syn", "capt", "scl", "sh", "desc", "sv", "sp", "esc"], "N": ["NP", "NI", "None", "S", "NA", "J", "D", "NAME", "NV", "T", "NM", "NH", "K", "No", "Y", "Z", "P", "V", "NT", "M", "C", "X", "Sn", "NO", "Ni", "NE", "Size", "NB", "I", "G", "TN", "R", "ANY", "NL", "NR", "NN", "Ns", "NPR", "NC", "NS", "L", "MAN", "GN", "F", "ND", "O", "SN", "AN", "Name"], "A": ["AY", "AB", "S", "At", "Al", "AT", "ART", "This", "BA", "AF", "E", "EA", "AC", "U", "JA", "ATA", "H", "As", "P", "HA", "RA", "Ar", "AH", "CA", "MA", "SA", "AV", "Array", "ACC", "ACT", "C", "M", "AE", "Alpha", "LA", "AR", "I", "G", "AA", "R", "TA", "App", "AL", "IA", "The", "AP", "Ant", "L", "Av", "AU", "AM", "All", "AST", "API", "AN", "An"], "B": ["BG", "AB", "Bs", "BR", "BB", "J", "BF", "D", "RB", "BA", "BER", "CB", "IB", "b", "BP", "VB", "Y", "Lib", "BY", "BT", "TB", "Blue", "V", "BD", "BO", "M", "C", "SB", "BC", "WB", "NB", "I", "G", "BE", "BI", "OB", "Bar", "R", "BS", "EB", "LB", "PB", "Other", "BM", "BL", "L", "GB", "DB"], "count": ["nb", "result", "report", "summary", "core", "size", "list", "scroll", "total", "quiet", "check", "cache", "diff", "test", "status", "comment", "now", "l", "counter", "sum", "found", "out", "c", "amount", "d", "flag", "trace", "find", "nt", "number", "length", "ind", "print", "force", "hold", "command", "cast", "cond", "index", "call", "Count", "cmd", "debug", "t", "ount", "reason", "z", "stat", "num", "message", "ct", "temp", "ctr", "weight", "history"], "i": ["multi", "list", "si", "iii", "ip", "set", "chain", "zi", "di", "point", "ini", "err", "iy", "me", "info", "hi", "associated", "phi", "it", "ie", "o", "qi", "ik", "y", "sim", "ia", "uri", "q", "init", "ami", "ori", "ii", "gi", "cli", "ji", "inner", "ic", "ri", "bi", "iu", "key", "et", "ei", "this", "g", "j", "io", "I", "ind", "ij", "is", "li", "ui", "client", "ix", "ti", "ai", "xi", "pi", "parent", "mi", "ity", "v", "ci", "iso", "oi", "id", "ki", "\u0438", "batch", "fi", "im", "u"], "n": ["nb", "an", "en", "ot", "nn", "s", "l", "k", "ns", "x", "c", "un", "d", "nr", "g", "r", "nm", "nt", "v", "tn", "y", "ng", "j", "h", "number", "sn", "fn", "nu", "nl", "log", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "net", "dn", "gn", "p", "mn"], "m": ["ms", "mx", "md", "perm", "mt", "sm", "cm", "mr", "um", "mc", "mm", "l", "b", "c", "d", "g", "r", "mi", "pm", "v", "M", "y", "rm", "j", "f", "h", "tm", "vm", "mac", "dm", "t", "z", "gm", "bm", "em", "p", "mn"]}}
{"code": "import java.util.*;\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.Arrays;\\nimport java.util.StringTokenizer;\\n\\n/*\\n* Problem : 151A\\n* Acknowledgement : None\\n* Author : Deathnaught_\\n* Github : www.github.com/DeathNaughT-GitHub\\n* Complexity : O(1)\\n*/\\n\\npublic class Main\\n{\\n    static class FastReader \\n    { \\n\\n        BufferedReader br; \\n        StringTokenizer st; \\n  \\n        public FastReader() \\n        { \\n            br = new BufferedReader(new InputStreamReader(System.in)); \\n        } \\n  \\n        String next() \\n        { \\n            while (st == null || !st.hasMoreElements()) \\n            { \\n                try\\n                { \\n                    st = new StringTokenizer(br.readLine()); \\n                } \\n                catch (IOException  e) \\n                { \\n                    e.printStackTrace(); \\n                } \\n            } \\n            return st.nextToken(); \\n        } \\n\\n        char nextChar()\\n        {\\n            return next().charAt(0);\\n        }\\n  \\n        int nextInt() \\n        { \\n            return Integer.parseInt(next()); \\n        } \\n  \\n        long nextLong() \\n        { \\n            return Long.parseLong(next()); \\n        } \\n  \\n        double nextDouble() \\n        { \\n            return Double.parseDouble(next()); \\n        } \\n  \\n        String nextLine() \\n        { \\n            String str = \"\"; \\n            try\\n            { \\n                str = br.readLine(); \\n            } \\n            catch (IOException e) \\n            { \\n                e.printStackTrace(); \\n            } \\n            return str; \\n        } \\n\\n        int[] nextArray(int rows)\\n        {\\n            int arr[] = new int[rows];            \\n            for (int i = 0; i < rows; i++)\\n            arr[i] = nextInt();\\n            return arr;\\n        }\\n\\n        long[] nextLongArray(int rows)\\n        {\\n            long arr[] = new long[rows];            \\n            for (int i = 0; i < rows; i++)\\n            arr[i] = nextLong();\\n            return arr;\\n        }\\n\\n        char[] nextCharArray(int rows)\\n        {\\n            char arr[] = new char[rows];\\n            for (int i = 0; i < rows; i++)\\n            arr[i] = next().charAt(0);\\n            return arr;\\n        }\\n\\n        int[][] nextMatrix(int rows, int columns)\\n        {\\n            int mat[][] = new int[rows][columns];\\n            for (int i = 0; i < rows; i++)\\n            {\\n                for (int j = 0; j < columns; j++)\\n                {\\n                    mat[i][j] = nextInt();\\n                }\\n            }\\n            return mat;\\n        }\\n\\n        char[][] nextCharMatrix(int rows, int columns)\\n        {\\n            char mat[][] = new char[rows][columns];\\n            for (int i = 0; i < rows; i++)\\n            {\\n                for (int j = 0; j < columns; j++)\\n                {\\n                    mat[i][j] = nextChar();\\n                }\\n            }\\n            return mat;\\n        }\\n    } \\n\\n    public static void main(String[] args) \\n    {\\n        \\n        FastReader sc = new FastReader();\\n     \tchar C = sc.nextChar();\\n      \tSystem.out.println((char)(C + 1));\\n    }\\n}", "target": "150", "substitutes": {"br": ["ber", "bsp", "wr", "bl", "hr", "Tr", " bro", "kr", "bb", "ch", "BR", "sb", "Br", "pt", "vr", "mr", "next", "fr", "tr", "b", "buf", "dr", "browser", "bd", "bs", "cr", "jp", "rel", "gr", "r", "bh", "bc", "brace", " tr", "bt", "sp", "bridge", "lr", "bra", "shr", "bp", "bre", "rb", "bm", "ger", "pr", "ctr", "bro", "bn"], "st": ["bl", "ft", "std", "nd", "ste", "ost", "sts", "sy", "sb", "s", "mt", "tmp", "pt", "sw", "sm", "et", "stop", "sty", "l", "tr", "const", "step", "th", "rt", "cr", "ust", " ST", "nt", "ST", "sth", "bt", "start", "inst", "sn", "ut", "rest", "cl", "sl", "ss", "stable", "stack", "so", "sam", "se", "sta", "t", "ist", "St", "stat", " superst", "ct", "sh", "sv", "sp", "est"], "str": ["bl", "cur", "vol", "s", "sw", "cat", "ocr", "msg", "next", "fr", "STR", "tr", "buf", "dr", "ns", "del", "par", "stri", "cr", "char", "text", "gr", "r", "spr", "ar", "cont", "err", "dat", "ret", "res", "print", "string", "Str", "ent", "sl", "shr", "raw", "t", "txt", "pr", "div", "ctr", "hex", "enc", "sp"], "rows": ["jobs", "orts", "boxes", "eeks", "faces", "rates", "days", "airs", "OWS", "rices", "length", "orders", "ips", "files", "types", "times", "checks", "cases", "modules", "states", "ris", "fs", "pages", "ids", "flows", "users", "s", "issues", "ows", "features", "cells", "ins", "resources", "lines", "uploads", "runs", "values", "cs", "tests", "groups", "bys", "rules", "errors", "reads", "ms", "results", "blocks", "obs", "images", "tracks", "models", "ios", "views", "rown", "uds", "row", "workers", "keys", "olds", "its", "xs", "ries", "ums", "relations", "rs", "ues", "names", "frames", "ports", "ns", "ords", "ros", "levels", "fields", "posts", "months", "heads", "ims", "headers", "docs", "ints"], "arr": ["rep", "val", "bl", "list", "var", "cur", "obj", "nt", "ab", "vol", "dict", "tmp", "cat", "msg", "all", "ll", "fr", "ax", "expr", "tr", "buf", "dr", "par", "aj", "arg", "row", "db", "rel", "coll", "gr", "def", "Ar", "addr", "r", "air", "act", "js", "cell", "ar", "ray", "ptr", "err", "dat", "bar", "res", "ell", "app", "py", "hash", "body", "rest", "ble", "attr", "batch", "att", "data", "acc", "array", "agg", "pl", "ev", "txt", "elt", "map", "er", "enc"], "i": ["yi", "bi", "multi", "list", "si", "ti", "ai", "ip", "it", "ri", "iu", "ie", "status", "o", "PI", "es", "zi", "xi", "di", "pi", "qi", "ice", "ei", "this", "mi", "ity", "ini", "v", "ci", "y", "id", "oi", "ia", "sim", "io", "f", "iq", "ni", "I", "ij", "q", "init", "iy", "m", "ami", "php", "me", "ki", "\u0438", "MI", "batch", "ii", "gi", "info", "us", "ims", " I", "is", "li", "ex", "hi", "ui", "cli", "ji", "ix", "im", "ic", "phi", "u", "fire"], "columns": ["Columnries", "Columnensions", "colensions", "Columnds", "umnals", "Columns", "Columnes", "colds", "colries", "columnals", "cols", "coles", "umns", "Columnals", "columnitions", "outputitions", "outputs", "columnds", "COLals", "umnries", "COLes", "columnries", "columnensions", "umnes", "columnes", "outputes", "outputensions", "Columnitions", "colitions", "COLs", "colals", "COLds"], "mat": ["hat", "mult", "at", "it", "img", "mt", "cat", "mid", "lat", "dim", "et", "lab", "mm", "table", "rat", "feat", "vert", "rt", "Cat", "vec", "format", "def", "Mat", "tab", "pat", "act", "dat", "plot", "m", "mk", "mon", "cond", "att", "xy", "tri", "net", "ct", "par"], "j": ["jo", "bj", "oj", "ot", "obj", "jc", "J", "json", "s", "ie", "key", "o", "l", "b", "dj", "k", "jj", "jas", "aj", "jl", "x", "jp", "d", "uj", "js", "g", "r", "v", "ja", "y", "ph", "jac", "py", "q", "ij", "je", "m", "kj", "us", "att", "t", "xy", "z", "job", "jump", "other", "ji", "n", "pr", "p"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n    \t\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t// \u6574\u6570\u306e\u5165\u529b\\n\t\tint N = sc.nextInt();\\n\t\t\\n\t\tint intArray[] = new int[N];\\n\\n\t\tfor(int i = 0 ;i < N;i++){\\n\t\t\tintArray[i] = sc.nextInt();\\n\t\t}\\n\\n\t\tint cnt = 0;\\n\t\tfor(int i = 0 ;i < N-2;i++){\\n\t\t\tif(intArray[i]<intArray[i+1]) {\\n\t\t\t\tif(intArray[i+1]<intArray[i+2]) {\\n\t\t\t\t\tcnt ++;\\n\t\t\t\t}\\n\t\t\t\t\\n\t\t\t}else {\\n\t\t\t\tif(intArray[i]>intArray[i+1]) {\\n\t\t\t\t\tif(intArray[i+1]>intArray[i+2]) {\\n\t\t\t\t\t\tcnt ++;\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(cnt);\\n\\n   \t\tsc.close();\\n        return ;\\n\\n    }\\n    \\n}\\n\\n", "target": "96", "substitutes": {"sc": [" scr", "ch", "sw", "src", "sk", "cr", "Sc", "c", "bc", "sys", "SC", " Sc", "rc", " SC", "gc", "scan", " ss", "nc", "system", "cs", " sk", "sq", "pc", "dc", " sp", "sa", "sv", "sp"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n  private static int solve(int n, int[] as) {\\n    boolean[] visited = new boolean[n];\\n    int index = 0;\\n    int count = 0;\\n    while (true) {\\n      visited[index] = true;\\n      count++;\\n      index = as[index] - 1;\\n      if (visited[index]) {\\n        return -1;\\n      }\\n      if (index == 1) {\\n        return count;\\n      }\\n    }\\n  }\\n  \\n  private static void execute(ContestReader reader, PrintWriter out) {\\n    int n = reader.nextInt();\\n    int[] as = reader.nextInt(n);\\n    out.println(solve(n, as));\\n  }\\n  \\n  public static void main(String[] args) {\\n    ContestReader reader = new ContestReader(System.in);\\n    PrintWriter out = new PrintWriter(System.out);\\n    execute(reader, out);\\n    out.flush();\\n  }\\n}\\n\\nclass ContestReader {\\n  private BufferedReader reader;\\n  private StringTokenizer tokenizer;\\n  \\n  ContestReader(InputStream in) {\\n    reader = new BufferedReader(new InputStreamReader(in));\\n  }\\n  \\n  public String next() {\\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n      try {\\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\\n      } catch (Exception e) {\\n        throw new RuntimeException(e);\\n      }\\n    }\\n    return tokenizer.nextToken();\\n  }\\n  \\n  public int nextInt() {\\n    return Integer.parseInt(next());\\n  }\\n  \\n  public long nextLong() {\\n    return Long.parseLong(next());\\n  }\\n  \\n  public double nextDouble() {\\n    return Double.parseDouble(next());\\n  }\\n  \\n  public String[] next(int n) {\\n    String[] array = new String[n];\\n    for (int i = 0; i < n; i++) {\\n      array[i] = next();\\n    }\\n    return array;\\n  }\\n  \\n  public int[] nextInt(int n) {\\n    int[] array = new int[n];\\n    for (int i = 0; i < n; i++) {\\n      array[i] = nextInt();\\n    }\\n    return array;\\n  }\\n  \\n  public long[] nextLong(int n) {\\n    long[] array = new long[n];\\n    for (int i = 0; i < n; i++) {\\n      array[i] = nextLong();\\n    }\\n    return array;\\n  }\\n  \\n  public double[] nextDouble(int n) {\\n    double[] array = new double[n];\\n    for (int i = 0; i < n; i++) {\\n      array[i] = nextDouble();\\n    }\\n    return array;\\n  }\\n  \\n  public char[] nextCharArray() {\\n    return next().toCharArray();\\n  }\\n  \\n  public int[][] nextInt(int n, int m) {\\n    int[][] matrix = new int[n][m];\\n    for (int i = 0; i < n; i++) {\\n      for (int j = 0; j < m; j++) {\\n        matrix[i][j] = nextInt();\\n      }\\n    }\\n    return matrix;\\n  }\\n  \\n  public long[][] nextLong(int n, int m) {\\n    long[][] matrix = new long[n][m];\\n    for (int i = 0; i < n; i++) {\\n      for (int j = 0; j < m; j++) {\\n        matrix[i][j] = nextLong();\\n      }\\n    }\\n    return matrix;\\n  }\\n  \\n  public double[][] nextDouble(int n, int m) {\\n    double[][] matrix = new double[n][m];\\n    for (int i = 0; i < n; i++) {\\n      for (int j = 0; j < m; j++) {\\n        matrix[i][j] = nextDouble();\\n      }\\n    }\\n    return matrix;\\n  }\\n  \\n  public char[][] nextCharArray(int n) {\\n    char[][] matrix = new char[n][];\\n    for (int i = 0; i < n; i++) {\\n      matrix[i] = next().toCharArray();\\n    }\\n    return matrix;\\n  }\\n}\\n", "target": "175", "substitutes": {"n": ["an", "en", "size", "nw", "network", "l", "np", "c", "nm", "no", "ng", "nu", "nan", "node", "N", "p", "nv", "s", "o", "see", "b", "x", "nr", "tn", "y", "on", "name", "ren", "any", "nc", "ln", "net", "len", "serial", "inner", "nb", "none", "k", "def", "g", "r", "nt", "a", "number", "sn", "ni", "_", "ne", "t", "na", "cn", "rn", "nn", "names", "e", "w", "ns", "pi", "println", "d", "un", "v", "cont", "f", "php", "nl", " N", "z", "num", "mn"], "as": ["acs", "ars", "mas", "les", "ms", "las", "axis", "at", "ase", "s", "ais", "aos", "from", "jas", "with", "ns", "cas", "aus", "bs", "As", "asin", "nas", "AS", "ast", "ts", "am", "asa", "nos", "ats", "oss", "ar", "ras", "asha", "ma", "a", "ac", "ases", "ams", "asi", "types", "phas", "us", "os", "cs", "params", "sis", "ps", "is", "pa", "na", "ations", "sa", "ias", "rs"], "visited": ["visualied", "VISated", "guited", "VisITED", "visITED", "visiter", "VISitted", "guiter", "vited", "accessited", "invited", "Visited", "visuated", "servied", "serviter", "VISited", "Visitted", "acquitted", "invended", "visualited", "servited", "visualuated", "virted", "acquirted", "visied", "acquated", "VISirted", "servuated", "visated", "visitted", "accessitted", "accessITED", "acquited", "visualiter", "invitted", "guuated", "visended", "Visended", "invITED", "vitted", "accessended", "vated", "guied", "visirted"], "index": ["list", "size", "axis", "loop", "success", "set", "Index", "local", "position", "all", "c", "frequency", "ion", "find", "forward", "point", "primary", "span", "length", "exp", "continue", "link", "offset", "label", "location", "val", "open", "level", "context", "x", "search", "example", "request", "len", "second", "update", "iter", "key", "connect", "state", "element", "row", "address", "type", "error", "pos", "number", "ind", "zero", "head", "ex", "ix", "item", "false", "condition", "port", "check", "xx", "instance", "loc", "dimension", "id", "start", "document", "cond", "page", "input", "num", "match"], "count": ["nb", "result", "add", "val", "list", "size", "iter", "total", "last", "max", "cycle", "empty", "next", "counter", "sum", "const", "found", "conf", "c", "amount", "coll", "frequency", "find", "nt", "cc", "cont", "current", "number", "process", "length", "ind", "value", "child", "cond", "call", "Count", "zero", "ount", "base", "z", "num", "code", "ct", "more", "ctr", "weight"], "reader": ["Reader", "older", "random", "mr", "linger", "window", "or", "owner", "peer", "runner", " writer", "buffer", "via", "writer", "rb", " ruler", "controller", "null", "yard", "builder", "file", "run", "keeper", "reflect", "ner", "iterator", "oder", "resource", "rer", "word", "ry", "loader", "server", "readable", "inner", "manager", "core", "ler", "iter", "journal", "red", "rd", "dr", "row", "worker", "this", "r", "rc", "timer", "wrapper", "rr", "stream", "client", "rs", "entry", "ro", "read", "fr", "driver", "user", "book", "rl", "handler", "finder", "parser", "document", "rx", "actor", "data", "ser", "input", "er", "rar"], "out": ["report", "outer", "list", "at", "OU", "obj", "it", "null", "console", "set", "w", "aos", "all", "pool", "o", "Out", "table", "user", "flush", "outs", "this", "str", "r", "end", "nt", "sys", "co", "screen", "err", "name", "error", "io", "print", "log", "gc", "buffer", "write", "OUT", "info", "output", "os", "writer", "to", "t", "exit", "ex", "net", "txt", "client", "code", "inner", "p", "ou"], "tokenizer": ["okenifier", "Tokener", "tokenizers", "okenize", "singleize", "okenizer", " tokenifier", " tokenzer", " tokenater", "colorizers", "tokenoder", "okenoder", "colorizer", "Tokenner", " tokenize", " tokener", " tokenization", "tokenger", " tokenoder", "Tokenization", "colorner", "tokenifier", "Tokenater", "okenzer", "Tokenifier", "okenater", "singleoder", "tokenize", "Tokenger", "tokenoser", " tokenger", " tokenizers", "Tokenizer", "tokenzer", "colorzer", " tokenoser", "Tokenzer", "Tokenizers", " tokenner", "Tokenize", "singleizer", "okenization", "tokenization", "tokenater", "tokenner", "okenger", "tokener", "okener", "singleoser", "okenoser"], "in": ["In", "null", "it", "din", "file", "from", "source", "o", "mm", "run", "l", "user", "ins", "rt", "bin", "c", "str", "inc", "r", "or", "ini", "err", "current", "on", "id", "ma", "io", "ac", "IN", "init", "log", "info", "con", "data", "t", "serv", "is", "stream", "input", "net", "cli", "inn", "inner", "p", "val", "ic", "cin"], "array": ["response", "record", "var", "list", "part", "expression", "section", "pair", "tmp", "cache", "file", "all", "now", "csv", "sequence", "camera", "table", "chain", "instance", "buf", "element", "area", "row", "audio", "amount", "format", "window", "relation", "trace", "my", "air", "Array", "parent", "ar", "ray", "global", "bar", "range", "collection", "export", "resource", "component", "append", "stage", "hash", "child", "view", "actor", "batch", "stack", "arrow", "root", "upper", "storage", "object", "external", "function", "raw", "other", "session", "message", "angular", "queue", "angle", "map", "archive", "our", "arr", "vector"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "iu", "ie", "key", "PI", "chain", "xi", "dr", "di", "pi", "qi", "ei", "my", "mi", "v", "ini", "ity", "ci", "y", "sim", "oi", "id", "io", "I", "q", "ij", "ami", "init", "me", "php", "ki", "\u0438", "MI", "batch", "ii", "gi", "info", "us", "ims", "mac", " I", "is", "li", "base", "ex", "ui", "cli", "ji", "ix", "fi", "im", "ic", "phi", "u", "fire"]}}
{"code": "import java.util.Arrays;\\nimport java.util.Scanner;\\n\\n/**\\n *\\n * @author lenovo\\n */\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n\\n        Scanner scanner = new Scanner(System.in);\\n        int a = scanner.nextInt();\\n        int b = scanner.nextInt();\\n        int c = scanner.nextInt();\\n\\n        int[] array = {a, b, c};\\n        Arrays.sort(array);\\n        String s=\"\"+array[0]+\" \"+array[1]+\" \"+array[2];\\n        System.out.println(s);\\n    }\\n}", "target": "37", "substitutes": {"scanner": ["planner", "canner", "caninner", "rowning", "rowner", "Scanter", "Scanning", " scanning", "scanter", "Scaninner", "canener", " scanener", "Scanator", "rowener", "scanning", "Scaner", "canator", "rowter", "Scanner", "planer", "canter", "planning", "scanener", "scaninner", " scaner", "Scanener", " scanator", "planter", "scaner", "scanator", "canning", " scanter", " scaninner"], "a": ["an", "la", "ba", "ab", "af", "ea", "e", "au", "aka", "l", "aaa", "aj", "area", "d", "A", "era", "r", "ia", "ma", "ta", "f", "admin", "ao", "alpha", "ac", "ae", "ga", "oa", "aa", "as", "t", "apa", "sa", "ca"], "b": ["bi", "ba", "ab", "bl", "bb", "fb", "ib", "sb", "ub", "wb", "erb", "eb", "ob", "gb", "by", "db", "bs", "d", "r", "bc", "v", "y", "cb", "reb", "h", "rob", "beta", "mb", "bis", "br", "B", "rb", "n", "be"], "c": ["abc", "cp", "ch", "e", "com", "content", "cm", "chain", "const", "crit", "cd", "cr", "ec", "d", "sc", "g", "bc", "fc", "co", "C", "cc", "cb", "lc", "cv", "rc", "ac", "q", "cond", "gc", "category", "tc", "cs", "cf", "etc", "dc", "cn", "ce", "city", "ca", "ct", "div", "n", "u"], "array": ["field", "order", "record", "response", "var", "list", "pair", "section", "integer", "random", "say", "now", "attribute", "table", "instance", "sound", "area", "row", "audio", "window", "library", "share", "air", "Array", "v", "ar", "ray", "bar", "range", "search", "collection", "number", "length", "word", "stage", "hash", "answer", "index", "batch", "arrow", "storage", "function", "object", "raw", "data", "one", "angle", "queue", "angular", "archive", "our", "arr", "vector"], "s": ["ses", "S", "e", "set", "ds", "w", "csv", "es", "l", "ns", "strings", "i", "ts", "d", "js", "str", "g", "v", "y", "h", "f", "res", "gs", "sg", "ls", "m", "ss", "qs", "less", "t", "ps", "simple", "n", "sql", "p", "sv", "rs", "gets"]}}
{"code": "import java.util.Arrays;\\nimport java.util.Scanner;\\n \\npublic class Main {\\n\tpublic static void main (String[] args) {\\n      Scanner in = new Scanner(System.in);\\n      int N = in.nextInt();\\n      int K = in.nextInt();\\n      int[] a = new int[N];\\n      for (int i = 0; i < N; i++) {\\n        a[i] = in.nextInt();\\n      }\\n      int[] dp = new int[N];\\n      dp[0] = 0;\\n      dp[1] = Math.abs(a[0] - a[1]);\\n      for(int i = 2; i< N ;i++){\\n        int k = 1;\\n        int temp = Integer.MAX_VALUE;\\n        while(k <= K && i-k >=0){\\n          temp = Math.min(temp, dp[i-k] + Math.abs(a[i] - a[i-k]));\\n          k++;\\n        }\\n        dp[i] = temp;\\n      }\\n      System.out.println(dp[N-1]);\\n\t}\\n}\\n", "target": "241", "substitutes": {"in": [" din", "en", "add", "std", "In", "din", "file", " out", "all", "source", "rin", "mm", "run", "l", "user", "sum", "ins", "thin", "rt", "by", "bin", "out", "conf", "doc", "inc", "cgi", "sin", "r", " In", "conn", "ini", "err", "id", "io", "conv", "win", "ind", "IN", "init", "log", "scan", "reader", "info", "ln", "con", "as", "gin", "isin", "is", "readable", "vin", "stream", "input", "serv", "net", "nin", "client", "n", "inn", "inf", "inner", "cin"], "N": ["NP", "NI", "S", "NA", "J", "UN", "D", "NV", "T", "NH", "NM", "H", "Y", "P", "V", "NT", "M", "C", "X", "Sn", "NO", "Ni", "NE", "Size", "NB", "I", "FN", "TN", "Len", "IN", "CN", "Node", "R", "NL", "NR", "NN", "Ns", "Num", "NC", "NS", "L", "GN", "Q", "n", "MN", "O", "ND", "SN", "AN"], "K": ["S", "J", "FK", "KR", "T", "KK", "E", "KS", "PK", "KI", "H", "Z", "P", "V", "KN", "M", "C", "UK", "W", "NB", "I", "G", "NK", "R", "SK", "KC", "KE", "L", "B", "F", "Q", "O"], "a": ["ap", "an", "av", "la", "ba", "ab", "eas", "ea", "at", "ai", "au", "e", "s", "ace", "all", "o", "aaa", "b", "area", "c", "am", "d", "A", "era", "act", "v", "ar", "ia", "ma", "ta", "f", "ao", "va", "app", "alpha", "ac", "m", "wa", "ata", "xa", "go", "ga", "oa", "att", "as", "aa", "data", "apa", "pa", "array", "sta", "fa", "na", "t", "sa", "ca", "n", "auto", "p"], "i": ["multi", "si", "ip", "chain", "l", "zi", "di", "c", "my", "ini", "err", "iy", "me", "go", "info", "hi", "n", "p", "phi", "it", "s", "ie", "o", "qi", "x", "ik", "y", "sim", "name", "q", "init", "index", "ori", "asi", "ii", "gi", "to", "cli", "ji", "inner", "ic", "ri", "bi", "iter", "iu", "this", "ei", "g", "j", "io", "ni", "I", "ind", "ij", "t", "li", "ex", " ii", "ui", "client", "ix", "ti", "ai", "e", "xi", "pi", "mi", "ity", "v", "ci", "id", "oi", "f", "iq", "m", "ki", "\u0438", "batch", "ims", "im", "u"], "dp": ["ap", "fp", "cp", "DP", "dq", "dt", "pkg", "tmp", "ds", "dos", "pt", "wp", "dep", "dj", "np", "dr", "di", "p", "deb", "vp", "dd", "tap", "db", "hp", "jp", "d", "def", "lp", "pm", "tp", "decl", "td", "eps", "df", "gp", "pd", "pb", "dm", "bp", "dc", "ps", "pa", "adr", "pipe", "dh", "dk", "du", "dl", "pp", "sp", "wd"], "k": ["ka", "kl", "ke", "kr", "it", "max", "set", "w", "kind", "wk", "sk", "key", "kid", "l", "u", "tek", "pi", "ko", "kick", "x", "isk", "ik", "g", "ek", "v", "kt", "ku", "id", "ok", "ak", "j", "kw", "kk", "q", "m", "mk", "kj", "ki", "km", "ck", "tc", "tk", "t", "z", "dk", "n", "unk", "ijk", "kh", "ikk"], "temp": ["result", "tt", "mp", "cp", "copy", "perature", "complete", "partial", "total", "iter", "null", "termin", "tmp", "max", "emp", "pt", "level", "test", "fd", "key", "term", "now", "cum", "mm", "tr", "tim", "step", "sum", "p", "prime", "tem", "template", "trace", "ptr", "v", "mod", "current", "mint", "ta", "make", "Temp", "timer", "tm", "fake", "buffer", "tc", "t", "base", "txt", "em", "mem", "cu", "Temperature", "wait"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        long N = sc.nextLong();\\n        long min = Long.MAX_VALUE;\\n        long rootN = (long) Math.sqrt(N);\\n        for(long i =  2; i <= rootN; i++){\\n            if(N % i == 0){\\n                long n = N / i;\\n                min = Math.min(min, (n-1)+ (i - 1));\\n            }\\n        }\\n        if(min > N){\\n            min = N -1;\\n        }\\n        System.out.println(min);\\n    }\\n}\\n", "target": "157", "substitutes": {"sc": ["ch", "sync", "sb", "asc", "sm", "mc", "osc", "Sync", "cr", "Sc", "out", "sel", "c", "Desc", "ner", "r", "bc", "cc", "sys", "ng", "SC", " Sc", "rc", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "nc", "system", "cs", "sq", "spec", "pc", "ser", "isc", "desc", "scl", "sv", "Scan", "sp", "esc"], "N": ["NP", "NI", "NG", "S", "NA", "J", "D", "NV", "T", "NM", "NH", "K", "P", "NT", "V", "M", "C", "NUM", "Sn", "NO", "Ni", "NE", "W", "Size", "NB", "G", "FN", "TN", "I", "CN", "Node", "R", "NL", "NN", "NR", "MIN", "Ns", "Num", "CNN", "NS", "L", "GN", "MN", "F", "ND", "SN", "AN"], "min": ["in", "size", "snap", "max", "diff", "mr", "low", "local", "l", "amin", "sum", "common", "find", "no", "mod", "log", "minus", "down", "scale", "Min", "mean", "tail", "mine", "latest", "sub", "rel", "left", "Minimum", "search", "minute", "just", "init", "fn", "lr", "shift", "sort", "MIN", "dist", "emin", "temp", "sample", "second", "partial", "aug", "next", "consider", "none", "tr", "opt", "lower", "margin", "only", "default", "Mini", "mini", "ni", "ind", "nom", "rest", "mins", "minimum", "ne", "suggest", "small", "dem", "add", "part", "lt", "gem", "sol", "don", "cmp", "un", "start", "m", "pre", "never", "spec", "stat", "div", "mn"], "rootN": ["RootL", " rootNB", "ootNS", "RootN", "rootNT", "ootL", " rootL", "RootNT", "ootNB", " rootNS", "RootNB", "rootNS", "RootNS", "parentNT", "parentNS", "ootN", "parentL", "rootL", "rootNB", " rootNT", "parentN"], "i": ["bi", "multi", "si", "ti", "ai", "e", "it", "ip", "iu", "ie", "o", "l", "zi", "xi", "di", "pi", "qi", "x", "d", "ei", "g", "ik", "mi", "v", "ini", "ci", "sim", "id", "j", "io", "a", "ni", "I", "ind", "me", "m", "index", "ori", "ki", "\u0438", "asi", "gi", "ii", "t", "is", "li", "hi", "ui", "cli", "ix", "p", "im", "ic", "phi", "ri"], "n": ["nb", "en", "nn", "nw", "next", "all", "ll", "o", "l", "np", "ns", "x", "c", "g", "norm", "nm", "on", "Ni", "j", "sn", "ni", "fn", "m", "nu", "ln", "ne", "nan", "t", "na", "L", "cn", "num", "net", "len", "gn", "p", "mn"]}}
{"code": "import java.util.Scanner;\\nclass Main{\\npublic static void main(String[] args){\\nScanner scan =new Scanner(System.in);\\n\\nint a=scan.nextInt();\\nint b=scan.nextInt();\\nint c,d;\\ndouble e;\\nc=a/b;\\nd=a%b;\\ne=(double)a/(double)b;\\nSystem.out.print(c+\" \"+d+\" \");\\nSystem.out.printf(\"%f\\n\",e);\\n}\\n}", "target": "90", "substitutes": {"scan": ["an", "query", "in", "en", " Scan", "scroll", "report", "spin", "ch", "nn", "sync", "sb", "check", "read", "send", "connect", "re", "ann", "run", "see", "k", "sum", "p", "row", "out", "sc", "get", "g", "parse", "ner", "r", "find", "skip", "sys", "proc", "black", "search", "conv", "can", "reach", "gc", "gate", "san", "system", "sort", "se", "ser", "util", "n", "sql", "sur", "auto", "sv", "Scan", " scanner"], "a": ["an", "la", "ba", "ab", "da", "ea", "at", "au", "aka", "l", "aaa", "aj", "area", "aux", "i", "am", "A", "r", "ar", "ak", "ia", "ma", "ta", "f", "h", "ao", "alpha", "ac", "ae", "abs", "oa", "aa", "as", "t", "sta", "apa", "sa", "ca", "p", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "fb", "sb", "wb", "w", "eb", "l", "ob", "bs", "by", "db", "i", "g", "r", "bc", "v", "y", "bar", "cb", "f", "h", "length", "m", "beta", "bis", "t", "br", "base", "z", "B", "rb", "n", "p"], "c": ["cp", "cur", "com", "cache", "cat", "cod", "cm", "ctrl", "enc", "cd", "cr", "ec", "arc", "i", "sc", "cos", "fc", "cc", "C", "ci", "co", "cb", "f", "lc", "rc", "ac", "uc", "cs", "cf", "con", "t", "dc", "cn", "ce", "code", "ct", "ca", "cu", "cut", "ic"], "d": ["dx", "des", "dt", "da", "nd", "md", "dL", "D", "ds", "fd", "dom", "red", "ord", "dim", "o", "ld", "dr", "di", "del", "ded", "cd", "dd", "deb", "db", "dra", "ad", "mod", "dat", "sd", "f", "td", "df", "de", "dig", "dev", "dm", "dc", "dh", "div", "dn", "du", "dec"], "e": ["en", "ea", "it", "ee", "ie", "o", "eb", "eeee", "E", "ef", "l", "ec", "oe", "el", " E", "ue", "ep", "err", "f", "eps", "eg", "de", "ae", "me", "te", "exp", "ne", "se", "eu", "t", "ev", "ce", "eur", "ed", "p", "er", "event"]}}
{"code": "import java.util.*; import java.io.*; import java.math.*;\\npublic class Main{\\n\t//Don't have to see. start------------------------------------------\\n\tstatic class InputIterator{\\n\t\tArrayList<String> inputLine = new ArrayList<String>(1024);\\n\t\tint index = 0; int max; String read;\\n\t\tInputIterator(){\\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\t\ttry{\\n\t\t\t\twhile((read = br.readLine()) != null){\\n\t\t\t\t\tinputLine.add(read);\\n\t\t\t\t}\\n\t\t\t}catch(IOException e){}\\n\t\t\tmax = inputLine.size();\\n\t\t}\\n\t\tboolean hasNext(){return (index < max);}\\n\t\tString next(){\\n\t\t\tif(hasNext()){\\n\t\t\t\treturn inputLine.get(index++);\\n\t\t\t}else{\\n\t\t\t\tthrow new IndexOutOfBoundsException(\"There is no more input\");\\n\t\t\t}\\n\t\t}\\n\t}\\n\tstatic HashMap<Integer, String> CONVSTR = new HashMap<Integer, String>();\\n\tstatic InputIterator ii = new InputIterator();//This class cannot be used in reactive problem.\\n\tstatic PrintWriter out = new PrintWriter(System.out);\\n\tstatic void flush(){out.flush();}\\n\tstatic void myout(Object t){out.println(t);}\\n\tstatic void myerr(Object t){System.err.print(\"debug:\");System.err.println(t);}\\n\tstatic String next(){return ii.next();}\\n\tstatic boolean hasNext(){return ii.hasNext();}\\n\tstatic int nextInt(){return Integer.parseInt(next());}\\n\tstatic long nextLong(){return Long.parseLong(next());}\\n\tstatic double nextDouble(){return Double.parseDouble(next());}\\n\tstatic ArrayList<String> nextStrArray(){return myconv(next(), 8);}\\n\tstatic ArrayList<String> nextCharArray(){return myconv(next(), 0);}\\n\tstatic ArrayList<Integer> nextIntArray(){\\n\t\tArrayList<String> input = nextStrArray(); ArrayList<Integer> ret = new ArrayList<Integer>(input.size());\\n\t\tfor(int i = 0; i < input.size(); i++){\\n\t\t\tret.add(Integer.parseInt(input.get(i)));\\n\t\t}\\n\t\treturn ret;\\n\t}\\n\tstatic ArrayList<Long> nextLongArray(){\\n\t\tArrayList<String> input = nextStrArray(); ArrayList<Long> ret = new ArrayList<Long>(input.size());\\n\t\tfor(int i = 0; i < input.size(); i++){\\n\t\t\tret.add(Long.parseLong(input.get(i)));\\n\t\t}\\n\t\treturn ret;\\n\t}\\n\tstatic String myconv(Object list, int no){//only join\\n\t\tString joinString = CONVSTR.get(no);\\n\t\tif(list instanceof String[]){\\n\t\t\treturn String.join(joinString, (String[])list);\\n\t\t}else if(list instanceof ArrayList){\\n\t\t\treturn String.join(joinString, (ArrayList)list);\\n\t\t}else{\\n\t\t\tthrow new ClassCastException(\"Don't join\");\\n\t\t}\\n\t}\\n\tstatic ArrayList<String> myconv(String str, int no){//only split\\n\t\tString splitString = CONVSTR.get(no);\\n\t\treturn new ArrayList<String>(Arrays.asList(str.split(splitString)));\\n\t}\\n\tpublic static void main(String[] args){\\n\t\tCONVSTR.put(8, \" \"); CONVSTR.put(9, \"\\n\"); CONVSTR.put(0, \"\");\\n\t\tsolve();flush();\\n\t}\\n\t//Don't have to see. end------------------------------------------\\n\tstatic void solve(){//Here is the main function\\n\t\tArrayList<Integer> one = nextIntArray();\\n\t\tint H = one.get(0);\\n\t\tint N = one.get(1);\\n\t\tArrayList<Integer> list = nextIntArray();\\n\t\tfor(int i = 0; i < N; i++){\\n\t\t\tH -= list.get(i);\\n\t\t\tif(H <= 0){\\n\t\t\t\tmyout(\"Yes\");\\n\t\t\t\treturn;\\n\t\t\t}\\n\t\t}\\n\t\tmyout(\"No\");\\n\t}\\n\t//Method addition frame start\\n\\n\\n\\n\t//Method addition frame end\\n}\\n", "target": "95", "substitutes": {}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n \tpublic static void main(String[] args){\\n    \tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tint[] A = new int[N];\\n\t\tint[] B = new int[N-1];\\n\t\tint sum=0;\\n\\n\t\tfor(int i=0; i<N-1; i++){\\n\t\t\tB[i] = sc.nextInt();\\n\t\t}\\n\t\tA[0] = B[0];\\n\t\tsum += A[0];\\n\t\tfor(int i=1; i<N-1; i++){\\n\t\t\tA[i] = Math.min(B[i-1],B[i]);\\n\t\t\tsum += A[i];\\n\t\t}\\n\t\tA[N-1] = Math.max(A[N-2], B[N-2]);\\n\t\tsum += A[N-1];\\n\\n        System.out.println(sum);\\n\t\t//System.out.println(Arrays.toString(A));\\n    }\\n}", "target": "240", "substitutes": {"sc": ["ch", "sync", "sw", "asc", "sm", "mc", "osc", "anc", "cr", "Sc", "sel", "Desc", "c", "sci", "inc", "bc", "cc", "sys", "fc", "screen", "SC", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "scan", "ss", "cl", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "dc", "capt", "isc", "syn", "scl", "desc", "sv", "sp", "esc"], "N": ["SAN", "None", "NI", "NG", "NP", "SIZE", "S", "NA", "REM", "J", "D", "NAME", "NV", "T", "NH", "NM", "K", "H", "Z", "P", "IT", "NT", "V", "M", "C", "NUM", "NOR", "Sn", "NO", "NE", "Size", "sn", "NB", "I", "FN", "TN", "NOTE", "CN", "Node", "R", "ANY", "NL", "NR", "NN", "OUT", "Ns", "Num", "NPR", "NC", "NS", "L", "GN", "MAN", "n", "ND", "SN", "AN", "NAT"], "A": ["AB", "At", "Abs", "au", "AT", "One", "This", "BA", "AF", "mA", "EA", "AC", "JA", "Area", "H", "As", "HA", "Ar", "AH", "Entry", "CA", "AD", "MA", "SA", "AV", "Array", "ACC", "ACT", "AE", "And", "Alpha", "LA", "AR", "a", "Part", "I", "AA", "Ag", "TA", "App", "AL", "IA", "GA", "Address", "The", "AP", "Ant", "Av", "AU", "AM", "Art", "All", "UA", "AST", "API", "AN", "An", "RAM"], "B": ["BG", "AB", "Bs", "S", "BR", "BB", "BU", "J", "D", "RB", "BA", "T", "CB", "E", "b", "IB", "VB", "Y", "MB", "BY", "P", "BT", "Bern", "TB", "Blue", "V", "M", "C", "SB", "BC", "WB", "NB", "I", "G", "BE", "BI", "OB", "Bar", "BS", "EB", "LB", "PB", "Bytes", "BM", "BL", "L", "GB", "DB"], "sum": ["result", "add", "summary", "report", " sums", "size", "list", "si", "total", "vol", "union", "max", "cache", "tmp", "set", "um", " SUM", "diff", "cal", "comment", "prof", "cum", " summed", "test", "state", "SU", "prefix", "cos", "cost", "mean", "mass", "mod", "fac", "sim", "SI", "process", "alpha", "sat", "hash", "tail", "weight", "index", "sam", "tu", "hum", "zero", "stack", "loss", "us", "acc", "num", "su", "count", "mem", "temp", "sample", "match", "Sum", "average", "history", "ash"], "i": ["multi", "list", "si", "Mi", "ip", "set", "chain", "zi", "di", "point", "ini", "err", "iy", "me", "info", "mac", "hi", "phi", "it", "ie", "status", "qi", "x", "y", "sim", "uri", "q", "init", "ami", "ori", "gi", "ii", "us", "base", "cli", "ji", "ic", "ri", "fire", "bi", "iter", "iu", "key", "et", "mm", "ei", "g", "r", "j", "io", "a", "I", "ind", "ij", "is", "li", "ui", "client", "ix", "ti", "ai", "xi", "pi", "mi", "ity", "v", "ci", "oi", "id", "f", "\u0438", "batch", "im", "u"]}}
{"code": "import java.util.*;\\npublic class Main {\\n    public static Scanner sc = new Scanner(System.in);\\n    public static void main(String[] args) throws Exception {\\n    \tint i, j, k;\\n    \tint count = 0;\\n    \tString w = sc.next();\\n    \tw = w.toLowerCase();\\n    \twhile(true) {\\n    \t\tString t = sc.next();\\n    \t\tif(t.contains(\"END_OF_TEXT\")) break;\\n    \t\tt = t.toLowerCase();\\n    \t\tif(t.equals(w)) count++;\\n    \t}\\n    \tSystem.out.println(count);\\n    }\\n}\\n", "target": "46", "substitutes": {"sc": ["irc", "ch", "sb", "sync", "cle", "src", "asc", "sm", "mc", "osc", "scrib", "ctrl", "anc", "cr", "Sc", "sci", "c", "ctx", "bc", "cc", "sys", "fc", "SC", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "nc", "sq", "tc", "cs", "pc", "ctl", "dc", "isc", "desc", "scl", "sv", "sp", "esc"], "i": ["in", "si", "it", "o", "l", "b", "x", "c", "d", "r", "v", "ci", "y", "start", "f", "h", "I", "q", "m", "index", "is", "li", "z", "n", "p", "u"], "j": ["obj", "ch", "jc", "J", "l", "b", "jj", "c", "jp", "js", "g", "r", "v", "start", "pos", "q", "ij", "m", "index", "kj", "z", "jump", "len", "n", "p", "col"], "k": ["ka", "ke", "kn", "e", "max", "sk", "key", "o", "K", "l", "x", "ik", "g", "ek", "v", "ok", "ak", "f", "q", "kw", "m", "ck", "tk", "z", "n", "p"], "count": ["result", "nb", "report", "old", "size", "total", "iter", "test", "consider", "state", "sum", "counter", "expected", "found", "conf", "c", "amount", "d", "coll", "flag", "window", "trace", "nt", "current", "start", "number", "process", "length", "ind", "value", "hold", "index", "cast", "thread", "batch", "call", "Count", "info", "acc", "ount", "offset", "z", "num", "message", "ct", "code", "sequence"], "w": ["wr", "wo", "ws", "pkg", "nw", "sw", "s", "wb", "wp", "all", "mm", "won", "l", "wt", "th", "x", "c", "d", "tw", "window", "rew", "g", "ew", "v", "y", "we", "ht", "name", "W", "f", "h", "wh", "word", "kw", "q", "string", "wa", "aw", "fw", "weights", "self", "rw", "ow", "wl", "hw", "wal", "wall", "hex", "z", "n", "temp", "sword", "p", "wd", "u"], "t": ["tt", "qt", "dt", "ot", "at", "total", "it", "s", "mt", "pt", "T", "et", "term", "all", "o", "l", "tr", "b", "wt", "rt", "out", "c", "template", "ts", "tw", "format", "str", "g", "trace", "tz", "or", "type", "y", "tp", "ty", "ta", "tf", "f", "title", "q", "st", "string", "m", "tm", "ent", "ant", "te", "tc", "att", "to", "ct", "temp", "p"]}}
{"code": "import java.io.*;\\nimport java.util.Scanner;\\n\\n\\npublic class Main {\\n\\n\tprivate static Scanner sc;\\n\tprivate static Printer pr;\\n\\n\tprivate static void solve() {\\n\t\tint n = sc.nextInt();\\n\\n\t\tint[] h = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\th[i] = sc.nextInt();\\n\t\t}\\n\t\t\\n\t\tint cnt = 0;\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tboolean flag = true;\\n\t\t\tfor (int j = 0; j < i; j++) {\\n\t\t\t\tif (h[j] > h[i]) {\\n\t\t\t\t\tflag = false;\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tif (flag) {\\n\t\t\t\tcnt++;\\n\t\t\t}\\n\t\t}\\n\\n\t\tpr.println(cnt);\\n\t}\\n\\n\t// ---------------------------------------------------\\n\tpublic static void main(String[] args) {\\n\t\tsc = new Scanner(System.in);\\n\t\tpr = new Printer(System.out);\\n\t\t\t\\n\t\tsolve();\\n\t\t\t\\n\t\tpr.close();\\n\t\tsc.close();\\n\t}\\n\\n\tstatic class Printer extends PrintWriter {\\n\t\tPrinter(OutputStream out) {\\n\t\t\tsuper(out);\\n\t\t}\\n\t}\\n}\\n", "target": "7", "substitutes": {"sc": [" scr", "ch", "sb", "sw", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "arc", "sci", "c", "ctx", "inc", "bc", "cc", "fc", "proc", "SC", "lc", " Sc", "rc", " SC", "usc", "sch", "sec", "exec", "gc", "scan", "cl", "ss", "uc", "nc", "sq", "cs", "tc", "rec", "pc", "dc", "ctl", "ex", "isc", "capt", "scl", "sh", "p", "sv", "sp", "esc"], "pr": ["rep", "wr", "mp", "kr", "porter", "obj", "pt", "PR", "pp", "fr", "re", "expr", "tr", "req", "cr", "pir", "gr", "str", "ptr", "r", "or", "spr", " repr", "proc", "pro", "err", "res", "inter", "Pr", "print", "per", "br", "rr", "writer", "pc", "ps", "pl", "p", "rint", "par"], "n": ["nb", "an", "en", "size", "nn", "total", "names", "max", "network", "all", "o", "l", "np", "k", "ns", "pi", "c", "un", "g", "r", "nt", "v", "no", "nm", "ng", "name", "number", "sn", "ni", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "num", "net", "len", "N", "gn", "p", "mn"], "h": ["oh", "hr", "ch", "ah", "it", "uh", "l", "th", "H", "hp", "host", "he", "hm", "bh", "hd", "v", "hl", "ht", "hh", "ph", "rh", "hash", "has", "m", "ha", "ho", "hw", "hz", "hi", "header", "sh", "ih", "hex", "pp", "hs", "history", "kh", "u"], "i": ["in", "multi", "si", "ip", "ir", "chain", "l", "zi", "di", "ion", "ini", "ret", "info", " I", "N", "p", "phi", "it", "ie", "status", "o", "qi", "x", "y", "sim", "ia", "uri", "q", "init", "ami", "ori", "asi", "ii", "gi", "us", "to", "ji", "inner", "ic", "ri", "bi", "iu", "gu", "mm", "progress", "k", "iti", "ei", "this", "iri", "g", "I", "ind", "print", "ij", "t", "is", "li", " Xi", "ui", "client", "ix", "ti", "ai", "xi", "pi", "mi", "v", "ity", "ci", "iso", "id", "oi", "uci", "f", "iq", "inx", "m", "ki", "ims", "im", "u"], "cnt": [" cctr", "pcfrac", "Cnt", " count", "cctr", "xcursed", "xcnt", " cursed", "cNT", "pcount", " cfrac", "cct", "conret", "lcount", "nct", "pcursed", "conNT", "cret", " cct", "nNT", "cfrac", "xcfrac", "connt", "lcnt", "lcNT", "pcnt", " cret", "Count", "xcount", "Cctr", "conct", "lcctr", "cursed", " cNT", "count", "nret", "nnt", "CNT"], "j": ["jo", "bj", "oj", "obj", "at", "jc", "json", "it", "J", "s", "pt", "key", "fr", "dj", "b", "k", "jj", "jas", "aj", "jl", "bo", "out", "jp", "uj", "js", "str", "g", "v", "ja", "y", "err", "ph", "ind", "ij", "q", "jac", "je", "kj", "m", "ne", "br", "z", "jump", "job", "other", "ev", "ji", "ge", "note"], "flag": ["field", "old", "Flag", "bit", "bool", "bug", "condition", "sync", "car", "sign", "set", "level", "true", "fd", "flags", "status", "lv", "group", "ld", "save", "failed", "enable", "tag", "window", "ground", "fail", "lock", "bird", "mask", "print", "FLAG", "stage", "lag", "hold", "leaf", "cloud", "cond", "agged", "log", "cmd", "count", "store", "ag", "wait", "event"]}}
{"code": "import java.util.*; import java.io.*; import java.math.*;\\npublic class Main{\\n\t//Don't have to see. start------------------------------------------\\n\tstatic class InputIterator{\\n\t\tArrayList<String> inputLine = new ArrayList<String>(1024);\\n\t\tint index = 0; int max; String read;\\n\t\tInputIterator(){\\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\t\ttry{\\n\t\t\t\twhile((read = br.readLine()) != null){\\n\t\t\t\t\tinputLine.add(read);\\n\t\t\t\t}\\n\t\t\t}catch(IOException e){}\\n\t\t\tmax = inputLine.size();\\n\t\t}\\n\t\tboolean hasNext(){return (index < max);}\\n\t\tString next(){\\n\t\t\tif(hasNext()){\\n\t\t\t\treturn inputLine.get(index++);\\n\t\t\t}else{\\n\t\t\t\tthrow new IndexOutOfBoundsException(\"There is no more input\");\\n\t\t\t}\\n\t\t}\\n\t}\\n\tstatic HashMap<Integer, String> CONVSTR = new HashMap<Integer, String>();\\n\tstatic InputIterator ii = new InputIterator();//This class cannot be used in reactive problem.\\n\tstatic PrintWriter out = new PrintWriter(System.out);\\n\tstatic void flush(){out.flush();}\\n\tstatic void myout(Object t){out.println(t);}\\n\tstatic void myerr(Object t){System.err.print(\"debug:\");System.err.println(t);}\\n\tstatic String next(){return ii.next();}\\n\tstatic boolean hasNext(){return ii.hasNext();}\\n\tstatic int nextInt(){return Integer.parseInt(next());}\\n\tstatic long nextLong(){return Long.parseLong(next());}\\n\tstatic double nextDouble(){return Double.parseDouble(next());}\\n\tstatic ArrayList<String> nextStrArray(){return myconv(next(), 8);}\\n\tstatic ArrayList<String> nextCharArray(){return myconv(next(), 0);}\\n\tstatic ArrayList<Integer> nextIntArray(){\\n\t\tArrayList<String> input = nextStrArray(); ArrayList<Integer> ret = new ArrayList<Integer>(input.size());\\n\t\tfor(int i = 0; i < input.size(); i++){\\n\t\t\tret.add(Integer.parseInt(input.get(i)));\\n\t\t}\\n\t\treturn ret;\\n\t}\\n\tstatic ArrayList<Long> nextLongArray(){\\n\t\tArrayList<String> input = nextStrArray(); ArrayList<Long> ret = new ArrayList<Long>(input.size());\\n\t\tfor(int i = 0; i < input.size(); i++){\\n\t\t\tret.add(Long.parseLong(input.get(i)));\\n\t\t}\\n\t\treturn ret;\\n\t}\\n\tstatic String myconv(Object list, int no){//only join\\n\t\tString joinString = CONVSTR.get(no);\\n\t\tif(list instanceof String[]){\\n\t\t\treturn String.join(joinString, (String[])list);\\n\t\t}else if(list instanceof ArrayList){\\n\t\t\treturn String.join(joinString, (ArrayList)list);\\n\t\t}else{\\n\t\t\tthrow new ClassCastException(\"Don't join\");\\n\t\t}\\n\t}\\n\tstatic ArrayList<String> myconv(String str, int no){//only split\\n\t\tString splitString = CONVSTR.get(no);\\n\t\treturn new ArrayList<String>(Arrays.asList(str.split(splitString)));\\n\t}\\n\tpublic static void main(String[] args){\\n\t\tCONVSTR.put(8, \" \"); CONVSTR.put(9, \"\\n\"); CONVSTR.put(0, \"\");\\n\t\tsolve();flush();\\n\t}\\n\t//Don't have to see. end------------------------------------------\\n\tstatic void solve(){//Here is the main function\\n  int N = nextInt();\\n  ArrayList<Integer> list = nextIntArray();\\n  int output = 0;\\n  for(int i = 0; i < N - 1; i++){\\n    for(int j = i + 1; j < N; j++){\\n      output += list.get(i) * list.get(j);\\n    }\\n  }\\n  myout(output);\\n\t}\\n\t//Method addition frame start\\n\\n\\n\\n\t//Method addition frame end\\n}\\n", "target": "126", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint n = scan.nextInt();\\n\t\tint x = scan.nextInt();\\n\t\tint total = 0;\\n\t\tint num = 0;\\n\t\tint min = 0;\\n\t\tint a[] = new int[n];\\n\\n\t\tfor (int m=0; m < n; m++) {\\n\t\t\ta[m] = scan.nextInt();\\n\t\t\ttotal += a[m];\\n\t\t}\\n\\n\t\tmin = a[0];\\n\t\tfor (int i=1; i < n; i++) {\\n\t\t\tif (a[i] < min) {\\n\t\t\t\tmin = a[i];\\n\t\t\t}\\n\t\t}\\n\\n\t\ttotal = x - total;\\n\\n\t\tnum = total/min;\\n\t\tnum += n;\\n\\n\t\tSystem.out.println(num);\\n\\n\t\tscan.close();\\n\\n\t}\\n\\n}\\n", "target": "3", "substitutes": {"scan": ["an", "scroll", "in", "query", "report", "ch", "nn", "sync", "check", "set", "cat", "read", "gen", "all", "send", "connect", "re", "ann", "clean", "run", "sum", "save", "char", "row", "out", "sc", "cgi", "g", "sin", "ner", "r", "parse", "v", "sys", "proc", "find", "skip", "search", "io", "can", "reach", "gc", "gate", "san", "system", "se", "link", "na", "stat", "sql", "sur", "store", "syn", "sv", "Scan", "auto"], "n": ["nb", "an", "en", "in", "size", "nn", "s", "w", "network", "o", "l", "np", "b", "k", "ns", "c", "d", "un", "g", "r", "nt", "v", "no", "nm", "y", "on", "name", "j", "number", "sn", "h", "q", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "count", "net", "N", "p", "mn"], "x": ["dx", "en", "mx", "px", "max", "tx", "w", "xx", "o", "ax", "l", "xi", "xt", "xc", "c", "xp", "v", "X", "y", "on", "ox", "j", "h", "f", "wx", "xs", "rx", "xa", "t", "xy", "z", "ex", "ix", "p"], "total": ["result", "floor", "summary", "mult", "size", "ot", "human", "eta", "last", "max", "available", "seen", "all", "table", "tar", "sum", "made", "area", "out", "unit", "trans", "meta", "created", "general", "nt", "no", "global", "current", "ta", "done", "number", "length", "index", "initial", "normal", "mon", "recent", "mu", "stable", "root", "quant", "otal", "info", "buffer", "system", "zero", "valid", "Total", "t", "to", "full", "base", "data", "net", "tree", "count", "note"], "num": ["result", "nb", "en", "mult", "multi", "ot", "max", "um", "cal", "msg", "comment", "cum", "np", "tim", "sum", "om", "out", "draw", "nm", "no", "end", "nt", "NUM", "mod", "id", "on", "number", "alph", "nom", "nu", "index", "mon", "quant", "Num", "con", "t", "na", "count", "div", "node", "temp", "serial", "p", "mean", "im", "note", "mn"], "min": ["mp", "in", "part", "lt", "ai", "partial", "max", "sol", "local", "mid", "low", "aug", "dim", "diff", "cal", "mm", "range", "amin", "sum", "step", "lower", "conf", "rel", "mi", "no", "mean", "type", "mod", "start", "name", "mint", "minute", "j", "pos", "ma", "just", "mini", "ind", "st", "init", "index", "beta", "pre", "mon", "mins", "minimum", "sort", "MIN", "ne", "scale", "Min", "rand", "stat", "emin", "len", "mem", "man", "temp", "sample", "val", "tail", "small", "mit", "mn"], "a": ["ap", "an", "la", "ba", "ab", "eas", "parts", "da", "ea", "obj", "ai", "au", "all", "aaa", "b", "aux", "area", "am", "A", "era", "act", "ar", "ia", "ma", "ta", "f", "ao", "ack", "alpha", "ac", "app", "ae", "ha", "ata", "ga", "oa", "aa", "as", "action", "t", "apa", "na", "att", "sta", "fa", "pa", "sa", "ca", "ed", "p"], "m": ["ms", "mx", "mat", "mut", "md", "perm", "arm", "met", "mt", "sm", "cm", "mr", "mc", "mm", "k", "om", "am", "hm", "g", "mi", "nm", "v", "M", "module", "mod", "sim", "j", "ma", "f", "esm", "mo", "q", "wm", "me", "tm", "fm", "lem", "km", "mu", "ym", "month", "vm", "mac", "dm", "gm", "bm", "em", "man", "im", "mn"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "s", "ie", "key", "o", "ico", "chain", "zi", "xi", "di", "pi", "qi", "ei", "this", "mi", "point", "ini", "ci", "y", "id", "sim", "j", "io", "uri", "ni", "I", "ind", "print", "q", "me", "init", "index", "ori", "ki", "\u0438", "gi", "ii", "us", "li", "hi", "ui", "ji", "ix", "fi", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.io.*;\\nimport java.math.BigInteger;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n\tstatic class FastReader \\n    { \\n        BufferedReader br; \\n        StringTokenizer st; \\n  \\n        public FastReader() \\n        { \\n            br = new BufferedReader(new\\n                     InputStreamReader(System.in)); \\n        } \\n  \\n        String next() \\n        { \\n            while (st == null || !st.hasMoreElements()) \\n            { \\n                try\\n                { \\n                    st = new StringTokenizer(br.readLine()); \\n                } \\n                catch (IOException  e) \\n                { \\n                    e.printStackTrace(); \\n                } \\n            } \\n            return st.nextToken(); \\n        } \\n  \\n        int nextInt() \\n        { \\n            return Integer.parseInt(next()); \\n        } \\n  \\n        long nextLong() \\n        { \\n            return Long.parseLong(next()); \\n        } \\n  \\n        double nextDouble() \\n        { \\n            return Double.parseDouble(next()); \\n        } \\n  \\n        String nextLine() \\n        { \\n            String str = \"\"; \\n            try\\n            { \\n                str = br.readLine(); \\n            } \\n            catch (IOException e) \\n            { \\n                e.printStackTrace(); \\n            } \\n            return str; \\n        } \\n    } \\n\tstatic PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\\n\tpublic static long mod = (long) (1e9+7);\\n\tpublic static long[] fac,inv;\\n\tpublic static void main(String[] args) {\\n\t\t// TODO Auto-generated method stub\\n\t\tFastReader sc = new FastReader();\\n\t    String n = sc.next();\\n\t    int k = sc.nextInt();\\n\t    BigInteger ans = new BigInteger(n);\\n\t    out.print(ans.toString(k).length());\\n\t    out.close();\\n\\n\t}\\n\\n}\\n", "target": "219", "substitutes": {"br": ["ber", "bsp", "wr", "bl", "hr", "kr", "bb", "ch", "BR", "sb", "Br", "mr", "next", "fr", "tr", "b", "browser", "dr", "buf", "bs", "cr", "db", "rel", "gr", "ptr", "r", "bh", "brace", "bc", "bt", "rob", "sp", "bridge", "sr", "lr", "sl", "shr", "bp", "bre", "rb", "ger", "pr", "ctr", "rs", "bro", "bn", "ro"], "st": ["bl", "std", "nd", "ste", " est", "sts", "sy", "sb", "s", "mt", "tmp", "sw", "pt", "sm", "set", "et", "stop", "sty", "l", "tr", "step", "const", "th", "stri", "rt", "ust", "r", "nt", "ST", "bt", "start", "ost", "sn", "inst", "ut", "stage", "rest", "cl", "sl", "stable", "stack", "sam", "so", "storage", "se", "sta", "t", "ist", "St", "stat", " superst", "ct", "sh", "p", "sp", "est"], "str": ["cur", "sts", "s", "set", "ocr", "msg", "next", "key", "fr", "re", "STR", "tr", "dr", "ns", "del", "cr", "char", "text", "c", "gr", "g", "r", "v", "cont", "name", "res", "inst", "print", "string", "Str", "sl", "shr", "cs", "exp", "spec", "raw", "t", "data", "txt", "pr", "n", "ctr", "p", "sequence", "sp", "arr"], "out": ["result", "in", "bl", "std", "obj", "ch", "null", "file", "msg", "pool", "all", "o", "Out", "buf", "ins", "conf", "this", "r", "conn", "sys", "err", "on", "error", "io", "res", " Out", "print", "exec", "log", "write", "OUT", "output", "os", " bout", "con", "writer", "ex", "txt", "n", "inner", "p", "er", "outs"], "mod": ["fun", "add", "floor", "mult", " div", " pow", "max", " Mod", " mag", " mul", "aj", "prime", "mix", "Mod", "MOD", "m", "log", "shr", "exp", "scale", "base", " mult", "round", "div", " mix", "dec"], "fac": ["fun", "mult", "adj", "perm", "vol", "gam", "prof", "cum", "cap", "ctrl", "aux", "prime", "fx", "eff", "ran", "fact", "fam", "norm", "sim", "comp", "cv", "ac", "factor", "frac", "exp", "con", "acc", "unc"], "inv": ["fun", "mult", "iter", "vc", "perm", "vol", "neg", "lim", "Inv", "sum", "aux", "mag", "vec", "iv", "grad", "eff", "inc", "vs", "norm", "v", "rev", "conv", "iq", "ij", "mu", "shr", "scale", "rand"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int[] a = new int[n];\\n        for(int i = 0;i < n;i++) a[i] = sc.nextInt();\\n        boolean[] history = new boolean[n];\\n        boolean success = false;\\n\\n        int i = 0;\\n        int count = 0;\\n        while(true) {\\n            if(history[i]) break;\\n            if(i == 1) {\\n                success = true;\\n                break;\\n            }\\n\\n            history[i] = true;\\n            i = a[i] - 1;\\n            count++;\\n        }\\n\\n        String ans = success ? String.valueOf(count) : \"-1\";\\n        System.out.println(ans);\\n    }\\n\\n\\n}", "target": "175", "substitutes": {"sc": ["irc", "ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "c", "ctx", "inc", "dec", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "pb", "nc", "system", "tc", "cs", "sq", "ck", "pc", "ctl", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "en", "size", "and", "nn", "network", "ll", "o", "l", "np", "ns", "pi", "x", "c", "d", "un", "r", "nt", "v", "nm", "no", "ng", "j", "number", "sn", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "p", "mn"], "a": ["an", "la", "ba", "ab", "at", "ai", "au", "s", "all", "aka", "o", "l", "aaa", "b", "aux", "area", "c", "am", "A", "v", "ia", "ta", "ma", "f", "j", "ao", "va", "ack", "alpha", "ac", "ae", "m", "wa", "aw", "ga", "oa", "aa", "as", "att", "na", "apa", "array", "sa", "ca", "auto", "p", "u"], "i": ["in", "multi", "list", "si", "ip", "true", "set", "chain", "l", "di", "c", "point", "ini", "err", "me", "go", "slice", "exp", "hi", "p", "phi", "it", "ie", "um", "b", "qi", "x", "y", "sim", "uri", "q", "init", "index", "ori", "gi", "ii", "us", "cli", "ic", "ri", "bi", "iter", "gu", "iu", "key", "ei", "iri", "g", "j", "io", "I", "ind", "print", "ij", "t", "is", "li", "ui", "client", "ix", "yi", "ti", "ai", "xi", "pi", "mi", "v", "ity", "ci", "iso", "id", "oi", "start", "f", "ki", "fi", "im", "u"], "history": ["usage", "historic", "alert", "summary", "menu", "handled", "true", "cache", "stats", "prev", "status", "profile", "sequence", "held", "support", "chain", "state", "changes", "details", "History", "context", "today", "memory", "high", "rev", "current", "remember", "height", "past", "h", "hash", "recent", "index", "shift", "subject", "events", "stack", "info", "hist", "timeout", "graph", "states", "archive", " histories", "ash"], "count": ["scroll", "report", "add", "size", "list", "total", "last", "max", "status", "next", "now", "state", "sum", "counter", "const", "found", "cd", "c", "amount", "coll", "trace", "draw", "nt", "find", "score", "cont", "current", "number", "process", "length", "ph", "st", "child", "index", "cond", "call", "Count", "cs", "t", "ount", "z", "num", "ct", "ctr", "pages"], "ans": ["an", "uns", "ars", "anks", "ms", "des", "ents", "s", "ds", "ann", "ons", "ns", "ins", "aus", "vals", "ks", "ran", "ys", "vs", "arts", " means", "ats", "ras", "ants", "xs", "ANS", "gs", "can", "ls", "san", "cs", "os", "as", "ps", "ens", "sv", "rs", "eds"], "success": ["submit", "result", "alert", "summary", "complete", "close", "successful", "snap", "ceed", "pass", "right", "red", "status", "support", "first", "state", "progress", "best", "ready", "crit", "release", "accept", "exist", "created", "correct", "danger", "primary", "Success", "ith", "gold", "high", "ok", "town", "top", "rc", "safe", "recent", "good", "connected", "go", "zero", "output", "continue", "successfully", "pred", "stat", "one", "commit", "redo", "match", "green", "ro"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main{\\n    public static void main(String[] args)throws IOException{\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        String str;\\n\\n        int count = 0;\\n\\n        str = br.readLine();\\n        String W = str.toLowerCase();\\n        while((str = br.readLine()) != null){\\n           String x = str.toLowerCase();\\n           String[] temp = x.split(\"\\\\s\");\\n           for(int i =0;i<temp.length;i++){\\n                if(temp[i].equals(\"END_OF_TEXT\")){\\n                    break;\\n                }\\n               if(W.equals(temp[i])){\\n                   count++;\\n               }\\n           }\\n        } \\n        br.close();\\n        System.out.println(count);\\n    }\\n}", "target": "46", "substitutes": {"br": ["wr", "ber", "hr", "bl", "ab", "kr", "ch", "BR", "Br", "vr", "mr", "rem", "block", "fr", "eb", "tr", "b", "browser", "dr", "buf", "bd", "bs", "cr", "jp", "rel", "gr", "nr", "r", "bh", "bc", "bf", "yr", "bt", "cb", "bridge", "lr", "reader", "bp", "adr", "rb", "repl", "bm", "pr", "ger", "bro", "bn"], "str": ["wr", "stick", " wr", "list", "cur", "part", "obj", "iter", "vol", "s", "mt", "pt", "ocr", "source", "fr", "chain", "tr", "STR", "req", "dr", "del", "char", "text", "form", "coll", "gr", "comm", "g", "r", "dec", "bc", "v", "ar", " tr", "cont", "err", "name", "j", "res", " st", "pos", "print", "string", "st", "Str", "ent", "exp", "spec", "raw", "t", "hex", "St", "z", "priv", "input", "txt", "n", "pr", "inner", "ctr", "p", "div", "sp", "arr"], "count": ["nb", "result", "report", "add", "size", "list", "total", "check", "status", "state", "sum", "counter", "const", "found", "conf", "c", "amount", "coll", "flag", "trace", "find", "nt", "score", "type", "cont", "must", "current", "err", "number", "length", "print", "index", "cond", "call", "Count", "info", "t", "acc", "ount", "num", "code", "ct", "n", "ctr"], "W": ["SW", "VW", "S", "WF", "Word", "WR", "w", "WT", "T", "WH", "Width", "U", "WD", "H", "Z", "P", "Wh", "V", "ST", "M", "C", "WA", "X", "FW", "words", "Writer", "wh", "G", "WS", "word", "R", "WC", "DW", "WP", "L", "B", "F", "N", "BW", "Weight"], "x": ["px", "nex", "tx", "w", "xe", "xx", "ax", "xf", "l", "xi", "xt", "xc", "fx", "xp", "text", "r", "v", "X", "y", "ox", "f", "wx", "xs", "inx", "rx", "t", "xy", "z", "ex", "n", "ix", "p", "lex"], "temp": ["tt", "list", "loop", "partial", "iter", "null", "tmp", "set", "emp", "stem", "pt", "test", "empty", "cycle", "now", "none", "tr", "tim", "step", "pi", "save", "prime", "tem", "template", "ts", "tab", "unt", "mod", "dat", "current", "shape", "Temp", "there", "train", "trade", "timer", "pre", "thread", "fake", "buffer", "pretty", "times", "tc", "storage", "t", "ps", "tree", "txt", "mem", "sequence", "wait"], "i": ["bi", "multi", "si", "ti", "ai", "json", "ip", "it", "s", "key", "o", "PI", "xi", "di", "pi", "qi", "ei", "my", "mi", "point", "ini", "ci", "id", "span", "j", "a", "uri", "I", "ind", "q", "init", "me", "m", "index", "ki", "\u0438", "ii", "gi", "info", "gravity", "t", "is", "li", "base", "ex", "ui", "cli", "ji", "sql", "ix", "fi", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan=new Scanner(System.in);\\n\t\twhile(true) {\\n\t\t\tint n=scan.nextInt();\\n\t\t\tint a=scan.nextInt();\\n\t\t\tint sum=0,count=0;\\n\t\t\tfor(int i=1;i<=n;i++) {\\n\t\t\t\tfor(int j=2;j<=n;j++) {\\n\t\t\t\t\tfor(int k=3;k<=n;k++) {\\n\t\t\t\t\t\tif(i == j || j == k || i == k) {\\n\t\t\t\t\t\t}else {\\n\t\t\t\t\t\t\tsum = i+j+k;\\n\t\t\t\t\t\tif (sum == a && i<j && j<k) {\\n\t\t\t\t\t\t\tcount += 1;\\n\t\t\t\t\t\t}\\n\t\t\t\t\t\t}\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tif(n==0 && a==0) {\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tSystem.out.println(count);\\n}\\n\t\tscan.close();\\n}\\n}\\n", "target": "116", "substitutes": {"scan": ["an", "scroll", "in", "query", "report", "list", "nn", "open", "sync", "check", "set", "read", "send", "connect", "re", "ann", "run", "clean", "see", "by", "row", "out", "seek", "sc", "get", "g", "sin", "ner", "find", "parse", "skip", "sys", "proc", "plan", "range", "search", "can", "reach", "gate", "san", "call", "write", "system", "watch", "se", "link", "scale", "na", "stat", "mem", "match", "store", "sql", "sv", "Scan", "syn"], "n": ["nb", "an", "en", "size", "nn", "yes", "non", "w", "o", "l", "np", "ns", "x", "out", "c", "d", "g", "r", "nt", "v", "no", "nia", "nm", "y", "ng", "on", "name", "number", "sn", "ni", "q", "nu", "m", " N", "nc", "ne", "nan", "t", "na", "z", "cn", "num", "net", "N", "p", "mn"], "a": ["an", "ba", "ab", "ka", "da", "at", "ai", "au", "e", "s", "w", "all", "o", "ax", "l", "b", "aux", "area", "c", "am", "A", "g", "r", "act", "ar", "ia", "ma", "ta", "h", "f", "ao", "alpha", "ac", "ach", "oa", "aa", "as", "t", "att", "na", "pa", "z", "num", "sa", "ca", "p", "al", "u"], "sum": ["result", "add", "summary", "av", "size", "si", "total", "max", "um", "cm", "cal", "comment", "term", "cum", "all", "user", "out", "unit", "amount", "score", "mass", "sim", "fac", "number", "alpha", "hash", "Sum", "weight", "index", "ul", "sam", "us", "acc", "ount", "scale", "base", "num", "sa", "temp", "mem", "match", "mean", "average"], "count": ["result", "scroll", "report", "summary", "core", "card", "list", "size", "total", "success", "check", "max", "cache", "um", "test", "diff", "status", "comment", "now", "cum", "const", "cd", "th", "found", "counter", "conf", "c", "flag", "find", "nt", "score", "mean", "must", "number", "process", "length", "ind", "hash", "child", "index", "cast", "cond", "call", "Count", "acc", "ount", "stat", "num", "match", "Sum"], "i": ["aci", "bi", "in", "si", "at", "ti", "ai", "ip", "it", "iu", "ie", "ir", "o", "l", "zi", "xi", "di", "pi", "x", "iat", "ei", "ion", "ik", "mi", "ity", "ini", "ar", "ci", "y", "id", "sim", "name", "ia", "iq", "ni", "I", "ij", "q", "ami", "init", "m", "ori", "ki", "\u0438", "asi", "ii", "gi", "is", "li", "z", "hi", "ui", "ji", "ix", "p", "im", "ic", "ani", "phi", "u", "ri"], "j": ["jo", "ge", "bj", "oj", "ot", "obj", "si", "jc", "json", "J", "let", "it", "jack", "ie", "o", "fr", "l", "dj", "b", "jj", "jas", "aj", "jl", "bs", "ijk", "bo", "el", "jp", "x", "uj", "og", "js", "rel", "g", "ion", "v", "ja", "y", "gov", "f", "sp", "jac", "ij", "q", "je", "kj", "ort", "m", "ne", "br", "xy", "z", "job", "jump", "ji", "pr", "be", "im", "u"], "k": ["ka", "kl", "ke", "kr", "wk", "w", "ark", "sk", "kind", "key", "kg", "kid", "K", "ko", "ks", "isk", "g", "ik", "ek", "kar", "kt", "ask", "v", "ku", "ok", "ak", "ket", "ack", "kw", "kk", "alk", "q", "uk", "kj", "mk", "m", "sch", "ki", "km", "ck", "tk", "z", "dk", "unk", "ijk", "kh", "u"]}}
{"code": "import java.util.*;\\nimport java.lang.*;\\n\\nclass Main{\\n    public static void main(String args[]){\\n        Scanner sc = new Scanner(System.in);\\n        int n = Integer.parseInt(sc.nextLine());\\n        String[] line = sc.nextLine().split(\" \");\\n        int[] data =new int[n];\\n        for(int i=0; i < n; i++){\\n            data[i] = Integer.parseInt(line[i]);\\n        }\\n\\n        int q = Integer.parseInt(sc.nextLine());\\n        String[] line2 = sc.nextLine().split(\" \");\\n        int[] searcher = new int[q];\\n        for(int i=0; i < q; i++){\\n            searcher[i] = Integer.parseInt(line2[i]);\\n        }\\n\\n        \\n        int result = 0;\\n        for(int search : searcher){\\n            int left = 0;\\n            int right = n;\\n            int mid;\\n            while(left < right){\\n                mid = (left + right) / 2;\\n                if(search == data[mid]){\\n                    result++;\\n                    break;\\n                }else if(search < data[mid]){\\n                    right = mid;\\n                }else if(search > data[mid]){\\n                    left = mid + 1;\\n                }\\n            }\\n        }\\n        System.out.println(result);\\n        \\n\\n\\n\\n    }\\n    static void bubble(int[] arr, int n){\\n\\n    }\\n    static void selection(int[] arr, int n){\\n\\n    }\\n    static void insertionSort(int[] arr, int n, int g,int count){\\n        for(int i = g; i < n; i++){\\n            int v = arr[i];\\n            int j = i - g;\\n            while(j >= 0 && arr[j] > arr[i]){\\n                arr[i] = arr[j];\\n                j-=g;\\n                count++;\\n            }\\n            arr[j + g] = v;\\n        }\\n    }\\n    static void shellsort(int[] arr, int n){\\n\\n        for(int i = 1; ; ){\\n            if(i > n){\\n                break;\\n            }\\n\\n            i = (i * 3) + 1;\\n        }\\n    }\\n}\\nclass Struct{\\n    String name;\\n    int time;\\n    public Struct(String n, int t){\\n        name = n;\\n        time = t;\\n    }\\n}", "target": "138", "substitutes": {"sc": ["irc", "ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "func", "anc", "ec", "Sc", "arc", "sci", "c", "ctx", "inc", "ys", "dec", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "system", "nc", "cs", "sq", "tc", "ck", "se", "pc", "ctl", "isc", "syn", "capt", "scl", "sh", "desc", "sv", "sp", "esc"], "n": ["nb", "an", "en", "size", "nn", "nw", "s", "local", "o", "l", "np", "b", "k", "ns", "out", "c", "x", "d", "un", "nr", "r", "nt", "nm", "no", "tn", "y", "ng", "on", "a", "number", "sn", "h", "fn", "nu", "m", "nl", "index", "nc", "ln", "ne", "nan", "na", "z", "num", "net", "len", "node", "N", "cn", "p", "mn"], "line": ["Line", "list", "iter", "inline", "file", "comment", "block", "chain", "ide", "char", "row", "out", "stroke", "ine", "trace", "lines", "lo", "date", "range", "LINE", "word", "force", "le", "string", "log", "handle", "ln", "detail", "page", "link", "pipe", "rule", "code", "store", "node", "frame", "auto"], "data": ["query", "list", "size", "items", "missing", "obj", "json", "dict", "results", "cache", "next", "DATA", "table", "di", "details", "vals", "row", "text", "db", "d", "def", "meta", "window", "str", "dec", "no", "end", "options", "date", "id", "dat", "done", "res", "pos", "hash", "index", "values", "ata", "self", "mu", "batch", "buffer", "zero", "info", "debug", "params", "ne", "raw", "hex", "array", "map", "entry"], "i": ["in", "multi", "si", "ip", "set", "ir", "l", "zi", "di", "c", "my", "ini", "err", "iy", "me", "info", "ski", " I", "hi", "associated", "p", "phi", "ish", "it", "s", "ie", "o", "b", "qi", "x", "y", "sim", "ia", "uri", "ami", "init", "index", "ori", "MI", "ii", "gi", "us", "cli", "ji", "inner", "ic", "ri", "fire", "bi", "iu", "ios", "ei", "this", "io", "I", "ind", "ij", "is", "li", "ui", "ix", "ti", "ai", "xi", "pi", "mi", "ity", "ci", "oi", "id", "f", "iq", "m", "ki", "\u0438", "batch", "ims", "fi", "im", "u"], "q": ["query", "qt", "ques", "dq", "qq", "quit", "ch", "qa", "w", "quer", "qual", "quad", "l", "k", " Q", "qi", "qv", "c", "ue", "r", "h", "iq", "ql", "ry", "m", "quant", "sq", "qs", "z", "Q", "aq", "p", "requ", "que", "u", "qu"], "line2": ["frame2", "frame8", "line3", " line3", " lineGe", " line8", "ineGe", "Line1", "frameGe", "ine1", "lineGe", "ine3", " line21", " line1", "line21", "line1", "ine8", "Line21", "line8", "frame3", "ine21", "Line2", "ine2"], "searcher": ["sorchers", "searsher", "seearler", "seearch", "sparler", "searler", "seearched", "SEearter", "searher", "separch", "seerch", "searter", "seearter", "searsner", "seearner", "SEarcher", "sarter", "SEarter", "sorch", "searched", "seorchers", "sarler", "sparch", "sarcher", "SEarher", "sparter", "SEarner", "seorcher", "seaucher", "seauched", "seauchers", "sparcher", "seearchers", "separher", "seearcher", "searner", "sorcher", "seorch", "searchers", "separcher", "seerter", "SEearher", "seauch", "searscher", "SEearner", "SEearcher", "seearher", "seercher", "separler", "sorched", "sarchers", "seerler", "separter", "sarched", "seorched", "separner", "sarch", "searster"], "result": ["report", "feature", "complete", "results", "section", "total", "success", "true", "diff", "test", "status", "term", "progress", "found", "out", "created", "rendered", "goal", "def", "RESULTS", "correct", "mate", "trace", "r", "relation", "score", "date", "ret", "default", "error", "make", "res", "number", "process", "power", "length", "rank", "value", "duration", "command", "Result", "zero", "function", "continue", "valid", "message", "match"], "search": ["rep", "query", "shared", "part", "section", "space", "sol", "test", "place", "term", "key", "phrase", "see", "th", "found", "lower", "sel", "seek", "form", "stroke", "sub", "rel", "find", "ident", "earch", "where", "finder", "word", "math", "sex", "pattern", "Search", "sect", "shell", "hash", "shift", "index", "delete", "self", "replace", "sq", "suggest", "se", "spec", "sense", "need", "sh", "match", "par", "sp", "entry"], "left": ["old", "list", "lt", "last", "level", "set", "max", "local", "low", "position", "from", "l", "Left", "found", "lower", "loc", "out", "x", "middle", "rel", "lo", "before", "my", "end", "lock", "ml", "id", "start", "half", "min", "top", "length", "ind", "le", "center", "m", "index", "shift", "rest", "path", "offset", "L", "pl", "len", "both", "inner", "small", "sp"], "right": ["cross", "Right", "success", "last", "max", "then", "w", "random", "mr", "through", "rem", "all", "radius", "fr", "red", "after", "ax", "first", "tr", "rd", "th", "rt", "row", "out", "x", "middle", "correct", "rel", "rew", "before", "r", "end", "range", "start", "res", "top", "length", "rc", "back", "reg", "rx", "shift", "rest", "R", "rw", "root", "upper", "head", "br", "full", "one", "width", "reverse", "third", "rights", "ro"], "mid": ["ms", "part", "multi", "mor", "nd", "mat", "mad", "md", "px", "partial", "sid", "mt", "max", "lim", "mr", "dim", "key", "mm", "rid", "mouse", "medium", "x", "mil", "middle", "trans", "meta", "med", "rel", "my", "mi", "id", "pid", "min", "minute", "mask", "res", "ind", "ph", "le", "m", "wrapper", "mb", "spec", "mac", "offset", "rand", "tri", "hi", "mer", "grid", "Mid", "match", "wid", "mit", "mn"], "arr": ["rep", "ars", "bl", "list", "cur", "ab", "obj", "buff", "var", "parts", "vol", "au", "all", "ll", "fr", "ax", "tr", "aaa", "buf", "dr", "enc", "arg", "ARR", "vals", "db", "row", "rs", "Ar", "coll", "gr", "js", "str", "addr", "r", "nt", "Array", "sys", "ar", "ray", "rev", "err", "dat", "arb", "res", "inst", "ack", "app", "ij", "batch", "frac", "arp", "rec", "aa", "att", "br", "agg", "array", "pl", "ev", "repl", "grid", "pr", "elt", "ix", "val", "pp", "par"], "g": ["size", "e", "it", "s", "pg", "w", "gu", "msg", "gen", "group", "l", "b", "k", "x", "gy", "c", "d", "gr", "bg", "ig", "r", "y", "ng", "mg", "gg", "h", "f", "a", "G", "gt", "gp", "reg", "gs", "m", "index", "gc", "go", "gi", "gm", "z", "ger", "gn", "p", "ge", "ic", "u"], "count": ["nb", "scroll", "report", "add", "size", "list", "total", "max", "cache", "w", "status", "all", "group", "sum", "counter", "th", "found", "c", "d", "flag", "find", "nt", "err", "start", "h", "number", "f", "length", "index", "cond", "call", "Count", "acc", "ount", "z", "num", "code", "ct", "ctr", "p", "weight", "second"], "v": ["val", "vt", "ve", "w", "lv", "l", "vv", "b", "k", "vp", "x", "c", "V", "vs", "r", "vi", "rev", "y", "conv", "vy", "f", "value", "m", "vm", "tv", "z", "p", "sv", "uv", "u"], "j": ["bi", "bj", "si", "jc", "J", "it", "json", "s", "w", "o", "l", "b", "dj", "k", "jj", "aj", "jl", "x", "jp", "d", "uj", "js", "ja", "y", "h", "f", "ij", "m", "kj", "z", "jump", "ji", "pr", "p", "u"], "name": ["summary", "size", "names", "NAME", "filename", "key", "alias", "ns", "nam", "format", "prefix", "str", "common", "nm", "no", "address", "type", "ame", "id", "default", "number", "title", "word", "string", "value", "me", "named", "m", "index", "info", "path", "class", "label", "num", "code", "description", "Name"], "time": ["runtime", "tt", "rate", "etime", "dt", "TIME", "century", "test", "Time", "when", "tim", "clock", "tag", "text", "frequency", "tz", "version", "date", "type", "estamp", "id", "start", "minute", "age", "value", "sec", "timer", "duration", "m", "tm", "index", "times", "tc", "ime", "timeout", "code", "second"], "t": ["tt", "dt", "vt", "at", "ti", "it", "s", "w", "T", "o", "l", "tr", "b", "wt", "k", "x", "out", "c", "ts", "d", "y", "ty", "h", "f", "m", "tm", "tc", "z", "txt", "p"]}}
{"code": "import java.util.*;\\nimport java.lang.Math;\\n\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\\n  \t\t\\n      \tint a = sc.nextInt();\\n      \tint b = sc.nextInt();\\n      \tint c = sc.nextInt();\\n      \tint d = sc.nextInt();\\n      \tboolean twin = false;\\n      \tboolean awin = false;\\n      \tString str = \" \";\\n      \\n      \tfor(int i = 0;!twin && !awin;i++) {\\n\t\t\tif(i % 2 == 0){\\n              c -= b;\\n              if(c <= 0) {\\n                twin = true;\\n              \tstr = \"Yes\";\\n              }\\n            } else {\\n              a -= d;\\n              if(a <= 0) {\\n                awin = true;\\n                str = \"No\";\\n              }\\n            }        \\n        }     \t\\n      \t\\n      \tSystem.out.println(str);\\n        \\n\t}\\n}\\n", "target": "186", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "cmp", "anc", "cr", "ec", "Sc", "scope", "ctx", "inc", "cgi", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "nc", "system", "cs", "tc", "sq", "ck", "pc", "ctl", "dc", "acc", "isc", "capt", "scl", "sv", "sp", "esc"], "a": ["an", "la", "ba", "ab", "part", "da", "at", "ea", "ai", "e", "au", "o", "l", "area", "anc", "x", "ad", "am", "A", "g", "r", "or", "v", "ar", "ak", "ta", "ma", "f", "j", "ao", "alpha", "ac", "ach", "ata", "ga", "aa", "as", "t", "sta", "att", "na", "apa", "sa", "ca", "n", "p"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "e", "sb", "o", "eb", "l", "bd", "bs", "gb", "ob", "db", "g", "r", "bc", "v", "bf", "y", "bt", "cb", "j", "f", "back", "t", "B", "rb", "n", "p", "u"], "c": ["cp", "ab", "ch", "e", "cm", "mc", "l", "cd", "ec", "cr", "g", "r", "cy", "bc", "cc", "fc", "C", "ci", "co", "cb", "f", "cu", "lc", "rc", "ac", "m", "uc", "nc", "cs", "cf", "tc", "con", "t", "dc", "z", "ce", "ca", "n", "ct", "p", "ic", "unc", "u"], "d": ["dt", "da", "nd", "e", "s", "D", "ds", "w", "o", "l", "dr", "di", "bd", "dd", "db", "x", "ad", "g", "r", "v", "j", "f", "h", "de", "q", "m", "t", "dc", "z", "n", "div", "p", "u"], "str": ["wr", "obj", "vol", "it", "s", "sw", "ocr", "msg", "fr", "expr", "STR", "tr", "dr", "del", "cr", "char", "db", "out", "text", "doc", "ust", "rel", "gr", "exc", "r", "sys", "err", "dat", "res", "inst", "print", "st", "string", "Str", "arr", "rest", "cast", "stable", "output", "url", "spec", "exp", "cs", "t", "raw", "usr", "tree", "txt", "inv", "n", "temp", "elt", "ctr", "inner", "hex", "div", "sp", "dec"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "o", "zi", "xi", "di", "pi", "x", "mi", "ini", "ci", "y", "sim", "span", "id", "j", "I", "me", "index", "ki", "\u0438", "ii", "gi", "us", "t", "li", "base", "hi", "ui", "cli", "n", "sql", "ix", "im", "ic", "phi"], "twin": ["wrin", "swinn", "Twoin", "wrinn", "twi", "twinn", "TWinner", "swine", "Twinn", "Twi", "swoin", "twine", " twinner", "swin", "wrine", "TWi", "swinner", "TWout", "Twin", "swi", "Twout", "twout", "wrout", " twoin", "twinner", "Twine", "swout", "TWin", " twi", "twoin", " twout"], "awin": ["owirin", "swdin", "awoin", "awi", "awdin", "ewin", "rewin", "swoin", "ewdin", "ayoin", "swin", " awi", "awout", "awirin", "owoin", "ewirin", "owout", "rewn", " awirin", "swirin", " awdin", "ewoin", "rewoin", " awout", "ayin", " awoin", "awn", "ayn", "ewout", "rewi", "ayi", "owin", " awn"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner scan = new java.util.Scanner(System.in);\\n        long a = scan.nextLong();\\n        long b = scan.nextLong();\\n        long k = scan.nextLong();\\n        \\n        if(a >= k){\\n            a = a - k;\\n        }else{\\n            b = b - k + a; \\n            a = 0;\\n        }\\n        if(a < 0 || b < 0){\\n            a = 0;\\n            b = 0;\\n        }\\n        System.out.println(a + \" \" + b);\\n    }\\n}", "target": "128", "substitutes": {"scan": ["an", "query", "in", "scroll", " Scan", "report", "ch", "nn", "sb", "sync", "s", "check", "pass", "cat", "sk", "read", "send", "connect", "ann", "clean", "see", "save", "row", "out", "seek", "sc", "parse", "sin", "ner", "r", "find", "v", "sys", "black", "skip", "search", "sp", "can", "reach", "gc", "gate", "san", "system", "watch", "sort", "util", "n", "sql", "sur", "sv", "Scan", " scanner"], "a": ["an", "la", "ba", "ab", "eas", "da", "ea", "at", "ai", "au", "e", "obj", "ra", "ee", "aka", "o", "l", "aaa", "aj", "area", "x", "i", "c", "am", "d", "A", "era", "g", "act", "\u00e4", "v", "ar", "err", "ia", "ak", "ta", "ma", "f", "j", "ao", "alpha", "ac", "ae", "app", "m", "index", "ga", "oa", "aa", "as", "t", "sta", "na", "pa", "att", "z", "apa", "acc", "sa", "ca", "aq", "p", "al", "u"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "fb", "e", "sb", "ub", "wb", "o", "eb", "l", "bd", "bs", "ob", "db", "bin", "c", "i", "d", "bg", "g", "r", "bc", "v", "bf", "y", "cb", "j", "f", "back", "body", "m", "beta", "bad", "pb", "mb", "bis", "bp", "t", "br", "to", "z", "B", "rb", "n", "p"], "k": ["ka", "kl", "kr", "ke", "kn", "wk", "sk", "kok", "key", "kid", "K", "l", "ko", "ks", "i", "c", "ik", "g", "ek", "v", "ku", "ok", "ak", "j", "kk", "kw", "q", "m", "mk", "kj", "ki", "km", "ck", "tk", "t", "z", "dk", "n", "unk", "p", "kh", "u"]}}
{"code": "import java.io.*;\\nimport java.util.Arrays;\\nclass Main{\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tint i;\\n\t\tint n;\\n\t\tString str;\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t\tfor(i=1; ;i++){\\n\t\t\tstr = in.readLine();\\n\t\t\tn = Integer.parseInt(str);\\n\t\t\tif(n==0) break;\\n\t\t\tSystem.out.println(\"Case \"+(i)+\": \"+n);\\n\t\t}\\n\t}\\n}", "target": "97", "substitutes": {"i": ["bi", "multi", "si", "ai", "iter", "ip", "it", "iu", "ie", "status", "chain", "l", "xi", "di", "pi", "qi", "x", "ei", "r", "mi", "v", "ini", "ci", "y", "id", "sim", "oi", "j", "iq", "I", "ind", "ij", "init", "m", "index", "ki", "batch", "ii", "ims", "is", "li", "hi", "ui", "ji", "ix", "p", "im", "ic", "phi", "ri"], "n": ["nb", "en", "nd", "nn", "total", "it", "nor", "none", "o", "l", "np", "k", "ns", "c", "d", "nr", "g", "norm", "nt", "no", "nm", "y", "ng", "on", "j", "number", "sn", "ni", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "gn", "p", "note"], "str": ["obj", "vol", "s", "cat", "ocr", "fr", "expr", "chain", "STR", "tr", "del", "char", "text", "out", "form", "gr", "parse", "r", "v", "err", "dat", "name", "j", "res", "print", "string", "st", "m", "Str", "sl", "output", "exp", "spec", "raw", "t", "br", "txt", "div", "pr", "inner", "enc", "sp", "arr"], "in": ["old", "add", "std", "In", "it", "null", "din", "read", "file", "from", "all", "rin", "run", "world", "user", "b", "sum", "ins", "thin", "by", "bin", "out", "doc", "conf", "get", "this", "inc", "r", "ini", "err", "config", "io", "f", "ind", "IN", "log", "reader", "OUT", "info", "con", "is", "stream", "input", "txt", "inn", "inf", "inner", "cin", "ro"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint A = sc.nextInt();\\n\t\tint B = sc.nextInt();\\n\t\tsc.close();\\n\\n\t\tif (A >= 10 || B >= 10) {\\n\t\t\tSystem.out.println(\"-1\");\\n\t\t} else {\\n\t\t\tSystem.out.println(A * B);\\n\t\t}\\n\t}\\n}\\n", "target": "58", "substitutes": {"sc": ["ch", "sb", "sw", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "ko", "sel", "c", "arc", "sub", "inc", "bc", "cc", "sys", "screen", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "gc", "cl", "scan", "nc", "sq", "cs", "tc", "system", "ck", "se", "pc", "ctl", "ser", "sa", "capt", "isc", "syn", "scl", "sh", "desc", "sv", "sp", "esc"], "A": ["AY", "AB", "S", "AT", "D", "This", "mA", "ESS", "EA", "AC", "AGE", "H", "As", "P", "HA", "AS", "RA", "AD", "AH", "CA", "V", "SA", "ACC", "AV", "M", "ACT", "C", "X", "AE", "LA", "AR", "a", "G", "AA", "R", "AL", "IA", "GA", "AP", "L", "Av", "UA", "AU", "AST", "API", "N", "AN", "An", "ACK"], "B": ["AB", "S", "BR", "J", "BB", "BF", "Two", "D", "BER", "BA", "RB", "T", "E", "b", "IB", "VB", "Y", "USB", "BY", "P", "TB", "V", "M", "C", "BC", "WB", "G", "I", "BE", "BI", "OB", "R", "Bar", "EB", "FB", "LB", "BM", "L", "GB", "N", "DB"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n      Scanner scan = new Scanner(System.in);\\n      int n = scan.nextInt();\\n      String a = scan.next();\\n      String b = scan.next();\\n    StringBuilder sb = new StringBuilder();\\n    for (int i = 0; i < n; i++){\\n      if(!a.isEmpty()){\\n          sb.append(a.charAt(i));\\n      }\\n      if(!b.isEmpty()){\\n          sb.append(b.charAt(i));\\n      }\\n    }\\n    System.out.println(sb.toString());\\n  }\\n}", "target": "200", "substitutes": {"scan": ["an", "scroll", "in", "query", "report", "ch", "nn", "sync", "check", "pass", "sm", "read", "gen", "send", "connect", "re", "ann", "run", "see", "sum", "by", "row", "out", "trans", "sc", "cgi", "g", "sin", "ner", "parse", "find", "skip", "sys", "proc", "range", "search", "can", "reach", "gc", "gate", "san", "go", "system", "sort", "info", "nav", "se", "ser", "link", "scale", "stat", "store", "sur", "auto", "sv", "Scan", "sp"], "n": ["nb", "an", "en", "ot", "nn", "nw", "nor", "network", "l", "np", "ns", "d", "un", "nm", "nt", "no", "ng", "j", "sn", "ni", "nu", "m", "nl", "nc", "ln", "nan", "ne", "t", "na", "cn", "num", "count", "net", "N", "gn", "mn"], "a": ["ap", "an", "acs", "la", "ba", "ab", "ea", "ai", "au", "qa", "eta", "apt", "aria", "aka", "o", "art", "aaa", "aj", "area", "aux", "audio", "am", "A", "era", "act", "ar", "ja", "ia", "ma", "ta", "admin", "ao", "va", "app", "ac", "ae", "alpha", "ya", "ata", "ua", "oa", "att", "as", "aa", "sta", "apa", "sa", "ca", "isa", "aq", "al"], "b": ["nb", "bi", "ba", "ab", "bl", "be", "fb", "bb", "ib", "buff", "ub", "wb", "erb", "eb", "lib", "ob", "gb", "bs", "db", "bg", "bc", "bf", "bar", "cb", "back", "emb", "beta", "good", "pb", "mb", "blue", "bis", "bp", "br", "base", "B", "rb", "bound"], "sb": ["nb", "bsp", "abb", "bj", "si", "bb", "ib", "buff", "zb", "sf", "wb", "sm", "erb", "sbm", "eb", "orb", "bps", "lb", "gob", "bs", "gb", "ob", "db", "lp", "bg", "kb", "bh", "bt", "SB", "xb", "cb", "rm", "sn", "rob", "sg", "obb", "shell", "rpm", "gc", "sam", "sl", "pb", "ssl", "sq", "mb", "bis", "ssh", "rb", "sa", "stab", "sql", "sh", "sv", "sp"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "major", "iu", "gu", "ie", "user", "zi", "xi", "di", "pi", "qi", "x", "ei", "my", "mi", "point", "ini", "ci", "y", "sim", "oi", "j", "io", "uri", "ni", "I", "remote", "q", "init", "me", "m", "index", "ori", "ki", "\u0438", "batch", "gi", "ii", "info", "slice", "ims", "is", "li", "hi", "ui", "cli", "client", "ji", "sql", "ix", "ic", "phi", "u", "ri"]}}
{"code": "\\nimport java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n  public static void main(String args[]) {\\n\\n    Scanner sc = new Scanner(System.in);\\n\\n    int N = sc.nextInt();\\n    int H[] = new int[N];\\n    int count = 0;\\n    List<Integer> list = new ArrayList<Integer>();\\n\\n    for (int i = 0; i < N; i++) {\\n      H[i] = sc.nextInt();\\n    }\\n\\n    for (int i = 0; i < N - 1; i++) {\\n      if (H[i] >= H[i + 1]) {\\n        count++;\\n      } else {\\n        list.add(count);\\n        count = 0;\\n      }\\n\\n      if (i == N - 2) {\\n        list.add(count);\\n      }\\n\\n    }\\n\\n    int max = 0;\\n    for (int i = 0; i < list.size(); i++) {\\n      if (max <= list.get(i)) {\\n        max = list.get(i);\\n      }\\n    }\\n\\n    System.out.println(max);\\n\\n    sc.close();\\n  }\\n}\\n", "target": "187", "substitutes": {"sc": ["mp", "ch", "sync", "sw", "cle", "src", "asc", "mc", "osc", "anc", "cr", "Sc", "arc", "sci", "c", "ctx", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "can", "nl", "gc", "cl", "ss", "scan", "pb", "nc", "system", "tc", "sq", "cs", "so", "spec", "pc", "ctl", "dc", "ser", "isc", "syn", "capt", "scl", "sh", "sv", "sp", "esc"], "N": ["NP", "NI", "S", "NA", "J", "UN", "D", "T", "NM", "NH", "K", "Net", "Y", "P", "A", "V", "NT", "M", "C", "X", "Sn", "NO", "NE", "Size", "NB", "I", "FN", "TN", "NOTE", "R", "ANY", "NR", "NN", "NOW", "Count", "Num", "NC", "NS", "L", "B", "NEW", "GN", "F", "n", "ND", "SN", "AN"], "H": ["HE", "Host", "HTTP", "HH", "T", "NH", "K", "HI", "HD", "MH", "PH", "HTML", "OH", "Y", "Hash", "HC", "HA", "P", "DH", "Head", "RH", "V", "TH", "High", "M", "C", "HB", "He", "CH", "h", "HS", "His", "I", "G", "HT", "HQ", "HL", "Hi", "HK", "SH", "HP"], "count": ["result", "limit", "report", "add", "core", "size", "total", "check", "cache", "cycle", "set", "next", "comment", "chain", "first", "counter", "sum", "const", "found", "conf", "c", "amount", "coll", "find", "draw", "nt", "cont", "must", "current", "start", "number", "length", "print", "force", "child", "hold", "index", "gc", "cond", "call", "batch", "Count", "t", "full", "stat", "num", "code", "ct", "n", "important", "more", "ctr", "temp", "match", "mean", "history"], "list": ["result", "add", "size", "menu", "total", "null", "dict", "set", "true", "local", "test", "pool", "all", "ll", "source", "block", "single", "acl", "table", "l", "see", "chain", "user", "out", "form", "def", "left", "get", "lists", "this", "listed", "parent", "load", "cont", "range", "collection", "number", "print", "st", "xml", "pre", "log", "batch", "write", "stack", "detail", "dl", "spec", "ist", "li", "array", "L", "tree", "header", "code", "queue", "temp", "filter", "map", "sequence", "LIST"], "i": ["in", "multi", "si", "ip", "set", "chain", "l", "zi", "di", "c", "point", "ini", "iy", "me", "info", "hi", "phi", "it", "ie", "o", "qi", "y", "sim", "name", "uri", "q", "init", "ami", "index", "asi", "ii", "gi", "to", "base", "cli", "ji", "inner", "ic", "ri", "bi", "iu", "key", "source", "ei", "this", "j", "io", "I", "ind", "ij", "is", "li", "ui", "client", "ix", "eric", "yi", "ti", "ai", "e", "xi", "pi", "mi", "v", "ity", "ci", "oi", "id", "f", "iq", "m", "ki", "\u0438", "batch", "ims", "fi", "im", "u", "wi"], "max": ["limit", "cp", "highest", "mx", "size", "std", "total", "last", "right", "set", "MAX", "all", "now", "ax", "best", "sum", "k", "aux", "prime", "conf", "out", "med", "window", "act", "end", "v", "high", "lock", "default", "min", "height", "res", "top", "gt", "length", "print", "rank", "recent", "rest", "Max", "view", "huge", "exp", "t", "full", "ex", "n", "p", "mean", "maximum"]}}
{"code": "import java.util.*;\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        String s = sc.next();\\n        String t = sc.next();\\n\\n        for(int i = 0;i<n;i++){\\n            System.out.print(s.charAt(i)+\"\"+t.charAt(i));\\n        }\\n        \\n    }\\n}\\n", "target": "200", "substitutes": {"sc": ["irc", "ch", "sync", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "sci", "c", "sub", "cons", "inc", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", "rc", "cv", "usc", "sch", "sec", "sr", "gc", "cl", "sl", "scan", "nc", "sq", "cs", "tc", "ck", "pc", "ctl", "ser", "dc", "sa", "isc", "capt", "desc", "scl", "sv", "sp", "esc"], "n": ["nb", "an", "en", "nn", "nw", "nor", "network", "l", "np", "ns", "d", "un", "nm", "nt", "ng", "Ni", "name", "sn", "ni", "nu", "m", "nl", "nc", "ln", "nan", "ne", "na", "cn", "num", "net", "N", "gn", "mn"], "s": ["ses", "S", "ws", "sts", "sf", "sb", "src", "ds", "es", "ns", "strings", "ts", "js", "str", "sys", "ats", "sd", "st", "gs", "string", "ls", "sl", "ss", "sq", "so", "os", "se", "ps", "is", "z", "sql", "sh", "sv", "rs", "hs", "sp"], "t": ["tt", "ot", "at", "total", "it", "pt", "T", "tr", "wt", "rt", "template", "ts", "trace", "or", "nt", "type", "ty", "tf", "ta", "gt", "title", "st", "tm", "te", "tc", "tk", "to", "tree", "txt", "ct"], "i": ["yi", "bi", "in", "uni", "multi", "si", "ti", "ai", "ip", "it", "gu", "iu", "key", "zi", "xi", "sym", "di", "pi", "qi", "x", "ei", "iri", "my", "mi", "ini", "ci", "y", "err", "sim", "oi", "j", "a", "uri", "I", "q", "init", "ami", "m", "index", "ori", "ki", "\u0438", "gi", "ii", "us", "ims", "eu", "ski", "is", "li", "hi", "ui", "cli", "client", "ji", "ix", "cu", "ic", "phi", "u"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        int M = sc.nextInt();\\n        int[] L = new int[M];\\n        int[] R = new int[M];\\n        int max=N+1;\\n        int min=0;\\n        for(int i=0; i<M; i++){\\n            L[i]=sc.nextInt();\\n            R[i]=sc.nextInt();\\n            min = Math.max(min,L[i]);\\n            max = Math.min(max,R[i]);\\n        }\\n        //int K = sc.nextInt();\\n        //long N = sc.nextLong();\\n        int res = Math.max(max-min+1,0);\\n        \\n\\n        \\n        System.out.println(res);\\n        }\\n    }", "target": "124", "substitutes": {"sc": ["irc", " scr", "std", "ch", "sync", "sb", "sw", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "c", "inc", "cgi", "bc", "cc", "sys", "fc", "cont", "SC", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "pb", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "dc", "psc", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "N": ["NI", "S", "NA", "J", "D", "T", "NM", "NH", "K", "H", "Y", "P", "V", "NT", "C", "X", "Ni", "NB", "I", "TN", "NW", "NL", "NN", "Ns", "Num", "NS", "SN", "F", "n", "ND", "NC", "AN"], "M": ["MP", "S", "Mi", "J", "D", "T", "IM", "E", "K", "H", "MT", "MB", "MU", "P", "RM", "MS", "V", "MA", "DM", "MODE", "C", "MD", "MAT", "LM", "Size", "MC", "I", "G", "IN", "m", "MX", "MI", "MM", "B", "MAN", "MN", "F", "O"], "L": ["LC", "LS", "TL", "GL", "l", "LIN", "LD", "SL", "LU", "Li", "LT", "CL", "LOC", "XL", "PL", "LE", "Log", "LI", "Lu", "LP", "ML", "LR", "LL", "LA", "RL", "LM", "LG", "I", "DL", "FL", "NL", "AL", "LB", "BL", "LO", "EL"], "R": ["MR", "RO", "S", "BR", "J", "D", "PR", "RB", "DR", "Res", "RT", "H", "Y", "P", "RM", "RA", "RES", "RH", "V", "r", "RS", "C", "X", "SR", "AR", "I", "G", "RP", "Rs", "GR", "B", "RR", "Q", "RE", "RG", "CR", "RAM", "RF"], "max": ["add", "outer", "size", "major", "total", "last", "right", "set", "MAX", "diff", "history", "up", "next", "all", "ax", "first", "after", "chain", "best", "master", "step", "sum", "cover", "prime", "out", "med", "window", "r", "end", "ref", "v", "parent", "act", "global", "mod", "range", "start", "default", "ma", "over", "res", "current", "length", "patch", "force", "m", "recent", "rest", "Max", "view", "upper", "t", "scale", "dot", "ext", "full", "na", "ex", "n", "div", "auto", "p", "ge", "maximum"], "min": ["in", "delay", "part", "lt", "partial", "last", "mid", "local", "test", "next", "from", "diff", "none", "mine", "master", "first", "l", "amin", "step", "lower", "loc", "sub", "rel", "left", "sin", "average", "lock", "mod", "span", "start", "only", "current", "minute", "range", "search", "admin", "ind", "mel", "init", "m", "shift", "rest", "pre", "initial", "mins", "minimum", "sort", "MIN", "minus", "offset", "Min", "scale", "rand", "emin", "n", "sample", "div", "inner", "mean", "tail", "small", "mn"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "json", "set", "iu", "gu", "ie", "key", "status", "gl", "series", "chain", "zi", "xi", "di", "pi", "details", "qi", "jp", "ei", "mi", "v", "ini", "ci", "y", "sim", "id", "err", "j", "io", "uri", "I", "ij", "q", "init", "me", "m", "ami", "ki", "batch", "ii", "gi", "info", "us", "exp", "is", "li", "base", "ex", "hi", "ui", "cli", "ji", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[]args){\\n      Scanner sc = new Scanner(System.in);\\n\\n      long a = sc.nextLong();\\n      long b = sc.nextLong();\\n      long k = sc.nextLong();\\n\\n\\n      if (a<k) {\\n        System.out.print(0);\\n        System.out.print(\" \");\\n        if (b-(k-a)<0) {\\n          System.out.print(0);\\n          System.out.println();\\n          System.exit(0);\\n        }else{\\n          System.out.print(b-(k-a));\\n          System.out.println();\\n          System.exit(0);\\n        }\\n      }else{\\n        System.out.print(a-k);\\n        System.out.print(\" \");\\n        System.out.print(b);\\n        System.out.println();\\n      }\\n\\n    }\\n}\\n", "target": "128", "substitutes": {"sc": [" scr", "si", "ch", "sb", "sw", "src", "asc", "mc", "osc", "ctrl", "Sync", "cr", "Sc", "Desc", "c", "ctx", "sci", "bc", "cc", "sys", "cont", "screen", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "dc", "ser", "syn", "isc", "scl", "sh", "sv", "sp", "esc"], "a": ["an", "la", "ba", "\u00e1", "ab", "ea", "at", "ai", "au", "e", "w", "aka", "o", "ax", "l", "aj", "area", "el", "i", "ast", "am", "c", "A", "era", "act", "ar", "ia", "ta", "ma", "j", "ao", "ack", "app", "ac", "ae", "alpha", "ach", "ga", "oa", "aa", "as", "t", "na", "pa", "sa", "ca", "n", "p", "al"], "b": ["nb", "bi", "ba", "ab", "bb", "ib", "fb", "e", "sb", "s", "ub", "wb", "eb", "l", "bs", "ob", "db", "c", "i", "d", "r", "bc", "bf", "v", "y", "bar", "cb", "j", "back", "buffer", "mb", "bp", "br", "t", "to", "base", "z", "B", "rb", "bound", "n", "p", "be"], "k": ["ka", "kl", "ke", "kr", "kn", "e", "wk", "w", "sk", "kok", "key", "aka", "K", "ko", "kick", "ks", "i", "c", "d", "ik", "g", "ek", "v", "ku", "id", "ok", "ak", "j", "h", "ack", "kk", "kw", "q", "kj", "mk", "m", "ki", "km", "ck", "tk", "z", "dk", "n", "unk", "p", "kh", "u"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n\\n        Scanner sc = new Scanner(System.in);\\n\\n        String S = sc.next();\\n\\n        int forward = 0;\\n        int backward = 0;\\n\\n        for (int i = 0; i < S.length(); i++) {\\n            if (S.charAt(i) == (48 + i % 2 )) {\\n                forward++;\\n            }\\n            if (S.charAt(i) != (48 + i % 2)) {\\n                backward++;\\n            }\\n        }\\n\\n        System.out.println(Math.min(forward, backward));\\n    }\\n}\\n", "target": "146", "substitutes": {"sc": ["ch", "sync", "s", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "ko", "sel", "c", "inc", "dec", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "RC", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "uc", "nc", "sq", "cs", "tc", "system", "se", "pc", "isc", "desc", "scl", "sv", "sp", "esc"], "S": ["CS", "DS", "SF", "s", "SER", "T", "Source", "STR", "SOURCE", "SU", "US", "SL", "SE", "SAM", "P", "AS", "RAW", "TS", "SM", "V", "MS", "ASC", "SA", "Si", "ST", "M", "C", "RS", "SB", "SI", "SC", "GS", "G", "IS", "SP", "SO", "BS", "SQL", "JS", "L", "NS", "B", "N", "SN", "SH", "SS"], "forward": ["update", "focus", "missing", "lead", "hard", "foot", "forth", "download", "vance", "next", "fill", "first", "gain", "binary", "accept", "correct", "prefix", "fast", "western", "speed", "ward", "draw", "primary", "roll", "adv", "disk", "attack", "range", "WARD", "standard", "swing", "back", "force", "print", "bridge", "fork", "west", "leaf", "normal", "initial", "Forward", "fw", "transform", "zero", "front", "stack", "verse", "oward", "dot", "flight", "reverse", "bill", "control"], "backward": ["backforward", "frontflow", "frontward", "dward", "frontwards", "basewards", " backirect", " backreverse", " backforward", " backflow", "backflow", "baseforward", "Backforward", "backirect", "frontreverse", "dforward", "Backreverse", "Backwards", "Backirect", "Backward", "baseflow", "dwards", "baseward", "direct", "backwards", "backreverse", "Backflow", " backwards"], "i": ["yi", "bi", "in", "record", "multi", "si", "ti", "ai", "it", "ip", "iu", "ie", "o", "chain", "l", "zi", "xi", "di", "pi", "qi", "x", "c", "ei", "g", "mi", "v", "ini", "ci", "y", "id", "oi", "j", "io", "a", "uri", "I", "ind", "init", "m", "index", "ori", "ki", "\u0438", "ii", "gi", "us", "info", "slice", "t", "to", "is", "li", "hi", "ui", "cli", "n", "ji", "sql", "ix", "p", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.HashSet;\\nimport java.util.List;\\nimport java.util.Scanner;\\nimport java.util.Set;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws Exception {\\n\\n//    \tFile file = new File(\"test.txt\");\\n//    \tScanner sc = new Scanner(file);\\n    \tScanner sc = new Scanner(System.in);\\n    \tint n = sc.nextInt();\\n    \tString[] ary = new String[n];\\n    \tList<String> ans = new ArrayList<String>();\\n    \tfor(int i = 0; i < n; i++){\\n    \t\tString s = sc.next();\\n    \t\tary[i] = s;\\n    \t}\\n    \tsc.close();\\n    \tArrays.sort(ary);\\n    \tSet<String> set = new HashSet<String>(Arrays.asList(ary));\\n    \tif(ary.length == set.size()){\\n    \t\tfor(int i = 0; i < ary.length; i++){\\n        \t\tSystem.out.println(ary[i]);\\n        \t}\\n    \t\treturn;\\n    \t}\\n    \tint maxcnt = 0;\\n    \tint cnt = 0;\\n    \tans.add(ary[0]);\\n    \tfor(int i = 0; i < n-1; i++){\\n    \t\tif(ary[i].equals(ary[i+1])){\\n    \t\t\tcnt++;\\n    \t\t}else{\\n    \t\t\tcnt = 0;\\n    \t\t}\\n    \t\tif(maxcnt == cnt){\\n    \t\t\tans.add(ary[i]);\\n    \t\t}else if(maxcnt < cnt){\\n    \t\t\tmaxcnt = cnt;\\n    \t\t\tans.clear();\\n    \t\t\tans.add(ary[i]);\\n    \t\t}\\n    \t}\\n    \tfor(int i = 0; i < ans.size(); i++){\\n    \t\tSystem.out.println(ans.get(i));\\n    \t}\\n    }\\n}", "target": "235", "substitutes": {}}
{"code": "\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        final Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\\n        String s = in.next().trim();\\n        String t = in.next().trim();\\n        int sCount = in.nextInt();\\n        int tCount = in.nextInt();\\n        String u = in.next();\\n        if (s.equals(u)) {\\n            sCount -= 1;\\n        } else {\\n            tCount -= 1;\\n        }\\n        System.out.println(sCount + \" \" + tCount);\\n    }\\n}\\n", "target": "155", "substitutes": {"in": [" din", "en", "add", "std", "In", "iter", "it", "ai", "cm", "din", "file", " out", "from", "all", "rin", "gen", "mm", "world", "l", "user", "ins", "pi", "thin", "conf", "bin", "out", "doc", "i", "c", "form", "get", "inc", "lines", "r", "act", "ini", "err", "default", "on", "ma", "ind", "al", "ac", "st", "IN", "init", "log", "scan", "reader", "info", "output", "per", "con", "readable", "raw", "isin", "is", "stream", "input", "n", "inn", "inf", "inner", "cin"], "s": ["S", "sts", "sb", "source", "o", "l", "b", "ns", "bs", "c", "i", "ts", "ys", "str", "g", "r", "v", "sys", "ats", "j", "sd", "a", "h", "f", "gs", "st", "string", "ls", "ss", "sl", "sq", "us", "os", "is", "z", "n", "p", "sv", "hs", "sp"], "t": ["tt", "it", "w", "T", "o", "l", "tr", "b", "wt", "rt", "c", "i", "ts", "str", "g", "r", "v", "y", "j", "ta", "f", "m", "tu", "tc", "z", "txt", "n", "p"], "sCount": ["itsConnect", "ssCount", "sAllow", "lsCount", "tsCount", "sIndex", "itsCount", "ssIndex", "ssAmount", "wsCount", "lsIndex", "wsAllow", "osFound", " sAmount", "lsFound", " sAllow", "wsConnect", " sIndex", "oscount", "lsAmount", "sFound", "itsAllow", "tsFound", "osCount", "scount", "sConnect", "tscount", "lscount", " sConnect", "sAmount"], "tCount": ["wtFlag", "otFound", " tCounter", "wtCount", "TNow", " tGroup", "ttCheck", " tFound", "TCounter", "tNow", "otCount", "uCount", "TFound", "tGroup", "uForce", "sCounter", "tFind", "ttForce", " tFlag", "otCounter", "wtFind", "tFound", "uCheck", "uGroup", " tForce", "tCheck", "tForce", " tNow", "ttCount", "tFlag", "tCounter", "sFind", "otNow", " tFind", "TCount", "ttGroup", " tCheck", "sFlag", "wtCounter"], "u": ["uf", "bu", "iu", "um", "o", "uid", "lu", "U", "p", "bo", "c", "i", "un", "ue", "v", "uu", "ud", "f", "ut", "q", "st", "nu", "ul", "fu", "ur", "mu", "tu", "us", "eu", "su", "ui", "cu", "ou", "uv"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\npublic class Main{\\n\\n\tpublic static void main(String[] args) throws Exception{\\n\t\tint num = 998244353;\\n\\n\t\t// TODO Auto-generated method stub\\n \t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\\n \t\tPrintWriter out = new PrintWriter(System.out);\\n \t\tint n = Integer.parseInt(bf.readLine());\\n \t\tArrayList<Integer> array = new ArrayList<Integer>();\\n \t\tint min = Integer.MAX_VALUE;\\n \t\tStringTokenizer st = new StringTokenizer(bf.readLine());\\n \t\tfor(int i = 0;i<n;i++){\\n \t\t\tarray.add(Integer.parseInt(st.nextToken()));\\n \t\t}\\n \t\tfor(int i = 1;i<=100;i++){\\n \t\t\tint sum = 0;\\n \t\t\tfor(int j= 0;j<array.size();j++){\\n \t\t\t\tsum+= (array.get(j)-i)*(array.get(j)-i);\\n \t\t\t}\\n \t\t\tmin = Math.min(sum,  min);\\n \t\t}\\n \t\t\\n \t\t\\n \t\tout.println(min);\\n\t \t\t\\n \t\tout.close();\\n \t\t\\n \t\t\\n \t\t\\n \t}\\n}\\n \t\\n \\n//StringJoiner sj = new StringJoiner(\" \"); \\n//sj.add(strings)\\n//sj.toString() gives string of those stuff w spaces or whatever that sequence is\\n\\n \t\t\\n \t\t\\n \t\t\\n \t\t\\n\t\\n\\n\\n", "target": "17", "substitutes": {"num": ["from", " NUM", " number", " thr", " sim", " seq", " mid", "off", "NUM", " seed", "start", "number", "Number", " counter", " numer", " remain", "index", " nu", "umber", "Num", "t", "count", " order", " sum", "orig", "dec"]}}
{"code": "import java.util.*;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n        final Scanner sc = new Scanner(System.in);\\n        final long A = Long.parseLong(sc.next());\\n        final long B = Long.parseLong(sc.next());\\n        final long K = Long.parseLong(sc.next());\\n        sc.close();\\n\\n        long a = A;\\n        long b = B;\\n        long k = K;\\n        if (a>=k) {\\n            a -= k;\\n            k = 0;\\n        } else {\\n            k -= a;\\n            a = 0;\\n        }\\n        if (b>=k) {\\n            b -= k;\\n            k = 0;\\n        } else {\\n            k -= b;\\n            b = 0;\\n        }\\n\\n        System.out.println(a + \" \" + b);\\n    }\\n}", "target": "128", "substitutes": {"sc": [" scr", "ch", "sync", "sb", "cle", "asc", "mc", "osc", "func", "ctrl", "anc", "cr", "ec", "Sc", "sel", "arc", "c", "sub", "cons", "inc", "cgi", "bc", "cc", "fc", "cont", "SC", "decl", "lc", " Sc", "rc", " SC", "usc", "sch", "sec", "sr", "gc", "cl", "scan", "nc", "sq", "cs", "tc", "pc", "ctl", "dc", " unsc", "isc", "capt", "scl", "desc", "sv", "sp", "esc"], "A": ["AB", "S", "AT", "This", "BA", "E", "AC", "U", "H", "As", "P", "AS", "CA", "SA", "AV", "C", "X", "AE", "Alpha", "LA", "AR", "AA", "ALL", "TA", "AL", "IA", "Ant", "AP", "L", "Av", "AU", "AM", "AST", "N", "Ax", "AN", "An"], "B": ["AB", "Bs", "S", "BR", "BB", "J", "BF", "RB", "BER", "BA", "IB", "VB", "Y", "MB", "BY", "BT", "Bern", "TB", "Bi", "BO", "BC", "WB", "NB", "BE", "BI", "OB", "Bar", "BS", "EB", "LB", "PB", "BL", "L", "Ber", "GB", "N", "DB"], "K": ["J", "FK", "KR", "Key", "KK", "KS", "PK", "KI", "Sk", "IK", "Z", "KEY", "MS", "TH", "KA", "UK", "C", "CH", "MK", "SK", "KC", "KING", "The", "KE", "L", "KB", "Ka", "VK", "MN", "N", "AK", "KY"], "a": ["ap", "an", "la", "av", "ba", "ab", "ea", "at", "ai", "au", "s", "all", "aka", "o", "l", "art", "aaa", "aj", "area", "x", "ad", "i", "am", "d", "era", "act", "r", "\u00e4", "ar", "ia", "ta", "ma", "f", "ao", "va", "app", "ac", "ae", "alpha", "back", "ach", "ga", "oa", "aa", "as", "t", "sta", "apa", "na", "pa", "fa", "sa", "ca", "n", "aq", "al"], "b": ["nb", "bi", "ba", "bl", "ab", "bb", "fb", "ib", "e", "sb", "s", "wb", "o", "eb", "l", "bs", "ob", "by", "bin", "db", "bo", "i", "c", "d", "g", "r", "bc", "v", "bf", "y", "bt", "cb", "j", "h", "f", "body", "m", "mb", "bp", "br", "t", "to", "z", "one", "rb", "n", "p", "be", "u"], "k": ["an", "ka", "kl", "ke", "kr", "kn", "it", "wk", "w", "kind", "sk", "key", "kg", "aka", "kan", "kid", "l", "th", "ko", "kick", "c", "sky", "isk", "ik", "g", "ek", "kar", "v", "kt", "ar", "ku", "y", "ok", "ak", "j", "ta", "ack", "alpha", "kk", "kw", "sch", "q", "uk", "kj", "mk", "ac", "keep", "ki", "km", "ck", "zero", "tk", "t", "z", "dk", "ca", "n", "unk", "p", "ijk", "kh", "ikk"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.StringTokenizer;\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader in = new InputReader(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        TaskB solver = new TaskB();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class TaskB {\\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\\n        \tint n = in.nextInt();\\n        \tint a[] = new int [n];\\n        \tfor (int i = 0; i < a.length; i++) {\\n        \t\ta[i] = in.nextInt();\\n        \t}\\n        \t\\n        \tint num = 0;\\n        \tboolean flag = true;\\n        \twhile (flag) {\\n        \t\tflag = false;\\n        \t\tfor (int i = a.length - 1; i > 0; i --) {\\n        \t\t\tif (a[i] < a[i-1]) {\\n        \t\t\t\tint t = a[i];\\n        \t\t\t\ta[i] = a[i-1];\\n        \t\t\t\ta[i-1] = t;\\n        \t\t\t\tflag = true;\\n        \t\t\t\tnum += 1;\\n        \t\t\t}\\n        \t\t}\\n        \t}\\n        \t\\n        \tString s = new String();\\n        \tfor (int i = 0; i < a.length; i++) {\\n        \t\ts = s.concat(Integer.toString(a[i]));\\n        \t\tif (i + 1 != a.length) s = s.concat(\" \");\\n        \t}\\n        \t\\n        \tout.println(s);\\n        \tout.println(num);\\n        }\\n    }\\n\\n    static class InputReader {\\n        public BufferedReader reader;\\n        public StringTokenizer tokenizer;\\n\\n        public InputReader(InputStream stream) {\\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\\n            tokenizer = null;\\n        }\\n\\n        public String next() {\\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n                try {\\n                    tokenizer = new StringTokenizer(reader.readLine());\\n                } catch (IOException e) {\\n                    throw new RuntimeException(e);\\n                }\\n            }\\n            return tokenizer.nextToken();\\n        }\\n\\n        public int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n    }\\n}", "target": "170", "substitutes": {"inputStream": ["inputForm", "audioSteam", " inputSteam", "currentSteam", "audiostream", "inputFile", "outputStreamer", "outputFile", "inputSteam", " inputForm", "connectionStream", "connectionFile", "connectionForm", "inputstream", "audioStreamer", "currentstream", "audioStream", "currentStream", "outputstream", "outputForm", "outputSteam", " inputFile", "connectionSteam", "currentStreamer", "inputStreamer"], "outputStream": ["displaySteam", "OutputForm", "displaystream", "inputSteam", "displayPort", "OutputStream", "outSteam", "outputPoint", "inputstream", "OutputSteam", "displayPoint", "displayForm", "OutputPoint", "outStream", " outputSteam", " outputForm", "outputPort", "outstream", "outputstream", "outputForm", "outputSteam", "displayStream", " outputPoint", "inputPort", "outPort"], "in": [" din", "old", "en", "add", "In", "iter", "null", "it", "up", "local", "din", "file", "ro", "source", "from", "rin", "mm", "mc", "run", "re", "l", "sum", "ins", "lin", "rt", "context", "bin", "doc", "conf", "get", "inc", "lo", "sin", "r", "mi", "or", "ini", "err", "current", "on", "io", "h", "win", "ind", "al", "IN", "init", "log", "info", "output", "con", "gin", "isin", "is", "serv", "input", "ex", "nin", "inn", "inf", "inner", "er", "inside", "ic", "cin", "ri"], "out": ["outer", "report", "list", "at", "ch", "obj", "null", "it", "console", "tmp", "set", "w", "file", "aos", "all", "gen", "o", "pool", "run", "Out", "table", "user", "flush", "group", "b", "sum", "by", "c", "this", "r", "nt", "end", "v", "co", "sys", "screen", "err", "name", "io", "res", "print", "log", "gc", "write", "OUT", "ou", "output", "os", "cmd", "con", "to", "writer", "ex", "net", "txt", "client", "inner", "p", "outs"], "solver": ["Solver", " solution", "solution", "resolve", "sol", " solve", "resolution", "sumer", "resol", "Solve", "Sol", "solve", "resumer", "Solution", " sumer", " sol", "Sumer", "resolver"], "testNumber": [" attemptNumbers", " testNumbers", "testCount", "testNumbers", " attemptNo", " attemptCount", "TestNumber", "TestCount", "TestNo", "testNo", " attemptNumber", " testNo", " testCount", "TestNumbers"], "n": ["nb", "nn", "nz", "w", "ll", "o", "l", "np", "b", "k", "ns", "pi", "c", "d", "nt", "nm", "v", "no", "ng", "j", "number", "sn", "ni", "init", "m", "nu", "nl", "ne", "nan", "na", "cn", "net", "N", "p"], "a": ["an", "la", "ba", "ab", "eas", "parts", "da", "at", "ea", "list", "au", "e", "set", "cache", "all", "aka", "aaa", "b", "changes", "aux", "area", "c", "am", "A", "era", "window", "act", "v", "ar", "mod", "y", "ia", "ma", "ta", "h", "j", "ao", "alpha", "ac", "ae", "app", "m", "index", "ata", "zero", "info", "ga", "oa", "aa", "sta", "att", "na", "as", "array", "z", "fa", "sa", "ca", "p", "button", "arr", "u"], "i": ["multi", "list", "si", "ip", "chain", "zi", "di", "my", "point", "ini", "err", "me", "iy", "info", "hi", "p", "phi", "it", "level", "ie", "status", "o", "qi", "x", "y", "uri", "q", "init", "index", "ii", "gi", "us", "cli", "ji", "ic", "ri", "fire", "bi", "iu", "ei", "g", "j", "io", "ni", "I", "ind", "remote", "ij", "is", "li", "ui", "client", "ix", "ti", "ai", "xi", "pi", "mi", "ity", "ci", "oi", "id", "f", "iq", "m", "ki", "batch", "ims", "fi", "im", "u"], "num": ["nb", "result", "en", "add", "multi", "total", "nn", "um", "msg", "cum", "coord", "b", "np", "sum", "th", "x", "common", "nr", "str", "draw", "nm", "no", "NUM", "id", "sim", "j", "conv", "number", "nom", "m", "nu", "index", "mon", "good", "sam", "zero", "Num", "con", "na", "count", "net", "su", "temp", "p", "nam", "mn"], "flag": ["field", "limit", "Flag", "bit", "bool", "stay", "bug", "event", "prop", "list", "sync", "loop", "true", "level", "set", "flags", "file", "status", "func", "group", "card", "l", "compl", "ld", "failed", "tag", "fail", "lock", "line", "ret", "mask", "f", "needed", "train", "FLAG", "lag", "stage", "hold", "leaf", "nl", "cond", "cloud", "log", "buffer", "sort", "cmd", "cf", "continue", "used", "count", "store", "button", "wait", "ground"], "t": ["tt", "qt", "dt", "ot", "at", "ti", "vt", "e", "it", "pt", "T", "et", "o", "l", "tr", "k", "rt", "x", "c", "ts", "v", "type", "y", "j", "ta", "tf", "h", "td", "gt", "f", "st", "m", "tm", "tu", "te", "tc", "z", "txt", "temp", "p"], "s": ["ms", "des", "S", "ws", "sb", "set", "ds", "w", "stats", "csv", "gets", "series", "l", "b", "ns", "strings", "tes", "c", "ts", "js", "str", "g", "r", "v", "ats", "y", "ends", "its", "conv", "h", "gs", "sg", "st", "ls", "fs", "m", "ss", "abs", "sq", "qs", "cs", "os", "us", "se", "ims", "ps", "is", "less", "sql", "ings", "sv", "rs", "hs", "sp"], "reader": ["Reader", "iter", "read", "linger", "mr", "term", "file", "driver", "master", "user", "dr", "pull", "dd", "row", "book", "worker", "r", "iterator", " readers", "oder", "ner", "lock", "rl", "handler", " read", "parser", "runner", "rer", "length", "rc", "timer", "rx", "view", "buffer", "loader", "wrapper", "writer", "rr", "input", "redo", "inner", "er", "rar", "ro"], "tokenizer": ["tokeniter", "okenifier", "terminiter", "tokenisher", "tokenizers", "okenize", "wordner", "okenizer", " tokenifier", " tokenize", " tokener", " tokenater", "worder", "okenizers", "serializer", " tokenization", "normalifier", "terminater", "serialer", "tokenger", "okenener", "normalener", "tokenifier", "wordizer", "tokenener", "wordater", "Tokenifier", "tokenize", " tokenger", "normalizer", "terminger", "terminizer", " tokenizers", "Tokenizer", "okenisher", " tokeniter", "Tokenizers", " tokenener", "serialization", "normalization", " tokenner", "okeniter", " tokenisher", "Tokenize", "terminization", "okenization", "tokenization", "terminer", "tokener", "tokenater", "okenger", "tokenner", "terminner", "okener", "serialisher"], "stream": ["loop", "console", "content", "level", "poll", "file", "read", "pool", "source", "test", "ream", "channel", "host", "row", "context", "this", "window", "iterator", "sys", "io", "length", "body", "buffer", "system", "loader", "down", "output", "wrapper", "path", "data", "pipe", "input", "message", "sample", "Stream", "history"]}}
{"code": "import java.util.Scanner;\\nimport java.util.ArrayList;\\n\\npublic class Main{\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tArrayList<Double> data = new ArrayList<>();\\n\t\twhile (true) {\\n\t\t\tint n = sc.nextInt();\\n\t\t\tif (n == 0) {\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tint sum = 0;\\n\t\t\tint[] s = new int[n];\\n\t\t\tdouble m;\\n\t\t\tdouble a;\\n\t\t\tdouble sigma = 0;\\n\t\t\tfor (int i = 0; i < n; i++) {\\n\t\t\t\ts[i] = sc.nextInt();\\n\t\t\t\tsum += s[i];\\n\t\t\t}\\n\t\t\tm = (double) sum / n;\\n\t\t\tfor (int i = 0; i < n; i++) {\\n\t\t\t\tsigma += Math.pow(s[i] - m, 2) / n;\\n\t\t\t}\\n\t\t\ta = Math.sqrt(sigma);\\n\t\t\tdata.add(a);\\n\t\t}\\n\t\tfor (int i = 0; i < data.size(); i++) {\\n\t\t\tSystem.out.printf(\"%f%n\", data.get(i));\\n\t\t}\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "203", "substitutes": {"sc": ["irc", "ch", "sync", "sw", "cle", "asc", "mc", "osc", "ctrl", "Sync", "anc", "cr", "Sc", "arc", "sci", "c", "ctx", "bc", "cc", "sys", "fc", "co", "ng", "SC", "lc", "rc", "usc", "sec", "sch", "nl", "gc", "cl", "ss", "scan", "pb", "nc", "sq", "cs", "tc", "system", "ck", "se", "pc", "ctl", "isc", "desc", "syn", "sh", "scl", "capt", "sv", "sp", "esc"], "data": ["result", "reports", "pieces", "des", "size", "items", "da", "results", "space", "list", "total", "users", "ms", "available", "cache", "set", "stats", "next", "all", "images", "series", "DATA", "table", "p", "text", "def", "rel", "d", "this", "window", "multiple", "draw", "no", "dat", "default", "done", "error", "related", "good", "values", "log", "ata", "mu", "batch", "times", "info", "zero", "output", "raw", "valid", "used", "array", "div", " DATA", "map", "average"], "n": ["nb", "an", "size", "nn", "names", "nw", "nor", "network", "all", "ll", "o", "l", "np", "k", "ns", "x", "c", "d", "un", "g", "r", "nt", "v", "no", "nm", "y", "ng", "on", "name", "j", "number", "sn", "f", "h", "q", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "gn", "p", "note", "mn"], "sum": ["summary", "size", "ms", "si", "total", "vol", "set", "sm", "um", "empty", "all", "cum", " summed", "mm", "d", "med", "g", "v", "mass", "sim", "sat", "ass", "Sum", "hash", "ul", "sam", "mu", "info", "us", "scale", "na", "num", "count", "sa", "su", "mem", "temp", "mean", "average", "history", "sym", "u"], "s": ["ms", "si", "S", "sts", "sb", "ds", "stats", "als", "l", "services", "ins", "ns", "views", "bs", "c", "ts", "js", "vs", "ats", "its", "xs", "gs", "fs", "ls", "sl", "ss", "sq", "cs", "qs", "bis", "spec", "ims", "os", "is", "p", "sv", "rs", "hs", "sp"], "m": ["an", "ms", "mat", "md", "perm", "mt", "w", "sm", "cm", "um", "mc", "mm", "l", "mag", "c", "am", "d", "g", "r", "mi", "pm", "v", "M", "ma", "f", "mo", "tm", "mu", "vm", "dm", "t", "gm", "em", "p", "mean", "im"], "a": ["an", "la", "ba", "da", "ea", "at", "au", "w", "o", "aaa", "b", "aux", "area", "p", "am", "d", "A", "g", "act", "ar", "ia", "ta", "ma", "f", "ao", "va", "ac", "ae", "ha", "ga", "aa", "as", "sta", "pa", "fa", "sa", "ca", "xa", "u"], "sigma": ["ssigm", "alsma", "Samba", "selta", "tsigma", "sma", "asselta", "Selta", "sigm", "ssma", "assigm", "tsma", " sig", "Sma", "Sigma", "Sigm", "alsig", "alsigma", "tsamba", "ssig", "tsigm", " sigm", "assigma", "Sig", " samba", "samba", "sig", "ssigma", " sma", "alsigm", "assig", " selta"], "i": ["multi", "si", "at", "ip", "set", "PI", "chain", "zi", "di", "ion", "point", "ini", "iy", "me", "info", "ski", "hi", "phi", "it", "ie", "status", "o", "qi", "ik", "y", "sim", "uri", "q", "init", "ami", "ori", "gi", "ii", "us", "cli", "ji", "ic", "ri", "bi", "iu", "gu", "key", "et", "series", "progress", "ei", "this", "j", "io", "I", "ind", "print", "ij", "remote", "li", "ex", "ui", "client", "ix", "yi", "ti", "ai", "xi", "pi", "mi", "ci", "id", "oi", "iq", "ki", "\u0438", "batch", "ims", "fi", "im", "u", "wi"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint A = Integer.parseInt(sc.next());\\n\t\tint B = Integer.parseInt(sc.next());\\n\t\tint C = Integer.parseInt(sc.next());\\n\t\tint D = Integer.parseInt(sc.next());\\n\t\tsc.close();\\n\\n\t\twhile (true) {\\n\t\t\tC -= B;\\n\t\t\tif (C <= 0) {\\n\t\t\t\tSystem.out.println(\"Yes\");\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tA -= D;\\n\t\t\tif (A <= 0) {\\n\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\\n\t}\\n\\n}", "target": "186", "substitutes": {"sc": ["irc", "ch", "sync", "sw", "cle", "asc", "mc", "osc", "cmp", "anc", "cr", "ec", "Sc", "ko", "arc", "c", "sub", "cgi", "inc", "ner", "bc", "cc", "sys", "fc", "SC", "lc", " Sc", "rc", "usc", "sec", "gc", "scan", "cl", "go", "nc", "system", "cs", "tc", "sq", "ck", "se", "pc", "ctl", "dc", "isc", "scl", "p", "sv", "sp", "esc"], "A": ["AB", "S", "At", "This", "BA", "T", "AF", "E", "EA", "U", "AC", "JA", "AI", "H", "Y", "As", "P", "HA", "AS", "AH", "V", "CA", "ASC", "SA", "ACC", "M", "AE", "And", "LA", "AR", "G", "I", "AA", "R", "IA", "GA", "AP", "L", "AU", "AM", "N", "API", "AN", "An"], "B": ["BG", "AB", "Bs", "BR", "BB", "BF", "J", "RB", "BA", "CB", "IB", "b", "VB", "Y", "MB", "Blue", "V", "Bi", "M", "BC", "NB", "I", "G", "BE", "BI", "R", "BS", "EB", "LB", "BL", "L", "Ab", "GB", "N", "DB", " b"], "C": ["CS", "EC", "CP", "S", "CT", "LC", "T", "CB", "CO", "E", "U", "CV", "Co", "H", "Y", "JC", "DC", "P", "CL", "c", "CA", "V", "M", "SC", "AR", "BC", "G", "I", "CC", "Cs", "R", "Count", "CD", "L", "F", "Q", "N", "O", "CI", "CM"], "D": ["DP", "S", "DS", "T", "E", "DR", "DK", "DD", "U", "DA", "DE", "Y", "Z", "P", "DC", "d", "DX", "DM", "M", "Dr", "DO", "G", "Red", "DL", "R", "DF", "DN", "L", "F", "Ds", "Q", "N", "Do", "O", "DB", "DI"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String [] args){\\n        Scanner sc =new Scanner(System.in);\\n        int A = sc.nextInt();\\n        int B = sc.nextInt();\\n        int ans =0;\\n        for (Integer i =A;i<=B;i++){\\n            String[] s = i.toString().split(\"\");\\n            if (s[0].equals(s[4]) && s[1].equals(s[3])){\\n                ans++;\\n            }\\n        }\\n        System.out.println(ans);\\n    }\\n}", "target": "104", "substitutes": {"sc": ["ch", "sync", "sw", "asc", "mc", "osc", "anc", "cr", "Sc", "out", "c", "inc", "g", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "exec", "nl", "gc", "scan", "cl", "ss", "nc", "system", "cs", "tc", "ck", "sq", "se", "pc", "dc", "acc", "txt", "isc", "scl", "sh", "sv", "Scan", "sp", "esc"], "A": ["AY", "AB", "S", "NA", "AT", "This", "BA", "AF", "AC", "AGE", "As", "P", "AS", "RA", "AD", "CA", "SA", "AV", "ACC", "ACT", "X", "Alpha", "LA", "AR", "a", "I", "G", "AA", "R", "AL", "IA", "The", "AP", "L", "AU", "AST", "N", "API", "An", "ACA"], "B": ["S", "BR", "BU", "BB", "J", "BF", "D", "BA", "T", "b", "IB", "USB", "Y", "TB", "V", "BO", "M", "C", "BC", "WB", "NB", "I", "G", "BE", "BI", "OB", "R", "EB", "FB", "BL", "L", "F", "GB", "N", "DB"], "ans": ["an", "acs", "uns", "ars", "anks", "ms", "ents", "mas", "yes", "orts", "ds", "rans", "flags", "aps", "ports", "ann", "als", "ons", "ins", "ns", "AN", "aus", "ros", "vals", "ks", " scans", "pan", "arts", "lines", "ats", "nets", "rows", "ants", "eps", "xs", "ays", "posts", "ANS", "can", "ads", "ls", "orders", "scan", "lan", "cs", "checks", " spans", "offs", "amps", "ens", "rs", "outs", "ids", "eds"], "i": ["bi", "in", "ish", "multi", "ms", "si", "ti", "iter", "e", "ip", "it", "ai", "iu", "ie", "o", "l", "xi", "b", "di", "pi", "qi", "x", "c", "ei", "ik", "mi", "v", "ini", "ci", "oi", "sim", "j", "a", "I", "q", "ij", "m", "ki", "mu", "gi", "ii", "is", "li", "hi", "ui", "cli", "n", "ix", "p", "ic", "phi", "u"], "s": ["ms", "parts", "des", "S", "ws", "sts", "sb", "set", "ds", "l", "ns", "bs", "details", "tes", "ts", "cons", "js", "str", "g", "ats", "a", "h", "xs", "res", "els", "eps", "q", "gs", "string", "ls", "sl", "ss", "abs", "sq", "qs", "bis", "less", "se", "ps", "is", "sql", "sv", "rs", "hs", "sp"]}}
{"code": "import java.util.*;\\n\\nclass Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        \\n        \\n        List<Long> number = new ArrayList<Long>(){\\n            {\\n                add(Long.parseLong(sc.next()));\\n                add(Long.parseLong(sc.next()));\\n                add(Long.parseLong(sc.next()));\\n            }\\n        };\\n        \\n        Collections.sort(number, Comparator.reverseOrder());\\n        \\n        long K = Long.parseLong(sc.next());\\n        \\n        for(long i=0; i<K; i++){\\n            number.set(0, number.get(0)*2);\\n        }\\n        \\n        System.out.println(number.get(0) + number.get(1) + number.get(2));\\n    }\\n}", "target": "201", "substitutes": {"sc": ["irc", " scr", "ch", "sb", "sync", "sw", "src", "mc", "scrib", "osc", "func", "unc", "anc", "cr", "Sc", "sel", "sci", "c", "ctx", "cgi", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "sec", "gc", "cl", "scan", "uc", "pb", "nc", "sq", "cs", "tc", "pc", "ctl", "dc", "isc", "capt", "desc", "scl", "sv", "sp", "esc"], "number": ["list", "total", "random", "position", "voice", "clock", "counter", "password", "no", "span", "Number", "length", "vote", "hash", "money", "normal", "buffer", "function", "directory", "n", "node", "result", "block", "group", "amount", "correct", "nr", "name", "collection", "reference", "alph", "word", "umber", "object", "to", "one", "serial", "nb", "record", "hello", "information", "console", "next", "numbered", "square", "news", "sn", "currency", "zero", "na", "video", "control", "sequence", "maximum", "note", " Number", "event", "integer", "umbers", "nn", "check", "work", "relation", "token", "NUM", "production", "prototype", "operator", "string", "document", "initial", "num", "code", "message", "database"], "K": ["S", "J", "FK", "KR", "T", "Key", "KK", "Kind", "KS", "PK", "k", "KI", "Gate", "Y", "H", "Z", "P", "KEY", "V", "M", "KA", "UK", "X", "C", "OK", "G", "I", "NK", "R", "SK", "KC", "L", "B", "F", "Q", "VK", "N"], "i": ["bi", "multi", "si", "ti", "iter", "ai", "it", "iu", "gu", "ie", "o", "l", "b", "k", "di", "pi", "qi", "x", "c", "mi", "v", "ini", "ci", "y", "id", "j", "io", "a", "I", "ind", "q", "me", "m", "index", "\u0438", "gi", "ii", "us", "t", "li", "z", "ui", "cli", "n", "sql", "ix", "ic", "phi", "u"]}}
{"code": "import java.util.*;\\nimport static java.lang.System.*;\\nimport java.io.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tFastScanner sc = new FastScanner();\\n\t\tPrintWriter out = new PrintWriter(System.out);\\n\t\tint a = sc.nextInt();\\n\t\tint b = sc.nextInt();\\n\t\tint t = sc.nextInt();\\n\t\tint ans = t / a * b;\\n\t\tout.println(ans);\\n\t\t\\n\t\tout.close();\\n\t}\\n\\nstatic class FastScanner {\\n    private final InputStream in = System.in;\\n    private final byte[] buffer = new byte[1024];\\n    private int ptr = 0;\\n    private int buflen = 0;\\n    private boolean hasNextByte() {\\n        if (ptr < buflen) {\\n            return true;\\n        }else{\\n            ptr = 0;\\n            try {\\n                buflen = in.read(buffer);\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            if (buflen <= 0) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\\n    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\\n    public String next() {\\n        if (!hasNext()) throw new NoSuchElementException();\\n        StringBuilder sb = new StringBuilder();\\n        int b = readByte();\\n        while(isPrintableChar(b)) {\\n            sb.appendCodePoint(b);\\n            b = readByte();\\n        }\\n        return sb.toString();\\n    }\\n    public long nextLong() {\\n        if (!hasNext()) throw new NoSuchElementException();\\n        long n = 0;\\n        boolean minus = false;\\n        int b = readByte();\\n        if (b == '-') {\\n            minus = true;\\n            b = readByte();\\n        }\\n        if (b < '0' || '9' < b) {\\n            throw new NumberFormatException();\\n        }\\n        while(true){\\n            if ('0' <= b && b <= '9') {\\n                n *= 10;\\n                n += b - '0';\\n            }else if(b == -1 || !isPrintableChar(b)){\\n                return minus ? -n : n;\\n            }else{\\n                throw new NumberFormatException();\\n            }\\n            b = readByte();\\n        }\\n    }\\n    public int nextInt() {\\n        long nl = nextLong();\\n        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\\n        return (int) nl;\\n    }\\n    public double nextDouble() { return Double.parseDouble(next());}\\n}\\n}", "target": "4", "substitutes": {"sc": ["irc", "sy", "ch", "sync", "asc", "sm", "mc", "osc", "ctrl", "cr", "ec", "Sc", "inc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "gc", "cl", "scan", "nc", "sq", "tc", "cs", "pc", "ctl", "ser", "isc", "syn", "desc", "scl", "sh", "sv", "sp", "esc"], "out": ["result", "outer", "list", "ot", "obj", "ch", "at", "null", "it", "console", "cache", "w", "file", "aos", "put", "o", "Out", "table", "outs", "println", "window", "r", "nt", "conn", "sys", "v", "screen", "err", "error", "io", "res", " Out", "conv", "print", "log", "write", "OUT", "cs", "output", "os", "con", "writer", "serv", "input", "net", "txt", "client", "p", "ou"], "a": ["an", "ba", "ab", "ea", "ai", "au", "e", "w", "l", "aj", "area", "x", "i", "am", "A", "r", "ar", "ia", "ta", "ma", "ao", "va", "ac", "ae", "m", "oa", "aa", "sta", "as", "na", "sa", "aq", "p", "al"], "b": ["bb", "l", "gb", "bo", "bg", "bf", "bt", "cb", "ta", "mb", "br", "rb", "p", "ab", "fb", "ib", "buff", "o", "binary", "x", "i", "y", "back", "ble", "bis", "bp", "base", "B", "bound", "nb", "bi", "ba", "obj", "bu", "wb", "k", "db", "bin", "g", "r", "reb", "j", "emb", "beta", "pb", "be", "ch", "e", "w", "eb", "buf", "bs", "ob", "d", "bc", "v", "bar", "xb", "f", "body", "m", "z", "u"], "t": ["an", "tt", "ot", "at", "total", "e", "w", "T", "o", "l", "tr", "wt", "rt", "i", "ts", "d", "g", "r", "v", "y", "tp", "ta", "j", "h", "td", "f", "m", "tm", "tu", "te", "tc", "to", "z", "txt", "tg", "p"], "ans": ["an", "reads", "ms", "ents", "names", "s", "ds", "ens", "aps", "fts", "ann", "actions", "ins", "ns", "outs", "vals", "ks", "ts", "pan", "cons", "arts", "lines", "vs", "annot", "ats", "sets", "span", "ants", "xs", "terms", "ANS", "gs", "ls", "types", "times", "os", "nan", "as", "offs", "ings", "AN", "ints", "eds"], "in": ["en", "add", "In", "it", "null", "din", "read", "file", "from", "rin", "mm", "run", "l", "ins", "lin", "conf", "bin", "i", "get", "inc", "r", "or", "ini", "ar", "err", "on", "io", "f", "win", "ind", "ac", "IN", "init", "m", "info", "con", "to", "is", "nin", "input", "net", "inn", "inf", "inner", "ic", "cin"], "buffer": ["result", "scroll", "limit", "display", "buff", "iter", "bank", "available", "cache", "read", "phrase", "source", "engine", "variable", "face", "table", "buf", "pointer", "p", "binary", "row", "template", "password", "paste", "memory", "window", "library", "address", "screen", "bar", "reference", "length", "document", "command", "index", "view", "device", "batch", "stack", "Buffer", "output", "bone", "se", "page", "base", "stream", "message", "queue", "temp", "mem", "database", "match", "sequence", "store", "button", "history"], "ptr": ["pointers", "fp", "esp", "pers", "obj", "iter", "pert", "tips", "pt", "ped", "src", "tmp", "next", "expr", "tr", "np", "req", "dep", "dr", "pad", "th", "pointer", "pi", "loc", "prime", "seek", "ctx", "jp", "ts", "rel", "addr", "Ptr", "ref", "cell", "address", "proc", "tp", "ta", "td", "pos", "rob", "inter", "ind", "inters", "index", "pend", "bp", "pc", "br", "offset", "adr", "tip", "ps", "pl", "pr", "ctr", "p", "sp", "arr"], "buflen": ["buselens", "builens", "buplEN", "bupllen", "builatten", " buflatten", "bullen", "buflain", "bufleng", " buplim", " bupllen", "bufilens", "bullatten", "bufrEN", "buflens", "bullens", "cuglen", "bufrlen", "buplen", "cuglatten", "bufilatten", " buflength", "buplens", "bufilain", "buflength", "bufilen", "bugln", "cuflen", " bullatten", "cugln", " bufleng", "buselatten", "buglens", "bufilength", " buplens", " bullen", " buflEN", "buflatten", " bufllen", "buFlen", "buglen", "buglatten", "buFLength", " bulleng", " buflens", " buplEN", "buFLain", "cufln", "bufln", "bufllen", "buFLen", "buflim", "buplim", "bufilim", "bulln", "cuflens", "buFLim", "bufiln", " buplain", "builen", "buFllen", "cuflatten", "buseleng", "buflEN", " buflain", " buflim", "bufren", "bufrens", " bullens", "buselen", " buplength", "bulleng", "buplength", "buFlEN", "buFlens", "cuglens", " buplen", "buplain", "buileng"], "c": ["cp", "ch", "e", "cod", "cm", "l", "k", "cd", "p", "char", "x", "\u00e7", "d", "bc", "fc", "v", "C", "cont", "cc", "y", "cb", "ci", "f", "lc", "rc", "col", "ac", "m", "category", "uc", "tc", "cf", "cs", "etc", "con", "dc", "z", "count", "code", "ce", "ct", "ca", "cu", "enc", "unc", "dec", "u"], "sb": ["nb", "bsp", "abb", "bj", "bb", "ib", "buff", "sf", "zb", "ub", "RB", "wb", "erb", "sbm", "eb", "lb", "gob", "bs", "gb", "ob", "db", "lp", "bg", "kb", "bh", "bf", "bt", "SB", "cb", "xb", "rob", "sg", "pb", "sq", "ssl", "mb", "ssh", "bp", "rb", "sa", "stab", "sv", "sp"], "n": ["nb", "nn", "e", "w", "l", "ns", "x", "i", " l", "d", "nr", "r", "nt", "no", "tn", "j", "f", "sn", "nu", " N", "ln", "ne", "z", "count", "N", "p"], "minus": ["mobile", "tie", "neg", "odd", "some", "pot", "prime", "butt", "doesn", "zon", "meta", "lo", "cos", "danger", "dec", "nos", "no", "mod", "min", "mini", "de", "little", "seconds", "nom", "beta", "digit", "mon", "plus", "bra", "zero", "bis", "two", "dot", "leading", "video", "div", "negative", "small", "second"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.StringTokenizer;\\nimport java.io.IOException;\\nimport java.io.BufferedReader;\\nimport java.util.Collections;\\nimport java.io.InputStreamReader;\\nimport java.util.ArrayList;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n *\\n * @author Jaynil\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader in = new InputReader(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        CDivideTheProblems solver = new CDivideTheProblems();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class CDivideTheProblems {\\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\\n            int n = in.nextInt();\\n            ArrayList<Integer> a = new ArrayList<>();\\n            for (int i = 0; i < n; i++) a.add(in.nextInt());\\n            if (n % 2 == 1) {\\n                out.println(0);\\n                return;\\n            }\\n            Collections.sort(a);\\n            out.println(a.get(n / 2) - a.get(n / 2 - 1));\\n        }\\n\\n    }\\n\\n    static class InputReader {\\n        public BufferedReader reader;\\n        public StringTokenizer tokenizer;\\n\\n        public InputReader(InputStream stream) {\\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\\n            tokenizer = null;\\n        }\\n\\n        public String next() {\\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n                try {\\n                    tokenizer = new StringTokenizer(reader.readLine());\\n                } catch (IOException e) {\\n                    throw new RuntimeException(e);\\n                }\\n            }\\n            return tokenizer.nextToken();\\n        }\\n\\n        public int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n    }\\n}\\n\\n", "target": "119", "substitutes": {"inputStream": ["sourceSocket", "sourceSteam", "sourceStream", "activeSteam", "openStream", " inputSteam", "outputStreamer", "inputSteam", "openSteam", "activeStream", "helloStream", "helloSocket", "openSocket", " inputReader", "helloSteam", "outputSocket", "activeStreamer", "openReader", "sourceReader", "inputReader", "inputSocket", " inputSocket", "outputSteam", "activeSocket", "inputStreamer", "helloStreamer"], "outputStream": [" outputNow", "currentSteam", "outputStreamer", "outWriter", "inputSteam", "outputNow", "printStream", "outSteam", "connectionStream", "connectionstream", "inputstream", "printWriter", " outputWriter", "outNow", "currentstream", "printSteam", "outStream", "currentStream", "printNow", " outputSteam", "outputstream", "outputSteam", "connectionStreamer", "connectionSteam", "currentStreamer", "inputStreamer", "outputWriter"], "in": ["add", "ain", "In", "iter", "null", "it", "up", "pp", "local", "din", "file", "source", "from", "rin", "mm", "re", "run", "mc", "l", "ins", "rt", "by", "bin", "context", "doc", "c", "el", "get", "kin", "form", "inc", "lo", "sin", "r", "mi", "ini", "co", "err", "current", "config", "on", "io", "ind", "al", "conf", "IN", "init", "log", "per", "con", "t", "gin", "is", "isin", "input", "net", "inn", "inf", "inner", "er", "inside", "ic", "cin"], "out": ["manager", "outer", "report", "list", "OU", "at", "json", "null", "it", "s", "tmp", "set", "cache", "w", "console", "aos", "pool", "all", "o", "group", "Out", "table", "user", "l", "flush", "rt", "this", "gr", "or", "nt", "end", "v", "sys", "co", "screen", "err", "current", "name", "io", "res", "conv", "print", "log", "gc", "stable", "write", "OUT", "ou", "output", "os", "t", "to", "writer", "ex", "net", "client", "inner", "p", "er", "outs"], "solver": ["Solver", " solved", " solution", "Sorter", "solution", "insolution", "resolve", "resolution", " solve", " sorter", "Solve", "solve", "insolved", "Solution", "solved", "sorter", "insorter", "resolver", "resorter", "resolved", "insolver"], "testNumber": ["caseNum", "testNum", "testnumber", "casenumber", " testNum", "TestNumber", "TestNum", "TestNo", "caseNo", "caseNumber", "Testnumber", "testNo", " testNo", " testnumber"], "n": ["nb", "en", "size", "nn", "names", "nw", "nor", "w", "network", "all", "ll", "none", "o", "l", "np", "u", "ns", "d", "un", "nr", "g", "norm", "nt", "v", "no", "ng", "j", "number", "sn", "ni", "shape", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "dn", "N", "gn", "p", "note", "mn"], "a": ["an", "la", "ba", "ab", "eas", "parts", "da", "at", "ea", "au", "e", "up", "history", "aos", "all", "o", "actions", "aaa", "b", "changes", "aux", "area", "el", "am", "A", "era", "g", "act", "ia", "ma", "ao", "active", "ac", "ae", "index", "ata", "abs", "ga", "oa", "aa", "as", "ova", "to", "na", "apa", "sta", "sa", "ca", "ed", "p", "ava", "u"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "gu", "ie", "iu", "chain", "di", "pi", "qi", "x", "my", "mi", "ini", "ci", "y", "id", "sim", "j", "uri", "iq", "I", "ind", "q", "me", "m", "batch", "gi", "ii", "us", "is", "li", "ex", "hi", "ui", "cli", "ix", "p", "im", "ic", "phi", "u"], "reader": ["Reader", "controller", "iter", "older", "read", "mr", "linger", "term", "builder", "file", "driver", "user", "dr", "keeper", "row", "context", "worker", "window", "memory", "r", "iterator", "ner", "oder", "handler", "finder", "liner", "parser", "runner", "rer", "rc", "timer", "rx", "handle", " writer", "buffer", "loader", "wrapper", "writer", "rr", "input", "client", "redo", "inner", "er", "rar", "ro"], "tokenizer": ["Tokenator", " tokenifer", "okenifier", "serialize", "Tokenener", "okenize", "kinener", "okenator", "okenizer", " tokenifier", " tokenzer", "Tokenner", "serializer", "normalifier", " tokenator", "optimzer", "okenener", "Tokenization", "normalener", "tokenifier", "okenifer", "terminifer", "tokenener", "serialifier", "normalize", "Tokenifier", "tokenize", "optimizer", "tokenoser", "kinize", "serialzer", "normalizer", "terminizer", "Tokenoser", "Tokenizer", "tokenzer", "tokenator", " tokenoser", "Tokenzer", "optimner", "serialization", " tokenener", " tokenner", "kinizer", "kinifier", "optimifier", "Tokenize", "okenization", "tokenization", "serialator", "terminifier", "terminener", "tokenner", "tokenifer", "okenoser"], "stream": ["loop", "open", "null", "console", "level", "zip", "file", "test", "pool", "phrase", "source", "ream", "channel", "row", "form", "impl", "context", "this", "window", "iterator", "v", "collection", "io", "resource", "length", "body", "view", "log", "wrapper", "stack", "down", "output", "path", "data", "pipe", "input", "message", "sample", "Stream", "history"]}}
{"code": "import java.security.cert.CollectionCertStoreParameters;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(String args[]) {\\n\\n        // \u5165\u529b\\n        Scanner sc = new Scanner(System.in);\\n        int x = Integer.parseInt(sc.next());\\n        sc.close();\\n\\n        // \u4e3b\u51e6\u7406\\n        int maxRoot = (int) Math.sqrt(1000);\\n        List<Integer> list = new ArrayList<>();\\n        list.add(1);\\n        for (int i = 2; i <= maxRoot; i++) {\\n            int num = i * i;\\n            while (num <= 1000) {\\n                list.add(num);\\n                num *= i;\\n            }\\n        }\\n        Collections.sort(list);\\n\\n        int result = 0;\\n        for (int num : list) {\\n            if (x < num) {\\n                break;\\n            }\\n            result = num;\\n        }\\n\\n        // \u51fa\u529b\\n        System.out.println(result);\\n    }\\n}\\n", "target": "143", "substitutes": {}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tMain mainObj = new Main();\\n\t\tmainObj.solve();\\n\t}\\n\\n\tpublic void solve() throws IOException {\\n\t\tFastScanner fs = new FastScanner();\\n\t\t\\n\t\tString first = fs.next();\\n\t\tString second = fs.next();\\n\t\t\\n\t\tint firstNum = fs.nextInt();\\n\t\tint secondNum = fs.nextInt();\\n\t\t\\n\t\tString thrown = fs.next();\\n\t\t\\n\t\tif(thrown.equals(first)) {\\n\t\t\tfirstNum--;\\n\t\t}else {\\n\t\t\tsecondNum--;\\n\t\t}\\n\t\t\\n\t\t\\n\t\tSystem.out.println(String.format(\"%d %d\", firstNum, secondNum));\\n\t}\\n\\n\t\\n\\n\tpublic class FastScanner {\\n\\n\t\tBufferedReader reader;\\n\t\tprivate StringTokenizer st;\\n\\n\t\tpublic FastScanner() {\\n\t\t\tst = null;\\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in));\\n\t\t}\\n\\n\t\tpublic String next() throws IOException {\\n\t\t\tif (st == null || !st.hasMoreElements()) {\\n\t\t\t\tst = new StringTokenizer(reader.readLine());\\n\t\t\t}\\n\t\t\treturn st.nextToken();\\n\t\t}\\n\\n\t\tpublic String nextLine() throws IOException {\\n\t\t\tst = null;\\n\t\t\tString readLine = null;\\n\t\t\treadLine = reader.readLine();\\n\t\t\treturn readLine;\\n\t\t}\\n\\n\t\tpublic int nextInt() throws NumberFormatException, IOException {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n\\n\t\tpublic long nextLong() throws NumberFormatException, IOException {\\n\t\t\treturn Long.parseLong(next());\\n\t\t}\\n\\n\t\tpublic int[] nextIntArr(int n) throws NumberFormatException, IOException {\\n\t\t\tint[] retArr = new int[n];\\n\t\t\tfor (int i = 0; i < n; i++) {\\n\t\t\t\tretArr[i] = nextInt();\\n\t\t\t}\\n\t\t\treturn retArr;\\n\t\t}\\n\\n\t\tpublic long[] nextLongArr(int n) throws NumberFormatException, IOException {\\n\t\t\tlong[] retArr = new long[n];\\n\t\t\tfor (int i = 0; i < n; i++) {\\n\t\t\t\tretArr[i] = nextLong();\\n\t\t\t}\\n\t\t\treturn retArr;\\n\t\t}\\n\\n\t\tpublic void close() throws IOException {\\n\t\t\treader.close();\\n\t\t}\\n\t}\\n\\n}\\n", "target": "155", "substitutes": {"mainObj": ["mainObject", "topObject", " MainMan", " mainMan", "mainMan", "mainOb", "Mainobj", "topOb", " Mainobj", "mainobj", " mainOb", " MainObject", "MainObject", "MainOb", " mainobj", "MainObj", " MainObj", " mainObject", "topobj", "MainMan", "topObj"], "fs": ["uts", "ms", "fb", "ws", "sts", "sf", "fd", "stats", "ews", "fts", "obs", "jas", "ags", "fps", "uds", "bs", "rs", "faces", "ks", "ts", "iffs", "js", "vs", "rys", "lbs", "bf", "Fs", "sys", "fc", "ats", "lf", "f", "ours", "xs", "inters", "gs", "ads", "ls", "fm", "fw", "ss", "eks", "files", "qs", "cf", "cs", "ims", "hz", "FS", "amps", "irs", "ashes", "hs", "gets"], "first": ["part", " First", "First", "success", "last", "then", "test", "prev", "next", "single", "master", "th", "lower", "prefix", "before", "primary", "start", "current", "default", "name", "top", "basic", "title", "string", "index", "initial", "username", "front", "head", "full", " FIRST", "header", "third", "small"], "second": ["fourth", "sb", "last", "set", "test", "fr", "lower", "prime", "secret", "sc", "seconds", "sec", "south", "follow", "initial", "another", "secondary", "bis", "six", "server", "se", "two", "other", "nil", "Second"], "firstNum": ["startConn", "startNo", "startNum", "minNum", "intNow", "startDiv", "familyNum", "intNUM", "intNum", " firstNumber", "firstNow", "familyNo", "firstConn", " firstConn", "topNUM", "stOrd", "topConn", "firstDiv", " firstDiv", "intOrd", "minConn", "minNUM", " firstOrd", "stNum", "firstNo", "topNumber", "minNumber", "firstOrd", " firstNo", "firstNUM", " firstNow", "firstNumber", " firstNUM", "familyConn", "topNum", "familyDiv", "stNUM", "stNow"], "secondNum": ["secondMon", "secondaryNum", "secondaryLen", "thirdDist", "fourthSum", "secondThu", "secondaryDone", "secondVal", "secondSum", "secNum", "thirdNum", "fourthVal", "secondaryVal", "fourthMem", "secondOrd", "thirdMon", "fourthNum", "thirdOrd", "secThu", " secondLen", "secondaryMon", " secondSum", " secondVal", "secondDone", "secondaryDist", "secondaryThu", "secondarySum", " secondMem", "secondDist", " secondThu", "secondLen", "secondaryOrd", "twoMon", "twoDist", "secondMem", "secLen", "twoNum", "twoOrd", "secDone", " secondDone", "secondaryMem"], "thrown": [" throw", " Throw", "rethrow", " Thorned", "throwing", "threth", "sthrown", "THrows", " thorned", "trrown", "THreth", "sthrow", "rethreth", "thorned", "THrow", "rethrown", " Throwing", "trreth", "rethrows", " Thrown", "trrow", "throw", "trrows", " throwing", "sthorned", "THrown", "sthrowing"], "reader": ["Reader", "std", "iter", "console", "aser", "tx", "read", "mr", "file", "fr", "driver", "tr", "rd", "dr", "dd", "rt", "row", "worker", "str", "ptr", "r", "iterator", "or", "nt", "ner", "rl", "handler", "ator", "parser", "rer", "runner", "rc", "ry", "rx", "lr", "buffer", "loader", "wrapper", "writer", "t", "rr", "data", "stream", "redo", "inner", "er", "rs", "rar", "ro"], "st": ["station", "tt", "ft", "std", "nd", "ste", "ost", "sts", "lt", "sb", "sw", "mt", "tmp", "pt", "null", "set", "et", "put", "stop", "fr", "sty", "l", "tr", "stan", "art", "wt", "dr", "step", "rd", "th", "const", "rt", "x", "ts", "str", "nt", "ST", "sth", "bt", "must", "start", "inst", "ut", "stage", "rest", "cl", "ss", "stable", "ssl", "storage", "se", "usr", "t", "ist", "sta", "St", "stat", "ct", "sv", "sp", "est"], "readLine": ["readableRow", "readableLINE", " readString", "eachNext", "waitLine", "loadToken", "readline", "nextLine", "rawline", "prevLine", "nextLINE", "readableFile", " readline", "readableLine", "readableNext", "prevline", " readRow", "rawLine", "writeline", "prevln", " readNext", "readableString", "writeString", "rawln", "readString", "readNext", "readableToken", " readLINE", "writeRow", "writeLINE", "nextNext", " readFile", "waitRow", " readln", "readRow", "waitline", "nextString", "loadNext", "eachLINE", "eachString", "writeLine", "readFile", "writeFile", "readln", "loadLINE", "waitLINE", "rawLINE", " readToken", "loadLine", "readToken", "prevLINE", "eachLine", "readLINE"], "n": ["nb", "an", "en", "missing", "nn", "names", "it", "network", "all", "none", "o", "l", "np", "ns", "out", "c", "d", "un", "g", "r", "nt", "v", "or", "no", "cont", "nm", "ng", "on", "name", "nets", "j", "h", "number", "sn", "ni", "ut", "init", "m", "nu", "nl", "ul", " N", "nc", "ny", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "count", "len", "N", "p"], "retArr": [" retArl", " retArrc", "retArrt", "retARrt", "retArrb", "RetArrs", "retArrayn", "RetErg", "RetErn", "retVerr", " retArrg", "retArrayrt", "retErrs", "retCarr", "retErr", "retErrt", "RetArn", "RetErrt", "retUrrb", "retIrn", "retCarg", "RetErrs", "retVerl", "retErg", "retIrrg", "retErn", "RetErl", "retVarrc", "retCarn", " retCurl", "retCarrb", "RetErrb", "retUrn", " retArrt", "retArl", " retCurn", "retCurrg", "retIrl", "retCurr", " retCurrt", "retArrayrs", "retCurl", "retARn", "retArrayr", "RetArr", "retVarrt", "retArrayl", "RetArrt", "retUrg", "retErrb", "retVerrs", "retErl", " retCurrc", "retVarl", "retARl", " retArn", "retArrc", "retIrr", "RetArg", "retVern", "RetArl", "retCurn", " retCurrg", "retVarr", "RetArrb", "retCurrt", "retArn", "retUrr", "retArg", "retErrg", "retARr", "retArrs", "RetErr", " retCurr", "retCurrc", "retArrg"], "i": ["ies", "bi", "in", "multi", "si", "ti", "ai", "ip", "it", "iu", "ie", "um", "key", "PI", "xi", "di", "pi", "ful", "qi", "ei", "this", "r", "mi", "my", "ity", "ini", "ci", "y", "sim", "id", "oi", "j", "io", "I", "print", "ij", "q", "init", "me", "m", "ami", "iy", "ori", "ki", "\u0438", "MI", "batch", "gi", "ii", "info", "us", "ims", "eu", "mac", "is", "li", "ex", "hi", "ui", "cli", "ji", "fire", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "/*\\n * To change this license header, choose License Headers in Project Properties.\\n * To change this template file, choose Tools | Templates\\n * and open the template in the editor.\\n */\\n\\n\\nimport java.util.*;\\n\\n/**\\n *\\n * @author Admin\\n */\\npublic class Main {\\n    \\n    \\n    public static void main(String args[])\\n    {\\n    Scanner s=new Scanner(System.in);\\n    \\n    int ss=s.nextInt();\\n    \\n    int w=s.nextInt();\\n    \\n    if(ss>w)\\n        System.out.println(\"safe\");\\n    else\\n    System.out.println(\"unsafe\");\\n   \\n         \\n    \\n    \\n    \\n    }\\n    \\n    \\n}\\n", "target": "177", "substitutes": {"s": ["in", "ses", "ms", "S", "pers", "ws", "sts", "sb", "utils", "sw", "ds", "sm", "sol", "stats", "ns", "ins", "ts", "d", "sc", "js", "ys", "socket", "sys", "ats", "search", "conv", "xs", "gs", "south", "fs", "ls", "sam", "sl", "abs", "sq", "self", "cs", "qs", "less", "se", "ps", "is", "serv", "z", "sa", "sv", "rs", "gets"], "ss": ["ms", "ess", "si", "sy", "ws", "sf", "ase", "ds", "sm", "sol", "css", "\u00df", "ross", "ness", "iss", "bs", "ks", "ts", "sc", "ys", "sys", "oss", "pse", "sd", "rss", "sex", "ass", "ls", "uss", "hess", "sq", "cs", "ps", "su", "yy", "sh", "sv", "rs", "sp", "SS"], "w": ["wr", "wo", "ws", "nw", "sw", "wk", "wb", "wp", "wt", "x", "tw", "window", "ew", "we", "W", "h", "wh", "win", "wx", "kw", "wm", "wa", "fw", "rw", "ow", "wl", "hw", "t", "z", "iw", "n", "p", "wid", "wd", "wi"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        char[] s = sc.next().toCharArray();\\n        long k = sc.nextLong();\\n        \\n        char ans = '1';\\n        long oneIdx = 0;\\n        for(char str : s) {\\n            if(str != '1') {\\n                ans = str;\\n                break;\\n            }\\n            oneIdx++;\\n        }\\n        \\n        if(k <= oneIdx) ans = '1';\\n        System.out.println(ans);\\n    }\\n}\\n", "target": "38", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "src", "asc", "mc", "osc", "anc", "cr", "Sc", "c", "inc", "bc", "cc", "sys", "cont", "ok", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "isc", "syn", "desc", "scl", "sh", "sv", "rs", "sp", "esc"], "s": ["ars", "ms", "S", "ws", "sts", "sb", "ds", "w", "als", "b", "ins", "ns", "bs", "tes", "c", "ts", "js", "g", "ys", "v", "ats", "j", "h", "eps", "a", "gs", "ls", "fs", "aws", "ss", "cs", "qs", "t", "n", "amps", "p", "sv", "rs", "hs"], "k": ["ka", "kl", "kr", "ke", "kn", "sk", "kan", "kid", "K", "ko", "kick", "ks", "ik", "ek", "v", "ku", "ak", "j", "kk", "kw", "q", "kj", "mk", "m", "ki", "km", "ck", "tk", "dk", "kh", "ikk"], "ans": ["an", "uns", "acs", "ars", "anks", "ians", "ents", "ms", "angs", " sans", "sts", "yes", "names", "rans", "aps", "ains", "ands", "fts", "ann", "ons", "ns", "ins", "ones", "aus", "ros", "vals", "ks", "ts", "cons", "ys", "arts", "vs", " means", "ats", "ends", "ras", "ates", "ants", "xs", "els", "posts", "ANS", "gs", "can", "ls", " Ans", "ads", "san", "cs", "os", "as", " spans", "amps", "ens", "rs", "AN", "ols", "ids"], "oneIdx": ["oneIsr", "oneIntp", "oneIdfx", "oneByIdz", " oneids", "woIdxes", "oneIndexfx", "oneByIdy", "woIdp", "oneidn", "oneIsxs", "oneidr", "oneByIds", "oneidxs", "woIdy", " oneIds", "oneByIdx", "oneIdz", "oneids", "oneIntxes", " oneIdfx", "oneIdp", "oneEdp", "oneIsfx", " oneIdn", "oneIndexr", "woIntxes", "oneIndexx", "oneIDs", " oneIdxs", "oneByIdn", "oneIdxs", " oneidn", "oneidx", " oneidx", "oneIdr", "oneidz", "oneByIdxes", " oneidr", "oneIDx", "oneIdxes", " oneIdr", "oneIdn", "oneEdx", "oneIdy", "oneEdy", "woIntx", "woIdx", "woInty", " oneidxs", " oneIdz", "oneEdxes", "woIntp", "oneidfx", "oneIndexxs", "oneIDz", "oneIDn", "oneIntx", " oneidfx", "oneIds", "oneByIdp", " oneidz", "oneInty", "oneIsx"], "str": ["in", "list", "cur", "obj", "ch", "sts", "vol", "sol", "key", "o", "fr", "chain", "l", "STR", "tr", "dr", "del", "cr", "char", "text", "c", "i", "r", "seq", "find", "ar", "cont", "id", "name", "j", "inst", "string", "st", "exec", "Str", "cs", "rec", "spec", "raw", "t", "data", "hex", "br", "txt", "n", "syn", "ctr", "p", "enc", "sp", "arr"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n\\n    public static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tint total = 0;\\n\t\tfor (int i=0; i<3; i++) {\\n\t\t\ttotal += sc.nextInt();\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(total > 21 ? \"bust\" : \"win\");\\n    }\\n}\\n", "target": "129", "substitutes": {"sc": ["ch", "sync", "sb", "set", "asc", "mc", "osc", "cmp", "cr", "ec", "Sc", "sel", "c", "bc", "cc", "sys", "screen", "SC", "conv", "lc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "pb", "nc", "sq", "tc", "cs", "exp", "tk", "tch", "pc", "acc", "na", "isc", "desc", "sh", "scl", "sv", "sp", "esc"], "total": ["result", "required", "complete", "missing", "open", "successful", "eta", "human", "max", "non", "seen", "available", "stats", "empty", "all", "now", "translation", "sum", "percent", "failed", "reported", "out", "amount", "unknown", "average", "no", "black", "bar", "you", "current", "done", "needed", "basic", "good", "normal", "huge", "stable", "system", "otal", "quant", "info", "zero", "used", "valid", "Total", "t", "scale", "full", "base", "count", "balance", "n", "checked", "sequence", "tax", "note"], "i": ["multi", "ms", "si", "ti", "ai", "e", "ip", "it", "iter", "gu", "iu", "ie", "chain", "di", "pi", "qi", "x", " my", "my", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "io", "I", "ind", "q", "init", "m", "index", "gi", "ii", "us", "t", "is", "li", " ii", "hi", "ex", "ui", "cli", "ix", "im", "ic", "phi"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        char[] c = sc.next().toCharArray();\\n        int ans = 0;\\n        for (int i=0;i<n;i++){\\n            while (i<n-1&&c[i]==c[i+1])i++;\\n            ans++;\\n        }\\n        System.out.println(ans);\\n    }\\n}\\n", "target": "218", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "sub", "inc", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "sr", "gc", "cl", "ss", "nc", "sq", "cs", "tc", "pc", "ctl", "ser", "dc", "sa", "isc", "syn", "desc", "sh", "scl", "sv", "sp", "esc"], "n": ["nb", "en", "nn", "names", "network", "o", "l", "np", "ns", "d", "un", "nt", "v", "no", "ng", "j", "ren", "number", "sn", "nu", "m", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "num", "net", "count", "N", "p", "mn"], "c": ["cp", "cur", "ch", "vc", "com", "cat", "cod", "cm", "mc", "l", "b", "cd", "ec", "char", "arc", "g", "r", "bc", "v", "cc", "C", "fc", "co", "cont", "cb", "config", "a", "cu", "lc", "rc", "ac", "gc", "cl", "nc", "cs", "cf", "tc", "con", "t", "dc", "ce", "ct", "ca", "p", "u"], "ans": ["an", "uns", "ars", "anks", "ms", "ians", "ents", "results", "nn", "orts", "ds", "flags", "sk", "ows", "ann", "actions", "ons", "ints", "ins", "ns", "AN", "ids", "ks", " scans", "ts", "arts", "vs", "lines", "ats", "nets", "ends", "rows", "anes", "ants", "eps", "xs", "posts", "ANS", "gs", "can", "ls", "ads", "ips", "ots", "lan", "cs", "os", "ims", "ps", "is", "ens", "outs", "mn", "eds"], "i": ["yi", "bi", "in", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "chain", "l", "zi", "xi", "uli", "di", "pi", "qi", "ei", "g", "mi", "ini", "ci", "y", "id", "err", "sim", "oi", "j", "uri", "f", "I", "ind", "q", "init", "ami", "m", "index", "ki", "ii", "gi", "ims", "to", "is", "li", "base", "hi", "ui", "cli", "client", "sql", "ji", "ix", "p", "im", "ic", "phi", "ri"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint x = sc.nextInt();\\n\t\tint n = sc.nextInt();\\n\t\tif (n == 0) {\\n\t\t\tSystem.out.println(x);\\n\t\t\treturn;\\n\t\t}\\n\t\tint[] pArray = new int[100];\\n\t\tfor (int i = 0; i < 100; i++) {\\n\t\t\tpArray[i] = 0;\\n\t\t}\\n\t\tint p = 0;\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tp = sc.nextInt();\\n\t\t\tpArray[p - 1] = 1;\\n\t\t}\\n\t\tint ans = 101;\\n\\n\t\tfor (int i = x - 1; i < 100; i++) {\\n\t\t\tif (pArray[i] == 0) {\\n\t\t\t\tans = i + 1;\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\t\tfor (int i = x - 1; i >= 0; i--) {\\n\t\t\tif (pArray[i] == 0) {\\n\t\t\t\tif (Math.abs(x - ans) < Math.abs(x - (i + 1))) {\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t\tans = i + 1;\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tif (i == 0 && Math.abs(x - ans) >= x) {\\n\t\t\t\tans = 0;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n}", "target": "228", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "src", "asc", "mc", "osc", "anc", "cr", "Sc", "sci", "c", "inc", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", "wx", " Sc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "nc", "system", "tc", "cs", "sq", "ck", "pc", "ctl", "txt", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "x": ["in", "mx", "px", "at", "e", "s", "max", "tx", "w", "xe", "xx", "xd", "ax", "xf", "l", "xi", "xt", "k", "pi", "xc", "fx", "xp", "c", "pan", "r", "act", "v", "co", "X", "y", "ox", "on", "h", "a", "wx", "xs", "xxxx", "xml", "inx", "rx", "index", "php", "cox", "m", "xa", "t", "hex", "xy", "z", "ex", "xxx", "width", "ct", "ix", "lex"], "n": ["nb", "an", "en", "size", "nn", "max", "w", "o", "l", "np", "k", "ns", "c", "d", "r", "nt", "v", "nm", "no", "y", "ng", "on", "j", "sn", "nu", "m", "nl", "nc", "ne", "nan", "t", "na", "z", "num", "net", "len", "N"], "pArray": ["iQuery", "paList", "pAr", " pQueue", "pCollection", "lpCollection", "paQuery", "Parray", " pCollection", " pImpl", "piCollection", "PChain", "narray", "nInteger", "irays", "varray", " pTable", "expArray", "vArray", " pInteger", "exparray", "parays", "lpTable", "expInteger", "paChain", " parray", "piChain", "piAr", "pQueue", "pQuery", "pTable", "lpArray", "PImpl", " pList", "piQuery", "pirays", "PList", "prays", "vAr", "pChain", "pInteger", "pImpl", "parray", "piArray", "PAr", "nList", "expList", "lpQueue", "vChain", "piarray", "piTable", "iArray", "paImpl", "nArray", "paArray", "iChain", " pChain", "pList", "PArray", "piQueue"], "i": ["multi", "si", "at", "ip", "l", "zi", "di", "ion", "ini", "err", "iy", "me", "info", "hi", "ani", "phi", "it", "ie", "status", "o", "qi", "ine", "ik", "sim", "ia", "uri", "init", "index", "ori", "asi", "ii", "gi", "ali", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "progress", "dr", "ios", "iti", "ei", "g", "isi", "j", "ni", "I", "ind", "print", "ij", "is", "li", "ui", "client", "ix", "ies", "ti", "ai", "xi", "pi", "ice", "mi", "ity", "ci", "oi", "id", "f", "ki", "\u0438", "ims", "eu", "fi", "im"], "p": ["ap", "an", "fp", "cp", "at", "pkg", "ip", "it", "pt", "pe", "l", "np", "b", "pi", "P", "iat", "c", "jp", "pan", "lp", "g", "v", "y", "pro", "pid", "tp", "j", "a", "pos", "h", "f", "q", "pn", "m", "pre", "bp", "t", "pc", "ps", "pa", "pr", "pp", "par", "sp", "pai"], "ans": ["an", "ars", "anks", "ians", "ms", "ents", "mas", "ai", "names", "s", "orts", "ds", "aps", "ports", "ann", "es", "ons", "ins", "ns", "cas", "aus", "marks", "ids", "ros", "vals", "rs", "faces", "ks", "pan", "cons", "aces", "arts", "lines", "vs", "vers", "ats", "plan", "nets", "ends", "anes", "ants", "eps", "xs", "posts", "ANS", "ads", "ls", "orders", "ips", "ots", "os", "oa", "as", "ps", "is", " spans", "offs", "ations", "amps", "ens", "ris", "outs", "ints"]}}
{"code": "import java.util.Scanner;\\nimport java.util.HashMap;\\nimport java.util.Map;\\n\\npublic class Main{\\n    public static void main(final String[] args) {\\n        Scanner scan = new Scanner(System.in);\\n        int n = scan.nextInt();\\n        int[] a = new int[n];\\n        Map<Integer, Integer> mp = new HashMap<Integer, Integer>();\\n        for (int i = 0; i < n; i++) {\\n            a[i] = scan.nextInt();\\n            mp.put(a[i], 1);\\n        }\\n        int q = scan.nextInt();\\n        int ans = 0;\\n        while (q > 0) {\\n            final int s = scan.nextInt();\\n            if(mp.containsKey(s)) ans++;\\n            q--;\\n        }\\n        System.out.println(ans);\\n    }\\n}\\n", "target": "138", "substitutes": {"scan": ["an", "scroll", "in", "query", "report", "ch", "nn", "sync", "pass", "check", "cat", "sm", "read", "gen", "look", "send", "connect", "ann", "spe", "run", "pack", "see", "p", "row", "out", "sc", "cgi", "g", "sin", "ner", "r", "parse", "find", "sys", "proc", "black", "skip", "sim", "search", "can", "reach", "m", "gc", "gate", "san", "go", "call", "system", "info", "watch", "log", "se", "con", "ser", "link", "scale", "sql", "sur", "store", "filter", "sv", "Scan", "sp"], "n": ["nb", "an", "en", "nn", "nw", "l", "np", "ns", "c", "d", "nr", "nm", "nt", "v", "no", "ng", "j", "number", "sn", "ni", "length", "m", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "count", "net", "len", "N", "p", "mn"], "a": ["an", "aff", "la", "ba", "ab", "da", "ea", "ai", "au", "aka", "aaa", "b", "area", "sha", "am", "A", "era", "act", "ar", "ia", "ma", "ta", "ao", "va", "alpha", "ac", "app", "wa", "aw", "ata", "ga", "oa", "aa", "as", "att", "sta", "na", "pa", "array", "fa", "sa", "ca"], "mp": ["ap", "rep", "cp", "ms", "mx", "MP", "px", "pkg", "md", "perm", "met", "mt", "tmp", "aps", "mc", "mm", "cap", "aph", "cmp", "mph", "pm", "mg", "Mp", "ma", "m", "tm", "rpm", "mk", "pb", "mb", "mac", "amp", "mop", "ps", "pl", "amps", "map", "mem", "p", "pp", "sp"], "i": ["bi", "in", "ish", "multi", "ms", "si", "ti", "ai", "ip", "it", "iu", "ie", "o", "chain", "l", "zi", "di", "pi", "details", "qi", "x", "ei", "g", "mi", "point", "v", "ini", "ci", "y", "sim", "id", "span", "iso", "j", "io", "f", "uri", "I", "ind", "init", "ami", "m", "me", "ori", "batch", "ii", "gi", "us", "used", "is", "li", "base", "z", "hi", "ui", "client", "ji", "ix", "fi", "sequence", "im", "phi", "u", "ri"], "q": ["query", "qt", "dq", "qq", "quit", "ve", "qa", "pkg", "it", "ch", "mt", "question", "qual", "pe", "k", "p", "conf", "qi", "qv", "d", "g", "ue", "seq", "v", "j", "h", "iq", "ql", "m", "sq", "quant", "qs", "ck", "t", "z", "gm", "Q", "ct", "aq", "sh", "queue", "requ", "que", "qu"], "ans": ["an", "uns", "reads", "anks", "ms", "ents", "orts", "ds", "flags", "sk", "ows", "ann", "actions", "ns", "ins", "ones", "aus", "vals", "ks", " scans", "ts", "aces", "arts", "lines", "ats", "rows", "ants", "xs", "posts", "alls", "gs", "ANS", "can", "ls", "orders", "ads", "ips", "ots", "cs", "qs", "os", "ims", "as", " spans", "ps", "offs", "ums", "amps", "ens", "rs", "outs", "ids", "eds"], "s": ["ies", "uts", "ms", "des", "S", "ds", "ns", "conf", "tes", "ts", "js", "g", "v", "ats", "ends", "its", "bes", "h", "xs", "gs", "ads", "ls", "fs", "ss", "abs", "sq", "cs", "qs", "os", "ims", "t", "ps", "is", "rs", "hs", "gets", "sym", "ids", "eds"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tString S = sc.next();\\n\\n\t\tList <String> kekka = new ArrayList<String>();\\n\t\tString [] alphabet = {\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"};\\n\\n\t\tfor(int i=0; i < S.length();i++) {\\n\\n\t\t\tString Sone = String.valueOf(S.charAt(i));\\n\\n\t\t\tfor(int j=0; j < 26;j++) {\\n\t\t\t\tString alphabetOne = alphabet[j];\\n\t\t\t\tif(Sone.equals(alphabetOne)) {\\n\\n\t\t\t\t\tif((j+N)<26) {\\n\t\t\t\t\t\tkekka.add(alphabet[j+N]);\\n\t\t\t\t\t}else {\\n\t\t\t\t\t\tint N2 = N - 26;\\n\t\t\t\t\t\tkekka.add(alphabet[j+N2]);\\n\t\t\t\t\t}\\n\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\\n\t\tfor(String a:kekka) {\\n\t\t\tSystem.out.print(a);\\n\t\t}\\n\\n\\n\t}\\n\\n}\\n", "target": "13", "substitutes": {"sc": ["ch", "sb", "sync", "s", "cle", "src", "asc", "osc", "ctrl", "anc", "cr", "Sc", "row", "arc", "c", "sci", "dec", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "rc", "usc", "st", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "reader", "nc", "sq", "cs", "system", "uc", "spec", "se", "pc", "ser", "txt", "isc", "desc", "scl", "sv", "Scan", "sp", "esc"], "N": ["NP", "NI", "NG", "NA", "J", "D", "NV", "T", "NM", "E", "K", "NH", "H", "Z", "P", "NT", "V", "M", "C", "Sn", "Ni", "NB", "G", "I", "TN", "IN", "R", "NL", "NN", "NR", "Num", "CNN", "Na", "NS", "L", "SN", "GN", "MN", "n", "F", "ND", "O", "NC", "AN"], "S": ["CS", "DS", "SF", "s", "SER", "T", "E", "STR", "SU", "SL", "SE", "SEC", "H", "P", "A", "SM", "V", "SA", "ST", "Si", "M", "C", "X", "SB", "SI", "GS", "W", "G", "I", "SP", "R", "Str", "SQL", "L", "B", "F", "Q", "SN", "SS"], "kekka": [" kekandra", "kekker", "keukko", "kekki", "keakka", "keakko", "keekker", "kekkena", "keckkas", " keckker", "KEckena", "kenko", "KEckko", " kekko", "KEkka", " keckkas", " keckandra", "keckta", "KEkta", "kenandra", "kekandra", " kekker", "keukka", "kekkka", "keakker", "keakena", "KEkko", "keakki", "kekkta", "KEckta", "keckko", "kekko", "kekkas", "keckki", " kekkas", "kekena", "keekkas", "keakandra", "kenka", "keakta", "KEkena", "KEckka", "kenki", " kekki", "kekta", "keekko", "keekka", "keukki", "keakkas", "keckka", "kekkko", " keckka", "keukker", " keckki", " keckko", "keckandra", "keckker", "keckena"], "alphabet": ["alaton", "variabet", "flavor", "attat", "attabet", "attavor", "alphaphabet", "alphaton", "flat", "replphabet", "variphabet", "alphavor", "alternet", "flabet", "alavor", "alphphabet", "variaton", "alphaabet", "alternabet", "replabetic", "palabet", "alat", "alphabetic", "variabetic", "replet", "alabetic", "attphabet", "alphat", "flphabet", "alternabetic", "replabet", "alphaaton", "palabetic", "alabet", "alternphabet", "palaton", "palphabet", "alet", "alphet"], "i": ["bi", "in", "multi", "si", "ti", "ai", "it", "ip", "iu", "ie", "status", "o", "zi", "xi", "b", "di", "pi", "x", "ei", "mi", "v", "ini", "ci", "y", "ia", "io", "I", "ind", "ij", "ami", "me", "m", "init", "ori", "ki", "ii", "gi", "t", "is", "li", "hi", "ui", "n", "ix", "im", "ic", "phi", "u", "ri"], "Sone": ["Cone", "PSoning", "Smany", "sOne", "PStwo", " Shen", "Soning", "HSmany", "Statusones", "Shen", "Coning", "sone", "smany", "SOne", "sones", "PSone", "Stwo", " Stwo", "PShen", "HSOne", " Soning", "Chen", "StatusOne", "Ctwo", "HSones", "Sones", "Statusmany", "Statusone", "HSone"], "j": ["jo", "Ja", "bj", "oj", "ot", "obj", "at", "jc", "J", "json", "it", "adj", "key", "fr", "state", "jit", "user", "b", "dj", "k", "jj", "jas", "opt", "aj", "jl", "bo", "out", "el", "jp", "jen", "uj", "x", "js", "g", "off", "ja", "y", "bot", "err", "ind", "jac", "ij", "q", "je", "kj", "br", "z", "jump", "job", "ji", "n", "pr", "im", "note"], "alphabetOne": ["octphabetone", "alphabet1", "alphabetone", "alphabetTwo", "alphatonTwo", "alphat1", "alphacetone", "octabetTwo", "alphphabetTwo", "alphatonMany", "alphacetTwo", "octphabetMany", "octphabetOne", "octabetOnce", "alphabetMany", "octphabet1", "alphphabet1", "alphaton1", "alphphabetone", "alphatone", "alphacetOnce", "octphabetTwo", "alphphabetOnce", "alphabetOnce", "octphabetOnce", "alphphabetOne", "alphatOne", "octabetMany", "alphatonOne", "octabetone", "octabetOne", "octabet1", "alphatonone", "alphacetOne", "alphatMany", "alphphabetMany", "alphatonOnce"], "N2": [" N02", "J1", "STwo", "S2", " NTwo", "n1", "J2", "N02", "n02", " N1", "JTwo", "n2", "NTwo", "J02", "S02", "N1"], "a": ["an", "ana", "in", "ka", "ba", "eas", "ea", "e", "au", "o", "l", "aaa", "b", "k", "aux", "area", "out", "sha", "c", "A", "v", "y", "ma", "ta", "ao", "va", "ae", "m", "ga", "aa", "ova", "t", "data", "na", "pa", "sta", "z", "fa", "as", "aura", "sa", "ca", "n", "p", "ava"]}}
{"code": "import java.util.Scanner;\\nimport java.util.Arrays;\\n\\npublic class Main\\n{\\n\\n\tpublic static void main(String[] args)\\n\t{\tScanner s = new Scanner(System.in);\\n                int n = s.nextInt();\\n          //    int d = s.nextInt();\\n                int i=0,j=0,k=0,ans=0,ss=0,r=0;\\n                for(i=1;i<=n;i++){\\n                    if(i%2!=0){\\n                       r = i;\\n                       for(j=1;j<=n;j++){\\n                           if(r%j==0){\\n                              ss++;\\n                           }\\n                       }\\n                       if(ss==8){\\n                          ans++;\\n                       }\\n                       ss = 0;\\n                    }\\n                }\\n                System.out.println(ans);\\n\t}\\n}", "target": "85", "substitutes": {"s": ["ses", "ms", "S", "ws", "sts", "sb", "ds", "sol", "w", "ubs", "es", "l", "b", "ns", "c", "ts", "sys", "ats", "y", "h", "xs", "gs", "ls", "fs", "sam", "ss", "sl", "sq", "qs", "cs", "ps", "is", "sa", "p", "sv", "rs", "eds"], "n": ["nb", "en", "rn", "nn", "l", "b", "ns", "c", "d", "nr", "nm", "nt", "ng", "name", "j", "h", "sn", "m", "nu", "nl", " N", "ln", "ne", "t", "z", "count", "N", "p"]}}
{"code": "\\n\\nimport java.io.*;\\nimport java.math.BigInteger;\\nimport java.util.*;\\nimport java.util.Stack;\\n\\npublic class Main{\\n\tpublic static class FastReader {\\n\t\tBufferedReader br;\\n\t\tStringTokenizer root;\\n\t\t\\n \\n\t\tpublic FastReader() {\\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\\n\t\t}\\n \\n\t\tString next() {\\n\t\t\twhile (root == null || !root.hasMoreTokens()) {\\n\t\t\t\ttry {\\n\t\t\t\t\troot = new StringTokenizer(br.readLine());\\n\t\t\t\t} catch (Exception r) {\\n\t\t\t\t\tr.printStackTrace();\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn root.nextToken();\\n\t\t}\\n \\n\t\tint nextInt() {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n \\n\t\tdouble nextDouble() {\\n\t\t\treturn Double.parseDouble(next());\\n\t\t}\\n \\n\t\tlong nextLong() {\\n\t\t\treturn Long.parseLong(next());\\n\t\t}\\n \\n\t\tString nextLine() {\\n\t\t\tString str = \"\";\\n\t\t\ttry {\\n\t\t\t\tstr = br.readLine();\\n\t\t\t} catch (Exception r) {\\n\t\t\t\tr.printStackTrace();\\n\t\t\t}\\n\t\t\treturn str;\\n\t\t}\\n\t}\\n\t\\n\tpublic static PrintWriter out = new PrintWriter (new BufferedOutputStream(System.out));\\n\tstatic int mod = (int) (1e9+7),n;\\n\tstatic long cf = 998244353;\\n    static final int MAX = (int) 1e6;\\n    public static List<Integer>[] edges;\\n    public static int[][] parent;\\n    public static int col = 20;\\n    public static long[] Bit;\\n    public static long[] fac,inv;\\n    public  static int[] prime; \\n    public static long[] dp;\\n\tpublic static FastReader sc = new FastReader();\\n\tpublic static void main(String[] args) {\\n\t//\tScanner sc = new Scanner(System.in);\\n \\n\t\tint n = sc.nextInt();\\n\t\tchar[] s = sc.next().toCharArray();\\n\t\tfor(int i=0;i<s.length;++i) {\\n\t\t\tint shift = (s[i]-'A') + n;\\n\t\t\tif(shift > 25) s[i] = (char) ((shift-26)+'A');\\n\t\t\telse s[i]+=n;\\n\t\t}\\n\t\tout.print(new String(s));\\n\t\tout.close();\\n\t}\\n\t\\n\t\\n}", "target": "13", "substitutes": {"br": ["ber", "bsp", "wr", "bl", "hr", "kr", "bb", "BR", "Br", "vr", "ocr", "mr", "next", "bern", "fr", "tr", "browser", "dr", "buf", "bs", "cr", "jp", "rel", "gr", "nr", "ptr", "r", "bh", "bc", "rys", "brace", "yr", "bf", "bt", "boot", "err", "raf", "res", "rob", "bridge", "rx", "lr", "reader", "shr", "bp", "rb", "pr", "ctr", "bro", "ro"], "root": ["result", "roots", "cur", "obj", "null", "snap", "ree", "right", "console", "tmp", "ocr", "mr", " roots", "empty", "roid", "rap", "first", "ver", "chain", "box", "b", "table", "buf", "rt", "oot", "scope", "loc", "cr", "this", "prefix", "ptr", "r", "owner", "or", "sys", "nt", "bh", "err", "peer", "ok", "gro", "res", "parser", "h", "rc", "child", "rator", "reader", "zero", "dev", " Root", "usr", "head", "rus", "util", "base", "tree", "Root", "pr", "node", "ger", "div", "p", "oots", "ro"], "str": ["result", "cur", "obj", "iter", "sts", "s", "sw", "msg", "next", "fr", "STR", "tr", "dr", "ns", "del", "cr", "char", "text", "coll", "gr", "r", "sys", "err", "res", "inst", "print", "st", "string", "Str", "ent", "sl", "shr", "cs", "url", "rec", "t", "txt", "pr", "div", "ctr", "p", "sequence", "enc", "sp", "arr"], "out": ["result", "in", "std", "obj", "ch", "null", "tmp", "w", "file", "msg", "pool", "o", "Out", "ins", "nt", "no", "conn", "sys", "err", "on", "j", "io", "res", "error", "print", "st", "m", "log", "write", "OUT", "output", "os", "writer", "t", "ex", "txt", "inner", "p", "er", "outs"], "mod": ["pop", "fun", "add", "floor", "perm", "cm", "tr", "ctrl", "cmp", "aj", "form", "Mod", "ptr", "tab", "ref", "min", "MOD", "pre", "log", "grow", "exp", "scale", "base", "tree", "div", "ctr", "module", "dec"], "n": ["nb", "nn", "e", "o", "l", "np", "k", "ns", "x", "c", "d", "g", "nm", "v", "j", "h", "f", "sn", "nu", "m", "t", "na", "z", "cn", "num", "N", "p", "mn"], "cf": ["Ct", "rn", " mc", "cal", " cx", "xf", "tr", "cd", " ce", "cr", "fc", "bf", "cc", "lf", "cb", "cv", "fn", " cr", "sq", " cc", "cs", "dc", "ce", " df", "ct", "CF", "ctr", "ef"], "MAX": ["pop", "mx", "max", "level", "gen", "ax", "cap", "step", "const", "cmp", "conf", "Prime", "INC", "default", "mask", "height", "power", "Max", "cl", "grow", " max", "rr", "scale", "base", "map", "tax", "CR"], "edges": ["pedgest", "ledgel", "ledges", "edger", "ledgest", " edgest", "pedges", "edgel", "pedger", " edgel", "edgest", " edger", "ledger", "pedgel"], "parent": ["shared", "parents", "prop", "tmp", "prev", "pool", "depth", "block", "master", "table", "family", "unit", "rel", "seed", "peer", "pid", "name", "shape", "child", "grow", "path", "dist", "tip", "base", "tree", "node", "tax", "Parent"], "col": ["COL", "column", "pol", "cp", "var", "level", "pool", "key", "dir", "cmp", "loc", "row", "rel", "Col", "lock", "line", "min", "pos", "res", "rc", "cond", "ol", "con", "num", "count", "div", "val", "par"], "Bit": ["lt", "prop", "iter", "ip", "au", "total", "tmp", "prev", "ld", "step", "row", "d", "norm", "lock", "default", "rank", "nu", "m", "pre", "log", "factor", "mu", "data", "dc", "scale", "offset", "base", "tree", "node", "weight"], "fac": ["fun", "mult", "var", "cur", "uf", "perm", "gam", "gu", "prof", "cum", "sav", "cap", "ctrl", "cas", "aux", "fx", "eff", "ran", "fact", "fam", "sim", "ac", "ul", "factor", "mu", "frac", "con", "acc", "unc"], "inv": ["av", "vol", "random", "Inv", " inverse", "dir", "mag", "iv", "mix", "grad", "rel", "eff", "vs", "sin", "norm", "v", "rev", "conv", "ij", "log", "mu", "dev", "ln", "verse", "scale", "rand", "tri", "reverse"], "prime": ["poly", "tie", "ve", "perm", "tmp", "max", "random", "prof", "profile", "real", "Prime", "ptr", "primary", "fine", "power", "pri", "pd", "pre", "index", "plus", "factor", "rand", "tri", "temp", "pr", "div", "ties"], "dp": ["dx", "fp", "cp", "DP", "dq", "dt", "pkg", "np", "dep", "di", "p", "tap", "db", "vp", "jp", "lp", "d", "tp", "df", "gp", "pd", "dm", "dc", "dh", "pa", "ps", "dl", "pp", "ep"], "sc": ["ch", "sw", "mc", "osc", "dr", "cr", "ec", "Sc", "bc", "sys", "SC", "lc", "rc", "sch", "sr", "gc", "cl", "uc", "tc", "cs", "pc", "dc", "ser", "sa", "sh", "scl", "sv", "sp"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    int x = sc.nextInt();\\n    int t = sc.nextInt();\\n    int d = n/x;\\n    if(n%x!=0){\\n      d=d+1;\\n    }\\n    System.out.println(d*t);\\n  }\\n}", "target": "34", "substitutes": {"sc": ["irc", "ch", "sb", "sw", "asc", "mc", "osc", "ctrl", "cmp", "anc", "cr", "Sc", "ko", "c", "sub", "inc", "dec", "bc", "cc", "sys", "cont", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "nc", "sq", "cs", "tc", "system", "ck", "pc", "ctl", "ser", "dc", "sa", "capt", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "nv", "en", "an", "size", "nn", "nw", "o", "l", "np", "ns", "c", "i", "nr", "nt", "v", "tn", "y", "ng", "on", "j", "h", "sn", "nu", "m", "nl", "nc", "ln", "ne", "na", "cn", "num", "dn", "N", "gn", "wn", "p", "mn"], "x": ["dx", "mx", "e", "w", "tx", "xe", "xx", "o", "ax", "xf", "l", "xi", "k", "xt", "xc", "xes", "i", "c", "xp", "r", "v", "X", "y", "on", "ox", "j", "h", "f", "xs", "rx", "m", "xy", "z", "ex", "xxx", "ct", "ix", "p", "ic", "u"], "t": ["tt", "dt", "ot", "at", "total", "e", "pt", "T", "o", "l", "tr", "b", "wt", "k", "rt", "out", "c", "i", "ts", "g", "r", "v", "type", "y", "ta", "tf", "h", "a", "j", "td", "f", "q", "m", "tu", "te", "tc", "z", "p"], "d": ["dx", "dq", "dt", "da", "nd", "e", "D", "ds", "fd", "w", "dy", "dim", "diff", "l", "dir", "b", "di", "bd", "dd", "ad", "c", "i", "g", "r", "v", "dp", "j", "sd", "td", "den", "df", "de", "ind", "q", "dig", "m", "pd", "dev", "dl", "dm", "dist", "dh", "dc", "z", "div", "dn", "p", "dec"]}}
{"code": "import java.util.*;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int A = sc.nextInt();\\n        int B = sc.nextInt();\\n        int C = sc.nextInt();\\n\\n        if ((A != B && B != C && A != C) || A == B && B == C)\\n            System.out.println(\"No\");\\n        else\\n            System.out.println(\"Yes\");\\n    }\\n}\\n", "target": "117", "substitutes": {"sc": [" scr", "ch", "sync", "sw", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "out", "ko", "c", "scope", "inc", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "nc", "system", "cs", "tc", "sq", "ck", "tch", "pc", "ctl", "acc", "dc", "isc", "syn", "desc", "scl", "sh", "sv", "sp", "esc"], "A": ["AY", "AB", "S", "Al", "AT", "J", "ART", "This", "AF", "AC", "AGE", "AI", "H", "As", "P", "HA", "AS", "RA", "Ar", "AD", "AH", "CA", "SA", "AV", "Array", "M", "ACT", "AE", "Alpha", "LA", "AR", "W", "G", "I", "AA", "What", "AL", "IA", "GA", "AP", "Ant", "L", "Av", "AG", "Art", "F", "AST", "N", "Ax", "API", "AN", "An"], "B": ["BG", "Bo", "AB", "Bs", "BR", "BB", "BF", "J", "RB", "BA", "CB", "T", "IB", "b", "BP", "VB", "H", "Y", "BT", "TB", "Blue", "V", "Bi", "BO", "LIB", "SB", "BC", "WB", "NB", "G", "BE", "BI", "OB", "Bar", "BS", "R", "EB", "FB", "LB", "BL", "BM", "L", "Ber", "F", "N", "DB"], "C": ["CS", "EC", "S", "CT", "D", "Cu", "T", "CB", "E", "K", "U", "Co", "H", "Y", "Z", "P", "DC", "VC", "c", "V", "CA", "M", "Car", "SC", "BC", "G", "I", "CC", "Cs", "R", "YC", "CD", "L", "F", "Q", "N", "O", "CM", "CR"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    long L = sc.nextInt();\\n    long R = sc.nextInt();\\n    int result = 2019;\\n    int tmp = 0;\\n    loop: for (; L < R; L++) {\\n      if (L % 2019 == 0) {\\n        result = 0;\\n        break;\\n      }\\n      for (long i = L + 1; i <= R; i++) {\\n        if (i % 2019 == 0) {\\n          result = 0;\\n          break loop;\\n        }\\n        tmp = (int) ((L * i) % 2019);\\n        if (tmp < result)\\n          result = tmp;\\n      }\\n    }\\n    System.out.println(result);\\n  }\\n}", "target": "193", "substitutes": {"sc": ["ch", "sb", "sw", "asc", "mc", "osc", "anc", "cr", "Sc", "out", "ko", "c", "ctx", "inc", "bc", "cc", "sys", "cont", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "nc", "system", "tc", "cs", "sq", "ck", "pc", "ser", "ctl", "txt", "isc", "scl", "sh", "sv", "sp", "esc"], "L": ["S", "J", "dL", "LC", "T", "LS", "TL", "GL", "l", "LIN", "SL", "LU", "H", "Lock", "LT", "LOC", "CL", "V", "LE", "VL", "LI", "Lu", "M", "LP", "X", "ML", "LR", "LL", "LA", "RL", "LM", "LG", "I", "DL", "FL", "NL", "AL", "LV", "Load", "LB", "BL", "IL", "B", "Lo", "Language", "N", "LO", "EL"], "R": ["MR", "RO", "S", "Right", "IR", "BR", "J", "D", "T", "DR", "Res", "RT", "P", "RM", "RA", "Rh", "V", "VR", "r", "M", "C", "RS", "SR", "RL", "AR", "I", "G", "RC", "RP", "NR", "GR", "B", "RR", "Q", "RE", "N", "RG", "CR", "RF"], "result": ["report", "response", "summary", "feature", "complete", "results", "total", "successful", "success", "integer", "true", "cache", "diff", "test", "status", "term", "comment", "master", "expected", "folder", "cmp", "def", "goal", "RESULTS", "prefix", "flag", "relation", "draw", "r", "score", "date", "type", "ret", "search", "error", "make", "res", "number", "currency", "standard", "length", "power", "value", "duration", "answer", "command", "mark", "Result", "zero", "params", "output", "function", "valid", "reason", "direction", "count", "num", "message", "temp", "match", "sequence"], "tmp": ["porary", "mp", "tt", "nb", "cp", "cur", "MP", "obj", "partial", "perm", "buff", "img", "cache", "emp", "pkg", "snap", "T", "term", "mm", "np", "lambda", "cmp", "prime", "out", "ctx", "prefix", "ptr", "before", "nt", "v", "ret", "tf", "Temp", "cv", "m", "mk", "tm", "attr", "pretty", "tc", "etc", "tv", "t", "timeout", "offset", "acc", "su", "txt", "temp", "angle", "p", "mut", "sp", "uv"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "iu", "o", "PI", "l", "zi", "xi", "b", "HI", "di", "pi", "qi", "x", "ei", "mi", "LI", "v", "ini", "point", "ci", "y", "sim", "j", "uri", "I", "ind", "ij", "m", "index", "ori", "mu", "ii", "gi", "info", "bis", "slice", "is", "li", "hi", "ui", "cli", "ji", "II", "inner", "ix", "p", "phi", "u", "ri"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        while (sc.hasNext()) {\\n            String s = sc.next();\\n            int left = s.indexOf('A');\\n            int right = s.lastIndexOf('Z');\\n            System.out.println(right - left + 1);\\n        }\\n    }\\n}\\n", "target": "109", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "cmp", "anc", "cr", "ec", "Sc", "ko", "sci", "c", "sub", "inc", "dec", "bc", "cc", "sys", "fc", "screen", "SC", "conv", "lc", "rc", "usc", "sec", "gc", "cl", "scan", "uc", "pb", "nc", "sq", "cs", "tc", "pc", "dc", "ctl", "isc", "capt", "syn", "sh", "scl", "sv", "sp", "esc"], "s": ["ms", "S", "space", "sts", "sb", "sw", "stats", "source", "gets", "spe", "series", "l", "state", "details", "c", "ts", "js", "comm", "str", "g", "v", "sys", "ats", "conv", "f", "gs", "south", "st", "ls", "string", "ashes", "ss", "sl", "abs", "sq", "less", "qs", "se", "ims", "ps", "is", "simple", "su", "sql", "sample", "sv", "rs", "hs", "sp"], "left": ["old", "missing", "lt", "wrong", "check", "last", "local", "low", "from", "ll", "first", "l", "expected", "Left", "lower", "row", "x", "el", "out", "lo", "before", "end", "oul", "line", "start", "current", "min", "top", "length", "ell", "le", "index", "initial", "minimum", "down", "offset", "L", "pl", "net", "inner", "small"], "right": ["outer", "Right", "success", "last", "then", "max", "w", "mid", "radius", "rem", "re", "row", "x", "middle", "correct", "med", "d", "before", "rew", "r", "end", "range", "start", "current", "over", "top", "length", "back", "recent", "west", "rest", "R", "rx", "upper", "down", "head", "ight", "full", "inner", "rights"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint a = Integer.parseInt(sc.next());\\n\t\tint b = Integer.parseInt(sc.next());\\n\t\tsc.close();\\n\t\tsc = null;\\n\t\tint ans = a <= 5 ? 0 : (a <= 12 ? b /2 : b);\\n\t\tSystem.out.println(ans);\\n\t}\\n}\\n", "target": "249", "substitutes": {"sc": ["mp", "irc", "ch", "sync", "sw", "cle", "set", "asc", "sm", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "sel", "ko", "c", "arc", "sub", "cgi", "bc", "cc", "sys", "fc", "proc", "co", "SC", "lc", "rc", "usc", "sec", "sch", "gc", "cl", "scan", "uc", "nc", "sq", "cs", "tc", "se", "con", "pc", "ctl", "dc", "tch", "isc", "syn", "capt", "scl", "desc", "cer", "sv", "sh", "mem", "sp", "esc", "cor"], "a": ["an", "la", "ba", "ab", "af", "ea", "at", "ai", "au", "ama", "aj", "area", "x", "i", "am", "A", "r", "act", "ar", "ia", "ta", "ma", "ao", "va", "alpha", "ac", "ae", "ach", "xa", "ga", "oa", "aa", "sta", "t", "as", "na", "pa", "acc", "fa", "sa", "isa", "n", "p"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "e", "sb", "fb", "s", "l", "bs", "x", "c", "i", "d", "g", "r", "bc", "v", "y", "h", "f", "m", "another", "bp", "t", "z", "B", "rb", "n", "p", "u"], "ans": ["asks", "an", "uns", "ars", "ms", "ents", "names", "s", "rans", "ds", "ens", "aps", "ands", "ann", "ons", "ins", "ns", "ags", "aus", "vals", "faces", "ks", "ces", " scans", "arts", "vs", "annot", "ats", "sd", "ates", "ants", "xs", "posts", "ANS", "gs", "ads", "ls", "orders", "lan", "offs", "amps", "ings", "sv", "books", "ids", "eds"]}}
{"code": "import java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tint[] p = new int[N];\\n\t\tint[] s = new int[N];\\n\t\tfor(int i = 0; i < N; i++) {\\n\t\t\tp[i] = sc.nextInt();\\n\t\t\ts[i] = p[i];\\n\t\t}\\n\t\tsc.close();\\n\t\tArrays.sort(s);\\n\t\t// System.out.println(Arrays.toString(p));\\n\t\t// System.out.println(Arrays.toString(s));\\n\t\tint r = 0;\\n\t\tfor(int i = 0; i < N; i++) {\\n\t\t\tif(p[i] != s[i]) r++;\\n\t\t}\\n\t\t// System.out.println(r);\\n\t\tSystem.out.println(r == 0 || r == 2 ? \"YES\" : \"NO\");\\n\t}\\n}\\n", "target": "82", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "arc", "sci", "c", "ctx", "sub", "bc", "cc", "sys", "fc", "co", "ng", "ok", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "ss", "scan", "nc", "sq", "tc", "cs", "ck", "pc", "ctl", "dc", "isc", "capt", "scl", "sh", "sv", "sp", "esc"], "N": ["Mon", "NI", "NG", "NP", "S", "NA", "REM", "J", "D", "T", "NM", "NH", "K", "No", "Net", "Length", "P", "NT", "V", "M", "C", "Sn", "NO", "Ni", "NE", "NB", "I", "G", "TN", "ALL", "Len", "R", "NR", "NN", "Ns", "Num", "NC", "NS", "L", "GN", "F", "n", "ND", "O", "SN", "AN"], "p": ["rep", "ap", "mp", "fp", "cp", "pers", "pkg", "ip", "pg", "pt", "pe", "l", "np", "ping", "pi", "vp", "P", "op", "jp", "lp", "pm", "pro", "pid", "tp", "h", "php", "pb", "per", "bp", "pc", "ps", "pa", "pl", "pr", "n", "pp", "sp"], "s": ["ies", "ses", "ms", "S", "si", "sts", "w", "stats", "ports", "b", "ins", "ns", "bs", "c", "ts", "r", "v", "ats", "sets", "j", "its", "h", "sn", "gs", "ls", "m", "ss", "sl", "sq", "so", "cs", "bis", "qs", "os", "t", "ps", "is", "z", "n", "states", "sv", "rs", "sp", "u"], "i": ["bi", "in", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "set", "iu", "ie", "fi", "chain", "zi", "xi", "di", "pi", "qi", "x", "c", "ei", "my", "mi", "v", "ini", "ci", "y", "sim", "id", "j", "io", "a", "uri", "ni", "I", "ind", "remote", "init", "m", "ori", "ki", "mu", "batch", "gi", "ii", "us", "is", "li", "z", "ex", "hi", "ui", "cli", "n", "client", "ji", "inner", "ix", "sequence", "fire", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.Scanner;\\nclass Main {\\n    public void kami() {\\n                Scanner sc = new Scanner(System.in);\\n\t\tint d,r;\\n\t\tdouble f;\\n\t\tdouble a = sc.nextInt();\\n\t\tdouble b = sc.nextInt();\\n\t\t\\n\t\td = (int)(a / b);\\n\t\tr = (int)(a % b);\\n\t\tf = a / b;\\n\t\t\\n\t\t\\n\t\tSystem.out.printf(\"%d %1d %.5f \",d , r , f);\\n\\n    }\\n\tpublic static void main(String[] args ) {\\n    new Main().kami();\\n\t}\\n\\n}", "target": "90", "substitutes": {"sc": ["ch", "sb", "s", "asc", "sm", "mc", "osc", "ctrl", "anc", "Sc", "sel", "c", "ctx", "inc", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "ss", "scan", "nc", "sq", "cs", "tc", "pc", "dc", "ctl", "psc", "pl", "txt", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "d": ["dx", "dt", "da", "nd", "md", "s", "ds", "D", "fd", "ord", "l", "dir", "ld", "dr", "di", "cd", "bd", "dd", "db", "x", "dra", "c", "daily", "i", "def", "dis", "id", "done", "sd", "td", "df", "de", "rod", "dig", "pd", "dev", "dm", "t", "dh", "div", "od", "dl", "dec"], "r": ["hr", "ra", "e", "right", "ri", "w", "mr", "re", "fr", "l", "tr", "rd", "dr", "k", "rt", "cr", "c", "i", "rel", "nr", "g", "ar", "rg", "rl", "rm", "res", "h", "rc", "q", "rf", "R", "lr", "sr", "rx", "rw", "rr", "rb", "pr", "p", "rs", "rar", "ru", "u", "ro"], "f": ["fl", "fp", "ft", "alf", "fb", "uf", "sf", "w", "fd", "fort", "fr", "xf", "l", "fg", "fx", "c", "ff", "fc", "bf", "v", "fac", "lf", "tf", "h", "df", "rf", "fm", "cf", "of", "t", "full", "z", "fa", "F", "ct", "fi", "fs"], "a": ["an", "la", "ba", "ab", "af", "da", "ea", "at", "ai", "au", " A", "e", "aka", "ax", "l", "aaa", "aj", "area", "c", "i", "am", "A", "g", "act", "ar", "ia", "ta", "ma", "h", "ao", "alpha", "ac", "ae", "app", "ata", "oa", "aa", "as", "sta", "pa", "sa", "ca", "p", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "fb", "e", "sb", "w", "o", "eb", "l", "bd", "bs", "db", "i", "c", "g", "bc", "v", "y", "j", "h", "beta", "m", "bis", "t", "z", "B", "rb", "n", "p"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n\tpublic static void main(String args[]) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tint v[] = new int[n];\\n\t\tfor (int i = 0; i < n; ++i)\\n\t\t\tv[i] = sc.nextInt();\\n\t\tfor (int i = 0; i < n; ++i) {\\n\t\t\tint c = sc.nextInt();\\n\t\t\tv[i] -= c;\\n\t\t}\\n\t\tsc.close();\\n\t\tArrays.sort(v);\\n\t\tint ans = 0;\\n\t\tfor (int i = n - 1; i >= 0; --i) {\\n\t\t\tif (v[i] > 0)\\n\t\t\t\tans += v[i];\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n}\\n", "target": "26", "substitutes": {"sc": ["irc", "ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "ctx", "arc", "sub", "bc", "cc", "sys", "fc", "SC", "lc", "rc", "usc", "st", "sch", "sec", "gc", "cl", "scan", "ss", "pb", "nc", "sq", "cs", "tc", "ck", "pc", "ctl", "dc", "psc", "pl", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "en", "in", "size", "nn", "w", "network", "all", "ll", "o", "l", "np", "k", "ns", "pi", "x", "out", "d", "un", "g", "nt", "no", "nm", "ng", "on", "name", "j", "a", "number", "sn", "h", "q", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "num", "net", "count", "len", "dn", "N", "p", "mn"], "v": ["nv", "av", "vt", "ve", "vc", "it", "s", "w", "lv", "o", "l", "b", "vv", "pi", "vp", "ov", "x", "qv", "iv", "d", "get", "V", "vs", "g", "vi", "r", "y", "j", "conv", "h", "f", "cv", "m", "values", "view", "vm", "tv", "t", "ev", "p", "sv", "env", "uv", "u", "qu"], "i": ["multi", "si", "ip", "set", "ir", "chain", "l", "zi", "di", "ion", "ini", "err", "iy", "me", "info", "hi", "phi", "it", "ie", "qi", "y", "sim", "ia", "uri", "q", "init", "ami", "ori", "asi", "gi", "ii", "us", "ali", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "gu", "mc", "iti", "jp", "ei", "g", "j", "io", "ni", "I", "ind", "ij", "mu", "is", "li", "ui", "ix", "ti", "ai", "xi", "pi", "mi", "ity", "ci", "id", "iq", "m", "ki", "\u0438", "ims", "eu", "z", "fi", "im", "u"], "c": ["cp", "cache", "cat", "cm", "mc", "cd", "ctx", "bc", "cc", "co", "C", "ci", "cont", "cb", "fc", "lc", "ac", "gc", "uc", "nc", "tc", "cs", "cf", "pc", "dc", "t", "z", "ce", "ct", "ca", "cu", "unc"], "ans": ["an", "uns", "ars", "anks", "ms", "ians", "ents", "names", "ups", "rans", "orts", "ds", "aps", "ows", "ann", "actions", "ons", "ins", "ns", "ones", "ags", "aus", "ros", "vals", "ks", " scans", "ran", "arts", "lines", " means", "ats", "sets", "ends", "ants", "xs", "posts", "alls", "gs", "can", "ANS", "ls", "ads", "orders", "scan", "ions", "ots", "lan", "cs", "checks", "offs", "ums", "amps", "ens", "outs", "ids", "eds"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n  public static void main (String[] args) {\\n    Scanner in = new Scanner(System.in);\\n\\n    while (in.hasNext()) {\\n      int N = in.nextInt();\\n      int currMax = 0;\\n      int view = 0;\\n\\n      for (int i = 0; i < N; ++i) {\\n        int Hi = in.nextInt();\\n\\n        if (Hi >= currMax) {\\n           ++view;\\n        }\\n\\n        currMax = Math.max(currMax, Hi);\\n      }\\n \\n      System.out.println(view);\\n    }\\n  }\\n}", "target": "7", "substitutes": {"in": [" din", "old", "en", "query", "add", "std", "at", "In", "iter", "null", "it", "check", "local", "din", "file", " out", "from", "source", "all", "re", "mm", "world", "l", "user", "ins", "thin", "by", "bin", "out", "doc", "conf", "get", "inc", "lines", "sin", "r", "ini", "line", "err", "on", "ma", "io", "ind", "al", "can", "IN", "init", "log", "scan", "reader", "info", "per", "con", "raw", "gin", "isin", "is", "as", "stream", "input", "client", "n", "inn", "inf", "inner", "cin"], "N": ["NP", "NI", "S", "NA", "D", "NM", "NH", "Ne", "K", "No", "Net", "H", "NT", "V", "M", "C", "Sn", "NO", "Ni", "NE", "Size", "NB", "I", "TN", "Node", "R", "NN", "NR", "Ns", "Num", "Na", "NC", "NS", "L", "GN", "n", "ND", "O", "SN"], "currMax": ["corrcMax", "curRCan", "corrcMAX", "currbMin", "currierMax", "currcMin", "curerermax", "currmax", "curRMin", "curererMAX", " currbMin", "currtMin", "curtView", " currbMax", "currView", " curRCan", " curRMax", "currdMin", "corrcMin", "currdMax", " currView", "curRView", "corrMin", "currcMAX", "currierCan", " currbView", "curRmax", " currbmax", "currdmax", "currtMax", "currbmax", "curtMax", "currbCan", "corrMAX", "currbView", " currMin", " curRmax", "corrmax", " currdmax", "corrMax", "corrcmax", "curtmax", "curtMin", "curererMax", "currbMAX", "currbMax", " currdMin", "currMin", "currcmax", "curriermax", "curererMin", " currmax", "currCan", "curRMax", "currMAX", " currCan", " currdMax", "currcMax", "currtmax"], "view": ["result", "required", "column", "card", "virtual", "size", "display", "total", "open", "check", "max", "seen", "through", "read", "depth", "world", "see", "with", "expected", "sum", "views", "row", "VIEW", "out", "window", "version", "v", "type", "im", "id", "default", "range", "rows", "conv", "cv", "print", "actual", "show", "index", "shift", "scan", "stack", "watch", "used", "View", "raw", "head", "hi", "eye", "client", "node", "layout", "iew", "map"], "i": ["bi", "ish", "multi", "si", "ti", "ai", "ip", "it", "s", "iu", "ie", "zi", "xi", "di", "pi", "x", "mi", "v", "ini", "ci", "id", "sim", "j", "I", "ind", "init", "m", "index", "ii", "gi", "us", "is", "li", "hi", "ui", "n", "ix", "im", "ic", "phi", "u"], "Hi": ["Pic", "Mi", "If", "Next", "This", "Xi", "Ha", "No", "Cl", "HI", "H", "Va", "Ho", "Hu", "Lu", "Limit", "Si", "High", "Mr", "Go", "Is", "He", "Se", "His", "Val", "Top", "Lt", "Hist", "Ko", "Higher", "Max", "Mu", " hi", "View", "Hit", "hi", "Me", "Lo", "Tx", "hei", "Home", "Mid", "Py", "phi", "Prev", "Ti"]}}
{"code": "import java.util.*;\\n \\nclass Main {\\n  public static void main(String[] args) {\\n    Scanner scanner = new Scanner(System.in);\\n    int rows = scanner.nextInt();\\n    int cols = scanner.nextInt();\\n    int constant = scanner.nextInt();\\n    \\n    int[] code = new int[cols];\\n    for (int ix = 0; ix < cols; ix++) {\\n      code[ix] = scanner.nextInt();\\n    }\\n    \\n    int matches = 0;\\n    for (int row = 0; row < rows; row++) {\\n      int result = 0;\\n      for (int col = 0; col < cols; col++) {\\n        result += scanner.nextInt() * code[col];\\n      }\\n      \\n      if (result + constant > 0) matches++;\\n    }\\n    \\n    System.out.println(matches);\\n  }\\n}", "target": "68", "substitutes": {"scanner": ["scanNER", "canner", "caninner", "Scanter", "caner", "scanter", " scanNER", "Scaninner", "canener", " scanener", "generter", "canNER", "Scaner", "generNER", "Scanner", "canter", "scanener", "scaninner", " scaner", "Scanener", "scaner", "generner", "generer", " scanter", " scaninner"], "rows": ["reports", "ues", "dates", "users", "s", "orts", "blocks", "boxes", "frames", "tracks", "ows", "images", "eeks", "grades", "ords", "views", "uds", "ros", "urs", "rown", "inches", "ks", "rates", "ris", "lines", "uploads", "days", "rys", "runs", "olds", "OWS", "ards", "ays", "rices", "posts", "ries", "ches", "orders", "heads", "checks", "rooms", "bys", "rs", "pages"], "cols": [" colls", " coles", "rowes", "Colls", " colts", "columns", "Cols", "COLries", " colS", "ColS", "columnids", "rowls", "colries", "COLS", "columnts", "coles", "colids", "columnS", "colts", "ctids", "COLes", "colls", "COLts", "columnries", "COLids", "colS", "ctries", "cts", "columnes", "COLs", "rowS", "Coles", "columnls"], "constant": ["Conststant", "conststant", "varistant", "Constantly", "conanted", "variruction", "constants", "conant", "conants", "Constant", "variant", "Constants", "variants", "constantly", "construction", "Construction", "conantly", "varianted", "conruction", "Constanted", "variantly", "constanted"], "code": ["list", "create", "cue", "close", "content", "cache", "cod", "cycle", "zip", "test", "cat", "xx", "comment", "table", "state", "see", "ode", "cd", "char", "text", "x", "c", "template", "codes", "cell", "line", "config", "component", "value", "fore", "buffer", "scene", "function", "Code", "data", "xy", "tree", "ce", "city", "coe", "xxx", "count", "auto", "map", "sequence", "module", "note", "entry"], "ix": ["icks", "dx", "cross", "ish", "ms", "px", "nz", "ip", "set", "ace", "tx", "ie", "xx", "ect", "ico", "ax", "fix", "coord", "xi", "xt", "tex", " x", "cas", " ax", "aux", "loc", "fx", "x", "ican", "i", "IX", "mix", "addr", "js", "prefix", "isk", "ik", "sky", "act", "ew", "ux", "sys", "ick", "ox", "ixt", "xs", "wx", "iq", "ind", "ell", "q", "ac", "yx", "iy", "has", "rx", "index", "cs", "ex", "ce", "txt", "xxx", "ius", "lex"], "matches": ["mutched", "mhes", "matatches", " mathes", "munries", "mataches", "matched", "Matches", "mathes", "munters", "Matters", "munches", "mutters", "pathes", " mataches", "cathes", "mutches", " matchers", "catatches", "mutries", "mches", "catches", "matries", "Matched", " matatches", "mchers", "patatches", "matters", "catchers", "matchers", "pataches", "patches", "maches", "munched", "Matries"], "row": ["record", "bug", "oom", "ay", "sw", "pg", "ro", "run", "tr", "coord", "step", "rid", "rog", "family", "rown", "ob", "rs", "x", "form", "ran", "coll", "gr", "r", "no", "cell", "roll", "co", "uu", "ox", "bar", "error", "our", "ack", "rc", "ry", "batch", "arrow", "zero", "ow", "month", "rec", "raw", "rowd", "rox", "rot", "round", "rect", "ru", "ror", "cor"], "result": ["response", "report", "feature", "complete", "results", "total", "successful", "success", "integer", "true", "ULT", "diff", "test", "product", "next", "term", "progress", "sum", "ful", "correct", "def", "goal", "mate", "relation", "r", "score", "date", "ret", "current", "search", "done", "res", "currency", "process", "power", "value", "trade", "duration", "Result", "continue", "data", "match", "sequence", "vector", "different"], "col": ["fl", "COL", "column", "bug", "act", "axis", "obj", "ch", "prop", "vc", "mun", "pt", "cat", "ory", "lat", "msg", "pool", "key", "ll", "cal", "block", "tab", "ico", "ax", "coord", "box", "feat", "cmp", "crit", "loc", "char", "el", "c", "unit", "form", "ctx", "coll", "icol", "def", "mot", "Col", "cos", "bc", "cell", "fc", "roll", "pat", "ox", "err", "co", "ont", "cont", "ell", "ac", "fat", "child", "ort", "cond", "nc", "cmd", "con", "pc", "txt", "ct", "val", "rect", "cor"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main{\\n\tpublic static void main(String[] args) throws IOException {\\n\t\ttry (BufferedReader br = new BufferedReader(\\n\t\t\t\tnew InputStreamReader(System.in))) {\\n\\n\t\t\tString in = br.readLine();\\n\t\t\tString chr[] = in.split(\" \");\\n\t\t\tint a = Integer.parseInt(chr[0]);\\n\t\t\tint b = Integer.parseInt(chr[1]);\\n\t\t\t System.out.println(Math.max(a+b, Math.max(a-b, a*b)));\\n\t\t}\\n\t}\\n}", "target": "188", "substitutes": {"in": [" din", "query", "old", "part", "std", "In", "null", "check", "din", "read", "source", "rin", "world", "user", "sum", "ins", "rt", "conf", "bin", "out", "doc", "i", "str", "lines", "r", "ini", "line", "err", "on", "res", "print", "q", "IN", "body", "show", "reader", "OUT", "info", "ln", "con", "readable", "gin", "nin", "isin", "raw", "stream", "input", "n", "inn", "sql", "inner", "inf", "sample", "cin", "mn"], "chr": [" char", "motr", " carr", "Chp", "charrs", " carar", "achr", "Chrt", " chdr", "Chb", "Chra", "motdr", "chb", " chb", "Chdr", "achar", " chra", "charrt", "char", "motb", "Chr", "achrs", " chp", "charar", "chrt", "chp", " carra", "Chrs", " carp", "chra", "achrt", "chrs", "charr", "chdr", "motar", "Char"], "a": ["la", "ba", "da", "ea", "at", "ai", "au", " A", "ama", "aaa", "aj", "area", "x", "i", "c", "A", "r", "act", "ar", "ia", "ta", "ma", "f", "ao", "va", "alpha", "ac", "ae", "m", "ga", "oa", "aa", "sta", "t", "ova", "as", "to", "na", "z", "fa", "pa", "sa", "ca", "div", "aq", "p", "val", "al"], "b": ["nb", "bi", "ba", "ab", "bool", "be", "bb", "fb", "ib", "sb", "e", "eb", "l", "bd", "ob", "gb", "db", "c", "i", "d", "g", "r", "bc", "v", "bt", "cb", "j", "f", "h", "m", "br", "t", "base", "z", "B", "rb", "n", "p", "u"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.math.BigDecimal;\\n\\npublic class Main {\\n\\n\t/** ?????? */\\n\tstatic final BigDecimal capital = BigDecimal.valueOf(100000);\\n\\n\t/** ?????? */\\n\tstatic final BigDecimal interest = BigDecimal.valueOf(0.05);\\n\\n\t/** ??? */\\n\tstatic final BigDecimal rate = BigDecimal.valueOf(1).add(interest);\\n\\n\t/**\\n\t * ????????\u00b0???????????\u00b0???????????????\\n\t * ????\u00b4???\u00a8???Debt Hell(????????\u00b0???)\\n\t * @param args\\n\t * @throws IOException\\n\t */\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tInputStreamReader is = new InputStreamReader(System.in);\\n\t\tBufferedReader br = new BufferedReader(is);\\n\t\tString input = br.readLine();\\n\\n\t\t// ????????\u00b6?????\\???????????\u00b1????????????????????????????????????\\n\t\tint weeks = Integer.valueOf(input);\\n\\n\t\t// ?\u00a8??????????????????????????????????????\u00b4?\\n\t\tBigDecimal result = capital;\\n\t\tfor (int i = 0; i < weeks; i++) {\\n\t\t\t// ????????????????????????????????????1000???????????????????????????\\n\t\t\tresult = roundUpLowerThousand(rate.multiply(result).setScale(0, BigDecimal.ROUND_UP));\\n\t\t}\\n\\n\t\tSystem.out.println(result);\\n\t}\\n\\n\t/**\\n\t * ????\u00a7\u00b0?????\u00b0??????1000???????????????????????????????????\u00b4\\n\t *\\n\t * @param target ????\u00a7\u00b0??\u00b0???\\n\t * @return ????????????????????????\\n\t */\\n\tprivate static BigDecimal roundUpLowerThousand(BigDecimal target) {\\n\t\t// ?\u00a8????????????\u00a8??????????????\u00b0???1000???\\n\t\tBigDecimal basisNumber = BigDecimal.valueOf(1000);\\n\t\tBigDecimal result = target.divide(basisNumber).setScale(0, BigDecimal.ROUND_UP);\\n\\n\t\treturn result.multiply(basisNumber);\\n\t}\\n}", "target": "173", "substitutes": {"capital": ["limit", "cycle", "efficiency", "gain", "cap", "best", " capacity", "clock", "water", " budget", " speed", " credit", "fee", " reward", "memory", "budget", "boost", "fine", "charge", "age", "capacity", "peak", "life", "base", "temp", "mem", "mind"], "interest": ["rib", "agency", "limit", "focus", "bb", "fund", "trust", "consider", "efficiency", "income", "IB", "water", "repair", "fee", "amount", "sky", "seed", "budget", "cost", "fine", "Interest", "supp", "period", "io", "rss", "issue", "rice", "length", "force", "value", "money", "gravity", "storage", "dollar", "risk", "dust", "mind", "grow", "fed", "cor"], "rate": ["limit", "chance", "trust", "rat", "water", "price", "rt", "fee", "rates", "amount", "rating", "speed", "r", "norm", "Rate", "range", "resource", "rss", "feed", "rice", "power", "force", "frac", "scale", "base", "rand", "tax", "grow"], "is": ["in", "ms", "si", "it", "nis", "s", "ais", "es", "ins", "ios", "iss", "i", "isf", "ys", "rys", "sys", "im", "Is", "isi", "its", "IS", "ls", "are", "fs", "isl", "bis", "os", "iris", "sit", "sis", "as", "lis", "isa", "isc", "ris", "ic", "ri"], "br": ["wr", "ber", "bi", "bl", "hr", "ab", "kr", "ch", "BR", "Br", "vr", "mr", "eb", "fr", "tr", "b", "dr", "bd", "cr", "gr", "r", "bh", "yr", "bt", "rob", "sr", "lr", "shr", "bp", "bre", "adr", "rb", "bm", "pr", "ctr", "bro"], "input": ["result", "in", " inputs", "qa", "Input", "msg", " feedback", "state", "foo", "text", "out", " Input", "line", "pid", " status", " cmd", "answer", "command", "buffer", "cmd", "output", "raw", "data", " ans", " cur", "val", " residual", " what"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        PrintWriter out = new PrintWriter(System.out);\\n//        DecimalFormat df = new DecimalFormat(\"0.00000000\");\\n        \\n        final int N = Integer.parseInt(sc.next());\\n        final int K = Integer.parseInt(sc.next());\\n        long[] a = new long[N];\\n        long sum = 0;\\n        for (int i=0; i<N; i++)\\n            a[i] = Long.parseLong(sc.next());\\n        Arrays.sort(a);\\n        for (int i=0; i<N-K; i++)\\n            sum += a[i];\\n        out.println(sum);\\n        \\n        out.flush();\\n    }\\n}", "target": "230", "substitutes": {"sc": ["si", "ch", "sb", "sw", "src", "anc", "cr", "Sc", "c", "sys", "screen", "SC", " Sc", "rc", "sr", "gc", "scan", "uc", "nc", "cs", "se", "pc", "dc", "sa", "txt", "sv", "rs", "sp"], "out": ["result", "in", "report", "at", "ch", "w", "file", "msg", "put", "o", "Out", "sum", "outs", "crit", "th", "x", "gr", "str", "r", "nt", "sys", "screen", "err", "cb", "name", "error", "io", "res", "print", "log", "write", "OUT", "info", "cmd", "output", "os", "writer", "ser", "to", "exit", "ex", "txt", "n", "p", " cout"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\\n\\n\tpublic static void bubble_sort(int[] a) {\\n\t\tint num_swaps = 0;\\n\t\tfor (int i = 0; i < a.length; i++) {\\n\t\t\tfor (int j = a.length - 1; j >= i+1; j--) {\\n\t\t\t\tif (a[j] < a[j-1]) {\\n\t\t\t\t\tint tmp = a[j];\\n\t\t\t\t\ta[j] = a[j-1];\\n\t\t\t\t\ta[j-1] = tmp;\\n\t\t\t\t\tnum_swaps++;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tdisplay(a);\\n\t\tSystem.out.println(num_swaps);\\n\t}\\n\\n\tpublic static void display(int[] a) {\\n\t\tfor (int i = 0; i < a.length; i++) {\\n\t\t\tSystem.out.print(a[i]);\\n\t\t\tif (i != a.length - 1)\\n\t\t\t\tSystem.out.print(\" \");\\n\t\t\telse\\n\t\t\t\tSystem.out.print(\"\\n\");\\n\t\t}\\n\t}\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner s = new Scanner(System.in);\\n\t\tint n = s.nextInt();\\n\t\tint[] a = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\ta[i] = s.nextInt();\\n\t\t}\\n\t\tbubble_sort(a);\\n\t}\\n\\n}\\n\\n", "target": "170", "substitutes": {"a": ["ap", "an", "list", "da", "at", "qa", "ace", "all", "l", "area", "out", "c", "window", "ae", "go", "as", "pa", "p", "result", "ab", "au", "cache", "o", "b", "changes", "A", "y", "ia", "h", "alpha", "ac", "aa", "array", "ca", "ava", "arr", "history", "la", "ba", "eas", "obj", "aos", "aux", "el", "era", "g", "act", "abs", "oa", "t", "na", "fa", "ed", "parts", "ea", "e", "w", "aka", "aaa", "form", "am", "d", "trace", "v", "ar", "ma", "f", "ao", "ack", "app", "m", "ata", "ga", "att", "sta", "data", "z", "sa", "u"], "num_swaps": ["num_skappers", "num_shims", "num_shAPS", "num_shap", "num_shats", "num_shappers", "num_swims", "num_Swaps", "num_waps", "num_swap", "num_skap", "num_snapped", "num_shapped", "num_snats", "num_Swap", "num_skaps", "num_swapped", "num_swappers", "num_wps", "num_swats", "num_shaps", "num_swAPS", "num_wats", "num_shps", "num_Swappers", "num_SwAPS", "num_snaps", "num_snps", "num_Swims", "num_wapped", "num_swps", "num_skAPS", "num_Swapped", "num_skapped", "num_skims"], "i": ["in", "multi", "si", "at", "ip", "Index", "PI", "chain", "l", "zi", "di", "my", "ini", "me", "info", " I", "hi", "p", "phi", "it", "ie", "o", "qi", "y", "sim", "ia", "uri", "inter", "q", "ami", "init", "index", "MI", "ii", "gi", "us", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "ei", "g", "io", "I", "ind", "remote", "ij", "is", "li", "ui", "ix", "ti", "ai", "e", "umi", "xi", "pi", "mi", "v", "ity", "ci", "id", "f", "iq", "php", "m", "ki", "\u0438", "ims", "fi", "im", "u"], "j": ["jo", "Ja", "old", "bi", "oj", "bj", "dt", "adj", "obj", "jc", "json", "J", "it", "pt", "o", "fr", "kid", "jit", "dj", "b", "k", "jj", "aj", "jl", "bs", "bo", "x", "jp", "uj", "rel", "js", "g", "my", "v", "ja", "y", "sim", "lock", "h", "big", "ind", "jac", "ij", "q", "je", "kj", "m", "exp", "zone", "br", "t", "xy", "z", "jump", "job", "other", "ji", "pr", "p"], "tmp": ["mp", "tt", "old", "obj", "nd", "pkg", "perm", "img", "emp", "test", "same", "term", "mm", "lib", "table", "jj", "cmp", "managed", "prime", "db", "ctx", "prefix", "tf", "td", "needed", "py", "mk", "pre", "attr", "sq", "tc", "etc", "t", "clip", "timeout", "xy", "gm", "repl", "txt", "temp", "yy", "orig", "mut", "sp"], "s": ["ses", "ms", "S", "pers", "ws", "sts", "sb", "ds", "stats", "es", "l", "b", "ins", "ns", "bs", "c", "ts", "js", "comm", "ys", "vs", "r", "sys", "ats", "h", "xs", "gs", "ls", "fs", "ss", "sq", "cs", "qs", "bis", "less", "as", "ps", "is", "sv", "rs", "hs", "gets"], "n": ["nb", "an", "en", "ot", "nd", "nn", "nz", "nw", "o", "l", "np", "ns", "out", "c", "d", "un", "g", "nm", "nt", "v", "no", "ng", "name", "number", "sn", "ni", "f", "q", "fn", "nu", "m", "nl", " N", "nc", "ne", "nan", "t", "na", "z", "cn", "num", "net", "N", "p", "mn"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.io.PrintWriter;\\nimport java.util.Arrays;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\\n\tstatic BufferedReader in;\\n\tstatic PrintWriter out;\\n\tstatic StringTokenizer tok;\\n\\n\tvoid solve() throws IOException {\\n\t\tint[] a = nia( ni());\\n\t\tArrays.sort(a);\\n\t\tout.println(a[a.length-1]-a[0]);\\n\t}\\n\\n\tString ns() throws IOException {\\n\t\twhile (!tok.hasMoreTokens()) {\\n\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\\n\t\t}\\n\t\treturn tok.nextToken();\\n\t}\\n\\n\tint ni() throws IOException {\\n\t\treturn Integer.parseInt(ns());\\n\t}\\n\\n\tlong nl() throws IOException {\\n\t\treturn Long.parseLong(ns());\\n\t}\\n\\n\tdouble nd() throws IOException {\\n\t\treturn Double.parseDouble(ns());\\n\t}\\n\\n\tString[] nsa(int n) throws IOException {\\n\t\tString[] res = new String[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tres[i] = ns();\\n\t\t}\\n\t\treturn res;\\n\t}\\n\\n\tint[] nia(int n) throws IOException {\\n\t\tint[] res = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tres[i] = ni();\\n\t\t}\\n\t\treturn res;\\n\t}\\n\\n\tlong[] nla(int n) throws IOException {\\n\t\tlong[] res = new long[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tres[i] = nl();\\n\t\t}\\n\t\treturn res;\\n\t}\\n\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tin = new BufferedReader(new InputStreamReader(System.in));\\n\t\tout = new PrintWriter(System.out);\\n\t\ttok = new StringTokenizer(\"\");\\n\t\tMain main = new Main();\\n\t\tmain.solve();\\n\t\tout.close();\\n\t}\\n}", "target": "214", "substitutes": {"in": [" din", "en", "ain", "In", "iter", "it", "null", "din", "read", "file", "from", "source", "rin", "o", "run", "l", "b", "ins", "rt", "bin", "doc", "inc", "str", "r", "or", "ini", "err", "io", "ind", "q", "IN", "init", "m", "log", "reader", "info", "output", "con", "gin", "t", "isin", "is", "input", "rb", "net", "inn", "inf", "inner", "er", "ic", "cin", "ro"], "out": ["outer", "list", "ot", "at", "ch", "obj", "OU", "it", "null", "w", "file", "aos", "all", "pool", "o", "Out", "l", "b", "outs", "ns", "x", "c", "d", "window", "r", "nt", "or", "v", "sys", "lock", "screen", "err", "io", "gt", "print", "log", "write", "OUT", "output", "os", "ne", "writer", "t", "to", "ex", "input", "net", "txt", "client", "inner", "p", "ou", "ro"], "tok": ["tyook", "took", "toc", "etick", "atok", "tock", "trok", "ytoken", "eticker", " tog", "atck", " took", "vticker", "toks", "atoks", "vtick", "ytick", "tick", "vtople", "etoken", "ytok", "Tok", "tyok", "tyoc", "tyog", "ptod", "token", "ptok", "atop", " toks", "gtok", " top", "ttok", "top", "vtoken", "tod", "Top", "gtople", "Tod", "vtok", "toop", "ttop", "gtoc", "ptk", "gticker", "trog", "troc", "Tk", "ttod", " ticker", "tk", "tck", " tople", "tog", "ticker", "ptop", "tooks", " tck", " toc", "tople", "vtoc", "trook", "etok", "yticker", "ttk"], "a": ["ap", "an", "ba", "ab", "eas", "parts", "da", "ea", "au", "s", "aaaa", "all", "aka", "aaa", "b", "ada", "changes", "aux", "area", "c", "am", "d", "A", "era", "ta", "ma", "ao", "va", "alpha", "app", "ae", "ac", "m", "wa", "abs", "ga", "oa", "aa", "sta", "att", "as", "t", "pa", "array", "na", "fa", "aura", "sa", "ca", "p", "ava", "arr"], "n": ["nb", "an", "en", "nn", "names", "it", "w", "network", "all", "ll", "o", "l", "np", "b", "k", "ns", "pi", "c", "x", "d", "el", "comm", "un", "g", "r", "nt", "v", "nm", "y", "ng", "on", "name", "j", "ren", "sn", "ni", "h", "fn", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "num", "cn", "count", "len", "net", "N", "p", "mn"], "res": ["resh", "result", "rep", "response", "des", "ms", "resp", "results", "pers", "ress", "sol", "red", "rem", "re", "expr", "Res", "req", "aux", "resources", "details", "vals", "vec", "rel", "cons", "RES", "gr", "js", "def", " Res", "act", "sys", "rev", "ret", "resource", "conv", "ren", "reg", "rest", "pas", "cond", "arr", "cms", "exp", "usr", "ps", "rand", "stock", "grid", "pres", "windows", "respons", "rs", "reset"], "i": ["ies", "bi", "multi", "si", "ti", "ai", "ip", "it", "set", "iu", "ie", "PI", "zi", "xi", "dr", "di", "pi", "ful", "qi", "ice", "ei", "this", "my", "mi", "parent", "ity", "ini", "ly", "ci", "y", "err", "oi", "sim", "you", "j", "io", "uri", "f", "I", "ij", "q", "iy", "init", "php", "me", "ami", "ki", "\u0438", "MI", "batch", "gi", "ii", "info", "us", "mac", "eu", "ims", "is", "li", "ex", "ui", "cli", "client", "ji", "ix", "fi", "im", "phi", "u", "fire"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint maxNum = scan.nextInt();\\n\t\tList<Integer> numArray = new ArrayList<Integer>();\\n\t\tfor(int i = 0; i < maxNum; ++i) {\\n\t\t\tnumArray.add(scan.nextInt());\\n\t\t}\\n\t\tscan.close();\\n\\n\t\tint count = 0;\\n\t\twhile(true) {\\n\t\t\tboolean finishFlg = false;\\n\t\t\tfor(int i=0; i < numArray.size(); ++i) {\\n\t\t\t\t// 2\u3067\u5272\u308c\u308b\u306a\u3089\u5272\u3063\u3066\u66f4\u65b0\\n\t\t\t\tif(numArray.get(i) % 2 == 0) {\\n\t\t\t\t\tnumArray.set(i, numArray.get(i) / 2);\\n\t\t\t\t} else {\\n\t\t\t\t\tfinishFlg = true;\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tif(finishFlg) break;\\n\t\t\tcount++;\\n\t\t}\\n\t\tSystem.out.println(count);\\n\t}\\n}\\n", "target": "196", "substitutes": {"scan": ["an", "query", "in", "report", " Scan", "scroll", "ch", "nn", "sync", "pass", "check", "set", "read", "gen", "connect", "send", "ann", "clean", "run", "see", "save", "by", "row", "seek", "ran", "sc", "get", "parse", "sin", "ner", "r", "find", "skip", "sys", "proc", "black", "plan", "search", "can", "reach", "gc", "gate", "san", "system", "sche", "se", "con", "ser", "link", "scale", "stat", "n", "store", "sur", "sql", "Scan", " scanner"], "maxNum": ["maxSum", " MaxSum", " maxVal", "maxVal", " MaxLen", " MaxNum", "maxnum", "MaxNum", " maxLen", " maxSum", "MaxEnt", " maxEnt", " maxnum", "axLen", "axNum", " MaxEnt", "maxEnt", "MaxVal", "axVal", "Maxnum", "MaxLen", "maxLen", "MaxSum", "axnum"], "numArray": [" numArea", "NUMArray", "intArray", "NUMArea", "nmAr", "nmList", " numApp", "numList", "nmArray", "NUMRoot", " numRoot", "numRoot", "NUMList", "intList", "intArea", "intApp", "NUMAr", "numArea", "NUMMap", "numMap", "numApp", " numAr", " numMap", "intRoot", "numAr", "nmMap", "NUMApp", " numList"], "i": ["yi", "bi", "in", "ms", "multi", "si", "ti", "ai", "ip", "it", "s", "iu", "ie", "gu", "zi", "xi", "di", "pi", "qi", "x", "c", "ei", "mi", "v", "ini", "uu", "ci", "y", "sim", "err", "id", "j", "io", "uri", "iq", "I", "ind", "q", "ij", "init", "me", "m", "ki", "batch", "gi", "ii", "info", "us", "is", "li", "hi", "ui", "ji", "n", "cli", "ix", "p", "im", "ic", "phi", "u"], "count": ["nb", "add", "size", "list", "close", "last", "set", "cache", "sum", "counter", "found", "conf", "c", "amount", "flag", "skip", "ref", "start", "process", "length", "index", "Count", "offset", "ount", "z", "code", "num", "p"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main\\n{\\n\tpublic static void main(String [] Args)\\n\t{\\n\t\tScanner in=new Scanner(System.in);\\n\t\tint n=in.nextInt();\\n\t\tdouble ans;\\n\t\tans=n/2;\\n\t\tans=ans+(double)(n%2);\\n\t\tSystem.out.println(ans/(double)n);\\n\t\t\\n\t}\\n}\\n", "target": "64", "substitutes": {"Args": ["Arg", "Main", "Line", "Command", "In", "Thread", "Names", "arg", "Flags", "\u30b9", "Ex", "GS", "gs", " arguments", "Str", "Path", "GV", "Parts", "cmd", " Arg", "Init", "uments", " arg", "Files", "Name"], "in": [" din", "en", "add", "std", "In", "null", "din", "read", "file", "all", "rin", "run", "world", "user", "k", "ins", "sum", "thin", "conf", "bin", "out", "doc", "i", "c", "char", "get", "inc", "sin", "r", "sys", "ini", "proc", "line", "err", "id", "f", "ind", "IN", "scan", "reader", "info", "ln", "us", "gin", "isin", "is", "serv", "input", "inn", "inf", "inner", "cin"], "n": ["nb", "nv", "an", "en", "size", "nn", "nw", "non", "nat", "o", "l", "np", "ns", "i", "c", "d", "g", "norm", "nm", "nt", "v", "tn", "ng", "j", "ren", "number", "sn", "f", "ni", "nu", "m", "nl", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "count", "num", "len", "dn", "N", "gn", "p", "mn"], "ans": ["an", "uns", "en", "ars", "ms", "mas", "wan", " sans", "s", "orts", "ds", "rans", " plans", "aos", "aps", " olds", "ann", "es", "actions", "ons", "jas", "ns", "ins", "cas", "aus", "anc", "vals", " pan", " fans", "nas", "ks", " scans", " orphans", "pan", "rates", "ran", "arts", "vs", "lines", " means", "ats", "oss", "nets", "anes", "ants", "eps", "posts", "ANS", "can", "gs", "ls", " Ans", " ants", "scan", "ams", "lan", "cs", "os", "as", " spans", "offs", "amps", "gn", "ens", "AN", "An", "leans"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main\\n{\\n\tpublic static void main(String [] Args)\\n\t{\\n\t\tScanner in=new Scanner(System.in);\t\t\\n\t\tint n=in.nextInt();\\n\t\tint flag=0;\\n\t\tif(n>81)\\n\t\t{\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t\telse\\n\t\t{\\n\t\t\tfor(int i=1;i<=9;i++)\\n\t\t\t{\\n\t\t\t\tif(n%i==0&&n/i<10)\\n\t\t\t\t{\\n\t\t\t\t\tSystem.out.println(\"Yes\");\\n\t\t\t\t\tflag=1;\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tif(flag==0)\\n\t\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t}\\n}\\n", "target": "194", "substitutes": {"Args": ["Arg", "Main", "Line", "Ws", "Linux", "Command", "Cmd", "In", "Options", "Names", "Out", "Generic", "arg", "Flags", "Ex", "GS", "gs", " arguments", "Str", "Parts", "GV", "Path", "cmd", "Init", "uments", "Files", "Name"], "in": [" din", "en", "add", "std", "In", "din", "read", " out", "from", "all", "file", "run", "user", "k", "ins", "sum", "thin", "char", "bin", "out", "doc", "conf", "get", "inc", "sin", "r", "sys", "ini", "line", "err", "id", "io", "conv", "ind", "IN", "scan", "reader", "info", "ln", "us", "gin", "isin", "is", "stream", "input", "inn", "inf", "inner", "cin"], "n": ["nb", "an", "en", "nn", "nw", "non", "nor", "w", "o", "l", "np", "ns", "c", "d", "nr", "g", "norm", "nt", "nm", "no", "v", "tn", "ng", "j", "h", "number", "sn", "ni", "m", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "net", "dn", "N", "gn", "inn", "p"], "flag": ["field", "limit", "Flag", "bug", "bit", "af", "and", "condition", "sync", "sign", "set", "level", "fd", "flags", "ord", "status", "lv", "group", "state", "ld", "sum", "tag", "window", "button", "lock", "id", "ret", "bird", "mask", "f", "age", "FLAG", "stage", "lag", "nl", "cond", "cloud", "log", "cmd", "continue", "store", "weight", "wait", "ground"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "gu", "o", "l", "zi", "xi", "di", "pi", "qi", "x", "d", "ei", "ik", "mi", "v", "ini", "ci", "y", "id", "err", "iso", "sim", "j", "oi", "a", "iq", "I", "ind", "init", "me", "m", "index", "ki", "\u0438", "asi", "ii", "gi", "us", "is", "li", "base", "z", "hi", "ui", "cli", "sql", "ix", "fi", "im", "ic", " j", "u"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n\\n        int A = sc.nextInt();\\n        int B = sc.nextInt();\\n        int C = sc.nextInt();\\n        int X = sc.nextInt();\\n\\n        System.out.println(solve(A, B, C, X));\\n\\n        sc.close();\\n    }\\n\\n    static int solve(int A, int B, int C, int X) {\\n        int result = 0;\\n        for (int i = 0; i <= A; ++i) {\\n            for (int j = 0; j <= B; ++j) {\\n                for (int k = 0; k <= C; ++k) {\\n                    if (i * 500 + j * 100 + k * 50 == X) {\\n                        ++result;\\n                    }\\n                }\\n            }\\n        }\\n\\n        return result;\\n    }\\n}", "target": "127", "substitutes": {"sc": ["ch", "sync", "asc", "mc", "osc", "ctrl", "cmp", "anc", "cr", "ec", "Sc", "ko", "arc", "c", "sub", "inc", "cgi", "bc", "cc", "sys", "fc", "hl", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "pb", "nc", "sq", "cs", "tc", "system", "ck", "uc", "pc", "ctl", "isc", "syn", "desc", "scl", "sh", "sv", "sp", "esc"], "A": ["AB", "S", "In", "Al", "AT", "This", "D", "BA", "T", "AF", "mA", "E", "AC", "JA", "AI", "H", "As", "P", "AS", "RA", "Ar", "AD", "CA", "V", "SA", "Array", "M", "AE", "LA", "AR", "a", "I", "G", "ABC", "AA", "Ag", "R", "App", "AL", "IA", "GA", "AP", "L", "Av", "AU", "O", "API", "AN", "An"], "B": ["BG", "Lab", "AB", "Bs", "Bu", "BR", "J", "BB", "BU", "BF", "RB", "Back", "BA", "T", "CB", "Bitcoin", "b", "IB", "Rob", "Y", "BT", "TB", "Blue", "Be", "V", "BD", "Bi", "BO", "SB", "BC", "WB", "NB", "I", "G", "BE", "BI", "OB", "BS", "FB", "EB", "LB", "PB", "BL", "L", "Ber", "JB", "GB", "DB"], "C": ["CS", "EC", "CP", "S", "CT", "Cu", "D", "CU", "T", "CB", "IC", "CO", "E", "K", "Cl", "AC", "Cos", "Y", "GC", "Container", "DC", "JC", "VC", "c", "Z", "V", "CA", "Ch", "Car", "CH", "BC", "G", "FC", "CC", "Cs", "CN", "YC", "WC", "CW", "CE", "CD", "CNN", "L", "Q", "CF", "N", "Co", "CI", "CM", "CR", "Con"], "X": ["XT", "FX", "S", "J", "ZX", "T", "IC", "Xi", "E", "K", "U", "EX", "H", "Y", "TX", "Z", "IX", "x", "P", "XL", "DX", "V", "XM", "M", "UX", "Int", "CH", "W", "G", "I", "R", "CE", "XX", "XP", "L", "OX", "F", "Q", "Tx", "N"], "result": ["expression", "feature", "complete", "results", "integer", "total", "success", "unique", "true", "ULT", "product", "diff", "test", "term", "table", "expected", "sum", "counter", "found", "performance", "goal", "flag", "relation", "turn", "trace", "point", "r", "score", "date", "degree", "ret", "default", "current", "search", "resource", "finder", "number", "currency", "rank", "value", "recent", "Result", "zero", "output", "function", "valid", "message", "match", "sequence", "vector", "event"], "i": ["bi", "multi", "si", "ai", "ip", "it", "iu", "ie", "ir", "xi", "di", "pi", "ei", "ion", "mi", "ity", "ini", "ci", "id", "ia", "a", "iq", "I", "ind", "ij", "ami", "index", "ki", "gi", "info", "ii", "ims", " I", "IJ", "li", "hi", "ui", "ji", "II", "ix", "im", "ic", "ani", "phi", "ri"], "j": ["jo", "bi", "bj", "oj", "bl", "obj", "jc", "json", "J", "ie", "fr", "jit", "dj", "b", "jj", "jas", "aj", "jl", "bs", "el", "jp", "c", "uj", "og", "js", "rel", "str", "g", "ion", "ja", "y", "jac", "ij", "je", "kj", "br", "job", "z", "jump", "other", "ji", "pr", "n", "be", "fire"], "k": ["ka", "kl", "ke", "kr", "kn", "wk", "max", "kind", "ark", "sk", "key", "kg", "kan", "kid", "K", "ko", "ks", "g", "ik", "ek", "kar", "kat", "kt", "ku", "ak", "ph", "kw", "uk", "kk", "kj", "mk", "ki", "km", "ck", "tk", "dk", "unk", "ijk", "kh"]}}
{"code": "import java.io.*;\\n\\npublic class Main{\\n\tpublic static void main(String[] args) throws IOException{\\n\t\tBufferedReader buf = new BufferedReader(new InputStreamReader(System.in));\\n\tint a,b;\\n\tString s = buf.readLine();\\n\tString[] strlAry =s.split(\" \");\\n\tfor(int i=0;i<strlAry.length;i++){\\n\t}\t\\n\ta= Integer.parseInt(strlAry[0]);\\n\tb= Integer.parseInt(strlAry[1]);\\n\tSystem.out.println(a*b+\" \"+2*(a+b));\t\\n\t}\\n}", "target": "92", "substitutes": {"buf": ["nb", "bl", "cur", "uf", "buff", "pkg", "ah", "tmp", "pool", "block", "tr", "cap", "req", "bs", "foo", "bo", "db", "ctx", "def", "bg", "bh", "bar", "cb", "Buff", "alph", "cv", "bag", "mu", "buffer", "pb", "mb", "reader", "Buffer", "dev", "cmd", "etc", "raw", "bp", "br", "rot", "priv", "rb", "aer", "queue", "mem"], "a": ["an", "aff", "la", "ba", "ab", "af", "eas", "da", "ea", "at", "ai", "au", "aka", "o", "l", "aaa", "aj", "area", "p", "am", "A", "era", "act", "ar", "ia", "ta", "ma", "ao", "va", "ac", "ae", "m", "ga", "oa", "aa", "sta", "t", "as", "ova", "pa", "na", "sa", "ca", "aq", "xa", "al", "u"], "b": ["nb", "bi", "ba", "ab", "bb", "fb", "ib", "sb", "bu", "wb", "BA", "eb", "l", "bs", "ob", "gb", "bo", "db", "d", "g", "r", "bc", "bf", "v", "bar", "cb", "j", "f", "back", "beta", "buffer", "blue", "bis", "bp", "br", "base", "z", "B", "rb", "be"], "s": ["ms", "S", "space", "ws", "sb", "w", "csv", "l", "ns", "strings", "c", "ts", "js", "str", "g", "r", "v", "ats", "its", "f", "q", "gs", "string", "ls", "m", "ss", "sq", "qs", "se", "t", "ps", "is", "txt", "n", "sql", "p", "sv", "rs"], "strlAry": ["strlBoy", "strlArrys", "strvlLaRY", "strpAry", "strrlAoy", "strlLaRY", "strvlLary", "strlBRY", "strrlATry", "strvlAry", "strlATry", "strlLarys", "strlAries", "strrlAri", "strlGry", "strlsAry", "strpARY", "strpAri", "strlDRY", "strlArys", "strlDri", "strlCTry", "strvlLack", "strlAri", "strvlAck", "strlAble", "strlBries", "strlPck", "strlDry", "strlmAoy", "strvlArys", "strlsArys", "strlGri", "strrlAry", "strlPble", "strlLable", "strlArRY", "strlCri", "strlArck", "strlBTry", "strlLary", "strlArry", "strrlmAry", "strvlLarys", "strlARY", "strlCoy", "strlAoy", "strlBri", "strlAck", "strlGries", "strlsAble", "strlGRY", "strrlmAoy", "strpDRY", "strpDry", "strlmAry", "strlsAck", "strvlARY", "strrlmAri", "strpAries", "strlPry", "strlmATry", "strlmAri", "strrlmATry", "strlPrys", "strlBry", "strlLack", "strpDries", "strpDri", "strlDries", "strlCry"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "set", "gu", "ie", "zi", "xi", "di", "pi", "qi", "x", "c", "ei", "mi", "ini", "ci", "y", "id", "sim", "err", "span", "j", "io", "I", "ind", "q", "init", "m", "ii", "us", "is", "li", "z", "ex", "hi", "ui", "cli", "n", "sql", "ix", "sequence", "im", "ic", "phi"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString s = sc.nextLine();\\n\t\tchar a = s.charAt(0);\\n\t\tchar b = s.charAt(1);\\n\t\tchar c = s.charAt(2);\\n\t\tchar d = s.charAt(3);\\n\t\tchar[] chars = new char[] { a, b, c, d };\\n\\n\t\tfor (int i = 0; i <= 3; i++) {\\n\t\t\tint con = 0;\\n\t\t\tfor (int n = 0; n <= 3; n++) {\\n\t\t\t\tif (chars[i] == chars[n]) {\\n\t\t\t\t\tcon += 1;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tif (con == 2) {\\n\t\t\t\tif (i == 3) {\\n\t\t\t\t\tSystem.out.println(\"Yes\");\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t} else {\\n\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\t}\\n}", "target": "33", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "out", "sub", "dec", "bc", "cc", "sys", "soc", "SC", "lc", "rc", "sch", "sec", "gc", "cl", "scan", "ss", "nc", "sq", "cs", "system", "pc", "ser", "isc", "capt", "desc", "scl", "sh", "sv", "sp", "esc"], "s": ["ms", "S", "space", "ws", "sts", "sb", "sf", "sw", "src", "sol", "stats", "es", "l", "ns", "ins", "bs", "ts", "js", "str", "g", "r", "sys", "ats", "j", "its", "h", "conv", "gs", "south", "ls", "m", "sam", "ss", "abs", "sq", "less", "cs", "os", "spec", "se", "qs", "t", "ps", "is", "sql", "sv", "rs", "sp"], "a": ["an", "aff", "la", "ba", "ab", "af", "eas", "ea", "ain", "ai", "au", "aaa", "am", "A", "act", "r", "ar", "ame", "ia", "ak", "ma", "admin", "ao", "va", "app", "ac", "ae", "ach", "ata", "oa", "aa", "as", "sa", "ca", "al", "u"], "b": ["nb", "bi", "abb", "ab", "bl", "ba", "bb", "fb", "ib", "sb", "erb", "eb", "bs", "ob", "by", "db", "gb", "bc", "bf", "y", "cb", "rob", "ble", "mb", "bis", "br", "B", "rb", "ed", "be"], "c": ["cp", "ch", "cm", "cd", "ec", "cr", "arc", "g", "or", "bc", "cc", "fc", "C", "ci", "cb", "lc", "rc", "ac", "uc", "cs", "cf", "etc", "dc", "ce", "code", "ct", "ca", "div", "ed", "cu", "be", "enc", "dec"], "d": ["des", "da", "e", "dict", "ds", "D", "fd", "dim", "red", "dir", "dr", "del", "bd", "di", "dd", "db", "dra", "ad", "def", "r", "dp", "done", "sd", "td", "df", "de", "debug", "dc", "div", "dec"], "chars": ["chARS", "conds", "chords", "cars", "chacters", "chaps", "spars", " chonds", "Charms", "chats", "Chaps", "charords", " chrs", "charats", "chashes", "Chats", "Chonds", " chaps", "chonds", " chords", "Chacters", "charms", "caps", "sparms", " charms", "spARS", " chats", " chashes", "Chrs", "spacters", "Chars", "Chashes", " chARS", "charars", "charashes", "chrs", "ChARS", "crs", " chacters", "Chords"], "i": ["yi", "bi", "in", "multi", "si", "at", "ti", "iter", "ai", "ip", "it", "iu", "um", "ie", "ir", "o", "chain", "l", "zi", "xi", "di", "pi", "qi", "this", "ei", "ik", "mi", "v", "ini", "ci", "y", "sim", "id", "name", "ia", "j", "on", "f", "iq", "inter", "ind", "I", "ij", "q", "ami", "init", "me", "index", "m", "ki", "ii", "ims", "to", "is", "li", "hi", "ui", "cli", "ix", "p", "im", "ic", "phi", "u", "ri"], "con": ["fun", "cross", "mult", "cur", "ain", "pen", "com", "um", "cal", "connect", "don", "ctrl", "const", "sum", "cone", "cover", "Cons", "conf", "xc", "Conn", "pan", "cons", "common", "ion", "conn", "co", "fc", "cont", "acon", "fac", "conv", "change", "res", "inter", "can", "CN", "cond", "gate", "nc", "connection", "cn", "ct", "tan", "CON", "unc", "Con"], "n": ["nb", "an", "nn", "nw", "non", "nor", "next", "o", "ns", "out", "el", "un", "nr", "g", "no", "nt", "v", "err", "ng", "name", "on", "span", "j", "ren", "number", "sn", "fn", "pn", "nu", "nl", "yn", "m", "nc", "ln", "nan", "ne", "na", "z", "cn", "inn", "N", "gn", "node", "p", "note", "mn"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tfor(;;){\\n\t\t\tint H = sc.nextInt();\\n\t\t\tint W = sc.nextInt();\\n\t\t\t\\n\t\t\tif(H == 0 && W == 0)\\n\t\t\t\tbreak;\\n\t\t\\n\t\t\tfor(int i = 0;i < H;i++){\\n\t\t\t\tif(i == 0 || i == H - 1){\\n\t\t\t\t\tfor(int j = 0;j < W;j++){\\n\t\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t\t}\\n\t\t\t\t}else{\\n\t\t\t\t\tfor(int j = 0;j < W;j++){\\n\t\t\t\t\t\tif(j == 0 || j == W - 1)\\n\t\t\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t\t\telse\\n\t\t\t\t\t\t\tSystem.out.print(\".\");\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t\t\tSystem.out.print(\"\\n\");\\n\t\t\t\t}\\n\t\t\tSystem.out.print(\"\\n\");\\n\t\t}\\n\t}\\n}", "target": "19", "substitutes": {"sc": ["ch", "sb", "sync", "sw", "cle", "asc", "mc", "osc", "ctrl", "Sync", "anc", "cr", "Sc", "c", "ctx", "inc", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "system", "nc", "cs", "tc", "sq", "ck", "tch", "pc", "ctl", "isc", "scl", "sv", "sp", "esc"], "H": ["HE", "J", "HTTP", "HH", "WH", "IM", "NH", "Height", "HI", "HO", "MH", "HD", "HTML", "OH", "Y", "HA", "HC", "P", "IT", "RH", "V", "TH", "High", "AV", "M", "HB", "X", "He", "CH", "h", "HS", "His", "I", "HT", "R", "HL", "L", "B", "Q", "N", "HK", "SH"], "W": ["SIZE", "SW", "EW", "VW", "MW", "J", "WAR", "WR", "w", "WH", "WT", "Width", "WD", "HTML", "Length", "P", "Wh", "IT", "V", "WI", "WA", "M", "WW", "FW", "Writer", "Size", "I", "WS", "NW", "We", "TW", "WE", "WC", "R", "DW", "CW", "OW", "WM", "WP", "Win", "L", "F", "POS", "N", "BW", "Week"], "i": ["yi", "bi", "multi", "si", "ti", "ai", "ip", "it", "iu", "ie", "chain", "zi", "xi", "di", "pi", "qi", "g", "mi", "ini", "ci", "y", "sim", "ia", "h", "I", "ind", "ij", "q", "init", "me", "m", "ami", "ori", "ki", "ii", "info", "gi", "is", "li", "hi", "ui", "ix", "im", "ic", "phi", "u", "ri"], "j": ["jo", "oj", "bj", "ot", "obj", "jc", "json", "J", "it", "let", "pt", "ie", "fr", "ax", "l", "jit", "dj", "b", "k", "jj", "jas", "aj", "jl", "bo", "jp", "uj", "og", "js", "str", "g", "off", "r", "jam", "v", "ja", "ju", "bot", "err", "sp", "ind", "ij", "q", "jac", "je", "kj", "m", "ne", "br", "z", "job", "jump", "other", "ji", "pr", "ge", "note"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n    static PrintWriter out = new PrintWriter(System.out);\\n    static Scanner sc = new Scanner(System.in);\\n    static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\\n    int maxn;\\n    long[] frac,inv;\\n    long mod = 1000000000+7;\\n    public static void main(String[] args) throws IOException {\\n        Main main = new Main();\\n//        main.solve();\\n        System.out.println(main.solve());\\n    }\\n    long solve() throws IOException {\\n        int n = sc.nextInt();\\n        return (n+1)/2;\\n    }\\n}\\n\\n", "target": "233", "substitutes": {"out": ["in", "report", "en", "ch", "null", "w", "file", "msg", "csv", "all", "o", "Out", "outs", "println", "d", "str", "r", "nt", "sys", "screen", "err", " err", "name", "on", "error", "io", "res", " Out", "print", "log", "write", "OUT", "info", "cmd", "output", "os", "writer", "ex", "txt", " os", "n", "er", " cout", " outs"], "sc": [" scr", "si", "ch", "sw", "sk", "anc", "cr", "Sc", "arc", "c", " se", "sys", "screen", "SC", "res", "rc", "sr", "cl", "scan", "nc", "sq", "cs", "pc", "dc", "ser", "sa", "sv", "sp"], "reader": ["Reader", "result", "in", "iter", "read", "builder", "dr", "sem", "row", "r", "ner", "nt", "proc", "name", "io", "parser", "runner", "rc", "scan", "buffer", "writer", "data", "ser", "stream", "input", "inner", "er", "rs"], "maxn": ["minN", "Maxn", " maxN", "maxcount", "Maxcount", "maxN", "MaxN", " maxcount", "minn", "mincount"], "frac": ["fun", "adj", "diff", "cum", "gain", "cmp", " norm", " scale", "xp", "eff", "fre", "norm", "fc", "fac", "sim", "comp", "df", "alpha", "init", "weights", "exp", "acc", "scale", "offs", "rand", " df", "unc", " delta"], "inv": ["imp", "fun", "iter", "random", "ll", "Inv", "sum", "vec", "eff", "rel", "inc", "norm", "rev", "rank", "ij", "init", "normal", "log", "cl", "shr", "dev", "exp", "scale", "acc", "rand", "reverse", "dec"], "mod": ["fun", "add", "mult", "tmp", "ver", "sum", "cmp", "step", "prime", "sub", "Mod", "tab", "fac", "pos", "MOD", "rc", "reg", "pre", "dev", "exp", "rot", "scale", "base", "acc", "rand", "round", "div", "dec"]}}
{"code": "import java.util.Arrays;\\nimport java.util.Collections;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tInteger a[] = new Integer[N];\\n\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\ta[i] = sc.nextInt();\\n\t\t}\\n\t\tsc.close();\\n\t\tArrays.sort(a, Collections.reverseOrder());\\n\t\tint A = a[0], B = 0;\\n\\n\t\tfor (int i = 1; i < N; i++) {\\n\t\t\tif (i % 2 == 0) {\\n\t\t\t\tA += a[i];\\n\t\t\t} else {\\n\t\t\t\tB += a[i];\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(A - B);\\n\t}\\n}\\n", "target": "132", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "sci", "c", "ctx", "sub", "arc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "st", "sch", "sec", "nl", "gc", "cl", "ss", "uc", "pb", "nc", "sq", "tc", "cs", "scan", "se", "pc", "ctl", "ser", "isc", "syn", "capt", "scl", "sh", "desc", "sv", "sp", "esc"], "N": ["NP", "NG", "NI", "S", "NA", "J", "UN", "D", "NV", "T", "NM", "NH", "K", "Net", "Length", "P", "NT", "V", "M", "C", "Sn", "NO", "Ni", "NE", "NB", "I", "TN", "Len", "ANY", "NL", "NR", "NN", "Ns", "Num", "Na", "NC", "NS", "L", "GN", "n", "ND", "SN", "AN"], "a": ["an", "la", "ba", "ab", "parts", "eas", "da", "at", "obj", "qa", "au", "it", "ea", "s", "e", "w", "all", "aka", "l", "aaa", "b", "aux", "area", "c", "am", "era", "y", "ia", "ta", "ma", "ao", "alpha", "ac", "ae", "app", "ya", "m", "wa", "ata", "xa", "abs", "ga", "oa", "aa", "as", "data", "att", "apa", "na", "sta", "to", "fa", "t", "sa", "ca", "n", "p", "ava", "u"], "i": ["multi", "si", "ip", "set", "PI", "chain", "l", "zi", "di", "c", "my", "point", "ini", "err", "iy", "me", "info", "hi", "p", "phi", "it", "ie", "status", "o", "b", "qi", "x", "y", "sim", "uri", "h", "q", "init", "gi", "ii", "us", "cli", "ji", "ic", "fire", "ri", "bi", "iter", "iu", "ei", "g", "j", "io", "ni", "I", "ind", "is", "li", "ui", "client", "ix", "sequence", "ti", "ai", "e", "xi", "pi", "mi", "ity", "v", "ci", "id", "f", "m", "ki", "batch", "ims", "z", "im", "u"], "A": ["AB", "NA", "AT", "D", "PA", "BA", "This", "T", "AF", "AC", "H", "Y", "As", "P", "HA", "RA", "Ar", "AH", "V", "CA", "SA", "AV", "Array", "M", "C", "X", "Alpha", "LA", "AR", "I", "G", "AA", "R", "Bar", "AL", "Java", "IA", "GA", "AP", "L", "AU", "AM", "AST", "An"], "B": ["BG", "AB", "S", "BR", "BB", "BU", "J", "BF", "D", "RB", "BA", "BER", "Builder", "T", "b", "IB", "VB", "H", "Y", "BT", "Bern", "TB", "Blue", "V", "BO", "SB", "BC", "WB", "NB", "I", "BE", "BI", "OB", "Bar", "BS", "R", "FB", "EB", "LB", "BM", "BL", "L", "GB", "DB"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\\n    private static int pow(int base,int os) {\\n        if(os == 0)\\n            return 1;\\n        int temp = pow(base, os/2);\\n        if (os % 2 == 0)\\n            return temp * temp;\\n        else\\n            return (base * temp * temp);\\n    }\\n\\n    public static void main(String[] args) {\\n\\n        Scanner input = new Scanner(System.in);\\n        int x = input.nextInt();\\n        int ans = 0;\\n        for(int i=1;i<=x;++i) {\\n            for (int j = 2; j <= x; ++j) {\\n                int num = pow(i, j);\\n                if (num > x)\\n                    break;\\n                ans = Math.max(ans, pow(i, j));\\n            }\\n        }\\n        System.out.println(x==1?1:ans);\\n\\n    }\\n}\\n", "target": "143", "substitutes": {"base": ["bi", "in", "core", "size", "total", "bas", "ase", "max", "set", "l", "b", "pi", "based", "bin", "out", "db", "real", "tem", "template", "unit", "prefix", "v", "type", "y", "bar", "start", "name", "id", "range", "number", "init", "m", "index", "log", "factor", "buffer", "root", "Base", "bp", "scale", "offset", "ex", "tree", "balance", "orig", "p", "val", "reset"], "os": ["ms", "si", " pos", "ot", "ost", "s", "dos", "oes", "ds", "OS", "aos", "oid", "o", "ows", "mos", "ios", "ins", "bs", "ros", "ts", "ys", "cos", "sys", "oss", "oos", "boot", "oS", "bos", "io", "pos", "res", "win", "ls", "Os", "us", "cs", "oa", "as", "pc", "ps", "is", "los", "mac", "soft", "osi", "windows", "fs", "reset"], "temp": ["mp", "result", "perature", " tmp", "total", "null", "perm", "tmp", "cache", "emp", "stem", "max", "pt", "test", "time", "term", "tr", "tim", "sum", "prime", "tem", "out", "template", "c", "memory", "ptr", "deg", "v", "mod", "fac", "ty", "ta", "res", "Temp", "init", "iter", "m", "tm", "pre", "buffer", "zero", "tc", "t", "z", "util", "div", "mem", "em", "p", "n"], "input": ["in", " inputs", "Input", "local", "unsigned", "read", "source", "script", "image", "sum", "binary", "accept", "context", "text", " sin", " Input", "parse", "sin", "socket", "proc", "current", "start", "search", "io", "parser", "process", "active", "index", "initial", "reader", "buffer", "sq", "system", "output", "select", "usr", "writer", "raw", "stream", "inner", "control", "kernel"], "x": ["an", "dx", "in", "mx", "px", "size", "e", "max", "tx", "w", "xx", "ax", "xf", "xi", "k", "xt", "p", "xc", "fx", "xp", "ctx", "xes", "c", "v", "X", "ox", "y", "f", "wx", "xs", "inx", "rx", "m", "scan", "t", "xy", "z", "ex", "ct", "n", "width", "len", "ix", "xa", "rex", "lex"], "ans": ["an", "uns", "angs", "ars", "acts", "ians", "ms", "results", "nn", "names", "s", "orts", "beans", "xx", "aps", "ann", "actions", "ons", "ins", "ns", "ones", "aus", "ids", "vals", "anas", "ks", "nas", " scans", "ts", "cons", "pan", "ran", "arts", "vers", "ats", "oss", "nets", "anes", "ants", "xs", "ANS", "gs", "can", "ls", "scan", "xa", "ions", "ots", "lan", "cs", "ims", "ores", "ations", "ums", "amps", "ens", "rs", "outs", "mn", "eds"], "i": ["yi", "bi", "in", "si", "ti", "ai", "ip", "it", "iu", "ie", "zi", "xi", "di", "pi", "by", "ei", "g", "ik", "mi", "ini", "ci", "y", "ia", "a", "iq", "I", "ind", "ij", "ami", "m", "index", "ori", "ki", "ii", "info", "gi", "is", "li", "hi", "ui", "ix", "im", "ic", "ani", "phi", "u", "ri"], "j": ["jo", "bj", "oj", "obj", "jc", "J", "json", "it", "block", "fr", "ax", "dj", "b", "k", "jj", "jas", "aj", "jl", "bs", "el", "jp", "uj", "left", "js", "rel", "g", "ion", "v", "cell", "ja", "y", "q", "ij", "kj", "m", "br", "z", "jump", "other", "job", "ji", "n", "pr", "p", "im", "note", "mn"], "num": ["nb", "multi", "mat", "total", "nz", "nn", "check", "um", "cal", "msg", "cum", "coord", "np", "tim", "sum", "conf", "unit", "nm", "no", "NUM", "conv", "number", "nom", "nu", "pn", "mon", "ul", "sam", "dev", "info", "Num", "na", "count", "net", "n", "nam", "mn"]}}
{"code": "import java.io.FileNotFoundException;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws FileNotFoundException {\\n\\n\t\t//    \tFile file = new File(\"src/in.txt\");\\n\t\t//    \tScanner sc = new Scanner(file);\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tString S = sc.next();\\n\t\tsc.close();\\n\\n\t\tchar[] s = S.toCharArray();\\n\\n\t\tint[] count = new int[4];\\n\\n\t\tfor(int i=0;i<S.length();i++) {\\n\t\t\tfor(int j=0;j<S.length();j++) {\\n\t\t\t\tif(s[i]==s[j]) {\\n\t\t\t\t\tcount[i]++;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tboolean result = true;\\n\t\tfor(int i=0;i<S.length();i++) {\\n\t\t\tif(count[i]!=2) {\\n\t\t\t\tresult=false;\\n\t\t\t}\\n\t\t}\\n\t\tif(result) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t} else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t}\\n}", "target": "33", "substitutes": {}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tScanner stdIn = new Scanner(System.in);\\n\t\t\\n\t\tString[] s = stdIn.next().split(\"\");\\n\t\t\\n\t\tlong a = 0;\\n\t\tfor(int i = 0; i < s.length; i++) {\\n\t\t\ta += Integer.parseInt(s[i]);\\n\t\t}\\n\t\tif(a % 9 == 0) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t}else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t\t\\n\t\t\\n\\n\t}\\n\\n}\\n", "target": "93", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n\t  public static void judge(int m,int f,int r) {\\n\t\t  if(m==-1 && f==-1 && r==-1) {\\n\t\t\t  System.exit(0);\\n\t\t  }\\n\t\t  if(m==-1 || f == -1) {\\n\t\t\t  System.out.print(\"F\");\\n\t\t  }else {\\n\t\\n\t\t  if(m+f>=80) {\\n\t\t \\n\t\t  System.out.print(\"A\");\\n\t      }\\n\t\t  else if(m+f<80 && m+f>=65) {\\n\t\t\t\\n\t\t  System.out.print(\"B\");\\n\t      }\\n\t\t  else  if(m+f<65 && m+f>=50) {\\n\t\t\t \\n\t\t  System.out.print(\"C\");\t\t \\n\t      }\\n\t\t  else if(m+f<50 && m+f>=30 && r<50) {\\n\t\t\t\\n\t\t  System.out.print(\"D\");\\n\t\t  }else if(r>=50) {\\n\t\t\t \\n\t\t  System.out.print(\"C\");\\n\t\t  }\\n\t\t  else  if(m+f<30 || r!=-1) {\\n\t\t\t  \\n\t\t  System.out.print(\"F\");\\n\t\t  }\\n\t\t  \\n\t\t  }\\n\t}\\n\t\t  \\n\t  public static void main(String[] args) {\\n\t\t  Scanner x = new Scanner(System.in);\\n\t\t  for(;;) {\\n\t\t  int data [] = new int[3];\\n\t\t  for(int i = 0;i<3;i++) {\\n\t\t\t\tdata[i]=x.nextInt();\\n\t\t\t}\t\t \\n\t\t judge(data[0],data[1],data[2]);\\n\t\t System.out.println();\\n\t\t  }\\n\t  }\\n\t}\\n", "target": "118", "substitutes": {"m": ["mp", "ms", "mat", "e", "perm", "md", "mt", "sm", "cm", "mr", "um", "mc", "rem", "o", "mm", "re", " M", "l", "b", "mode", "k", "om", "c", "am", "d", "this", "g", "mi", "nm", "v", "M", "pm", "module", "y", "sim", "mod", "rm", "ma", "j", "h", "me", "tm", "fm", "km", "mu", "vm", "dm", "t", "gm", "bm", "n", "em", "man", "mem", "p", "mean", "im"], "f": ["field", "fl", "fp", "fun", "ft", "uf", "fb", "e", "sf", "fort", "fd", "file", "um", "fi", "func", "o", "fr", "xf", "l", "fg", "b", "fx", "form", "c", "ff", "d", "fen", "far", "g", "or", "fc", "v", "bf", "fac", "fer", "fig", "j", "tf", "h", "df", " F", "fm", "fn", "rf", "exp", "cf", "of", "t", "fe", "fo", "fa", "F", "ct", "inf", "p", "fed", "u"], "r": ["result", "hr", "kr", "e", "it", "w", "mr", "o", "re", "fr", "l", "b", "rd", "dr", "rt", "cr", "c", "d", "nr", "g", "or", "v", "ar", "err", "range", "j", "h", "res", "rc", "q", "ry", "lr", "R", "sr", "ur", "rf", "rec", "t", "br", "rr", "z", "rb", "pr", "n", "p", "er", "rs", "rar", "u", "ri"], "x": ["dx", "mx", "px", " xx", "tx", "w", "xe", "xx", "xd", "ax", "xf", "xi", "xt", "xc", "fx", "xp", "c", "xes", "ux", "v", "X", "y", "ox", "wx", "xs", "xxxx", "inx", "rx", "t", "xy", "z", "ex", "xxx", "xa", "rex", "lex"], "data": ["result", "val", "size", "list", "items", "da", "missing", "results", "partial", "json", "set", "cache", "ds", "empty", "next", "DATA", "bytes", "series", "actions", "step", "ns", "vals", "row", "d", "def", "rel", "this", "window", "keys", "trace", "rew", "no", "dat", "done", "res", "number", "hash", "good", "index", "values", "arr", "ata", "mu", "batch", "zero", "info", "params", "debug", "raw", "valid", "na", "array", "num", "div", "n", "mem", " DATA", "p", "sequence", "dec"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "gu", "iu", "ie", "key", "o", "xi", "di", "pi", "qi", "c", "g", "mi", "v", "ini", "ci", "y", "sim", "j", "io", "I", "init", "ki", "\u0438", "mu", "batch", "gi", "ii", "us", "t", "is", "li", "z", "hi", "ui", "cli", "n", "ix", "p", "ic", "phi", "u", "fire"]}}
{"code": "import java.util.*;\\nclass Main{\\n\tpublic static void main(String[]args){\\n    \tScanner in = new Scanner(System.in);\\n      \tint h = in.nextInt();\\n      \tint a = in.nextInt();\\n      \tint i = 0;\\n        while(h>0){\\n        \th-=a;i++;\\n        }\\n      \tSystem.out.println(i);\\n    }\\n}", "target": "147", "substitutes": {"in": [" din", "en", "std", "In", "null", "sol", "din", "file", "from", "all", "rin", "run", "l", "user", "sum", "ins", "thin", "by", "bin", "out", "doc", "conf", "inc", "window", "sin", "r", "or", "cgi", "ini", "line", "err", "id", "pid", "io", "ind", "IN", "init", "m", "log", "scan", "reader", "info", "per", "raw", "readable", "gin", "isin", "is", "vin", "serv", "input", "n", "inn", "inf", "inner", "cin"], "h": ["oh", "hr", "ch", "ah", "phi", "his", "b", "k", "H", "hp", "he", "c", "d", "g", "hu", "bh", "hd", "v", "high", "hl", "ht", "j", "html", "hh", "f", "ph", "rh", "hash", "m", "ha", "ho", "head", "t", "hex", "hz", "hi", "count", "sh", "ih", "p", "hs", "history", "kh"], "a": ["la", "ba", "ea", "ai", "au", "e", "s", "o", "ax", "l", "b", "area", "p", "c", "am", "A", "ia", "ma", "ta", "j", "ao", "va", "f", "alpha", "ac", "ae", "ach", "wa", "ata", "oa", "aa", "as", "t", "apa", "pa", "na", "z", "sa", "ca", "n", "xa"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "iu", "status", "l", "zi", "xi", "di", "pi", "qi", "c", "ei", "iri", "mi", "ini", "ci", "id", "sim", "j", "I", "ind", "print", "ij", "m", "index", "ori", "ki", "gi", "ii", "info", "is", "li", "hi", "ui", "cli", "p", "im", "phi"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n\tstatic PrintWriter out;\\n\tstatic StringBuilder sb;\\n\tstatic long mod = 998244353;\\n\tstatic int inf = (int) 1e15;\\n\tstatic ArrayList<Integer>[] ad;\\n\tstatic int n, k;\\n\tstatic long[][] memo;\\n\tstatic char[][] g;\\n\tstatic boolean[] vis;\\n\tstatic long ans, tem;\\n\tstatic long[] a;\\n\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tout = new PrintWriter(System.out);\\n\t\tint x=sc.nextInt();\\n\t\tint y=sc.nextInt();\\n\t\tSystem.out.println(x*(x-1)/2+y*(y-1)/2);\\n\t\tout.close();\\n\t}\\n\\n\tstatic long cal(int i, int u, int p) {\\n\t\tif (memo[i][u] != -1)\\n\t\t\treturn memo[i][u];\\n\t\tlong ans = 1;\\n\t\tfor (int v : ad[i]) {\\n\t\t\tif (v == p)\\n\t\t\t\tcontinue;\\n\t\t\tif (u == 0) {\\n\t\t\t\tlong tem = 0;\\n\t\t\t\ttem = (2 * cal(v, 0, i)) % mod;\\n\t\t\t\ttem = (tem + 2 * cal(v, 1, i)) % mod;\\n\t\t\t\ttem = (tem - cal(v, 2, i) + mod) % mod;\\n\t\t\t\tans = ans * tem % mod;\\n\t\t\t} else if (u == 1) {\\n\t\t\t\tlong tem = 0;\\n\t\t\t\ttem = (2 * cal(v, 0, i)) % mod;\\n\t\t\t\ttem = (tem + cal(v, 1, i)) % mod;\\n\t\t\t\ttem = (tem - cal(v, 2, i) + mod) % mod;\\n\t\t\t\tans = ans * tem % mod;\\n\t\t\t} else {\\n\t\t\t\tlong tem = 0;\\n\t\t\t\ttem = cal(v, 0, i) % mod;\\n\t\t\t\ttem = (tem + cal(v, 1, i)) % mod;\\n\t\t\t\ttem = (tem - cal(v, 2, i) + mod) % mod;\\n\t\t\t\tans = ans * tem % mod;\\n\t\t\t}\\n\t\t}\\n\t\treturn memo[i][u] = ans;\\n\t}\\n\\n\tstatic class Scanner {\\n\t\tStringTokenizer st;\\n\t\tBufferedReader br;\\n\\n\t\tpublic Scanner(InputStream system) {\\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\\n\t\t}\\n\\n\t\tpublic Scanner(String file) throws Exception {\\n\t\t\tbr = new BufferedReader(new FileReader(file));\\n\t\t}\\n\\n\t\tpublic String next() throws IOException {\\n\t\t\twhile (st == null || !st.hasMoreTokens())\\n\t\t\t\tst = new StringTokenizer(br.readLine());\\n\t\t\treturn st.nextToken();\\n\t\t}\\n\\n\t\tpublic String nextLine() throws IOException {\\n\t\t\treturn br.readLine();\\n\t\t}\\n\\n\t\tpublic int nextInt() throws IOException {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n\\n\t\tpublic double nextDouble() throws IOException {\\n\t\t\treturn Double.parseDouble(next());\\n\t\t}\\n\\n\t\tpublic char nextChar() throws IOException {\\n\t\t\treturn next().charAt(0);\\n\t\t}\\n\\n\t\tpublic Long nextLong() throws IOException {\\n\t\t\treturn Long.parseLong(next());\\n\t\t}\\n\\n\t\tpublic int[] nextArrInt(int n) throws IOException {\\n\t\t\tint[] a = new int[n];\\n\t\t\tfor (int i = 0; i < n; i++)\\n\t\t\t\ta[i] = nextInt();\\n\t\t\treturn a;\\n\t\t}\\n\\n\t\tpublic long[] nextArrLong(int n) throws IOException {\\n\t\t\tlong[] a = new long[n];\\n\t\t\tfor (int i = 0; i < n; i++)\\n\t\t\t\ta[i] = nextInt();\\n\t\t\treturn a;\\n\t\t}\\n\\n\t\tpublic boolean ready() throws IOException {\\n\t\t\treturn br.ready();\\n\t\t}\\n\\n\t\tpublic void waitForInput() throws InterruptedException {\\n\t\t\tThread.sleep(3000);\\n\t\t}\\n\t}\\n}", "target": "49", "substitutes": {"out": ["in", "report", "bl", "outer", "list", "display", "at", "ch", "obj", "it", "null", "s", "tmp", "w", "aos", "status", "o", "Out", "b", "sum", "println", "c", "window", "str", "r", "nt", "end", "conn", "sys", "lock", "screen", "err", "name", "error", "io", "print", "log", "scan", "buffer", "ou", "OUT", "write", "output", "os", "info", "ln", "writer", "t", "exit", "ex", "input", "net", "txt", "client", "sv", "outs", "sp"], "sb": ["bi", "bl", "si", "bb", "sy", "sf", "sw", "sm", "b", "bd", "bs", "gb", "bg", "bh", "bf", "bt", "SB", "sn", "sg", "pb", "sq", "mb", "bp", "sa", "bm", "sh", "sv", "sp", "bn"], "mod": ["fun", "md", "edit", "set", "dir", "sum", "crit", "dd", "prime", "bo", "grad", "addr", "ident", "module", "mb", "method", "man", "lex", "var", "media", "perm", "param", "com", "mt", " Mod", "term", "pad", "ld", "amd", "tag", "mag", "med", "pro", "fac", "comp", "sim", "mods", "dig", "reg", "exec", "san", "base", "temp", "mem", "ms", "bind", "red", "mm", "tr", "mode", "pur", "deg", "ref", "modified", "j", "ind", "post", "good", "zero", "debug", " mods", "ix", "dec", "check", "let", "fd", "rem", "func", "req", "trans", "form", "Mod", "tab", "seq", "parent", "id", "min", "MOD", "m", "cond", "div", "od", "im"], "inf": [" xx", "lim", "dim", "xx", "re", "xi", "xc", "xp", "mix", " z", "d", "ei", " lim", "ref", " pi", "Inf", "f", "ind", "log", "xy", "z", "ex", "ed", "mind", "pp", "phi", "ix"], "ad": ["add", "ab", "ay", "mad", "adj", "at", "au", "md", "ade", "wd", "Ad", "ax", "pad", "quad", "ada", "rad", "dd", "db", "AD", "lad", "ud", "ard", "sd", "td", "al", "ac", "ads", "pd", "att", "od", "ate", "ag", "ald"], "n": ["nb", "en", "nn", "w", "o", "l", "ns", "c", "r", "nm", "no", "on", "j", "sn", "ni", "q", "m", "nu", "ln", "ne", "t", "na", "z", "N"], "k": ["ka", "ke", "kr", "kn", "w", "sk", "key", "K", "ko", "ks", "ik", "ek", "ku", "ok", "ak", "j", "ket", "kk", "q", "kw", "m", "mk", "kj", "ki", "km", "tk", "kh"], "memo": ["memoo", "meti", "meto", "keti", "memoryi", "rempo", "memano", "remo", "rami", "remos", "histpo", "metano", "remi", "Mempo", "Memo", "keto", "histi", "histo", " memmo", "memberspo", "markpo", "Memos", "marko", "ramo", "memoryano", " mempo", "Memi", "memmo", "ketpo", "memi", "membersi", "marki", "memos", "markmo", " memi", "Memmo", "ramoo", "memberso", "ketos", "memoryo", " memoo", "mempo", "histoo", "memorypo", "metpo", "membersano", "rampo"], "g": ["gl", "l", "b", "gb", "c", "d", "bg", "ig", "gg", "j", "f", "G", "gt", "gp", "gs", "m", "gc", "go", "gi", "ga", "gray", "gm", "z", "tg", "gn", "ge", "cfg"], "vis": ["av", "pass", "gu", "gen", "status", "gl", "visible", "lu", "cap", "di", "cas", "vert", "bg", "act", "skip", "sim", "pos", "cv", "jac", "wa", "scan", "nav", "dc", "serv", "acc", "cfg", "wait"], "ans": ["an", "si", "orts", "ds", "actions", "ness", "sum", "ags", "ks", "atts", "asts", "ANS", "ads", "types", "as", "offs", "sv", "ids", "uns", "ars", "anon", "s", "stats", "flags", "aps", "als", "aints", "ons", "ins", "vals", "cons", "lines", "nos", "annot", "sys", "ants", "eps", "gs", "can", "ls", "san", "ams", "cs", "verts", "mem", "ms", "ians", "results", "aos", "ann", "cas", "anas", "vs", "ats", "olds", "xs", "ations", "ums", "amps", "ens", "rs", "leans", "eds", "ies", "angs", "ses", "ents", "mas", "nn", "names", "sm", "es", "ns", "aus", "arts", "asm", "ates", "posts", "ims", "ps", "tools", "sa", "outs", "ints"], "tem": ["maybe", "si", "tic", "ace", "tmp", "time", "lat", "dim", "prom", "stan", "ness", "di", "sem", "ram", "Tem", "ta", "tm", "pretty", "te", "tv", "em", "cu", "sym", "buff", "param", "met", "mt", "cache", "um", "term", "tex", "tml", "sky", "med", "sim", "reci", "san", "base", "txt", "temp", "mem", "mom", "mm", "TM", "sty", "tim", "template", "lam", "slow", "tf", "sat", "timer", "thread", "tu", "stable", "tc", "se", "t", "dem", "tt", "mat", "gem", "stem", "sm", "lim", "rem", "prof", "cum", "tar", "form", "am", "trace", "tab", "cell", "thal", "sequ", "ty", "ma", "there", "sex", "the", "mon", "tom", "sam", "htm", "una", "tan", "im"], "a": ["ap", "an", "ba", "ka", "ea", "ai", "au", "ann", "b", "am", "act", "ar", "ia", "ta", "ao", "alpha", "ac", "wa", "ata", "ga", "aa", "as", "att", "na", "pa", "sa", "ca", "xa", "al"], "sc": ["mp", "si", "ch", "sync", "sw", "asc", "sk", "mc", "osc", "ctrl", "cmp", "ec", "Sc", "scope", "c", "ctx", "sub", "inc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "sch", "sec", "gc", "cl", "ss", "scan", "pb", "nc", "sq", "tc", "cs", "ck", "pc", "ctl", "sa", "isc", "desc", "scl", "sv", "sp", "esc"], "x": ["dx", "mx", "px", " xx", "w", "tx", "xx", "xd", " cx", "ax", "l", "xf", "xi", "xt", "xc", "fx", "xp", "ux", "ci", "X", "ox", " dx", "wx", "xs", "yx", "rx", "m", "index", "xy", "z", "ex", "width", "ix", "xa", "lex"], "y": ["yi", "ies", "ay", "sy", "ot", "ch", "yd", "ey", "l", "yl", "b", "Y", "gy", "c", "ys", "ly", "cy", "my", "yr", "sys", "ky", "on", "ty", "j", "h", "uy", "py", "ery", "yt", "ry", "iy", "m", "ya", "asy", "oy", "yn", "ny", "ym", "t", "xy", "z", "hy", "yy", "axy", "fy", "col"], "i": ["in", "si", "ti", "ai", "e", "it", "ip", "iu", "ie", "status", "o", "mm", "chain", "l", "xi", "b", "di", "pi", "c", "r", "mi", "or", "ini", "ci", "id", "oi", "name", "j", "io", "uri", "f", "I", "ind", "ij", "q", "init", "m", "index", "ori", "ki", "batch", "ii", "gi", "info", "is", "li", "ex", "hi", "ed", "ui", "ji", "cli", "ix", "im", "ic", "sp", "phi", "ri"], "u": ["uf", "it", "up", "w", "iu", "um", "gu", "o", "uid", "l", "lu", "U", "user", "c", "uj", "un", "uv", "pu", "ue", "hu", "uu", "ju", "you", "ud", "h", "ut", "q", "m", "ul", "nu", "ur", "fu", "mu", "tu", "uc", "us", "eu", "t", "util", "una", "su", "ui", "du", "cu", "ou", "ru", "uni"], "p": ["ap", "cp", "e", "ip", "it", "pt", "up", "w", "wp", "o", "pe", "l", "b", "pi", "P", "c", "lp", "pu", "j", "pos", "cu", "h", "q", "pn", "m", "pc", "t", "pa", "pl", "pp", "ic", "sp"], "v": ["nv", "av", "var", "vt", "ve", "at", "vc", "it", "vol", "vr", "w", "lv", "o", "er", "l", "ver", "b", "vv", "vert", "vp", "ov", "qv", "c", "iv", "get", "V", "vi", "vs", "window", "version", "rev", "current", "j", "conv", "f", "va", "cv", "q", "m", "dev", "exp", "vm", "tv", "t", "li", "ev", "inv", "sv", "uv", "qu"], "st": ["ft", "std", "ost", "nd", "ste", "sts", " est", "sw", "set", " ST", "str", " ste", "ST", " sd", "stra", " subst", " ut", "ss", " ss", "os", "se", "ist", "is", "St", " superst", "sh", "ze", "rs"], "br": ["wr", "bsp", "bi", "ber", "bl", "hr", "ba", "kr", "bb", "BR", "Br", "mr", "fr", "tr", "b", "buf", "dr", "bd", "bs", "cr", "r", "bh", "bc", "bt", "sp", "sr", "shr", "bp", "bre", "rb", "bm", "pr", "rs", "bro", "bn"], "system": ["sy", "si", "null", "set", "src", " sys", "status", "or", "nt", "sys", "proc", "iso", "sim", "err", "name", "res", "process", "sr", "ss", "reader", "problem", "os", "usr", "stream", "input"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t    String line = br.readLine();\\n\t    //\u6587\u5b57\u5217\u306b\u5148\u982d\u53c8\u306f\u6700\u5f8c\u306b\u7a7a\u767d\u6587\u5b57\u304c\u304f\u3063\u4ed8\u3044\u3066\u3044\u308b\u5834\u5408\u3001\u305d\u308c\u3089\u3092\u5168\u3066\u53d6\u308a\u9664\u304d\u307e\u3059\u3002\\n\t    line = line.trim();\\n\t    //\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u3092\u533a\u5207\u308a\u6587\u5b57\u3068\u3057\u3066\u6271\u3046\\n\t    String[] readLineArray = line.split(\"[\\\\s+]\");\\n\t    //\u5909\u6570\u306b\u914d\u5217\u3092\u4ee3\u5165\\n\t    int a = Integer.parseInt(readLineArray[0]);\\n\t    int b = Integer.parseInt(readLineArray[1]);\\n\t \\n\t    int d = a/b;\\n\t    int r = a%b;\\n\t    double f = (double)a/(double)b;\\n\t    System.out.printf(\"%d %d %.5f\\n\",d,r,f);\\n\t}\\n\\n}", "target": "90", "substitutes": {"br": ["wr", "bsp", "bi", "ber", "bl", "hr", "ba", "kr", "bb", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "b", "buf", "dr", "bd", "gb", "cr", "gr", "str", "r", "bh", "bc", "yr", "bt", "sp", "lr", "shr", "bp", "rb", "bm", "pr", "be", "bro", "bn"], "line": ["result", "in", "Line", "std", "e", "s", "msg", "next", "status", "l", "foo", "row", "text", "out", "str", "lines", "r", "err", "LINE", "string", "command", "nl", "buffer", "ln", "output", "raw", "data", "input"]}}
{"code": "import java.io.*;\\nimport java.math.*;\\nimport java.util.*;\\npublic class Main { //Read the question silly billy\\n \\n\tpublic static void main(String[] args) { \\n\t\tFastScanner I = new FastScanner(); //Input\\n\t\tOutPut O = new OutPut(); //Output\\n\t\tint N = I.nextInt();\\n\t\tint[] a = new int[N];\\n\t\tfor (int i = 0; i < N; i++) a[i] = I.nextInt();\\n\t\tArrays.sort(a);\\n\t\tint A = 0;\\n\t\tint B = 0;\\n\t\tint ptr = N-1;\\n\t\twhile (ptr>=0) {\\n\t\t\tA+=a[ptr];\\n\t\t\tptr-=2;\\n\t\t}\\n\t\tptr = N-2;\\n\t\twhile (ptr>=0) {\\n\t\t\tB+=a[ptr];\\n\t\t\tptr-=2;\\n\t\t}\\n\t\tO.pln(A-B);\\n\t}\\n\tpublic static long ceil(long num, long den) {long ans = num/den; if (num%den!=0) \\n\tans++; return ans;}\\n\tpublic static long GCD(long a, long b) {\\n\t\tif (a==0||b==0) return Math.max(a,b);\\n\t\treturn GCD(Math.min(a, b),Math.max(a, b)%Math.min(a, b));\\n\t}\\n\tpublic static long FastExp(long base, long exp, long mod) {\\n\t\tlong ans=1;\\n\t\twhile (exp>0) {\\n\t\t\tif (exp%2==1) ans*=base;\\n\t\t\texp/=2;\\n\t\t\tbase*=base;\\n\t\t\tbase%=mod;\\n\t\t\tans%=mod;\\n\t\t}\\n\t\treturn ans;\\n\t}\\n\tpublic static long ModInv(long num,long mod) {return FastExp(num,mod-2,mod);}\\n\tstatic class FastScanner {\\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\\n\t\tStringTokenizer st=new StringTokenizer(\"\");\\n\t\tString next() {\\n\t\t\twhile (!st.hasMoreTokens())\\n\t\t\t\ttry {\\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\\n\t\t\t\t} catch (IOException e) {\\n\t\t\t\t\te.printStackTrace();\\n\t\t\t\t}\\n\t\t\treturn st.nextToken();\\n\t\t}\\n\t\tint nextInt() {return Integer.parseInt(next());}\\n\t\tlong nextLong() {return Long.parseLong(next());};\\n\t}\\n\tstatic class OutPut{\\n\t\tPrintWriter w = new PrintWriter(System.out);\\n\t\tvoid pln(int x) {w.println(x);w.flush();}\\n\t\tvoid pln(long x) {w.println(x);w.flush();}\\n\t\tvoid pln(String x) {w.println(x);w.flush();}\\n\t\tvoid pln(char x) {w.println(x);w.flush();}\\n\t\tvoid pln(StringBuilder x) {w.println(x);w.flush();}\\n\t\tvoid p(int x) {w.print(x);w.flush();}\\n\t\tvoid p(long x) {w.print(x);w.flush();}\\n\t\tvoid p(String x) {w.print(x);w.flush();}\\n\t\tvoid p(char x) {w.print(x);w.flush();}\\n\t\tvoid p(StringBuilder x) {w.print(x);w.flush();}\\n\t}\\n}\\n\\n", "target": "132", "substitutes": {}}
{"code": "import java.util.*;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        int T = sc.nextInt();\\n        int A = sc.nextInt();\\n        double[] H = new double [N];\\n        for (int i = 0; i < N; ++i) {\\n            H[i] = sc.nextInt();\\n        }\\n\\n        double[] dif = new double [N];\\n        int ans = 0;\\n        for (int i = 0; i < N; ++i) {\\n            dif[i] = Math.abs(T - H[i] * 0.006 - A);\\n            if(dif[i] < dif[ans]) {\\n                ans = i;\\n            }\\n        }\\n\\n        System.out.println(ans + 1);\\n\t}\\n}\\n", "target": "210", "substitutes": {"sc": [" scr", "ch", "sb", "sync", "sw", "asc", "mc", "osc", "ctrl", "anc", "sem", "cr", "Sc", "ko", "c", "ctx", "inc", "cgi", "bc", "cc", "sys", "fc", "cont", "co", "ng", "SC", "conv", "lc", " Sc", "rc", " SC", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "ser", "dc", "isc", "capt", "desc", "scl", "sv", "sp", "esc"], "N": ["SIZE", "NP", "NI", "S", "NA", "J", "UN", "D", "NM", "NH", "Y", "Z", "P", "V", "NT", "M", "C", "X", "NO", "Ni", "NE", "Size", "NB", "I", "G", "TN", "ALL", "Node", "R", "ANY", "NL", "NN", "NR", "OUT", "Ns", "Num", "NS", "L", "SN", "B", "GN", "MAN", "n", "F", "ND", "NC", "AN"], "T": ["XT", "GT", "S", "TI", "J", "AT", "VT", "D", "WT", "TM", "E", "K", "Y", "MT", "P", "PT", "TS", "TB", "NT", "V", "TH", "M", "C", "X", "G", "TT", "TN", "I", "R", "TC", "TA", "t", "L", "B", "F", "TF"], "A": ["AB", "S", "AT", "D", "BA", "AF", "E", "AC", "AGE", "Area", "P", "HA", "AS", "AD", "V", "CA", "SA", "AV", "M", "C", "LA", "AR", "W", "a", "I", "alpha", "AA", "R", "TA", "AL", "IA", "GA", "AP", "L", "B", "F", "An"], "H": ["HE", "Host", "Eh", "D", "HH", "HR", "NH", "K", "HI", "HTML", "MH", "HO", "PH", "HP", "OH", "Head", "HA", "HC", "DH", "HD", "RH", "HM", "V", "TH", "AV", "High", "M", "Help", "HB", "He", "Header", "CH", "h", "HS", "His", "I", "HT", "Th", "HQ", "HL", "HF", "F", "SH"], "i": ["spin", "in", "multi", "list", "si", "ip", "set", "chain", "l", "zi", "di", "ion", "ini", "err", "iy", "me", "info", "n", "phi", "it", "s", "ie", "o", "qi", "ik", "y", "sim", "name", "uri", "q", "init", "ami", "index", "ori", "ii", "gi", "base", "cli", "ji", "inner", "ic", "ri", "fire", "bi", "iu", "key", "source", "et", "ei", "g", "j", "io", "a", "I", "ind", "print", "ij", "is", "li", "ui", "ix", "yi", "ti", "ai", "xi", "pi", "mi", "ity", "ci", "oi", "id", "php", "m", "ki", "\u0438", "batch", "fi", "im"], "dif": ["bdendif", " dit", "dIf", "ddip", "sdiff", "dip", "Diff", "bdIF", "diff", "dsit", "mdip", " difi", "mdifi", "Dendif", "bdip", " dIF", "Dip", "sdif", "dendif", "dact", "dsiff", " dip", "DIF", "dIF", " dendif", "pdIF", " dIf", "dsact", "sdiffs", "ddif", "ddIf", "sdIF", "mdif", "difi", "Dif", "Dit", "ddifi", "Dact", "pdiffs", "pdif", "dsif", " dact", " diff", "diffs", "bdif", "Diffs", "dit", "pdiff", "mdIf"], "ans": ["an", "angs", "uns", "ars", "anks", "ms", "ians", "ents", "nn", "names", "s", "rans", "ds", "inks", "aps", "ows", "ann", "ints", "ns", "ins", "ones", "aus", "views", "x", "anas", "ks", "mn", "arts", "lines", "ats", "oos", "ends", "olds", "rows", "ants", "xs", "posts", "asts", "ANS", "gs", "ls", "orders", "nl", "ips", "scan", "ss", "ots", "cs", "os", "as", "ps", "is", "offs", "ums", "amps", "ens", "rs", "outs", "oots", "ids", "eds"]}}
{"code": "import java.util.*;\\n \\nclass Main{\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    \\n    int[][] a = new int[3][3];\\n    int[] x = new int[3];\\n    int[] y = new int[3];\\n    int max = Integer.MIN_VALUE;\\n    for(int i=0; i<3; i++){\\n      for(int j=0; j<3; j++){\\n        a[i][j] = sc.nextInt();\\n        if(a[i][j] > max){\\n          max = a[i][j];\\n        }\\n      }\\n    }\\n    String f = \"Yes\";\\n    \\n    x[0] = 0;\\n    for(int j=0; j<3; j++){\\n      y[j] = a[0][j] - x[0];\\n    }\\n    for(int j=0; j<3; j++){\\n      x[j] = a[j][0] - y[0];\\n    }\\n    for(int i=0; i<3; i++){\\n      for(int j=0; j<3; j++){\\n        if(a[i][j] != x[i]+y[j]){\\n          f = \"No\";\\n        }\\n      }\\n    }\\n    System.out.println(f);\\n\\n    sc.close();\\n  }\\n}\\n", "target": "88", "substitutes": {"sc": ["ch", "sb", "sw", "asc", "mc", "osc", "cr", "Sc", "out", "sci", "c", "sub", "inc", "bc", "cc", "sys", "co", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "st", "sch", "sec", "gc", "cl", "scan", "ss", "uc", "system", "nc", "cs", "sq", "tc", "so", "pc", "ctl", "ser", "capt", "syn", "desc", "scl", "isc", "sv", "Scan", "sp", "esc"], "a": ["ap", "an", "la", "ba", "ab", "eas", "da", "at", "ea", "ai", "au", "e", "all", "o", "ax", "aaa", "b", "pi", "aux", "c", "am", "A", "r", "ar", "ia", "ta", "ma", "ao", "va", "app", "ac", "alpha", "ae", "m", "ata", "xa", "ga", "oa", "att", "as", "data", "aa", "apa", "na", "array", "z", "fa", "sta", "sa", "ca", "ed", "p", "history", "arr"], "x": ["dx", "tt", "mx", "px", "bit", "ch", "e", "w", "tx", "lat", "xx", "xe", "o", "ax", "xf", "l", "xi", "xt", "p", "xc", "text", "c", "xp", "fx", "v", "ux", "X", "ox", "xs", "wx", "q", "xml", "rx", "m", "index", "t", "hex", "xy", "z", "ex", "ct", "n", "ix", "xa"], "y": ["ies", "yi", "ay", "sy", "ot", "ch", "dy", "xx", "ye", "hot", "ey", "o", "b", "Y", "out", "sky", "ys", "my", "cy", "v", "ox", "ty", "vy", "uy", "yt", "py", "yx", "ry", "ya", "ny", "xy", "z", "n", "yy", "axy", "fy", "wy"], "max": ["mx", "size", "mad", "total", "last", "right", " MAX", "MAX", "tmp", "ax", "k", "sum", "prime", "med", "window", "end", "v", "load", "lock", "ox", "mod", "start", " Max", "range", "min", "ma", "height", "res", "current", "h", "hash", "m", "recent", "rest", "Max", "t", "z", "ex", "n", "checked", "auto", "maximum"], "i": ["bi", "la", "in", "si", "at", "ti", "ai", "ip", "it", "iu", "ie", "ir", "o", "zi", "xi", "dr", "di", "pi", "by", "qi", "this", "ei", "g", "ik", "mi", "ity", "ini", "ar", "ci", "v", "sim", "ret", "ia", "name", "io", "id", "iq", "I", "ind", "ij", "q", "init", "ami", "m", "me", "ori", "index", "ki", "ii", "gi", "info", "us", "ims", "is", "li", "hi", "ui", "ji", "ix", "fi", "im", "ic", "phi", "ri"], "j": ["adj", "at", "json", "pt", "all", "art", "jl", "out", "uj", "js", "ion", "off", "my", "ja", "ret", "ng", "kj", "br", "job", "n", "p", "ge", "sp", "Ja", "oj", "bj", "jack", "it", "jet", "o", "b", "jas", "rel", "bot", "on", "q", "je", "ev", "ji", "pr", "jo", "bi", "ot", "obj", "jc", "key", "tr", "k", "jj", "row", "el", "jp", "og", "g", "ju", "ind", "ph", "ij", "ne", "ody", "other", "axy", "ix", "ijk", "note", "bl", "e", "J", "let", "fr", "kid", "jit", "dj", "aj", "arg", "by", "v", "jac", "att", "z", "jump", "er", "im"], "f": ["fp", "uf", "alf", "fb", "e", "sf", "fit", "s", "w", "o", "fr", "l", "fg", "b", "k", "fx", "out", "c", "ff", "d", "str", "g", "r", "v", "bf", "fc", "lf", "tf", "printf", "df", "h", "print", "m", "fm", "rf", "cf", "of", "t", "fa", "F", "n", "p", "ef", "u"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scan = new Scanner(System.in);\\n        int x = scan.nextInt();\\n        float y = scan.nextInt();\\n\\n        float z1 = (y -2*x) / 2;\\n        float z2 = (4 * x - y) / 2;\\n\\n        if (z1 >= 0 && z2 >= 0 && z1%1 ==0 && z2%1 == 0){\\n            System.out.println(\"Yes\");\\n        }else {\\n            System.out.println(\"No\");\\n        }\\n\\n\\n    }\\n}\\n", "target": "62", "substitutes": {"scan": ["an", "query", "in", "report", " Scan", "spin", "ch", "nn", "sync", "pass", "check", "set", "read", "send", "connect", "re", "ann", "clean", "run", "k", "sum", "save", "char", "row", "out", "seek", "sc", "get", "cgi", "g", "parse", "ner", "r", "find", "skip", "sys", "proc", "sim", "search", "conv", "can", "reach", "gate", "san", "system", "info", "sort", "se", "ser", "z", "util", "n", "sql", "sur", "auto", "store", "sv", "Scan"], "x": ["dx", "in", "px", "ch", "w", "tx", "xx", "ax", "xf", "l", "xi", "xt", "xc", "fx", "i", "xp", "c", "d", "window", "my", "v", "X", "ox", "height", "h", "f", "wx", "xs", "xml", "inx", "rx", "m", "xy", "z", "ex", "width", "n", "ix", "p"], "y": ["ies", "size", "sy", "ch", "dy", "w", "ey", "yd", "yl", "b", "Y", "gy", "i", "ys", "ly", "cy", "my", "yr", "v", "r", "ty", "height", "j", "vy", "uy", "h", "f", "a", "col", "yt", "ery", "py", "ry", "iy", "m", "yo", "oy", "ny", "ym", "t", "xy", "z", "n", "yy", "axy", "p", "wy"], "z1": ["zhOne", "z0", "zi3", " zONE", "zn", " z4", "iz0", "zh0", "iz4", "zh1", " z3", "ze3", "z3", "zOne", "zi0", " zOne", "zin", "ze4", "zONE", " z0", "z4", "ze1", "zen", "iz3", "izOne", "zh4", "zeONE", "zi1", "iz1", "izONE", " zn", "ze0"], "z2": ["z5", "z02", "z256", "zip256", "z0", "zb", "zip4", " z4", "iz02", "z12", "hz2", "iz0", "zip62", "iz2", " z42", " z256", "iz5", " z5", "zip5", "zipb", "zip42", "izb", " z62", "zip0", " zb", "hz256", "z4", " z0", "iz42", "iz12", " z12", "hz62", "z42", "hz4", "z62", " z02", "zip2", "zip02", "zip12"]}}
{"code": "import java.util.*;\\nimport java.math.*;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        long A = sc.nextLong();\\n        long B = sc.nextLong();\\n        long K = sc.nextLong();\\n        StringBuilder sb = new StringBuilder();\\n\\n        if (A >= K) {\\n            sb.append(A-K);\\n            sb.append(\" \");\\n            sb.append(B);\\n            System.out.println(sb.toString());\\n        } else if (B >= K - A) {\\n            sb.append(0);\\n            sb.append(\" \");\\n            sb.append(B- K + A);\\n            System.out.println(sb.toString());\\n        } else {\\n            System.out.println(\"0 0\");\\n        }\\n    }\\n}\\n", "target": "128", "substitutes": {"sc": ["ch", "sync", "sw", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "sci", "c", "ctx", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "ser", "isc", "scl", "sv", "sp", "esc"], "A": ["AY", "AB", "S", "NA", "At", "AT", "This", "PA", "BA", "AF", "E", "AC", "AGE", "AI", "H", "As", "HA", "P", "AS", "AD", "AH", "CA", "V", "SA", "AV", "ACC", "M", "C", "AE", "Alpha", "LA", "AR", "a", "G", "I", "AA", "TA", "AL", "IA", "GA", "The", "AP", "L", "Av", "AU", "AM", "All", "AST", "N", "Ax", "AN", "An", "ACK"], "B": ["BG", "AB", "Bs", "S", "BR", "BB", "BF", "J", "BU", "RB", "BER", "BA", "T", "b", "IB", "VB", "Y", "USB", "Z", "P", "BY", "TB", "V", "BO", "M", "SB", "BC", "WB", "NB", "G", "BE", "OB", "Bar", "BS", "R", "EB", "LB", "PB", "BL", "BM", "L", "KB", "GB", "N", "DB"], "K": ["S", "J", "BB", "FK", "D", "KR", "Key", "T", "KK", "E", "KS", "U", "PK", "k", "KI", "H", "IK", "Z", "P", "DH", "V", "M", "KA", "UK", "C", "X", "AR", "BC", "G", "I", "MK", "R", "KC", "SK", "KING", "KE", "L", "KB", "Q", "VK", "N", "HK", "AK"], "sb": ["nb", "bsp", "bj", "abb", "si", "bb", "fb", "ib", "buff", "sf", "zb", "sw", "wb", "erb", "lab", "sbm", "eb", "bps", "orb", "ibl", "b", "lb", "gob", "bd", "bs", "gb", "ob", "db", "jp", "lp", "addr", "bg", "kb", "bh", "bf", "sth", "bt", "SB", "xb", "cb", "esm", "sn", "rob", "sg", "shell", "obb", "gc", "sl", "ssl", "pb", "sq", "mb", "ssh", "storage", "bp", "dh", "web", "rb", "sa", "stab", "sh", "soc", "dl", "sp", "bn"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.IOException;\\nclass Main{\\n\tpublic static void main(String[] args) throws IOException{\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tStringBuilder sb = new StringBuilder();\\n\t\twhile(true){\\n\t\t\tString[] line = br.readLine().split(\" \");\\n\t\t\tint a = Integer.parseInt(line[0]);\\n\t\t\tint b = Integer.parseInt(line[2]);\\n\t\t\tif( line[1].equals(\"?\") ){\\n\t\t\t\tbreak;\\n\t\t\t}else if( line[1].equals(\"+\") ){\\n\t\t\t\tsb.append((a + b)+\"\\n\");\\n\t\t\t}else if( line[1].equals(\"-\") ){\\n\t\t\t\tsb.append((a - b)+\"\\n\");\\n\t\t\t}else if( line[1].equals(\"*\") ){\\n\t\t\t\tsb.append((a * b)+\"\\n\");\\n\t\t\t}else if( line[1].equals(\"/\") ){\\n\t\t\t\tsb.append((a / b)+\"\\n\");\\n\t\t\t}else if( line[1].equals(\"%\") ){\\n\t\t\t\tsb.append((a % b)+\"\\n\");\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.print(sb);\\n\t}\\n}", "target": "139", "substitutes": {"br": ["wr", "bsp", "ber", "bi", "hr", "bl", "kr", "BR", "Br", "vr", "mr", "fr", "tr", "buf", "dr", "bd", "bs", "cr", "gb", "db", "bg", "str", "bh", "bc", "yr", "bt", "cb", "bridge", "lr", "bp", "rb", "bm", "pr", "be", "bro", "bn"], "sb": ["nb", "bsp", "kB", "bj", "si", "bb", "ib", "fb", "zb", "sf", "ub", "erb", "eb", "sbm", "bps", "orb", "lb", "gob", "bd", "bs", "gb", "ob", "lp", "bg", "kb", "bh", "bf", "tn", "sth", "bt", "SB", "xb", "cb", "ja", "conv", "esm", "sn", "rob", "sg", "obb", "shell", "gc", "sam", "pb", "ssl", "sq", "mb", "bis", "bp", "web", "rb", "sa", "stab", "sql", "sh", "scl", "sp", "bn"], "line": ["query", "column", "Line", "part", "list", "eline", "item", "ve", "section", "pair", "inline", "iter", "port", "check", "ip", "ie", "file", "phrase", "block", "group", "chain", "user", "step", "element", "row", "stroke", "ine", "style", "parse", "edge", "tab", "lo", "point", "cell", "no", "load", "site", "range", "LINE", "liner", "word", "le", "force", "shell", "normal", "log", "device", "cmd", "detail", "zone", "se", "page", "link", "piece", "job", "one", "rule", "net", "cli", "node", "sample", "frame", "sequence", "note", "entry"], "a": ["an", "la", "ba", "eas", "da", "ea", "ai", "au", "ama", "from", "aka", "o", "aaa", "aj", "area", "aux", "sha", "am", "A", "ei", "era", "ar", "ia", "ta", "ma", "ao", "va", "alpha", "ac", "ami", "ga", "oa", "sta", "as", "aa", "to", "na", "pa", "apa", "att", "fa", "sa", "ca", "aq", "xa"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "fb", "obj", "wb", "w", "erb", "o", "l", "bd", "ob", "gb", "bs", "db", "i", "c", "d", "bg", "g", "r", "bc", "v", "y", "cb", "j", "f", "h", "value", "m", "beta", "pb", "bis", "t", "z", "B", "rb", "n", "p"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        String[] lines = getStdin();\\n        String line = lines[0];\\n        String[] a = line.split(\" \");\\n        int term = Integer.parseInt(a[0]);\\n        int num = Integer.parseInt(a[1]);\\n\\n        String line1 = lines[1];\\n        String[] b = line1.split(\" \");\\n        //int cost = Integer.parseInt(b[i]);\\n\\n        for (int i = 0; i < num; i++){\\n            int cost = Integer.parseInt(b[i]);\\n            term = term - cost;\\n        }\\n        if (term < 0){\\n            System.out.println(\"-1\");\\n        } else if (term >= 0){\\n            System.out.println(term);\\n        }\\n\\n\\n\\n\\n    }\\n  \\n  private static String[] getStdin() {\\n    Scanner scanner = new Scanner(System.in);\\n    ArrayList<String> lines = new ArrayList<>();\\n    while (scanner.hasNext()) {\\n      lines.add(scanner.nextLine());\\n    }\\n    return lines.toArray(new String[lines.size()]);\\n  }\\n  \\n}\\n", "target": "108", "substitutes": {"lines": ["reads", "ses", "parts", "les", "blocks", "ds", "boxes", "frames", "bytes", "l", "objects", "cells", "strings", "bs", "vals", "faces", "sites", "links", "lists", "vs", "codes", "lins", "sets", "rows", "points", "posts", "gs", "elines", "ls", "values", "steps", "files", "qs", "pins", "ines", "groups", "headers", "states", "rs", "outs", "gets", "eds"], "line": ["Line", "eline", "side", "ste", "inline", "iter", "then", "online", "source", "block", "pe", "l", "ide", "lin", "row", "text", "ine", "cell", "date", "lf", "range", "LINE", "liner", "de", "word", "le", "string", "command", "nl", "ln", "detail", "se", "page", "link", "header", "message", "frame", "sequence", "entry"], "a": ["an", "la", "ba", "eas", "parts", "da", "ea", "at", "au", "eta", "aos", "all", "aka", "o", "actions", "aaa", "aux", "area", "sha", "am", "A", "era", "ia", "ta", "ma", "ao", "va", "app", "alpha", "ae", "ac", "ata", "abs", "ga", "oa", "aa", "sta", "att", "as", "apa", "pa", "array", "fa", "sa", "ca"], "term": ["rep", "field", "total", "e", "perm", "ie", "test", "red", "Term", "eff", "prefix", "inal", "ref", "proc", "fac", "err", "ty", "f", "terms", "zero", "cmd", "t", "ix", "erm", "dec", "ter", "est"], "num": ["nb", "en", "multi", "param", "um", "rem", "ver", "np", "coord", "sym", "sum", "unit", "nm", "no", "inal", "NUM", "proc", "name", "conv", "number", "nom", "nu", "mon", "Num", "con", "n", "val", "col"], "line1": ["line3", "LINEOne", " line3", " linen", "Line1", "line2", "linen", "Linen", "LINE2", "pageOne", "LineOne", "Line3", "page2", "page1", "LINE1", "LINEn", " line2", "page3", "Line2", "lineOne", " lineOne"], "b": ["bi", "ba", "bb", "e", "sb", "s", "l", "bs", "c", "d", "g", "r", "bc", "v", "y", "h", "f", "m", "beta", "buffer", "t", "base", "B", "n", "p", "u"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tInteger n = sc.nextInt();\\n\t\tInteger d = sc.nextInt();\\n\t\tInteger count = 0;\\n\\n\t\tfor (Integer i = 0; i < n; i++) {\\n\t\t\tLong x = sc.nextLong();\\n\t\t\tLong y = sc.nextLong();\\n\\n\t\t\tLong z = x * x + y * y;\\n\t\t\tif (z < 0) {\\n\t\t\t\tz *= -1;\\n\t\t\t}\\n\\n\t\t\tDouble distance = Math.sqrt(z);\\n\\n\t\t\tif (distance <= d) {\\n\t\t\t\tcount++;\\n\t\t\t}\\n\\n\t\t}\\n\\n\t\tSystem.out.println(count);\\n\\n\t}\\n\\n}", "target": "42", "substitutes": {"sc": ["irc", "ch", "sync", "asc", "mc", "osc", "ctrl", "cmp", "anc", "cr", "Sc", "scope", "sci", "c", "ctx", "ko", "comm", "inc", "cgi", "parse", "bc", "cc", "sys", "cont", "ng", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "sq", "cs", "tc", "system", "ck", "se", "uc", "pc", "ctl", "pl", "isc", "desc", "scl", "sv", "sp", "esc", "qu"], "n": ["nb", "en", "nn", "total", "s", "nor", "network", "all", "l", "np", "ns", "c", "un", "nr", "nt", "no", "on", "name", "number", "sn", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "net", "N", "mn"], "d": ["des", "dt", "da", "nd", "s", "D", "ds", "fd", "dom", "dy", "w", "dim", "l", "dir", "ld", "dr", "di", "del", "cd", "dd", "db", "c", "r", "sd", "td", "de", "density", "m", "pd", "dm", "dist", "dc", "dh", "data", "t", "gd", "dn", "p"], "count": ["nb", "result", "report", "add", "summary", "size", "list", "total", "iter", "success", "check", "console", "cache", "max", "depth", "state", "sum", "counter", "cd", "found", "const", "out", "c", "amount", "coll", "flag", "trace", "find", "nt", "draw", "score", "cont", "number", "length", "ind", "child", "index", "call", "Count", "continue", "dist", "ount", "num", "other", "code", "ctr", "sequence"], "i": ["bi", "in", "multi", "si", "ti", "ai", "iter", "it", "ip", "iu", "ie", "o", "progress", "di", "pi", "qi", "c", "mi", "v", "ini", "ci", "id", "sim", "oi", "j", "io", "iq", "I", "ind", "print", "q", "init", "me", "m", "ki", "ii", "us", "is", "li", "ui", "ix", "p", "im", "ic", "phi", "u"], "x": ["dx", "mx", "px", "zx", " xx", "at", "tx", "w", "xx", "ll", "ax", "xf", "l", "xi", "xt", "xc", "xp", "v", "ux", "ox", "X", "j", "h", "wx", "xs", "yx", "inx", "rx", "m", "xy", "ex", "xxx", "ix", "xa", "lex"], "y": ["ies", "yi", "ay", "sy", "ot", "ye", "ey", "o", "yd", "yl", "Y", "gy", "sky", "ys", "my", "cy", "ly", "yr", "sys", "ty", "j", "vy", "uy", "yt", "ery", "py", "ya", "iy", "ry", "yo", "oy", "ny", "ym", "iny", "yy", "axy", "fy"], "z": ["scroll", "nz", "w", "zip", "az", "radius", "comment", "ez", "oz", "o", "depth", "yz", "l", "zi", "zh", "uz", "step", "Z", "g", "tz", "v", "score", "sim", "j", "sd", "height", "density", "power", "q", "iz", "zo", "zen", "cz", "zero", "info", "system", "os", "zone", "dist", "hz", "zer", "ze", "phi", "u"], "distance": ["istance", "response", "relative", "delay", "size", "close", "json", "still", "diff", "red", "radius", "depth", "driver", "del", "dd", "frequency", "dimension", "approximately", "height", "density", "length", "service", "duration", "command", "shift", "near", "directory", "dist", "connection", "direction", "location", "message", "angle", "layout", "Distance", "sequence", "description", "definition"]}}
{"code": "import java.util.*;\\nclass Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    String s = sc.next();\\n    String[] words = new String[]{\"dream\",\"dreamer\",\"erase\",\"eraser\"};\\n    int n = s.length();\\n    boolean[] dp = new boolean[n+1];\\n    dp[n] = true;\\n    for (int i = n-1; i >= 0; i--){\\n      for (String word: words){\\n        if (s.substring(i).startsWith(word)){\\n          dp[i] = dp[i] || dp[i+word.length()];\\n        }\\n      }\\n    }\\n    if (dp[0] == true){\\n      System.out.println(\"YES\");\\n    }else{\\n      System.out.println(\"NO\");\\n    }\\n  }\\n}", "target": "50", "substitutes": {"sc": ["sync", "sw", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "ec", "Sc", "c", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "scan", "ss", "cl", "nc", "system", "cs", "sq", "tc", "pc", "ser", "dc", "isc", "desc", "scl", "sv", "rs", "sp", "esc"], "s": ["in", "ms", "S", "ws", "sts", "sb", "w", "source", "l", "b", "ins", "bs", "c", "ts", "js", "str", "g", "r", "v", "ats", "h", "f", "string", "gs", "st", "ls", "m", "ss", "abs", "sq", "so", "os", "as", "t", "ps", "p", "sv", "rs", "gets"], "words": ["ms", "ws", "names", "blocks", "rings", "w", "wp", "frames", "wd", "features", "ns", "onyms", "strings", "workers", "vs", "news", "we", "terms", "caps", "gs", "wm", "tags", "weights", "english", " keywords", "Words", "games", "works", "papers", "tools", "letters", "docs", "windows", "sword", "rules", "cards"], "n": ["nb", "en", "size", "nn", "e", "null", "names", "o", "l", "np", "k", "ns", "x", "c", "d", "g", "norm", "nm", "nt", "v", "y", "ng", "on", "j", "a", "number", "sn", "ni", "nu", "m", "nl", "nc", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "gn", "p", "mn"], "dp": ["fp", "cp", "DP", "dq", "dt", "pkg", "ds", "dim", "wp", "dial", "np", "dj", "yp", "dr", "dep", "cd", "p", "deb", "vp", "dd", "db", "jp", "lp", "d", "pm", "tp", "isp", "dro", "df", "gp", "php", "pn", "pd", "pb", "dm", "bp", "dc", "dh", "pa", "ps", "adr", "dk", "dl", "pp", "wd"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "o", "chain", "zi", "xi", "di", "pi", "by", "qi", "x", "ei", "iri", "mi", "ini", "ci", "y", "id", "sim", "j", "io", "uri", "iq", "ni", "I", "ind", "ij", "ami", "index", "ori", "\u0438", "asi", "batch", "ogi", "ii", "gi", "is", "li", "z", "hi", "ui", "cli", "ix", "p", "ic", "phi", "ri"], "word": ["character", "var", "part", "wo", "feature", "item", "pair", "space", "Word", "sw", "wk", "white", "w", "cycle", "key", "phrase", "term", "letter", "block", "attribute", "won", "user", "war", "wig", "woman", "char", "tag", "text", "row", "stroke", "password", "prefix", "work", "token", "no", "point", "bow", "name", "W", "wh", " keyword", "kw", "string", "piece", "sense", "link", "label", "rule", "message", "sword", "weight", "wd", "vector"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\nclass Main {\\n    static int res;\\n    static int n;\\n    static int[] arr;\\n    \\n    public static void main(String args[]) throws IOException {\\n        Scan sc = new Scan();\\n        n = sc.scanInt();\\n        arr = new int[n];\\n        for(int i= 0; i < n; ++i)\\n            arr[i] = sc.scanInt();\\n        recur(0,n-1,0);\\n        System.out.println(res);\\n    }\\n    \\n    static void recur(int l, int r, int sofar){\\n        if(l < 0 || r == n || r < l)\\n            return;\\n        int min = Integer.MAX_VALUE;\\n        int ind_l = -1;\\n        int ind_r = -1;\\n        int prev = -1;\\n        for(int i = l ; i <= r; ++i){\\n            int curr = arr[i];\\n            if(curr < min){\\n                ind_l = i;\\n                ind_r = i;\\n                min = curr;\\n            }\\n            if(curr == prev && curr == min){\\n                ind_r++;\\n            }\\n            prev = curr;\\n        }\\n        res += min-sofar;\\n        \\n        recur(l,ind_l-1, min);\\n        recur(ind_r+1,r, min);\\n    }\\n}\\n\\nclass Scan\\n{\\n    private byte[] buf=new byte[1024];\\n    private int index;\\n    private InputStream in;\\n    private int total;\\n    public Scan()\\n    {\\n        in=System.in;\\n    }\\n    public int scan()throws IOException\\n    {\\n        if(total<0)\\n        throw new InputMismatchException();\\n        if(index>=total)\\n        {\\n            index=0;\\n            total=in.read(buf);\\n            if(total<=0)\\n            return -1;\\n        }\\n        return buf[index++];\\n    }\\n    public int scanInt()throws IOException\\n    {\\n        int integer=0;\\n        int n=scan();\\n        while(isWhiteSpace(n))\\n        n=scan();\\n        int neg=1;\\n        if(n=='-')\\n        {\\n            neg=-1;\\n            n=scan();\\n        }\\n        while(!isWhiteSpace(n))\\n        {\\n            if(n>='0'&&n<='9')\\n            {\\n                integer*=10;\\n                integer+=n-'0';\\n                n=scan();\\n            }\\n            else throw new InputMismatchException();\\n        }\\n        return neg*integer;\\n    }\\n    public long scanLong() throws IOException {\\n        long integer=0;\\n        int n=scan();\\n        while(isWhiteSpace(n))\\n        n=scan();\\n        int neg=1;\\n        if(n=='-')\\n        {\\n            neg=-1;\\n            n=scan();\\n        }\\n        while(!isWhiteSpace(n))\\n        {\\n            if(n>='0'&&n<='9')\\n            {\\n                integer*=10;\\n                integer+=n-'0';\\n                n=scan();\\n            }\\n            else throw new InputMismatchException();\\n        }\\n        return neg*integer;\\n    }\\n    public double scanDouble()throws IOException\\n    {\\n        double doub=0;\\n        int n=scan();\\n        while(isWhiteSpace(n))\\n        n=scan();\\n        int neg=1;\\n        if(n=='-')\\n        {\\n            neg=-1;\\n            n=scan();\\n        }\\n        while(!isWhiteSpace(n)&&n!='.')\\n        {\\n            if(n>='0'&&n<='9')\\n            {\\n                doub*=10;\\n                doub+=n-'0';\\n                n=scan();\\n            }\\n            else throw new InputMismatchException();\\n        }\\n        if(n=='.')\\n        {\\n            n=scan();\\n            double temp=1;\\n            while(!isWhiteSpace(n))\\n            {\\n                if(n>='0'&&n<='9')\\n                {\\n                    temp/=10;\\n                    doub+=(n-'0')*temp;\\n                    n=scan();\\n                }\\n                else throw new InputMismatchException();\\n            }\\n        }\\n        return doub*neg;\\n    }\\n    public String scanString()throws IOException\\n    {\\n        StringBuilder sb=new StringBuilder();\\n        int n=scan();\\n        while(isWhiteSpace(n))\\n        n=scan();\\n        while(!isWhiteSpace(n))\\n        {\\n            sb.append((char)n);\\n            n=scan();\\n        }\\n        return sb.toString();\\n    }\\n    private boolean isWhiteSpace(int n)\\n    {\\n        if(n==' '||n=='\\n'||n=='\\r'||n=='\\t'||n==-1)\\n        return true;\\n        return false;\\n    }\\n}\\n", "target": "77", "substitutes": {"res": ["resh", "result", "ms", "results", "resp", "obj", "json", "max", "ress", "resolution", "red", "msg", "rem", "re", "fr", "expr", "progress", "Res", "req", "vals", "row", "RES", "rel", "gr", "prefix", "nr", "act", "ref", "rev", "ret", "err", "range", "j", "resource", "pos", "rc", "q", "reg", "init", "rest", "rec", "rand", "pres", "mem", "val", "reset"], "n": ["an", "en", "nw", "nor", "network", "ll", "np", "c", "nm", "no", "ng", "nu", "normal", "nan", "node", "N", "syn", "p", "s", "o", "b", "nr", "ner", "y", "on", "name", "ren", "h", "fn", "pn", "nc", "ln", "natural", "net", "len", "inner", "nb", "none", "k", "g", "nt", "j", "number", "sn", "ni", "ind", "ne", "t", "na", " ni", "cn", "note", "rn", "nn", "names", "w", "not", "ns", "d", "un", "norm", "v", "f", "le", "m", "nl", " N", "z", "num", "mn"], "arr": ["rep", "mp", "ars", "bl", "list", "ab", "ms", "obj", "adj", "img", "fr", "ax", "expr", "tr", "dr", "p", "arg", "ARR", "row", "vals", "Ar", "coll", "gr", "rel", "ear", "ptr", "nt", "Array", "v", "ref", "ar", "ray", "rev", "err", "arb", "j", "hash", "rest", "attr", "buffer", "shr", "rec", "rr", "br", "array", "pl", "repl", "pr", "elt", "map", "rs"], "sc": [" scr", "ch", "sync", "cle", "asc", "mc", "osc", "cr", "Sc", "ko", "sci", "c", "bc", "cc", "sys", "sim", "SC", "lc", " Sc", "rc", "st", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "nc", "sq", "cs", "ck", "pc", "ser", "isc", "capt", "scl", "sh", "sp", "esc", "cor"], "i": ["bi", "multi", "ms", "si", "ti", "iter", "ai", "ip", "it", "s", "set", "ri", "iu", "ie", "o", "zi", "xi", "k", "di", "pi", "qi", "x", "ei", "g", "mi", "v", "ini", "ci", "y", "sim", "id", "j", "uri", "I", "ind", "q", "ij", "iy", "me", "m", "ami", "ori", "ki", "\u0438", "batch", "ii", "info", "us", "gi", "ims", " I", "li", "ex", "hi", "ui", "ji", "cli", "ix", "p", "im", "ic", "phi", "u", "wi"], "l": ["kl", " L", "low", "ll", "o", "b", "lb", "lit", "loc", "x", "el", "c", "left", "lp", "tl", "lo", "g", "ly", "v", "ml", "lf", "j", "h", "lc", "length", "le", "ls", "lr", "m", "nl", "ul", "cl", "sl", "ln", "dl", "t", "li", "L", "z", "pl", "len", "p", "u"], "r": ["rn", "ra", "right", "mr", "ro", "o", "fr", "re", "tr", "art", "b", "rd", "dr", "rid", "rt", "cr", "row", "c", "ran", "d", "nr", "g", "or", "ar", "rg", "err", "rm", "j", "rc", "q", "ry", "sr", "m", "lr", "R", "rx", "rw", "rr", "z", "rand", "rb", "pr", "p", "er", "rs", "rar", "ru", "u", "ri"], "sofar": ["required", "limited", "resp", "ra", "success", "available", "inished", "lim", "red", "bytes", "progress", "req", "ied", "found", "loc", "sel", "ran", "med", "far", "nm", "centered", "fine", "done", "needed", "f", "ij", "recent", "good", "packed", "frac", "raw", "used", "num", "bound", "count", "received", "ctr", "ed"], "min": ["mp", "old", "ms", "lt", "max", "lim", "sol", "mid", "diff", "mr", "local", "rem", "none", "mm", "next", "mine", "low", "first", "amin", "req", "cmp", "lower", "rel", "left", "med", "before", "version", "mi", "ref", "mod", "only", "start", "err", "minute", "j", "just", "mini", "ind", "init", "pri", "m", "rest", "pre", "initial", "mins", "red", "minimum", "sort", "MIN", "Min", "li", "rand", "emin", "len", "mis", "mem", "inner", "pres", "p", "small", "reset", "mn"], "ind_l": ["cycleoglb", "ind0lc", "ind_m", "ind_e", "indMl", "ind__lb", "cycle_lb", "init_o", "ind_sl", "cycleogsl", "ind____ll", "indogl", "cycle_l", "indMlp", "init_ll", "Ind_L", "init____ll", "indMo", "Ind_l", "init_lp", "ind____lp", "cycle_sl", "ind_lc", "init____o", "ind____o", "indMll", "ind____l", "ind__l", "cycleogl", "ind_L", "ind_lb", "init_l", "ind0l", "ind_o", "Ind_m", "indoglb", "ind__sl", "cycleoge", "init____l", "ind__e", "indogsl", "cycle_e", "init____lp", "ind_lp", "Ind_lc", "indoge", "ind_ll", "ind0L", "ind0m"], "ind_r": ["ind_e", "ind2e", "ind___o", "ind_R", "stick_r", "ind2r", "Ind2l", "ind08rg", "id08rg", "ind_rn", "indaxyo", "Ind2e", "stick_o", "ind_d", "ind_o", "indaxyr", "Ind_mr", "indaxyrn", "ind08m", "stick_rar", "indaxyrar", "id08r", "Ind_l", "id08R", "ind2m", "id08m", "ind___rn", " ind_b", "ind_b", "id_r", "Ind_r", " ind_d", "ind_rg", "id_m", " ind_pr", "ind_pr", "ind08R", "id_R", "stick___o", "Ind_e", "ind_mr", "stick___rn", "ind2rg", "ind_m", "Ind2mr", "stick___rar", "ind___r", "ind2l", "ind08r", "stick___r", "stick_rn", "ind_rar", "Ind2r", "ind___rar", "ind2mr", "id_rg", "ind2R"], "prev": ["rep", "mp", "var", "cur", "adj", "resp", "obj", "older", "last", "tmp", "max", "diff", "next", "rem", "first", "best", "cmp", "ec", "jp", "rel", "before", "ptr", "ref", "v", "rev", "err", "current", "j", "Previous", "top", "ren", "ij", "init", "pri", "pre", "rest", "br", "jump", "vious", "inv", "pres", "pr", "reverse", "p", "par", "reset", "Prev"], "curr": [" Curm", "crl", "Curl", "Curmr", "Curi", "crr", "carR", " curmr", "Currc", "terri", "terr", "carl", "Curv", " Curl", "curi", "deri", "Curr", "curv", "terR", "corR", "terrb", " curm", "Currb", "corrc", " curri", " currb", "carr", "CurR", "currc", "carrb", " curR", "curl", "curp", "corv", " curl", "derl", "corl", "cori", "corri", "curR", "Curp", " Curp", "currb", "crv", "curmr", "corr", " curp", "derrc", "crmr", "curri", "curm", "derr", "crrb", "corrb", " Curr", "Curm"], "buf": ["bl", "var", "cur", "uf", "fb", "buff", "pkg", "tmp", "wb", "bytes", "cap", "box", "b", "bs", "bin", "db", "vec", "window", "tab", "seq", "ref", "bar", "cb", "err", "Buff", "conv", "cv", "emb", "init", "bag", "mu", "buffer", "pb", "rw", "batch", "Buffer", "cmd", "mb", "br", "rb", "txt", "mem", "orig"], "index": ["column", "size", "axis", "si", "close", "iter", "open", "nn", "max", "level", "Index", "read", "position", "next", "key", "all", "status", "first", "instance", "pointer", "loc", "row", "x", "seek", "speed", "find", "forward", "point", "address", "line", "id", "start", "error", "pos", "number", "length", "ind", "value", "init", "scan", "buffer", "slice", "head", "page", "link", "offset", "connection", "action", "input", "count", "num", "frame", "ix", "vector"], "in": ["en", "std", "In", "it", "din", "from", "mc", "rin", "o", "mm", "world", "ins", "rt", "by", "out", "doc", "c", "inc", "or", "ini", "ar", "err", "on", "ma", "io", "h", "f", "ind", "IN", "init", "m", "log", "info", "con", "t", "isin", "is", "nin", "gin", "input", "ex", "inn", "inf", "inner", "p", "ic", "cin"], "total": ["result", "required", "summary", "relative", "size", "complete", "partial", "unique", "json", "eta", "max", "available", "equal", "empty", "all", "none", "bytes", "table", "tty", "sum", "percent", "latest", "unit", "doc", "meta", "amount", "this", "volume", "window", "unknown", "no", "type", "padding", "current", "done", "ta", "number", "length", "free", "normal", "batch", "buffer", "alloc", "otal", "system", "Total", "t", "data", "full", "base", "page", "scale", "count", "net", "len", "serial", "negative", "database", "sequence", "note"], "integer": ["ient", "result", "significant", "division", "major", "integ", "iter", "information", "entity", "position", "image", "translation", "neutral", "nr", "ion", "primary", "atomic", "error", "minute", "number", "reference", "length", "universal", "value", "initial", "ent", "ment", "operation", "zero", "system", "object", "num", "imal", "important", "serial", "auto", "negative", "sequence", "inner", "maximum", "entry"], "neg": ["iter", "orient", "sign", "diff", "not", "odd", "dep", "neutral", "ko", "rel", "coll", "nr", "origin", "deg", "no", "rev", "bot", "pos", "Neg", "ind", "sec", "nom", "good", "zero", "minus", "exp", "ne", "rec", "foreign", "agg", "rot", "acc", "jump", "dest", " negative", "inv", "desc", "div", "negative", "orig", "dec"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main\\n{\\n\tpublic static void main(String args[])\\n\t{\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\twhile(true)\\n\t\t{\\n\t\t\ttry\\n\t\t\t{\\n\t\t\t\tint n = sc.nextInt() + sc.nextInt();\\n\t\t\t\tint i = 1;\\n\t\t\t\twhile (n >= 10)\\n\t\t\t\t{\\n\t\t\t\t\tn /= 10;\\n\t\t\t\t\ti++;\\n\t\t\t\t}\\n\t\t\t\tSystem.out.println(Integer.toString(i));\\n\t\t\t}\\n\t\t\tcatch(Exception e)\\n\t\t\t{\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\t}\\n}", "target": "176", "substitutes": {"sc": ["ch", "src", "cam", "cle", "mc", "ctrl", "cr", "Sc", "scope", "sci", "c", "ctx", "bc", "cc", "sys", "ng", "SC", "conv", "lc", "rc", "usc", "sec", "sch", "nl", "gc", "scan", "cl", "ss", "uc", "nc", "sq", "tc", "cs", "system", "pb", "se", "tch", "pc", "dc", "ctl", "psc", "isc", "syn", "capt", "sh", "cu", "sv", "sp"], "n": ["nb", "nn", "it", "non", "nor", "ll", "none", "l", "np", "ns", "pi", "x", "c", "d", "nr", "g", "norm", "nt", "v", "nm", "y", "ng", "j", "number", "sn", "ni", "nu", "m", "nl", "nc", "ln", "nan", "ne", "t", "na", "z", "num", "net", "cn", "len", "dn", "N", "mn"], "i": ["bi", "multi", "si", "ti", "ai", "integer", "it", "iu", "o", "l", "zi", "xi", "di", "pi", "qi", "x", "c", "ei", "mi", "v", "ini", "ci", "oi", "id", "sim", "j", "f", "ni", "I", "ind", "q", "m", "index", "ori", "ii", "gi", "t", "is", "li", "hi", "num", "ui", "cli", "client", "N", "inner", "ix", "p", "im", "phi"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tint num;\\n\t\tString[] weight;\\n\t\ttry (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))){\\n\\n\t\t\tString n = br.readLine();\\n\t\t\tString w = br.readLine();\\n\\n\t\t\tnum = Integer.parseInt(n);\\n\t\t\tweight = w.split(\" \");\\n\t\t} catch (IOException e) {\\n\\n\t\t\treturn;\\n\t\t}\\n\t\tint minDiff = Integer.MAX_VALUE;\\n\t\tfor (int t = 1; t < num; t++) {\\n\\n\t\t\tint s1 = 0;\\n\t\t\tfor (int index = 0; index < t; index ++) {\\n\\n\t\t\t\ts1 += Integer.parseInt(weight[index]);\\n\t\t\t}\\n\t\t\tint s2 = 0;\\n\t\t\tfor (int index = t; index < num; index ++) {\\n\\n\t\t\t\ts2 += Integer.parseInt(weight[index]);\\n\t\t\t}\\n\t\t\tif (minDiff > Math.abs(s1 - s2)) {\\n\\n\t\t\t\tminDiff = Math.abs(s1 - s2);\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(minDiff);\\n\t}\\n}\\n", "target": "2", "substitutes": {"num": ["nb", "en", "size", "multi", "missing", "total", "snap", "max", "pt", "um", "dim", "cal", "rem", "cum", "np", "tim", "sum", "u", "th", "om", "x", "unit", "un", "nm", "no", "nt", "NUM", "span", "number", "Number", "nom", "nu", "mon", "m", "tm", "tu", "Num", "con", "na", "count", "net", "len", "temp", "N", "orig", "p", "nam", "mn"], "weight": ["order", "size", "total", "sw", "cache", "network", "cycle", "status", "wd", "chain", "ping", "wt", "wire", "sum", "warn", "style", "password", "prefix", "work", "speed", "share", "draw", "cost", "score", "type", "we", "strength", "span", "words", "shape", "power", "rank", "force", "word", "q", "wed", "fw", "aw", "weights", "stable", "transform", "sort", "wl", "link", "scale", "direction", "count", "width", "mem", "filter", "graph", "wn", "p", "queue", "weak", "Weight"], "n": ["nv", "en", "nn", "nw", "s", "nor", "o", "l", "np", "ns", "x", "i", "c", "d", "nr", "norm", "nt", "y", "ng", "on", "sn", "q", "fn", "nu", "m", "nl", "ln", "ne", "na", "z", "cn", "net", "dn", "N", "gn", "p", "note"], "w": ["wr", "wo", " W", "ws", "nw", "sw", "wb", "wu", "wp", "war", "wt", "x", "d", "tw", "rew", "ew", "v", "we", "W", "wh", "wx", "kw", "wa", "aw", "fw", "rw", "ow", "wl", "raw", "wal", "p", "wid", "wd", "wi"], "minDiff": ["minDef", "minNew", "smallDiff", "minimumDist", "diffDiff", "diffChange", "smallDelta", "diffDifferent", "MinDifferent", "diffDist", "smallChange", "minShift", "MinDiff", "minChange", " minShift", "minDelta", " minDist", "smallDist", "maxDist", "maxDiff", " minDef", "maxDelta", "maxNew", "minimumDef", " minDelta", " minDifferent", " minNew", "minDifferent", "maxDifferent", "MinDist", "minimumDelta", "MinShift", "MinNew", "diffDelta", "MinDef", "maxChange", "minimumDiff", "minDist", "diffShift", "MinDelta"], "t": ["tt", "dt", "ot", "bolt", "at", "total", "e", "it", "s", "set", "time", "pt", "test", "T", "term", "o", "l", "tr", "b", "k", "out", "unit", "i", "c", "ts", "tw", "text", "g", "token", "v", "unt", "type", "y", " T", "tp", "ty", "tf", "j", "ta", "td", "top", "f", "title", "q", "m", "ent", "target", "tu", "te", "tc", "typ", "task", "to", "tip", "tree", "net", "ct", "temp", "tg", "p"], "s1": ["S7", "set001", "serv7", "stats1", "js2", "serv123", "santa", "s101", "setanta", "S2", "save001", "js1", " s001", "statsanta", "set101", "set2", "save101", " s100", "set1", "stats101", "stats001", " s0", " s123", "s100", "save1", "s001", "saveanta", "s7", "serv2", "s0", "S0", "S001", "js100", "js123", "S100", "set0", "serv100", "s123", " s7", "serv1", "S1"], "index": ["axis", "loop", "set", "Index", "position", "pe", "coord", "EX", "bo", "unit", "seek", "unknown", "ion", "find", "point", "no", "ident", "ox", "span", "info", "exp", "slice", "directory", "equ", "link", "offset", "label", "location", "stick", "open", "IND", "level", "cycle", "status", "tex", "exist", "context", "x", "scope", "iterator", "search", "gate", "request", "pose", "vector", "update", "iter", "filename", "key", "connect", "image", "ask", "address", "error", "pos", "ind", "route", "zero", "suggest", "timeout", "ex", "other", "ix", "condition", "check", "choice", "instance", "loc", "ice", "mix", "prefix", "dimension", "date", "config", "po", "capacity", "active", "connection", "exit", "hex"], "s2": ["summary002", "series62", "series2", "ss3", "s62", " s62", "ss2", "S2", " s02", "m2", "S256", " s256", " s002", "stats2", "S3", "summary2", "summary62", "series3", "S8", "s256", "m1", "m256", "s3", "ss8", "S62", "stats62", "s8", "stats02", " s3", "summary02", "series1", "m02", "s02", " s8", "stats002", "s002", "ss1", "S02", "S1"]}}
{"code": "\\nimport java.util.Scanner;\\n\\n/*\\n * To change this license header, choose License Headers in Project Properties.\\n * To change this template file, choose Tools | Templates\\n * and open the template in the editor.\\n */\\n\\n/**\\n *\\n * @author otsuhata\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int a = sc.nextInt();\\n    int b = sc.nextInt();\\n    \\n    if(-1000 <= a && a <= 1000 && -1000 <= b && b <= 1000 && a < b) {\\n        System.out.println(\"a < b\");\\n    }else if(-1000 <= a && a <= 1000 && -1000 <= b && b <= 1000 && a > b) {\\n        System.out.println(\"a > b\");\\n    }else if(-1000 <= a && a <= 1000 && -1000 <= b && b <= 1000 && a == b) {\\n        System.out.println(\"a == b\");\\n    }else {\\n        System.out.println(\"Please enter a number from -1000 to 1000.\");\\n    }\\n  }    \\n}", "target": "179", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "cam", "asc", "mc", "osc", "anc", "cr", "Sc", "out", "ko", "c", "sub", "inc", "ner", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "nc", "system", "cs", "tc", "sq", "ck", "se", "pc", "ctl", "acc", "psc", "isc", "syn", "desc", "scl", "sh", "sv", "sp", "esc"], "a": ["an", "da", "at", " A", "all", "l", "area", "addr", "ta", "ae", "as", "n", "aq", "p", "ate", "aff", "ab", "au", "s", "i", "A", "y", "ak", "ia", "h", "admin", "alpha", "ac", "q", "ach", "are", "aa", "apa", "ca", "la", "ba", "eas", "obj", "and", "element", "el", "this", "era", "act", "r", "number", "oa", "action", "t", "ed", "add", "item", "ea", "ai", "e", "ee", "aaa", "aj", "am", "d", "ar", "id", "ma", "f", "ao", "app", "the", "ga", "att", "sta", "acc", "input", "sa", "er", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "fb", "e", "sb", "it", "ch", "obj", "wb", "w", "o", "eb", "lib", "l", "ob", "bs", "by", "db", "out", "bo", "c", "i", "d", "g", "r", "bc", "v", "bf", "y", "bar", "cb", "bt", "xb", "j", "f", "back", "q", "m", "batch", "buffer", "mb", "blue", "bis", "t", "br", "base", "z", "B", "rb", "n", "p", "u"]}}
{"code": "import java.util.*;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        \\n\t\tScanner sc=new Scanner(System.in);\\n\\n\t\tint A=sc.nextInt();\\n\t\tint B=sc.nextInt();\\n\t\tint ans;\\n\t\t\\n\t\tif (A==B){\\n\t\t    ans=A+B;\\n\t\t}else{\\n\t\t    if (A<B){A=B;}\\n\t\t    ans=A*2-1;\\n\t\t}\\n\\n        System.out.println(ans);\\n    }\\n}\\n", "target": "75", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "out", "ko", "c", "inc", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "usc", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "nc", "system", "cs", "tc", "sq", "ck", "pc", "acc", "isc", "syn", "desc", "scl", "sh", "sv", "sp", "esc"], "A": ["AY", "AB", "S", "NA", "AT", "This", "PA", "BA", "T", "AF", "E", "EA", "AC", "U", "AGE", "AI", "H", "As", "Z", "P", "HA", "AS", "RA", "AD", "Ar", "CA", "V", "ASC", "SA", "AV", "ACC", "M", "ACT", "C", "WA", "AE", "LA", "AR", "a", "Part", "G", "I", "AA", "ANS", "R", "AL", "Parts", "IA", "GA", "AP", "L", "AU", "AST", "API", "N", "AN", "An"], "B": ["AB", "S", "BR", "BB", "BU", "J", "BF", "RB", "D", "BA", "T", "CB", "E", "b", "IB", "VB", "USB", "Y", "Z", "P", "BT", "TB", "Blue", "V", "BO", "M", "C", "SB", "BC", "WB", "NB", "G", "I", "BI", "OB", "BS", "EB", "FB", "LB", "BL", "Reb", "BM", "L", "JB", "F", "GB", "Q", "N", "DB"], "ans": ["asks", "an", "uns", "ars", "anks", "ms", "mas", "ents", "s", "beans", "ds", "aps", "ands", "ann", "actions", "ins", "ns", "outs", "aus", "ags", "marks", "faces", "ks", "ces", " scans", "pan", "cons", "aces", "arts", " means", "ats", "nets", "lets", "ANN", "ends", "anes", "ates", "ants", "eps", "xs", "ANS", "can", "ads", "ls", " Ans", " beans", "types", "lan", "cs", "as", " spans", "offs", "books", "amps", "ens", "rs", "AN", "An", "ids", "eds"]}}
{"code": "import java.io.*;\\nclass Main{\\npublic static void main(String[] args){\\nString[] data = new String[3];\\nint output = 0;\\nBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\ntry {\\nwhile (true){\\ndata = (br.readLine()).split(\" \");\\nif (data[1].equals(\"?\")) break;\\nswitch(data[1]){\\ncase \"+\":\\noutput = Integer.parseInt(data[0]) + Integer.parseInt(data[2]);\\nbreak;\\ncase \"-\":\\noutput = Integer.parseInt(data[0]) - Integer.parseInt(data[2]);\\nbreak;\\ncase \"*\":\\noutput = Integer.parseInt(data[0]) * Integer.parseInt(data[2]);\\nbreak;\\ncase\"/\":\\noutput = Integer.parseInt(data[0]) / Integer.parseInt(data[2]);\\nbreak;\\n}\\nSystem.out.println(output);\\n}\\n} catch (IOException e) {\\ne.printStackTrace();\\n} finally {\\ntry {\\nbr.close();\\n} catch(IOException e) {\\ne.printStackTrace();\\n}\\n}\\n}\\n}", "target": "139", "substitutes": {"data": ["list", "da", "json", "set", "empty", "all", "chain", "step", "details", "ops", "window", "no", "options", "res", "value", "normal", "buffer", "info", "label", "p", "val", "result", "it", "cache", "block", "bytes", "group", "table", "del", "text", "multiple", "rel", "lines", "parse", "line", "dat", "name", "where", "extra", "values", "aw", "join", "raw", "valid", "array", "len", "sample", " DATA", "auto", "history", "reset", "query", "results", "partial", "content", "none", "db", "row", "def", "done", "mu", "debug", "bus", "rule", "map", "entry", "pieces", "parts", "items", "missing", "tx", "DATA", "form", "str", "string", "ata", "batch", "params", "input", "stat", "num", "div", "clear"], "output": ["Output", "result", "update", "response", "outer", "column", "language", "display", "section", "quiet", "success", "hidden", "console", "PUT", "written", "set", "content", "network", "human", "position", "put", "status", "block", "image", "out", "secret", "text", "absolute", "format", "production", "generated", "default", "config", "export", "plot", "remote", "print", "component", "value", "document", "ut", "target", "affected", "batch", "write", "buffer", "blue", "region", "connection", "offset", "label", "exit", "input", "net", "message", "client", "cut", "filter", "code", "tail"], "br": ["wr", "ber", "hr", "bl", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "eb", "tr", "b", "buf", "dr", "browser", "bd", "bs", "cr", "db", "out", "rel", "gr", "r", "bh", "ref", "bc", "bt", "cb", "j", "bridge", "lr", "shr", "bp", "rb", "ger", "div", "pr", "be", "rs", "bro"]}}
{"code": "import java.util.*;\\npublic class Main{\\n\tpublic static void main(String[] args){\\n      \tScanner sc = new Scanner(System.in);\\n    \tint n = sc.nextInt();\\n      \tint k = sc.nextInt();\\n      \tString s = sc.next();\\n      \ts = s.substring(0,k-1) + s.substring(k-1,k).toLowerCase() + s.substring(k, n);\\n      \tSystem.out.println(s);\\n    }\\n}", "target": "71", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "sci", "c", "ctx", "sub", "cons", "inc", "bc", "cc", "fc", "cont", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "pb", "nc", "sq", "cs", "tc", "pc", "ctl", "ser", "sa", "capt", "isc", "desc", "sh", "scl", "syn", "sv", "sp", "esc"], "n": ["nb", "en", "nn", "np", "ns", "out", "c", "i", "d", "nr", "r", "nt", "nm", "v", "no", "ng", "j", "a", "number", "sn", "ni", "fn", "m", "nu", "nl", "nc", "ln", "nan", "ne", "t", "na", "cn", "num", "N", "mn"], "k": ["ka", "kl", "ke", "kr", "kn", "w", "kind", "sk", "o", "kid", "K", "l", "ko", "c", "ks", "i", "ik", "g", "ek", "kt", "v", "ku", "ok", "ak", "j", "h", "kk", "q", "kw", "m", "mk", "kj", "ki", "km", "ck", "zero", "tk", "t", "z", "dk", "num", "unk", "p", "kh"], "s": ["ms", "des", "S", "space", "ws", "sts", "sf", "sb", "src", "set", "w", "sol", "stats", "say", "source", "csv", "gets", "l", "b", "ins", "ns", "bs", "x", "i", "c", "ts", "tes", "js", "str", "g", "r", "v", "ats", "its", "conv", "h", "f", "gs", "string", "st", "ls", "sg", "m", "aws", "sl", "ss", "sq", "sort", "less", "us", "qs", "se", "ims", "t", "ps", "is", "sql", "sample", "p", "sv", "rs", "hs", "sp", "u"]}}
{"code": "\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(final String[] args) {\\n\t\t@SuppressWarnings(\"resource\")\\n\t\tfinal Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\\n\t\tfinal String S = in.next();\\n\t\tString judge = solve(S);\\n\t\tSystem.out.println(judge.trim());\\n\t}\\n\\n\tpublic static boolean isPossibleMonth(String m) {\\n\t\tfinal int val = Integer.parseInt(m);\\n\t\treturn val <= 12 && val >= 1;\\n\t}\\n\\n\tstatic String solve(final String S) {\\n\t\tfinal boolean headIsMonth = isPossibleMonth(S.substring(0, 2));\\n\t\tfinal boolean tailIsMonth = isPossibleMonth(S.substring(2, 4));\\n\t\tif (headIsMonth) {\\n\t\t\tif (tailIsMonth) {\\n\t\t\t\treturn \"AMBIGUOUS\";\\n\t\t\t} else {\\n\t\t\t\treturn \"MMYY\";\\n\t\t\t}\\n\t\t} else {\\n\t\t\tif (tailIsMonth) {\\n\t\t\t\treturn \"YYMM\";\\n\t\t\t} else {\\n\t\t\t\treturn \"NA\";\\n\t\t\t}\\n\t\t}\\n\t}\\n}\\n", "target": "5", "substitutes": {"in": [" din", "en", "add", "In", "s", "sol", " IN", "din", "file", " out", "all", "source", "world", "l", "k", "ins", "thin", "conf", "char", "out", "i", "d", "inc", "lines", "sin", "r", " In", "ini", "err", "f", "win", "ind", "st", "IN", "log", "scan", "reader", "OUT", "con", "isin", "is", "stream", "input", "n", "inn", "inf", "inner", "p", "er", "cin"], "S": ["CS", "SAN", "DS", "SF", "J", "s", "SER", "T", "E", "STR", "STAT", "SU", "SL", "SE", "SEC", "H", "Y", "SAM", "P", "JSON", "Summary", "RAW", "TS", "A", "SM", "V", "Sample", "SA", "ST", "M", "C", "SIM", "SD", "SB", "SI", "X", "SR", "GS", "I", "WS", "G", "string", "IN", "SP", "SO", "R", "SQL", "JS", "L", "NS", "B", "F", "N", "SN", "SS"], "judge": ["shadowenge", " judGE", "juge", "Judenge", "judged", "munged", "munGE", "juGE", "judGE", "munge", "Judge", "judenge", " judged", "JudGE", "Judged", "judgem", "Judgem", "mungem", "shadowGE", "shadowge", "shadowged", "juged", " judgem", "juenge"], "m": ["ms", "md", "s", "mt", "sm", "cm", "w", "msg", "mc", "mm", "l", "b", "k", "x", "i", "c", "d", "str", "g", "r", "mi", "v", "M", "y", "j", "f", "h", "a", "q", "string", "tm", "month", "dm", "t", "gm", "z", "n", "p"], "val": ["slot", "pol", "var", "vt", "ve", "vol", "it", "cal", "all", "lev", "pret", "lib", "l", " v", "loc", "vals", "sel", "x", "el", " Val", "i", "def", "V", "v", " aval", "mod", "ret", "min", "Val", "al", "le", "value", "index", "sl", "il", "dev", "aval", "valid", "VAL", "data", "util", "len", "div", "elt", "rol", "p", "ival", "eval"], "headIsMonth": ["windowImmonth", "windowImMon", "headisYear", "headISmonth", "headInYear", "headISMon", "headingIsMonth", "headInMonth", "windowIsM", "windowIsMon", "headAsM", "headAsMon", "headingInYear", "headImmonth", "headInMon", "windowIsMonth", "headIsmonth", "headISM", "headingInMon", "headIsYear", "headingIsYear", "headImM", "headImMonth", "headisMon", "headImMon", "headisMonth", "headIsM", "headIsMon", "headISMonth", "windowImM", "windowIsmonth", "headingIsMon", "headAsMonth", "headingInMonth", "headAsmonth", "windowImMonth"], "tailIsMonth": ["tailOneTime", "headHasMonth", "tailIsmonth", "headHasMM", "termIsMonth", "tailISMethod", "pullIsMachine", "tailIsM", "termIsMon", "pullIssM", "pullIssMonth", "tailIssM", "tailHasmonth", "tailIssMachine", "termISMon", "tailWasMachine", "tailOnemonth", "termIsMethod", "headIsMM", "headHasTime", "termISMethod", "tailIsMachine", "pullIssMon", "tailISMonth", "tailWasMethod", "tailIsMM", "tailIsTime", "tailISM", "tailISMachine", "tailHasTime", "termISMonth", "pullIsMon", "tailIsMethod", "headHasmonth", "pullIsM", "headIsmonth", "tailHasMonth", "pullIssMachine", "tailISMon", "tailIsMon", "tailOneMM", "tailIssMonth", "pullIsMonth", "tailOneMonth", "tailISTime", "tailWasM", "tailISMM", "tailHasMM", "headIsTime", "tailIssMon", "tailISmonth", "tailWasMon", "tailWasMonth"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner((System.in));\\n\t\tint n = sc.nextInt();\\n\t\tint[] a = new int[n];\\n\t\tint ans = 0, o = 0, e = 0;\\n\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tint x = sc.nextInt();\\n\t\t\tif (x % 2 == 0) {\\n\t\t\t\ta[e] = x;\\n\t\t\t\te++;\\n\t\t\t} else {\\n\t\t\t\to++;\\n\t\t\t}\\n\t\t}\\n\t\tif (o != n) {\\n\t\t\tfor (int i = 0; i < e; i++) {\\n\t\t\t\twhile (a[i] % 2 == 0) {\\n\t\t\t\t\tans++;\\n\t\t\t\t\ta[i] = a[i] / 2;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(ans);\\n\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "39", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "arc", "c", "bc", "cc", "sys", "co", "fc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "ss", "scan", "pb", "nc", "sq", "tc", "cs", "ck", "so", "pc", "ctl", "psc", "pl", "isc", "desc", "capt", "scl", "sh", "syn", "sv", "sp", "esc"], "n": ["nb", "an", "en", "size", "nn", "s", "nor", "w", "l", "np", "k", "ns", "u", "c", "out", "d", "g", "r", "nt", "no", "v", "nm", "ng", "on", "name", "j", "number", "sn", "nu", "m", "nl", " N", "nc", "ne", "nan", "t", "na", "z", "num", "net", "count", "len", "N", "p", "mn"], "a": ["ap", "an", "la", "ba", "ab", "eas", "da", "at", "ea", "ai", "au", "set", "w", "next", "all", "aaa", "b", "changes", "aux", "c", "am", "A", "act", "ar", "ia", "ma", "ta", "f", "ao", "va", "ack", "alpha", "ac", "m", "wa", "aw", "index", "ata", "xa", "another", "ga", "oa", "att", "aa", "as", "sta", "na", "pa", "apa", "fa", "sa", "ca", "auto", "p", "history"], "ans": ["ies", "an", "errors", "uns", "ars", "ms", "ians", "ents", "names", "s", "ds", "ens", "flags", "aps", "obs", "ows", "ann", "es", "ons", "ins", "ns", "ones", "ros", "vals", "ks", "ops", "arts", "lines", "vs", "vers", "ats", "rows", "anes", "ants", "xs", "ANS", "can", "ls", "values", "ions", "cs", "os", "oa", "as", "ores", "ps", "ations", "ings", "rs", "outs", "ids"], "o": ["ot", "ee", "oin", "l", "ob", "oe", "out", "bo", "d", "c", "lo", "or", "no", "co", "ooo", "oi", "j", "io", "po", "ao", "mo", "m", "yo", "go", "so", "oa", "os", "t", "fo", "to", "offset", "O", "oo", "p", "ou", "u", "ro"], "e": ["ate", "en", "be", "it", "ee", "ie", "et", "eb", "eeee", "E", "es", "l", "pe", "u", "ec", "oe", "el", "c", "d", "ei", "g", "ue", "r", "end", "co", "we", "de", "le", "ae", "ele", "ent", "te", "ne", "se", "eu", "t", "ev", "ed", "p", "er"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "iter", "iu", "ie", "gu", "zi", "xi", "di", "pi", "qi", "this", "ei", "mi", "v", "ini", "ity", "ci", "y", "sim", "id", "j", "f", "iq", "uri", "I", "ind", "ni", "ij", "q", "init", "iy", "m", "me", "index", "ori", "ki", "\u0438", "ami", "ii", "info", "gi", "slice", "ims", "is", "li", "ex", "hi", "ui", "cli", "ji", "ix", "fi", "im", "phi", "ri"], "x": ["dx", "mx", "px", " xx", "tx", "xe", "xx", "xd", " cx", "xf", "ax", "xi", "xt", "xc", "fx", "xp", "ctx", "v", "ux", "co", "X", "y", "ox", "wx", "xs", "yx", "rx", "t", "hex", "xy", "z", "ex", "xxx", "ct", "ix", "xa", "lex"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.Arrays;\\n\\n/**\\n * 0001\uff1aList of Top 3 Hills\\n * \\n * @author Lyu\\n * @version 2015/06/21\\n */\\npublic class Main {\\n\\n    /**\\n     * 10\u500b\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u3001\u9ad8\u3044\u9806\u306b3\u3064\u51fa\u529b\u3059\u308b\u3002\\n     * \\n     * @param args\\n     * @throws IOException \\n     * @throws NumberFormatException \\n     */\\n    public static void main(String[] args) throws NumberFormatException, IOException {\\n\\n        // \u6a19\u6e96\u5165\u529b\u8aad\u53d6\u308a\\n        int[] heightOfHills = getHeightOfHills();\\n        \\n        // \u9ad8\u3044\u9806\u306b3\u3064\u3092\u8868\u793a\\n        printTop3(heightOfHills);\\n    }\\n\\n    \\n    /**\\n     * \u6a19\u6e96\u5165\u529b\u3092\u8aad\u307f\u53d6\u308a\u3001\u5c71\u306e\u9ad8\u3055\u3092\u8868\u3059\u30c7\u30fc\u30bf\u3092\u8981\u7d20\u657010\u306e\u914d\u5217\u3067\u8fd4\u3059\u3002\\n     * \\n     * @return \u5c71\u306e\u9ad8\u3055\u3092\u8868\u3059\u914d\u5217\\n     * @throws NumberFormatException\\n     * @throws IOException\\n     */\\n    private static int[] getHeightOfHills() throws NumberFormatException, IOException {\\n        // \u5165\u529b\u8aad\u53d6\u308a\\n        InputStreamReader streamReader = new InputStreamReader(System.in);\\n        BufferedReader bufferedReader = new BufferedReader(streamReader);\\n\\n        String line = null;\\n        int[] heightOfHills = new int[10];\\n        int count = 0;\\n\\n        try {\\n            while ((line = bufferedReader.readLine()) != null) {\\n                heightOfHills[count] = Integer.parseInt(line);\\n                ++count;\\n            }\\n        } finally {\\n            bufferedReader.close();\\n            streamReader.close();\\n        }\\n        return heightOfHills;\\n    }\\n\\n    /**\\n     * \u53d7\u3051\u53d6\u3063\u305fint\u578b\u914d\u5217\u8981\u7d20\u3092\u3001\u6570\u5024\u306e\u5927\u304d\u3044\u9806\u306b3\u3064\u51fa\u529b\u3059\u308b\u3002\\n     * \\n     * @param array int\u578b\u306e\u914d\u5217\\n     */\\n    private static void printTop3(int[] array) {\\n        // \u30bd\u30fc\u30c8\\n        Arrays.sort(array);\\n        \\n        // \u9ad8\u3044\u9806\u306b3\u3064\u3092\u51fa\u529b\\n        for (int i = 1; i <= 3; ++i) {\\n            System.out.println(array[array.length - i]);\\n        }\\n    }\\n}", "target": "164", "substitutes": {}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\nclass Main{\\n    public static void main(String[] args) throws IOException{\\n    \tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n    \twhile(true){\\n            String[] strArr = br.readLine().split(\" \");\\n\\n            int a = Integer.parseInt(strArr[0]);\\n            String op = strArr[1];\\n            int b = Integer.parseInt(strArr[2]);\\n\\n            if(op.equals(\"?\")) break;\\n\\n            switch(op){\\n            \tcase \"+\":\\n            \t\tSystem.out.println(a + b);\\n            \t\tbreak;\\n            \tcase \"-\":\\n            \t\tSystem.out.println(a - b);\\n            \t\tbreak;\\n            \tcase \"*\":\\n            \t\tSystem.out.println(a * b);\\n            \t\tbreak;\\n            \tcase \"/\":\\n            \t\tSystem.out.println(a / b);\\n            \t\tbreak;\\n            \tdefault:\\n            \t\tbreak;\\n            }\\n    \t}\\n    }\\n}", "target": "139", "substitutes": {"br": ["wr", "bsp", "ber", "bi", "hr", "bl", "kr", "ch", "BR", "Br", "vr", "mr", "next", "fr", "er", "tr", "buf", "dr", "browser", "bd", "cr", "gb", "jp", "bg", "gr", "str", "r", "bh", "bc", "yr", "bt", "bridge", "lr", "bp", "rb", "bm", "pr", "div", "be", "bro", "bn"], "strArr": ["strAfR", " strDerrb", "strDergr", "strTrry", "strTrrs", "strAfb", " strDerrc", "printARstr", "strArry", "brCurR", "strDerrc", "strErR", "strarrw", "strarrrb", "strARrc", "strarrr", "strCurrs", "strArgr", "strArraystr", "strARr", "printArry", "strArw", "strDerw", "strDerb", "strArrayrs", "strTrr", " strDergr", " strDerw", "brArr", " strDerx", " strArrb", "strCurr", "brArR", "brArb", "strARry", "strArrayry", "strArrb", "printARrs", "strARb", "strArR", "brCurr", "strErrs", "strArmgr", " strArx", "strARstr", "strArx", "strDerx", "printArstr", "strARw", "printARry", "strTrstr", "strDerrb", " strDerb", "strCurR", "printArrs", " strArrc", "strAfr", "strArrc", "strARx", "strArmb", "strARrb", "brCurrs", " strArgr", " strArw", "strArmr", " strArb", "printArr", "strarrrc", "brArrs", "printARr", "strArmx", "strDerr", "strArrayr", "strAfrs", " strDerr", "brCurb", "strErr", "strArb", "strArstr", "strARrs", "strARgr", "strErb", "strCurb", "strArrs"], "a": ["an", "result", "la", "ba", "ab", "eas", "da", "ea", "obj", "ai", "au", "at", "w", "from", "aka", "aaa", "aj", "area", "sha", "i", "am", "A", "era", "ar", "ia", "ta", "j", "ma", "ao", "va", "alpha", "ac", "ae", "m", "xa", "ga", "oa", "sta", "as", "t", "aa", "na", "pa", "to", "data", "apa", "sa", "aq", "p", "val"], "op": ["ap", "pop", "rep", "mp", "cp", "oper", "bit", "ot", "iter", "cop", "ip", "perm", "it", "up", "cat", "OP", "o", "opt", "cmp", "ob", "xp", "jp", "ops", "str", "omp", "type", "opp", "comp", "operator", "top", "oop", "hop", "Op", "operation", "exp", "typ", "cmd", "ps", "pa", "pr", "p", "pp", "sp", "ep"], "b": ["nb", "bi", "ba", "ab", "bool", "be", "bb", "fb", "e", "sb", "zb", "ib", "wb", "w", "erb", "o", "eb", "l", "ob", "gb", "by", "db", "bs", "ad", "i", "c", "d", "g", "r", "bc", "v", "y", "bar", "cb", "bt", "j", "f", "h", "m", "beta", "pb", "t", "base", "z", "B", "rb", "n", "p"]}}
{"code": "import java.util.*;\\nclass Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tsc.nextLine();\\n\t\tint[] A = castToInt(sc.nextLine().split(\" \"));\\n\t\tint[] B = castToInt(sc.nextLine().split(\" \"));\\n\t\tint[] C = castToInt(sc.nextLine().split(\" \"));\\n\t\tint total = 0;\\n\t\tint pre = 999;\\n\t\tfor (int a : A) {\\n\t\t\ttotal += B[a-1];\\n\t\t\tif (a - pre == 1) {\\n\t\t\t\ttotal += C[a-2];\\n\t\t\t}\\n        \tpre = a;\\n\t\t}\\n      System.out.println(total);\\n\t}\\n\tstatic int[] castToInt(String[] s) {\\n\t\tint[] ret = new int[s.length];\\n\t\tfor (int i = 0; i < s.length; i++) {\\n\t\t\tret[i] = Integer.parseInt(s[i]);\\n\t\t}\\n\t\treturn ret;\\n\t}\\n}", "target": "223", "substitutes": {"sc": ["irc", " scr", "ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "ko", "sel", "c", "row", "sci", "cons", "sub", "ctx", "inc", "dec", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "go", "nc", "sq", "cs", "tc", "tch", "pc", "ctl", "ser", "isc", "capt", "desc", "scl", "sh", "syn", "sv", "sp", "esc"], "N": ["S", "NA", "J", "D", "T", "E", "K", "No", "Z", "P", "V", " n", "M", "X", "Number", "I", "R", "NR", "Ns", "Num", "L", "NS", "F", "n", "O"], "A": ["AB", "S", "In", "AT", "This", "D", "BA", "T", "AF", "E", "K", "AC", "H", "As", "P", "AS", "Ar", "V", "CA", "SA", "AV", "AE", "AR", "I", "G", "AA", "TA", "AL", "IA", "AP", "L", "AM", "An"], "B": ["BG", "Bo", "AB", "Bs", "BR", "BB", "BU", "BF", "J", "RB", "BER", "BA", "b", "VB", "BT", "Bern", "TB", "Blue", "BD", "Bi", "BO", "BC", "WB", "NB", "BE", "BI", "OB", "Bar", "BS", "EB", "FB", "LB", "PB", "BL", "L", "Ber", "DB"], "C": ["CS", "CP", "EC", "S", "CG", "ENC", "D", "Cu", "Cache", "T", "CB", "CO", "E", "GC", "JC", "DC", "CL", "VC", "c", "Cloud", "COM", "CA", "V", "CAR", "BC", "CC", "CON", "Cs", "YC", "R", "CE", "CD", "CNN", "CF", "Co", "CCC", "CM", "CR"], "total": ["result", "floor", "shared", "relative", "summary", "complete", "partial", "human", "eta", "pal", "set", "max", "all", "translation", "sum", "percent", "details", "out", "created", "template", "meta", "trans", "common", "nt", "no", " totals", "global", "ta", "number", "basic", "alpha", "normal", "stable", "pretty", "zero", "otal", "quant", "confirmed", "raw", "valid", "Total", "t", "scale", "full", "base", "count", "num", "net", "n", "important", "temp", "database", "sequence", "note"], "pre": ["adj", "set", "PA", "pp", "prev", "prep", "next", "red", "pret", "re", "first", "pad", "Pre", "prime", "PRE", "rel", "prefix", "before", "ref", "pro", "current", "j", "mediate", " pref", "inter", "alpha", "post", "me", "pri", "pretty", "zero", "aa", "to", "apa", "pa", "offset", "ps", "pred", "pres", "temp", "p", "par", "sp"], "a": ["an", "la", "add", "ba", "part", "si", "ea", "at", "da", "au", "e", "ai", "next", "all", "aka", "o", "b", "k", "pi", "aj", "area", "aux", "x", "sha", "c", "am", "d", "era", "ja", "ia", "ta", "j", "ma", "ao", "va", "alpha", "ac", "ae", "wa", "index", "xa", "ga", "oa", "aa", "as", "t", "sta", "na", "pa", "apa", "z", "fa", "to", "sa", "ca", "isa", "n", "p", "val", "u"], "s": ["ses", "ms", "parts", "S", "ws", "sts", "ds", "w", "l", "b", "ns", "ins", "strings", "bs", "c", "ts", "js", "str", "g", "r", "v", "ats", "y", "its", "h", "f", "xs", "gs", "ashes", "ls", "m", "aws", "fs", "ss", "qs", "ims", "t", "ps", "is", "n", "p", "sv", "rs", "hs", "gets", "ids"], "ret": ["result", "des", "ft", "complete", "obj", "it", "mt", "rem", "pret", "re", "tr", "del", "Ret", "aux", "rt", "out", "jp", "def", "rel", "reply", "reset", "RET", "nt", "sys", "ar", "cont", "rets", "bar", "det", "rm", "conv", "res", " Ret", "gt", "back", "arr", "alt", "detail", "continue", "att", "ert", "t", "ext", "repl", "txt", "mem", "elt", "val", "ary"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "key", "o", "series", "chain", "zi", "xi", "di", "pi", "qi", "x", "ei", "mi", "v", "ini", "ci", "y", "id", "sim", "span", "j", "io", "uri", "iq", "I", "remote", "q", "ami", "me", "m", "ki", "\u0438", "MI", "ii", "gi", "us", "is", "li", "ui", "cli", "ji", "inner", "ix", "p", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner keyboard = new Scanner(System.in);\\n\\n\t\tint K = keyboard.nextInt();\\n\t\tint A = keyboard.nextInt();\\n\t\tint B = keyboard.nextInt();\\n\t\t\\n\t\tString ans =\"NG\"; \\n\t\tfor(int x=A; x<=B; x++) {\\n\t\t\tif(x%K == 0)\\n\t\t\tans = \"OK\";\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(ans);\\n\t\tkeyboard.close();\\n\t}\\n}\\n", "target": "28", "substitutes": {"keyboard": ["keyBoard", "keystick", " keystro", "yboard", " keyBoard", " keycon", "keystro", "cyboards", "cyuser", "schestore", " keyboards", "signboard", "myview", "eyboards", "keknife", "searchcon", "searchknife", "keyknife", "cystro", "keystore", " keystick", "searchboard", "yview", "scancontroller", "keboard", "Keyboards", "searchbook", "scheboard", "Keyview", "eyuser", "eystro", "myBoard", "signstick", "signstore", "keycon", " keystroke", "scanboard", " keycontroller", " keystore", "keycontroller", " keyview", "cyboard", " keyuser", "keyview", "keyuser", " keyblade", "scanboards", "kecon", "scheblade", "Keycontroller", "ystroke", "myboard", "kebook", "Keyboard", "signblade", "eyboard", " keybook", "yBoard", "keystroke", "scanview", "schestick", "keybook", " keyknife", "keyboards", "mystroke", "keyblade"], "K": ["CP", "J", "Kat", "FK", "MAX", "KR", "T", "KK", "Kind", "KS", "PK", "k", "KI", "H", "Sk", "Z", "P", "KEY", "V", "KN", "Mask", "M", "KA", "UK", "X", "C", "OK", "NB", "I", "G", "SK", "Max", "KING", "KE", "KB", "VK", "Q", "N"], "A": ["AY", "AB", "Abs", "AT", "This", "BA", "AF", "AC", "H", "As", "HA", "P", "AS", "RA", "AD", "CA", "SA", "ACT", "LA", "AR", "a", "G", "ABC", "AA", "Act", "AL", "IA", "GA", "AP", "L", "Av", "AM", "N", "Ax", "An"], "B": ["AB", "Bs", "BR", "BB", "BU", "J", "BF", "D", "BA", "T", "E", "b", "IB", "VB", "H", "Y", "USB", "P", "V", "BO", "M", "C", "BC", "NB", "G", "I", "BI", "R", "EB", "FB", "LB", "BL", "L", "GB", "N", "O", "DB"], "ans": ["asks", "an", "angs", "uns", "ars", "anks", "ms", "ents", "mas", "s", "rans", "ds", "aps", "ands", "ann", "es", "aints", "ons", "ins", "ns", "aus", "ros", "ks", "arts", "vs", "utters", " means", "forms", "ats", "oss", "anners", "ends", "ras", "res", "eps", "xs", "ants", "posts", "ANS", "ads", "ls", "orders", "san", "lan", "cs", "os", "as", "ps", "amps", "ens", "rs", "eds"], "x": ["dx", "mx", "px", " xx", "nex", "hello", "tx", "w", "xe", "xx", "xd", " cx", "ax", "pe", "xf", "xi", "k", "xt", " ax", "xc", "xes", "i", "ctx", "xp", "fx", "\u00e7", "v", "ux", "X", "y", "ox", " i", "j", "xs", "wx", "xxxx", " X", "yx", "inx", "rx", "index", "m", "batch", "t", "xy", "z", "ex", "xxx", "ct", "n", "xxxxxxxx", "yy", "ix", "xa", "lex", "qu"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main{\\n\\n    public static void main(String[] args) {\\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\\n        try {\\n            Integer dataNum = Integer.valueOf(in.readLine());\\n\\n            for (int i = 0; i < dataNum.intValue(); i++) {\\n\\n                String[] problemData = in.readLine().split(\"\\\\s\");\\n\\n                int max = 0;\\n\\n                int other1 = 0;\\n\\n                int other2 = 0;\\n\\n                for (String data : problemData) {\\n\\n                    int dataInt = Integer.valueOf(data);\\n\\n                    other2 = other1;\\n\\n                    if (dataInt > max) {\\n                        other1 = max;\\n                        max = dataInt;\\n                    } else {\\n                        other1 = dataInt;\\n                    }\\n                }\\n\\n                if ((max * max) == (other1 * other1 + other2 * other2)) {\\n                    System.out.println(\"YES\");\\n                } else {\\n                    System.out.println(\"NO\");\\n                }\\n            }\\n        } catch (IOException e) {\\n            e.printStackTrace();\\n        } finally {\\n            try {\\n                in.close();\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n        }\\n    }\\n}", "target": "65", "substitutes": {"in": [" din", "en", "add", "std", "at", "In", "it", "check", "din", "read", "from", "all", "rin", "mm", "source", "world", "l", "user", "b", "ins", "pi", "rt", "conf", "bin", "out", "by", "form", "d", "get", "inc", "r", "or", "end", "ini", "err", "on", "default", "id", "io", "h", "ind", "al", "ac", "IN", "init", "m", "log", "scan", "reader", "info", "per", "con", "gin", "isin", "is", "stream", "input", "n", "inn", "inf", "inner", "er", "ic", "cin", "ri"], "dataNum": ["totalNumber", "DataMon", "dataUn", " dataMon", "blockNum", "datN", "totalNum", "totalUn", " datanum", "datNum", "DataNUM", "blockNUM", "datanum", "dateUn", "dataN", "dataMon", " dataNUM", "DataNum", "dataNumber", "dataNUM", "blocknum", "dateNumber", "dateNum", "Datanum", "dateN", "blockMon", "datNumber", "datUn", "totalN"], "i": ["bi", "multi", "si", "ti", "ai", "e", "it", "iu", "gu", "ie", "o", "xi", "di", "pi", "qi", "x", "c", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "a", "I", "ind", "init", "me", "m", "index", "asi", "mu", "batch", "ii", "info", "go", "us", "is", "li", "hi", "ui", "cli", "n", "ix", "p", "im", "ic", "phi", "u"], "problemData": ["problemDATA", "problemInfo", "questionData", " problemMessage", "systemMessage", "questionList", "problemList", " problemList", "systemData", "bugDATA", " problemdata", "questiondata", "dataType", "dataInfo", "bugData", "systemInfo", "problemType", "bugList", " problemDATA", "dataData", "systemType", " problemType", "problemdata", "problemMessage", "dataMessage", " problemInfo", "bugdata", "questionDATA"], "max": ["limit", "mx", "size", "ms", "total", "last", "right", "cache", "MAX", "tx", "w", "mr", "set", "tmp", "now", "ax", "box", "sum", "k", "pi", "conf", "x", "out", "ctx", "c", "med", "window", "act", "end", "parent", "v", "global", "mod", "default", "range", " Max", "min", "ma", "height", "h", "j", "shape", "res", "gt", "length", "hash", "recent", "m", "rest", "Max", "huge", "index", "view", "grow", "t", "scale", "full", "base", "num", "count", "n", "checked", "auto", "mind", "p", "mean", "maximum"], "other1": [" other0", "OTHER11", "another51", "other51", "OTHER51", " other11", "different51", "OTHER1", "Other0", "different2", "number2", "different11", "otherOne", "common0", "different1", " otherOne", "other0", "other3", "common2", "number1", "OTHEROne", "Other1", "OTHER2", "OTHER0", "differentOne", "other11", "Other2", "common1", "Other11", "commonOne", "OtherOne", "another1", "Other3", "another2", "number3", "another11", "OTHER3"], "other2": ["other05", "own2", "own02", " other05", "OTHER1", "Other4", "OTHERnet", "own1", "othertwo", "other02", "Othertwo", "own05", "another3", "common02", "Other02", " other4", "anothernet", "othernet", "commontwo", " other3", " othernet", "other3", "other4", "OTHER02", "common2", "Other1", "OTHER2", "OTHER05", "Other2", "common1", " other02", " othertwo", "another02", "OTHER4", "Other3", "another2", "OTHER3"], "data": ["record", "item", "da", "missing", "hello", "key", "from", "next", "DATA", "image", "step", "some", "row", "text", "d", "def", "format", "rel", "str", "window", "rew", "share", "no", "type", "line", "id", "dat", "name", "done", "a", "number", "string", "value", "good", "join", "ata", "any", "info", "raw", "valid", "one", "video", "message", "p", "val"], "dataInt": ["dataEnd", " dataInteger", "windowInt", "dateINT", "dataWin", "dateInt", "datInt", " dataWin", "numInt", "datStr", "dateWin", "ataInt", "ataEnd", "dataStr", "ataWin", "numEnd", "idInt", "DataId", "windowInteger", "dataId", "numINT", "dataInteger", "windowStr", " dataId", "dataIn", "datIn", "idId", "datInteger", "DataINT", "DataInt", "windowIn", "dataINT", " dataINT", " dataIn", " dataEnd", "ataINT", "idINT", " dataStr"]}}
{"code": "import java.io.*;\\nclass Main\\n{\\n    public static void main(String[] args) \\n    {\\n\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\tString line=null;\\n\ttry {\\n\t    line = br.readLine();\\n\t} catch (IOException e){\\n\t    System.out.println(e);\\n\t}\\n\\n\tint x = Integer.parseInt(line);\\n\tint y = x * x * x;\\n\tSystem.out.println(y);\\n    }\\n}", "target": "36", "substitutes": {"br": ["wr", "bsp", "bi", "ber", "bl", "hr", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "buf", "dr", "browser", "bd", "bs", "cr", "rel", "gr", "nr", "str", "bh", "bc", "bf", "bt", "bridge", "sr", "lr", "shr", "bp", "rb", "bm", "pr", "ctr", "be", "bro", "bn"], "line": ["column", "Line", "in", "part", "eline", "e", "inline", "file", "comment", "source", "block", "chain", "l", "pe", "lin", "char", "row", "out", "text", "ine", "lines", "lo", "no", "cell", "point", "lock", "LINE", "where", "liner", "number", "word", "le", "string", "print", "body", "nl", "log", "normal", "ln", "detail", "se", "page", "link", "input", "header", "message", "sample", "frame", "sequence", "description", "entry"], "x": ["dx", "mx", "px", "e", "tx", "w", "xe", "xx", "key", "ax", "xf", "l", "xi", "xt", "xc", "xes", "i", "xp", "c", "v", "ux", "ci", "X", "ox", "f", "h", "wx", "xs", "inx", "rx", "index", "m", "xa", "t", "xy", "z", "ex", "n", "ix", "p"], "y": ["yi", "ies", "ay", "sy", "dy", "ye", "ey", "o", "ady", "yl", "b", "Y", "gy", "i", "my", "cy", "ly", "icy", "ty", "vy", "uy", "py", "ery", "yt", "iy", "ry", "yx", "oy", "ny", "ym", "t", "iny", "xy", "hy", "yy", "axy", "wy"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint r = sc.nextInt();\\n\t\tint c = sc.nextInt();\\n\t\tint[][] spreadsheet = new int[r][c];\\n\t\tint[][] sumSpreadsheet = new int[r + 1][c + 1];\\n\t\tfor (int i = 0; i < r; i++) {\\n\t\t\tfor (int j = 0; j < c; j++) {\\n\t\t\t\tspreadsheet[i][j] = sc.nextInt();\\n\t\t\t}\\n\t\t}\\n\t\tfor (int i = 0; i < r; i++) {\\n\t\t\tfor (int j = 0; j < c; j++) {\\n\t\t\t\tsumSpreadsheet[i][j] = spreadsheet[i][j];\\n\t\t\t}\\n\t\t}\\n\t\tfor (int i = 0; i < r; i++) {\\n\t\t\tfor (int j = 0; j < c; j++) {\\n\t\t\t\tsumSpreadsheet[i][c] += sumSpreadsheet[i][j];\\n\t\t\t}\\n\t\t}\\n\t\tfor (int j = 0; j < c; j++) {\\n\t\t\tfor (int i = 0; i < r; i++) {\\n\t\t\t\tsumSpreadsheet[r][j] += sumSpreadsheet[i][j];\\n\t\t\t}\\n\t\t}\\n\t\tfor (int i = 0; i < r; i++) {\\n\t\t\tfor (int j = 0; j < c; j++) {\\n\t\t\t\tsumSpreadsheet[r][c] += sumSpreadsheet[i][j];\\n\t\t\t}\\n\t\t}\\n\t\tfor (int i = 0; i < r + 1; i++) {\\n\t\t\tfor (int j = 0; j < c + 1; j++) {\\n\t\t\t\tif (j == c) {\\n\t\t\t\t\tSystem.out.print(sumSpreadsheet[i][j]);\\n\t\t\t\t} else {\\n\t\t\t\t\tSystem.out.print(sumSpreadsheet[i][j] + \" \");\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tSystem.out.println();\\n\t\t}\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "23", "substitutes": {"sc": ["ch", "sync", "sb", "asc", "mc", "osc", "func", "anc", "cr", "Sc", "scope", "arc", "ctx", "inc", "dec", "bc", "cc", "sys", "co", "fc", "sim", "SC", "conv", "lc", " Sc", "rc", "usc", "st", "sec", "exec", "gc", "cl", "scan", "ss", "pb", "nc", "sq", "cs", "tc", "system", "ck", "uc", "pc", "ctl", "isc", "desc", "syn", "scl", "sh", "sv", "Scan", "sp", "esc"], "r": ["rect", "hr", "e", "it", "s", "ir", "mr", "ro", "radius", "o", "re", "fr", "cor", "l", "b", "rd", "dr", "rid", "rt", "cr", "arc", "x", "rel", "d", "nr", "g", "v", "ar", "rg", "err", "range", "rm", "res", "h", "a", "rc", "q", "reg", "m", "sr", "R", "rf", "attr", "rec", "br", "t", "rr", "z", "rb", "n", "pr", "p", "er", "rs", "rar", "ru", "u", "ri"], "c": ["cp", "cur", "ch", "jc", "e", "s", "com", "cache", "cat", "cm", "cal", "mc", "cum", "l", "b", "k", "cd", "cr", "ec", "arc", "x", "d", "g", "v", "co", "C", "ci", "cc", "cb", "h", "f", "lc", "cu", "rc", "ac", "sec", "m", "gc", "cl", "category", "nc", "cs", "cf", "tc", "con", "t", "dc", "pc", "z", "cn", "count", "ce", "ct", "n", "ca", "div", "ctr", "p", "ic", "col", "u", "cor"], "spreadsheet": ["preadset", "spreadstyle", "preadstyle", "preadheet", "sheetspread", "spreadheet", "preadsheets", "Spreadheet", "spreadset", "preadspread", "workspread", "sheetsheet", "Spreadstyle", "Spreadsheets", "Spreadsheet", "sheetset", "preadsheet", "worksheet", "worksheets", "spreadspread", "Spreadset", "sheetsheets", "workstyle", "sheetheet", "spreadsheets", "Spreadspread"], "sumSpreadsheet": ["sumSpreadwidth", "sumspreadtable", " sumWorksheet", "sumWorkwidth", " sumBandheet", "sumMapsheet", " sumWorkdisk", "sumWorkdraw", "sumWorktable", " sumSpreadet", "sumBandspread", "sumGridspread", "sumWorkpage", "sumGraphsheet", "sumLogsheet", "sumSpreadtable", " sumSpreaddisk", "sumSpreadsheets", "sumPsheet", "sumGraphheet", "sumSpreadlayout", "sumLogsheets", " sumPartwindow", " sumLoget", "sumFillsheet", "sumSpreadpage", " sumBandspread", "sumFillheet", " sumSpreadlayout", " sumWorklayout", "sumWorksheet", "sumGridheet", "sumOtherpage", "sumspreadpage", " sumWorkwindow", " sumWorkpage", "sumspreadspread", " sumSpreadtable", "sumOtherspread", " sumSpreadspread", " sumSpreadtab", " sumLogheet", " sumWorkheet", "sumWorkstyle", "sumPartwindow", " sumWorktable", "sumLoget", "sumWorkspread", "sumSpreadet", " sumSpreadsheets", " sumBandstyle", "sumWorktab", " sumSpreadheet", "sumSpreadwindow", " sumWorkspread", " sumSpreaddomain", "sumFilldraw", " sumWorkdraw", "sumWorkwindow", "sumGraphspread", "sumPdraw", "sumPartheet", " sumLogsheet", "sumspreadlayout", "sumspreadheet", "sumspreadtab", "sumSpreadheet", "sumPlanheet", "sumPlanwidth", " sumPartheet", " sumSpreadpage", "sumSpreaddomain", "sumGridsheet", " sumLogsheets", "sumPlatformdisk", "sumPheet", " sumLogwidth", "sumPlatformstyle", " sumSpreadwidth", "sumMapheet", "sumSpreaddisk", "sumBandsheet", "sumPlatformsheet", "sumMapwindow", " sumBandsheet", "sumLogspread", "sumPartsheet", " sumPartsheet", " sumSpreadstyle", "sumSpreadstyle", "sumPtab", "sumspreaddisk", "sumBandstyle", "sumspreadsheets", "sumPartdomain", "sumBandheet", "sumGraphwindow", " sumSpreadwindow", "sumSpreadspread", "sumspreadet", "sumspreadstyle", "sumSpreaddraw", " sumLogspread", "sumPlanspread", "sumWorkheet", "sumOtherdraw", "sumGridstyle", "sumLogwindow", " sumPartdomain", " sumWorkstyle", "sumSpreadtab", "sumLogwidth", " sumWorktab", "sumPlansheet", "sumPlatformheet", "sumspreadsheet", "sumWorklayout", "sumOthersheet", "sumGraphtable", "sumWorkdisk", "sumFilllayout", "sumLogheet", " sumSpreaddraw", "sumspreaddraw", "sumMapdomain", "sumGraphstyle"], "i": ["in", "si", "at", "ip", "ir", "l", "zi", "di", "ion", "ini", "iy", "info", "hi", "p", "phi", "it", "ie", "o", "qi", "x", " it", "y", "sim", "ia", "uri", "q", "ami", "init", "ori", "ii", "gi", "us", "ji", "ic", "ri", "bi", "iter", "iu", "It", "dr", "ei", "iri", "io", "I", "ind", "ij", "is", "li", "ui", "ix", "yi", "ti", "ai", "xi", "pi", "mi", "ity", "v", "ar", "ci", "id", "iq", "ki", "\u0438", "fi", "er", "im", "u"], "j": ["si", "at", "json", "pt", "ax", "art", "l", "di", "jl", "bo", "out", "uj", "js", "ion", "off", "ja", "ng", "ret", "res", "kj", "br", "job", "n", "p", "ge", "Ja", "oj", "bj", "it", "ie", "o", "b", "jas", "x", "jer", "y", "h", "q", "je", "to", "ev", "ji", "pr", "jo", "bi", "ot", "obj", "jc", "tr", "dr", "jj", "k", "el", "jp", "og", "g", "ju", "io", "ind", "ij", "ne", "ody", "li", "other", "ix", "ijk", "note", "bl", "J", "fr", "kid", "jit", "dj", "aj", "bs", "by", "d", "v", "f", "jac", "m", "z", "jump", "er", "u"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\t\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tString s=sc.next();\\n\t\tString str=\"\";\\n\t\tString temp=\"\";\\n\t\t\\n\t\tfor(int i=1;i<=s.length();i++){\\n\t\t\t\t\\n\t\t\t\tif(s.charAt(i-1)=='0'){\\n\t\t\t\t\tstr+=\"0\";\\n\t\t\t\t\t\\n\t\t\t\t}else if(s.charAt(i-1)=='1'){\\n\t\t\t\t\tstr+=\"1\";\\n\t\t\t\t\t\\n\t\t\t\t}else if(s.charAt(i-1)=='B'){\\n\t\t\t\t\t\\n\t\t\t\t\tfor(int j=0;j<str.length()-1;j++){\\n\t\t\t\t\t\ttemp+=str.charAt(j);\\n\t\t\t\t\t}\\n\t\t\t\t\tstr=temp;\\n\t\t\t\t\ttemp=\"\";\\n\t\t\t\t}\\n\t\t}\\n\t\t\\n\t\tsc.close();\\n\t\tSystem.out.print(str);\\n\t}\\n}", "target": "151", "substitutes": {"sc": ["cur", "ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "ko", "arc", "c", "inc", "bc", "cc", "sys", "ok", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "uc", "nc", "sq", "cs", "tc", "system", "pc", "isc", "syn", "capt", "scl", "sv", "sp", "esc"], "s": ["ms", "parts", "S", "ws", "sts", "sb", "sw", "ds", "stats", "series", "l", "ns", "ins", "strings", "bs", "ts", "js", "g", "r", "v", "sys", "ats", "its", "h", "f", "xs", "conv", "st", "gs", "ls", "m", "ss", "sl", "abs", "sq", "less", "qs", "spec", "t", "ps", "is", "sql", "p", "sv", "rs", "sp"], "str": ["list", "chain", "art", "STR", "char", "out", "gr", "comm", "ret", "err", "res", "log", "buffer", "pretty", "output", "url", "exp", "br", "n", "elt", "p", "sp", "result", "mt", "expr", "del", "stri", "text", "rel", "dat", "name", "conv", "st", "ls", "Str", "shr", "us", "raw", "txt", "pr", "arr", "wr", "rep", "uts", "obj", "iter", "sts", "vol", "ocr", "strong", "tr", "dr", "ts", "g", "r", "nt", "its", "print", "attr", "stable", "debug", "t", "stream", "tree", "ctr", "rs", "parts", "cur", "sol", "msg", "fr", "tar", "ns", "coll", "spr", "string", "stack", "spec", "sta", "data", "ps", "div", "enc"], "temp": ["porary", "mp", "tt", "copy", "part", "cur", " tmp", "partial", "total", "null", "perm", "buff", "tmp", "set", "emp", "pt", "stem", "local", "empty", "pool", "term", "rem", "cache", "variable", "tar", "tr", "tim", "sum", "p", "tem", "template", "ts", "prefix", "ptr", "deg", "unt", "mod", "dat", "mint", "current", "Temp", "timer", "m", "tm", "pre", "log", "fake", "buffer", "alt", "pretty", "tc", "t", "other", "dest", "txt", "mem", "orig", "cu", "sp"], "i": ["bi", "multi", "si", "ti", "ai", "e", "it", "iter", "iu", "ie", "series", "chain", "zi", "xi", "di", "pi", "qi", "x", "ei", "this", "g", "ik", "my", "mi", "ini", "ci", "y", "sim", "id", "ia", "oi", "io", "uri", "I", "ind", "q", "init", "me", "m", "index", "ami", "ori", "gi", "ii", "info", "us", "ims", "is", "li", "ex", "hi", "ui", "cli", "sql", "ix", "im", "ic", "phi", "u", "ri"], "j": ["jo", "ge", "bj", "oj", "obj", "jc", "json", "J", "max", "jet", "key", "kid", "jit", "dj", "b", "k", "jj", "jas", "aj", "jl", "by", "out", "jp", "son", "uj", "js", "g", "off", "kat", "ja", "y", "err", "bot", "ph", "jac", "q", "ij", "je", "kj", "m", "exp", "att", "br", "z", "jump", "job", "other", "ji", "n"]}}
{"code": "import java.util.*;\\n\\nclass Main{\\n\tpublic static int n, l;\\n\tpublic static void main(String[] args){\\n    \tScanner sc = new Scanner(System.in);\\n      \tn = sc.nextInt();\\n      \tl = sc.nextInt();\\n      \t\\n      \tif(l > 0) {\\n      \t\tSystem.out.println(sum(1));\\n      \t}else if((l + n-1) < 0) {\\n      \t\tSystem.out.println(sum(n));\\n      \t}else {\\n      \t\tSystem.out.println(sum(1-l));\\n      \t}\\n    }\\n\t\\n\tpublic static int sum(int m) {\\n\t\tint sum = 0;\\n\t\tfor(int i = 1; i <= n; i++) {\\n\t\t\tif(i == m) continue;\\n\t\t\t//System.out.print(l+i-1);\\n\t\t\t//System.out.println();\\n\t\t\tsum += (l + i-1);\\n\t\t}\\n\t\treturn sum;\\n\t}\\n}", "target": "91", "substitutes": {"n": ["nb", "an", "en", "in", "size", "nn", "s", "network", "ll", "o", "np", "k", "ns", "x", "c", "d", "un", "g", "r", "nt", "no", "v", "nm", "ng", "j", "sn", "le", "nu", "nl", "ul", "nc", "ln", "ne", "nan", "t", "na", "L", "z", "cn", "num", "net", "len", "N", "p", "mn"], "l": ["fl", "kl", "lt", "s", "ll", "lv", "o", "lu", "b", "ld", "lit", "el", "c", "lp", "d", "lo", "lam", "g", "v", "ml", "j", "f", "lc", "le", "ls", "ul", "nl", "sl", "ln", "ol", "dl", "t", "li", "L", "lis", "pl", "len", "p", "al"], "sc": ["ch", "sync", "sb", "s", "src", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "ko", "sel", "c", "ctx", "sub", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "nc", "system", "tc", "cs", "sq", "tch", "pc", "dc", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "m": ["an", "met", "mt", "s", "sm", "cm", "w", "mm", "o", "b", "k", "x", "c", "d", "g", "r", "mi", "v", "M", "y", "j", "h", "f", "me", "mu", "dm", "t", "gm", "mem", "p", "im", "mn"], "sum": ["result", "report", "summary", "add", "size", "list", "ms", "si", "total", "dict", "vol", "success", "max", "null", "cat", "set", "um", "test", "stats", "product", "comment", "next", "cum", "status", " SUM", "first", "cmp", "cache", "out", "get", "cos", "cost", "dump", "fail", "score", "sim", "tmp", "print", "hash", "Sum", "tail", "index", "weight", "subject", "scan", "sort", "system", "dist", "scale", "dot", "stat", "count", "num", "tree", "su", "sample", "mem", "match", "mean", "average", "sp"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "o", "zi", "xi", "di", "pi", "qi", "x", "ei", "mi", "ini", "ci", "y", "id", "sim", "oi", "j", "iq", "ni", "I", "ind", "ij", "init", "index", "ki", "MI", "batch", "ii", "gi", "us", "ims", "li", "hi", "ui", "cli", "ji", "ix", "im", "ic", "phi"]}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        //\u5165\u529b\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n      \t//B\u306e\u914d\u5217\u683c\u7d0d\\n        int[] B = new int[N-1];\\n        for (int i = 0; i < (N-1); ++i){\\n            B[i]= sc.nextInt();\\n        }\\n        \\n        int sum = B[0] + B[N-2];\\n      \t\\n        for (int i = 0; i < (N-2); ++i){\\n          \t//\u6bd4\u8f03\u3057\u3066\u5c0f\u3055\u3044\u65b9\u3092\u52a0\u7b97\\n            sum += Math.min(B[i],B[i+1]);\\n        }\\n        \\n        //\u51fa\u529b\\n        System.out.println(sum);\\n        \\n    }\\n}", "target": "240", "substitutes": {}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tString s = sc.next();\\n\t\tint ans = 0;\\n\t\tfor(int i = 0; i < 3; i++) {\\n\t\t\tint local = 0;\\n\t\t\tif(s.charAt(i) == 'R') {\\n\t\t\t\tint j = i;\\n\t\t\t\tlocal = 0;\\n\t\t\t\twhile(j < 3 && s.charAt(j) == 'R') {\\n\t\t\t\t\tj++;\\n\t\t\t\t\tlocal++;\\n\t\t\t\t}\\n\t\t\t\ti = j;\\n\t\t\t}\\n\t\t\tans = Math.max(ans, local);\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n}\\n", "target": "141", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "sm", "mc", "osc", "anc", "sac", "cr", "ec", "Sc", "c", "bc", "cc", "sys", "soc", "SC", "lc", "rc", "RC", "usc", "sch", "sec", "gc", "scan", "ss", "cl", "nc", "sq", "cs", "tc", "system", "pc", "ser", "isc", "desc", "syn", "sh", "scl", "sv", "sp", "esc"], "s": ["ms", "S", "ws", "sts", "sb", "sw", "ds", "stats", "gets", "l", "strings", "bs", "c", "ts", "js", "str", "g", "r", "sys", "ats", "y", "its", "conv", "bits", "gs", "sg", "st", "ls", "m", "fs", "string", "ss", "sl", "sq", "less", "qs", "cs", "ims", "t", "ps", "is", "n", "sql", "p", "sv", "rs", "sp"], "ans": ["an", "uns", "ars", "anks", "ms", "ents", "acts", "names", "ups", "orts", "rans", "anon", "aps", "ands", "ann", "ons", "ins", "AN", "ns", "aus", "ones", "ros", "vals", "anas", "ks", "ran", "pan", "aces", "arts", "ats", "nets", "oss", "lets", "ants", "xs", "alls", "aned", "ANS", "can", "ls", "san", "ions", "ots", "lan", "cs", "os", "as", "offs", "ums", "ations", "n", "amps", "ens", "rs", "outs", "ids"], "i": ["bi", "in", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "ir", "zi", "xi", "di", "pi", "x", "ei", "iri", "ik", "mi", "v", "ini", "ci", "id", "sim", "ia", "uri", "f", "iq", "a", "I", "ind", "print", "ij", "ami", "init", "m", "me", "ori", "index", "ki", "asi", "ii", "gi", "ims", "eu", "is", "li", "hi", "ui", "ix", "p", "im", "ic", "phi", "u", "ri"], "local": ["ale", "an", "shared", "relative", "list", "part", "size", "total", "max", "level", "tx", "empty", "all", "lib", "state", "l", "sum", "ins", "Local", "loc", "window", "common", "internal", "co", "primary", "global", "ional", "where", "standard", "f", "remote", "back", "alpha", "can", "m", "initial", "so", "external", "valid", "foreign", "as", "full", "location", "localhost", "other", "num", "mem", "n", "serial", "inner", "count", "p", "val", "al"], "j": ["jo", "bi", "bj", "oj", "obj", "jc", "J", "json", "it", "pt", "next", "fr", "l", "b", "dj", "k", "jj", "aj", "jl", "bo", "out", "jp", "uj", "js", "g", "my", "r", "v", "ja", "y", "f", "res", "ind", "jac", "ij", "q", "south", "sp", "kj", "m", "zone", "br", "t", "to", "z", "job", "other", "jump", "ji", "n", "p", "col", "u"]}}
{"code": "/* package whatever; // don't place package name! */\\n\\nimport java.util.*;\\nimport java.lang.*;\\nimport java.io.*;\\n\\n/* Name of the class has to be \"Main\" only if the class is public. */\\nclass Main\\n{\\n\t\\n    static class FastReader \\n    { \\n        BufferedReader br; \\n        StringTokenizer st; \\n  \\n        public FastReader() \\n        { \\n            br = new BufferedReader(new\\n                     InputStreamReader(System.in)); \\n        } \\n  \\n        String next() \\n        { \\n            while (st == null || !st.hasMoreElements()) \\n            { \\n                try\\n                { \\n                    st = new StringTokenizer(br.readLine()); \\n                } \\n                catch (IOException  e) \\n                { \\n                    e.printStackTrace(); \\n                } \\n            } \\n            return st.nextToken(); \\n        } \\n  \\n        int nextInt() \\n        { \\n            return Integer.parseInt(next()); \\n        } \\n  \\n        long nextLong() \\n        { \\n            return Long.parseLong(next()); \\n        } \\n  \\n        double nextDouble() \\n        { \\n            return Double.parseDouble(next()); \\n        } \\n  \\n        String nextLine() \\n        { \\n            String str = \"\"; \\n            try\\n            { \\n                str = br.readLine(); \\n            } \\n            catch (IOException e) \\n            { \\n                e.printStackTrace(); \\n            } \\n            return str; \\n        } \\n    } \\n  \\n    public static void main(String[] args) \\n    { \\n        FastReader sc=new FastReader(); \\n\t\tint n=sc.nextInt();\\n\t\tint[] a=new int[n];\\n\t\t\\n\t\tfor(int i=0;i<n;i++) a[i]=sc.nextInt();\\n\t\tlong sum=0;\\n\t\tfor(int i=1;i<n;i++){\\n\t\t\tif(a[i]<a[i-1]){\\n\t\t\t\tsum+=a[i-1]-a[i];\\n\t\t\t\ta[i]=a[i-1];\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(sum);\\n\t\\n    \t\\n    }\\n}", "target": "202", "substitutes": {"br": ["ber", "bsp", "wr", "bl", "hr", "Tr", "kr", "bb", "ch", "BR", "sb", "Br", "mr", "next", "fr", "tr", "b", "browser", "dr", "buf", "bd", "bs", "cr", "jp", "rel", "gr", "nr", "ptr", "r", "bh", "bc", "brace", "bf", "bt", "sp", "bridge", "sr", "lr", "shr", "usr", "bp", "bre", "rb", "bm", "pr", "ctr", "rs", "bro", "bn"], "st": ["bl", "ft", "std", "nd", "ste", " est", "sts", "sb", "ost", "s", "mt", "sw", "lt", "pt", "set", "et", "fr", "sty", "l", "tr", "const", "step", "th", "stri", "sy", "cr", "ts", "ust", "nt", "ST", "bt", "start", "inst", "sn", "ut", "stage", "rest", "cl", "sl", " ss", "stable", "so", "se", "usr", "t", "ist", "St", "est", "sta", "stat", " superst", "sa", "ct", "sh", "p", "sv", "sp", "be"], "str": ["result", "cur", "s", "sw", "ocr", "msg", "next", "fr", "re", "STR", "tr", "dr", "ns", "del", "char", "text", "c", "gr", "g", "r", "v", "sys", "cont", "line", "ret", "res", "inst", "print", "string", "Str", "sl", "shr", "exp", "raw", "t", "data", "txt", "pr", "ctr", "p", "enc", "sp", "arr"], "sc": ["si", "cle", "asc", "mc", "osc", "cr", "ec", "Sc", "c", "ctx", "bc", "fc", "sys", "cc", "SC", "sd", "lc", "rc", "usc", "sch", "sec", "sr", "gc", "cl", "ss", "uc", "nc", "sq", "cs", "tc", "sic", "disc", "tch", "pc", "ctl", "dc", "psc", "ct", "isc", "scl", "sh", "cu", "sv", "sp", "esc"], "n": ["nb", "en", "ot", "nd", "nn", "nw", "network", "all", "o", "l", "np", "k", "ns", "c", "un", "nm", "nt", "v", "no", "ng", "on", "name", "j", "number", "sn", "ni", "fn", "nu", "m", "nl", "ul", " N", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "net", "count", "len", "N", "p", "mn"], "a": ["an", "acs", "la", "add", "ba", "ab", "eas", "da", "ea", "at", "ai", "au", "e", "ace", "all", "aaa", "b", "aux", "area", "sha", "c", "am", "A", "g", "act", "ar", "ia", "ma", "ta", "h", "ao", "va", "ack", "alpha", "ac", "ae", "m", "aw", "ata", "ga", "oa", "aa", "as", "att", "sta", "na", "pa", "sa", "ca", "p", "u"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "iu", "gu", "ie", "status", "key", "o", "mm", "chain", "zi", "xi", "di", "pi", "qi", "out", "ei", "g", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "io", "uri", "iq", "ni", "I", "print", "q", "ij", "me", "init", "ami", "m", "ki", "\u0438", "MI", "gi", "ii", "info", "us", "eu", "is", "li", "hi", "ui", "cli", "ji", "ix", "fi", "im", "ic", "phi", "u", "ri"], "sum": ["result", "add", "summary", "size", "si", "total", "vol", "union", "tmp", "cache", "max", "um", "diff", "cal", " SUM", "cum", "out", "cost", "v", "dump", "mass", "mod", "sim", "fac", "ass", "hash", "Sum", "index", "sam", "mu", "hum", "zero", "frac", "us", "se", "acc", "num", "count", "sa", "su", "temp", "other", "sample", "mem", "mean", "average"]}}
{"code": "import java.io.IOException;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws IOException {\\n\\n        // long startTime = System.currentTimeMillis();\\n\\n        Scanner scanner = new Scanner(System.in);\\n\\n        int x = scanner.nextInt();\\n\\n        scanner.close();\\n\\n        System.out.println(calc(x));\\n\\n        // System.out.println(System.currentTimeMillis() - startTime);\\n    }\\n\\n    private static int calc(int x) {\\n        int s = (int) Math.sqrt(x);\\n        int max = 1;\\n        for (int i = 2; i <= s; i++) {\\n            int j = i;\\n            int k = 2;\\n            while (j <= x) {\\n                if (max < j) {\\n                    max = j;\\n                }\\n                j = (int) Math.pow(i, k);\\n                k++;\\n            }\\n        }\\n\\n        return max;\\n    }\\n}\\n", "target": "143", "substitutes": {}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\n\\nimport static java.lang.System.in;\\n\\nclass Main {\\n    public static void main(String[] args)throws IOException {\\n        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\\n        int N = Integer.parseInt(reader.readLine());\\n        switch(N%10){\\n            case 2:\\n                System.out.println(\"hon\");\\n                break;\\n            case 4:\\n                System.out.println(\"hon\");\\n                break;\\n            case 5:\\n                System.out.println(\"hon\");\\n                break;\\n            case 7:\\n                System.out.println(\"hon\");\\n                break;\\n            case 9:\\n                System.out.println(\"hon\");\\n                break;\\n            case 0:\\n                System.out.println(\"pon\");\\n                break;\\n            case 1:\\n                System.out.println(\"pon\");\\n                break;\\n            case 6:\\n                System.out.println(\"pon\");\\n                break;\\n            case 8:\\n                System.out.println(\"pon\");\\n                break;\\n            case 3:\\n                System.out.println(\"bon\");\\n                break;\\n\\n        }\\n    }\\n}\\n", "target": "178", "substitutes": {"reader": ["Reader", "in", "iter", "anger", "read", "linger", "file", "builder", "driver", "dr", "row", "out", "context", "today", "this", "r", "iterator", "ner", "rl", "handler", "io", "resource", "parser", "rx", "ocker", "buffer", "loader", "reading", "writer", "rr", "rot", "ipper", "data", "stream", "input", "radio", "client", "inner", "entry", "er", "ro"], "N": ["NP", "NG", "NI", "S", "NA", "J", "D", "NV", "T", "NM", "NH", "K", "H", "Z", "P", "NT", "V", "M", "NUM", "C", "NO", "Number", "I", "NB", "TN", "R", "NR", "NN", "Num", "NPR", "CNN", "NS", "SN", "L", "F", "n", "O", "NC"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.nio.charset.StandardCharsets;\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class Main {\\n\tpublic static void main (String[] args) throws IOException{\\n\t    InputStreamReader reader = new InputStreamReader(System.in, StandardCharsets.UTF_8);\\n\t    BufferedReader in = new BufferedReader(reader);\\n\t    String[] str1 = in.readLine().split(\" \");\\n\t    int num1 = Integer.parseInt(str1[0]);\\n\t    int num2 = Integer.parseInt(str1[1]);\\n\\n\t    if(num2==0) {\\n\t\t\tSystem.out.println(num1);\\n\t    }else {\\n\t\t    String[] str2 =in.readLine().split(\" \");\\n\t\t    List<Integer> arrays = new ArrayList<Integer>();\\n\t\t    for(int i = 0; i<num2; i++) {\\n\t\t    \tarrays.add(Integer.parseInt(str2[i]));\\n\t\t    }\\n\t\t\tif(!arrays.contains(num1)) {\\n\t\t\t\tSystem.out.println(num1);\\n\t\t\t}else {\\n\t\t\t\tfor(int i=1; i<num2+1; i++) {\\n\t\t\t\t\tif(num1>0) {\\n\t\t\t\t\t}\\n\t\t\t\t\tif(!arrays.contains(num1-i)) {\\n\t\t\t\t\t\tSystem.out.println(num1-i);\\n\t\t\t\t\t\tbreak;\\n\t\t\t\t\t}else if(!arrays.contains(num1+i)) {\\n\t\t\t\t\t\tSystem.out.println(num1+i);\\n\t\t\t\t\t\tbreak;\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t}\\n\t    }\\n\t}\\n}", "target": "228", "substitutes": {"reader": ["Reader", "iter", "null", "read", "magic", "builder", "mr", "re", "driver", "rd", "dr", "row", "this", "r", "iterator", "ner", "rl", "handler", "resource", "io", "parser", "rc", "rx", "buffer", "draft", "loader", "ck", "wrapper", "writer", "rot", "stream", "input", "client", "inner", "er", "rar", "ro"], "in": [" din", "add", "en", "std", "and", "In", "iter", "null", "it", "s", "check", "w", "read", "din", "file", "all", "from", "source", "rin", "mm", "run", "world", "user", "l", "b", "ins", "conf", "bin", "out", "doc", "ill", "form", "get", "r", "ini", "err", "io", "h", "ind", "IN", "init", "log", "ck", "info", "writer", "gin", "data", "is", "stream", "input", "net", "n", "inn", "inf", "inner", "p", "er", "ic", "cin", "ri"], "str1": ["stri10", "stri51", " str3", "vol1", "str10", "chain1", "form51", "form1", " str001", "strOne", "dat3", "dat11", "stri1", " str11", "str3", " strone", "str001", " str51", "strone", "vol10", "chain3", "form8", "volOne", "stri001", "vol001", " str10", "str11", " strOne", "dat1", "datone", "chainone", "str8", "str51", "striOne", "formOne", " str8", "chain11", "stri8"], "num1": ["mon2", "umone", "span001", "alph4", "conv1", "num0", "alph0", "um4", "generOne", " numone", "num7", "umTab", " num4", "span591", "number1", "convasso", "sum2", "monOne", "sum1", " numMap", "gener1", "alphone", "um81", "numTab", "um001", "monasso", "numberFirst", "alph1", "nu2", " num01", "number0", "number01", " num81", "alph001", "nu64", "number2", "alph2", "str3", "number64", "gener591", "alph81", "num01", "alphFirst", "umOne", "mon0", "dateOne", " numFirst", "number001", " num3", "alphasso", "sum001", "alph7", "nu0", " num001", " num0", "conv7", "num4", "num64", "numasso", "numMap", "date1", "mon001", "umasso", "dateTab", "mon7", "num3", "nu1", "um2", "num591", "sum01", "spanOne", "monTab", "um1", "mon64", "mon591", "num001", "umMap", "numOne", "alphMap", "numFirst", "num81", "span1", "gener001", "numone", "number3", "dateasso", "mon1", "conv0"], "num2": ["alph1", "strTwo", "mon2", " num3", "numberTwo", "num0", "number02", "numTwo", "number2", "alph2", "um1", " numTwo", "monTwo", "str3", "Num02", " num0", "um02", "alph02", "number1", "um0", "mon0", "alphDiff", "umTwo", "num02", "Num1", "str02", "numDiff", "num3", "number3", "umDiff", "um2", "numberDiff", "mon1", "Num2"], "str2": ["Str2", "st2", "st42", "chain42", "stri182", "stri82", "str182", "str12", "Str0", "string0", " str0", "str42", "stri2", "st82", "str0", "Str1", "chain82", "string2", "string1", "chain2", "stri42", "string12", "chain182", "st182", "Str12", "str82", " str12"], "arrays": ["arranes", "grages", "arrayrays", "alphays", " arrayers", "arrrays", "arrayars", "arays", "archrays", "strays", "aranes", " arrars", "arrars", "araves", "arrages", "arrues", "grrays", "arrables", "arrayusters", "archanes", "strusters", "arinks", "arages", "arues", "arrayers", "strrays", " arrages", "granes", " arrues", "grayers", "arables", " arrrays", "graves", "arrayayers", "grables", "strars", "archays", "grues", "alphaves", "grays", " arrusters", "arrayues", "arraves", "arrinks", "archinks", "alphables", "grinks", "arrayays", "alphrays", "arrusters"], "i": ["bi", "multi", "si", "ti", "ai", "e", "ip", "it", "iu", "gu", "status", "o", "mm", "chain", "zi", "xi", "di", "pi", "qi", "x", "c", "jp", "d", "ei", "this", "g", "my", "mi", "point", "v", "ini", "ci", "y", "err", "sim", "id", "j", "io", "f", "uri", "h", "I", "ind", "print", "q", "ij", "me", "init", "m", "ki", "\u0438", "batch", "gi", "ii", "info", "us", "exp", "is", "li", "base", "hi", "ui", "cli", "ji", "ix", "er", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\nimport java.util.Arrays;\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        String a = sc.next();\\n        String x= \"ABC\";\\n        String y = \"ARC\";\\n        if(a.equals(x)){\\n            System.out.println(\"ARC\");\\n        }\\n        else{\\n            System.out.println(\"ABC\");\\n\\n        }\\n\\n    \\n\\n    }\\n   \\n    \\n       \\n    \\n}", "target": "153", "substitutes": {"sc": ["ch", "sync", "sw", "s", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "ec", "Sc", "sel", "c", "dec", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "uc", "nc", "system", "cs", "tc", "sq", "pc", "capt", "isc", "desc", "scl", "soc", "syn", "sv", "sp", "esc"], "a": ["an", "ana", "ab", "eas", "at", "ai", "all", "aka", "o", "l", "aaa", "b", "area", "sha", "i", "am", "A", "r", "name", "ta", "ma", "j", "va", "alpha", "ac", "ae", "ya", "ata", "ga", "aa", "as", "t", "to", "na", "apa", "att", "sta", "sa", "ca", "n", "isa", "p"], "x": ["abc", "dx", " xx", "e", "s", "tx", "w", "xx", "ey", "o", "ax", "xf", "xi", "b", "xt", "p", "foo", "xc", "fx", "c", "i", "xp", "r", "X", "ox", "xs", "wx", "xxxx", "yx", "rx", "t", "xy", "z", "ex", "xxx", "n", "ix", "xa"], "y": ["yi", "sy", "xx", "ey", "yz", "b", "Y", "gy", "i", "ys", "my", "yr", "ty", "j", "uy", "py", "yt", "ery", "iy", "ry", "ya", "oy", "ny", "ym", "t", "xy", "z", "yy"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.io.PrintWriter;\\nimport java.util.Arrays;\\nimport java.util.Random;\\nimport java.util.StringTokenizer;\\n\\n/*\\n1\\n4\\n0011\\n */\\npublic class Main{\\n\\n    public static void main(String[] args) {\\n        FastScanner fs=new FastScanner();\\n        int T=fs.nextInt();\\n        long D=fs.nextLong();\\n        int ans=0;\\n//        PrintWriter out=new PrintWriter(System.out);\\n        for (int tt=0; tt<T; tt++) {\\n            //solve\\n            long x=fs.nextLong();\\n            long y=fs.nextLong();\\n            long distance=x*x+y*y;\\n            if(distance<=D*D){\\n                ans++;\\n            }\\n        }\\n        System.out.println(ans);\\n\\n\\n    }\\n\\n    static final Random random=new Random();\\n\\n    static void ruffleSort(int[] a) {\\n        int n=a.length;//shuffle, then sort\\n        for (int i=0; i<n; i++) {\\n            int oi=random.nextInt(n), temp=a[oi];\\n            a[oi]=a[i]; a[i]=temp;\\n        }\\n        Arrays.sort(a);\\n    }\\n\\n    static class FastScanner {\\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\\n        StringTokenizer st=new StringTokenizer(\"\");\\n        String next() {\\n            while (!st.hasMoreTokens())\\n                try {\\n                    st=new StringTokenizer(br.readLine());\\n                } catch (IOException e) {\\n                    e.printStackTrace();\\n                }\\n            return st.nextToken();\\n        }\\n\\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n        int[] nextArray(int n) {\\n            int[] a=new int[n];\\n            for (int i=0; i<n; i++) a[i]=nextInt();\\n            return a;\\n        }\\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n    }\\n\\n\\n}", "target": "42", "substitutes": {"fs": ["ms", "ws", "sf", "fd", "aos", "fts", "gets", "ns", "ags", "fps", "uses", "bs", "ils", "uds", "ks", "ys", "rys", "bf", "Fs", "fc", "sys", "ats", "GS", "f", "res", "xs", "ours", "gs", "ls", "fm", "fw", "ips", "aws", "has", "ss", "eks", "abs", "qs", "cf", "cs", "less", "ims", "ps", "hz", "FS", "amps", "irs", "rs", "hs", "fy"], "T": ["GT", "S", "J", "WT", "TM", "E", "TX", "Z", "P", "TR", "TS", "TB", "V", "M", "C", "X", "I", "TT", "G", "R", "TA", "t", "L", "B", "F", "Q", "N", "O"], "D": ["DP", "S", "DS", "dL", "PD", "E", "DD", "FD", "LD", "DE", "TD", "Z", "DC", "P", "d", "DX", "DM", "BD", "M", "C", "MD", "DO", "G", "DL", "DF", "DT", "Ds", "DI"], "ans": ["asks", "an", "ents", "GT", "UN", "rans", "ree", "all", "TL", "Ops", "Found", "rees", "ops", "ran", "un", " scans", " E", "arts", "no", "anes", "ries", "ANS", "Len", "otal", "All", "n", "Scan", "AN"]}}
{"code": "import java.io.*;\\n  \\nclass Main{\\n\tpublic static void main(String[] args) throws IOException{\\n\\n\t\tint x,\\n\t\tmax=-1000000,\\n\t\tmin=1000000,\\n\t\ttemp;\\n\t\tlong sum=0;\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\\n\t\tx = Integer.parseInt(br.readLine());\\n\t\tString[] str = br.readLine().split(\" \");\\n\\n\t\tfor(int i = 0; i < x; i ++){\\n\t\t\ttemp = Integer.parseInt(str[i]);\\n\t\t\tif(temp>max){\\n\t\t\t\tmax = temp;\\n\t\t\t}\\n\t\t\tif(temp<min){\\n\t\t\t\tmin = temp;\\n\t\t\t}\\n\t\tsum = sum + temp;\\n\t\t}\\n\t\tSystem.out.println(min + \" \" + max + \" \" +sum);\\n  \t}\\n}", "target": "21", "substitutes": {"x": ["dx", "mx", "px", "tx", "w", "xx", "xd", "ax", " cx", "xf", "l", "xi", "xt", "xc", "xes", "xp", "d", "v", "ci", "X", "y", "ox", "height", "f", "wx", "xs", "rx", "index", "t", "xy", "z", "ex", "n", "ix", "xa"], "max": ["cross", "mx", "size", "total", "last", "right", "up", "MAX", "history", "all", "ax", "master", "chain", "prime", "out", "med", "window", "work", "r", "end", "cos", "v", "co", "high", "parent", "mod", "ox", "range", "load", "ma", "over", "height", "res", "top", "h", "gt", "st", "can", "m", "recent", "rest", "huge", "Max", "view", "upper", "crop", "con", "scale", "full", "rand", "inv", "n", "maximum"], "min": ["val", "in", "part", "lt", "partial", "nn", "sign", "sol", "local", "mid", "low", "none", "mm", "master", "amin", "thin", "lower", "nam", "middle", "sub", "rel", "left", "lo", "sin", "mi", "mod", "span", "start", "default", "mint", "minute", "ma", "j", "range", "mini", "mel", "st", "south", "init", "m", "index", "mon", "pre", "mins", "minimum", "sort", "MIN", "begin", "spec", "method", "Min", "rand", "man", "inner", "mean", "im", "small", "mit", "mn"], "temp": ["wr", "mp", "result", "cel", "perature", "iter", "json", "it", "perm", "tmp", "cache", "emp", "pt", "test", "adjusted", "still", "term", "rem", "cum", "mm", "tr", "cap", "tim", "stem", "prime", "texture", "tem", "unit", "c", "ts", "format", "template", "volt", "ptr", "deg", "cell", "unt", "mod", "fac", "mint", "dat", "td", "res", "Temp", "trade", "timer", "nom", "tm", "fake", "hum", "warm", "tc", "method", "t", "acc", "num", "txt", "em", "mem", "cold", "cu", "Temperature", "ter"], "sum": ["add", "summary", " sums", "size", "si", "total", "vol", "tmp", "up", "um", "stats", " SUM", "cal", "diff", "cum", " summed", "out", "mix", "med", "cos", "v", "mass", "mod", "sim", "sat", "st", "hash", "Sum", "tail", "index", "sam", "mu", "hum", "zero", "us", "hist", "scale", "dot", "full", "acc", "count", "su", "num", "n", "mem", "sample", "mean", "average"], "br": ["wr", "ber", "hr", "bl", "bj", "kr", "BR", "Br", "vr", "mr", "next", "rem", "fr", "tr", "b", "browser", "dr", "bd", "bs", "cr", "db", "rel", "bg", "nr", "gr", "r", "bh", "bf", "yr", "bt", "bridge", "lr", "shr", "bp", "rb", "bm", "ger", "div", "pr", "ctr", "be", "bro", "bn"], "str": ["wr", "cur", "ch", "sts", "vol", "sw", "set", "s", "fr", "tr", "STR", "dr", "ns", "del", "stri", "cr", "char", "out", "gr", "comm", "r", "dat", "name", "res", "inst", "st", "string", "sec", "Str", "sl", "stack", "url", "spec", "att", "serv", "tree", "txt", "div", "desc", "ctr", "sp", "arr"], "i": ["yi", "bi", "in", "multi", "si", "ti", "ai", "ip", "it", "iu", "o", "zi", "xi", "di", "pi", "qi", "c", "ei", "mi", "point", "ini", "ci", "id", "oi", "sim", "span", "j", "a", "uri", "iq", "I", "ind", "ij", "q", "init", "m", "index", "ki", "\u0438", "asi", "ii", "gi", "us", "t", "is", "li", "ui", "cli", "n", "ji", "ix", "ic", "phi", "u", "ri"]}}
{"code": "import java.io.BufferedWriter;\\nimport java.io.InputStreamReader;\\nimport java.io.OutputStreamWriter;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n\\n\\n    public static void main(String[] args) {\\n       Scanner sc = new Scanner(System.in);\\n      int test = sc.nextInt();\\n        HashMap<String,Integer> hm = new HashMap<>();\\n        int max =0; int count=0;\\n      for(int ii=0; ii<test; ii++) {\\n          String s = sc.next();\\n          if (hm.containsKey(s)) {\\n              Integer x = hm.get(s);\\n              x++;\\n              hm.put(s, x);\\n              if (x == max)\\n                  count++;\\n              if (x > max)\\n                  max = x;\\n          } else {\\n              hm.put(s, 1);\\n              if (1 == max)\\n                  count++;\\n              if (1 > max)\\n                  max = 1;\\n          }\\n      }\\n    List<String> al = new ArrayList<>();\\n      for(Map.Entry<String,Integer> map : hm.entrySet()){\\n          int y = map.getValue();\\n          if(y == max)\\n            al.add(map.getKey());\\n      }\\n      Collections.sort(al);\\n      for(String xx : al)\\n          System.out.println(xx);\\n\\n    }\\n}", "target": "235", "substitutes": {"sc": ["mp", "ch", "sync", "sw", "src", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "sci", "c", "ctx", "bc", "cc", "sys", "proc", "SC", "lc", " Sc", "rc", "usc", "st", "sch", "sec", "gc", "cl", "pb", "nc", "sq", "cs", "tc", "pc", "ctl", "dc", "txt", "isc", "desc", "scl", "sv", "enc", "sp", "esc"], "test": ["check", "tmp", "set", "tx", "port", "time", "master", "pe", "ver", "testing", "step", "cmp", "Testing", "conf", "tested", "type", "Test", "config", "j", "py", "train", "show", "index", "the", "pre", "dev", "tests", "t", "valid", "scale", "code", "txt", "temp", "match", "val", "est"], "hm": ["mp", "oh", "hr", "mx", "md", "hom", "mt", "mr", "uh", "mm", "zh", "mith", "MH", "mph", "also", "hp", "am", "ths", "HM", "drm", "nm", "pm", "hd", "hl", "ht", "hops", "hh", "h", "esm", "rh", "wm", "ham", "m", "tm", "rpm", "phy", "fm", "km", "helm", "htm", "ha", "ym", "hap", "hw", "dm", "iam", "hz", "dh", "gm", "hy", "amm", "bm", "ctr", "mg", "hs", "hem"], "max": ["mx", "size", "std", "total", "set", "tmp", "all", "ax", "master", "best", "sum", "prime", "c", "global", "mod", " Max", "current", "height", "res", "length", "hash", "view", "n", "p", "mean", "limit", "mad", "null", "last", "MAX", "med", "end", "alpha", "can", "index", "Max", "huge", "ca", "temp", "ms", "major", "cm", "key", "k", "aux", "conf", "act", "rest", "dev", "t", "ex", "maximum", "cur", "w", "tx", "now", "cmp", "v", "id", "start", "range", "min", "top", "wh", "gt", "m", "full", "rand", "num", "est"], "count": ["nb", "add", "size", "list", "total", "iter", "w", "all", "sum", "counter", "found", "th", "conf", "c", "amount", "coll", "nr", "trace", "act", "nt", "v", "cont", "f", "number", "length", "ind", "q", "force", "index", "cond", "call", "Count", "con", "t", "z", "stat", "num", "code", "ct", "n", "ctr", "p", "col"], "ii": ["yi", "qq", "si", "ti", "ai", "nn", "umi", "ie", "ee", "zi", "xi", "di", "qi", "ice", "i", " si", "sci", "ei", "nr", "cgi", "ini", "ci", "sim", " i", "ia", "iq", "ni", "I", "ind", "inter", "sn", "ao", "iy", "init", "oci", "batch", "chi", "is", "li", " ni", "eye", "inn", "II", "ix", "fi", "ati", "im", "ou", "ani", " li"], "s": ["ms", "S", "ws", "sts", "sw", "ds", "sm", "stats", "source", "series", "es", "l", "b", "ns", "c", "ts", "js", "str", "g", "v", "sys", "ats", "span", "h", "a", "gs", "st", "string", "ls", "m", "south", "ss", "sq", "qs", "less", "os", "us", "t", "ps", "is", "stat", "simple", "sample", "sql", "p", "sv", "rs", "hs", "sym"], "x": ["dx", "mx", "px", "tx", "xd", "ax", "xf", "l", "xi", "xt", "xc", "fx", "xp", "i", "xes", "act", "ux", "ox", "X", "wx", "xs", "xxxx", "yx", "xml", "inx", "rx", "index", "cox", "xa", "xy", "z", "ex", "one", "xxx", "xxxxxxxx", "n", "ix", "p", "rex", "lex"], "al": ["ale", "bal", "ap", "alid", "en", "alf", "ael", "aler", "ag", "isal", "ales", "pal", "Al", "cal", "alis", "all", "ax", "als", "compl", "ala", "el", "ill", "alog", "am", "ar", "alph", "ell", "sal", "alls", "dal", "AL", "il", "alt", "stal", "ol", "aval", "ali", "tal", "aled", "wal", "atal", "alled", "ral", "ial", "adal", "hal", "ald"], "map": ["ap", "mp", "add", "list", "part", "complete", "ve", "pair", "apper", "set", "ace", "mt", "block", "spe", "pack", "pad", "cap", "sum", "maps", "def", "addr", "mate", "parse", "tab", "load", "mod", "make", "shape", "ph", "app", "MAP", "le", "hash", "m", "cast", "tool", "gate", "use", "join", "wrap", "link", "acc", "pl", "pose", "match", "module"], "y": ["ies", "yi", "sy", "dy", "ye", "ey", "yd", "yl", "Y", "gy", "i", "ys", "ly", "cy", "my", "yr", "ky", "ty", "j", "vy", "uy", "py", "ery", "yt", "iy", "ya", "ry", "yn", "oy", "ny", "ym", "iny", "xy", "z", "hy", "yy", "axy", "wy"], "xx": ["iox", "zzy", "px", "nz", "xe", "xd", "eeee", "yz", "xf", "aaa", "xi", "xt", "vd", "xc", "XXXX", "kt", "ux", "ox", "zz", "vy", "wx", "xxxx", "xs", "ph", "cake", "yx", "inx", "ck", "sq", "XXX", "XX", "fuck", "hz", "xy", "xxx", "xxxxxxxx", "yy", "yk"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int x = sc.nextInt();\\n        \\n        //\u4e0e\u3048\u3089\u308c\u305f\u6570\u304c\u7d20\u6570\u304b\u7d20\u6570\u3067\u306a\u3044\u304b\u3092\u898b\u5206\u3051\u308b\u306b\u306f\uff0c2\u304b\u3089N\u22121\u307e\u3067\u306e\u6574\u6570\u3067\u5272\u308a\u5207\u308c\u308b\u304b\u3069\u3046\u304b\\n        for (int n=x; ; n++) {\\n            if (judgeNumber(n)) {\\n                System.out.println(n);\\n                break;\\n            }\\n        }\\n    }\\n    \\n    private static boolean judgeNumber(int n) {\\n        for (int i=2; i<=n-1; i++) {\\n            if (n%i == 0){\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}", "target": "183", "substitutes": {"sc": ["ch", "sw", "cle", "cam", "mc", "osc", "cr", "ec", "Sc", "row", "ko", "c", "sub", "inc", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "ss", "cl", "uc", "nc", "sq", "cs", "system", "tk", "pc", "ser", "capt", "isc", "scl", "sv", "sp", "esc"], "x": ["dx", "px", " xx", "set", "time", "tx", "w", "xx", "key", "ax", " cx", "xi", "xt", "xc", "ctx", "i", "xp", "X", "y", "ox", "xs", "rx", "index", "xy", "z", "ex", "ix", "val"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    \\n    String s = sc.next();\\n    \\n    char[] c = s.toCharArray();\\n    \\n    System.out.println(\"2018/01/\" + c[8] + c[9]);\\n  }\\n}\\n", "target": "18", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "Sc", "ko", "sel", "dec", "bc", "cc", "sys", "SC", "lc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "nc", "system", "cs", "tc", "sq", "pc", "ser", "sa", "isc", "desc", "syn", "scl", "sv", "sp", "esc"], "s": ["in", "ms", "S", "space", "sts", "sf", "sb", "strings", "ts", "js", "str", "g", "v", "sys", "ats", "j", "gs", "st", "string", "ls", "m", "sam", "sl", "ss", "sq", "so", "se", "ps", "is", "su", "sa", "n", "p", "sv", "rs", "sp"], "c": ["abc", "toc", "cp", "ch", "vc", "cache", "cm", "csv", "mc", "chain", "l", "b", "cd", "anc", "ec", "char", "xc", "arc", "d", "fc", "v", "C", "cc", "cb", "h", "f", "lc", "cv", "rc", "ac", "gc", "nc", "cs", "tc", "cf", "etc", "t", "dc", "pc", "count", "ce", "ct", "ca", "cu", "unc", "u"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\npublic static void main(String[]srgs) {\\n\tScanner scan=new Scanner(System.in);\\n\tint a=scan.nextInt();\\n\tint b=scan.nextInt();\\n\tint ans=0;\\n\tfor(int i=a;i<=b;i++) {\\n\t\tint x=i;\\n\t\tint c=x%10;\\n\t\tx/=10;\\n\t\tint d=x%10;\\n\t\tx/=10;\\n\t\tx/=10;\\n\t\tint f=x%10;\\n\t\tx/=10;\\n\t\tint g=x%10;\\n\t\tif(c==g&&d==f) {\\n\t\t\tans++;\\n\t\t}\\n\t}\\n\tSystem.out.println(ans);\\n\tscan.close();\\n}\\n}", "target": "104", "substitutes": {"srgs": ["rg", "frgm", "sprgin", "sprg", "srgm", "sprgs", "rgs", "rgin", "srgin", "srg", "sprgm", "rgm", "frgs", "frg", "frgin"], "scan": ["an", "scroll", "in", "query", "report", "list", "ch", "nn", "sync", "pass", "check", "set", "read", "send", "re", "ann", "run", "clean", "see", "sum", "by", "row", "out", "char", "sub", "sc", "get", "cgi", "parse", "ner", "r", "find", "v", "sys", "proc", "skip", "black", "start", "range", "search", "can", "reach", "gc", "gate", "san", "system", "sort", "info", "se", "na", "stat", "n", "syn", "auto", "sv", "Scan"], "a": ["ap", "an", "la", "ba", "ab", "da", "ea", "at", "ai", "e", "au", "from", "ax", "ada", "aj", "area", "am", "A", "r", "ar", "ia", "ta", "ma", "ao", "va", "alpha", "ac", "ae", "oa", "aa", "sta", "as", "na", "pa", "sa", "ca", "n"], "b": ["nb", "bi", "ba", "ab", "bl", "be", "bb", "fb", "ib", "e", "eb", "l", "bs", "db", "r", "v", "bf", "y", "bar", "body", "m", "blue", "bis", "br", "base", "z", "B", "rb", "bound", "n", "p"], "ans": ["an", "acs", "uns", "ars", "ms", "ents", "names", "users", "s", "orts", "ds", "stats", "aps", "ows", "ann", "als", "ons", "ins", "ns", "ags", "vals", "ks", " scans", "arts", "vs", "lines", "ats", "rors", "ends", "rows", "ants", "xs", "ANS", "ads", "ls", "ots", "times", "cs", "checks", " spans", "offs", "amps", "ens", "rs", "outs", "ids", "eds"], "i": ["in", "multi", "ms", "si", "ti", "ai", "iii", "ip", "it", "iu", "o", "l", "zi", "xi", "di", "pi", "qi", "ei", "mi", "v", "ini", "uu", "ci", "y", "sim", "j", "iq", "I", "ind", "ij", "init", "m", "index", "ori", "ki", "ii", "gi", "t", "is", "li", "z", "hi", "ui", "cli", "n", "ix", "p", "im", "ic", "phi", "u", "ri"], "x": ["an", "in", "bit", "mx", "list", "px", "ch", "e", "s", "tx", "w", "xe", "xx", "key", "o", "ax", "l", "xi", "xt", "pi", "xc", "lex", "ctx", "v", "ux", "ci", "y", "X", "ox", "j", "wx", "xs", "h", "xml", "php", "m", "index", "rx", "xa", "t", "hex", "xy", "z", "ex", "xxx", "n", "ix", "p", "ic", "u"], "c": ["cp", "e", "vc", "mc", "l", "k", "cd", "ec", "sc", "r", "or", "v", "cc", "C", "ci", "co", "fc", "cb", "h", "lc", "cu", "ac", "m", "uc", "nc", "tc", "cs", "cf", "t", "dc", "z", "ca", "n", "ct", "p", "ic", "unc", "u"], "d": ["dx", "da", "nd", "e", "D", "ds", "fd", "l", "dir", "dr", "di", "cd", "del", "dd", "db", "ad", "r", "v", "dp", "dat", "j", "td", "sd", "df", "de", "m", "pd", "dm", "t", "dc", "z", "n", "du", "p"], "f": ["fl", "fp", "fb", "e", "fd", "fi", "o", "fr", "l", "fg", "r", "fc", "v", "bf", "j", "tf", "h", "df", "q", "m", "fm", "cf", "t", "fe", "fo", "z", "fa", "F", "n", "p", "u"], "g": ["gre", "e", "ang", "l", "fg", "di", "gb", "gr", "ig", "r", "v", "cc", "rg", "y", "gg", "mg", "j", "h", "gt", "G", "q", "gp", "m", "gc", "gi", "ga", "t", "gm", "gd", "n", "tg", "p", "ge", "ic", "u"]}}
{"code": "import java.util.Scanner;\\n\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in); \\n\\n\t\tint n = sc.nextInt();\\n\\n\t\tcall(n);\\n\\n\t\tsc.close();\\n\t}\\n\\n\tprivate static void call(int n) {\\n\t\tfor (int i = 1; i <= n; i++) {\\n\t\t\tint x = i;\\n\t\t\tif (x % 3 == 0) {\\n\t\t\t\tSystem.out.print(\" \" + i);\\n\t\t\t} else {\\n\t\t\t\twhile (x != 0) {\\n\t\t\t\t\tif (x % 10 == 3) {\\n\t\t\t\t\t\tSystem.out.print(\" \" + i);\\n\t\t\t\t\t\tx = 0;\\n\t\t\t\t\t}\\n\t\t\t\t\tx /= 10;\\n\t\t\t\t}\t\t\t\t\t\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(\"\");\\n\t}\\n\\n}", "target": "154", "substitutes": {"sc": ["ch", "sb", "sw", "src", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "arc", "ko", "c", "bc", "cc", "sys", "ng", "SC", "lc", " Sc", "rc", "cv", "usc", "sch", "sr", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "sq", "tc", "cs", "reader", "ck", "uc", "pc", "psc", "syn", "isc", "sh", "capt", "sv", "sp", "esc"], "n": ["nb", "en", "size", "nn", "s", "nor", "w", "o", "l", "np", "k", "ns", "c", "d", "nr", "g", "r", "nm", "nt", "no", "v", "y", "ng", "on", "j", "h", "number", "sn", "fn", "m", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "count", "len", "N", "p", "mn"], "i": ["yi", "bi", "in", "multi", "ms", "\u00ed", "si", "ti", "ai", "iter", "ip", "integer", "it", "iu", "ie", "l", "zi", "xi", "di", "pi", "qi", "c", "ei", "ik", "mi", "v", "ini", "ci", "y", "sim", "id", "j", "io", "f", "uri", "iq", "I", "ind", "ij", "init", "m", "index", "ki", "batch", "ii", "gi", "us", "t", "to", "is", "li", "z", "hi", "ui", "client", "ji", "ix", "p", "im", "ic", "phi", "ri"], "x": ["dx", "tt", "mx", "px", " xx", "check", "max", "set", "tx", "w", "lat", "xx", "xd", "xe", "ax", "xf", "l", "xi", "xt", "step", "xc", "fx", "xp", "mix", "xes", "act", "v", "ux", "ci", "X", "ox", "j", "wx", "xs", "inx", "rx", "index", "php", "cox", "batch", "exp", "t", "hex", "xy", "z", "ex", "xxx", "ct", "xxxxxxxx", "checked", "ix", "xa", "lex", "history", "wait"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    static long gcd (long a, long b) {return b>0?gcd(b,a%b):a;}\\n    static long lcm (long a, long b) {return a*b/gcd(a,b);}\\n\\n    \\n    public static void main(String args[]) {\\n\\n        Scanner sc = new Scanner(System.in);\\n        long A = sc.nextLong()-1;\\n        long B = sc.nextLong();\\n        long C = sc.nextLong();\\n        long D = sc.nextLong();\\n        \\n        long cc = (B/C)-(A/C);\\n        long dc = (B/D)-(A/D);\\n        long lcm = lcm(C, D);\\n        \\n        long ccd = (B/lcm)-(A/lcm);\\n        System.out.println(B-A-cc-dc+ccd);\\n    }\\n}", "target": "9", "substitutes": {"a": ["an", "val", "la", "ba", "ab", "da", "ea", "at", "au", "e", "s", " fa", " ba", "all", "o", "l", "aaa", " ca", "aj", "area", "x", "ad", "c", "i", "am", "d", "g", "r", " an", "ar", "y", "ia", "ma", "h", "f", "va", "alpha", "ac", "ae", "m", "oa", "aa", "as", "t", "z", "sa", "ca", "n", "aq", "p", "al", " e"], "b": ["nb", "bi", "ba", "ab", "bb", "ib", "fb", "e", "sb", "wb", "w", "o", "eb", "l", "bs", "ob", "gb", "bin", "db", "c", "i", "d", "g", "r", "bc", "v", "bf", "y", "bar", "cb", "j", "f", "h", "back", "value", "m", "bp", "t", "z", "rb", "n", "p", "be", "u"], "sc": ["ch", "sync", "sw", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "sel", "sci", "c", "ko", "ctx", "comm", "bc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "st", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "sq", "cs", "tc", "se", "disc", "pc", "ctl", "isc", "syn", "scl", "sh", "p", "sv", "sp", "esc"], "A": ["AB", "S", "At", "Abs", "AT", "This", "BA", "T", "AF", "mA", "E", "EA", "AC", "JA", "AI", "H", "Y", "As", "P", "AS", "AD", "AH", "V", "CA", "SA", "Array", "M", "ACT", "X", "AE", "LA", "AR", "I", "G", "AA", "Ag", "R", "App", "AK", "AL", "IA", "GA", "AP", "Ant", "L", "Av", "AU", "Art", "AM", "N", "API", "AST", "AN", "An"], "B": ["BG", "AB", "Bs", "S", "BR", "BB", "J", "BU", "BF", "RB", "BA", "T", "CB", "Builder", "E", "IB", "H", "Y", "USB", "OR", "Z", "P", "BT", "TB", "Blue", "V", "BD", "BO", "M", "SB", "BC", "WB", "W", "NB", "I", "G", "BI", "Big", "R", "BS", "BL", "BM", "L", "F", "GB", "N", "O", "DB"], "C": ["CS", "CP", "S", "CT", "T", "CB", "E", "K", "Cond", "Cl", "U", "CV", "Co", "H", "Y", "P", "DC", "CHAR", "c", "CL", "Sc", "V", "CA", "Ch", "M", "SC", "W", "BC", "G", "I", "CC", "CON", "Cs", "R", "CD", "CNN", "L", "F", "CF", "N", "O", "CM"], "D": ["DP", "S", "DS", "dL", " d", "T", "DATA", "E", "De", "DD", "LD", "U", "DA", "DE", "Y", "Z", "DC", "P", "d", "V", "DM", "Def", "M", "DO", "G", "I", "DL", "Dir", "R", "DW", "DF", "CD", "DN", "L", "F", "Q", "Ds", "N", "O", "Do", "DB", "DI", "DOM", "DIR"], "cc": ["cp", "cca", "cm", "CB", "mc", "ll", "ctrl", "cd", "dd", "ec", "c", "d", "bc", "fc", "ci", "co", "BC", "lc", "erc", "rc", "CC", "ac", "gc", "cl", "uc", "nc", "ck", "tc", "cs", "cf", "CD", "ctl", "acc", "cn", "ct", "ca", "CCC"], "dc": ["cca", "dt", "da", "ds", "cm", "mc", "dr", "di", "cd", "bd", "dd", "cr", "ec", "DC", "c", "d", "bc", "fc", "dp", "ci", "td", "lc", "df", "erc", "rc", "ac", "gc", "nc", "tc", "CD", "disc", "pc", "dk", "dl"], "lcm": [" lpm", "lepm", "lppm", "lccm", "lecd", "nlcm", "alca", "gcc", "lpcm", "lpm", "lpca", "Lcd", "rmc", "Lcm", " lcr", "lmm", "Lmm", " lcd", "nlcd", "gca", "llcc", " lca", "nlmc", "llcm", "Lcr", "Lmc", "lpcd", "alpc", " lpc", "lecm", "rcd", "lcpm", "lcd", "llcd", " lmm", "llca", "rcm", "lcmm", "lcc", " lcc", "Lpm", "lpc", "lppc", "alcm", "nlmm", "alcd", "lmc", "lcr", "gcd", "lccr", "gcm", "lepc", "lca", "rmm"], "ccd": ["xxd", "rcdt", " ccD", "ccc", "ccad", " ccu", "ccadL", "cpd", "xxD", "xxu", "cpds", " ccdt", "ccads", "ccdt", "cmds", "cpdL", "rcd", "ccac", "xxdt", "rcD", "ccD", "ccu", "rcu", "cmd", "cmdL", "ccds", "ccdL", "cpc", "cmc"]}}
{"code": "\\n\\nimport java.text.ParseException;\\nimport java.text.SimpleDateFormat;\\nimport java.time.LocalDate;\\nimport java.time.format.DateTimeFormatter;\\nimport java.util.Date;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws ParseException {\\n        Scanner sc = new Scanner(System.in);\\n\\n        String s = sc.next();\\n\\n\\n\\n//        if (date.equals(LocalDate.of(2019, 4, 30))) {\\n//            System.out.println(\"Heisei\");\\n//        } else if (date.isBefore(LocalDate.of(2019, 4, 30))) {\\n//            System.out.println(\"Heisei\");\\n//        } else {\\n//            System.out.println(\"TBD\");\\n//        }\\n\\n        int y = Integer.parseInt(s.substring(0, 4));\\n        int m = Integer.parseInt(s.substring(5, 7));\\n        int d = Integer.parseInt(s.substring(8, 10));\\n\\n        if (y == 2019 && m == 4 && d == 30) {\\n            System.out.println(\"Heisei\");\\n            return;\\n        }\\n\\n        if (y > 2019) {\\n            System.out.println(\"TBD\");\\n            return;\\n        }\\n        if (y == 2019 && m > 4) {\\n            System.out.println(\"TBD\");\\n            return;\\n        }\\n        System.out.println(\"Heisei\");\\n\\n    }\\n}\\n", "target": "163", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "sk", "mc", "osc", "anc", "sac", "ec", "Sc", "c", "bc", "cc", "sys", "SC", "lc", "rc", "sch", "sec", "gc", "scan", "uc", "nc", "sq", "tc", "cs", "pc", "capt", "isc", "desc", "scl", "soc", "syn", "sv", "sp", "esc"], "s": ["S", "results", "e", "es", "b", "ns", "text", "c", "ts", "d", "str", "y", "name", "a", "string", "gs", "m", "ss", " ss", "os", "data", "ps", "n", "p", "rs", "ids"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tScanner scanner = new Scanner(System.in);\\n\t\t\\n\t\tint m =scanner.nextInt();\\n\t\tString a = scanner.next();\\n\t\tint n= a.length();\\n\t\t\\n\t\tchar[] c = a.toCharArray();\\n\t\t\\n\t\tfor(int i = 0 ;i<n;i++) {\\n\t\t\tif(i>m-1) {\\n\t\t\t\tif(n>m) {\\n\t\t\t\tSystem.out.println(\"...\");\\n\t\t\t\t}\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tSystem.out.print(c[i]);\\n\t\t}\t\t\\n\t}\\n}", "target": "248", "substitutes": {}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\\n            \\n            String s = br.readLine();\\n            String t = br.readLine();\\n            t = t.substring(0, s.length());\\n            \\n            PrintWriter pw = new PrintWriter(System.out);\\n            pw.println((s.equals(t)) ? \"Yes\" : \"No\");\\n            pw.flush();\\n            \\n        }\\n    }\\n}", "target": "137", "substitutes": {"s": ["S", "sts", "sb", "sf", "ds", "w", "l", "b", "ns", "bs", "x", "c", "i", "ts", "d", "js", "str", "g", "v", "ats", "j", "sd", "h", "xs", "st", "gs", "string", "ls", "ss", "sl", "sq", "so", "qs", "cs", "os", "se", "ps", "is", "z", "n", "sh", "p", "sv", "rs", "hs", "sp"], "t": ["tt", "dt", "ot", "at", "lt", "total", "it", "mt", "pt", "w", "test", "T", "term", "o", "l", "tr", "b", "wt", "rt", "text", "c", "template", "ts", "out", "tif", "str", "g", "trace", "nt", "type", "y", "tp", "ty", "j", "ta", "f", "tf", "gt", "title", "st", "tm", "ent", "that", "te", "tc", "to", "tree", "txt", "ct", "n", "tg", "p"], "pw": ["tpwr", "cpp", "lpw", "px", "lpwr", "Pw", "lpx", "jpew", "tpW", "pew", "tpv", "epp", "pW", "Pv", "epw", "Pwr", "pwr", "psw", " px", "PW", " pwr", "lpew", " pp", "jpwr", "cpv", "pv", "tpw", "cpW", "cpw", "cpwr", "cpsw", " pew", " psw", "epsw", "jpw", "epwr", "jpx", "pp"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Collections;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String args[]){\\n\\n\t\tScanner scan = new Scanner(System.in);\\n\\n\t\tint n = scan.nextInt();\\n\t\tint k = scan.nextInt();\\n\t\tlong sum = 0;\\n\t\t\\n\t\tArrayList<Long> h = new ArrayList<Long>();\\n\t\t\\n\t\tfor(int i = 0; i < n; i++){\\n\t\t\th.add(scan.nextLong()); \\n\t\t}\\n\t\t\\n\t\tCollections.sort(h,Collections.reverseOrder());\\n\t\t\\n\t\tfor(int i = k; i < n; i++){\\n\t\t\tsum += h.get(i);\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(sum);\\n\t\t\\n\t}\\n}", "target": "230", "substitutes": {"scan": ["an", "scroll", "query", "report", " Scan", "spin", "ch", "nn", "sign", "pass", "sync", "check", "cat", "read", "send", "connect", "re", "ann", "pack", "see", "by", "row", "sc", "get", "walk", "g", "sin", "ner", "r", "parse", "find", "sys", "proc", "black", "skip", "sim", "search", "sn", "sp", "can", "reach", "gc", "gate", "san", "go", "system", "info", "se", "con", "ser", "link", "scale", "na", "store", "sur", "sql", "sv", "Scan", " scanner"], "n": ["nb", "an", "en", "nn", "nw", "network", "o", "l", "np", "ns", "x", "c", "d", "nt", "no", "v", "nm", "ng", "j", "sn", "ni", "nu", "m", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "cn", "num", "net", "N", "p", "mn"], "k": ["ka", "kl", "kr", "ke", "kn", "s", "w", "sk", "key", "o", "kid", "K", "ko", "ks", "ik", "g", "ek", "r", "v", "ku", "ak", "j", "kk", "q", "m", "mk", "ki", "km", "ck", "tk", "t", "dk", "num", "p", "kh", "u"], "sum": ["add", "summary", "size", "total", "vol", "max", "gam", "um", "cal", "cum", " summed", "out", "amount", "lam", "cost", "v", "hd", "score", "mass", "black", "sim", "alph", "sat", "ass", "hash", "Sum", "weight", "index", "sam", "mu", "tu", "hum", "zero", "dev", "loss", "hist", "t", "scale", "count", "num", "mem", "temp", "cu", "mean", "average", "history"], "h": ["oh", "av", "hr", "it", "ah", "help", "phi", "uh", "l", "hal", "zh", "dr", "th", "H", "p", "hp", "he", "hm", "bh", "hd", "hl", "ht", "hh", "ph", "rh", "hash", "has", "ha", "ho", "exp", "hw", "hist", "hz", "dh", "header", "sh", "ih", "hex", "pp", "hs", "history", "kh"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "umi", "iu", "ie", "o", "PI", "zi", "xi", "di", "iti", "pi", "qi", "ei", "this", "g", "mi", "point", "ity", "ini", "ci", "y", "sim", "err", "oi", "j", "io", "uri", "ni", "I", "ind", "print", "q", "iy", "init", "me", "ami", "ori", "php", "ki", "\u0438", "MI", "ii", "gi", "us", "ims", "is", "li", "base", "hi", "ui", "client", "cli", "ji", "ix", "fi", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.*;\\nimport java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tBufferedReader br = new BufferedReader(\\n\t\t\tnew InputStreamReader(System.in));\\n\t\ttry {\\n\t\t\tString nandk[] = br.readLine().split(\" \");\\n\t\t\tint n = Integer.parseInt(nandk[0]);\\n\t\t\tint k = Integer.parseInt(nandk[1]);\\n\t\t\tString[] h = br.readLine().split(\" \");\\n\t\t\tint count = 0;\\n\\n\t\t\tfor(int i = 0; i < n; i++) {\\n\t\t\t\tif(Integer.parseInt(h[i]) >= k) {\\n\t\t\t\t\tcount++;\\n\t\t\t\t}\\n\t\t\t}\\n\\n\t\t\tSystem.out.println(count);\\n\t\t\tbr.close();\\n\t\t} catch(IOException e) {\\n\t\t\te.printStackTrace();\\n\t\t}\\n\t}\\n}\\n", "target": "145", "substitutes": {"br": ["wr", "bsp", "ber", "hr", "bl", "kr", "ch", "BR", "Br", "vr", "mr", "next", "rem", "fr", "eb", "tr", "b", "buf", "dr", "browser", "bd", "bs", "cr", "db", "jp", "rel", "gr", "r", "bh", "bc", "yr", "bt", "sp", "bridge", "lr", "pre", "shr", "ck", "bp", "adr", "rb", "pr", "ctr", "bro", "bn"], "nandk": ["nadk", "nork", "nbandn", "tAndks", "nandke", "nallck", "connbandtk", "nandek", "nAndek", "nallk", " nAndke", "tAndk", "nbandk", "connbandck", "norke", "nalltk", "connandn", "nAndks", "nadn", "tAndka", "norn", " nAndk", "nadke", "nadka", "nAndke", " nAndn", "nalln", " nAndek", "nbandtk", "connandck", "tAndn", "nbandck", " nandek", "tandk", " nandke", "nAndk", "nadks", "tandn", "nandn", "nandks", "nAndka", "nandtk", "tandks", "connbandk", "nandck", "nadek", "nAndn", "connandk", "norek", "connbandn", "tandka", "connandtk", "nandka", " nandn"], "n": ["nb", "an", "en", "nn", "w", "network", "l", "ns", "x", "c", "d", "nt", "conn", "v", "nm", "no", "on", "name", "j", "f", "sn", "m", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "N", "mn"], "k": ["ka", "kl", "ke", "kr", "kn", "ch", "wk", "w", "kind", "sk", "o", "kan", "K", "b", "th", "ko", "x", "ks", "ik", "r", "ek", "v", "ku", "ok", "ak", "j", "f", "q", "kk", "kw", "m", "kj", "mk", "ki", "km", "ck", "tk", "t", "z", "p", "kh"], "h": ["oh", "hr", "ah", "history", "w", "uh", "th", "H", "hp", "he", "hm", "bh", "hd", "eh", "hl", "ht", "hh", "html", "ph", "rh", "hash", "m", "ha", "handle", "ho", "hw", "hz", "hi", "sh", "ih", "hex", "hs", "hal", "kh"], "count": ["nb", "result", "report", "add", "core", "size", "list", "scroll", "total", "quiet", "success", "max", "status", "now", "sum", "counter", "cd", "const", "found", "conf", "c", "amount", "coll", "flag", "trace", "find", "nt", "must", "number", "length", "ind", "child", "hold", "index", "cast", "cond", "batch", "call", "Count", "info", "acc", "ount", "stat", "num", "code", "ct", "ctr"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "s", "set", "iu", "ie", "o", "series", "PI", "chain", "xi", "di", "pi", "qi", "ei", "g", "mi", "point", "ini", "ci", "y", "sim", "id", "span", "j", "uri", "I", "ind", "q", "init", "me", "m", "index", "\u0438", "gi", "ii", "us", "li", "base", "ui", "cli", "ji", "sql", "ix", "fi", "sequence", "im", "phi", "ri"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.Collections;\\nimport java.util.Comparator;\\nimport java.util.HashMap;\\nimport java.util.HashSet;\\nimport java.util.Iterator;\\nimport java.util.Map.Entry;\\nimport java.util.PriorityQueue;\\nimport java.util.Scanner;\\n\\nclass Main {\\n\\n    static final int MOD = 1000000007;\\n    static final int INF = 1 << 30;\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        int M = sc.nextInt();\\n        boolean[] AC = new boolean[N];\\n        int[] WA = new int[N];\\n        int acc = 0;\\n        int wac = 0;\\n        for (int i = 0; i < M; i++) {\\n            int p = sc.nextInt()-1;\\n            boolean ac = sc.next().equals(\"AC\");\\n\\n            if (AC[p])\\n                continue;\\n            if (ac) {\\n                acc++;\\n                wac += WA[p];\\n                AC[p]=true;\\n            } else {\\n                WA[p]++;\\n            }\\n        }\\n        System.out.println(acc + \" \" + wac);\\n    }\\n}\\n", "target": "48", "substitutes": {"MOD": ["DEC", "RO", "REM", "MAX", "EXP", "OP", "VER", "FF", "LD", "REF", "FD", " mod", "RM", "RES", "AD", "Mod", "INC", "MODE", "mod", "OK", "FIN", "RC", "MIN", "LOG", "REG", "UL", "COM", "MAC"], "INF": ["INV", "INFR", "PINV", "INH", "PINH", "PINF", "InF", "InFR", " INV", "PINFR", " INFR", "InH", " INH", "InV"], "sc": ["irc", "ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "ko", "scope", "c", "ctx", "sci", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "gc", "cl", "scan", "ss", "pb", "nc", "sq", "cs", "tc", "tch", "pc", "ctl", "psc", "capt", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "N": ["NP", "NI", "S", "NA", "J", "T", "NM", "K", "H", "P", "A", "V", "NT", "C", "NUM", "X", "NE", "NB", "I", "TN", "R", "NL", "NN", "NR", "Ns", "Num", "NS", "L", "SN", "B", "F", "Q", "n", "MN", "ND", "PN", "NC", "AN"], "M": ["MR", "MP", "S", "Mi", "J", "D", "T", "TM", "NM", "K", "MO", "MT", "P", "MS", "V", "MA", "DM", "C", "MD", "LM", "MC", "I", "G", "My", "PM", "m", "R", "MI", "MM", "L", "B", "MAN", "MN", "O", "CM"], "AC": ["CS", "AB", "ACH", "CT", "PAC", "AUT", "AT", "IC", "AF", "ACK", "RFC", "HA", "AS", "AD", "CA", "SA", "ACC", "AV", "ACT", "SC", "ICA", "BC", "CH", "ACP", "MC", "MAP", "CC", "AA", "RC", "ANA", "ANK", "WC", "AL", "ACE", "ANT", "Ac", "CAP", "ARC", "MAC", "UC", "ACA"], "WA": ["SW", "VW", "VA", "MW", "NA", "WAR", "WR", "PA", "WH", "WT", "AF", "HA", "RA", "FA", "CA", "MA", "WI", "SA", "KA", "WW", "FW", "W", "Wa", "WS", "WN", "AW", "WE", "wa", "WC", "TA", "Wal", "WM", "GA", "MAS", "ACA"], "acc": ["aff", "add", "ava", "adj", "resp", "com", "ord", "aug", "cum", "cash", "ann", "gain", "tr", "sum", "cmp", "deb", "conf", "auc", "pac", "ff", "eff", "comm", "inc", "coll", "cost", "ACC", "cc", "cell", "fac", "cong", "app", "ass", "CC", "gc", "attr", "uc", "alloc", "zero", "oc", "exp", "occ", "att", "con", "agg", "agn", "ca", "Acc", "aq", "ctr", "grow", "unc"], "wac": ["Wac", "waca", "wallac", " wasc", " waca", "wasc", "Waca", " wAC", "wAC", "wallacc", " wacc", "wallasc", "swac", "swacc", "weace", "WAC", " wace", "swaca", "wallaca", "wacc", "Wasc", "weac", "swAC", "weacc", "Wace", "wace", "weAC", "Wacc"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "it", "ip", "gu", "xi", "di", "pi", "qi", "x", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "a", "I", "ind", "print", "init", "m", "ki", "ii", "gi", "info", "us", "t", "is", "li", "hi", "ui", "n", "ix", "ic", "phi"], "p": ["ap", "rep", "fp", "cp", "part", "pers", "policy", "pkg", "ip", "perm", "port", "pt", "pad", "pe", "np", "ping", "pi", "vp", "P", "jp", "d", "lp", "g", "parent", "pat", "point", "peer", "pid", "tp", "span", "pos", "app", "patch", "gp", "m", "pre", "exp", "per", "bp", "pc", "ps", "t", "pa", "tip", "page", "pl", "pp", "par", "sp", "pai"], "ac": ["abc", "acs", " mac", "it", " ic", "ace", " lac", "asc", " cac", "acl", "enc", "cas", "sac", "ad", "c", "pac", "act", "cc", "fc", " pac", "fac", "mic", "a", "ack", "jac", "alpha", "iac", "rac", "uc", "oc", "tc", "mac", "disc", "pc", "Ac", "aco", "cu", "ic", "unc"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner in = new Scanner(System.in);\\n        int N = in.nextInt();\\n\\n        System.out.println(Math.min(N * in.nextInt(), in.nextInt()));\\n    }\\n}", "target": "213", "substitutes": {"in": [" din", "en", "add", "std", "pin", "In", "null", "it", "check", "din", "read", "file", "from", " input", "all", "rin", "run", "world", "user", "k", "ins", "sum", "thin", "by", "bin", "out", "conf", "i", "inc", "parse", "sin", "r", "mi", "ini", "line", "err", "io", "ind", "q", "IN", "init", "log", "scan", "reader", "ssl", "info", "per", "con", "raw", "gin", "isin", "is", "serv", "vin", "stream", "input", "n", "inn", "inf", "inner", "cin"], "N": ["NP", "NI", "S", "NA", "J", "D", "NV", "T", "NM", "NH", "K", "H", "Z", "P", "A", "V", "NT", "M", "C", "X", "Ni", "W", "NB", "I", "NN", "NR", "Ns", "NS", "L", "B", "F", "Q", "n", "ND", "O", "SN"]}}
{"code": "import java.util.*;\\nimport java.lang.*;\\n\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        String s = sc.next();\\n        if(s.equals(\"SUN\")){\\n            System.out.println(7);\\n        }else if(s.equals(\"MON\")){\\n            System.out.println(6);\\n        }else if(s.equals(\"TUE\")){\\n            System.out.println(5);\\n        }else if(s.equals(\"WED\")){\\n            System.out.println(4);\\n        }else if(s.equals(\"THU\")){\\n            System.out.println(3);\\n        }else if(s.equals(\"FRI\")){\\n            System.out.println(2);\\n        }else if(s.equals(\"SAT\")){\\n            System.out.println(1);\\n        }\\n        System.out.println();\\n        sc.close();\\n    }\\n}", "target": "136", "substitutes": {"sc": ["ch", "sync", "cle", "sw", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "arc", "c", "bc", "cc", "sys", "screen", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "uc", "system", "nc", "cs", "tc", "sq", "pb", "so", "pc", "capt", "isc", "desc", "scl", "syn", "cer", "sv", "sp", "esc"], "s": ["ms", "S", "space", "ws", "sts", "sb", "ds", "stats", "es", "l", "b", "ns", "uses", "tes", "i", "c", "ts", "comm", "js", "str", "g", "r", "v", "sys", "ats", "sports", "y", "ends", "j", "its", "a", "h", "f", "xs", "gs", "south", "st", "ls", "m", "has", "aws", "string", "self", "ss", "abs", "sq", "qs", "se", "ims", "t", "ps", "is", "as", "simple", "n", "sql", "sh", "p", "sv", "rs", "hs"]}}
{"code": "import java.util.*;\\nimport java.util.stream.*;\\n\\npublic class Main {\\n\tScanner sc;\\n\tint A, B;\\n\t\\n\tpublic Main() {\\n\t\tsc = new Scanner(System.in);\\n\t}\\n\t\\n\tprivate void calc() {\\n\t\tA = sc.nextInt();\\n\t\tB = sc.nextInt();\\n\t\tint add = A + B;\\n\t\tint sub = A - B;\\n\t\tint mul = A * B;\\n\t\t\\n\t\tout(max(add, max(sub, mul)));\\n\t}\\n\t\\n\tprivate int max(int a, int b) {\\n\t\treturn (a>b)?a:b;\\n\t}\\n\t\\n\tprivate void out(Object o) {\\n\t\tSystem.out.println(o);\\n\t\tSystem.out.flush();\\n\t}\\n\t\\n\tpublic static void main(String[] args) {\\n\t\tMain m = new Main();\\n\t\tm.calc();\\n\t}\\n\\n}", "target": "188", "substitutes": {"sc": ["mp", " scr", "ch", "sb", "sync", "s", "sw", "asc", "mc", "osc", " scorer", "ctrl", " cle", "anc", "cr", "Sc", "sel", "c", "ctx", "bc", "cc", "sys", "proc", "SC", "conv", " Sc", "rc", " SC", "st", "sch", "sec", "gc", "cl", "scan", "ss", "pb", "sq", "nc", "cs", "uc", "se", "pc", "ctl", "acc", " sp", " unsc", "capt", "isc", "sh", "scl", "desc", "sv", "sp", "esc"], "A": ["AB", "S", "Al", "One", "AT", "D", "PA", "BA", "T", "AF", "K", "EA", "AC", "AGE", "JA", "AI", "ATA", "As", "P", "HA", "AS", "RA", "AD", "V", "CA", "ASC", "SA", "Array", "AV", "M", "C", "ACC", "X", "AE", "Alpha", "LA", "AR", "G", "AA", "ALL", "Ax", "ANY", "AL", "IA", "GA", "AP", "L", "AU", "AM", "N", "AST", "API", " AA", "AN", "An"], "B": ["AB", "S", "BR", "BB", "J", "BU", "D", "BER", "BA", "T", "Builder", "IB", "VB", "Y", "Now", "BY", "BT", "Bern", "TB", "Blue", "V", "BO", "M", "C", "SB", "LIB", "BC", "WB", "NB", "I", "G", "BE", "BI", "OB", "Big", "BS", "EB", "FB", "PB", "BM", "BL", "L", "GB", "N", "DB"], "add": ["update", "create", "da", "Add", "max", "up", "set", "diff", "pad", "sum", "dd", "ADD", "ad", "def", "d", "amount", "AD", "inc", "end", "adv", "load", "mod", "change", "pos", "added", "build", "ack", "append", "ify", "acc", "div", "ed"], "sub": ["fun", "mult", "sb", "ub", "set", "rub", "diff", "apply", "sum", "del", "sel", "trans", "rel", "un", "inc", "r", "seq", "mod", "sim", "min", "change", "rob", "sup", "sec", "sl", "Sub", "replace", "sq", "sing", "pl", "su", "repl", "div", "sur", "sh"], "mul": ["mult", "cmul", "mUL", "smult", "Mul", "smuli", "cmUL", "Muli", "smul", "mil", " mil", "Mil", "Mult", "MUL", "muli", "smUL", " mUL", " mult", "cmult", "cmil", "cmuli"], "a": ["an", "aff", "la", "ba", "ab", "da", "ea", "ai", "ra", "au", "aka", "ax", "l", "aaa", "aj", "area", "x", "c", "am", "d", "era", "ity", "ar", "ia", "ma", "ao", "va", "alpha", "ac", "ae", "ga", "oa", "aa", "sta", "t", "pa", "sa", "n", "aq", "p", "al"], "b": ["nb", "bi", "ba", "ab", "bb", "ib", "fb", "sb", "wb", "w", "erb", "eb", "l", "bd", "ob", "bs", "gb", "db", "bo", "c", "i", "bg", "g", "bc", "v", "bf", "y", "bar", "cb", "j", "back", "mb", "bis", "bp", "t", "base", "z", "rb", "p", "be"], "o": ["oj", "ot", "obj", "e", "s", "w", "ico", "oin", "l", "k", "bo", "ko", "out", "i", "c", "lo", "v", "ooo", "y", "iso", "po", "f", "mo", "yo", "go", "so", "ow", "os", "oa", "object", "t", "fo", "vo", "n", "O", "oo", "p", "u", "ro"], "m": ["mp", "manager", "ms", "md", "mt", "sm", "cm", "mr", "msg", "mc", "mm", "om", "c", "i", "am", "hm", "nm", "pm", "mi", "M", "v", "mint", "rm", "j", "esm", "wm", "tm", "ym", "dm", "t", "gm", "bm", "em", "n", "man", "p", "module"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        if(N==0){\\n            System.out.println(1);\\n        }else{\\n            System.out.println(0);\\n        }\\n    }\\n}\\n", "target": "148", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "bc", "cc", "sys", "screen", "SC", "lc", "rc", "usc", "sch", "sec", "sr", "gc", "scan", "cl", "uc", "system", "nc", "sq", "tc", "cs", "spec", "pc", "acc", "sa", "syn", "capt", "isc", "scl", "desc", "sh", "sv", "sp", "esc"], "N": ["NP", "NG", "NI", "S", "NA", "J", "D", "NV", "T", "NM", "NH", "K", "H", "Z", "P", "A", "V", "NT", "M", "C", "X", "NO", "FN", "I", "G", "TN", "NB", "R", "NN", "NR", "CNN", "NC", "NS", "L", "B", "GN", "F", "n", "SN"]}}
{"code": "import java.io.IOException;\\nimport java.util.Scanner;\\n\\nclass Main {\\n\\n\tpublic static void main(String[] args) throws IOException {\\n\\n\t\tScanner scane = new Scanner(System.in);\\n\\n\t\tint r = 0, c = 0;\\n\\n\t\tr = scane.nextInt();\\n\t\tc = scane.nextInt();\\n\\n\t\tint[][] rc = new int[r][c];\\n\\n\t\tint[] r1 = new int[r];\\n\t\tint[] c1 = new int[c];\\n\\n\t\tfor(int i=0; i<rc.length; i++){\\n\t\t\tfor(int j=0; j<rc[0].length; j++){\\n\\n\t\t\t\trc[i][j] = scane.nextInt();\\n\t\t\t}\\n\t\t}\\n\t\tint nums =0;\\n\\n\t\tfor(int i=0; i<rc.length; i++){\\n\t\t\tfor(int j=0; j<rc[0].length; j++){\\n\\n\t\t\t\tr1[i] += rc[i][j];\\n\t\t\t}\\n\t\t}\\n\t\tfor(int i=0; i<rc[0].length; i++){\\n\t\t\tfor(int j=0; j<rc.length; j++){\\n\\n\t\t\t\tc1[i] += rc[j][i];\\n\t\t\t}\\n\t\t\tnums += c1[i];\\n\t\t}\\n\\n\\n\t\tfor(int i=0; i<rc.length; i++){\\n\t\t\tfor(int j=0; j<rc[0].length; j++){\\n\\n\t\t\t\tSystem.out.print(rc[i][j]+\" \");\\n\t\t\t}\\n\t\t\tSystem.out.println(r1[i]+\"\");\\n\t\t}\\n\t\tfor(int num : c1){\\n\t\t\tSystem.out.print(num+\" \");\\n\t\t}\\n\t\tSystem.out.print(nums+\"\\n\");\\n\\n\t}\\n}", "target": "23", "substitutes": {"scane": ["canse", " scanes", "scune", "scause", "descanes", "cano", " scone", "descause", " scaw", "Scane", "Scause", "chone", " scune", "scano", "scanse", "Scanse", " scANE", "ScANE", "chanes", "caw", "Scaw", " scano", "chane", "scaw", "Scone", "scANE", "scanes", " scause", "chause", "descane", "Scanes", "scone", "cune", "canes", "Scano", "Scune", " scanse", "cane", "descANE"], "r": ["e", "ir", "mr", "ro", "re", "l", "tr", "b", "rd", "dr", "rid", "rt", "cr", "x", "d", "rel", "nr", "g", "v", "ar", "rg", "rm", "res", "f", "h", "q", "m", "sr", "R", "rf", "ur", "attr", "t", "br", "rr", "rb", "n", "pr", "p", "er", "rs", "rar", "ru", "u", "ri"], "c": ["cp", "ch", "cat", "cm", "mc", "l", "b", "k", "cr", "ec", "sc", "g", "v", "co", "C", "ci", "cc", "fc", "f", "cu", "lc", "col", "ac", "m", "gc", "cl", "nc", "tc", "cs", "cf", "con", "t", "dc", "z", "ce", "ct", "n", "ca", "p", "ic", "cin", "u"], "rc": ["irc", "hr", "cur", "rn", "ra", "sync", "src", "cache", "rin", "lib", "ctrl", "req", "rd", "dr", "cmp", "aux", "resources", "rt", "cr", "rs", "gb", "loc", "arc", "ec", "sc", "coll", "rel", "fc", "co", "proc", "rev", "RS", "rl", "hl", "ras", "config", "rm", "sys", "res", "roc", "RC", "ack", "remote", "cv", "ac", "rx", "rh", "rpm", "times", "ck", "cs", "rec", "tc", "frac", "exp", "pc", "rr", "etc", "nc", "stock", "priv", "rb", "round", "desc", "rect", "ru", "ro"], "r1": ["c0", "c2", " rOne", "rt7", "rOne", "c7", "rc1", " r7", "R3", "R1", "c3", " r0", "rt2", "rtOne", "rc0", "cOne", "R2", "r2", "r3", "rc3", " r2", "R0", "rt1", "r7", "r0", "rc2"], "c1": ["c0", "c2", "cr0", "cr2", "ccasso", "sc9", "rc9", "cr3", "nc1", "rc1", "rasso", "arcone", "cone", "sc1", "cr1", "casso", "c3", "cc11", "cc1", "r11", "rcpre", "scpre", "cc2", "cpre", "arc9", "scone", "arcpre", "c11", "arc1", "rc0", "r2", "r3", "rc3", "nc0", " c2", " c11", "nc2", "r0", "rcone", "c9", "rc2", " casso"], "i": ["in", "multi", "si", "at", "ip", "zi", "di", "ion", "ini", "iy", "me", "info", " I", "hi", "phi", "it", "ie", "status", "o", "qi", "x", "ik", "y", "sim", "name", "ia", "uri", "h", "q", "ami", "init", "index", "ori", "ii", "gi", "to", "base", "ji", "ic", "ri", "bi", "la", "iu", "dr", "this", "ei", "g", "io", "I", "ind", "ij", "is", "li", "ui", "ix", "item", "ti", "ai", "xi", "pi", "by", "parent", "mi", "ity", "v", "ar", "ci", "iso", "id", "iq", "ki", "\u0438", "ims", "z", "im", "u"], "j": ["adj", "at", "json", "pt", "ll", "ax", "l", "art", "di", "jl", "uj", "js", "ion", "off", "ja", "ng", "err", "child", "kj", "br", "job", "sp", "Ja", "oj", "bj", "it", "s", "right", "ie", "o", "b", "jas", "rel", "y", "q", "je", "ev", "ji", "pr", "jo", "bi", "ot", "obj", "jc", "tr", "k", "jj", "el", "jp", "son", "og", "g", "ju", "io", "ph", "ind", "ij", "ody", "is", "other", "ix", "note", "bl", "e", "J", "fr", "kid", "jit", "dj", "aj", "by", "str", "v", "f", "m", "z", "jump", "er", "im", "mn"], "nums": ["Nums", "nsums", "nsumbers", "cumbers", "cums", "nals", "cnums", "numers", "cum", " numers", "rums", "cals", " numbs", "nsum", "cnaves", "numbers", "nsaves", "naves", "rumbs", "cnum", "numbs", "cnumbers", "cumbs", "Numbers", "rals", " naves", "cumers", "Num", "Numers", " numbers", " nals", "rum"], "num": ["nb", "mom", "card", "it", "um", "test", "cal", "key", "ord", "np", "coord", "tim", "sum", "th", "text", "nr", "nt", "nm", "no", "NUM", "current", "conv", "number", "ph", "nom", "nu", "index", "mon", "info", "umber", "Num", "na", "count", "n", "node", "nam", "mn"]}}
{"code": "import java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    static private Scanner scan = new Scanner(System.in);\\n    public static void main(String args[]) {\\n        int int1 = Integer.parseInt(scan.next());\\n        int int2 = Integer.parseInt(scan.next());\\n\\n//        String str1 = scan.next();\\n//        int int3 = Integer.parseInt(scan.next());\\n//        String str1 = scan.next();\\n\\n        int ans_int = 0;\\n        double ans_dob = 0;\\n        String ans = \"\";\\n\\n        if(int1 >= 6){\\n            if(int1 <= 12){\\n                ans_int = int2/2;\\n            }else{\\n                ans_int = int2;\\n            }\\n            //        StringBuilder sb = new StringBuilder(str1);\\n        }else{\\n            ans_int = 0;\\n        }\\n\\n//        sb.replace(0,4,\"2018\");\\n        PrintWriter out = new PrintWriter(System.out);\\n        out.println(ans_int);\\n        out.flush();\\n        scan.close();\\n    }\\n}\\n", "target": "249", "substitutes": {"scan": ["an", "query", "in", "scroll", "spin", "nn", "sync", "set", "read", "look", "re", "ann", "run", "stan", "sum", "thin", "row", "trans", "out", "seek", "sc", "get", "pan", "parse", "sin", "find", "sys", "proc", "search", "can", "reach", "gate", "san", "buffer", "transform", "system", "sort", "se", "con", "ser", "na", "scale", "stat", "n", "filter", "sur", "auto", "serial", "sv", "Scan"], "int1": ["int01", "int0", " int0", "Int2", "print1", "print0", "Int1", "Int01", " int01", "print2", "print01", "Int0"], "int2": ["pret5", "Int02", "Int2", "Int5", "pret02", "int5", "print5", "pret2", "print02", "int02", "print2"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scan = new Scanner(System.in);\\n        int a = scan.nextInt(), b = scan.nextInt() , c = scan.nextInt();\\n        int count = 0;\\n        for(int i = 1; i <= c; i++) {\\n            if(a <= i && i <= b) {\\n                if(c % i == 0) {\\n                count++ ;\\n                }\\n            }\\n        }\\n        System.out.println(count);\\n    }\\n}", "target": "190", "substitutes": {"scan": ["an", "query", "in", "en", " Scan", "report", "scroll", "list", "ch", "nn", "sync", "check", "set", "cat", "read", "send", "re", "ann", "clean", "run", "see", "save", "row", "out", "sc", "get", "cgi", "g", "sin", "ner", "r", "parse", "find", "sys", "proc", "skip", "black", "sim", "search", "can", "reach", "gc", "gate", "san", "log", "system", "info", "sort", "se", "na", "util", "n", "sur", "auto", "sv", "Scan", " scanner"], "a": ["la", "ba", "ab", "ea", "ai", "au", "aka", "o", "l", "aaa", "aj", "area", "x", "am", "A", "ia", "ta", "ma", "ao", "va", "alpha", "ac", "ae", "ga", "oa", "aa", "as", "t", "sta", "pa", "sa", "ca", "n", "isa", "aq"], "b": ["nb", "bi", "ba", "ab", "bb", "fb", "ib", "sb", "bas", "ub", "wb", "erb", "eb", "ob", "bs", "bo", "db", "g", "amb", "bc", "bf", "v", "cb", "j", "back", "beta", "mb", "blue", "bis", "br", "base", "B", "rb", "ca", "be"], "c": ["cp", "size", "ch", "e", "com", "cm", "mc", "l", "cd", "cr", "d", "sc", "g", "cos", "r", "bc", "fc", "v", "C", "ci", "cc", "co", "cb", "f", "h", "lc", "rc", "ac", "m", "gc", "nc", "cs", "cf", "tc", "con", "t", "dc", "z", "ce", "ct", "n", "p", "unc"], "count": ["result", "scroll", "report", "nb", "core", "size", "summary", "contact", "total", "quiet", "check", "cache", "test", "status", "state", "sum", "counter", "const", "found", "reported", "amount", "coll", "flag", "frequency", "trace", "find", "nt", "score", "cont", "must", "current", "number", "length", "hold", "index", "Count", "cs", "ount", "num", "ct", "n", "ctr", "match", "sequence"], "i": ["bi", "in", "multi", "si", "ti", "ai", "iter", "ip", "it", "iii", "iu", "ie", "chain", "l", "zi", "xi", "uli", "di", "pi", "qi", "x", "d", "ei", "ik", "mi", "point", "v", "ini", "ci", "id", "sim", "oi", "j", "f", "I", "ind", "print", "q", "ij", "init", "m", "index", "ori", "ki", "ii", "gi", "us", "is", "li", "base", " ii", "hi", "ui", "cli", "ji", "ix", "fi", "sequence", "im", "ic", " j", "phi", "ri"]}}
{"code": "import java.util.*;\\nimport static java.lang.System.*;\\n\\nclass Main {\\n  public static final int MOD = 1000000007;\\n  public static final int INF = 1000000000;\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(in);\\n    int N = sc.nextInt();\\n    int A = N / 1000;\\n    int B = N % 1000 / 100;\\n    int C = N % 100 / 10;\\n    int D = N % 10;\\n    boolean check = true;\\n    for(int i=0; i<2; i++){\\n      if(check == false) break;\\n      for(int j=0; j<2; j++){\\n        if(check == false) break;\\n        for(int k=0; k<2; k++){\\n          int tmp;\\n          if(i == 0) tmp = A+B;\\n          else tmp = A-B;\\n          if(j == 0) tmp += C;\\n          else tmp -= C;\\n          if(k == 0) tmp += D;\\n          else tmp -= D;\\n          if(tmp == 7){\\n            String op1, op2, op3;\\n            if(i == 0) op1 = \"+\";\\n            else op1 = \"-\";\\n            if(j == 0) op2 = \"+\";\\n            else op2 = \"-\";\\n            if(k == 0) op3 = \"+\";\\n            else op3 = \"-\";\\n            out.println(A + op1 + B + op2 + C + op3 + D + \"=7\");\\n            check = false;\\n            break;\\n          }\\n        }\\n      }\\n    }\\n      \\n  }\\n\\n  public static int gcd(int a, int b){\\n    if(b == 0) return a;\\n    return gcd(b, a%b);\\n  }\\n}", "target": "152", "substitutes": {"MOD": ["DEC", "RO", "REM", "RB", "MAX", "EXP", "FF", "REF", "FD", "LD", " mod", "MT", "MB", "RM", "AD", "Mod", "MA", "INC", "MODE", "NUM", "MD", "mod", "OK", "RC", "BM", "UL", "COM", "MAC"], "INF": ["INV", "INFR", "PINV", "InF", "PINI", "InFR", "INI", "PINFR", "InI", " INV", " INI", " INFR", "PINF", "InV"], "sc": ["in", "ch", "sync", "sb", "sw", "s", "src", "asc", "cle", "osc", "cr", "ec", "Sc", "out", "c", "ner", "r", "bc", "cc", "sys", "SC", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "uc", "nc", "sq", "cs", "rec", "se", "pc", "ser", "acc", "syn", "desc", "isc", "sh", "scl", "sv", "sp", "esc"], "N": ["NP", "NI", "NG", "S", "NA", "J", "NV", "T", "NM", "K", "Y", "Z", "P", "NT", "V", "M", "X", "Sn", "NO", "Ni", "NE", "Size", "NB", "I", "G", "NW", "FN", "Number", "TN", "Node", "R", "NL", "NN", "NR", "Ns", "Num", "CNN", "NS", "L", "SN", "F", "GN", "n", "MN", "O", "NC", "AN"], "A": ["AB", "S", "At", "NA", "J", "AT", "This", "BA", "T", "AF", "AC", "AI", "H", "As", "P", "AS", "Ar", "AD", "CA", "V", "SA", "AV", "ACC", "M", "AE", "Alpha", "AR", "I", "G", "AA", "R", "AL", "IA", "AP", "L", "AU", "AM", "API", "AN", "An"], "B": ["BG", "UB", "AB", "Bs", "S", "BB", "J", "RB", "BA", "CB", "T", "E", "K", "U", "IB", "VB", "H", "Y", "Z", "P", "BT", "TB", "V", "Bi", "BO", "M", "SB", "BC", "WB", "NB", "G", "I", "OB", "R", "Bar", "EB", "BL", "BM", "L", "Ber", "F", "GB", "DB"], "C": ["CS", "EC", "CP", "S", "CT", "CG", "Cu", "CU", "T", "CB", "E", "K", "H", "Z", "DC", "P", "CL", "c", "JC", "V", "CA", "Ch", "M", "Car", "X", "SC", "BC", "G", "I", "CC", "Cs", "CN", "R", "CW", "CD", "CNN", "L", "F", "Q", "Co", "CM"], "D": ["S", "DS", "PD", "T", "E", "DR", "K", "DD", "U", "DA", "DE", "TD", "Z", "P", "DC", "DH", "d", "V", "DM", "M", "X", "DO", "G", "Dir", "R", "DF", "L", "F", "Q", "DB", "DI", "DOM"], "i": ["bi", "in", "multi", "si", "ti", "ai", "ip", "it", "iu", "ie", "ir", "o", "zi", "xi", "di", "pi", "qi", "x", "this", "ei", "ik", "mi", "ini", "ci", "y", "sim", "oi", "ia", "io", "ind", "ij", "ami", "init", "index", "ori", "ki", "asi", "gi", "ii", "info", "ims", "t", "li", "hi", "ui", "ji", "n", "ix", "p", "im", "ic", "u", "ri"], "check": ["update", "query", "stay", "close", "open", "sync", "set", "help", "test", "read", "status", "comment", "send", "key", "block", "flush", "cmp", "save", "warn", "kill", "find", "clear", "fail", "lock", "black", "load", "start", "ok", "error", "CHECK", "print", "force", "good", "view", "handle", "call", "problem", "ck", "info", "task", "click", "valid", "link", "control", "checked", "match", "Check", "wait"], "j": ["jo", "ge", "bi", "oj", "bj", "obj", "jc", "json", "J", "it", "o", "er", "kid", "l", "dj", "jj", "aj", "jl", "bs", "bo", "jp", "uj", "js", "str", "g", "v", "ja", "y", "gov", "jac", "q", "ij", "je", "kj", "so", "ne", "t", "br", "li", "z", "jump", "job", "other", "ji", "n", "pr", "p", "be", "note"], "k": ["ka", "kl", "ke", "kr", "kn", "wk", "kind", "ark", "sk", "kid", "K", "th", "ijk", "ko", "ks", "g", "ik", "ek", "kar", "kt", "ask", "ku", "ok", "ak", "ph", "ack", "kw", "kk", "q", "kj", "mk", "ki", "km", "ck", "tk", "z", "unk", "n", "p", "uk", "kh"], "tmp": ["mp", "MP", "pkg", "snap", "appy", "np", "prime", "butt", "out", "tp", "Temp", "tm", "mb", "trip", "etc", "yet", "node", "sp", "result", "copy", "cp", "var", "buff", "null", "perm", "cache", "term", "table", "tag", "op", "ptr", "proc", "tn", "td", "needed", "crop", "amp", "net", "txt", "temp", "stuff", "unc", "ot", "obj", "zip", "mm", "template", "nt", "tf", "good", "mk", "attr", "alt", "zero", "tc", "t", "timeout", "important", "map", "porary", "tt", "part", "img", "emp", "test", "msg", "tar", "cmp", "tem", "prefix", "tab", "top", "m", "acc", "yy"], "op1": ["pop1", "pop0", "op01", " copOne", "opt6", " opone", "op02", "rop0", "rop01", "OP02", "oper1", "optone", " op01", "oper3", "op91", " cop2", "oop2", "pop3", "opt2", "OP1", "pop2", "OPOne", " op02", "OP2", " cop1", "oopone", "opone", "op6", "op0", " opOne", "oper2", " cop02", "rop91", "oper0", " op91", "opt91", " op6", "opt01", "rop1", "opt0", " op0", "oop6", "opt1", "opOne", "oop1"], "op2": ["ap3", "iopb", "op01", "cop2", "copb", "cop3", "ap05", "op02", "opTwo", " op52", "op4", " op002", "ap2", "opt02", " op01", "iop2", "iop002", " opTwo", "oper52", "oop3", " op05", "op52", "pop3", "operTwo", "opt2", "oop2", "pop2", " opb", " op02", " op4", "opt05", "cop002", "opt52", "opb", "iop3", "oop01", "oper02", "pop01", "pop4", "op05", "op002", "opt3", "optTwo", "oper2", "oop4"], "op3": ["operThree", "mp3", "oop93", "mpthree", " op93", "mopThree", " op03", "cop3", "opThree", " opthree", "op4", "epthree", "OPThree", "OP4", " opThree", "Op2", "opthree", "Op3", "mop3", "oper3", "oop3", "oper03", "OpThree", "op93", "ep03", "mopthree", "Op03", "OPthree", " op4", "oopThree", "mpThree", "mop2", "op03", "OP03", "OP93", "OP3", "mp2", "copthree", "ep3", "cop03", "oper2", "oop4"], "a": ["an", "result", "la", "ba", "ab", "da", "at", "ea", "au", "it", "o", "aaa", "aj", "area", "x", "c", "am", "d", "g", "r", "ar", "ia", "ta", "f", "ao", "va", "alpha", "ac", "ae", "index", "xa", "oa", "aa", "as", "t", "to", "sa", "ca", "n", "p", "val", "al", "u"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "e", "ib", "s", "w", "o", "l", "bs", "ob", "x", "c", "d", "g", "r", "bc", "v", "bf", "y", "cb", "f", "h", "m", "bp", "t", "z", "rb", "n", "p", "u"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\tpublic static void main(String[] args)throws Exception{\\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\\n        BufferedReader br = new BufferedReader(isr);\\n        \\n        while (true)\\n        {\\n        \tString input = br.readLine();\\n        \tif (input.equals(\"0\"))\\n        \t\tbreak;\\n        \tint sum = 0;\\n        \tfor (int i = 0; i < input.length(); i++)\\n        \t{\\n        \t\tString a = String.valueOf(input.charAt(i));\\n        \t\tsum += Integer.parseInt(a);\\n        \t}\\n        \tSystem.out.println(sum);\\n        \t\\n        }\\n    \t\\n\t}\\n\\n}", "target": "144", "substitutes": {"isr": ["aisrs", " isrc", "ISrt", "ISrs", " iser", "ssrc", " isrs", "aisr", "aisrar", "issrs", " israr", "israr", "ISr", "ssr", "isrt", "isrc", " isrt", "ssrt", "aiser", "isrs", "ISrc", "isser", "iser", "issr", "ssrs", "issrar"], "br": ["wr", "bsp", "ber", "hr", "ab", "bj", "kr", "bl", "ch", "BR", "Br", "obl", "mr", "rem", "fr", "eb", "tr", "buf", "dr", "bd", "bs", "cr", "gb", "db", "gr", "r", "bh", "brace", "yr", "bf", "bt", "bridge", "sr", "shr", "bre", "bp", "bm", "pr", "ger", "ctr", "bro", "bn"], "input": ["submit", "query", "in", "add", "list", "focus", "qa", "json", "human", "hello", "Input", "PUT", "ip", "up", "total", "check", "empty", "source", "csv", "script", "qi", "text", "form", "context", "format", "get", "this", "prefix", "str", "act", "current", "config", "search", "feed", "active", "print", "alpha", "pattern", "xml", "command", "shift", "init", "q", "buffer", "info", "output", "cmd", "raw", "att", "data", "request", "sample", "sql", "ix", "control", "history"], "sum": ["result", "add", "summary", "size", "total", "success", "union", "vol", "max", "cache", "gam", "um", " SUM", "cal", "prof", "cum", " summed", "mary", "doc", "med", "black", "mean", "sim", "must", "bot", "fac", "SI", "alph", "alpha", "post", "sat", "ass", "hash", "tail", "weight", "index", "sam", "tu", "hum", "zero", "dev", "loss", "sta", "acc", "num", "su", "sa", "count", "temp", "mem", "Sum", "average"], "i": ["yi", "bi", "multi", "si", "ti", "ai", "major", "ip", "it", "iu", "ie", "o", "zi", "xi", "k", "di", "pi", "x", "c", "ei", "my", "mi", "point", "ini", "ci", "y", "span", "sim", "j", "ma", "uri", "I", "ind", "q", "init", "me", "m", "index", "\u0438", "ii", "gi", "us", "ims", "is", "li", "z", "ui", "cli", "ji", "sql", "ix", "im", "ic", "phi", "u"], "a": ["ap", "an", "la", "ba", "ka", "da", "ea", "o", "l", "aaa", "b", "area", "sha", "A", "name", "ia", "ma", "j", "va", "alpha", "ac", "wa", "ha", "ata", "ga", "oa", "sta", "aa", "na", "pa", "z", "fa", "sa", "ca", "xa"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tPrintWriter pw = new PrintWriter(System.out);\\n\t\tString x=sc.next();\\n\t\tfor(int i=0;i<x.length();i++) {\\n\t\t\tx=x.replace(x.charAt(i), 'x');\\n\t\t}\\n\t\tpw.print(x);\\n\t\tpw.close();\\n\t}\\n\tstatic class Scanner {\\n\t\tStringTokenizer st;\\n\t\tBufferedReader br;\\n\t\tpublic Scanner(InputStream s) {\\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\\n\t\t}\\n\t\tpublic Scanner(String file) throws FileNotFoundException {\\n\t\t\tbr = new BufferedReader(new FileReader(file));\\n\t\t}\\n\t\tpublic String next() throws IOException {\\n\t\t\twhile (st == null || !st.hasMoreTokens())\\n\t\t\t\tst = new StringTokenizer(br.readLine());\\n\t\t\treturn st.nextToken();\\n\t\t}\\n\t\tpublic int nextInt() throws IOException {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n\t\tpublic long nextLong() throws IOException {\\n\t\t\treturn Long.parseLong(next());\\n\t\t}\\n\t\tpublic String nextLine() throws IOException {\\n\t\t\treturn br.readLine();\\n\t\t}\\n\t\tpublic double nextDouble() throws IOException {\\n\t\t\treturn Double.parseDouble(next());\\n\t\t}\\n\t\tpublic boolean ready() throws IOException {\\n\t\t\treturn br.ready();\\n\t\t}\\n\t}\\n}", "target": "122", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "c", "sub", "bc", "cc", "sys", "SC", "lc", "rc", "cv", "sch", "sec", "gc", "cl", "pb", "nc", "sq", "cs", "tc", "tch", "pc", "pl", "isc", "desc", "scl", "sv", "rs", "sp", "esc"], "pw": ["pcwt", "cpwa", "cpwt", "ppws", "ppsw", "ppwr", "opw", "opwr", "ppw", "ppwt", "opws", "pwt", " pwh", "pW", " pwa", "opsw", "pwr", "jpwh", "ppW", "psw", "pwh", "pws", "pcw", "ppwa", " pwr", "jpwr", " pwt", "pwa", "cpW", "cpw", " psw", "pcwh", "pcwr", " pws", "jpwt", "jpw", " pW"], "x": ["mx", "px", "w", "tx", "xe", "xx", "ax", "xf", "l", "xi", "xt", "xc", "fx", "xp", "c", "text", "form", "row", "act", "v", "ux", "y", "X", "ox", "xb", "f", "xs", "wx", "xxxx", "string", "xml", "php", "rx", "xa", "t", "hex", "xy", "full", "ex", "pl", "code", "txt", "input", "ix", "p", "rex", "lex"], "i": ["bi", "in", "ms", "multi", "si", "ti", "ai", "e", "ip", "iter", "it", "iu", "ie", "key", "o", "PI", "di", "pi", "qi", "ei", "my", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "io", "a", "I", "ind", "init", "me", "m", "ami", "ori", "index", "ki", "gi", "ii", "us", "ims", "eu", "is", "li", "ex", "hi", "ui", "client", "n", "cli", "ji", "inner", "ix", "p", "im", "ic", "phi", "u", "ri"], "st": ["irst", "bl", "ft", "std", "nd", "ste", "lt", "sts", "ost", "sb", "sw", "mt", "sm", "et", "stop", "fr", "sty", "first", "l", "tr", "dr", "const", "step", "th", "stri", "rt", "cr", "ust", "str", "lo", "r", "nt", "ST", "sth", "bt", "must", "start", "inst", "sn", "ut", "stage", "rest", "cl", "sl", "ss", "stable", "so", "storage", "se", "sta", "t", "ist", "St", "z", "stat", "ct", "sh", "sv", "rs", "sp", "est"], "br": ["ber", "bsp", "wr", "bal", "bl", "hr", "ba", "kr", "BR", "sb", "Br", "vr", "mr", "next", "bern", "fr", "tr", "b", "buf", "dr", "browser", "bd", "bs", "cr", "jp", "rel", "gr", "bg", "nr", "ptr", "str", "r", "bh", "bc", "or", "bt", "sp", "bridge", "lr", "nl", "shr", "bre", "bp", "rb", "bm", "pr", "ctr", "bro", "bn"], "s": ["ies", "ses", "ms", "ws", "sts", "ds", "w", "es", "b", "ins", "ns", " streams", "services", "p", "ts", "js", "ys", "ats", "its", "a", "h", "xs", "scripts", "gs", "ls", "abs", "ss", "files", "sl", "qs", "cs", "os", "t", "ps", "ings", "sv", "rs", "ids"], "file": ["fp", "filename", "source", "table", "l", "image", "b", "FILE", "ile", "out", "template", "format", "str", "File", "type", "line", "lock", "name", "resource", "f", "title", "le", "string", "document", "xml", "m", "files", "output", "url", "path", "t", "page", "link", "base", "tree", "txt", "model", "p"]}}
{"code": "import static java.lang.Math.ceil;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        String s = sc.nextLine();\\n//        int k = sc.nextInt();\\n//        int n = sc.nextInt();\\n//        int a = sc.nextInt();\\n//        int b = sc.nextInt();\\n//        int c = sc.nextInt();\\n//          int a1 = sc.nextInt();\\n//          int a2 = sc.nextInt();\\n//          int a3 = sc.nextInt();\\n//        int c = sc.nextInt(); \\n//        int r = sc.nextInt();\\n//        int x = sc.nextInt();\\n//        int s = sc.nextInt();\\n//        double n = sc.nextDouble(); \\n//        int r = sc.nextInt(); \\n//        String s = sc.next();\\n//        String t = sc.next();\\n//        int n = sc.nextInt();\\n//        int m = sc.nextInt();\\n//        char c = sc.next().charAt(0);\\n        sc.close();\\n        String[] array =  s.split(\"\");\\n        Arrays.sort(array); // \u6607\u9806\\n//        System.out.println(\"[0]: \"+array[0]);\\n//        System.out.println(\"[1]: \"+array[1]);\\n//        System.out.println(\"[2]: \"+array[2]);\\n//        System.out.println(\"[3]: \"+array[3]);\\n        if(array[0].equals(array[1]) && array[2].equals(array[3]) && !array[0].equals(array[3])){\\n            System.out.println(\"Yes\");\\n        }else{\\n            System.out.println(\"No\");\\n        }\\n//        a *= n;\\n//        if(a <= b){\\n//            System.out.println(a);\\n//        }else{\\n//            System.out.println(b);\\n//        }\\n//        System.out.println();\\n//        double k = (a+b)/2.0;\\n//        if(k == ceil(k)){\\n//            System.out.println((int)k);\\n//        }else{\\n//            System.out.println(\"IMPOSSIBLE\");\\n//        }\\n        \\n//        if(c-(a-b) >= 0 ){\\n//            System.out.println(c-(a-b));\\n//        }else{\\n//            System.out.println(0);\\n//        }\\n//        Integer array[] = {a+b,a-b,a*b};\\n//        Arrays.sort(array); // \u6607\u9806\\n//        Arrays.sort(array, Collections.reverseOrder()); // \u964d\u9806\\n//        System.out.println(array[0]);\\n//        if(a>=3200){\\n//            System.out.println(s);\\n//        }else{\\n//            System.out.println(\"red\");\\n//        }\\n//        String[] s_arr =  s.split(\"\");\\n//        String[] t_arr =  t.split(\"\");\\n//        int count=0;\\n//        for(int i = 0;i<s_arr.length;i++){\\n//            if(s_arr[i].equals(t_arr[i])){\\n//                count++;\\n//            }\\n//        }\\n//        System.out.println(count);\\n//        switch (s) {\\n//            case \"Sunny\":\\n//                System.out.println(\"Cloudy\");\\n//                break;\\n//            case \"Rainy\":\\n//                System.out.println(\"Sunny\");\\n//                break;\\n//            case \"Cloudy\":\\n//                System.out.println(\"Rainy\");\\n//                break;\\n//        }\\n//        String array[] = {\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"};\\n//        int count = 0;\\n//        for(int i = 1;i<array.length;i++){\\n//            if(s.equals(array[i])){\\n//                count += i;\\n//            }\\n//        }\\n//        if(n%2 == 0){\\n//            System.out.println(0.5000000000);\\n//        }else{\\n//            System.out.println(((n+1)/2)/n);\\n//        }\\n//        if(a<=b*2){\\n//            System.out.println(0);\\n//        }else{\\n//            System.out.println(a - 2*b);\\n//        }\\n//        if(a1 + a2 + a3 <= 21){\\n//            System.out.println(\"win\");\\n//        }else{\\n//            System.out.println(\"bust\");\\n//        }\\n//        Integer array[] = {a,b};\\n//        if(!Arrays.asList(array).contains(1)){\\n//            System.out.println(1);\\n//        }else if(!Arrays.asList(array).contains(2)){\\n//            System.out.println(2);\\n//        }else{\\n//            System.out.println(3);\\n//        }\\n//        if(k * 500 >= x){\\n//            System.out.println(\"Yes\");\\n//        }else{\\n//            System.out.println(\"No\");\\n//        }\\n//        char[] alphabet = \"abcdefghijklmnopqrstuvwxyz\".toCharArray();\\n//        int i = 0;\\n//        for(;;){\\n//            if(alphabet[i] == c){\\n//                break;\\n//            }\\n//            i ++;\\n//        }\\n//        System.out.println(alphabet[i+1]);\\n//        if(n == m){\\n//            System.out.println(\"Yes\");\\n//        }else{\\n//            System.out.println(\"No\");\\n//        }\\n//        int count = 0;\\n//        for(;;){\\n//            if(h<=0){\\n//                break;\\n//            }\\n//            h -= a;\\n//            count ++;\\n//        }\\n////        System.out.println(h);\\n//        System.out.println(count);\\n//        String[] arr =  s.split(\" \");\\n////        System.out.println(arr[0]);\\n//        System.out.println(arr[1]);\\n//        System.out.println(a);\\n//        System.out.println(b);\\n//        System.out.println(u);\\n//        if(arr[0].equals(u)){\\n//            a -= 1;\\n//            System.out.println(a+\" \"+b);\\n//        }else{\\n//            b -= 1;\\n//            System.out.println(a+\" \"+b);\\n//        }\\n//        List<Integer> list = Arrays.asList(a,b,c);\\n////        System.out.println(list);\\n//        List<Integer> list2 = new ArrayList<Integer>(new HashSet<>(list));\\n//        if(list2.size() == 2){\\n//            System.out.println(\"Yes\");\\n//        }else{\\n//            System.out.println(\"No\");\\n//        }\\n//        System.out.println(list2);\\n//        if(n >= 10){\\n//            System.out.println(r);\\n//        }else{\\n//            System.out.println(r + 100*(10-n));\\n//        }\\n//        if(n % 2 == 0){\\n//            n = (n/2);\\n//            System.out.println(n);\\n//        }else{\\n//            n = n/2 + 1;\\n//            System.out.println(n);\\n//        }\\n//        int sum = 0;\\n//        sum = n*(n-1)/2 + m*(m-1)/2;\\n//        System.out.println(sum);\\n//        String[] arr =  s.split(\"\");\\n//         System.out.println(\"arr[2]: \"+arr[2]);\\n//          System.out.println(\"arr[3]: \"+arr[3]);\\n//           System.out.println(\"arr[4]: \"+arr[4]);\\n//            System.out.println(\"arr[5]: \"+arr[5]);\\n//        if(arr[2].equals(arr[3]) && arr[4].equals(arr[5])){\\n//            System.out.println(\"Yes\");\\n//        }else{\\n//            System.out.println(\"No\");\\n//        }\\n//        System.out.println(z + \" \" + x + \" \" + y);\\n//        if(n.contains(\"7\")){\\n//            System.out.println(\"Yes\");\\n//        }else{\\n//            System.out.println(\"No\");\\n//        }\\n//        System.out.println(n);\\n//        if(s <= w){\\n//            System.out.println(Math.PI);\\n//        }else{\\n//            System.out.println(\"safe\");\\n//        }\\n//        System.out.println(s);\\n//        if(s.contains(\"RRR\")){\\n//            System.out.println(3);\\n//        }else if(s.contains(\"RR\")){\\n//            System.out.println(2); \\n//        }else if(s.contains(\"R\")){\\n//            System.out.println(1);\\n//        }else{\\n//             System.out.println(0);\\n//        }\\n//        String s = sc.nextLine();\\n//        String t = sc.next();\\n//        String[] arr =  s.split(\"\u3000\");\\n//        sc.close();\\n//        System.out.println(\"input: \"+ s);\\n//        System.out.println(\"k:\" + k);\\n//        System.out.println(\"a:\" + a);\\n//        System.out.println(\"b:\" + b);\\n//        String ans = \"NG\";\\n//        for(int x = a; x<=b; x++){\\n//            if(x%k == 0){\\n//                ans = \"OK\";\\n//            }\\n//        }\\n//        System.out.println(ans);\\n//        \\\\n//        System.out.println(\"arr[1]:\" + arr[1]);\\n//\\n//        if(s.equals(\"ABC\")){\\n//            System.out.println(\"ARC\");\\n//        }else{\\n//            System.out.println(\"ABC\");\\n//        }\\n//        String[] arr1 =  s.split(\"\");\\n//        String[] arr2 =  t.split(\"\");\\n////        List<String> list1 = Arrays.asList(s.split(\"\"));\\n//        List list1 = new LinkedList(Arrays.asList(s.split(\"\")));\\n////        List<String> list2 = Arrays.asList(t.split(\"\"));\\n//        List list2 = new LinkedList(Arrays.asList(t.split(\"\")));\\n////        int num = Integer.parseInt(arr[arr.length - 1]);\\n//        list2.remove(arr2.length - 1);\\n////        System.out.println(list1);\\n////        System.out.println(list2);\\n//         if(list1.toString().contentEquals(list2.toString())){\\n//             System.out.println(\"Yes\");\\n//         }else{\\n//             System.out.println(\"No\");\\n//         }\\n//        switch(num){\\n//            case 3:\\n//                System.out.println(\"bon\");\\n//                break;\\n//            case 0:\\n//            case 1:\\n//            case 6:\\n//            case 8:\\n//                System.out.println(\"pon\");\\n//                break;\\n//            default:\\n//                System.out.println(\"hon\");\\n//                break;\\n//        }\\n//        String[] array = str.split(\" \");\\n//        int sum = 0;\\n//        for(int i=0; i<array.length; i++) {\\n//            int num = Integer.parseInt(array[i]);\\n//            sum += num;\\n//        }\\n//        System.out.println(15-sum);\\n    }\\n}\\n", "target": "33", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "sm", "sk", "mc", "osc", "anc", "cr", "Sc", "c", "sub", "bc", "sys", "screen", "SC", "lc", "rc", "usc", "sch", "sec", "cl", "ss", "sl", "scan", "nc", "sq", "cs", "system", "pc", "ser", "capt", "isc", "desc", "scl", "soc", "syn", "sv", "sp", "esc"], "s": [" ls", "S", "e", "status", "csv", "es", "b", "text", "c", "i", "str", "lines", "r", "y", "line", "name", " ts", "h", "string", "sg", "fs", "m", "ss", " ss", "n", "p", "rs"]}}
{"code": "import java.util.*;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int k = sc.nextInt();\\n        int n = sc.nextInt();\\n        ArrayList<Integer> array = new ArrayList<>();\\n        for (int i = 0; i < n; i++) {\\n            array.add(sc.nextInt());\\n        }\\n        int max = 0;\\n        for (int i = 0; i < n - 1 ; i++) {\\n            if ((array.get(i + 1) - array.get(i)) > max){\\n                max = (array.get(i + 1) - array.get(i));\\n            }\\n        }\\n        int b = array.get(0) + (k - array.get(n - 1));\\n        max = max < b ? b : max;\\n        System.out.println(k - max);\\n    }\\n}", "target": "10", "substitutes": {"sc": ["ch", "sb", "sw", "cle", "asc", "mc", "osc", "ctrl", "anc", "sac", "cr", "Sc", "sci", "c", "inc", "bc", "cc", "sys", "fc", "ng", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "sq", "cs", "tc", "pc", "ctl", "dc", "ser", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "k": ["ka", "kl", "ke", "kr", "kn", "total", "w", "key", "o", "kid", "K", "l", "ko", "x", "c", "ks", "d", "g", "ik", "ek", "r", "v", "kt", "ku", "id", "ok", "j", "h", "f", "kk", "q", "kw", "m", "kj", "mk", "km", "ck", "tk", "t", "z", "dk", "p", "kh", "u"], "n": ["nb", "en", "size", "nn", "names", "non", "w", "network", "all", "o", "l", "np", "ns", "x", "c", "d", "un", "nr", "r", "nt", "v", "no", "on", "name", "j", "ren", "sn", "fn", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "p", "mn"], "array": ["order", "list", "at", "random", "all", "area", "window", "Array", "hash", "view", "function", "grid", "archive", "rays", "av", "expression", "var", "section", "au", "cache", "attribute", "table", "api", "save", "audio", "amount", "ray", "atomic", "search", "collection", "alpha", "index", "sort", "object", "raw", "one", "auto", "history", "arr", "vector", "record", "and", "alias", "element", "row", "memory", "library", "address", "analysis", "a", "number", "equality", "other", "sh", "map", "our", "entry", "integer", "now", "instance", "format", "trace", "ar", "range", "shape", "app", "stage", "answer", "actor", "storage", "data", "message", "angular", "angle", "ary", " Array"], "i": ["ies", "yi", "in", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "o", "chain", "zi", "xi", "di", "iti", "pi", "qi", "ei", "this", "mi", "point", "ity", "ini", "ci", "y", "sim", "err", "oi", "id", "j", "io", "iso", "uri", "iq", "I", "ind", "print", "q", "ij", "iy", "init", "me", "inx", "ori", "ami", "ki", "\u0438", "ii", "info", "gi", "us", "ims", "eu", "to", "is", "li", "base", "hi", "ui", "cli", "client", "ji", "ix", "im", "ic", "phi", "u", "ri"], "max": ["limit", "cp", "spread", "mx", "size", "mad", "total", "null", "last", "right", "tmp", "MAX", " MAX", "mr", "ax", "best", "box", "sum", "prime", "conf", "x", "out", "med", "window", "r", "end", "v", "high", "mod", "bar", "default", "range", "min", "ma", "mask", "h", "big", "top", "j", "gt", "length", "a", "q", "res", "can", "hash", "rest", "Max", "huge", "grow", "dev", "br", "to", "scale", "full", "base", "z", "bound", "t", "pr", "map", "auto", "p", "maximum"], "b": ["nb", "ba", "ab", "bb", "fb", "bu", "wb", "w", "eb", "l", "lb", "ob", "gb", "bs", "db", "out", "x", "c", "d", "g", "r", "v", "bf", "y", "cb", "j", "a", "h", "f", "m", "mb", "t", "br", "base", "z", "B", "rb", "p", "be", "u"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\t\t\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint x=Integer.parseInt(sc.next());\\n\t\tint y=Integer.parseInt(sc.next());\\n\t\twhile(x!=0 || y!=0){\\n\t\t\tif(x<y) System.out.println(x+\" \"+y);\\n\t\t\telse System.out.println(y+\" \"+x);\\n\t\t\tx=Integer.parseInt(sc.next());\\n\t\t\ty=Integer.parseInt(sc.next());\\n\t\t}\\n\\n\t}\\n\\n}", "target": "72", "substitutes": {}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        int D = sc.nextInt();\\n        int N = sc.nextInt();\\n        \\n        int powD = 1;\\n        for(int i = 0; i < D; i++){\\n            powD *= 100;\\n        }\\n        int ans = N * powD;\\n        if((ans == 100 && powD == 1) || (ans == 10000 && powD == 100) || (ans == 1000000 && powD == 10000)){\\n            System.out.println(ans + 1 * powD);\\n        }else{\\n            System.out.println(ans);\\n        }\\n        \\n    }\\n}\\n", "target": "245", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "c", "ctx", "inc", "bc", "cc", "sys", "cont", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "nc", "system", "cs", "tc", "sq", "ck", "pc", "ctl", "acc", "sa", "isc", "capt", "desc", "scl", "sv", "sp", "esc"], "D": ["DP", "S", "DS", "PD", "T", "DR", "DD", "FD", "ID", "DE", "DC", "P", "JD", "d", "AD", "V", "DM", "M", "C", "DO", "I", "Dir", "R", "DF", "DN", "L", "F", "Q", "DEV", "Ds", "Do", "DB", "DI", "DIR"], "N": ["NI", "S", "NA", "J", "T", "NH", "K", "H", "P", "A", "NT", "V", "M", "C", "Sn", "Ni", "Size", "NB", "I", "G", "TN", "CN", "R", "NR", "NN", "Ns", "NS", "L", "F", "Q", "n", "ND", "O", "SN", "AN"], "powD": ["powDF", "prixDL", "pwowD", "lpouchDE", "peovDN", "poyL", "lpowD", "powF", " powN", "powerDN", "poweN", "pivotF", "poweDN", " podoDs", "povDS", " poweF", "powerL", "powDN", "pollD", "ponentd", "pumpDE", "cpowF", "cpowB", "powerd", "podod", "pewD", "prixD", "powerF", "lpouchDS", "powerB", "poweD", "pollDN", "pouchDE", "podoD", "peovDS", "pivotD", " powDs", "pwowM", "lpowDS", "powC", " pwP", "peowerD", "powA", "cpoweB", "peowDS", "peovD", "ponentDE", "pewN", "powM", "peowerL", "pewC", "powDs", "pexpDS", " poweD", "povDN", "poyA", "powDL", " poweC", "pouchD", " podoM", "powDS", "pewL", "poweDs", "pouchDL", "powP", "powerA", " poweN", "powB", "pewA", "cpoweD", "povDL", "poyD", " powM", "poweC", "powN", "povD", "pexpDE", "pexpD", "pouchDS", "poweB", "pexpDL", "lpouchD", "poweM", " powC", "lpowDE", "cpowDN", "pwowDF", "cpoweF", " powd", "poweF", " powF", "powerC", "powerN", "peowL", "pewF", "pivotDN", "pumpD", "podoDs", "peowerd", "powDE", " podoDF", "pwD", "podoDF", "peowDN", "podoM", "ponentD", "pollDL", " pwDE", "pwDE", "lpouchDL", "cpowD", "pumpDS", " podoD", "pumpDL", "lpowDL", " pwd", "pwd", "pwP", "peovDL", "poyd", " powDE", "peowA", "ponentP", "powerD", "powL", "prixDN", "pewd", "poweDF", "peowd", " powP", "powd", " pwD", "peowDL", "pivotB", "prixDS", " powDF", "peowerA", "podoDE", "pollDS", "pwowDs", "podoP", "cpoweDN", "peowD"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "set", "gu", "ie", "iu", "b", "di", "pi", "qi", "x", "mi", "ini", "ci", "y", "id", "sim", "j", "io", "I", "ind", "q", "init", "m", "batch", "gi", "ii", "us", "t", "is", "li", "ex", "hi", "ui", "cli", "client", "ix", "im", "ic", "phi"], "ans": ["asks", "an", "uns", "ars", "anks", "ms", "ents", "ians", "results", "names", "yes", "s", "rans", "ds", "beans", "orts", "aos", "aps", "ann", "ons", "ns", "ins", "outs", "aus", "ones", "vals", "anas", "nas", "ks", "ces", "ran", "pan", "mn", "arts", "lines", "vs", "vers", "ats", "ras", "anes", "ates", "ants", "xs", "posts", "ANS", "can", "gs", "ls", "ads", "types", "lan", "cs", "os", "as", " spans", "is", "NS", "offs", "n", "amps", "ens", "rs", "AN", "ids", "eds"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic Main(int opt1, int opt2) {\\n\t\tMap<Integer, Integer> map = new HashMap<>();\\n\t\tmap.put(1, 1);\\n\t\tmap.put(2, 2);\\n\t\tmap.put(3, 3);\\n\t\tmap.remove(opt1);\\n\t\tmap.remove(opt2);\\n\t\tSystem.out.println(map.entrySet().iterator().next().getValue());\\n\\n\t}\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint opt1 = sc.nextInt();\\n\t\tint opt2 = sc.nextInt();\\n\t\tMain m = new Main(opt1, opt2);\\n\\n\t}\\n\t\\n}", "target": "236", "substitutes": {"opt1": [" opt3", "OptOne", "op01", "option6", "Opt3", "opt6", "optim1", " optOne", "optim01", "option1", "op1", "optOne", "prop01", " opt6", "Opt1", "option2", " opt01", "optionOne", "op2", "op0", "prop2", "Opt0", "option01", "op3", "optim3", "opt01", "optim6", " opt0", "opt0", "option3", "prop3", "opt3", "option0", "opOne", "prop1"], "opt2": ["alt6", " opt3", "alt2", "option6", "opt6", "opt4", "op02", "opTwo", "op4", "ptionTwo", "option1", "cmd02", "opt02", "op1", "ption3", "option2", " opt6", "cmd4", "alt3", "op2", " opt02", " optTwo", "alt1", "cmd2", "op3", "ption2", " opt4", "cmd1", "option3", "opt3", "ption02", "optTwo", "option4"], "map": ["ap", "mp", "query", "copy", "en", "add", "ms", "list", "claim", "complete", "collect", "size", "cp", "open", "dict", "apper", "com", "mt", "max", "sm", "set", "msg", "place", "mm", "block", "master", "pack", "table", "cap", "save", "ape", "row", "maps", "addr", "gr", "co", "load", "lock", "cont", "mg", "mod", "mask", "make", "where", "shape", "build", "age", "panel", "MAP", "print", "le", "bridge", "hash", "view", "comb", "pre", "bag", "use", "go", "mb", "down", "per", "con", "forge", "mem", "store", "man", "sh", "clear"], "sc": ["sb", "sw", "cle", "asc", "mc", "osc", "cr", "ec", "Sc", "sci", "c", "inc", "bc", "cc", "sys", "fc", "SC", "lc", "rc", "cv", "usc", "sch", "sec", "gc", "cl", "ss", "sl", "pb", "nc", "sq", "cs", "tc", "uc", "disc", "pc", "dc", "ctl", "psc", "acc", "isc", "scl", "sh", "sv", "sp", "esc"], "m": ["e", "mt", "w", "sm", "cm", "mc", "o", "l", "b", "c", "d", "g", "r", "v", "M", "rm", "j", "f", "h", "fm", "mu", "t", "gm", "z", "bm", "n", "p", "module"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n    public static void main(String args[]) throws Exception{\\n        BufferedReader stdR = new BufferedReader(new InputStreamReader(System.in));\\n        String[] s = stdR.readLine().split(\" \");\\n        int N = Integer.parseInt(s[0]);\\n        int A = Integer.parseInt(s[1]);\\n        int B = Integer.parseInt(s[2]);\\n        int num = 0;\\n        for(int i = 1 ; i <= N; i++) {\\n            String str = String.valueOf(i);\\n            int count = 0;\\n            for(int j = 0 ; j < str.length(); j++) {\\n                count += Character.digit(str.charAt(j), 10);\\n            }\\n            if(A <= count && count <= B) num+=i;\\n        }\\n        System.out.println(num);\\n    }\\n}\\n", "target": "212", "substitutes": {"stdR": ["stG", " stdReader", "standardG", "standardA", "stdA", "stdReader", "stR", " stdW", "standardReader", "standardW", "stdG", "statA", "statReader", " stdG", "statR", " stdA", "stW", "standardR", "stdW"], "s": ["ies", "ses", "ms", "parts", "S", "ws", "sts", "ds", "stats", "csv", "b", "ns", "ins", "bs", "details", "ts", "js", "g", "vs", "v", "ats", "y", "its", "eps", "xs", "q", "gs", "ashes", "ls", "fs", "aws", "ers", "ss", "sq", "qs", "cs", "os", "bis", "ims", "tests", "t", "ps", "n", "sv", "rs", "hs", "ids"], "N": ["NI", "S", "NA", "J", "D", "T", "NM", "NH", "No", "P", "NT", "V", "M", "C", "NUM", "X", "NO", "Ni", "Number", "I", "NB", "TN", "R", "NN", "NR", "Count", "Ns", "Num", "CNN", "NC", "NS", "L", "GN", "n", "SN", "AN"], "A": ["AY", "AB", "S", "NA", "Al", "BA", "K", "AC", "AGE", "AI", "As", "HA", "P", "RA", "V", "CA", "SA", "ACC", "AV", "M", "ACT", "C", "NUM", "Alpha", "LA", "AR", "a", "G", "alpha", "AA", "Ag", "TA", "AL", "IA", "Count", "AP", "Ant", "L", "Av", "Art", "AU", "AM", "Ax", "AN", "An"], "B": ["BG", "AB", "S", "BR", "J", "BB", "BU", "D", "RB", "BA", "T", "E", "b", "IB", "Y", "USB", "P", "Blue", "V", "M", "C", "BC", "WB", "NB", "G", "I", "BI", "R", "EB", "BL", "L", "Beta", "GB", "DB"], "num": ["result", "nb", "en", "add", "multi", "total", "success", "max", "um", "cal", "msg", "comment", "cum", "np", "tim", "sum", "counter", "cmp", "found", "out", "x", "draw", "nm", "no", "ident", "dec", "NUM", "conv", "number", "Number", "alph", "nom", "nu", "index", "mon", "sam", "zero", "info", "umber", "Num", "con", "net", "n", "mark", "mean", "nam"], "i": ["yi", "bi", "in", "multi", "si", "ti", "ai", "integer", "ip", "it", "iu", "ie", "o", "chain", "l", "zi", "xi", "di", "pi", "by", "qi", "x", "c", "ei", "mi", "point", "v", "ini", "ci", "y", "sim", "id", "f", "iq", "I", "ind", "inter", "q", "print", "ij", "me", "ami", "init", "index", "m", "ki", "ii", "gi", "t", "to", "is", "li", "z", "ui", "ji", "n", "ix", "p", "im", "ic", "phi", "u"], "str": ["cur", "obj", "ch", "it", "vol", "pt", "sol", "cat", "ocr", "status", "fr", "chain", "tr", "STR", "dr", "cr", "char", "text", "form", "coll", "gr", "comm", "g", "r", "nt", "sys", "name", "res", "print", "string", "st", "Str", "sl", "exp", "spec", "t", "data", "br", "z", "tree", "txt", "n", "pr", "div", "ctr", "enc", "sp", "arr"], "count": ["nb", "result", "add", "core", "size", "ch", "total", "integer", "check", "set", "cache", "cat", "max", "um", "test", "key", "comment", "now", "OUNT", "counter", "sum", "const", "found", "cmp", "p", "c", "amount", "common", "find", "nt", "C", "type", "id", "current", "error", "number", "length", "ind", "alpha", "child", "hold", "index", "cast", "cond", "call", "zero", "info", "Count", "ount", "code", "ct", "n", "temp", "match"], "j": ["jo", "bj", "oj", "ot", "obj", "jc", "json", "J", "jack", "jet", "pt", "key", "ax", "art", "jit", "dj", "jas", "k", "jj", "aj", "jl", "by", "jp", "uj", "og", "js", "g", "ion", "off", "no", "ja", "y", "ph", "jac", "q", "ij", "je", "kj", "ort", "att", "br", "z", "job", "jump", "other", "ji", "pr", "ix"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\n\\npublic class Main {\\n\tpublic static void main(String args[]) throws IOException{\\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\\n\t\tStringBuilder builder = new StringBuilder();\\n\t\tint i=1;\\n\t\twhile(true){\\n\t\t\tint data= Integer.parseInt(reader.readLine());\\n\t\t\tif(data==0)\\n\t\t\t\tbreak;\\n\t\t\t\\n\t\t\tbuilder.append(\"Case \").append(Integer.toString(i++)).append(\": \").append(Integer.toString(data)).append(\"\\n\");\\n\t\t}\\n\t\tSystem.out.print(builder);\\n\t}\\n}", "target": "97", "substitutes": {"reader": ["Reader", "open", "console", "anger", "read", "file", "master", "image", "dd", "row", "today", "this", "r", "iterator", "oder", "rl", "handler", "range", "parser", "operator", "runner", "document", "river", "rator", "buffer", "upper", "loader", "reading", "writer", "rot", "ipper", "radio", "input", "stream", "client", "redo", "inner", "er", "rar", "ro"], "builder": ["outer", "der", "language", "later", "iter", "BU", "success", "older", "Builder", "board", "empty", "now", "war", "b", "buf", "th", "built", "row", "trace", "ward", "or", "black", "bar", "operator", "build", "parser", "runner", "component", "word", "ql", "php", "command", "builders", "atter", "join", "buffer", "loader", "upper", "oster", "bean", "url", "writer", "web", "full", "base", "message", "temp", "inner", "building", "control"], "i": ["bi", "in", "multi", "si", "ai", "it", "chain", "xi", "b", "counter", "di", "pi", "x", "d", "mi", "v", "ini", "y", "sim", "id", "j", "f", "a", "uri", "I", "m", "ii", "info", "t", "is", "li", "hi", "ui", "cli", "n", "ix", "p", "ic", "phi", "u"], "data": ["result", "size", "da", "missing", "total", "json", "success", "none", "block", "DATA", "group", "step", "di", "family", "area", "dd", "row", "d", "rel", "window", "no", "what", "padding", "id", "dat", "date", "done", "ta", "ma", "number", "extra", "length", "value", "good", "device", "ata", "mu", "batch", "dev", "lan", "zero", "ne", "raw", "valid", "to", "li", "div", "sample", "sequence", "dec"]}}
{"code": "import java.io.FileInputStream;\\nimport java.io.FileNotFoundException;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.InputMismatchException;\\nimport java.util.List;\\n\\npublic class Main {\\n    InputStream is;\\n\\n    int __t__ = 1;\\n    int __f__ = 0;\\n    int __FILE_DEBUG_FLAG__ = __f__;\\n    String __DEBUG_FILE_NAME__ = \"src/E2\";\\n\\n    FastScanner in;\\n    PrintWriter out;\\n\\n    public void solve() {\\n        int n = in.nextInt(), q = in.nextInt();\\n        String s = in.next();\\n        int[] cnt = new int[n+1];\\n        for (int i = 0; i < n - 1; i++) {\\n            if (s.substring(i, i + 2).equals(\"AC\")) {\\n                cnt[i+2]++;\\n            }\\n        }\\n        for (int i = 0; i < n; i++) {\\n            cnt[i+1] += cnt[i];\\n        }\\n\\n        for (int i = 0; i < q; i++) {\\n            int l = in.nextInt(), r = in.nextInt();\\n            System.out.println(cnt[r] - cnt[l]);\\n        }\\n    }\\n\\n    public void run() {\\n        if (__FILE_DEBUG_FLAG__ == __t__) {\\n            try {\\n                is = new FileInputStream(__DEBUG_FILE_NAME__);\\n            } catch (FileNotFoundException e) {\\n                // TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f catch \u30d6\u30ed\u30c3\u30af\\n                e.printStackTrace();\\n            }\\n            System.out.println(\"FILE_INPUT!\");\\n        } else {\\n            is = System.in;\\n        }\\n        in = new FastScanner(is);\\n        out = new PrintWriter(System.out);\\n\\n        solve();\\n    }\\n\\n    public static void main(final String[] args) {\\n        new Main().run();\\n    }\\n\\n    class FastScanner {\\n        private InputStream stream;\\n        private byte[] buf = new byte[1024];\\n        private int curChar;\\n        private int numChars;\\n\\n        public FastScanner(InputStream stream) {\\n            this.stream = stream;\\n            // stream = new FileInputStream(new File(\"dec.in\"));\\n\\n        }\\n\\n        int read() {\\n            if (numChars == -1)\\n                throw new InputMismatchException();\\n            if (curChar >= numChars) {\\n                curChar = 0;\\n                try {\\n                    numChars = stream.read(buf);\\n                } catch (IOException e) {\\n                    throw new InputMismatchException();\\n                }\\n                if (numChars <= 0)\\n                    return -1;\\n            }\\n            return buf[curChar++];\\n        }\\n\\n        boolean isSpaceChar(int c) {\\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\\n        }\\n\\n        boolean isEndline(int c) {\\n            return c == '\\n' || c == '\\r' || c == -1;\\n        }\\n\\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n        int[] nextIntArray(int n) {\\n            int[] array = new int[n];\\n            for (int i = 0; i < n; i++)\\n                array[i] = nextInt();\\n\\n            return array;\\n        }\\n\\n        int[][] nextIntMap(int n, int m) {\\n            int[][] map = new int[n][m];\\n            for (int i = 0; i < n; i++) {\\n                map[i] = in.nextIntArray(m);\\n            }\\n            return map;\\n        }\\n\\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n\\n        long[] nextLongArray(int n) {\\n            long[] array = new long[n];\\n            for (int i = 0; i < n; i++)\\n                array[i] = nextLong();\\n\\n            return array;\\n        }\\n\\n        long[][] nextLongMap(int n, int m) {\\n            long[][] map = new long[n][m];\\n            for (int i = 0; i < n; i++) {\\n                map[i] = in.nextLongArray(m);\\n            }\\n            return map;\\n        }\\n\\n        double nextDouble() {\\n            return Double.parseDouble(next());\\n        }\\n\\n        double[] nextDoubleArray(int n) {\\n            double[] array = new double[n];\\n            for (int i = 0; i < n; i++)\\n                array[i] = nextDouble();\\n\\n            return array;\\n        }\\n\\n        double[][] nextDoubleMap(int n, int m) {\\n            double[][] map = new double[n][m];\\n            for (int i = 0; i < n; i++) {\\n                map[i] = in.nextDoubleArray(m);\\n            }\\n            return map;\\n        }\\n\\n        String next() {\\n            int c = read();\\n            while (isSpaceChar(c))\\n                c = read();\\n            StringBuilder res = new StringBuilder();\\n            do {\\n                res.appendCodePoint(c);\\n                c = read();\\n            } while (!isSpaceChar(c));\\n            return res.toString();\\n        }\\n\\n        String[] nextStringArray(int n) {\\n            String[] array = new String[n];\\n            for (int i = 0; i < n; i++)\\n                array[i] = next();\\n\\n            return array;\\n        }\\n\\n        String nextLine() {\\n            int c = read();\\n            while (isEndline(c))\\n                c = read();\\n            StringBuilder res = new StringBuilder();\\n            do {\\n                res.appendCodePoint(c);\\n                c = read();\\n            } while (!isEndline(c));\\n            return res.toString();\\n        }\\n    }\\n}\\n", "target": "52", "substitutes": {"is": ["ms", "si", "ib", "ip", "ir", "ais", "re", "ism", "es", "ins", "ios", "iss", "bs", "isf", "ris", "mi", "sys", "im", "err", "Is", "isi", "its", "res", "IS", "fs", "has", "cs", "us", "os", "bis", "se", "as", "sis", "ist", "isin", "ois", "iris", "isa", "isc", "rs", "ic", "ri"], "__t__": [" __fctr", "__t_______", " __n___", " __n__", "__s__", "__c___", "__c_______", "__fctr", "__c__", "__tctr", "__s___", " __f___", "__T__", " __tctr", "__sctr", "__ta__", " __t_______", "__T_______", "__n___", "__n__", " __t___", "__T___", " __n_______", "__f___", "__n_______", "__tactr", "__ta___", "__t___"], "__f__": [" __f_____", "__w___", "__w______", " __t______", "__q__", "__q___", " __f___", "__w__", "__q_____", "__n___", "__t______", " __t_____", "__n__", " __t___", "__f______", "__n_____", "__w_____", "__q______", "__f___", "__f_____", "__t_____", " __f______", "__t___"], "__FILE_DEBUG_FLAG__": ["__FILE_DEBUG_Flag__", "__FILE_DEBUG_FLAG____", "__FILE_DEBUG_ID____", "__FILE_DEBUG_FILE_______", "__FILE_DEBUGINGFILE___", "__FILE_DEBUGINGFLAG____", "__FILE_DEBUGINGID_______", "__FILE_DEBUG_FILE___", "__FILE_DEBUG_Flag____", "__FILE_DEBUG_AG____", "__FILE_DEBUG_FILE__", "__FILE_DEBUG_TAG____", "__FILE_DEBUGINGFILE__", "__FILE_DEBUG_AG___", "__FILE_DEBUG_TAG__", "__FILE_DEBUGINGID__", "__FILE_DEBUGINGFLAG__", "__FILE_DEBUG_AG__", "__FILE_DEBUG_Flag___", "__FILE_DEBUGINGFLAG___", "__FILE_DEBUGINGFLAG_______", "__FILE_DEBUG_FLAG___", "__FILE_DEBUG_ID___", "__FILE_DEBUGINGID___", "__FILE_DEBUG_TAG___", "__FILE_DEBUGINGID____", "__FILE_DEBUG_ID_______", "__FILE_DEBUG_ID__", "__FILE_DEBUGINGFILE____", "__FILE_DEBUG_FLAG_______", "__FILE_DEBUG_TAG_______", "__FILE_DEBUG_FILE____"], "__DEBUG_FILE_NAME__": ["__DEBUG_FILE_Name__", "__DEBUG_FILE__Name___", "__DEBUG_FILE_FILE____", "__DEBUG_FILE_SIZE___", "__DEBUG_FILE_PATH__", "__DEBUG_FILENAMEPATH____", "__DEBUG_FILE_SIZE__", "__DEBUG_FILE_FILE___", "__DEBUG_FILE__Name__", "__DEBUG_FILE_NAME____", "__DEBUG_FILE_NAME___", "__DEBUG_FILE_PATH____", "__DEBUG_FILE_PATH___", "__DEBUG_FILE_SIZE_", "__DEBUG_FILENAMEPATH__", "__DEBUG_FILE__NAME___", "__DEBUG_FILENAMENAME____", "__DEBUG_FILE_FILE__", "__DEBUG_FILENAMEPATH_", "__DEBUG_FILENAMEPATH___", "__DEBUG_FILE__NAME_", "__DEBUG_FILENAMENAME__", "__DEBUG_FILE_Name___", "__DEBUG_FILE__Name_", "__DEBUG_FILE_SIZE____", "__DEBUG_FILE__NAME__", "__DEBUG_FILE_PATH_", "__DEBUG_FILENAMENAME_", "__DEBUG_FILE_NAME_", "__DEBUG_FILE_Name_", "__DEBUG_FILE_FILE_", "__DEBUG_FILENAMENAME___"], "in": [" din", "add", "at", "In", "iter", "it", "ai", " IN", "local", "din", "file", "all", "rin", "mm", "sum", "ins", "bin", "ad", "doc", "form", "get", "inc", "sin", "mi", "end", "conn", "ini", "on", "ind", "IN", "init", "m", "reader", "ssl", "info", "con", "raw", "gin", "isin", "vin", "serv", "input", "inn", "inf", "inner", "im", "ic", "cin"], "out": ["report", "list", "at", "ch", "e", "null", "console", "set", "w", "msg", "status", "o", "Out", "println", "nt", "v", "sys", "screen", "err", "j", "io", "res", "error", "gt", "print", "log", "write", "OUT", "ln", "output", "os", "writer", "to", "t", "dot", "exit", "ex", "p", "outs"], "n": ["nb", "an", "en", "nn", "network", "all", "o", "np", "k", "ns", "x", "c", "d", "un", "nm", "nt", "no", "v", "ng", "name", "j", "sn", "nu", "m", "nl", " N", "nc", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "gn", "p", "mn"], "q": ["query", "qt", "dq", "qq", "quit", "ch", "qa", "it", "quer", "qual", "k", "qi", "qv", "ue", "v", "j", "f", "iq", "m", "nu", "quant", "sq", "qs", "t", "z", "Q", "queue", "len", "p", "que", "u", "qu"], "s": ["S", "ws", "sb", "w", "source", "o", "b", "strings", "c", "ts", "js", "str", "v", "y", "j", "h", "string", "ls", "m", "ss", "sq", "qs", "less", "os", "t", "ps", "txt", "sql", "p", "sv", "rs"], "cnt": ["mrt", "mct", "Cnt", "ctct", "lctr", " cnc", "ctNT", "csnt", "mnt", "Cnc", "cnd", "cNT", "lcct", "cct", "Cot", " CNT", "mNT", "ctnt", " crt", "Crt", " cot", "Cpt", " ctr", "cnc", "csnc", "crt", "cpt", " Cot", "csrt", " cpt", "ctnc", "csNT", " cnd", " cct", "lcnt", "lcNT", "ctnd", "ctpt", " Cnt", "Cnd", " Cnd", "cot", "Ctr", " cNT", "Cct", "ctr", "CNT"], "i": ["multi", "si", "iii", "ip", "chain", "zi", "di", "point", "ini", "err", "me", "iy", "info", "hi", "p", "phi", "it", "status", "o", "qi", "y", "sim", "uri", "init", "index", "asi", "ii", "gi", "us", "to", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "key", "ei", "this", "g", "j", "io", "ni", "I", "ind", "ij", "li", "ex", "ui", "ger", "ix", "ti", "ai", "umi", "xi", "pi", "mi", "v", "ity", "ci", "oi", "id", "iq", "ki", "\u0438", "ims", "fi", "im", "u"], "l": ["lt", "e", "ll", "o", "lu", "b", "ld", "x", "el", "c", "d", "lp", "left", "tl", "lo", "ly", "v", "rl", "j", "h", "lc", "le", "ls", "lr", "m", "sl", "il", "ln", "t", "li", "L", "z", "pl", "p", "u"], "r": ["e", "ri", "w", "vr", "mr", "o", "re", "fr", "b", "rd", "dr", "rt", "c", "d", "v", "ar", "rl", "res", "f", "h", "lc", "rf", "R", "m", "lr", "sr", "rec", "rr", "t", "rb", "p", "er", "rs", "rar", "ru", "u", "ro"]}}
{"code": "\\nimport java.math.BigDecimal;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner s = new Scanner(System.in);\\n        int w = s.nextInt();\\n        int h = s.nextInt();\\n        int x = s.nextInt();\\n        int y = s.nextInt();\\n        BigDecimal b = (new BigDecimal(w).multiply(new BigDecimal(h))).divide(new BigDecimal(2),6,BigDecimal.ROUND_HALF_UP);\\n        System.out.println(b.toPlainString()+\" \"+((x+x==w&&y+y==h) ? \"1\":\"0\"));\\n    }\\n}\\n", "target": "182", "substitutes": {"s": ["ses", "ms", "Ws", "S", "pers", "sts", "sb", "utils", "sw", "ds", "sol", "stats", "es", "ns", "ins", "rs", "conf", "ts", "js", "comm", "g", "sys", "ats", "j", "conv", "gs", "south", "ls", "http", "ers", "aws", "sam", "ss", "sl", "sq", "qs", "cs", "os", "less", "se", "as", "ps", "is", "sa", "sv", "fs", "hs"], "w": ["wr", "eng", "wo", "ws", "nw", "sw", "wb", "wp", "fg", "wt", "ww", "d", "window", "work", "wy", "r", "ew", "v", "words", "W", "wh", "win", "wx", "word", "kw", "wa", "aw", "fw", "rw", "wl", "hw", "wal", "iw", "width", "n", "wn", "wid", "wd", "wi"], "h": ["oh", "hr", "ch", "ah", "kh", "l", "zh", "k", "hal", "th", "H", "he", "c", "hm", "bh", "hd", "v", "high", "hl", "ht", "height", "hh", "wh", "ph", "rh", "m", "her", "ha", "hw", "hz", "hi", "hei", "sh", "ih", "p", "hs", "history", "phi"], "x": ["dx", "px", "ch", "e", "tx", "lat", "xd", "xf", "l", "xi", "xt", "ww", "xc", "el", "xp", "i", "d", "g", "r", "ux", "X", "ox", "on", "f", "wx", "xs", "wh", "inx", "rx", "m", "xa", "t", "xy", "z", "ex", "width", "n", "ix", "p", "wd"], "y": ["yi", "ies", "ay", "sy", "ot", "ch", "e", "ye", "hot", "ey", "o", "yl", "l", "Y", "by", "i", "c", "ys", "ly", "cy", "my", "yr", "v", "ty", "j", "uy", "vy", "py", "ery", "yt", "ry", "iy", "oy", "ny", "ym", "t", "xy", "z", "n", "yy", "p", "fy"], "b": ["nb", "bi", "ba", "be", "bb", "fb", "ib", "sb", "eb", "lb", "bs", "ob", "gb", "db", "i", "c", "bg", "r", "bh", "bf", "v", "bt", "xb", "cb", "reb", "j", "f", "a", "emb", "bp", "base", "B", "rb", "p"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tint n = Integer.parseInt(br.readLine());\\n\t\tString[] strs = br.readLine().split(\" \");\\n\t\tint[] inputData = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tinputData[i] = Integer.parseInt(strs[i]);\\n\t\t}\\n\t\tint swapCnt = bubbleSort(inputData, n);\\n\t\tprintArray(inputData);\\n\t\tSystem.out.println(swapCnt);\\n\\n\t}\\n\\n\tpublic static int bubbleSort(int[] A, int N) {\\n\t\tint swapCnt = 0;\\n\t\tboolean flag = true;\\n\t\twhile (flag) {\\n\t\t\tflag = false;\\n\t\t\tfor (int i = N - 1; i > 0; i--) {\\n\t\t\t\tif (A[i] < A[i - 1] ) {\\n\t\t\t\t\tint temp = A[i];\\n\t\t\t\t\tA[i] = A[i - 1];\\n\t\t\t\t\tA[i - 1] = temp;\\n\t\t\t\t\tswapCnt++;\\n\t\t\t\t\tflag = true;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\treturn swapCnt;\\n\t}\\n\\n\tpublic static void printArray(int[] target) {\\n\t\tStringBuilder sb = new StringBuilder();\\n\t\tfor (int i = 0; i < target.length; i++) {\\n\t\t\tsb.append(target[i]);\\n\t\t\tif (i < target.length - 1) {\\n\t\t\t\tsb.append(\" \");\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(sb.toString());\\n\t}\\n}", "target": "170", "substitutes": {"br": ["wr", "ber", "hr", "bl", "bj", "kr", "ch", "BR", "Br", "vr", "mr", "rem", "fr", "tr", "b", "buf", "dr", "browser", "bd", "bs", "cr", "db", "rel", "bg", "nr", "gr", "r", "bh", "bc", "yr", "bt", "cb", "bridge", "lr", "shr", "bp", "rb", "repl", "bm", "ger", "pr", "ctr", "be", "bro"], "n": ["nb", "en", "size", "nn", "total", "names", "w", "network", "all", "o", "l", "np", "k", "ns", "pi", "conf", "c", "d", "un", "r", "nt", "no", "v", "nm", "ng", "on", "name", "j", "number", "sn", "length", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "count", "len", "p", "mn"], "strs": ["STRls", "STRs", "brs", " strls", "arrls", "brls", "inputts", "brts", "arrs", "arrrs", "Strrs", "strls", "Strs", "strrs", "STRrs", "inputs", "Strls", "inputls", " strts", "strts"], "inputData": ["currentSet", "activeSet", "parseDat", "inputdata", "InputDat", "jsonDat", "outputDat", "controlData", " inputdata", "parseDATA", "InputList", "inputSet", "inputList", "controlList", "initialData", "activeDat", " inputDATA", "currentDATA", " inputDat", "activedata", "InputData", "InputDATA", "parseList", "inputDATA", "initialDat", "initialdata", " inputSet", "controlDat", "inputDat", "outputDATA", "currentdata", "jsonData", "activeDATA", "initialDATA", "jsonDATA", "controlDATA", "currentData", "parseData", "activeData", "jsondata", "outputData"], "i": ["multi", "list", "si", "ip", "set", "chain", "l", "zi", "di", "c", "my", "point", "ini", "load", "current", "iy", "me", "info", "exp", "used", "hi", "p", "phi", "it", "ie", "status", "o", "qi", "x", "y", "sim", "uri", "q", "init", "ami", "index", "ori", "asi", "ii", "gi", "us", "cli", "ji", "inner", "ic", "history", "ri", "fire", "bi", "iter", "iu", "ei", "g", "j", "io", "a", "ni", "I", "ind", "remote", "ij", "mu", "is", "li", "ui", "client", "ix", "yi", "ti", "ai", "e", "xi", "pi", "mi", "v", "ci", "id", "f", "php", "m", "ki", "\u0438", "batch", "ims", "fi", "im", "u"], "swapCnt": ["swapCtx", "swipRnt", "swapBCount", "swapCont", "swapPNT", "swapRnt", "swapCoNT", "swapACnt", "swipCnt", "swapWCtn", "swapNnt", "swapKct", "swapPCount", "swrapACnz", "swrapCtl", "swipRount", "swrapCNT", "swapCpt", "swipRst", "swapCount", "swrapPount", "swrapPtl", "swapCtl", "swrapCtn", "swapCountnt", "swapACtn", "swapCountount", "swapWCnt", "swapCnz", "swopCountNT", "swapCNT", "swapPpt", "swapWCNT", "swapPount", "swapPnt", "swrapCCount", "swapCountCount", "swapACnz", "swipCpt", "swrapCount", "swapCtn", "swrapACtn", "swipRNT", "swrapPnt", "swopCCount", "swapCct", "swapBnt", "swapRount", "swapPct", "swapPtl", "swipCst", "swopCtx", "swapCounttl", "swapPst", "swopCNT", "swapCst", "swapRst", "swrapACNT", "swapRNT", "swapNount", "swapCotx", "swopCnt", "swipCount", "swapCCount", "swrapCnz", "swapBount", "swapCounttx", "swipCNT", "swopCounttx", "swrapACnt", "swipCct", "swrapCnt", "swapKnt", "swrapPCount", "swopCountCount", "swapCountNT", "swapNNT", "swapCoCount", "swopCountnt", "swapWCnz", "swapNst", "swapACNT", "swapBtl", "swapKpt", "swapKNT"], "A": ["AB", "S", "At", "NA", "AT", "D", "T", "AF", "mA", "E", "EA", "AC", "JA", "H", "Y", "As", "ATA", "P", "HA", "Ar", "CA", "V", "SA", "ACC", "Array", "M", "C", "ACT", "X", "AV", "Alpha", "LA", "AR", "a", "G", "I", "AA", "What", "R", "TA", "ACE", "IA", "GA", "Address", "The", "AP", "L", "B", "AU", "AM", "All", "API", "Ax", "ARC", "An"], "N": ["NP", "NI", "S", "NA", "J", "D", "NV", "T", "NM", "NH", "K", "E", "No", "Z", "P", "V", "NT", "M", "C", "NO", "Ni", "Size", "NB", "I", "G", "Node", "R", "NL", "NN", "NR", "Ns", "Num", "NS", "L", "B", "MN", "NC"], "flag": ["field", "imp", "Flag", "bug", "bool", "stay", " sync", "bit", "prop", "list", "sync", "loop", "true", "level", "set", "flags", "status", "lv", " Flag", "func", "group", "run", "state", "ld", "bang", "enable", "tag", "league", "char", " log", "ground", "fail", "lock", "load", "id", " flagged", "ind", "train", "FLAG", "lag", "hold", "stage", "cloud", "cond", "log", "command", "call", "alt", "cmd", "continue", " bool", "link", "action", "count", "fire", "store", "tail", "button", "wait", "event"], "temp": ["porary", "result", " tmp", "iter", "condition", "null", "perm", "tmp", "emp", "test", "term", "cum", "mm", "variable", "tr", "cap", "tim", "texture", "tem", "template", "unit", "ptr", "deg", "cell", "fac", "current", "Temp", "tm", "pre", "fake", "buffer", "alt", "tc", "t", " Temp", "acc", "txt", "mem", "wait", "stop"], "target": ["result", "list", "trap", "iter", "wrong", "total", "null", "success", "src", "tmp", "true", "test", "T", "next", "source", "all", "term", "table", "tr", "expected", "arg", "Target", "arget", "template", "tif", "this", "window", "internal", "v", "primary", "type", "range", "default", "top", "gt", "inter", "string", "pattern", "secure", "index", "subject", "delete", "batch", "buffer", "secondary", "replace", "params", "cmd", "valid", "t", "data", "link", "array", "base", "input", "dest", "ARGET", "blank", "match", "history", "vector"], "sb": ["nb", "bsp", "bj", "si", "bb", "ib", "fb", "sf", "zb", "ub", "wb", "erb", "eb", "orb", "ctrl", "lb", "b", "buf", "gob", "bs", "gb", "ob", "lp", "bg", "kb", "bh", "bf", "bt", "SB", "xb", "cb", "rob", "sg", "shell", "obb", "gc", "pb", "sq", "ssh", "bp", "rb", "sa", "stab", "sv", "sp"]}}
{"code": "import java.util.*;\\nimport java.lang.*;\\nimport java.io.*;\\n\\npublic class Main{\\npublic static void main (String[] args){\\n\tScanner sc = new Scanner(System.in);\\n\tint n = sc.nextInt();\\n\tint k = sc.nextInt();\\n\tString s = sc.next();\\n\t\\n\tfor(int i = 0; i < n; i++){\\n\t\tif(i != k-1){\\n\t\t\tSystem.out.printf(s.substring(i,i+1));\\n\t\t}else{\\n\t\t\tSystem.out.printf(s.substring(i,i+1).toLowerCase());\\n\t\t}\\n\t}\\n}\\n}\\n", "target": "71", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "sci", "c", "ctx", "cons", "inc", "bc", "cc", "sys", "fc", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "uc", "nc", "sq", "cs", "tc", "pc", "ctl", "dc", "isc", "capt", "syn", "scl", "sh", "desc", "sv", "sp", "esc"], "n": ["nb", "an", "en", "ot", "nn", "total", "names", "non", "network", "o", "l", "np", "ns", "x", "c", "d", "un", "nt", "v", "nm", "ng", "name", "sn", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "num", "net", "N", "mn"], "k": ["ka", "kl", "ke", "kr", "kn", "ch", "wk", "w", "sk", "key", "kid", "K", "l", "ko", "ks", "g", "ik", "ek", "v", "kt", "ku", "j", "f", "q", "kk", "kw", "m", "mk", "kj", "ki", "km", "ck", "tk", "t", "z", "dk", "unk", "p", "kh"], "s": ["ms", "S", "ws", "sts", "sf", "sb", "source", "csv", "gets", "l", "b", "strings", "bs", "ts", "js", "str", "r", "v", "sys", "ats", "its", "h", "gs", "string", "ls", "log", "ss", "sl", "abs", "sq", "so", "less", "raw", "t", "ps", "is", "full", "sample", "sv", "rs", "hs", "sp"], "i": ["yi", "bi", "in", "ish", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "my", "mi", "ini", "ci", "y", "sim", "oi", "j", "uri", "iq", "ni", "I", "ind", "q", "ij", "init", "ami", "m", "index", "ori", "batch", "ii", "gi", "us", "ims", "ski", "to", "is", "li", "hi", "ui", "cli", "ji", "ix", "sequence", "im", "ic", "phi", "ri"]}}
{"code": "import java.util.Arrays;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\t\t    Scanner sc = new Scanner(System.in);\\n\t\t\t    String s = sc.next();\\n\t\t\t    List<String> week = Arrays.asList(\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\");\\n\t\t\t    System.out.println(7 - week.indexOf(s));\\n\t\t\t    sc.close();\\n\t\t\t  }\\n\\n\t\t\t}\\n", "target": "136", "substitutes": {}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner scan = new Scanner(System.in);\\n        int a = scan.nextInt();\\n        int b = scan.nextInt();\\n        int c = scan.nextInt();\\n        int x = scan.nextInt();\\n        int count = 0;\\n        if(x%50!=0)\\n        {\\n            System.out.println(0);\\n            return;\\n        }\\n        \\n        for(int i=0;i<=a;i++)\\n        {\\n            for(int j=0;j<=b;j++)\\n            {\\n                for(int k=0;k<=c;k++)\\n                {\\n                    if(500*i+100*j+50*k==x)\\n                    {\\n                        count++;\\n                    }\\n                }\\n            }\\n        }\\n        System.out.println(count);\\n    }\\n}", "target": "127", "substitutes": {"scan": ["an", "query", "in", "report", " Scan", "scroll", "list", "ch", "nn", "sync", "pass", "check", "cat", "read", "gen", "send", "ann", "clean", "run", "see", "save", "char", "row", "out", "sc", "get", "cgi", "parse", "sin", "ner", "r", "find", "v", "sys", "proc", "skip", "conn", "sim", "search", "can", "reach", "log", "gate", "san", "gc", "system", "info", "se", "ser", "na", "util", "n", "store", "sur", "sv", "Scan", " scanner"], "a": ["an", "la", "ba", "ab", "da", "ea", "at", "ai", "au", "o", "aj", "area", "am", "A", "act", "ar", "ia", "ta", "ma", "admin", "ao", "va", "alpha", "ac", "ae", "ach", "ga", "oa", "aa", "sta", "as", "sa", "ca"], "b": ["nb", "bi", "ba", "bl", "ab", "bb", "fb", "ib", "BB", "sb", "wb", "eb", "bs", "gb", "ob", "db", "by", "bc", "bf", "y", "bot", "cb", "back", "ble", "mb", "bis", "br", "B", "rb", "n", "be"], "c": ["cp", "ch", "com", "cm", "mc", "cd", "ec", "cr", "ctx", "d", "bc", "fc", "co", "C", "ci", "cc", "cb", "lc", "ac", "cs", "tc", "cf", "etc", "con", "dc", "cn", "ce", "city", "n", "ca", "ct", "cu", "unc", "u", "cor"], "x": ["dx", "px", "w", "tx", "xe", "xx", "o", "ax", "xf", "l", "xi", "xt", "xc", "fx", "xp", "g", "r", "v", "X", "y", "ox", "f", "xs", "wx", "length", "rx", "index", "xa", "t", "xy", "z", "ex", "width", "n", "ix", "p"], "count": ["nb", "result", "report", "add", "core", "size", "list", "summary", "total", "quiet", "check", "max", "cache", "test", "status", "all", "counter", "sum", "found", "conf", "amount", "coll", "frequency", "flag", "trace", "find", "nt", "cont", "must", "current", "search", "number", "length", "ind", "hold", "index", "batch", "call", "Count", "ount", "z", "num", "code", "ct", "n", "ctr"], "i": ["bi", "in", "multi", "si", "ti", "ai", "ip", "it", "iu", "ir", "zi", "xi", "di", "pi", "qi", "ei", "this", "mi", "ini", "ci", "sim", "ret", "ia", "iq", "ind", "ij", "ql", "ami", "init", "iy", "index", "ori", "ki", "asi", "ii", "gi", "ims", "is", "li", "ui", "ix", "im", "ic", "ani", "phi", "u", "ri"], "j": ["jo", "bi", "oj", "bj", "obj", "jc", "json", "jack", "J", "let", "pt", "fr", "kid", "jit", "dj", "jj", "jas", "aj", "jl", "bs", "bo", "el", "jp", "son", "uj", "js", "g", "ja", "y", "err", "ju", "jac", "ij", "q", "je", "kj", "ble", "ne", "br", "ody", "to", "z", "job", "other", "jump", "ji", "pr", "n"], "k": ["ka", "kl", "kr", "ke", "kn", "wk", "kind", "ark", "sk", "key", "kg", "kid", "kil", "kin", "ko", "kick", "isk", "ik", "kat", "ek", "kar", "kt", "ask", "ku", "ak", "ph", "ack", "kw", "uk", "ac", "q", "kk", "kj", "mk", "ki", "km", "ck", "tk", "unk", "ijk", "kh"]}}
{"code": "import java.util.ArrayDeque;\\nimport java.util.HashMap;\\nimport java.util.HashSet;\\nimport java.util.LinkedList;\\nimport java.util.Map;\\nimport java.util.Queue;\\nimport java.util.Scanner;\\nimport java.util.Set;\\n\\npublic class Main {\\n\\n\tstatic Scanner sc = new Scanner(System.in);\\n\\n\tpublic static void main(String[] args){\\n\\n\t\tsolve_abc150_b();\\n\t}\\n  \\n  \tpublic static void solve_abc150_b(){\\n\t\t\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tint N = sc.nextInt();\\n\t\tString S = sc.next();\\n\t\tString keyword = \"ABC\";\\n\t\tint count = 0;\\n\t\t\\n\t\tfor(int i=0;i<N-(keyword.length()-1);i++){\\n\t\t\t\\n\t\t\tif(S.substring(i, i+keyword.length()).equals(keyword)){\\n\t\t\t\tcount++;\\n\t\t\t\ti += keyword.length() - 1;\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(count);\\n\t\tsc.close();\\n\t\t\\n\t}\\n}", "target": "110", "substitutes": {"sc": ["irc", "ch", "sb", "sync", "s", "cle", "sw", "asc", "mc", "osc", "ctrl", "anc", "ec", "Sc", "scope", "sci", "c", "arc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "sr", "nl", "gc", "scan", "ss", "cl", "pb", "nc", "sq", "cs", "tc", "system", "ck", "disc", "tch", "pc", "ctl", "isc", "syn", "capt", "scl", "sh", "desc", "sv", "sp", "esc"], "N": ["NP", "NI", "NG", "NA", "NM", "NH", "K", "Net", "P", "NT", "V", "M", "C", "NO", "Ni", "W", "NB", "I", "TN", "R", "NL", "NN", "NR", "Ns", "Num", "NS", "SN", "L", "GN", "Q", "n", "ND", "NC"], "S": ["CSS", "SF", "s", "SER", "T", "STR", "SOURCE", "SU", "SL", "SAM", "P", "RAW", "TS", "SM", "V", "SA", "M", "C", "X", "SB", "SI", "GS", "I", "G", "IS", "SP", "SO", "R", "Str", "SQL", "JS", "L", "NS", "B", "F", "Q", "SN", "SS"], "keyword": ["keyfunction", " keypiece", "newletter", "cypiece", "yword", "Keycard", "newword", "cystroke", "wordWord", "powerfunction", " keycard", "KEYword", "KEYWord", "keycard", "powerletter", "ekstroke", "KEYtext", " keyletter", " keytext", "keyterm", "keypiece", "cyword", "Keyterm", "keywords", "powerphrase", "keyletter", "wordword", "Keywords", "KEYwords", "KEYterm", "cyWord", "newwords", "ekpiece", "KEYletter", "yphrase", "wordwords", "wordterm", " keystroke", "yletter", "Keyword", "keyWord", "KeyWord", "ekWord", "powerword", "keytext", " keywords", " keyfunction", "keyphrase", "newtext", "yfunction", "keystroke", "ekword", "wordcard", " keyphrase", " keyWord"], "count": ["result", "nb", "report", "add", "summary", "size", "list", "total", "iter", "success", "last", "test", "status", "all", "state", "counter", "sum", "found", "out", "c", "amount", "coll", "flag", "trace", "find", "nt", "cost", "draw", "score", "type", "cont", "must", "current", "number", "length", "ind", "child", "hold", "index", "cond", "call", "Count", "zero", "ount", "stat", "num", "code", "ct", "n", "ctr", "match", "sequence"], "i": ["yi", "bi", "in", "uni", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "gu", "l", "zi", "xi", "di", "pi", "qi", "ei", "iri", "mi", "point", "ini", "ci", "y", "id", "err", "j", "uri", "ni", "I", "q", "init", "me", "m", "index", "ori", "ami", "ki", "ii", "gi", "us", "t", "is", "li", "ex", "hi", "ui", "cli", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\nclass Main {\\n\tpublic static void main(String args[]) throws IOException {\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t\tSolver solver = new Solver();\\n\t\tsolver.init();\\n\t\tsolver.readHead(in.readLine());\\n\t\tfor (; solver.hasNext();) {\\n\t\t\tsolver.readBody(in.readLine());\\n\t\t}\\n\t\tsolver.solve();\\n\t}\\n}\\n\\nclass Solver {\\n\tint N;\\n\tint cnt;\\n\\n\tpublic void init() {\\n\t\tN = 0;\\n\t\tcnt = 0;\\n\t}\\n\\n\tpublic void readHead(String str) {\\n\t\tString[] strArr = str.split(\" \");\\n\t\tN = Integer.parseInt(strArr[0]);\\n\t\t// System.out.println(N);\\n\t\tBtn = new int[N + 1];\\n\t}\\n\\n\tint[] Btn;\\n\\n\tpublic boolean hasNext() {\\n\t\treturn cnt < N;\\n\t}\\n\\n\tpublic void readBody(String str) {\\n\t\t// System.out.println(str);\\n\t\tcnt++;\\n\t\tBtn[cnt] = Integer.parseInt(str);\\n\t}\\n\\n\tpublic void solve() {\\n\t\t// for (int i = 1; i <= N; i++)\\n\t\t// System.out.println(Btn[i]);\\n\t\tint ans = 0;\\n\t\tfor (int b = 1; b != 2 && ans < N; b = Btn[b]) {\\n\t\t\tans++;\\n\t\t}\\n\t\tif (ans < N)\\n\t\t\tSystem.out.println(ans);\\n\t\telse\\n\t\t\tSystem.out.println(-1);\\n\t}\\n}\\n", "target": "175", "substitutes": {"in": [" din", "en", "std", "In", "it", "s", " IN", "din", "read", "from", "all", "rin", "mm", "user", "sum", "ins", "by", "bin", "out", "doc", "i", "ill", "conf", "el", "get", "r", "mi", "ini", "line", "err", "on", "id", "f", "win", "ind", "st", "IN", "reader", "OUT", "info", "per", "con", "readable", "gin", "isin", "is", "vin", "stream", "input", "session", "inv", "n", "inn", "inf", "inner", "ze", "ic", "cin"], "solver": ["Solver", " solved", " solution", "Sorter", "solution", "persolver", "osolution", "osolver", "persoln", "resolve", "Srator", "sol", "resolution", " solve", "gsolver", " sorter", "esol", "persolve", "resol", "Solve", "Sol", "solve", "soln", "Solution", " srator", "solved", "Solved", "sorter", "esolution", "Soln", "gsolve", "esoln", "osolve", "gsolved", "esolver", "esolve", "persolution", "gsolution", "persol", "osrator", "tsoln", "persorter", "tsolution", "tsolver", "resolver", "srator", "tsolve", " soln"], "N": ["NI", "S", "NA", "J", "D", "T", "Names", "NM", "K", "H", "Z", "P", "V", "NT", "M", "C", "NUM", "Sn", "NB", "Number", "FN", "TN", "I", "CN", "R", "NN", "NR", "Ns", "Num", "NC", "NS", "L", "B", "GN", "F", "n", "MN", "O", "ND", "SN"], "cnt": [" ccount", "Cnt", "Ccount", " count", "cst", "ccount", "cNT", "cct", "nccount", "nct", " cct", "ncount", "nount", "ncNT", "Count", "ncst", " cst", " cNT", "Cct", "count", "nnt", "CNT", "ncnt", "Cst"], "str": ["wr", "obj", "ch", "it", "vol", "s", "w", "msg", "fr", "l", "STR", "tr", "cr", "char", "text", "c", "comm", "g", "r", "v", "err", "name", "res", "print", "word", "string", "st", "sec", "m", "Str", "url", "spec", "t", "data", "br", "z", "txt", "n", "p", "enc", "sp", "arr"], "strArr": ["strTrp", " strArt", "strExtvr", " strExtr", "strTrr", "strChp", "strExtr", "strStrvr", "stringChrs", "strAlry", "strArp", "strTrry", "strarrvr", "strTrrs", "strChry", "strAlr", "strStrt", "strarrt", "stringArry", "strStrr", "strArry", "stringChr", "stringArr", "strAlrs", "strStrrs", " strExtrs", "strArt", "strChrs", " strArrs", " strExtt", " strArvr", "strExtt", "strarrr", "strExtrs", "strAlp", "strarrrs", "stringChp", "strChr", "stringArp", "strArvr", "stringChry", "stringArrs", "strArrs", " strExtvr"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tdouble a = sc.nextDouble();\\n\t\tdouble b = sc.nextDouble();\\n\t\tdouble c = sc.nextDouble();\\n\t\t\\n\t\tif(a/c<=b) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t}else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t\t\\n\t}\\n\\n}\\n", "target": "246", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        // \u6a19\u6e96\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\\n        Scanner scanner = new Scanner(System.in);\\n        int N = scanner.nextInt();\\n\\n        // N\u304c111\u306e\u500d\u6570\u3068\u306a\u308b\u307e\u30671\u3092\u8db3\u3057\u7d9a\u3051\u308b\\n        while (N % 111 != 0){\\n            N++;\\n        }\\n\\n        // \u5168\u3066\u306e\u6841\u306e\u6570\u304c\u7b49\u3057\u304f\u306a\u3063\u305fN\u3092\u6a19\u6e96\u51fa\u529b\\n        System.out.println(N);\\n\\n    }\\n\\n}", "target": "106", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\nclass Main {\\n\\n\tpublic static void main(String args[]) {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint num = scan.nextInt();\\n\t\tint[] array = new int[num];\\n\t\tint count = 0;\\n\\n\t\tfor (int i = 0; i < num; i++) {\\n\t\t\tarray[i] = scan.nextInt();\\n\t\t\tif(isprime(array[i])) {\\n\t\t\t\tcount+=1;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(count);\\n\\n\t\tscan.close();\\n\t}\\n\\n\tprivate static boolean isprime(int x) {\\n\t\tif (x == 2) {\\n\t\t\treturn true;\\n\t\t}\\n\\n\t\tif (x < 2 || x % 2 == 0) {\\n\t\t\treturn false;\\n\t\t}\\n\t\tint i = 3;\\n\t\twhile (i <= Math.sqrt(x)) {\\n\t\t\tif (x % i == 0) {\\n\t\t\t\treturn false;\\n\t\t\t}\\n\t\t\ti += 2;\\n\t\t}\\n\t\treturn true;\\n\t}\\n\\n}\\n", "target": "226", "substitutes": {"scan": ["an", "scroll", "in", "query", "report", "list", " Scan", "spin", "ch", "sync", "pass", "check", "set", "cat", "read", "all", "send", "connect", "re", "ann", "run", "clean", "see", "save", "by", "row", "out", "seek", "sc", "get", "g", "sin", "ner", "r", "parse", "find", "sys", "proc", "skip", "search", "can", "reach", "gc", "gate", "san", "system", "sort", "se", "link", "scale", "na", "util", "stat", "n", "store", "sur", "auto", "sql", "Scan"], "num": ["nb", "en", "multi", "total", "max", "um", "dim", "cal", "all", "rem", "np", "sum", "om", "un", "nm", "no", "end", "NUM", "type", "id", "conv", "number", "top", "Number", "alph", "length", "init", "nom", "m", "index", "mon", "nu", "zero", "Num", "con", "valid", "na", "net", "len", "n", "temp"], "array": ["record", "var", "list", "item", "section", "integer", "random", "file", "sequence", "now", "all", "variable", "table", "instance", "element", "area", "binary", "bin", "row", "amount", "window", "trace", "share", "Array", "v", "ar", "ray", "address", "bar", "range", "collection", "number", "length", "value", "hash", "answer", "index", "view", "batch", "stack", "buffer", "object", "message", "angle", "map", "archive", "our", "arr", "vector"], "count": ["nb", "result", "report", "core", "size", "list", "card", "total", "check", "max", "cache", "last", "cycle", "test", "empty", "comment", "now", "counter", "sum", "th", "found", "conf", "reported", "c", "amount", "flag", "find", "nt", "cc", "C", "cont", "err", "number", "length", "command", "index", "cast", "cond", "call", "Count", "info", "continue", "t", "ount", "message", "ct", "n", "ctr"], "i": ["in", "multi", "list", "si", "ip", "chain", "l", "zi", "di", "c", "point", "ini", "me", "info", " I", "hi", "p", "phi", "limit", "it", "ie", "o", "b", "qi", "y", "sim", "uri", "init", "ami", "index", "ii", "gi", "us", "base", "cli", "ji", "ri", "bi", "iter", "iu", "gu", " wi", "ei", "g", "j", "io", "I", "print", "ij", " di", "rest", "t", "is", "li", " ii", "ui", "client", "ix", "ti", "ai", " ti", "xi", "pi", "by", "d", "mi", "v", "ity", "ci", "id", "oi", "f", "m", "ki", "\u0438", " bi", "fi", "im", " j", "u"], "x": ["abc", "dx", "mx", "px", "check", "time", "w", "tx", "xe", "xx", "lat", "orig", "ax", "xf", "l", "xi", "k", "p", "xc", "xp", "c", "ctx", "g", "act", "v", "co", "X", "y", "ox", "height", "h", "f", "wx", "xs", "power", "inx", "rx", "index", "m", "xa", "exp", "t", "scale", "xy", "ext", "z", "ex", "code", "xxx", "ct", "n", "width", "ix", "hex", "history", "u"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        String needle = sc.nextLine().toLowerCase();\\n        int c = 0;\\n        while (sc.hasNextLine()) {\\n            String line = sc.nextLine();\\n            if (\"END_OF_TEXT\".equals(line)) {\\n                break;\\n            }\\n            String[] hashstack = line.split(\" \");\\n            for (int i = 0, l = hashstack.length; i < l; i++) {\\n                String s = hashstack[i];\\n                if (s.toLowerCase().equals(needle)) {\\n                    c++;\\n                }\\n            }\\n        }\\n        System.out.println(c);\\n    }\\n}", "target": "46", "substitutes": {"sc": ["irc", "ch", "sync", "sw", "cle", "asc", "mc", "osc", "scrib", "anc", "cr", "ec", "Sc", "sub", "cons", "inc", "bc", "cc", "sys", "fc", "SC", "lc", "rc", "usc", "sec", "sch", "nl", "gc", "cl", "scan", "ss", "uc", "nc", "sq", "cs", "system", "tc", "ck", "tch", "pc", "ctl", "isc", "syn", "scl", "sh", "sv", "sp", "esc"], "needle": ["needling", "kindle", "Needl", "kindLE", "needler", "kindel", "readel", "needsole", "needLE", "readle", "needel", "needl", "rippLE", "readLE", "needsle", "kindling", "readling", "Needler", "kindl", "ripple", "rippel", "needsler", "needsl", "Needole", "rippling", "Needle", "kindler", "kindole", "needole"], "c": ["cur", "total", "e", "cache", "w", "cm", "mc", "comments", "cum", "chain", "b", "k", "counter", "cd", "pointer", "p", "cr", "ec", "out", "x", "d", "g", "r", "cy", "fc", "v", "C", "ci", "err", "ok", "h", "lc", "cv", "rc", "ac", "m", "gc", "call", "uc", "cs", "cf", "tc", "con", "t", "dc", "count", "ce", "num", "ct", "n", "ca", "code", " C", "cu", "cut", "ic", "unc", "u"], "line": ["record", "Line", "lane", "eline", "stay", "side", "inline", "ip", "level", "online", "next", "source", "phrase", "comment", "block", "pe", "chain", "lin", "row", "text", "stroke", "ine", "lo", "point", "cell", "lock", "range", "LINE", "liner", "number", "word", "le", "string", "nl", "log", "ln", "detail", "page", "link", "piece", "rule", "message", "sample", "frame", "sequence", "note", "entry"], "hashstack": ["hasharray", " hashStack", "hashStack", "hexstream", "hashcollection", "hashcontext", "hexStack", "Hashstack", " hashspace", "ashstack", "ashspace", "Hasharray", " hashcontext", "hashspace", "ashStack", "hashstream", "Hashcontext", "HashStack", " hashstream", "hexstack", "Hashspace", "hexcollection", " hashcollection", "hexcontext", "Hashstream", " hasharray", "asharray", "Hashcollection"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "ie", "o", "PI", "zi", "xi", "di", "pi", "qi", "x", "ei", "this", "my", "mi", "point", "ini", "ci", "sim", "current", "j", "io", "a", "uri", "I", "ind", "q", "me", "m", "index", "ori", "\u0438", "ii", "gi", "us", "ims", "is", "li", "z", "ex", "hi", "ui", "cli", "ji", "ix", "im", "ic", "phi", "u", "ri"], "l": ["fl", "la", "kl", "all", "ll", "lv", "gl", "vl", "el", "lp", "vel", "ml", "lf", "hl", "h", "lc", "length", "ell", "le", "ql", "ls", "ul", "nl", "cl", "sl", "il", "ln", "li", "L", "z", "pl", "len", "n", "dl"], "s": ["S", "si", "space", "sts", "sf", "sb", "set", "ds", "sm", "sol", "source", "single", "state", "b", "ns", "ts", "js", "str", "g", "v", "h", "gs", "string", "south", "ls", "sl", "ss", "sq", "qs", "less", "se", "ps", "is", "n", "sv", "rs", "hs", "gets", "sym"]}}
{"code": "import java.util.*;\\nclass Main{\\n\tstatic Scanner s = new Scanner(System.in);\\n\tpublic static void main(String[] args) {\\n\t\tint in1,in2;\\n\t\twhile(true) {\\n\t\t\tin1 = Integer.parseInt(s.next());\\n\t\t\tin2 = Integer.parseInt(s.next());\\n\t\t\tif((in1|in2)==0)\\n\t\t\t\treturn;\\n\t\t\tif(in1<=in2)\\n\t\t\t\tSystem.out.printf(\"%d %d\\n\",in1,in2);\\n\t\t\telse\\n\t\t\t\tSystem.out.printf(\"%d %d\\n\",in2,in1);\\n\t\t}\\n\t}\\n}", "target": "72", "substitutes": {"s": ["ses", "ms", "S", "pers", "sts", "sb", "utils", "w", "stats", "csv", "b", "ns", "ins", "fps", "out", "c", "ts", " c", "comm", "g", "r", "sys", "ats", "conv", "h", "f", "xs", "q", "gs", "south", "fs", "m", "aws", "self", "ss", "abs", "sq", "less", "t", "ps", "is", " ans", "n", " S", " reports", "p", "sv", "rs", "gets"], "in1": ["pin1", "pin81", "inn0", "inn7", "ind7", "INOne", "IN4", "inn001", "ind81", "int0", "ind1", "INOnce", "innOne", "In2", " inOnce", "InOne", "intOne", "IN0", "in81", "intOnce", "In0", "IN1", "int1", "inn81", "inOnce", "in001", " inOne", "in0", "in7", "pin7", "In1", "inn4", " in0", "ind001", "IN2", "in4", " in4", "inOne", "inn1", "pin001"], "in2": [" in3", "in02", "inTwo", "isin2", "i02", "IN4", " in02", "in8", "isin02", " in8", " intwo", " inTwo", "mi2", "IN0", "INTwo", "in3", "inn8", "i2", "IN1", "out0", "inn3", "in82", "inc2", "out2", "inntwo", "inc8", "in0", "iTwo", "intwo", "IN02", "i4", "mi02", "mi82", " in0", "out1", "IN2", "isin82", " in4", "in4", "inctwo", "inn2", "out02", "inc3", " in82"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString s = sc.next();\\n\t\tString t = sc.next();\\n\t\t\\n\t\tboolean flag = false;\\n\t\tfor(int i = 0; i < s.length(); i++) {\\n\t\t\tif (s.equals(t)){\\n\t\t\t\tflag = true;\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tCharacter c = s.charAt(0);\\n\t\t\ts = s.substring(1, s.length()) + c;\\n\t\t}\\n\t\t\\n\t\tif(flag) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t}else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\\n\t}\\n\\n}\\n", "target": "220", "substitutes": {"sc": ["ch", "sync", "cle", "src", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "ko", "sci", "sel", "arc", "inc", "bc", "cc", "fc", "sys", "cont", "ok", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "nc", "sq", "cs", "tc", "exp", "ck", "pc", "ctl", "dc", "isc", "desc", "scl", "sv", "sp", "esc"], "s": ["ms", "ess", "parts", "S", "si", "sts", "sb", "sw", "sol", "w", "status", "source", "series", "state", "l", "b", "ns", "ins", "bs", "text", "ts", "js", "str", "g", "v", "sys", "search", "f", "h", "xs", "q", "gs", "st", "string", "ls", "sl", "ss", "abs", "sq", "sort", "qs", "cs", "os", "less", "se", "spec", "ps", "is", "n", "sql", "sh", "p", "sv", "rs", "sp"], "t": ["tt", "ot", "at", "it", "mt", "pt", "test", "T", "term", "tr", "rt", "template", "ts", "tw", "g", "r", "type", "ty", "ta", "f", "gt", "title", "st", "tm", "ant", "te", "tc", "tk", "to", "txt", "ct", "n", "tg", "p"], "i": ["bi", "in", "multi", "si", "ti", "ai", "e", "it", "ip", "mill", "gu", "iu", "ie", "key", "o", "di", "pi", "qi", "x", "ei", "g", "mi", "ini", "ci", "y", "sim", "j", "io", "a", "I", "ind", "me", "init", "m", "gi", "ii", "us", "is", "li", "z", "ex", "ui", "cli", "n", "ix", "im", "ic", "phi", "u"], "c": ["cur", "ch", "vc", "cat", "cod", "cm", "o", "b", "k", "cd", "p", "cr", "char", "d", "cc", "co", "v", "cont", "C", "fc", "f", "a", "lc", "ac", "gc", "tc", "cs", "cf", "pc", "dc", "z", "ce", "code", "ct", "n", "ca", "cu", "unc", "u"], "flag": ["field", "Flag", "bug", "bool", "event", "condition", "sync", "check", "set", "true", "flags", "status", "func", "group", "compl", "ld", "neutral", "found", "save", "failed", "enable", "arg", "tag", "bo", "kill", "learn", "no", "button", "fail", "lock", "option", "bird", "error", "f", "print", "stage", "lag", "warning", "hold", "mail", "cloud", "cond", "log", "leaf", "buffer", "debug", "cmd", "valid", "fire", "store", "match", "wait", "ground"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString n = sc.next();\\n\t\t\\n\t\tint sum = 0;\\n\t\tfor (int i = 0; i < n.length(); i++) {\\n\t\t\tint num = Integer.valueOf(n.substring(i, i + 1));\\n\t\t\tsum += num;\\n\t\t}\\n\t\t\\n\t\tString ans = sum % 9 == 0 ? \"Yes\" : \"No\";\\n\t\tSystem.out.println(ans);\\n\t\t\\n\t\tsc.close();\\n\t}\\n\\n}\\n\\n\\n", "target": "93", "substitutes": {"sc": ["cur", "ch", "sync", "cle", "asc", "mc", "osc", "scrib", "anc", "cr", "ec", "Sc", "ko", "arc", "c", "inc", "dec", "bc", "cc", "sys", "SC", "lc", "rc", "RC", "sch", "sec", "nl", "gc", "cl", "scan", "nc", "sq", "tc", "cs", "ck", "pc", "isc", "capt", "syn", "sh", "scl", "sv", "sp", "esc"], "n": ["nv", "rn", "nn", "nw", "s", "nor", "ll", "o", "np", "ns", "d", "nr", "g", "norm", "nt", "nm", "tn", "ng", "on", "j", "ren", "sn", "fn", "nu", "m", "nl", "nc", "ln", "ne", "t", "na", "z", "cn", "net", "dn", "N", "gn", "p", "note", "mn"], "sum": ["summary", "size", " sums", "si", "total", "vol", "um", " SUM", "cal", "cum", " summed", "SU", "doc", "sun", "cos", "mess", "black", "mean", "mod", "sim", "must", "mass", "sup", "alpha", "sat", "ass", "hash", "can", "weight", "sam", "mu", "tu", "hum", "zero", "scan", "sta", "na", "scale", "su", "sa", "count", "mem", "match", "Sum", "average", "sym"], "i": ["yi", "bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "s", "iu", "gu", "ie", "o", "l", "zi", "xi", "di", "pi", "by", "qi", "x", "ei", "g", "mi", "ini", "ci", "y", "sim", "id", "oi", "io", "uri", "I", "ind", "q", "init", "ami", "m", "index", "ki", "ii", "gi", "info", "us", "is", "li", "ex", "hi", "ui", "cli", "ix", "p", "im", "ic", "phi", "u", "ri"], "num": ["eng", "snap", "check", "umi", "um", "dim", "cal", "local", " number", "coord", "sym", "tim", "cmp", "om", "nm", "no", "dec", "ident", "NUM", "conv", "number", "alph", "sup", "nom", "nu", "m", "mon", "pn", "digit", "sam", "index", "Num", "t", "net", "node", "prim", "nam"], "ans": ["an", "angs", "uns", "ars", "umes", "ms", "des", "anks", "yes", "rans", "ds", "aps", "ann", "mails", "ons", "ins", "ags", "ns", "aus", "vals", "ks", "cons", "arts", " means", "ats", "olds", "ates", "ants", "ANS", "can", "ls", "san", "cs", "os", "as", "amps", "aves", "ens", "sv", "AN", "ods", "ids", "eds"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n\tpublic static void main(String[] args){\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint N = scan.nextInt();\\n\t\tint K = scan.nextInt();\\n\\n\t\tString sn = Integer.toString(N,K);\\n\t\tSystem.out.println(sn.length());\\n\\n\\n\t}\\n}", "target": "219", "substitutes": {"scan": ["an", "scroll", "in", "query", " Scan", "report", "ch", "nn", "sync", "sm", "read", "send", "connect", "re", "ann", "see", "sum", "save", "row", "out", "seek", "sc", "cgi", "parse", "sin", "ner", "skip", "find", "sys", "black", "screen", "sim", "range", "search", "can", "reach", "sr", "gate", "san", "system", "sort", "se", "ser", "na", "scale", "n", "store", "sur", "auto", "sql", "sv", "Scan", " scanner"], "N": ["NP", "S", "NA", "UN", "D", "T", "NM", "NH", "NT", "KN", "M", "NUM", "Sn", "NO", "NE", "W", "NB", "TN", "NW", "CN", "NL", "NN", "NR", "Ns", "Num", "NPR", "CNN", "NC", "NS", "L", "GN", "MN", "n", "TON", "ND", "SN", "AN"], "K": ["S", "J", "KR", "T", "KK", "E", "KS", "PK", "KT", "k", "KI", "H", "IK", "Z", "P", "V", "KN", "M", "UK", "KA", "C", "MK", "SK", "KE", "L", "B", "KB", "F", "VK", "Q", "MN", "HK", "KY"], "sn": ["si", "sen", "nn", "sb", "s", "sw", "sol", "oln", "sk", "spe", " Sn", "ns", "stri", "str", "spr", "tn", "oss", "soc", "Sn", "sd", "fn", "sr", "nl", "sl", "ssl", "ln", "ssh", "ski", "SN", "cn", "su", "sa", "n", "syn", "pres", "gn", "wn", "scl", "sv", "sh", "bn"]}}
{"code": "import java.io.InputStream;\\nimport java.io.PrintStream;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tInputStream in = System.in;\\n\tPrintStream out = System.out;\\n\\n\tpublic void _main(String[] args) {\\n\t\tScanner sc = new Scanner(in);\\n\\n\t\tint N = sc.nextInt();\\n\t\tint[][] A = new int[2][N];\\n\t\tA[0] = nextIntArray(sc, N);\\n\t\tA[1] = nextIntArray(sc, N);\\n\\n\t\tsc.close();\\n\\n\t\tint[][] dp = new int[2][N];\\n\t\tdp[0][0] = A[0][0];\\n\t\tdp[1][0] = dp[0][0] + A[1][0];\\n\\n\t\tfor (int i = 1; i < N; i++) {\\n\t\t\tdp[0][i] = dp[0][i - 1] + A[0][i];\\n\t\t\tdp[1][i] = Math.max(dp[0][i], dp[1][i - 1]) + A[1][i];\\n\t\t}\\n\\n\t\tout.println(dp[1][N - 1]);\\n\\n\t}\\n\\n\tpublic static void main(String[] args) {\\n\t\tnew Main()._main(args);\\n\t}\\n\\n\t@SuppressWarnings(\"unused\")\\n\tprivate int[] nextIntArray(Scanner sc, int n) {\\n\t\tint[] result = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tresult[i] = sc.nextInt();\\n\t\t}\\n\t\treturn result;\\n\t}\\n}\\n", "target": "140", "substitutes": {"in": ["std", "ch", "In", "it", "null", "s", "src", "ds", "up", "din", "read", "file", "source", "all", "rin", "run", "l", "b", "ins", "lin", "bin", "c", "inc", "r", "ini", "ar", "id", "on", "io", "h", "f", "ind", "rc", "st", "IN", "init", "m", "reader", "info", "con", "t", "data", "is", "gin", "serv", "stream", "input", "inn", "inf", "inner", "p", "rs", "cin"], "out": ["report", "outer", "en", "display", "OU", "ch", "at", "s", "sw", "w", "msg", "put", "o", "Out", "table", "sum", "rt", "c", "window", "r", "nt", "v", "sys", "screen", "err", "error", "io", "res", "gt", "print", "st", "log", "ou", "OUT", "system", "write", "output", "os", "info", "us", "t", "writer", "to", "exit", "ex", "txt", "p", "outs"], "sc": [" scr", "ch", "sync", "sw", "cle", "cam", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "arc", "ko", "sub", "sci", "inc", "dec", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "exec", "gc", "cl", "scan", "uc", "pb", "nc", "sq", "tc", "cs", "con", "pc", "dc", "ser", "isc", "desc", "syn", "scl", "sh", " unsc", "sv", "capt", "ic", "sp", "esc"], "N": ["NP", "NI", "S", "NA", "J", "D", "T", "NH", "NM", "K", "E", "No", "H", "Y", "Z", "P", "NT", "V", "M", "C", "X", "Sn", "NO", "Ni", "NE", "Size", "NB", "I", "FN", "TN", "NW", "CN", "IN", "R", "NL", "NR", "NN", "OUT", "Ns", "Num", "NC", "NS", "L", "B", "GN", "F", "ND", "SN", "AN"], "A": ["ap", "AY", "Ass", "AB", "Rap", "S", "At", "NA", "AAA", "AT", "One", "Auth", "D", "PA", "BA", "This", "T", "AF", "Ad", "EA", "AC", "JA", "AI", "Area", "As", "P", "HA", "AS", "Ar", "AH", "V", "CA", "ASC", "SA", "ACC", "AV", "M", "C", "ACT", "Another", "AE", "And", "Alpha", "Array", "AR", "ICA", "a", "G", "AA", "Ag", "TA", "App", "IA", "GA", "The", "AP", "Att", "Ant", "L", "Av", "B", "AU", "AM", "Ac", "API", "Ax", "Acc", "AN", "An"], "dp": ["bsp", "fp", "cp", "DP", "delay", "dq", "dt", "da", "resp", "px", "pkg", "ip", "port", "ds", "pt", "wp", "prep", "csv", "dial", " gp", "dep", "np", "dr", "di", "p", "dd", "vp", "deb", "db", "DC", "tap", "jp", "grad", "d", "def", "lp", "pm", " dst", "tp", "drop", "decl", "df", "gp", "pd", "pas", "pb", "pend", "arp", "cmd", "trip", " DP", "dm", "dist", "dc", "ps", "pa", "pipe", "adr", "dh", "bp", " df", "du", "dl", "pp", "wd", "ep"], "i": ["maybe", "multi", "si", "ip", "chain", "zi", "di", "my", "ini", "me", "info", "exp", "mac", "hi", "p", "phi", "it", "s", "ie", "status", "o", "qi", "x", "ik", "y", "sim", "uri", "q", "init", "ami", "MI", "gi", "ii", "us", "to", "cli", "ji", "ic", "ri", "fire", "bi", "iu", "key", "k", "ei", "this", "g", "j", "io", "a", "ni", "I", "ij", "is", "li", "ui", "ix", "ti", "ai", "xi", "pi", "mi", "v", "ci", "id", "iq", "php", "m", "ki", "\u0438", "batch", "ims", "z", "fi", "im", "u"], "n": ["nb", "nn", "w", "all", "o", "l", "np", "k", "ns", "x", "c", "d", "un", "g", "r", "nm", "nt", "v", "nos", "no", "name", "j", "sn", "ni", "fn", "m", "nu", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "count", "p", "mn"], "result": ["report", "response", "record", "feature", "contact", "list", "complete", "results", "total", "integer", "success", "true", "tmp", "diff", "test", "same", "next", "profile", "comment", "all", "master", "table", "p", "goal", "relation", "r", "primary", "ret", "default", "current", "search", "mask", "res", "currency", "process", "back", "answer", "mark", "buffer", "Result", "output", "params", "continue", "valid", "data", "br", "other", "request", "message", "register", "match", "vector"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tfinal String[] abc = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\\n\t\tint[] cnt = new int[abc.length];\\n\t\t\\n\t\twhile(sc.hasNext()){\\n\t\t\tString[] text = sc.nextLine().split(\"\");\\n\t\t\t\\n\t\t\tfor(int i=0; i<text.length; i++){\\n\t\t\t\tfor(int j=0; j<abc.length; j++){\\n\t\t\t\t\tif(text[i].equals(abc[j]) || text[i].equals(abc[j].toUpperCase())){\\n\t\t\t\t\t\tcnt[j]++;\\n\t\t\t\t\tbreak;\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tfor(int j=0; j<abc.length; j++){\\n\t\t\tSystem.out.println(abc[j] + \" : \" + cnt[j]);\\n\t\t}\\n\t}\\n\\n}", "target": "242", "substitutes": {"sc": ["irc", "ch", "sync", "asc", "mc", "osc", "cmp", "anc", "cr", "ec", "Sc", "sci", "c", "inc", "dec", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "sec", "sch", "nl", "gc", "scan", "cl", "pb", "nc", "sq", "cs", "tc", "system", "spec", "pc", "dc", "ctl", "isc", "desc", "scl", "soc", "sh", "sv", "sp", "esc"], "abc": ["toc", "irc", "ab", "fb", "ib", "au", " ab", "img", "tmp", "asc", "erb", "obs", "aka", "fab", "lab", "lib", "aaa", "cmp", "aux", "anc", "ob", "gb", "conf", "ec", "arc", "auc", "c", "exc", "common", "lam", "icc", "fc", "ox", "arb", "cb", "abi", "alph", "rc", "ABC", "ac", "alpha", "app", "roc", "abs", "pb", "oc", "frac", "typ", "etc", "rox", "abet", "apa", "apache", "ext", "util", "rb", "chest", "arr", "canon"], "cnt": ["ectr", "Cnt", "ctct", " cnc", "cst", "cgt", "Cnc", "cnd", "ngt", "ecct", "cct", "ctnt", "nnd", "nst", "cnc", " ctr", "ctst", "ecnc", " cnd", " cct", " cgt", "ecnt", "Cgt", "ctnd", "Cnd", " cst", "Ctr", "Cct", "nnt", "ctr", "Cst"], "text": ["tt", "ab", "buff", "pt", "tx", "read", "test", "key", "phrase", "not", "TEXT", "translation", "xt", "tex", "p", "binary", "char", "context", "x", "template", "format", "font", "str", "tab", "nt", "act", "end", "topic", "config", "name", "print", "title", "word", "pattern", "string", "ind", "xml", "math", "log", "buffer", "info", "exp", "path", "select", "t", "data", "ext", "input", "Text", "code", "txt", "net", "desc", "ct", "temp", "inner", "hex", "button", "note"], "i": ["yi", "bi", "in", "si", "ti", "ai", "ip", "it", "iu", "ie", "zi", "xi", "di", "pi", "ei", "g", "ik", "mi", "ini", "ci", "y", "ia", "io", "iq", "I", "q", "ij", "ami", "init", "m", "ori", "ki", "ii", "info", "gi", "is", "li", "hi", "ui", "ji", "ix", "fi", "im", "ic", "phi", "ri"], "j": ["adj", "at", "json", "pt", "l", "jl", "out", "uj", "js", "ion", "my", "ja", "err", "ng", "kj", "exp", "br", "job", "n", "oj", "bj", "it", "s", "right", "o", "expr", "b", "x", "y", "bot", "q", "aja", "je", "ort", "gi", "to", "ev", "ji", "pr", "jo", "obj", "jc", "next", "key", "jj", "el", "jp", "son", "og", "g", "ph", "ind", "ij", "ne", "serv", "other", "axy", "ed", "ix", "ijk", "note", "J", "ee", "fr", "kid", "user", "jit", "dj", "aj", "d", "v", "jac", "m", "att", "z", "jump", "yy", "im"]}}
{"code": "import java.io.*;\\n\\npublic class Main {\\n  public static void main(String[] args) throws IOException {\\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n    \\n    String[] data = br.readLine().split(\" \");\\n    \\n    int a = Integer.parseInt(data[0]);\\n    int b = Integer.parseInt(data[1]);\\n    \\n    if (a<10 && b<10){\\n      System.out.println(a*b);\\n    } else {\\n      System.out.println(-1);\\n    }\\n  }\\n}", "target": "58", "substitutes": {"br": ["wr", "ber", "bi", "hr", "bl", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "buf", "dr", "browser", "bd", "cr", "db", "bg", "gr", "str", "nr", "r", "bh", "bc", "bf", "bt", "bridge", "sr", "shr", "bp", "rb", "repl", "bm", "pr", "div", "ctr", "be", "bro", "bn"], "data": ["query", "pieces", "des", "parts", "items", "da", "results", "list", "json", "users", "content", "cache", "ds", "next", "block", "DATA", "bytes", "series", "some", "step", "details", "split", "row", "ops", "multiple", "rel", "def", "format", "share", "dat", "done", "words", "extra", "value", "apps", "good", "values", "join", "ata", "batch", "buffer", "info", "raw", "valid", "hex", "bus", "len", "sample", "filter", "map"], "a": ["an", "la", "ba", "da", "ea", "at", "ai", "au", "s", "ama", "l", "aaa", "aj", "area", "x", "el", "i", "sha", "amount", "A", "ar", "ia", "ta", "ma", "f", "ao", "va", "alpha", "ac", "ae", "m", "xa", "ga", "oa", "sta", "as", "t", "aa", "na", "pa", "fa", "sa", "ca", "n", "isa", "aq", "p", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "e", "ib", "sb", "wb", "eb", "lib", "l", "ob", "gb", "bs", "db", "x", "c", "i", "d", "r", "bc", "v", "y", "bar", "cb", "reb", "j", "f", "back", "m", "beta", "mb", "bis", "bp", "t", "base", "z", "B", "rb", "n", "p", "u"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tpartC100();\\n\t}\\n\\n\\n\tpublic static void partC100() {\\n\t\tScanner scC = new Scanner(System.in);\\n\t\tboolean bool = false;\\n\t\tint count = 0;\\n\t\tint N = scC.nextInt();\\n\t\tint[] a = new int[N];\\n\\n\t\tfor(int i = 0 ; i < N ; i++) {\\n\t\t\ta[i] = scC.nextInt();\\n\t\t}\\n\\n\\n\t\tfor(int j = 0 ; j < N ; j++) {\\n\t\t\tif(a[j] % 2 == 0) {\\n\t\t\t\twhile(a[j] % 2 == 0) {\\n\t\t\t\t\ta[j] /= 2;\\n\t\t\t\t\tcount++;\\n\t\t\t\t}\\n\t\t\t\tbool = true;\\n\t\t\t}\\n\t\t}\\n\\n\\n\t\tif(bool) {\\n\t\t\tSystem.out.println(count);\\n\t\t}else {\\n\t\t\tSystem.out.println(0);\\n\t\t}\\n\\n\t}\\n}", "target": "39", "substitutes": {"scC": ["SCN", "Scc", " scc", " scE", "scAC", "scR", "ScG", " scN", "scG", "selN", "scc", "scN", " scYC", "ScE", "ScAC", "SCYC", "selC", "lcN", "selc", " scG", "scE", "ScC", " scAC", "scYC", "ScN", "lcYC", "selAC", "lcC", "SCC", "selE", "scCU", "SCR", "selCU", "lcR", "selG", " scR", "ScCU", " scCU"], "count": ["result", "nb", "report", "add", "summary", "size", "list", "total", "check", "last", "max", "next", "state", "counter", "sum", "found", "out", "c", "amount", "flag", "common", "trace", "find", "nt", "current", "number", "length", "ind", "print", "value", "child", "index", "call", "Count", "t", "offset", "ount", "z", "stat", "num", "code", "ct", "n", "ctr", "sequence"], "N": ["NP", "NI", "NG", "None", "S", "NA", "J", "D", "T", "NM", "NH", "K", "Net", "Length", "Now", "P", "A", "NT", "V", "M", "C", "Sn", "NO", "Ni", "NE", "Size", "NB", "I", "Number", "TN", "R", "ANY", "NR", "NN", "OUT", "Ns", "Num", "NC", "NS", "L", "B", "F", "MN", "n", "ND", "SN"], "a": ["an", "la", "ba", "ab", "eas", "da", "ea", "at", "qa", "au", "ai", "set", "all", "aaa", "b", "pi", "aux", "area", "c", "am", "A", "act", "ar", "address", "mod", "ia", "ma", "ta", "ao", "alpha", "ac", "ae", "index", "ata", "subject", "go", "info", "ga", "exp", "oa", "att", "aa", "as", "sta", "na", "to", "array", "fa", "sa", "ca", "n", "p", "history", "arr"], "i": ["bi", "in", "ish", "si", "ti", "ai", "ip", "it", "iu", "ie", "zi", "xi", "di", "pi", "qi", "x", "my", "mi", "v", "ini", "ci", "y", "id", "iso", "ia", "io", "uri", "inter", "ind", "I", "q", "init", "m", "ori", "ki", "batch", "ii", "info", "gi", "us", "is", "li", "hi", "ui", "n", "inner", "ix", "im", "ic", "phi", "u", "ri"], "j": ["jo", "old", "bj", "oj", "obj", "jc", "J", "json", "it", "set", "pt", "msg", "key", "fr", "kid", "expr", "user", "b", "dj", "k", "jj", "aj", "jl", "jp", "uj", "js", "str", "g", "v", "ja", "y", "bot", "ju", "ind", "jac", "ij", "q", "kj", "m", "exp", "att", "br", "z", "jump", "job", "other", "ji", "n", "pr", "ge", "im", "note"], "bool": ["bl", "bug", "fb", "false", "vol", "console", "true", "lvl", "bold", "alse", "fr", "lu", "compl", "b", "olean", "lower", "jl", "bo", "unit", "rel", "coll", "flag", "bc", "irm", "possibly", "arb", "bil", "conv", "btn", "gs", "ool", "cond", "ble", "bel", "broad", "uint", "debug", "bis", "enabled", "confirmed", "br", "bm", "sql", "bol", "val", "arr"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString line = sc.nextLine();\\n\t\tString[] lines = line.split(\"\");\\n\\n\t\tint max = 0;\\n\t\tint count = 0;\\n\t\tfor(int i = 0; i < lines.length; i++) {\\n\t\t\tif(lines[i].equals(\"A\") || lines[i].equals(\"T\") || lines[i].equals(\"C\") || lines[i].equals(\"G\")) {\\n\t\t\t\tcount++;\\n\t\t\t\tif(i == lines.length - 1 && max < count) {\\n\t\t\t\t\tmax = count;\\n\t\t\t\t}\\n\t\t\t}else {\\n\t\t\t\tif(max < count) {\\n\t\t\t\t\tmax = count;\\n\t\t\t\t}\\n\t\t\t\tcount = 0;\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(max);\\n\t}\\n\\n}\\n", "target": "100", "substitutes": {}}
{"code": "\\nimport java.util.Scanner;\\n\\n\\npublic class Main \\n{ \\n    public static void main(String[] args) \\n    {\\n        Scanner sc = new Scanner(System.in);\\n        float n = sc.nextInt();\\n        float dim = n/3;\\n        System.out.printf(\"%f\\n\",dim*dim*dim);\\n    }\\n}\\n", "target": "53", "substitutes": {"sc": ["ch", "sync", "asc", "mc", "osc", "cmp", "cr", "Sc", "sel", "c", "dec", "bc", "cc", "sys", "screen", "SC", "lc", "rc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "uc", "nc", "sq", "cs", "tc", "system", "spec", "pc", "ser", "acc", "dc", "isc", "desc", "sh", "scl", "sv", "sp", "esc"], "n": ["nb", "nv", "nn", "names", "s", "nor", "l", "np", "ns", "c", "i", "d", "un", "nr", "r", "nt", "nm", "norm", "v", "j", "f", "number", "sn", "nu", "m", "nl", "ne", "nan", "t", "na", "natural", "z", "cn", "num", "N", "mn"], "dim": ["dem", "dx", "size", "mat", "dy", "dimensional", "depth", "wid", "dr", "di", "Dim", "d", "window", "dimension", "norm", "nm", "span", "shape", "sup", "nom", "m", "sam", "scale", "width", "div", "du", "im", "mn"]}}
{"code": "import java.util.*;\\npublic class Main {\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    String s = sc.next();\\n    String t = sc.next();\\n    String st = \"\";\\n    for(int i = 0 ; i < n ; ++i){\\n      st += s.charAt(i);\\n      st += t.charAt(i);\\n    }\\n   \\n    System.out.println(st);\\n    \\n  }\\n}", "target": "200", "substitutes": {"sc": ["irc", "ch", "sync", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "ko", "sci", "c", "sub", "cons", "inc", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", "rc", "cv", "usc", "sch", "sec", "gc", "cl", "scan", "nc", "sq", "cs", "tc", "exp", "pc", "ctl", "ser", "dc", "isc", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "en", "nn", "nw", "nor", "network", "l", "np", "ns", "d", "norm", "nm", "nt", "no", "ng", "Ni", "name", "sn", "ni", "nu", "m", "nl", "nc", "ln", "nan", "ne", "na", "cn", "num", "net", "N", "gn", "mn"], "s": ["ies", "ms", "S", "sts", "sb", "es", "ins", "ns", "ts", "js", "ys", "sys", "ats", "gs", "ls", "sl", "ss", "sq", "so", "qs", "os", "se", "ps", "is", "z", "sa", "sql", "sh", "sv", "rs", "hs", "sp"], "t": ["tt", "vt", "ot", "at", "total", "it", "mt", "pt", "test", "T", "term", "tr", "rt", "template", "ts", "or", "nt", "type", "ty", "ta", "tf", "td", "gt", "title", "tm", "te", "tc", "tk", "tree", "txt", "ter"], "st": ["tt", "list", "std", "nd", "ste", "ost", "sts", "sw", "mt", "ace", "pt", "set", "put", "fr", "sty", "art", "ld", "sum", "th", "stri", "text", "ust", "d", "str", "r", "nt", "ST", "pat", "sth", "bt", "must", "cont", "ty", "inst", "ut", "print", "string", "stage", "stre", "stro", "rest", "stable", "so", "output", "sta", "ist", "St", "stat", "ct", "stru", "store", "sp", "est"], "i": ["bi", "multi", "ms", "si", "ai", "iter", "ip", "it", "json", "iu", "gu", "series", "chain", "zi", "xi", "di", "pi", "qi", "ei", "my", "mi", "point", "ini", "ci", "y", "id", "sim", "j", "io", "a", "uri", "I", "ind", "print", "q", "init", "ami", "m", "index", "ori", "me", "\u0438", "batch", "any", "ii", "gi", "info", "us", "slice", "is", "li", "hi", "ui", "ji", "cli", "ix", "im", "ic", "phi", "u"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\\n\t/**\\n\t * @param args\\n\t */\\n\tpublic static void main(String[] args) {\\n\t\t\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint num = 0;\\n\t\tint ans = 0;\\n\t\tfor(int i = 1; i < 6; i++) {\\n\t\t\tnum = scan.nextInt();\\n\t\t\tif(num == 0) {\\n\t\t\t\tans = i;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t\t\\n\t\t\\n\t}\\n\\n}\\n", "target": "222", "substitutes": {"scan": ["an", "scroll", "in", "en", " Scan", "query", "ch", "nn", "sync", "check", "set", "read", "send", "connect", "re", "run", "ann", "save", "by", "out", "seek", "sc", "get", "g", "sin", "ner", "r", "skip", "find", "sys", "parse", "black", "search", "can", "reach", "gate", "san", "system", "info", "se", "con", "scale", "stat", "n", "sql", "store", "auto", "sv", "Scan"], "num": ["an", "en", "mom", "mult", "multi", "mat", "missing", "nn", "anon", "snap", "non", "um", "ord", "cal", "msg", "cum", "np", "coord", "tim", "sum", "cmp", "comm", "lam", "note", "draw", "nm", "no", "NUM", "im", "sim", "id", "conv", "number", "alph", "nom", "nu", "pn", "mon", "sam", "Num", "con", "na", "su", "n", "nam", "mn"], "ans": ["an", "angs", "uns", "ars", "anks", "ians", "ms", "mas", "nn", "s", "aps", "aos", "ows", "ann", "locks", "es", "ons", "ins", "ns", "aus", "ids", "irms", "faces", "ks", "ts", "ran", "cons", "arts", "lines", "nos", "ats", "nets", "lets", "olds", "anes", "rows", "ants", "eps", "xs", "ANS", "gs", "ads", "orders", "ls", "ots", "lan", "cs", "nan", "offs", "ums", "amps", "ens", "outs", "ints", "eds"], "i": ["yi", "an", "bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "gu", "iu", "ie", "chain", "zi", "di", "pi", "qi", "x", "ei", "my", "mi", "ini", "ci", "y", "sim", "id", "oi", "j", "io", "number", "I", "ind", "q", "init", "m", "index", " di", "ori", "ki", "gi", "ii", "info", "us", "t", "is", "li", " ii", "hi", "ui", "cli", "n", "sql", "ix", "im", "ic", "phi", "ri"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString sline = sc.next();\\n\t\tint n = sline.length();\\n\t\tsc.close();\\n\t\tStringBuffer sb = new StringBuffer(sline);\\n\t\tString reversed = sb.reverse().toString();\\n\t\t\\n\t\tboolean ans = true;\\n\t\tString[] words = {\"maerd\", \"remaerd\", \"esare\", \"resare\"};\\n\t\tfor (int i = 0; i < n;) {\\n\t\t\tboolean can = false;\\n\t\t\tfor(String w: words){\\n\t\t\t\tint end = w.length();\\n\t\t\t\tif (i + end > n) continue;\\n\t\t\t\tif (reversed.substring(i, i + end) .equals(w)) {\\n\t\t\t\t\ti += end;\\n\t\t\t\t\tcan = true;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tif (can == false) {\\n\t\t\t\tans = false;\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\t\tif (ans){\\n\t\t\tSystem.out.println(\"YES\");\\n\t\t} else {\\n\t\t\tSystem.out.println(\"NO\");\\n\t\t}\\n\t\t\\n\t}\\n\\n}\\n", "target": "50", "substitutes": {}}
{"code": "\\n\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner in = new Scanner(System.in);\\n\\n\t\tint num = in.nextInt();\\n\t\tint count = 1;\\n\\n\t\tfor (count = 1; count <= num; count++) {\\n\\n\t\t\t// 3??\u00a7?????????????????\u00b0?????\u00a8???\\n\t\t\tif (count % 3 == 0) {\\n\\n\t\t\t\tSystem.out.print(\" \" + count);\\n\\n\t\t\t\t// ???????????????3?????\u00b0?????\u00a8???\\n\t\t\t} else if (count % 10 == 3) {\\n\\n\t\t\t\tSystem.out.print(\" \" + count);\\n\\n\t\t\t\t// else if(count / 10 == 3)\\n\t\t\t} else {\\n\\n\t\t\t\tint x = count;\\n\t\t\t\tint display = 0;\\n\\n\t\t\t\twhile (x > 10) {\\n\t\t\t\t\tx /= 10;\\n\\n\t\t\t\t\tif (x % 10 == 3) {\\n\t\t\t\t\t\tdisplay = count;\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t\tif(display != 0) {\\n\t\t\t\t\tSystem.out.print(\" \" + display);\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(\"\");\\n\t}\\n\\n}", "target": "154", "substitutes": {"in": ["en", "std", "pin", "In", "check", "din", "read", "file", "from", "all", "rin", "world", "user", "features", "sum", "ins", "thin", "asin", "kin", "bin", "out", "doc", "i", "char", "conf", "inc", "sin", "r", "ini", "proc", "line", "err", "id", "pid", "io", "win", "ind", "can", "IN", "scan", "reader", "info", "ln", "con", "readable", "gin", "isin", "is", "vin", "input", "session", "n", "inn", "inf", "inner", "cin"], "num": ["nb", "en", "eng", "mult", "missing", "total", "max", "um", "cal", "rem", "np", "coord", "sum", "th", "out", "nm", "no", "nt", "NUM", "current", "number", "alph", "nom", "m", "nu", "mon", "index", "begin", "Num", "valid", "con", "na", "net", "n", "temp", "man", "orig"], "count": ["nb", "order", "add", "report", "old", "list", "and", "total", "check", "cache", "cycle", "test", "now", "OUNT", "req", "counter", "sum", "const", "th", " Count", "conf", "c", "i", "flag", "find", "nt", "act", "C", "cont", "err", "current", "carry", "length", "ind", "force", "q", "ach", "child", "hold", "batch", "call", "Count", "cmd", "continue", "att", "t", "acc", "ount", "base", "z", "stat", "code", "ct", "n", "client", "ctr", "other", "weight"]}}
{"code": "import java.util.*;\\n\\nclass Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    \\n    int n = sc.nextInt();\\n\\n    ArrayList<Integer> a = new ArrayList<Integer>(n);\\n\\n    for (int i=0 ; i<n ; i++){\\n      a.add(sc.nextInt());\\n    }\\n\\n    int cnt=0;\\n    int ans=0;\\n\\n    for (int i=0 ; i<n ; i++){\\n      if (i+1==n){break;}\\n      if(a.get(i)>=a.get(i+1)){\\n          cnt++;\\n          ans = (ans<cnt) ? cnt:ans;\\n      }else{\\n          ans = (ans<cnt) ? cnt:ans;\\n          cnt=0;\\n      }\\n    }\\n\\n\\n    System.out.println(ans);\\n  }\\n}", "target": "187", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "c", "sub", "inc", "bc", "cc", "sys", "co", "SC", "conv", "lc", "rc", "cv", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "pb", "nc", "sq", "cs", "tc", "ck", "pc", "ctl", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "an", "en", "size", "nn", "network", "ll", "o", "l", "np", "k", "ns", "out", "c", "d", "g", "r", "nm", "nt", "no", "v", "ng", "name", "j", "number", "sn", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "count", "len", "N", "p", "mn"], "a": ["ap", "an", "ba", "ab", "eas", "da", "at", "ea", "au", "s", "up", "aos", "all", "aka", "o", "l", "aaa", "b", "aux", "area", "c", "am", "A", "era", "ia", "ma", "ao", "va", "ack", "alpha", "ac", "ae", "m", "wa", "aw", "ata", "abs", "ga", "oa", "aa", "att", "as", "sta", "na", "apa", "t", "fa", "sa", "ca", "auto", "p"], "i": ["in", "multi", "si", "ip", "chain", "l", "zi", "di", "ion", "point", "ini", "iy", "info", "slice", "hi", "phi", "it", "ie", "status", "o", "qi", "x", "ik", "y", "sim", "uri", "q", "init", "ami", "index", "ori", "ii", "gi", "to", "base", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "progress", "iti", "ei", "g", "j", "io", "I", "ind", "print", "ij", "is", "li", "ui", "client", "ix", "ti", "ai", "xi", "pi", "by", "mi", "ity", "v", "ci", "id", "oi", "f", "m", "ki", "\u0438", "batch", "ims", "im", "u"], "cnt": ["tcnc", "uncNT", "uncnt", "Cnt", " count", "icnc", "ctct", " cnc", "uncount", "cst", "gcnt", "tcnt", "Cnc", " crowd", " cursed", "acct", " Cnton", "cNT", " Cct", "acnton", "gcrowd", "cct", "conpt", "tcount", " CNT", "tcpt", "ctnt", "conrt", "uncpt", " crt", "Crt", "Cpt", "cnc", "ctst", "tcursed", "crt", "cpt", "icnt", " cpt", "ctnc", "ucnt", "icpt", "acnt", " cct", "acNT", "ucnc", "crowd", "gcct", "connt", "gcnc", "tcNT", " Cnt", "Crowd", " cst", "icursed", "conct", "cursed", " cNT", "Cct", "count", "ucct", "Cst", "ucNT", "CNT", " cnton", "cnton"], "ans": ["asks", "an", "angs", "uns", "ars", "anks", "ians", "ms", "ents", "mas", "names", "users", "s", "orts", "ds", "ens", "flags", "aps", "aos", "ann", "arms", "es", "ons", "ints", "ns", "ins", "ags", "aus", "cas", "bs", "vals", "anas", "ks", " scans", "cons", "aces", "arts", "vs", "vers", "ats", "nets", "ends", "olds", "ages", "ants", "xs", "posts", "ANS", "gs", "ads", "ls", " Ans", "ions", "ots", "cs", "os", "ims", "as", " spans", "offs", "ums", "amps", "gn", "ings", "rs", "outs", "ids", "eds"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main (String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint X = sc.nextInt();\\n\t\tint ans = 0;\\n\t\t\\n\t\tfor (int i = 1; i < 33; i++){\\n\t\t\t\\n\t\t\tint tmp = i;\\n\t\t\t\\n\t\t\tfor (int j = 0; j < 9; j++){\\n\t\t\t\ttmp *= i;\\n\t\t\t\t\\n\t\t\t\tif (ans < tmp && tmp <= X){\\n\t\t\t\t\tans = tmp;\\n\t\t\t}\\n\t\t\t\\n\t\t\t}\\n\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(ans);\\n\\n\t}\\n}", "target": "143", "substitutes": {"sc": ["ch", "sb", "sw", "src", "asc", "mc", "osc", "Sync", "anc", "cr", "ec", "Sc", "out", "c", "bc", "cc", "sys", "ok", "SC", "lc", "rc", "RC", "usc", "sch", "nl", "gc", "scan", "cl", "ss", "uc", "nc", "sq", "tc", "cs", "se", "pc", "ser", "acc", "isc", "syn", "sv", "Scan", "sp", "esc"], "X": ["XT", "S", "J", "ZX", "T", "Xi", "K", "EX", "Y", "TX", "Z", "IX", "x", "XL", "P", "TS", "DX", "XM", "V", "M", "C", "xs", "I", "R", "MX", "XXX", "XX", "XP", "L", "OX", "Tx", "Q", "F", "N"], "ans": ["an", "acs", "uns", "ars", "ians", "ms", "ents", "names", "s", "rans", "ds", "flags", "aps", "obs", "Ops", "ows", "ann", "ns", "ins", "ones", "aus", "vals", "faces", "x", "anas", "ks", "ts", " orphans", "ces", "aces", "arts", "lines", "vs", "annot", " means", "ats", "nets", "sets", "olds", "ants", "eps", "xs", "posts", "caps", "ANS", "can", "ads", "ls", "ams", "types", "ots", "times", "cs", "oa", "os", "ims", "ors", "offs", "ums", "amps", "ens", "rs", "AN", "ids", "eds"], "i": ["bi", "in", "multi", "si", "ti", "ai", "iter", "ip", "it", "integer", "iu", "ie", "l", "zi", "xi", "di", "pi", "by", "qi", "x", "c", "my", "mi", "v", "ini", "ci", "y", "sim", "iso", "ia", "io", "a", "f", "iq", "ni", "I", "inter", "ij", "ami", "init", "me", "index", "m", "ki", "ii", "ims", "t", "to", "is", "li", "hi", "ui", "n", "ix", "p", "im", "ic", "phi", "ri"], "tmp": ["mp", "tt", "nb", "cp", "size", "cur", "vt", "MP", "obj", "total", "buff", "perm", "ot", "snap", "max", "emp", "pkg", "T", "mm", "tar", "np", "lambda", "cmp", "prime", "rt", "out", "ctx", "jp", "ptr", "nt", "uu", "v", "tn", "tp", "tf", "td", "ta", "top", "Temp", "inter", "ind", "cv", "alpha", "m", "tm", "pre", "mk", "beta", "sam", "attr", "mb", "t", "clip", "offset", "xy", "su", "txt", "temp", "elt", "yy", "p", "sp", "uv"], "j": ["jo", "bi", "oj", "bj", "obj", "jc", "json", "J", "jack", "it", "pt", "fr", "kid", "jit", "dj", "jas", "k", "jj", "aj", "jl", "bo", "jp", "uj", "js", "g", "ja", "y", "ph", "ind", "ij", "kj", "att", "br", "xy", " dj", "job", "jump", "z", "other", "ji", "n", "pr", "ge", "im", " J"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\tScanner sc = new Scanner(System.in);\\n\tint N = sc.nextInt();\\n\tint T = sc.nextInt();\\n\tint []hairetu1 = new int[N];\\n\tint []hairetu2 = new int[N];\\n\tfor(int i=0;i<N;i++) {\\n\t\thairetu1[i]=sc.nextInt();\\n\t\thairetu2[i]=sc.nextInt();\\n\t}\\nint count=0;\\n\tfor(int i=0;i<N;i++) {\\n\tif(hairetu2[i]<=T){\\n\t\tcount++;\\n\t}\\n\t\t}\\n\tif(count==0){\\n\t\tSystem.out.println(\"TLE\");\\n\t\tSystem.exit(0);\\n\t}\\n\t\\n\tint z=0;\\n\tint []hairetu3 = new int[count];\\n\tfor(int i=0;i<N;i++) {\\n\t\tif(hairetu2[i]<=T){\\n\t\t\thairetu3[z]=hairetu1[i];\\n\t\t\tz++;\\n\t\t}\\n\t}\\n\tint min = hairetu3[0];\\n\tfor(int i=0;i<count;i++){\\n\t\tif(min>hairetu3[i]){\\n\t\t\tmin=hairetu3[i];\\n\t\t}\\n\t}\\n\tSystem.out.println(min);\\n\t}\\n\t}\\n\\n", "target": "8", "substitutes": {"sc": ["irc", "ch", "sync", "sb", "sw", "asc", "mc", "osc", "anc", "cr", "Sc", "arc", "sci", "c", "ctx", "inc", "cgi", "bc", "cc", "sys", "fc", "cont", "SC", "conv", "lc", "rc", "usc", "sec", "gc", "cl", "scan", "ss", "pb", "nc", "sq", "tc", "cs", "system", "ck", "pc", "ctl", "dc", "isc", "desc", "capt", "sh", "scl", "sv", "sp", "esc"], "N": ["SIZE", "NI", "NG", "S", "NA", "J", "D", "NM", "NH", "K", "No", "ID", "Net", "Length", "Y", "Now", "Z", "P", "V", "NT", "nt", "M", "C", "X", "NO", "Ni", "NE", "Size", "NB", "I", "G", "TN", "FN", "Len", "CN", "Node", "R", "NL", "NR", "NN", "INT", "Count", "OUT", "Ns", "Num", "NC", "NS", "L", "B", "GN", "F", "n", "ND", "O", "SN", "AN", "Name"], "T": ["XT", "TG", "GT", "S", "TI", "J", "AT", "VT", "WT", "TM", "E", "K", "H", "Y", "LT", "Z", "P", "TR", "IT", "PT", "TS", "V", "TH", "M", "C", "I", "TT", "TN", "G", "R", "TA", "t", "L", "B", "F", "O", "Type", "TY"], "hairetu1": ["hairetur2", "haquireu4", "hairingtu1", "hairetuone", "hairecu81", "hairetur81", "haIREcu4", "haquiretuOne", "haireu3", "hairedu1", "haquiretu4", "hairelat4", "hairetuOne", "hairetn81", "haquireu1", "hairingtu4", "haIREtu81", "hairezu1", "hairesu1", "haireu4", "hairinglat4", "haIREcu2", "haireu1", "hairesuOne", "haIREcu1", "hairet4", "haIREtu4", "haIREtu1", "hairetur4", "hairezu01", "haquiretu1", "hairedu4", "hairetu01", "hairinglatone", "haIREtu2", "hairelatone", "hairecu1", "haireuOne", "hairetu81", "haquireu3", "haireduone", "haquiretu3", "hairezuone", "hairesu4", "hairetOne", "hairingtuone", "hairesu3", "hairelat1", "hairet1", "hairelat01", "hairinglat01", "hairinglat1", "hairecu4", "hairecu2", "hairetu4", "hairezu4", "haquireuOne", "hairetn4", "haIREcu81", "hairet3", "hairetur1", "hairingtu01", "hairetn2", "hairetn1", "hairedu01"], "hairetu2": ["hairecuor", "hairytu2", "hairestu2", "hairescu4", "hairezu5", "hairezu02", "hairytu5", "hairescu02", "hairenu1", "hairelat4", "hairenu2", "hairesu1", "hairyzu5", "hairemu2", "hairelat02", "hairescu1", "hairestaor", "hairytu3", "hairynu2", "hairetu02", "hairynu1", "hairelat2", "hairestu02", "hairytu02", "hairestu4", "hairynu02", "hairechu02", "hairesu02", "hairechu2", "hairemu4", "hairechu5", "hairynu3", "hairecu1", "hairestu1", "hairytu1", "hairechu4", "hairescuor", "hairetuor", "hairemu5", "hairesta2", "hairelat1", "hairesu2", "hairesu3", "hairytu4", "hairemu1", "hairecu3", "hairecu02", "hairecu2", "hairelator", "hairecu4", "hairescu2", "hairetu4", "hairezu4", "hairyzu02", "hairestuor", "hairesta4", "hairetu5", "hairemu02", "hairyzu4", "hairyzu2", "hairesta1", "hairenu3", "hairenu02", "hairezu2"], "i": ["multi", "list", "si", "ip", "set", "chain", "zi", "di", "ion", "point", "ini", "iy", "me", "info", "hi", "phi", "it", "s", "ie", "um", "o", "qi", "x", "cgi", "y", "sim", "name", "uri", "q", "init", "ami", "ori", "asi", "gi", "ii", "to", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "source", "dr", "iti", "ei", "this", "g", "j", "io", "I", "ind", "ij", "is", "li", "ex", "ui", "client", "ix", "eric", "ti", "ai", "port", "xi", "pi", "ice", "parent", "mi", "v", "ity", "ci", "iso", "id", "oi", "f", "iq", "m", "ki", "\u0438", "batch", "eu", "fi", "im", "u", "wi"], "count": ["result", "scroll", "nb", "size", "list", "total", "false", "nn", "check", "set", "cycle", "zip", "test", "status", "all", "now", "l", "sum", "counter", "cd", "found", "k", "Z", "x", "c", "amount", "frequency", "common", "find", "nt", "cc", "v", "C", "cont", "current", "f", "number", "NB", "length", "ind", "CC", "q", "index", "cond", "gc", "cz", "cl", "call", "zero", "Count", "ount", "base", "L", "num", "mount", "ct", "n", "code", "p", "reset"], "z": ["size", "qq", "nz", "check", "set", "w", "zip", "az", "ez", "gl", "o", "l", "zi", "zh", "ld", "uz", "k", "Z", "x", "c", "d", "g", "tz", "v", "y", "j", "zz", "h", "q", "iz", "zy", "zo", "cond", "cz", "cl", "gz", "zone", "t", "hz", "zer", "rand", "n", "p", "ze"], "hairetu3": ["haquirenuz", "hairingnu3", "hairelu4", "hairytuensions", "hairedu4", "hairedu03", "hairyzu03", "haquirenu4", "hairetur3", "hairotu4", "haironuuster", "haironu3", "hairezu4", "hairetuuster", "haquiretuz", "hairelat23", "hairetn5", "hairelu7", "hairegnu3", "haquirenu3", "hairetu7", "haireu3", "hairedu3", "hairecu7", "hairecu03", "hairingtu23", "haironu15", "hairinglu7", "hairelu23", "hairinglu4", "hairetur15", "hairezu03", "hairezu3", "haquiretu3", "hairemu3", "hairenuuster", "hairenu15", "hairyzu3", "hairetu4", "haquiretu5", "hairetu5", "hairetu23", "hairyzu4", "hairenu3", "hairenu5", "hairyzuensions", "hairingtu7", "hairetuz", "haquiretu4", "hairegnu5", "hairinglu3", "hairetn15", "hairetnz", "hairytu3", "hairotu15", "hairingnu03", "hairingtu03", "hairenu4", "hairelat3", "hairemu4", "hairecu3", "hairetnuster", "hairemu7", "hairemu23", "hairenu7", "hairotuuster", "hairytu4", "hairezuensions", "hairegnuz", "hairetn3", "hairetuensions", "haireu7", "haquirenu5", "hairytu03", "hairelat4", "hairotu3", "haireu03", "hairingtu4", "hairetur4", "haireduensions", "hairingnu7", "hairetu03", "hairinglu23", "hairelu3", "hairetu15", "hairelat7", "haironu4", "hairegnu4", "hairetn4", "haireturuster", "hairenu03", "hairenuensions", "hairingtu3", "hairenuz"], "min": ["part", "lt", "max", "diff", "local", "low", "aug", "consider", "from", "dim", "mine", "best", "amin", "step", "sum", "lower", "margin", "med", "common", "reset", "Minimum", "v", "lock", "mod", "only", "start", "default", "mint", "minute", "j", "Mini", "just", "mini", "star", "init", "m", "beta", "pre", "mins", "minimum", "sort", "MIN", "suggest", "dist", "Min", "rand", "emin", "temp", "mean", "small", "second"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner input = new Scanner(System.in);\\n\t\tint A = input.nextInt();\\n\t\tint B = input.nextInt();\\n\t\tSystem.out.println(A<10&&B<10?A*B:-1);\\n\t}\\n}", "target": "58", "substitutes": {"input": ["submit", "in", "add", " inputs", "focus", "open", "human", "utils", "Input", "quick", "unsigned", "source", " feedback", "image", "sum", "char", "out", " Input", "get", "format", "inc", "parse", "sin", "iterator", "socket", "sys", "proc", "conn", "start", "config", "search", "parser", "q", "pattern", "service", "init", "index", "view", "subject", "agent", "reader", "sq", "system", "output", "raw", "select", " gadget", "client", "inner", "er", "kernel", " incoming"], "A": ["AY", "AB", "S", "AT", "PUT", "D", "This", "BA", "PA", "T", "AF", "mA", "K", "ESS", "EA", "AC", "AGE", "JA", "ATA", "As", "P", "HA", "RA", "AD", "AH", "CA", "V", "SA", "AV", "ACC", "M", "ACT", "C", "X", "LA", "AR", "a", "AA", "R", "TA", "AL", "IA", "GA", "AP", "L", "AU", "AST", "API", "N", "AN", "An"], "B": ["UB", "AB", "Bs", "S", "BR", "J", "BB", "BF", "D", "BER", "BA", "RB", "T", "CB", "E", "b", "IB", "VB", "Y", "USB", "MB", "Z", "P", "BY", "TB", "V", "M", "C", "SB", "BC", "WB", "NB", "G", "I", "BE", "BI", "OB", "R", "Bar", "EB", "FB", "LB", "BL", "L", "F", "Q", "N", "O", "DB"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tStringBuilder sb = new StringBuilder();\\n\t\tint n = sc.nextInt()+1;\\n\t\tint[] a = new int[n];\\n\t\tint[] b = new int[n - 1];\\n\t\tlong sum = 0;\\n\t\tfor (int i = 0; i < n; i++)\\n\t\t\ta[i] = sc.nextInt();\\n\t\tfor (int i = 0; i < n - 1; i++)\\n\t\t\tb[i] = sc.nextInt();\\n\t\tfor (int i = 0; i < n-1; i++) {\\n\t\t\tif (b[i] > a[i]) {\\n\t\t\t\tsum += a[i];\\n\t\t\t\tb[i] = b[i] - a[i];\\n\t\t\t\tif (b[i] > a[i + 1]) {\\n\t\t\t\t\tsum += a[i + 1];\\n\t\t\t\t\ta[i + 1] = 0;\\n\t\t\t\t} else {\\n\t\t\t\t\tsum += b[i];\\n\t\t\t\t\ta[i + 1] = a[i + 1] - b[i];\\n\t\t\t\t}\\n\t\t\t}else {\\n\t\t\t\tsum += b[i];\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(sum);\\n\t}\\n}", "target": "159", "substitutes": {"sc": ["irc", "si", "ch", "sync", "cle", "asc", "mc", "osc", "ctrl", "ec", "Sc", "sel", "sci", "c", "ctx", "inc", "bc", "cc", "sys", "co", "fc", "proc", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "nc", "system", "cs", "sq", "ck", "se", "usr", "pc", "ctl", "ser", "psc", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "sb": ["Bs", "si", "bb", "buff", "sf", "sm", "bs", "gb", "ob", "db", "bf", "bt", "SB", "cb", "st", "sg", " SB", "pb", "sq", "se", "bp", "su", "sa", "bm", "sql", "sh", "sv", "sp", "bn"], "n": ["nb", "en", "nn", "names", "non", "network", "all", "ll", "none", "o", "l", "np", "ns", "pi", "x", "out", "c", "d", "un", "comm", "g", "norm", "nm", "nt", "v", "no", "ng", "on", "name", "j", "ren", "pos", "sn", "q", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "dn", "N", "ct", "inn", "p", "note", "mn"], "a": ["ap", "an", "la", "av", "ba", "ab", "eas", "add", "da", "at", "ea", "ai", "au", "it", "obj", "s", "cache", "ee", "all", "o", "l", "aaa", "aj", "area", "aux", "el", "c", "am", "A", "act", "ar", "err", "ia", "ta", "j", "f", "ma", "ao", "va", "ack", "alpha", "ac", "ae", "app", "ach", "m", "ga", "oa", "aa", "as", "att", "sta", "na", "pa", "apa", "br", "sa", "ca", "ed", "p", "al", "u"], "b": ["nb", "bi", "ba", "ab", "bl", "bb", "ib", "fb", "buff", "bas", "it", "s", "wb", "e", "o", "eb", "lib", "l", "bs", "ob", "gb", "bo", "db", "bin", "c", "bg", "g", "r", "bc", "v", "bf", "y", "bar", "cb", "arb", "j", "f", "back", "app", "body", "beta", "buffer", "pb", "mb", "blue", "bis", "bp", "br", "t", "base", "z", "B", "rb", "p", "be", "u"], "sum": ["result", "summary", " sums", "size", "si", "total", "vol", "success", "cache", "gam", "um", "dim", "cal", " SUM", "comment", "test", "cum", "sem", "out", "mix", "parse", "cos", "dump", "mass", "black", "mod", "sim", "fac", "score", "gram", "cu", "process", "sat", "hash", "Sum", "index", "sam", "ss", "tu", "hum", "stack", "use", "frac", "us", "loss", "zero", "se", "acc", "stat", "num", "su", "ums", "sa", "mem", "count", "match", "umm", "mean", "average", "temp", "sample"], "i": ["multi", "list", "si", "ip", "set", "ico", "chain", "l", "zi", "di", "ion", "my", "point", "ini", "err", "iy", "me", "info", "hi", "phi", "it", "ie", "status", "o", "qi", "x", "ik", "y", "sim", "name", "ia", "uri", "q", "init", "index", "ori", "ii", "gi", "cli", "ji", "ic", "ri", "fire", "bi", "iter", "iu", "gu", "key", "et", "uli", "ios", "ei", "this", "iri", "g", "isi", "j", "io", "ni", "ind", "print", "ij", "is", "li", "ui", "client", "ix", "ies", "ti", "ai", "xi", "pi", "ice", "mi", "v", "ity", "ci", "iso", "oi", "id", "m", "ki", "batch", "ims", "fi", "im", "u"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.*;\\n\\npublic class Main {\\n    private static Scanner sc;\\n    public static void main(String[] args) {\\n        Main instance = new Main();\\n        sc = instance.new Scanner();\\n        instance.solve();\\n    }\\n\\n    private void solve() {\\n        try {\\n            int N = sc.nextInt();\\n            int Q = sc.nextInt();\\n            String S = sc.next();\\n            String R = new StringBuffer(S).reverse().toString();\\n            int[] l = new int[S.length()];\\n            int[] r = new int[S.length()];\\n            Arrays.fill(l, 0);\\n            Arrays.fill(r, 0);\\n            int tmpl = 0;\\n            int tmpr = 0;\\n            for (int i = 1; i < S.length(); i++) {\\n                l[i] = tmpl;\\n                if (S.charAt(i-1) == 'A' && S.charAt(i) == 'C') {\\n                    tmpl++;\\n                    l[i] = tmpl;\\n                }\\n\\n                r[i] = tmpr;\\n                if (R.charAt(i-1) == 'C' && R.charAt(i) == 'A') {\\n                    tmpr++;\\n                    r[i] = tmpr;\\n                }\\n            }\\n            int a, b;\\n            for (int i = 0; i < Q; i++) {\\n                a = sc.nextInt();\\n                b = sc.nextInt();\\n                System.out.println(tmpl - l[a-1] - r[S.length()-b]);\\n            }\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n        }\\n    }\\n\\n    private class Scanner {\\n        String[] s;\\n        int i;\\n        BufferedReader br;\\n        String regex = \" \";\\n\\n        public Scanner() {\\n            s = new String[0];\\n            i = 0;\\n            br = new BufferedReader(new InputStreamReader(System.in));\\n        }\\n\\n        @Override\\n        protected void finalize() throws Throwable {\\n            try {\\n                super.finalize();\\n            } finally {\\n                destruction();\\n            }\\n        }\\n\\n        private void destruction() throws IOException {\\n            if (br != null) br.close();\\n        }\\n\\n        public String next() throws IOException {\\n            if (i < s.length) return s[i++];\\n            String st = br.readLine();\\n            while (st == \"\") st = br.readLine();\\n            s = st.split(regex, 0);\\n            i = 0;\\n            return s[i++];\\n        }\\n\\n        public int nextInt() throws NumberFormatException, IOException {\\n            return Integer.parseInt(next());\\n        }\\n\\n        public Long nextLong() throws NumberFormatException, IOException {\\n            return Long.parseLong(next());\\n        }\\n\\n        public Double nextDouble() throws NumberFormatException, IOException {\\n            return Double.parseDouble(next());\\n        }\\n    }\\n}", "target": "52", "substitutes": {"sc": ["mp", "irc", "ch", "sync", "sw", "cle", "asc", "mc", "osc", "tr", "ctrl", "cmp", " cle", "anc", "sac", "cr", "ec", "Sc", "sel", "ko", "c", "ctx", "sci", "cons", "sub", "inc", "bc", "cc", "fc", "proc", "co", "SC", "conv", "lc", " Sc", "rc", " SC", "ac", "usc", "sch", "sec", "exec", "gc", "cl", "sq", "nc", "cs", "tc", "sche", "exp", "se", "con", "pc", "ctl", "dc", "isc", "desc", "scl", "sh", "sp", "esc"], "instance": ["usage", "result", "shared", "create", "obj", "set", "setup", "local", "ANCE", "Instance", "ance", "master", "asso", "cmp", "aux", "anc", "x", "c", "this", "parent", "share", "member", "start", "inst", "f", "runner", "sup", "rc", "example", "init", "m", "command", "initial", "INST", "self", " inst", "once", "alloc", "original", "container", "amp", "client", "inner", "entry"], "N": ["J", "D", "T", "E", "K", "H", "Y", "Z", "P", "V", "M", "C", "X", "Ni", "I", "G", "NL", "NR", "NN", "Ns", "L", "NS", "B", "n", "O", "NC"], "Q": ["J", "IQ", "D", "T", "E", "K", "U", "H", "Y", "Z", "P", "V", "QU", "M", "C", "X", "NE", "CH", "W", "I", "G", "q", "MQ", "L", "B", "Qu", "F", "O"], "S": ["CS", "CSS", "RO", "SF", "SER", "T", "Source", "STR", "U", "SU", "US", "SL", "SE", "H", "SAM", "P", "TS", "A", "SM", "V", "SA", "Si", "ST", "M", "C", "RS", "X", "SB", "SI", "SC", "SR", "G", "I", "IS", "SP", "SO", "BS", "SSL", "SQL", "JS", "L", "NS", "B", "F", "SN", "SH", "SS"], "R": ["Reader", "RO", "Right", "BR", "J", "D", "RB", "HR", "T", "E", "DR", "Res", "U", "RT", "H", "Y", "Z", "P", "RM", "RA", "Rh", "TR", "RES", "A", "RH", "V", "RS", "C", "M", "Mr", "SR", "Jr", "RL", "G", "RP", "RC", "I", "NR", "RIP", "RI", "L", "B", "RR", "RE"], "l": ["fl", "la", "bl", "kl", "lt", "e", "local", "ll", "o", "lb", "ld", "loc", "el", "c", "lp", "tl", "lo", "g", "v", "ml", "hl", "j", "h", "f", "lc", "ell", "le", "ls", "m", "lr", "nl", "sl", "ln", "isl", "dl", "t", "li", "L", "z", "pl", "lis", "n", "p", "al", "u"], "r": ["e", "vr", "mr", "re", "fr", "tr", "rd", "dr", "rt", "cr", "c", "d", "nr", "or", "v", "ar", "err", "rl", "j", "res", "ren", "h", "rc", "rh", "q", "m", "sr", "lr", "rw", "rec", "rr", "rb", "pr", "n", "p", "er", "rs", "ru", "u", "ro"], "tmpl": ["timPL", "temple", "htmplates", "htmpl", "templ", "tmrepl", "mtPL", "tempr", "mtplate", "simpr", "timplates", "timrepl", "timpr", "simpl", "mtpr", "template", "tmplate", "htmrepl", "htmPL", "mtplates", "tmplates", "htmple", "timpl", "timplate", "mtple", "simplates", "htmpr", "tmple", "timple", "templates", "mtpl", "htmplate", "tmPL", "temPL", "mtrepl"], "tmpr": ["htmpl", "templ", "tembr", "tmr", "mtpos", "tempr", "temtr", "tmp", "mtpro", "timp", "temPR", "temr", "tmtr", "timpr", "TMpl", "mtpr", "htmpt", "tempt", "mpl", "TMpos", "tmpt", "timpt", "mpr", "hmpr", "mbr", "timpl", "TMpr", "htmp", "hmr", "tempro", "hmpl", "hmpro", "htmpr", "mtPR", "tmbr", "tempos", "mtpl", "tmPR", "tmpos", "temp", "htmbr", "mtr", "tmpro", "TMPR", "htmtr"], "i": ["multi", "si", "iii", "ip", "PI", "chain", "zi", "di", "c", "ion", "my", "ini", "me", "info", "hi", "n", "p", "phi", "it", "ie", "status", "o", "qi", "x", "y", "ia", "uri", "init", "ami", "index", "ori", "gi", "ii", "to", "cli", "ji", "ic", "ri", "bi", "iu", "ei", "g", "j", "io", "ni", "I", "ij", "t", "is", "li", "ui", "ix", "yi", "ti", "ai", "xi", "pi", "parent", "mi", "ity", "v", "ci", "id", "oi", "f", "m", "ki", "\u0438", "batch", "fi", "im"], "a": ["an", "la", "ba", "ab", "si", "ea", "at", "ai", "e", "w", "o", "aaa", "pi", "x", "c", "am", "d", "A", "act", "ia", "ta", "f", "ao", "va", "alpha", "le", "ac", "ae", "ata", "xa", "oa", "aa", "sta", "as", "to", "apa", "pa", "fa", "sa", "ca", "n", "p", "u"], "b": ["nb", "bi", "ba", "ab", "bl", "be", "bb", "fb", "ib", "e", "sb", "it", "w", "o", "eb", "bs", "ob", "by", "db", "bo", "c", "d", "bc", "v", "y", "j", "f", "h", "back", "beta", "m", "batch", "mb", "blue", "bis", "t", "base", "z", "B", "rb", "n", "p", "u"], "s": ["ms", "space", "sts", "ds", "ns", "bs", "c", "ts", "js", "str", "g", "v", "ats", "y", "h", "gs", "ls", "m", "ss", "sq", "cs", "os", "t", "ps", "is", "n", "p", "sv", "rs"], "br": ["ber", "bsp", "bi", "bl", "ba", "hr", "kr", "Tr", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "buf", "dr", "bd", "bs", "cr", "gr", "str", "bh", "bc", "brace", "bt", "bridge", "lr", "itter", "shr", "usr", "bp", "bm", "pr", "bro", "Fr", "bn"], "regex": ["recpattern", "reccre", "recx", "mx", "mcre", "repattern", "mpattern", "mgex", "Recre", "recgex", "Repattern", "Rex", "rex", "recre", "Regex"]}}
{"code": "import java.util.*;\\nimport static java.lang.Math.*;\\nimport java.math.BigInteger;\\n\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\t// \u5165\u529b\\n\t\tString s = sc.next();\\n\t\tString t = sc.next();\\n\t\t\\n\t\t// \u8a08\u7b97\\n\t\tString result = \"No\";\\n\t\tfor(int i = 0; i < s.length(); i++){\\n\t\t    String now = s.substring(i, s.length()) + s.substring(0, i);\\n\t\t    if(now.equals(t)) result = \"Yes\";\\n\t\t}\\n\t\t\\n\t\t// \u51fa\u529b\\n\t\tSystem.out.println(result);\\n\t}\\n}\\n", "target": "220", "substitutes": {"sc": [" scr", " ser", "ch", "sb", " cons", "sk", " scorer", " sn", "Scan", "Sc", " sh", "sys", "SC", " Sc", "rc", " SC", "sch", "scan", "ss", "cs", " sk", "ser", " sp", "sa", " rc", " unsc", "n", " enc"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint A=sc.nextInt(),B=sc.nextInt();\\n\t\tint temp = A+B;\\n\t\tif(A-B > temp) temp = A-B;\\n\t\tif(A*B > temp) temp = A*B;\\n\t\tSystem.out.println(temp);\\n\t}\\n}\\n", "target": "188", "substitutes": {"sc": ["ch", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "out", "c", "ctx", "inc", "g", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "exec", "gc", "scan", "ss", "cl", "nc", "system", "tc", "cs", "sq", "se", "pc", "ctl", "ser", "acc", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "A": ["AB", "At", "AT", "This", "PA", "AF", "mA", "EA", "AC", "U", "AGE", "JA", "AI", "H", "Area", "As", "P", "HA", "AS", "RA", "AH", "V", "CA", "MA", "ASC", "SA", "AV", "ACC", "M", "C", "ACT", "Array", "AE", "Alpha", "LA", "AR", "a", "G", "I", "alpha", "AA", "ANY", "AL", "AX", "IA", "GA", "AP", "L", "AU", "All", "API", "Ax", "AN", "An"], "B": ["Bo", "AB", "S", "BR", "BB", "J", "BU", "D", "RB", "BA", "T", "CB", "Builder", "b", "IB", "VB", "H", "Y", "USB", "OR", "Z", "BY", "BT", "Bern", "TB", "Blue", "V", "BO", "M", "C", "SB", "BC", "WB", "NB", "G", "I", "BE", "BI", "OB", "Bar", "FB", "EB", "LB", "Other", "BL", "BM", "L", "Ber", "JB", "GB", "Q", "F", "N", "BW", "DB"], "temp": ["dem", "mp", "result", "perature", "relative", "cur", "partial", "total", "iter", "tmp", "level", "emp", "PUT", "pt", "test", "T", "status", "term", "adjusted", "sequence", "cum", "w", "EMP", "clean", "tr", "cap", "tim", "sum", "stem", "mag", "tem", "format", "this", "trace", "ptr", "deg", "v", "type", "mod", "fac", "current", "dat", "cont", "ta", "make", "cu", "Temp", "length", "nom", "m", "index", "tm", "fake", "buffer", "pretty", "hum", "tc", "output", "method", "valid", "t", "hex", "base", "dest", "txt", "div", "em", "orig", "p", "Temperature", "stop"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws IOException {\\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\\n        String s=br.readLine().trim();\\n        long res=0;\\n        for(int i=0;i<s.length();i++){\\n            res+=(Integer.parseInt(String.valueOf(s.charAt(i))));\\n        }\\n        if(res%9==0){\\n            System.out.println(\"Yes\");\\n        }\\n        else{\\n            System.out.println(\"No\");\\n        }\\n\\n\\n\\n\\n\\n    }\\n\\n\\n\\n\\n\\n\\n\\n}\\n", "target": "93", "substitutes": {"br": ["wr", "bsp", "ber", "hr", "bl", "ba", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "buf", "dr", "bd", "bs", "cr", "db", "gr", "nr", "str", "bh", "bc", "yr", "bt", "sp", "bridge", "lr", "sr", "bp", "rb", "bm", "pr", "div", "ctr", "be", "bro", "bn", "ro"], "s": ["ms", "S", "ws", "sts", "sb", "sf", "sw", "sol", "source", "csv", "l", "b", "ns", "strings", "bs", "c", "ts", "js", "str", "g", "r", "v", "ats", "its", "xs", "bits", "gs", "st", "string", "ls", "ss", "abs", "sq", "qs", "less", "os", "t", "ps", "is", "n", "sql", "p", "sv", "rs", "sp"], "res": ["resh", "result", "des", "ms", "resp", "total", "vol", "yes", "max", "ress", "sol", "red", "rem", "re", "chain", "ver", "expr", "Res", "req", "mont", "sum", "reed", "out", "RES", "def", "gr", "rel", "off", "r", "ret", "fac", "j", "rc", "hash", "rest", "cond", "pas", "os", "ps", "rand", "stock", "pres", "n", "val", "reset", "ro"], "i": ["yi", "bi", "in", "multi", "si", "ti", "ai", "ip", "it", "gu", "ie", "key", "o", "chain", "l", "xi", "di", "pi", "qi", "x", "c", "ei", "my", "mi", "point", "ini", "ci", "y", "j", "io", "a", "uri", "ma", "I", "ind", "q", "ij", "me", "m", "ii", "gi", "us", "is", "li", "hi", "ui", "cli", "n", "ji", "inner", "ix", "p", "im", "ic", "phi", "u"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Scanner;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint integerX = sc.nextInt();  //\u5143\u306e\u6574\u6570\\n\t\tint youso = sc.nextInt();  //\u6574\u6570\u5217\u306e\u8981\u7d20\u6570\\n\t\tList<Integer> list = new ArrayList<Integer>();  //\u6574\u6570\u5217\u3092\u5165\u308c\u308b\u30ea\u30b9\u30c8\\n\\n\t\t//\u914d\u5217\u3092\u5165\u529b\\n\t\tfor(int i=0 ; i<youso ; i++) {\\n\t\t\tlist.add(sc.nextInt());\\n\t\t}\\n\\n\t\t//\u914d\u5217\u304c\u7a7a\u307e\u305f\u306f\u6574\u6570X\u304c\u542b\u307e\u308c\u306a\u3044\u5834\u5408\\n\t\tif(list.isEmpty() || ! list.contains(integerX)) {\\n\t\t\tSystem.out.println(integerX);\\n\t\t\treturn;\\n\t\t}\\n\\n\t\t//\u6574\u6570X\u304b\u30891\u305a\u3064\u8db3\u3057\u5f15\u304d\u3057\u3066\u3044\u304f\\n\t\tfor(int i=1 ; i<=100 ; i++) {\\n\t\t\tif(! list.contains(integerX-i)) {\\n\t\t\t\tSystem.out.println(integerX-i);\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\telse if(! list.contains(integerX+i)) {\\n\t\t\t\tSystem.out.println(integerX+i);\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\t\tsc.close();\\n\t}\\n}", "target": "228", "substitutes": {"sc": ["ch", "sb", "sw", "cam", "asc", "mc", "osc", "sac", "cr", "ec", "Sc", "c", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "uc", "nc", "system", "sq", "cs", "tk", "pc", "capt", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "integerX": [" numberX", "integerV", " numberXXX", "integerZ", "numberV", "numberX", "numberXXX", "integerXXX", " integerV", " integerXXX", " numberZ", " integerZ", "numberZ", " numberV"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        String n = sc.next();\\n        sc.close();\\n\\n        String ans = \"\";\\n        for (int i = 0; i < n.length(); i++) {\\n            if (n.charAt(i) == '1') {\\n                ans += \"9\";\\n            } else {\\n                ans += \"1\";\\n            }\\n        }\\n        System.out.println(ans);\\n    }\\n\\n}\\n", "target": "111", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "ec", "Sc", "ko", "arc", "c", "sub", "inc", "dec", "bc", "cc", "sys", "fc", "SC", "lc", "rc", "RC", "usc", "sec", "sch", "nl", "gc", "cl", "scan", "uc", "nc", "sq", "tc", "cs", "ck", "pc", "ser", "isc", "capt", "syn", "sh", "scl", "sv", "sp", "esc"], "n": ["nv", "rn", "nn", "sen", "nw", "s", "ll", "o", "l", "np", "ns", "c", "d", "nr", "g", "r", "nm", "nt", "norm", "tn", "ng", "j", "ren", "sn", "fn", "nu", "nl", "nc", "ln", "ne", "t", "na", "cn", "num", "dn", "N", "gn", "p", "note", "mn"], "ans": ["an", "angs", "uns", "ars", "anks", "ians", "ms", "ents", "acs", "mas", "s", "orts", "ds", "asms", "rans", "aos", "aps", "ann", "arms", "ons", "ns", "ins", "outs", "aus", "ids", "ros", "urs", "ks", "atts", "arts", "vs", "ys", " means", "ats", "sets", "ras", "olds", "ants", "eps", "xs", "posts", "ANS", "gs", "ads", "ls", " beans", "san", "cs", "as", "ps", "offs", "amps", "ens", "rs", "AN", "ols", "leans", "eds"], "i": ["yi", "bi", "in", "multi", "si", "ti", "ai", "e", "it", "iu", "gu", "key", "zi", "xi", "di", "pi", "qi", "x", "c", "ei", "g", "my", "mi", "ini", "ci", "y", "oi", "id", "j", "a", "I", "ind", "q", "init", "m", "index", "ori", "ki", "\u0438", "gi", "ii", "us", "slice", "ski", "is", "li", "ex", "hi", "ui", "cli", "sql", "ji", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint a,b;\\n\t\tint d,r;\\n\t\tdouble f;\\n\\n\t\ta = scan.nextInt();\\n\t\tb = scan.nextInt();\\n\\n\t\td = a / b;\\n\t\tr = a % b;\\n\t\tf = (double)a / (double)b;\\n\\n\t\tSystem.out.printf(\"%d %d %.5f\\n\", d, r, f);\\n\t}\\n}", "target": "90", "substitutes": {"scan": ["an", "query", "in", "scroll", "report", "ch", "nn", "sb", "check", "set", "read", "send", "connect", "re", "ann", "see", "k", "sum", "by", "row", "out", "x", "sc", "g", "parse", "ner", "find", "skip", "sys", "proc", "sin", "black", "sim", "range", "search", "can", "reach", "m", "gc", "gate", "san", "system", "info", "sort", "se", "acc", "util", "stat", "n", "sql", "sur", "sv", "Scan", " scanner"], "a": ["an", "la", "add", "\u00e1", "ab", "eas", "ba", "da", "at", "ea", "ai", "ra", "e", "au", "s", "ace", "w", " at", "aka", "ax", "l", "aaa", "aj", "area", "c", "i", "am", "A", "act", "ity", "ar", "ia", "ak", "ta", "ma", "h", "ao", "va", "app", "ac", "ae", "alpha", "m", "abs", "oa", "aa", "as", "t", "sta", "to", "apa", "sa", "ca", "p", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "sb", "wb", "eb", "ben", "l", "bs", "gb", "ob", "bin", "bo", "db", "i", "c", "g", "bc", "v", "bf", "bt", "bar", "cb", "y", "j", "length", "beta", "m", "mb", "blue", "bis", "bp", "br", "t", "base", "z", "B", "rb", "n"], "d": ["dx", "dt", "da", "nd", "md", "ds", "D", "fd", "ord", "red", "dir", "ld", "dr", "di", "cd", "bd", "dd", "db", "x", "ad", "c", "def", "draw", "sd", "df", "dig", "dev", "debug", "dm", "data", "dh", "n", "div", "ed", "dl"], "r": ["hr", "ra", "mr", "ro", "rem", "re", "fr", "tr", "rd", "dr", "rt", "cr", "rel", "nr", "rg", "ar", "range", "rm", "res", "rc", "rf", "sr", "ur", "rx", "lr", "R", "rr", "rb", "pr", "er", "rs", "rar", "ri"], "f": ["fl", "fp", "uf", "alf", "fb", "e", "sf", "s", "w", "fd", "fort", "o", "fr", "xf", "l", "p", "c", "i", "ff", "v", "fc", "bf", "fac", "tf", "h", "df", "m", "fm", "rf", "t", "F", "fi", "ef", "fs"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        String wrongA;\\n        String wrongB;\\n\\n        Scanner scanner = new Scanner(System.in);\\n        wrongA = scanner.nextLine();\\n        wrongB = scanner.nextLine();\\n        scanner.close();\\n\\n        if (!\"1\".equals(wrongA) && !\"1\".equals(wrongB)) {\\n            System.out.println(\"1\");\\n        } else if (!\"2\".equals(wrongA) && !\"2\".equals(wrongB)) {\\n            System.out.println(\"2\");\\n        } else if (!\"3\".equals(wrongA) && !\"3\".equals(wrongB)) {\\n            System.out.println(\"3\");\\n        }\\n\\n    }\\n}", "target": "236", "substitutes": {"wrongA": ["wrongAn", "lostD", "problemAn", "correctA", "wrongY", "wrongK", "problemY", "correctAg", "batch1", "unknownAn", "wrongAR", "batchAn", "batchA", "lostAB", "correctY", "correctAn", "correctAB", "unknownAnd", "correctAR", "akaCA", "correctCA", "importantAn", "dirtyAn", "wrongD", "wrongCA", "importantAnd", "unknown1", "problemAR", "wrongC", "correctESS", "wrongAnd", "problemA", "dirtyAR", "correctD", "wrongAB", "unknownA", "lostK", "dirtyA", "akaAg", " wrongAR", "problemAB", "correctC", "problemESS", "akaD", "problemAg", " wrongC", "lostA", "importantA", "akaA", " wrongESS", "correctK", "problemCA", "problemC", "wrong1", "batchAnd", "problemD", "wrongAg", "wrongESS", "important1", "dirtyY", "problemK"], "wrongB": ["thinkTwo", "wrongBL", "correctA", "lost2", " incorrectSB", "problemFB", "correctTwo", "importantG", " incorrectB", "problemB", " wrongBR", "problemJB", "rightB", "rightSB", "lostJB", "correctN", "wrongBR", "problemN", "rightEB", "correctBR", "correct2", "lostB", " wrongBB", "thinkBR", "problem2", "correctFB", "correctBL", "correctBB", "wrongG", "problemA", "thinkBB", "importantBB", "akaG", "wrongSB", "correctOB", "rightBB", "correctEB", "correctB", "wrong2", " incorrectEB", "importantFB", "importantOB", "wrongOB", "thinkB", "correctSB", "wrongTwo", "wrongEB", "akaB", "correctG", "wrongBB", "problemBB", " wrongTwo", "wrongN", "lostA", " incorrectBB", "importantB", "importantN", "akaOB", "wrongFB", "importantBL", "akaBL", "wrongJB", "correctJB"], "scanner": [" Scanener", "canner", "reachner", "terminter", "scannel", "Scanter", "Scanning", "caner", " scanning", "scanter", "Scannel", "canener", " scanter", " scanener", "reachener", "reachnel", "scanning", "catner", "Scaner", "reachter", " Scanner", "catter", " Scaner", "catning", " scannel", "canter", " Scanter", "scanener", "Scanener", "terminener", "terminner", "canning", "terminning", "catener", "Scanner", "scaner"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.Arrays;\\n\\npublic class Main {\\n    private static Scanner sc;\\n    public static void main(String[] args) {\\n        Main instance = new Main();\\n        sc = instance.new Scanner();\\n        instance.solve();\\n    }\\n\\n    private void solve() {\\n        try {\\n            int n = sc.nextInt();\\n            int[] d = new int[n];\\n            for (int i = 0; i < n; i++) {\\n                d[i] = sc.nextInt();\\n            }\\n            Arrays.sort(d);\\n\\n            int count = 0;\\n\\n            System.out.println(d[n/2] - d[n/2-1]);\\n\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n        }\\n    }\\n\\n    private class Scanner {\\n        String[] s;\\n        int i;\\n        BufferedReader br;\\n        String regex = \" \";\\n\\n        public Scanner() {\\n            s = new String[0];\\n            i = 0;\\n            br = new BufferedReader(new InputStreamReader(System.in));\\n        }\\n\\n        @Override\\n        protected void finalize() throws Throwable {\\n            try {\\n                super.finalize();\\n            } finally {\\n                destruction();\\n            }\\n        }\\n\\n        private void destruction() throws IOException {\\n            if (br != null) br.close();\\n        }\\n\\n        public String next() throws IOException {\\n            if (i < s.length) return s[i++];\\n            String st = br.readLine();\\n            while (st == \"\") st = br.readLine();\\n            s = st.split(regex, 0);\\n            i = 0;\\n            return s[i++];\\n        }\\n\\n        public int nextInt() throws NumberFormatException, IOException {\\n            return Integer.parseInt(next());\\n        }\\n\\n        public Long nextLong() throws NumberFormatException, IOException {\\n            return Long.parseLong(next());\\n        }\\n\\n        public Double nextDouble() throws NumberFormatException, IOException {\\n            return Double.parseDouble(next());\\n        }\\n    }\\n}", "target": "119", "substitutes": {"sc": ["mp", " scr", "ch", "sync", "cle", "cam", "asc", "mc", "osc", "cmp", " cle", "anc", "sac", "cr", "ec", "Sc", "arc", "c", "ctx", "bc", "cc", "fc", "proc", "co", "SC", "conv", "lc", "cv", "rc", "usc", "sch", "sec", "gc", "cl", "uc", "pb", "nc", "sq", "cs", "tc", "ssl", "pc", "dc", "ctl", " unsc", "isc", "capt", "scl", "sh", "cu", "sv", "sp", "esc"], "instance": ["result", "shared", "obj", "tmp", "ace", "up", "set", "setup", "local", "engine", "ANCE", "Instance", "ance", "master", "image", "asso", "cmp", "aux", "anc", "x", "impl", "c", "this", "parent", "share", "default", "inst", "a", "f", "runner", "sup", "rc", "installed", "example", "m", "command", "INST", "initial", "self", " inst", "alloc", "amp", "client", "sample", "ances", "inner"], "n": ["nb", "en", "ot", "nn", "names", "nw", "nat", "all", "ll", "o", "l", "np", "ns", "x", "c", "out", "un", "g", "r", "nm", "nt", "v", "norm", "no", "ng", "name", "j", "ren", "number", "sn", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "num", "net", "cn", "len", "N", "p", "mn"], "d": ["dates", "des", "dt", "da", "nd", "e", "dict", "ds", "D", "diff", "dim", "fd", "red", "dos", "o", "l", "ld", "b", "dr", "di", "del", "cd", "dd", "db", "dra", "out", "c", "ad", "def", "g", "r", "days", "v", "mod", "dat", "sd", "td", "df", "de", "ind", "m", "pd", "debug", "dl", "data", "dh", "div", "p"], "i": ["in", "multi", "si", "ip", "set", "chain", "zi", "di", "c", "my", "point", "ini", "load", "me", "info", "hi", "p", "phi", "it", "ie", "status", "o", "b", "qi", "y", "sim", "uri", "h", "q", "init", "ami", "index", "ii", "gi", "us", "cli", "ji", "inner", "ri", "fire", "bi", "iu", "ei", "j", "io", "I", "ind", "print", "ij", "t", "is", "li", "ui", "client", "ix", "ti", "ai", "e", "xi", "pi", "mi", "v", "ci", "id", "oi", "iq", "m", "ki", "batch", "ims", "fi", "im", "u"], "count": ["usage", "order", "size", "list", "set", "cache", "max", "counter", "found", "c", "amount", "flag", "nt", "ref", "no", "start", "number", "length", "index", "Count", "t", "ount", "stat", "code", "num", "ctr", "map", "col"], "s": ["ings", "ies", "ses", "ms", "parts", "ents", "S", "ws", "sts", "names", "sb", "ds", "w", "ments", "ubs", "als", "es", "erences", "ests", "b", "ns", "ins", "services", "strings", "bs", "tes", "ts", "js", "str", "v", "ats", "its", "h", "ants", "xs", "gs", "prints", "ls", "m", "fs", "ss", "sq", "cs", "qs", "os", "ims", "ps", "is", "resses", "p", "sv", "rs", "hs", "gets", "ids", "eds"], "br": ["ber", "wr", "bi", "hr", "bl", "ba", "kr", "ch", "BR", "Br", "vr", "mr", "block", "fr", "eb", "tr", "b", "buf", "dr", "bd", "bs", "cr", "jp", "rel", "gr", "bg", "str", "r", "bh", "bc", "brace", "bt", "cb", "sp", "bridge", "reg", "lr", "mk", "shr", "bp", "bre", "rb", "bm", "pr", "nah", "be", "bro", "bn"], "regex": ["cregex", "resourcevision", "crevision", "repegex", "erecre", "repattern", "rupattern", "eresex", "crerex", "repecre", "resourcentax", "recre", " rerex", "rucre", "erepattern", "rerex", "rugex", "repepattern", " rentax", "resourcegex", "resex", "repesex", "rusex", "resourcerex", "eregex", "crentax", "revision", "rentax", " revision"], "st": ["tt", "irst", "bl", "part", "std", "nd", " est", "ste", "obj", "ost", "sts", "src", "tmp", "sw", "mt", "set", "last", "stop", "fr", "sty", "l", "ld", "dr", "step", "th", "stri", "cr", "ust", "str", "r", "nt", "ST", "kt", "sth", "bt", "cont", "start", "ut", "back", "stage", "rest", "ss", "stable", "stack", "se", "sta", "t", "St", "ct", "sh", "sv", "sp", "est"]}}
{"code": "\\nimport java.util.Scanner;\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tlong a=sc.nextLong();\\n\t\tlong b=sc.nextLong();\\n\t\tlong c=sc.nextLong();\\n\t\tlong d=sc.nextLong();\\n\t\t\\n\t\tlong x=0;\\n\t\t\\n\t\tif(b<=0 && c<=0) {\\n\t\t\tx=a*c;\\n\t\t}\\n\t\telse if(a>=0&&d>=0){\\n\t\t\tx=b*d;\\n\t\t}\\n\t\telse if(b<=0&&c>=0) {\\n\t\t\tx=b*c;\\n\t\t}\\n\t\telse if(a>=0&&d<=0){\\n\t\t\tx=a*d;\\n\t\t}\\n\t\telse if(a<=0&&b>=0&&c<=0&&d>=0) {\\n\t\t\tif(a*c>=b*d) {\\n\t\t\t\tx=a*c;\\n\t\t\t}\\n\t\t\telse {\\n\t\t\t\tx=b*d;\\n\t\t\t}\\n\t\t}\\n\t\telse if(a<=0&&b>=0&&d<=0) {\\n\t\t\tx=a*c;\\n\t\t}\\n\t\telse if(a<=0&&b>=0&&c>=0) {\\n\t\t\tx=b*d;\\n\t\t}\\n\t\tSystem.out.println(x);\\n\t\tsc.close();\\n\t}\\n}", "target": "244", "substitutes": {"sc": ["ch", "sync", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "scope", "arc", "ctx", "inc", "bc", "cc", "sys", "fc", "cont", "co", "hl", "SC", "lc", "wx", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "nc", "system", "cs", "tc", "sq", "ck", "pc", "ctl", "isc", "syn", "desc", "scl", "capt", "sv", "sp", "esc"], "a": ["an", "aff", "la", "av", "ba", "ab", "af", "eas", "at", "ea", "ai", "au", "ah", "ee", "o", "ax", "l", "aaa", "aj", "area", "i", "am", "A", "era", "r", "act", "ar", "ia", "ak", "ta", "ma", "f", "j", "ao", "va", "alpha", "ac", "ae", "app", "ach", "abs", "ga", "oa", "aa", "as", "t", "att", "acc", "pa", "z", "sa", "ca", "n", "aq", "p", "al"], "b": ["nb", "bi", "an", "ba", "ab", "be", "bb", "ib", "fb", "e", "sb", "ch", "s", "it", "wb", "bu", "business", "o", "eb", "lib", "l", "ob", "bs", "gb", "bo", "db", "i", "sub", "bg", "g", "r", "bc", "v", "y", "bar", "cb", "f", "obj", "app", "ac", "http", "beta", "mb", "ga", "bis", "as", "t", "br", "to", "bp", "base", "z", "B", "rb", "bound", "job", "n", "p", "u"], "c": ["cp", "cur", "ch", "e", "vc", "s", "cat", "cm", "mc", "l", "cd", "ec", "cr", "i", "g", "r", "cos", "bc", "cc", "co", "C", "ci", "fc", "v", "ar", "comp", "f", "lc", "cu", "rc", "ac", "q", "gc", "cl", "cs", "tc", "cf", "con", "t", "dc", "z", "cn", "ce", "ct", "n", "ca", "p", "er", "cut", "unc", "u", "cor"], "d": ["dx", "dt", "da", "nd", "e", "md", "dL", "s", "it", "ds", "D", "fd", "w", "red", "o", "l", "rd", "di", "cd", "bd", "dd", "db", "out", "ad", "g", "r", "v", "dat", "done", "j", "sd", "f", "td", "den", "de", "ind", "q", "dig", "m", "dev", "t", "dc", "data", "dh", "z", "ct", "n", "div", "du", "p", "dec", "u"], "x": ["dx", "mx", "px", "e", "sync", "sw", "content", "check", "tx", "w", "xe", "xx", "xd", "o", "xf", "xi", "xt", "foo", "xc", "fx", "i", "xp", "xes", "work", "v", "ux", "ox", "X", "y", "xb", "xs", "wx", "xxxx", "yx", "xml", "php", "rx", "fixed", "batch", "t", "hex", "xy", "full", "ext", "ex", "z", "xxx", "n", "ix", "xa", "lex", "wait"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    String s = sc.next();\\n    String x = s.substring(0,2);\\n    String l = s.substring(2,4);\\n    int y = Integer.parseInt(x);\\n    int m = Integer.parseInt(l);\\n    // System.out.println(y + \" \" + m);\\n    if(0<y && y<=12 && 0<m && m<=12){\\n      System.out.println(\"AMBIGUOUS\");\\n    }else if(0<m && m<=12){\\n      System.out.println(\"YYMM\");\\n    }else if(0<y && y<=12){\\n      System.out.println(\"MMYY\");\\n    }else{\\n      System.out.println(\"NA\");\\n    }\\n  }\\n}\\n", "target": "5", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "ko", "sci", "c", "sel", "dec", "bc", "cc", "sys", "SC", "lc", "rc", "sch", "sec", "sr", "gc", "cl", "scan", "ss", "uc", "nc", "sq", "cs", "tc", "pc", "sa", "syn", "isc", "desc", "scl", "sv", "sp", "esc"], "s": ["in", "ms", "S", "space", "sts", "sb", "sf", "sw", "src", "sol", "stats", "csv", "source", "ns", "strings", "ts", "js", "str", "sys", "ats", "j", "conv", "h", "gs", "south", "ls", "aws", "sam", "sl", "ss", "abs", "sq", "qs", "se", "ps", "is", "su", "sql", "sv", "rs", "sp"], "x": ["dx", "mx", "px", " xx", "tx", "xx", "xd", "ax", "xf", "fg", "xi", "xt", "xc", "fx", "xp", "act", "ux", "X", "xb", "ox", "wx", "xs", "xxxx", "rx", "xy", "ex", "xxxxxxxx", "xxx", "ix"], "l": ["fl", "list", "kl", "lt", "lay", "ll", "lu", "loc", "el", "i", "lp", "lo", "g", "ly", "ml", "hl", "lc", "le", "shell", "ls", "nl", "sl", "ln", "los", "li", "L", "pl", "len", "sql", "dl"], "y": ["yi", "sy", "ot", "ch", "e", "et", "o", "yp", "b", "Y", "i", "ly", "r", "ty", "j", "io", "a", "py", "ry", "ny", "ym", "t", "xy", "z", "n", "p"], "m": ["mp", "ms", "mx", "sm", "um", "ll", "mm", "b", "p", "mi", "nm", "v", "M", "ml", "ma", "h", "f", "mo", "le", "me", "wm", "mu", "mb", "dm", "em", "n", "man", "mL", "im"]}}
{"code": "\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tFastScanner sc = new FastScanner(System.in);\\n\\n\t\tString line = sc.nextLine();\\n\t\tint count = 0;\\n\t\tfor (int i = 0; i < line.length(); i++) {\\n\t\t\tif (line.charAt(i) == '1') {\\n\t\t\t\tcount++;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(count);\\n\t}\\n\\n\tstatic class FastScanner {\\n\\n\t\tprivate BufferedReader reader = null;\\n\t    private StringTokenizer tokenizer = null;\\n\\n\t    public FastScanner(InputStream in) {\\n\t        reader = new BufferedReader(new InputStreamReader(in));\\n\t        tokenizer = null;\\n\t    }\\n\\n\t    public String next() {\\n\t        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n\t            try {\\n\t                tokenizer = new StringTokenizer(reader.readLine());\\n\t            } catch (IOException e) {\\n\t                throw new RuntimeException(e);\\n\t            }\\n\t        }\\n\t        return tokenizer.nextToken();\\n\t    }\\n\\n\t    public String nextLine() {\\n\t        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n\t            try {\\n\t                return reader.readLine();\\n\t            } catch (IOException e) {\\n\t                throw new RuntimeException(e);\\n\t            }\\n\t        }\\n\\n\t        return tokenizer.nextToken(\"\\n\");\\n\t    }\\n\\n\t    public long nextLong() {\\n\t        return Long.parseLong(next());\\n\t    }\\n\\n\t    public int nextInt() {\\n\t        return Integer.parseInt(next());\\n\t    }\\n\\n\t    public double nextDouble() {\\n\t         return Double.parseDouble(next());\\n\t     }\\n\\n\t    public int[] nextIntArray(int n) {\\n\t        int[] a = new int[n];\\n\t        for (int i = 0; i < n; i++)\\n\t            a[i] = nextInt();\\n\t        return a;\\n\t    }\\n\\n\t    public long[] nextLongArray(int n) {\\n\t        long[] a = new long[n];\\n\t        for (int i = 0; i < n; i++)\\n\t            a[i] = nextLong();\\n\t        return a;\\n\t    }\\n\\n\t}\\n\\n\\n}\\n", "target": "165", "substitutes": {"sc": ["ch", "sync", "console", "src", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "arc", "c", "bc", "cc", "sys", "SC", "lc", "rc", "sch", "sec", "nl", "gc", "cl", "ss", "nc", "sq", "tc", "cs", "pc", "dc", "ser", "isc", "capt", "desc", "scl", "sv", "rs", "ic", "sp", "esc"], "line": ["Line", "list", "eline", "e", "inline", "set", "file", "source", "phrase", "block", "chain", "l", "user", "lin", "char", "row", "text", "out", "stroke", "ine", "str", "lines", "lo", "cell", "lock", "LINE", "print", "le", "string", "word", "command", "nl", "log", "buffer", "ln", " lines", "data", "page", " LINE", "link", "code", "header", "message", "queue", "sample", "store", "frame", "sequence"], "count": ["result", "report", "size", "list", "total", "cache", "test", "read", "next", "all", "status", "comment", "OUNT", "counter", "sum", "const", "found", "out", "c", "amount", "coll", "find", "nt", "draw", "cc", "cont", "err", "span", "number", "length", "print", "child", "hold", "index", "cond", "log", "call", "buffer", "Count", "cs", "info", "batch", "page", "ount", "z", "num", "code", "ct", "message", "ctr", "sequence"], "i": ["multi", "si", "ip", "set", "PI", "di", "c", "my", "point", "ini", "err", "iy", "me", "mac", "phi", "it", "ie", "o", "qi", "x", "y", "sim", "q", "ami", "init", "index", "ori", "MI", "gi", "ii", "us", "cli", "ji", "ic", "ri", "fire", "bi", "ms", "itime", "iter", "iu", "ei", "g", "j", "io", "ni", "I", "ind", "print", "ij", "is", "li", "ex", "ui", "client", "ix", "ies", "ti", "ai", "xi", "pi", "ful", "ice", "parent", "mi", "v", "ity", "ci", "oi", "id", "you", "f", "php", "m", "ki", "\u0438", "batch", "ims", "eu", "im", "u"], "reader": ["Reader", "result", "iter", "sync", "read", "builder", "file", "source", "driver", "user", "dr", "row", "context", "worker", "this", "ner", "r", "iterator", "roller", "rl", "handler", "resource", "parser", "rer", "runner", "rc", "document", "walker", "rx", "lr", "rator", "loader", "buffer", "upper", "via", "writer", "rr", "data", "stream", "input", "message", "client", "redo", "inner", "er", "rs", "rar", "ro"], "tokenizer": ["tagformer", "terminiler", "toolformer", "terminformer", " tokenifier", "zeroizer", " tokenization", "timener", "tokeniner", "wordiser", "Tokenifier", "tokenize", "tooliler", "tokenizable", "toolifier", "okenressor", "Tokenize", " tokenazer", "operatorressor", "operatorization", "Tokeniser", "wordzer", "wordiner", "tokeniler", "okenizer", "tagifier", "wordize", "operatoroder", " tokenizable", "toolizer", " tokenoder", "signressor", " tokeniser", "Tokenization", "tokenifier", "signizer", "optimization", " tokencer", "wordization", "optimizer", "operatorazer", "Tokenizer", "tokenzer", "optimressor", "tokenformer", "operatorizer", "tokencer", "signcer", "terminifier", "okeniner", "wordener", " tokenifer", "zeroizable", "signization", "operatoriser", "timizer", "operatorize", "operatorifier", "tagiler", " tokenize", "okenizable", "tokenazer", "okenener", "tokenener", "Tokenzer", "tokenressor", "timiner", "tokenization", "timization", " tokenressor", "okenazer", " tokenzer", "tokenoder", "tokeniser", "okenifer", "wordizer", "wordifier", "terminizer", "Tokenoder", "zeroization", "tagizer", "optimcer", "zeroifer", "okenization", "tokenifer"], "in": ["std", "In", "null", "it", "console", "din", "file", "source", "from", "o", "run", "world", "l", "ins", "rt", "conf", "bin", "out", "doc", "c", "this", "inc", "lines", "r", "or", "ini", "cont", "err", "id", "ma", "io", "IN", "log", "info", "os", "con", "gin", "t", "is", "serv", "stream", "input", "inn", "inner", "p", "ic", "cin"], "n": ["nb", "en", "missing", "nd", "nn", "names", "it", "e", "nat", "w", "network", "all", "o", "l", "np", "ns", "out", "x", "c", "d", "un", "g", "r", "nt", "nos", "no", "nm", "y", "ng", "on", "name", "j", "h", "sn", "ni", "number", "le", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "p", "mn"], "a": ["an", "la", "ba", "ab", "da", "ea", "qa", "au", "w", "aos", "aka", "o", "aaa", "b", "aux", "area", "el", "am", "A", "g", "ia", "ta", "ma", "j", "f", "ao", "va", "ac", "ae", "ya", "m", "ha", "ata", "ua", "ga", "oa", "sta", "as", "data", "to", "na", "pa", "apa", "aa", "fa", "sa", "ca", "ava"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc=new Scanner(System.in);\\n\\n\t\tint N=sc.nextInt();\\n\\n\t\tint[] W=new int[N+1];\\n\t\tW[0]=0;\\n\\n\t\tfor(int i=0;i<N;i++)  W[i+1]=sc.nextInt()+W[i];\\n\\n\t\tint ans=1000000;\\n\\n\t\tfor(int i=1;i<N;i++) {\\n\t\t\tint S1=W[i];\\n\t\t\tint S2=W[N]-W[i];\\n\t\t\tans=Math.min(Math.abs(S1-S2), ans);\\n\t\t}\\n\\n\t\tSystem.out.println(ans);\\n\\n\t\tsc.close();\\n\t}\\n\\n}\\n", "target": "2", "substitutes": {"sc": ["cur", "ch", "sync", "sb", "sw", "asc", "mc", "osc", "ctrl", "Sync", "anc", "cr", "Sc", "arc", "c", "ctx", "inc", "bc", "cc", "sys", "ng", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "ss", "scan", "nc", "system", "cs", "tc", "sq", "ck", "pc", "ctl", "dc", "psc", "ca", "isc", "capt", "syn", "scl", "sh", "sv", "rs", "sp", "esc"], "N": ["NP", "NG", "NI", "S", "NA", "J", "D", "NV", "T", "NH", "NM", "K", "No", "U", "Net", "H", "P", "NT", "V", "M", "C", "Sn", "NO", "Ni", "NE", "NB", "I", "FN", "TN", "G", "CN", "Node", "R", "ANY", "NL", "NR", "NN", "Ns", "Num", "NC", "NS", "L", "GN", "MAN", "n", "F", "ND", "Q", "SN"], "W": ["SW", "EW", "VW", "MW", "Ws", "S", "WAR", "Word", "WR", "D", "w", "Sw", "WT", "T", "Watch", "E", "K", "GW", "WD", "H", "P", "Wh", "V", "WI", "WA", "M", "C", "WW", "FW", "G", "WS", "I", "We", "NW", "TW", "WE", "DW", "WC", "CW", "Windows", "RW", "WM", "Words", "WP", "L", "B", "F", "BW", "Weight", "Week"], "i": ["in", "multi", "si", "ip", "chain", "l", "zi", "di", "point", "ini", "err", "span", "me", "info", "slice", "hi", "n", "phi", "it", "ie", "o", "qi", "x", "y", "sim", "uri", "q", "init", "index", "ori", "gi", "ii", "us", "to", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "ei", "this", "g", "j", "io", "a", "ni", "I", "ind", "print", "ij", "is", "li", "ui", "client", "ix", "sequence", "ti", "ai", "xi", "pi", "mi", "v", "ity", "ci", "id", "oi", "f", "m", "ki", "\u0438", "batch", "ims", "im", "u"], "ans": ["an", "uns", "ars", "ms", "ents", "mas", "names", "s", "rans", "flags", "aps", "ows", "ann", "ons", "ins", "ns", "outs", "aus", "ones", "ros", "faces", "ks", " scans", "rates", "cons", "arts", "lines", " means", "vers", "ats", "oss", "lets", "ends", "olds", "ants", "xs", "posts", "ANS", "can", "ads", "ls", " Ans", "scan", "ions", "times", "os", "as", "ps", "is", " spans", "offs", "ations", "amps", "ens", "rs", "AN", "ols", "ids", "eds"], "S1": ["GS1", "s1", " S0", "sFirst", "SI4", "S4", "R1", "SI1", "SIFirst", "R4", "GS2", "SI6", " S4", "s6", "SFirst", "S0", "R2", "GSFirst", "SI2", "GS6", "R0", "SI0", "S6", "s2"], "S2": ["SItwo", "s1", "SI02", " S02", "SS2", "M02", "SI1", "Stwo", "M6", "SSSL", " S6", "SI6", "sSL", "M1", "SStwo", "SS1", "SISL", "M2", "SI2", "stwo", "S6", "s2", "SSL", "S02"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint dishes[] = new int[5];\\n\\n\t\tfor(int i = 0; i < 5; i++) {\\n\t\t\t dishes[i] = Integer.parseInt(sc.nextLine());\\n\t\t}\\n\\n\t\tint diffmax = 0;\\n\t\tint diffmaxindex = 0;\\n\t\tint diff = 0;\\n\t\tfor(int i = 0; i < 5; i++) {\\n\t\t\tif(dishes[i]%10 != 0) {\\n\t\t\t\tdiff = (dishes[i]/10 + 1) * 10 - dishes[i];\\n\t\t\t}\\n\\n\t\t\tif(diffmax < diff) {\\n\t\t\t\tdiffmax = diff;\\n\t\t\t\tdiffmaxindex = i;\\n\t\t\t}\\n\t\t}\\n\\n\t\tint sumTime = 0;\\n\\n\t\tfor(int i = 0; i < 5; i++) {\\n\t\t\tif(i != diffmaxindex) {\\n\t\t\t\tif(dishes[i]%10 != 0) {\\n\t\t\t\t\tsumTime = sumTime + ((dishes[i]/10 + 1) * 10);\\n\t\t\t\t}else {\\n\t\t\t\t\tsumTime = sumTime + dishes[i];\\n\t\t\t\t}\\n\\n\t\t\t}\\n\t\t}\\n\\n\t\tsumTime = sumTime + dishes[diffmaxindex];\\n\\n\t\tSystem.out.println(sumTime);\\n\t}\\n\\n}", "target": "63", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "anc", "cr", "ec", "Sc", "arc", "sel", "c", "sub", "ner", "dec", "bc", "cc", "sys", "screen", "SC", "lc", " Sc", "rc", "usc", "sec", "sch", "nl", "gc", "scan", "ss", "cl", "nc", "sq", "cs", "system", "se", "pc", "ser", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "dishes": ["nished", " dills", " dished", "wished", "nishing", "datches", "ldills", "indishes", "indished", "sdishers", "rilles", "wishing", "dlesh", "pishing", "ldished", "fills", "sdished", "rdished", " dishers", "cdished", "pills", "nilles", "wishy", "wishes", "dishy", "sished", " datches", "sdishes", "sdills", "fishers", "mishes", "rishes", "dishers", "lishy", "mished", "lills", "wills", "ldishy", "rdlesh", "cdishes", " dilles", "fished", "lishes", "patches", "nishers", "pishes", "dishing", "nills", "sills", "drills", "indishers", "rishy", "watches", "sishy", "dills", "rished", "sishes", "willes", "rdishers", "fishes", "drishy", "cdishy", "mlesh", "nishes", "wishers", "drishes", "pished", "drished", " dishy", "sdishy", "mishers", "rdishes", "dilles", "pishers", "ldishes", "dished", "wlesh", "cdilles", "sdilles", "lished", "indills"], "i": ["multi", "list", "si", "iii", "ip", "json", "set", "chain", "l", "zi", "di", "out", "c", "my", "point", "ini", "load", "err", "me", "iy", "info", "hi", "phi", "it", "ie", "um", "status", "o", "qi", "ik", "y", "sim", "name", "uri", "q", "init", "ami", "index", "ori", "gi", "ii", "us", "to", "base", "cli", "ji", "ic", "history", "ri", "bi", "iter", "gu", "iu", "et", "dr", "ios", "this", "ei", "g", "j", "io", "I", "ind", "print", "ij", "t", "is", "li", "ex", "ui", "client", "ix", "eric", "entry", "ti", "ai", "xi", "pi", "mi", "ity", "v", "ci", "id", "oi", "f", "iq", "ki", "\u0438", "batch", "ims", "eu", "im", "u"], "diffmax": ["diffax", "Diffconf", "defMax", "iffax", "DiffMAX", "iffconf", "dustMAX", " diffax", "defmax", "Diffmax", " diffMax", "diffMax", "iffmax", "dustmax", "diffconf", "DiffMax", "iffMax", "defax", "diffMAX", "defMAX", "dustMax", "Diffax", " diffconf", " diffMAX"], "diffmaxindex": ["diffmajorind", "DiffMaxind", "Diffmaxoffset", " diffmaxind", " diffaxIndex", "diffMaxIndex", "DiffMaxIndex", "DiffMaxsize", "diffaxiter", "diffMAXsize", " diffaxsize", "difflastind", "diffmaxoffset", "difflastoffset", "diffmaxIndex", "diffcheckindex", " diffaxindex", " diffmaxloc", "diffMaxindex", "diffmaxsize", "DiffMaxindex", "diffmaxind", "diffaxsize", "diffMaxind", "diffcheckiter", "Diffmaxind", "diffaxind", " diffmaxIndex", "diffcheckind", "diffMaxloc", " diffmaxiter", "diffMaxsize", " diffaxloc", "diffmaxiter", "Diffmaxsize", "difflastindex", "diffmajorindex", "diffchecksize", "diffMAXind", "diffMaxiter", "diffaxloc", "diffaxIndex", "diffaxindex", "diffmaxloc", "diffmajorloc", " diffmaxsize", " diffaxiter", "Diffmaxindex", "diffMaxoffset", "diffMAXindex", "difflastIndex", "diffMAXIndex", "DiffMaxoffset", "DiffmaxIndex", " diffaxind", "diffmajorIndex"], "diff": ["update", "result", "dx", "add", "old", " difficulty", "buff", " differs", "tmp", "equal", "Diff", "test", "comment", "changed", " Diff", "hift", "step", "cmp", "del", "changes", "dd", "split", "distance", "mix", "eff", "d", "def", "iff", "dis", " differ", "fail", "comp", " differences", " difference", "range", "err", "tf", "change", "default", "error", "df", "sup", "patch", "value", "shift", "erence", "dev", "dist", "data", "offset", "Delta", "div", "dust", " delta", "dirty", "different"], "sumTime": ["sampleMemory", "umValue", " sumTim", "umMemory", "sampleWork", "SumNow", "meanTim", "cumTime", "summaryTime", "summaryNow", "cumType", "sorttime", " sumNow", "sumMemory", "sumNow", " sumtime", "umName", "stackType", "sampleTime", "cacheNow", " sumName", "umTim", "meanDate", "umNow", "SumMemory", "SumTime", "SumTimes", "SumFile", "cumtime", "sumTimer", "umTime", "Sumtime", "stackTime", "sortTimes", "meanTimes", "cumTimes", "SumDate", "sumTim", "stacktime", "sumtime", "cumName", " sumWork", "cumTim", "sumFile", "cumFile", " sumFile", "sumTimes", " sumType", "cacheTime", "sumWork", "sumValue", " sumValue", "cumNow", "sortFile", "umTimer", " sumMemory", "SumTim", "sumDate", "stackTim", "summaryTim", " sumDate", " sumTimes", "umWork", "cacheTim", "sampleTimer", "umtime", " sumTimer", "summaryFile", "sumName", "cacheValue", "meanTime", "sumType", "sortTime"]}}
{"code": "import java.io.*;\\nclass Main{\\n\tpublic static void main(String args[])throws Exception{\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString str = br.readLine();\\n\t\tString array[] = str.split(\" \");\\n\t\t\\n\t\t int x = Integer.parseInt(array[0]);\\n\t\tint y = Integer.parseInt(array[1]);\\n\t\t\\n\t\tif(x > y){\\n\t\t\tSystem.out.println(\"a\" + \" > \"+ \"b\");\\n\t\t}\\n\t\t\telse if(x == y){\\n\t\t\t\tSystem.out.println(\"a\" + \" == \" +\"b\");\\n\t\t\t\t}\\n\t\t\t\telse if(x < y){\\n\t\t\t\t\tSystem.out.println(\"a\" + \" < \" +\"b\");\\n\t\t\t\t\t}\\n\t\t\t\t\t}\\n\t\t\t\t\t}\\n", "target": "179", "substitutes": {"br": ["wr", "ber", "bi", "bl", "hr", "kr", "ch", "BR", "Br", "vr", "mr", "fr", "tr", "buf", "dr", "browser", "bd", "bs", "cr", "out", "gr", "nr", "bh", "bc", "bf", "bt", "bridge", "sr", "lr", "shr", "bp", "rb", "bm", "pr", "div", "ctr", "be", "bro", "Fr", "bn"], "str": ["list", "obj", "it", "vol", "s", "ocr", "fr", "STR", "tr", "b", "char", "text", "out", "coll", "gr", "g", "r", "v", "line", "err", "name", "res", "print", "string", "st", "Str", "sl", "raw", "data", "t", "prov", "input", "txt", "n", "div", "ctr", "sp", "arr"], "array": ["rays", "result", "response", "record", "var", "list", "part", "pair", "section", "vector", "say", "sequence", "now", "attribute", "instance", "area", "binary", "row", "audio", "ary", "share", "air", "Array", "ar", "ray", "range", "collection", "a", "number", "export", "string", "stage", "hash", "answer", "index", "batch", "buffer", "arrow", "storage", "object", "raw", "data", "angle", "angular", "map", "archive", "our", "arr", " Array"], "x": ["dx", "mx", "px", "tx", "w", "lat", "xx", "mm", "ax", "xf", "l", "xi", "xt", "xc", "i", "fx", "xp", "ux", "v", "X", "ox", "j", "a", "f", "wx", "xs", "h", "xml", "rx", "m", "xa", "t", "xy", "z", "ex", "n", "ix", "p", "lex"], "y": ["ies", "yi", "ay", "sy", "ch", "ye", "ey", "o", "b", "Y", "gy", "i", "out", "ys", "g", "ly", "cy", "my", "v", "on", "ty", "j", "vy", "uy", "a", "h", "py", "ery", "yt", "iy", "ry", "m", "oy", "ny", "ym", "t", "iny", "xy", "z", "n", "yy", "p"]}}
{"code": "\\n\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\t\tScanner sc = new Scanner(System.in);\\n\t\t\tString n = sc.next();\\n\\n\t\t\tn = n.replace('9', '*');\\n\t\t\tn = n.replace('1', '9');\\n\t\t\tn = n.replace('*', '1');\\n\t\t\tSystem.out.println(n);\\n\t\t}\\n\t}", "target": "111", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "ko", "sel", "c", "sub", "dec", "bc", "cc", "sys", "ok", "SC", "conv", "lc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "uc", "nc", "sq", "tc", "cs", "pc", "ser", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "nv", "en", "rn", "nn", "sen", "nw", "s", "nor", "network", "all", "ll", "o", "l", "np", "ns", "out", "i", "c", "d", "nr", "g", "norm", "nm", "nt", "tn", "ng", "on", "j", "ren", "number", "sn", "nation", "fn", "nu", "pn", "nl", "nc", "ln", "ne", "nan", "raw", "t", "na", "cn", "dn", "N", "gn", "p", "note", "mn"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        // Your code here!\\n        Scanner sc = new Scanner(System.in);\\n        String str = sc.next();\\n        char c = str.charAt(0);\\n        c++;\\n    System.out.println(c);\\n    }\\n}\\n", "target": "150", "substitutes": {}}
{"code": "import java.util.*;\\nimport java.io.*;\\nimport java.math.*;\\n \\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        String[] sl = new String[2];\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        Arrays.fill(sl,\"\");\\n        for(int i = 0; i < b; i++){\\n            sl[0] += a;\\n        }\\n        for(int i = 0; i < a; i++){\\n            sl[1] += b;\\n        }\\n        Arrays.sort(sl);\\n        System.out.println(sl[0]);\\n    }\\n}\\n", "target": "24", "substitutes": {"sc": ["ch", "sync", "sw", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sci", "c", "ctx", "inc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "exec", "gc", "cl", "scan", "nc", "sq", "cs", "tc", "spec", "pc", "ctl", "acc", "capt", "isc", "desc", "scl", "sv", "enc", "sp", "esc"], "sl": ["fl", "spl", "pol", "bl", "cel", "kl", "sen", "sb", "s", "sw", "sol", "ll", "gl", "sil", "spe", "Sl", "l", "zh", "ld", "SL", "jl", "vl", "sel", "rel", "coll", "tl", " SL", "roll", "rl", "hl", "pse", "decl", " Sl", "sd", "sn", "els", "alph", "ell", "sels", "owl", "ls", "sr", "ul", "nl", "lr", "ssl", "so", "isl", "ln", "sche", "wl", "serv", "pl", "su", "syn", "sql", "scl", "sh", "dl", "sv", "sp", "eval", "sle"], "a": ["an", "la", "ba", "ab", "da", "ea", "at", "ai", "au", "s", "o", "ax", "l", "aaa", "pi", "aj", "c", "am", "A", "r", "ar", "ia", "ta", "ma", "ao", "va", "alpha", "ac", "ae", "app", "ga", "oa", "aa", "as", "sta", "t", "pa", "sa", "ca", "n", "isa", "p", "al"], "b": ["nb", "bi", "ba", "ab", "be", "fb", "bb", "e", "ib", "sb", "wb", "eb", "l", "bs", "ob", "db", "x", "c", "d", "g", "r", "bc", "v", "y", "cb", "j", "h", "back", "m", "beta", "pb", "mb", "bp", "t", "br", "z", "B", "rb", "n", "p"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "gu", "chain", "zi", "xi", "uli", "di", "pi", "qi", "x", "ei", "mi", "v", "ini", "ity", "ci", "y", "sim", "oi", "id", "uu", "j", "uri", "ind", "print", "ij", "iy", "me", "m", "ori", "ki", "\u0438", "mu", "gi", "ii", "us", "ims", "eu", "li", "hi", "ui", "cli", "n", "client", "ji", "ix", "fi", "er", "im", "ic", "phi"]}}
{"code": "import java.util.*;\\npublic class Main {\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    String s = sc.next();\\n    int max = 0,count=0,len=s.length();\\n    for(int i = 0;i < len;i++){\\n      switch(s.charAt(i)){\\n        case 'A':\\n          count++;\\n          break;\\n        case 'T':\\n          count++;\\n          break;\\n        case 'G':\\n          count++;\\n          break;\\n        case 'C':\\n          count++;\\n          break;\\n        default:\\n          count=0;\\n      }\\n      if(max < count)max=count;\\n    }\\n    System.out.println(max);\\n  }\\n}", "target": "100", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "c", "inc", "dec", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "nc", "system", "cs", "tc", "sq", "se", "pc", "ser", "isc", "desc", "sh", "scl", "sv", "sp", "esc"], "s": ["ms", "S", "ws", "sts", "sb", "sf", "sw", "l", "b", "bs", "c", "ts", "js", "comm", "str", "g", "r", "sys", "ats", "h", "xs", "gs", "st", "string", "ls", "m", "ss", "sl", "abs", "sq", "so", "qs", "less", "sort", "t", "ps", "n", "sql", "p", "sv", "rs", "sp"], "max": ["limit", "old", "add", "mx", "size", "list", "total", "null", "check", "last", "cache", "MAX", "right", "test", "all", "always", "ax", "best", "req", "box", "sum", "counter", "prime", "conf", "out", "ctx", "c", "med", "act", "end", "high", "global", "ox", "mod", "min", "res", "number", "top", "length", "can", "hash", "good", "recent", "rest", "Max", "view", "index", "log", "exp", "never", "t", "scale", "full", "base", "rand", "ext", "num", "temp", "checked", "mind", "map", "mean", "grow", "maximum"], "count": ["list", "size", "total", "depth", "counter", "sum", "c", "find", "must", "current", "process", "length", "mark", "normal", "label", "n", "val", "result", "last", "cache", "status", "table", "ctx", "amount", "make", "change", "index", "handle", "soft", "weight", "nb", "report", "core", "next", "trust", "consider", "state", "conf", "act", "nt", "default", "number", "ind", "print", "force", "cast", "call", "zero", "ctr", "add", "check", "test", "not", "comment", "now", "always", "req", "cmp", "found", "coll", "flag", "trace", "cont", "hold", "cond", "Count", "cmd", "stat", "num", "code", "message", "match", "col"], "len": ["fl", "en", "bl", "kl", "mt", "lim", "ll", "gl", "lib", "l", "Length", "mil", "el", "rel", "nt", "ml", "lf", "hl", "length", "ell", "Len", "ls", "nl", "cl", "sl", "il", "alt", "lan", "ln", "fin", "lis", "pl", "n", "pres", "elt", "syn", "dl", "lon"], "i": ["bi", "multi", "si", "ti", "ai", "e", "ip", "it", "iu", "ie", "o", "l", "xi", "di", "pi", "x", "ei", "g", "mi", "v", "ini", "ci", "y", "sim", "oi", "j", "io", "a", "uri", "iq", "I", "ind", "q", "ij", "me", "m", "index", "ori", "ki", "\u0438", "ii", "gi", "us", "t", "is", "li", "base", "ui", "cli", "ji", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.io.PrintWriter;\\nimport java.io.FileNotFoundException;\\nimport java.util.InputMismatchException;\\nimport java.io.InputStream;\\nimport java.io.FileInputStream;\\nimport java.io.IOException;\\n\\npublic class Main {\\n    InputStream is;\\n\\n    int __t__ = 1;\\n    int __f__ = 0;\\n    int __FILE_DEBUG_FLAG__ = __f__;\\n    String __DEBUG_FILE_NAME__ = \"src/main/java/A1\";\\n\\n    FastScanner in;\\n    PrintWriter out;\\n\\n    public void solve() {\\n        String s = in.next();\\n        String t = in.next();\\n        int res = t.length();\\n        for (int i = 0; i < s.length(); i++) {\\n            for (int j = i + 1; j <= s.length(); j++) {\\n                String u = s.substring(i, j);\\n                if (u.length() != t.length()) continue;\\n\\n                int cnt = 0;\\n                for (int k = 0; k < u.length(); k++) {\\n                    if (u.charAt(k) != t.charAt(k)) cnt++;\\n                }\\n                res = Math.min(res, cnt);\\n            }\\n        }\\n        System.out.println(res);\\n    }\\n\\n    public void run() {\\n        if (__FILE_DEBUG_FLAG__ == __t__) {\\n            try {\\n                is = new FileInputStream(__DEBUG_FILE_NAME__);\\n            } catch (FileNotFoundException e) {\\n                e.printStackTrace();\\n            }\\n            System.out.println(\"FILE_INPUT!\");\\n        } else {\\n            is = System.in;\\n        }\\n        in = new FastScanner(is);\\n        out = new PrintWriter(System.out);\\n\\n        solve();\\n    }\\n\\n    public static void main(final String[] args) {\\n        new Main().run();\\n    }\\n}\\n\\n\\nclass FastScanner {\\n    private InputStream stream;\\n    private byte[] buf = new byte[1024];\\n    private int curChar;\\n    private int numChars;\\n\\n    public FastScanner(InputStream stream) {\\n        this.stream = stream;\\n        // stream = new FileInputStream(new File(\"dec.in\"));\\n    }\\n\\n    int read() {\\n        if (numChars == -1)\\n            throw new InputMismatchException();\\n        if (curChar >= numChars) {\\n            curChar = 0;\\n            try {\\n                numChars = stream.read(buf);\\n            } catch (IOException e) {\\n                throw new InputMismatchException();\\n            }\\n            if (numChars <= 0)\\n                return -1;\\n        }\\n        return buf[curChar++];\\n    }\\n\\n    public boolean isSpaceChar(int c) {\\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\\n    }\\n\\n    public boolean isEndline(int c) {\\n        return c == '\\n' || c == '\\r' || c == -1;\\n    }\\n\\n    public int nextInt() {\\n        return Integer.parseInt(next());\\n    }\\n\\n    public int[] nextIntArray(int n) {\\n        int[] array = new int[n];\\n        for (int i = 0; i < n; i++)\\n            array[i] = nextInt();\\n\\n        return array;\\n    }\\n\\n    public int[][] nextIntMap(int n, int m) {\\n        int[][] map = new int[n][m];\\n        for (int i = 0; i < n; i++) {\\n            map[i] = nextIntArray(m);\\n        }\\n        return map;\\n    }\\n\\n    public long nextLong() {\\n        return Long.parseLong(next());\\n    }\\n\\n    public long[] nextLongArray(int n) {\\n        long[] array = new long[n];\\n        for (int i = 0; i < n; i++)\\n            array[i] = nextLong();\\n\\n        return array;\\n    }\\n\\n    public long[][] nextLongMap(int n, int m) {\\n        long[][] map = new long[n][m];\\n        for (int i = 0; i < n; i++) {\\n            map[i] = nextLongArray(m);\\n        }\\n        return map;\\n    }\\n\\n    public double nextDouble() {\\n        return Double.parseDouble(next());\\n    }\\n\\n    public double[] nextDoubleArray(int n) {\\n        double[] array = new double[n];\\n        for (int i = 0; i < n; i++)\\n            array[i] = nextDouble();\\n\\n        return array;\\n    }\\n\\n    public double[][] nextDoubleMap(int n, int m) {\\n        double[][] map = new double[n][m];\\n        for (int i = 0; i < n; i++) {\\n            map[i] = nextDoubleArray(m);\\n        }\\n        return map;\\n    }\\n\\n    public String next() {\\n        int c = read();\\n        while (isSpaceChar(c))\\n            c = read();\\n        StringBuilder res = new StringBuilder();\\n        do {\\n            res.appendCodePoint(c);\\n            c = read();\\n        } while (!isSpaceChar(c));\\n        return res.toString();\\n    }\\n\\n    public String[] nextStringArray(int n) {\\n        String[] array = new String[n];\\n        for (int i = 0; i < n; i++)\\n            array[i] = next();\\n\\n        return array;\\n    }\\n\\n    public String nextLine() {\\n        int c = read();\\n        while (isEndline(c))\\n            c = read();\\n        StringBuilder res = new StringBuilder();\\n        do {\\n            res.appendCodePoint(c);\\n            c = read();\\n        } while (!isEndline(c));\\n        return res.toString();\\n    }\\n\\n    public int[][] nextPackedIntArrays(int packN, int size) {\\n        int[][] res = new int[packN][size];\\n        for (int i = 0; i < size; i++) {\\n            for (int j = 0; j < packN; j++) {\\n                res[j][i] = nextInt();\\n            }\\n        }\\n        return res;\\n    }\\n}\\n", "target": "158", "substitutes": {"is": ["ms", "ib", "iter", "ai", "ip", "it", "set", "ir", "ais", "re", "es", "ins", "ios", "iss", "ists", "bs", "by", "isf", "ris", "js", "sys", "im", "err", "Is", "id", "isi", "iso", " are", "its", "IS", "has", "fs", "info", "isl", "us", "os", "bis", "se", "as", "ims", "was", "isin", "vis", "iris", "input", "ps", "lis", "isa", "isc", "tis", "p", "rs", "ic", "ri"], "__t__": ["__d__", "__f_______", " __f_____", "__t_______", " __f_______", "__d___", "__l_____", "__l___", "__p_______", " __f___", "__o_____", " __t_______", "__o___", "__l__", "__d_______", " __t_____", " __t___", "__p__", "__o__", "__f___", "__f_____", "__t_____", "__p___", "__t___"], "__f__": ["__d__", "__g__", "__f_______", " __f_____", "__t_______", " __f_______", "__d___", "__g_____", "__c___", "__c_______", "__v_______", "__c__", "__g_______", " __f___", " __t_______", "__d_______", " __t_____", " __t___", "__v___", "__c_____", "__f___", "__g___", "__f_____", "__t_____", "__t___", "__v__"], "__FILE_DEBUG_FLAG__": ["__FILE_DEBUG_VERSION____", "__FILE_DEBUG_FLAG____", "__FILE_DEBUG_METHOD_______", "__FILE_DEBUG_VERSION__", "__FILE_DEBUG_AG____", "__FILE_DEBUG_TAG____", "__FILE_DEBUG_AG___", "__FILE_DEBUG_TAG__", "__FILE_DEBUG_AG_______", "__FILE_DEBUG_AG__", "__FILE_DEBUG_METHOD__", "__FILE_DEBUG_FLAG___", "__FILE_DEBUG_ID___", "__FILE_DEBUG_METHOD___", "__FILE_DEBUG_TAG___", "__FILE_DEBUG_VERSION___", "__FILE_DEBUG_ID_______", "__FILE_DEBUG_ID__", "__FILE_DEBUG_FLAG_______"], "__DEBUG_FILE_NAME__": ["__DEBUG_FILE_Name__", "__DEBUG_FILE_NAME_______", "__DEBUG_FILE_AME____", "__DEBUG_FILE_FILE____", "__DEBUG_FILE_PATH__", "__DEBUG_FILE_SIZE__", "__DEBUG_FILENAMENAME_______", "__DEBUG_FILE_AME__", "__DEBUG_FILENAMESIZE__", "__DEBUG_FILE_NAME____", "__DEBUG_FILE_PATH____", "__DEBUG_FILE_SIZE_", "__DEBUG_FILE_Name____", "__DEBUG_FILE_FILE_______", "__DEBUG_FILENAMENAME____", "__DEBUG_FILE_FILE__", "__DEBUG_FILE_SIZE_______", "__DEBUG_FILE_AME_", "__DEBUG_FILENAMESIZE____", "__DEBUG_FILENAMENAME__", "__DEBUG_FILE_SIZE____", "__DEBUG_FILE_PATH_", "__DEBUG_FILE_AME_______", "__DEBUG_FILENAMENAME_", "__DEBUG_FILE_NAME_", "__DEBUG_FILE_Name_", "__DEBUG_FILENAMESIZE_______", "__DEBUG_FILE_FILE_", "__DEBUG_FILENAMESIZE_"], "in": ["en", "and", "In", "iter", "it", "ai", "file", "din", "from", "all", " input", "mm", "o", "l", "ins", "thin", "lin", "conf", "bin", "doc", "inc", "or", "mi", "internal", "ini", "id", "on", "f", "h", "ind", "q", "IN", "init", "m", "reader", "info", "raw", "as", "gin", "isin", "serv", "con", "input", "session", "n", "inn", "inf", "inner", "p", "er", "cin"], "out": ["outer", "report", "list", "at", "obj", "OU", "null", "it", "json", "cache", "w", "aos", "pool", "status", "o", "all", "Out", "user", "flush", "sum", "ins", "by", "oe", "c", "g", "or", "nt", "conn", "co", "sys", "lock", "screen", "err", "error", "io", "gt", "print", "can", "init", "gc", "log", "stable", "ou", "OUT", "output", "os", "writer", "timeout", "exit", "one", "ex", "net", "code", "client", "n", "txt", "inner", "p", "outs", "col"], "s": ["ms", "S", "si", "sts", "sb", "sw", "w", "source", "es", "l", "b", "ns", "bs", "ts", "js", "str", "r", "sys", "y", "its", "a", "gs", "st", "ls", "sam", "ss", "sl", "sq", "so", "cs", "os", "ps", "n", "sql", "p", "sv", "rs", "sp"], "t": ["tt", "ot", "at", "e", "it", "mt", "pt", "T", "o", "tr", "tar", "b", "wt", "rt", "c", "template", "ts", "tw", "tif", "r", "nt", "v", "y", "bt", "ta", "f", "td", "tf", "st", "m", "tm", "tu", "te", "tc", "tk", "to", "tree", "txt", "n", "p"], "res": ["resh", "result", "ms", "results", "obj", "resp", "max", "ress", "resolution", "red", "cal", "rem", "re", "progress", "Res", "req", "sum", "resources", "conf", "vec", "RES", "cons", "rel", "def", "gr", " Res", "r", "nt", "ref", "ret", "resource", "rss", "rc", "reg", "rest", "zero", "rand", "grid", "pres", "mem", "rs", "reset"], "i": ["bi", "ish", "multi", "si", "ti", "iter", "ai", "ip", "it", "iu", "ie", "o", "zi", "xi", "di", "pi", "qi", "x", "ei", "ik", "mi", "ini", "ci", "y", "id", "ia", "io", "iq", "ni", "I", "ind", "ij", "ami", "me", "init", "index", "ori", "ki", "ii", "info", "gi", "li", "ex", "hi", "ui", "ji", "ix", "p", "im", "ic", "phi", "ri"], "j": ["jo", "bi", "bj", "oj", "obj", "jc", "json", "J", "it", "pt", "o", "fr", "kid", "l", "dj", "b", "jj", "jas", "aj", "jl", "bs", "bo", "x", "el", "jp", "uj", "rel", "js", "g", "v", "ja", "y", "f", "q", "ij", "kj", "m", "br", "z", "jump", "job", "other", "ji", "n", "pr", "p", "im", "mn"], "u": ["uni", "uf", "au", "bu", "up", "iu", "um", "o", "uid", "user", "lu", "U", "p", "bo", "un", "pu", "ue", "uu", "ju", "ud", "cu", "ut", "nu", "ul", "ur", "ua", "mu", "tu", "uc", "us", "eu", "ugi", "su", "ui", "fu", "ou", "ru", "uv"], "cnt": [" ccount", "Cnt", " cnc", "cred", "ccount", "Cnc", "crnz", "cct", "acnc", " cnz", " cred", "Cpt", "cnc", "nct", "crct", "cpt", " cpt", "acnt", " cct", "crnt", "connt", "cnz", "conred", "crnc", "account", "npt", "Cct", "concount", "nnt", "connc", "nnc", "acred", "Cnz"], "k": ["ka", "kl", "kr", "ke", "kn", "wk", "ark", "sk", "key", "kg", "kan", "kid", "K", "kin", "ko", "ijk", "kick", "ks", "ik", "kat", "ek", "kar", "kt", "ku", "ok", "ak", "ph", "kw", "kk", "q", "kj", "mk", "km", "ck", "tk", "dk", "unk", "uk", "kh"], "stream": ["loop", "pair", "iter", "REAM", "open", "sync", "console", "sw", "port", "network", "pool", "status", "engine", "table", "progress", "instance", "ream", "channel", "dd", "host", "context", "row", "form", "impl", "window", "trace", "or", "iterator", "speed", "socket", "each", "proc", "handler", "Steam", "conv", "inter", "log", "reader", "stack", "buffer", "wrapper", "transform", "output", "os", "spec", "path", "data", "pipe", "input", "monitor", "sample", "Stream", "inner"], "buf": ["cur", "uf", "buff", "pkg", "img", "tmp", "msg", "pool", "cap", "db", "vec", "seq", "proc", "err", "cb", "fac", "conv", "cv", "mu", "buffer", "alloc", "Buffer", "cmd", "txt", "queue", "mem", "orig", "arr"], "curChar": ["currentByte", "curStr", " curchar", " curByte", "curByte", "currentChar", " curStr", "Curchar", "CurStr", "CurChar", "curchar", "CurByte", "currentchar", "currentStr"], "numChars": ["NumChars", "numchARS", "numBuffARS", "numBuffrs", "numCharARS", "numCharards", "numchars", "numchrs", "NumChrs", "numCharrs", "numChARS", "numChards", "Numchards", "numBuffars", "numChrs", "Numchars", "NumchARS", "NumChARS", "numchards", "Numchrs", "NumChards", "numCharars", "numBuffards"]}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n\t\\n\t\\n\t\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\t\\n\t\tint ans = 100000;\\n\t\tfor(int i=0;i<n;i++){\\n\t\t\tans *= 1.05;\\n\t\t\tif(ans%1000>0){\\n\t\t\t\tans = ((ans/1000)+1) * 1000;\\n\t\t\t}\\n\t\t}\\n\t\tcout(ans);\\n\t}\\n\t\\n\t\\n\t\\n\tpublic static void cout(int n){\\n\t\tSystem.out.println(n);\\n\t}\\n}", "target": "173", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "asc", "sm", "mc", "osc", "Scan", "anc", "cr", "Sc", "out", "sel", "c", "sub", "bc", "cc", "sys", "proc", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "uc", "nc", "sq", "cs", "tc", "rec", "se", "pc", "ser", "desc", "isc", "scl", "sv", "rs", "sp", "esc"], "n": ["nb", "an", "en", "nv", "size", "nn", "w", "oln", "o", "l", "np", "b", "ns", "x", "nas", "c", "nes", "d", "nr", "g", "nt", "nm", "v", "no", "tn", "nets", "ng", "on", "j", "number", "sn", "m", "nu", "nl", "index", " N", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "num", "net", "count", "len", "N", "p", "mn"], "ans": ["asks", "an", "uns", "ars", "ians", "ms", "ents", "names", "ups", "ds", "aps", "ports", "ann", "als", "banks", "actions", "ons", "ints", "ns", "AN", "ins", "ones", "aus", "vals", "faces", " fans", "ks", "ops", " scans", " orphans", "ts", "arts", "vs", " means", "ats", "nets", "oos", "sets", "ends", "olds", "lets", "ants", "eps", "xs", "posts", "points", "ANS", " opens", "can", "ls", "gs", "ions", "lan", "cs", "nan", " spans", "offs", "pins", "books", "amps", "ens", "outs", "ids", "eds"], "i": ["bi", "ish", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "mill", "gu", "iu", "ie", "b", "di", "pi", "qi", "x", "g", "my", "mi", "ini", "ci", "y", "id", "sim", "j", "io", "I", "ind", "q", "init", "me", "m", "index", "ki", "ii", "gi", "us", "t", "is", "li", "hi", "ui", "ix", "im", "ic", "phi", "u"]}}
{"code": "import java.util.*;\\npublic class Main\\n{\\n    public static void main(String[] args)\\n    {\\n        int count = 0;\\n        boolean sw = false;\\n        int max = Integer.MIN_VALUE;\\n        int min = Integer.MAX_VALUE;\\n        double dMax = Double.MIN_VALUE;\\n        double dMin = Double.MAX_VALUE;\\n        //\\n        Scanner sc = new Scanner(System.in);\\n        int a1 = sc.nextInt();\\n        int a2 = sc.nextInt();\\n        int a3 = sc.nextInt();\\n\\n        if (a1+a2+a3 <= 21)\\n        {\\n            System.out.println(\"win\");\\n        }else\\n        {\\n            System.out.println(\"bust\");\\n        }\\n\\n        sc.close();\\n    }\\n\\n    public class Pair<F,S>\\n    {\\n        private final F first;\\n        private final S second;\\n\\n        Pair(F first,S second)\\n        {\\n            this.first = first;\\n            this.second = second;\\n        }\\n\\n        public void print() { System.out.println(\"(\"+this.first+\",\"+this.second+\")\"); }\\n\\n        //get\\n        public F first() {return this.first;}\\n        public S second() {return this.second;}\\n\\n        @Override\\n        public boolean equals(Object object)\\n        {\\n            if (object instanceof Pair)\\n            {\\n                Pair pair = (Pair)object;\\n                return this.first==pair.first && this.second==pair.second;\\n            }else\\n            {\\n                return false;\\n            }\\n        }\\n\\n        @Override\\n        public int hashCode()\\n        {\\n            return Objects.hash(first,second);\\n        }\\n    }\\n}", "target": "129", "substitutes": {"count": ["size", "total", "cache", "test", "depth", "state", "req", "counter", "sum", "const", "conf", "c", "amount", "flag", "nt", "type", "current", "process", "length", "weight", "index", "Count", "ount", "z", "code", "num", "ctr", "val"], "max": ["mx", "total", "last", "right", "up", "MAX", "ax", "x", "c", "med", "r", "end", "act", "mod", "bot", "default", "range", "h", "f", "gt", "m", "Max", "root", "head", "base", "ex", "est"], "min": ["in", "lt", "nn", "arm", "param", "ax", "art", "amin", "mod", "start", "ma", "ni", "le", "st", "m", "index", "pre", "mins", "MIN", "serv", "Min", "emin", "p", "im", "est"], "dMax": ["fMod", "dmax", "dAx", " dmax", "dhMax", " dMod", " dAx", "dhmax", "dhMod", "dMod", "fmax", "fMax", "dhAx", "fAx"], "dMin": ["dlMIN", "dMIN", "dbMin", "sMIN", "dbmin", "dbPos", "smin", "dPos", "sMin", "sPos", "dlPos", "dlMin", "dmin", "dbMIN", "dlmin"]}}
{"code": "import java.util.*;\\nimport static java.lang.Math.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\t// \u5165\u529b\\n\t\tint[][] c  = new int[3][3];\\n\t\tfor(int i = 0; i < 3; i++){\\n\t\t    for(int j = 0; j < 3; j++){\\n\t\t        c[i][j] = sc.nextInt();\\n\t\t    }\\n\t\t}\\n\t\t\\n\t\t// \u8a08\u7b97\\n\t\tString result = \"No\";\\n\t\tfor(int a1 = -200; a1 <= 200; a1++){\\n\t\t    boolean bool = true;\\n\t\t    int b1 = c[0][0] - a1;\\n\t\t    int b2 = c[0][1] - a1;\\n\t\t    int b3 = c[0][2] - a1;\\n\t\t    int a2 = c[1][0] - b1;\\n\t\t    int a3 = c[2][0] - b1;\\n\t\t    if(c[1][1] != a2 + b2) bool = false;\\n\t\t    if(c[1][2] != a2 + b3) bool = false;\\n\t\t    if(c[2][1] != a3 + b2) bool = false;\\n\t\t    if(c[2][2] != a3 + b3) bool = false;\\n\t\t    if(bool){\\n\t\t        result = \"Yes\";\\n\t\t        break;\\n\t\t    }\\n\t\t}\\n\t\t\\n\t\t// \u51fa\u529b\\n\t\tSystem.out.println(result);\\n\t\t\\n\t}\\n}\\n\\n\\n", "target": "88", "substitutes": {"sc": [" scr", " ser", "ch", " cons", "sk", " scorer", " pc", "Sc", " scans", " subsc", " sh", "sys", "SC", " Sc", "rc", " SC", "scan", "ss", " cr", "cs", " sk", "ser", " sp", "sa", " rc", " unsc", " sch", "Scan"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws NumberFormatException,\\n\t\t\tIOException {\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t\tint n = Integer.parseInt(in.readLine()), maximum = Integer.MIN_VALUE, minimum;\\n\t\tint[] timeRate = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\ttimeRate[i] = Integer.parseInt(in.readLine());\\n\t\t}\\n\t\tminimum = timeRate[0];\\n\t\tfor (int x = 1; x < n; x++) {\\n\t\t\tif (maximum < timeRate[x] - minimum) {\\n\t\t\t\tmaximum = timeRate[x] - minimum;\\n\t\t\t}\\n\t\t\tif (minimum > timeRate[x]) {\\n\t\t\t\tminimum = timeRate[x];\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(maximum);\\n\t}\\n}", "target": "208", "substitutes": {"in": [" din", "old", "add", "std", "In", "it", "check", "din", "file", " out", "from", "all", "mm", "world", "l", "user", "b", "sum", "ins", "thin", "asin", "by", "bin", "out", "ad", "form", "doc", "d", "get", "el", "inc", "r", "ini", "sys", "err", "on", "id", "io", "ind", "al", "IN", "init", "log", "scan", "reader", "OUT", "info", "con", "readable", "gin", "isin", "is", "t", "nin", "stream", "input", "serv", "session", "inn", "inf", "inner", "ic", "cin"], "n": ["nb", "an", "en", "size", "nd", "nn", "max", "network", "all", "o", "l", "np", "k", "ns", "c", "un", "nr", "r", "nt", "no", "v", "nm", "ng", "on", "name", "j", "number", "sn", "q", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "count", "net", "len", "N", "p", "mn"], "maximum": ["significant", "limit", "result", "expression", "highest", "python", "largest", "limited", "integer", "successful", "total", "information", "max", "exclusive", "available", "history", "MAX", "position", "status", "higher", "provided", "variable", "population", "latest", "absolute", "multiple", "volume", " Maximum", "management", "Minimum", "extreme", "forward", "approximately", "sufficient", "specified", "collection", "number", "capacity", "length", "document", "value", "may", "initial", "within", "secondary", "imum", "output", "directory", "necessary", "conservative", "hest", "monitor", "message", "maxwell", "Maximum", "termination", "sequence", "average"], "minimum": ["limit", "required", "manager", "expression", "largest", "missing", "partial", "integer", "optional", "null", "information", "taker", "position", "FINEST", "none", "provided", "higher", "surface", "variable", "portion", "lower", "latest", "displayText", "please", "volume", "left", "dimension", "management", "Minimum", "approximately", "extreme", "sufficient", "reasonable", "only", "range", "default", "member", "min", "minute", "specified", "requisite", "number", "reference", "mal", "duration", "beta", "m", "initial", "within", "username", "original", "begin", "existence", "secondary", "supported", "conservative", "request", "nil", "message", "monitor", "Maximum", "termination", "negative", "description", "second"], "timeRate": ["templateData", "timerate", "imeCount", " timeCode", "timeGate", "TimeRange", "timeRating", "runtimeRange", "templateRating", "timeCode", "timeFactor", "timeoutRate", "TimeRate", " timeRule", "timeRule", "templateRate", "imeRule", "timeTime", " timeData", "TimeRule", " timeRange", "timeoutGate", "timeoutRange", "imerate", "templateTime", "runtimeFactor", "TimeCode", "timeCount", "dateRate", "dateData", " timeFactor", " timeGate", " timeCount", "nameFactor", "dateRating", "runtimeRule", "nameRate", "templateRange", "timeRange", " timerate", "imeFactor", "nameCode", "imeTime", "timeData", "imeCode", "hashRule", "daterate", "imeRange", "runtimeRate", " timeRating", "imeGate", "namerate", "hashRange", "hashRate", "templaterate", "timeoutCount", " timeTime", "imeRate"], "i": ["bi", "ms", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "key", "PI", "xi", "di", "percent", "pi", "qi", "c", "this", "g", "my", "mi", "point", "ini", "ci", "y", "sim", "id", "j", "io", "uri", "I", "ind", "print", "q", "init", "me", "m", "batch", "ii", "gi", "us", "info", "is", "li", "hi", "ui", "client", "inner", "ix", "im", "ic", "phi", "u", "ri"], "x": ["dx", "mx", "px", "sw", "max", "check", "exclusive", "tx", "xx", "xd", "key", "ax", "xf", "chain", "xi", "k", "xt", "step", "xc", "xes", "fx", "xp", "ctx", "el", "window", "work", "act", "ux", "v", "ick", "ox", "X", "y", "j", "wx", "xs", "xxxx", "q", "yx", "inx", "rx", "batch", "any", "exp", "slice", "xy", "ext", "full", "ex", "pl", "xxx", "ct", "ix", "xa", "lex"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString S = sc.next();\\n\t\tString S1 = S.replace(\"0\",\"\");\\n\t\tint n1 = S1.length();\\n\t\tint n0 = S.length() - n1;\\n\t\tint min = Math.min(n1,n0);\\n\t\t\tSystem.out.println( 2 * min);\\n\\n\t}\\n\\n}", "target": "14", "substitutes": {"sc": ["ch", "sync", "s", "cle", "asc", "sm", "mc", "osc", "anc", "sac", "cr", "ec", "Sc", "ko", "sel", "c", "dec", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "sch", "sec", "gc", "scan", "ss", "cl", "nc", "system", "tc", "cs", "sq", "pc", "ser", "isc", "desc", "scl", "sv", "sp", "esc"], "S": ["CS", "s", "SER", "T", "Source", "STR", "STAT", "SU", "US", "SL", "SE", "H", "SAM", "P", "A", "SM", "V", "SA", "ST", "M", "C", "RS", "SB", "SI", "SC", "SR", "GS", "I", "G", "IS", "SP", "R", "BS", "Str", "L", "NS", "B", "F", "N", "SH", "SS"], "S1": ["s1", "SU1", " S0", "S2", "N01", "R1", "s01", "SU2", "N2", "SU01", "S01", "S0", "R01", "R2", " S01", "R0", " S2", "s2", "N0", "N1"], "n1": ["t0", "sn0", "sn01", " nau", "nn0", "n00", "on3", "int0", "sn001", "onau", "int3", "sn1", "nau", "n01", " n3", "int1", "ns0", "N00", "n001", "nn01", " n00", "ns1", "nn1", "tau", "int00", "N3", "ns001", "on0", "ns01", "t3", "nn001", "on1", "n3", "N0", "N1", "t1"], "n0": ["ln4", "sn0", "l1", " n4", "l0", " n2", "sn4", "ln0", "ln02", "sn1", "l2", "ln1", "N2", " n02", "n4", "sn02", "n02", "n2", "N0", "N1"], "min": ["dem", "in", "lt", "max", "sol", "diff", "aug", "none", "don", "rain", "mine", "first", "amin", "sum", "lower", "conf", "rel", "sin", "mi", "score", "mod", "only", "minute", "search", "Mini", "just", "mini", "inter", "star", "m", "beta", "rest", "shift", "mins", "minimum", "sort", "minus", "MIN", "ne", "dist", "scale", "Min", "dot", "stat", "emin", "len", "n", "div", "mean", "average", "small", "mn"]}}
{"code": "// package app;\\n\\nimport java.util.Arrays;\\nimport java.util.Scanner;\\nimport java.util.stream.Stream;\\n\\npublic class Main {\\n\\n    public static void main(final String[] args) throws Exception {\\n        final Scanner sc = new Scanner(System.in);\\n\\n        final String S = sc.next();\\n        // final int A = sc.nextInt();\\n        // final int A = sc.nextInt();\\n        // final int B = sc.nextInt();\\n        // final int C = sc.nextInt();\\n\\n        // System.out.println();\\n        StringBuffer sb = new StringBuffer(S);\\n        sb.setCharAt(3, '8');\\n        System.out.println(sb.toString());\\n\\n        // System.out.println(A <= X && A + B >= X ? \"YES\" : \"NO\");\\n\\n    }\\n}", "target": "18", "substitutes": {}}
{"code": "import java.util.*;\\npublic class Main {\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    String wk = sc.next();\\n    String[] ballArray = wk.split(\"\");\\n    int ballNum = 0;\\n    for (int i = 0;i < ballArray.length;i++){\\n      if (ballArray[i].equals(\"1\")) {\\n        ballNum = ballNum + 1;\\n      }\\n    }\\n\tSystem.out.println(ballNum);\\n  }\\n}", "target": "165", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "sk", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "dec", "bc", "cc", "sys", "screen", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "nc", "system", "tc", "cs", "sq", "pc", "ser", "isc", "desc", "scl", "sv", "sp", "esc"], "wk": ["wr", "wn", "ws", "WF", "nw", "week", "wb", "w", "WH", "wp", "sk", "won", "war", "wig", "wt", "ww", "ko", "WI", "ew", "kt", "WW", "ak", "wh", "wx", "NW", "kw", "wm", "WC", "fw", "wa", "WM", "hw", "wl", "wal", "War", "dk", "yk", "wit", "wid", "wy", "wi"], "ballArray": ["ballsRest", "bareArray", "barearray", "brusharray", " ballString", "rayArray", "rayCount", " ballCount", "bareAr", "brushString", " ballarray", "ballsString", "ballsarray", "ballsArray", "ballarray", "squarearray", "rayAA", "BallArea", "squareAr", "BallArray", "rayAr", "ballAA", "BallAA", "ballArea", "ballAr", " ballAA", "brushRest", "squareArray", "brushArray", "ballRest", "ballString", "squareArea", "BallAr", " ballRest", "ballCount", " ballAr", "bareArea", "Ballarray", "BallCount"], "ballNum": ["ballNo", "rayN", "fillNum", "glnum", "ballnum", "ballN", " ballnum", "ballNUM", "fillPos", "ballConn", "BallBu", "BallMsg", "BallConn", "rayNo", "fillMsg", "broadNum", "ballBu", " ballPos", "ballPos", "cardNum", "BallNum", "broadN", "broadNo", "BallPos", "BallNUM", "BallNumber", "bellInt", "BallNo", " ballMsg", "squareNUM", "squareNum", "cardnum", "ballInt", " ballBu", "squarenum", "cardConn", " ballConn", "ballNumber", " ballNUM", "BallN", "ballMsg", "bellnum", "bellNUM", "cardBu", "squareInt", "rayNumber", "rayNum", "broadNumber", "Ballnum", "bellNum", "glNum", "glInt", "fillNUM", "glNUM"], "i": ["bi", "in", "multi", "ms", "si", "ti", "ai", "ip", "it", "gu", "iu", "ie", "key", "o", "l", "xi", "di", "pi", "qi", "x", "ei", "my", "mi", "uu", "ini", "ci", "y", "err", "sim", "id", "span", "j", "io", "uri", "iq", "I", "ind", "q", "init", "me", "m", "index", "ki", "\u0438", "ii", "gi", "us", "ims", "ski", "li", "ex", "hi", "ui", "cli", "ji", "sql", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tStringBuilder text = new StringBuilder();\\n\t\tint count = 1;\\n\t\twhile (true) {\\n\t\t\tint num = scan.nextInt();\\n\t\t\tif (num == 0) {\\n\t\t\t\tscan.close();\\n\t\t\t\ttext.deleteCharAt(text.lastIndexOf(\"\\n\"));\\n\t\t\t\tSystem.out.println(text.toString());\\n\t\t\t\tbreak;\\n\t\t\t} else {\\n\t\t\t\ttext.append(\"Case \").append(count).append(\": \").append(num).append(\"\\n\");\\n\t\t\t\tcount++;\\n\t\t\t}\\n\t\t}\\n\t}\\n\\n}", "target": "97", "substitutes": {"scan": ["an", "scroll", "spin", "query", "report", "access", "ch", "sync", "pass", "check", "set", "read", "gen", "connect", "send", "re", "ann", "run", "sum", "save", "row", "out", "seek", "sc", "get", "parse", "sin", "ner", "skip", "r", "find", "sys", "range", "search", "can", "reach", "gate", "san", "system", "se", "con", "vis", "ser", "scale", "stat", "n", "store", "match", "sur", "sv", "Scan"], "text": ["tt", "old", "report", "list", "buff", "struct", "json", "content", "pdf", "quick", "read", "msg", "test", "comment", "TEXT", "state", "image", "translation", "binary", "context", "out", "template", "format", "left", "prefix", "str", "nt", "end", "article", "config", "title", "print", "document", "string", "pattern", "value", "command", "xml", "word", "log", "buffer", "write", "math", "output", "detail", "select", "path", "t", "ext", "label", "Text", "code", "txt", "message", "ct", "temp", "layout", "inner", "sequence", "description", "history", "note", "event"], "count": ["nb", "core", "size", "cur", "total", "unique", "check", "max", "then", "cache", "test", "next", "comment", "depth", "state", "coord", "counter", "sum", "found", "conf", "created", "c", "amount", "coll", "trace", "draw", "nt", "find", "cell", "id", "current", "start", "error", "tf", "number", "process", "length", "ind", "value", "child", "command", "index", "thread", "batch", "Count", "detail", "every", "t", "offset", "ount", "bound", "n", "ctr", "sequence"], "num": ["result", "nb", "val", "mom", "eng", "mult", "part", "non", "snap", "max", "um", "ord", "cal", "msg", "numbered", "np", "coord", "tim", "sum", "nam", "unit", "note", "norm", "nm", "no", "draw", "dec", "NUM", "conv", "number", "alph", "Number", "nom", "nu", "good", "mon", "index", "sam", "zero", "Num", "con", "na", "one", "net", "n", "prim", "sym", "mn"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner kbs = new Scanner(System.in);\\n\t\tString S = kbs.next();\\n\t\tString T = kbs.next();\\n\t\tint A = kbs.nextInt();\\n\t\tint B = kbs.nextInt();\\n\t\tString U = kbs.next();\\n\t\tif(U.equals(S)){\\n\t\t\tA -= 1;\\n\t\t}\\n\t\tif(U.equals(T)){\\n\t\t\tB -= 1;\\n\t\t}\\n\t\tSystem.out.printf(\"%d %d\\n\", A,B);\\n\t\tkbs.close();\\n\t}\\n\\n}\\n", "target": "155", "substitutes": {"kbs": ["ktaos", "okbis", "arknos", "kbis", "unkbs", "okbs", "ckiffs", " kuts", "kindbs", "unkbis", "ckbles", "dkbs", "unkbi", "kuBS", " kcs", "ktbc", "dkbl", "kickcs", "kabs", "kbc", " kbas", "arkBS", "kcs", "kubs", "kris", " kbi", " kris", "kickuts", "dkber", "kickris", " kber", "kubas", "kBS", " kiffs", "ktuts", " kbl", "kickbs", " knos", "arkbs", " kjs", "kickaos", " kbles", " kiss", " kBS", "kindiffs", "ktbos", "kebs", "okjs", "kjs", "ckabs", "dkiss", " ksb", "unkbos", "kejs", "kindbles", "kber", "kebos", "kesb", " kaos", "kiffs", " kabs", "oksb", "ckbs", "ikkber", " kbos", "kbl", "kbles", "okbi", "ikkiss", "kunos", "kbos", "kindabs", "kbas", "kickbc", "ikkbl", "knos", "ksb", "okbos", "kaos", "kuts", "arkbas", " kbis", "kickbos", "ikkbs", "ktris", " kbc", "kbi", "kiss", "ktbs", "ktcs"], "S": ["CS", "DS", "SF", "s", "SER", "ESS", "SOURCE", "SU", "SL", "US", "SE", "Y", "P", "Su", "SM", "V", "SA", "ST", "Si", "C", "SI", "SC", "SR", "GS", "I", "SP", "SQL", "JS", "L", "N", "SN", "SS"], "T": ["XT", "TG", "GT", "TIT", "TI", "AT", "WT", "TL", "TM", "RT", "P", "TR", "IT", "PT", "ET", "TS", "TB", "V", "TP", "TH", "ST", "TE", "TT", "TN", "TC", "Ty", "TA", "t", "TV", "N", "TY", "TF"], "A": ["AY", "AB", "AT", "BA", "EA", "AC", "As", "HA", "P", "AS", "RA", "CA", "SA", "AV", "AE", "Alpha", "LA", "AR", "AA", "TA", "App", "AL", "ACE", "IA", "Ant", "AP", "Av", "AU", "AM", "AST", "Ax", "AN", "An"], "B": ["AB", "Bs", "BR", "BB", "J", "BU", "D", "BA", "E", "b", "IB", "VB", "H", "Y", "Z", "P", "BT", "TB", "V", "BD", "M", "C", "BC", "WB", "G", "BI", "OB", "R", "BS", "EB", "LB", "BL", "Reb", "L", "N", "DB"], "U": ["GT", "OU", "UV", "UN", "UD", "CU", "EU", "UC", "URI", "E", "SU", "US", "UR", "LU", "H", "UU", "MU", "V", "Ut", "UE", "UX", "UM", "G", "UT", "I", "UF", "UP", "Us", "L", "PU", "F", "Q", "UL", "UID", "UI", "O", "UTF", "u"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int N = sc.nextInt();\\n    int[] H = new int[N];\\n    for (int i = 0; i < N; i++) {\\n      H[i] = sc.nextInt();\\n    }\\n\\n    for (int i = N-2; i >= 0; i--) {\\n      if (H[i] - H[i+1] > 1) {\\n        System.out.println(\"No\");\\n        return;\\n      }\\n      if (H[i] > H[i+1]) {\\n        H[i]--;\\n      }\\n    }\\n    System.out.println(\"Yes\");\\n  }  \\n}", "target": "74", "substitutes": {"sc": ["irc", " scr", "ch", "sync", "sb", "sw", "cle", "src", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "c", "bc", "cc", "sys", "SC", "lc", " Sc", "rc", " SC", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "pb", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "dc", "capt", "isc", "desc", "scl", "sv", "sp", "esc"], "N": ["NP", "NI", "NG", "S", "NA", "J", "D", "T", "NH", "NM", "K", "Net", "Z", "P", "NT", "V", "M", "C", "NOR", "Sn", "NO", "Ni", "NE", "NB", "I", "TN", "R", "NR", "NN", "Ns", "Num", "Total", "NS", "SN", "L", "F", "GN", "n", "ND", "NC", "AN"], "H": ["HE", "Host", "J", "HTTP", "HH", "T", "NH", "K", "HI", "HD", "MH", "HTML", "HO", "OH", "PH", "Length", "HA", "HC", "P", "DH", "Head", "HM", "RH", "EH", "V", "TH", "AV", "M", "HB", "X", "He", "Header", "CH", "h", "HS", "PP", "His", "I", "G", "HT", "R", "HQ", "HL", "GO", "B", "F", "Q", "GH", "Form", "HEAD", "SH", "HP"], "i": ["in", "multi", "list", "si", "ip", "set", "chain", "zi", "di", "ini", "me", "info", "mac", "ski", "hi", "n", "phi", "it", "ie", "status", "qi", "x", "y", "sim", "uri", "q", "init", "ami", "index", "ori", "asi", "ii", "gi", "us", "base", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "key", "ei", "j", "io", "ni", "I", "ind", "ij", "is", "li", "ui", "client", "ix", "sequence", "yi", "ti", "ai", "port", "xi", "pi", "parent", "mi", "v", "ity", "ci", "iso", "id", "m", "\u0438", "batch", "eu", "z", "im", "u"]}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n \\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tint[] rate = new int[8];\\n\t\tint hi = 0;\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\tint col = sc.nextInt();\\n\t\t\tif (col < 400) {\\n\t\t\t\trate[0]++;\\n\t\t\t} else if (col < 800) {\\n\t\t\t\trate[1]++;\\n\t\t\t} else if (col < 1200) {\\n\t\t\t\trate[2]++;\\n\t\t\t} else if (col < 1600) {\\n\t\t\t\trate[3]++;\\n\t\t\t} else if (col < 2000) {\\n\t\t\t\trate[4]++;\\n\t\t\t} else if (col < 2400) {\\n\t\t\t\trate[5]++;\\n\t\t\t} else if (col < 2800) {\\n\t\t\t\trate[6]++;\\n\t\t\t} else if (col < 3200) {\\n\t\t\t\trate[7]++;\\n\t\t\t} else {\\n\t\t\t\thi++;\\n\t\t\t}\\n\t\t}\\n\t\tint min = 0;\\n\t\tfor (int i : rate) {\\n\t\t\tif (i != 0) {\\n\t\t\t\tmin++;\\n\t\t\t}\\n\t\t}\\n\t\tif (hi != 0 && min == 0) {\\n\t\t\tSystem.out.println(1 + \" \" + hi);\\n\t\t} else {\\n\t\t\tint max = min + hi;\\n\t\t\tSystem.out.println(min + \" \" + max);\\n\t\t}\\n\t}\\n}", "target": "94", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "cr", "Sc", "sel", "c", "bc", "cc", "sys", "screen", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "sq", "cs", "tc", "system", "ck", "pc", "ser", "isc", "desc", "scl", "sv", "rs", "sp", "esc"], "N": ["NP", "NI", "NG", "S", "NA", "D", "T", "Ne", "NM", "K", "NH", "No", "Net", "H", "NT", "V", "M", "C", "X", "Sn", "NO", "Ni", "Size", "Number", "I", "NB", "TN", "R", "NL", "NR", "NN", "Ns", "Num", "CNN", "NC", "NS", "L", "n", "PN", "SN"], "rate": ["rated", "tt", "core", "delay", "create", "sync", "priority", "domain", "cycle", "test", "status", "sequence", "send", "re", "race", "pe", "mode", "rat", "percent", "prime", "scope", "rage", "fee", "ine", "rates", "pan", "trace", "speed", "r", "parse", "rating", "score", "date", "Rate", "late", "range", "line", "change", "res", "play", "age", "rice", "process", "erate", "force", "rank", "trade", "ry", "power", "device", "gate", "use", "go", "write", "times", "te", "zero", "se", "ime", "rot", "scale", "base", "rand", "tree", "rule", "mem", "pr", "ate", "rs", "ride"], "hi": ["limit", "ti", "phil", "lim", "mid", "hot", "low", "his", "zi", "hid", "HI", "di", "pi", "hyp", "ko", "he", "ei", "med", "lo", "mi", "co", "high", "ci", "iso", "hl", "ht", "ma", "po", "h", "cu", "hh", "ni", "height", "hop", "ushi", "ha", "mu", "go", "ho", "gi", "info", "zero", "upper", "chi", "hist", "Hi", "li", "hz", "hy", "cli", "ui", "hei", "ih", "fi", "hu", "phi", "hea", "wi"], "i": ["bi", "in", "multi", "si", "ti", "ai", "e", "ip", "it", "s", "iu", "ie", "o", "l", "zi", "xi", "di", "pi", "qi", "x", "c", "g", "mi", "point", "v", "ini", "ci", "y", "id", "sim", "name", "oi", "j", "io", "a", "I", "ind", "print", "ij", "m", "index", "ki", "batch", "go", "ii", "gi", "info", "us", "t", "is", "li", "z", "ui", "client", "n", "sql", "ji", "ix", "p", "im", "ic", "phi", "u"], "col": ["fl", "COL", "column", "pol", "var", "item", "cur", "obj", "mat", "prop", "resp", "cat", "pt", "tx", "chron", "cal", "ric", "ll", "block", "coord", " Col", "box", "aj", "loc", "char", "row", "form", "c", "ctx", "def", "icol", "coll", "mot", "Col", "tab", "cell", "co", "fc", "cont", "roll", "ont", "lc", "cho", "ell", "sect", "mon", "cond", "cl", "cmd", "rec", "ctl", "serv", "rot", "txt", "ct", "city", "rol", "dl", "val", "cor"], "min": ["floor", "lt", "ai", "lim", "sol", "mid", "local", "low", "mine", "rain", "amin", "sum", "lower", "lin", "sub", "rel", "left", "lo", "sin", "my", "mi", "mean", "mod", "start", "range", "minute", "po", "pos", "mini", "ni", "ind", "mel", "pri", "m", "pre", "mon", "mins", "sort", "begin", "MIN", "ne", "Min", "rand", "stat", "mem", "val", "small", "mn"], "max": ["add", "mx", "size", "mad", "nd", "total", "last", "right", "tmp", "MAX", "mid", "ax", "step", "aux", "prime", "conf", "x", "med", "window", "work", "act", "end", "high", "mod", "range", "ma", "win", "gt", "inter", "rest", "Max", "exp", "full", "z", "rand", "val", "grow"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tMain main = new Main();\\n\t\tmain.solve();\\n\t}\\n\\n\tvoid solve() {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint a = Integer.parseInt(sc.next());\\n\t\tint b = Integer.parseInt(sc.next());\\n\t\tint cnt=0;\\n\t\tfor(int i=a;i<=b;i++) {\\n\t\t\t//n1: i\u3092\u53cd\u8ee2\u3057\u305f\uff11\u3064\u76ee\u306e\u6841\\n\t\t\tint n1 = i%10,n5=i/10000%10;\\n\t\t\tint n2 = i/10%10,n4=i/1000%10;\\n\t\t\tif(n1==n5&&n2==n4)cnt++;\\n\t\t}\\n\t\tSystem.out.println(cnt);\\n\t\tsc.close();\\n\t}\\n\\n}\\n", "target": "104", "substitutes": {"sc": ["ch", "sync", "mc", "osc", "cr", "ec", "Sc", "sci", "c", "cons", "inc", "bc", "cc", "sys", "SC", "res", "lc", " Sc", "rc", "usc", "st", "sch", "sec", "exec", "gc", "scan", "cl", "uc", "nc", "sq", "cs", "tc", "spec", "se", "tch", "pc", "ctl", "dc", "isc", "desc", "scl", "cu", "sv", "sp", "esc"], "a": ["an", "aff", "la", "ba", "ab", "ea", "ai", "s", "aaaa", "from", "aaa", "ada", "aj", "area", "A", "r", "ia", "ma", "ta", "ao", "va", "alpha", "ac", "ae", "ach", "ga", "oa", "sta", "aa", "t", "as", "apa", "pa", "sa", "ca", "n", "isa", "u"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "e", "s", "wb", "l", "bs", "gb", "by", "db", "c", "d", "g", "r", "bc", "v", "y", "bot", "bar", "f", "h", "m", "mb", "bis", "bp", "t", "br", "base", "z", "B", "rb", "n", "p"], "cnt": ["Count", "ecct", "ecnc", "cct", "Cnt", " cct", "Cct", "count", " count", "ecount", " cnc", "ecnt", "cnc", "Cnc"], "i": ["bi", "multi", "si", "ti", "ai", "iii", "ip", "iter", "iu", "gu", "o", "zi", "xi", "di", "pi", "qi", "x", "ei", "mi", "v", "ini", "uu", "ci", "y", "sim", "j", "f", "ni", "I", "ij", "m", "ki", "ii", "gi", "ims", "li", "z", "hi", "ui", "cli", "n", "ji", "client", "ix", "phi", "u"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n\\n        int f = 2;\\n        int s = 1;\\n        String str = null;\\n        InputStreamReader isr = new InputStreamReader(System.in);\\n        BufferedReader br = new BufferedReader(isr);\\n\\n        try {\\n            str = br.readLine();\\n\\n            String[] i = str.split(\" \");\\n\\n\\n            for (int j = 0; j < 3; j++) {\\n                if (i[j].equals(\"5\")) {\\n                    --f;\\n                } else if (i[j].equals(\"7\")) {\\n                    --s;\\n                }\\n            }\\n        } catch (NumberFormatException e) {\\n            System.out.println(\"NO\");\\n        } catch (IOException e) {\\n            System.out.println(\"NO\");\\n        }\\n        if (f == 0 && s == 0) {\\n            System.out.println(\"YES\");\\n        } else {\\n            System.out.println(\"NO\");\\n        }\\n    }\\n}", "target": "16", "substitutes": {"f": ["fl", "aff", "fun", "ft", "alf", "e", "sf", "fort", "w", "fd", "fr", "l", "fg", "b", "k", "x", "out", "c", "d", "g", "r", "v", "fc", "bf", "fac", "tf", "h", "df", "a", "q", "m", "fm", "rf", "cf", "t", "z", "fa", "F", "n", "p", "fs", "u"], "s": ["ms", "si", "S", "ws", "sf", "ds", "stats", "gets", "es", "l", "ins", "ns", "rs", "c", "ts", "js", "v", "ats", "span", "its", "xs", "gs", "ls", "m", "ss", "sq", "cs", "os", "ims", "t", "ps", "is", "n", "p", "sv", "fs", "sp", "eds"], "str": ["wr", "bl", "cur", "obj", "vol", "pt", "msg", "fr", "tr", "STR", "dr", "del", "char", "text", "out", "doc", "form", "gr", "r", "cont", "name", "res", "print", "string", "st", "m", "Str", "stable", "output", "t", "data", "input", "txt", "n", "div", "pr", "ctr", "temp", "p", "sp", "arr"], "isr": [" isrc", "ISrt", "ISrs", "ssrc", "risR", " isrs", "issR", "issrs", "israr", "IsR", "ISr", "Isrs", "ssr", "isrt", "isrc", "Israr", " isrt", "Isr", "ssrt", "risr", "isrs", "isR", "ISrc", "risrar", "risrs", "issr", "ssrs", "issrar"], "br": ["wr", "bsp", "ber", "hr", "bl", "kr", "ch", "BR", "Br", "mr", "fr", "eb", "tr", "dr", "bd", "bs", "cr", "rel", "nr", "r", "bh", "yr", "bt", "bridge", "sr", "lr", "shr", "bre", "bp", "rb", "bm", "pr", "er", "bro", "bn"], "i": ["yi", "bi", "multi", "si", "ti", "ai", "ip", "it", "ir", "iu", "o", "xi", "di", "pi", "qi", "ei", "iri", "ig", "ini", "ci", "y", "oi", "io", "uri", "I", "ij", "ii", "info", "bis", "ims", "mac", "is", "li", "hi", "cli", "ui", "ix", "im", "ic", "ri"], "j": ["jo", "Ja", "oj", "bj", "obj", "jc", "J", "json", "jack", "last", "it", "pt", "msg", "key", "next", "o", "kid", "art", "jit", "state", "dj", "b", "k", "jj", "req", "aj", "jl", "bo", "jen", "jp", "uj", "left", "js", "g", "off", "note", "ja", "y", "bot", "sim", "ind", "ij", "q", "kj", "m", "exp", "att", "z", "job", "jump", "ev", "ct", "ji", "__", "im", "kh"]}}
{"code": "\\nimport java.util.*;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tMain main = new Main();\\n\t\tmain.run();\\n\t}\\n\\n\\n\\n\tpublic void run() {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n=sc.nextInt();\\n\t\tint y=sc.nextInt();\\n\\n\t\tfor(int i=0; i<=n; i++) {\\n\t\t\tfor(int j=0; j<=n; j++) {\\n\t\t\t\tif(i+j>n)continue;\\n\t\t\t\tint k=n-(i+j);\\n\t\t\t\tif(10000*i + 5000*j + 1000*k == y) {\\n\t\t\t\t\tSystem.out.println(i+\" \"+j+\" \"+k);\\n\t\t\t\t\tsc.close();\\n\t\t\t\t\treturn;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(\"-1 -1 -1\");\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "133", "substitutes": {"sc": ["irc", "ch", "sync", "sb", "cle", "cam", "asc", "mc", "osc", "scrib", "ctrl", "anc", "cr", "ec", "Sc", "c", "ctx", "sub", "cgi", "bc", "cc", "sys", "fc", "sim", "SC", "cu", "lc", " Sc", "rc", "usc", "sec", "sch", "nl", "gc", "cl", "pb", "nc", "sq", "cs", "tc", "system", "pc", "ctl", "dc", "isc", "capt", "desc", "scl", "soc", "sh", "sv", "sp", "esc"], "n": ["nb", "an", "en", "in", "nn", "s", "w", "o", "l", "np", "ns", "x", "out", "c", "d", "g", "nt", "v", "ng", "on", "a", "h", "sn", "ni", "q", "m", "nu", "nl", "ny", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "p", "mn"], "y": ["yi", "sy", "ch", "e", "hot", "ye", "key", "ey", "o", "b", "Y", "by", "gy", "x", "c", "sky", "ys", "ly", "my", "yr", "sys", "ky", "ty", "height", "vy", "h", "a", "py", "yt", "iy", "m", "yo", "oy", "ny", "t", "xy", "z", "yy", "p", "ic"], "i": ["yi", "bi", "in", "si", "at", "ti", "ai", "ip", "it", "iu", "ie", "ir", "zi", "xi", "di", "pi", "qi", "x", "ei", "iri", "mi", "ini", "ci", "ia", "iq", "I", "ind", "ij", "ql", "ami", "init", "index", "ori", "ki", "asi", "ii", "gi", "t", "is", "li", "hi", "ui", "cli", "ix", "fi", "im", "ic", "phi", "u", "ri"], "j": ["jo", "oj", "bj", "uni", "obj", "jc", "json", "J", "it", "jack", "fr", "er", "jit", "dj", "b", "jj", "aj", "jl", "bs", "out", "el", "jp", "son", "uj", "rel", "js", "g", "ion", "v", "ja", "err", "lock", "ju", "ind", "ij", "q", "je", "kj", "ort", "ne", "br", "z", "job", "other", "jump", "ji", "pr", "ge", "im", "note", "u"], "k": ["ka", "kl", "ke", "kr", "wk", "kind", "sk", "kan", "kid", "K", "ko", "kick", "ks", "ik", "kat", "ek", "kar", "kt", "ku", "ok", "ak", "kk", "kw", "q", "uk", "kj", "mk", "ki", "km", "ck", "tk", "z", "dk", "unk", "ijk", "kh", "ikk"]}}
{"code": "import java.util.*;\\nclass Main{\\n    public static void main(String[] args){\\nScanner in = new Scanner(System.in);\\n       int a = in.nextInt();\\n       int b = in.nextInt();\\n       int c = in.nextInt();\\n       \\n       if (a == 5 || a==7 || b == 5 || b == 7 || c == 5 || c == 7)\\n           if (a + b + c == 17)\\n                System.out.printf(\"YES\");\\n            else\\n                System.out.printf(\"NO\");\\n       else\\n            System.out.printf(\"NO\");\\n       \\n       \\n               \\n    }\\n    \\n}", "target": "16", "substitutes": {"in": [" din", "en", "add", "std", "In", "null", "check", "din", "file", "gen", "from", "all", "mm", "l", "user", "state", "sum", "ins", "thin", "rt", "by", "bin", "out", "doc", "i", "conf", "get", "inc", "cgi", "r", "or", "conn", "ini", "err", "on", "io", "ind", "IN", "init", "log", "scan", "reader", "info", "per", "con", "as", "gin", "isin", "is", "serv", "stream", "input", "client", "n", "inn", "inf", "inner", "cin"], "a": ["ap", "an", "la", "access", "ba", "ab", "da", "ea", "at", "ai", "au", "ade", "aka", "ax", "l", "aaa", "aj", "area", "am", "d", "A", "era", "r", "act", "ar", "ia", "ak", "ta", "ma", "ao", "va", "app", "ac", "ae", "ga", "oa", "aa", "as", "t", "sta", "fa", "sa", "ca", "isa", "aq", "ed", "al"], "b": ["nb", "bi", "ba", "ab", "bl", "bb", "ib", "fb", "sb", "e", "bu", "ub", "wb", "eb", "l", "bs", "ob", "by", "db", "gb", "i", "d", "g", "r", "or", "bc", "v", "bf", "y", "bar", "cb", "j", "f", "beta", "abs", "mb", "bis", "br", "base", "B", "rb", "n", "p", "be", "u"], "c": ["abc", "cp", "ch", "e", "cache", "cm", "mc", "chain", "l", "cd", "ec", "cr", "arc", "d", "r", "cos", "bc", "v", "cc", "C", "co", "ci", "fc", "cb", "f", "h", "lc", "rc", "ac", "can", "cond", "uc", "cs", "tc", "cf", "etc", "con", "t", "dc", "pc", "z", "ce", "ct", "n", "ca", "div", "cu", "unc", "cin", "u", "cor"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt(), a = sc.nextInt(),b=sc.nextInt();\\n\t\t//int x=sc.nextInt();//,k=sc.nextInt();\\n\t\tlong sum=0,count=0,flag=0,max=-999999,min=99999;\\n\t\tlong[] array=new long[101];\\n\t\t//String s=sc.next(),t=sc.next();\\n\t\tString buff;\\n\t\t//String[] arrays = new String[a];\\n\t\tfor(int i=1;i<=n;i++) {\\n\t\t\tbuff = String.valueOf(i);\\n\t\t\tfor(int j=0;j<buff.length();j++) {\\n\t\t\t\tsum+=Integer.parseInt(buff.substring(j,j+1));\\n\t\t\t}\\n\t\t\t//System.out.println(sum);\\n\t\t\tif(sum>=a&&sum<=b)count+=i;\\n\t\t\tsum=0;\\n\t\t}\\n\t\tSystem.out.println(count);\\n\\n\\n\\n\t}\\n\tpublic static int sample(int n) {\\n\t\treturn n;\\n\t}\\n\\n}\\n", "target": "212", "substitutes": {"sc": ["irc", "ch", "sync", "cam", "asc", "mc", "osc", "ctrl", "cr", "ec", "Sc", "ko", "sci", "c", "sub", "inc", "dec", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "ss", "cl", "nc", "sq", "cs", "tc", "ck", "tch", "pc", "ctl", "psc", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "en", "nn", "e", "l", "ns", "c", "i", "nr", "ner", "nm", "no", "r", "on", "name", "j", "h", "sn", "fn", "nu", "ne", "t", "na", "z", "cn", "num", "N", "p"], "a": ["an", "la", "ba", "ab", "da", "at", "ai", "e", "s", "aj", "area", "x", "c", "am", "A", "r", "ak", "j", "f", "alpha", "ac", "m", "oa", "aa", "sa", "p"], "b": ["nb", "bi", "ba", "ab", "bb", "fb", "e", "l", "bs", "c", "i", "d", "r", "bc", "v", "y", "j", "h", "f", "m", "br", "t", "z", "B", "rb", "p"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint A=sc.nextInt();\\n\t\tint B=sc.nextInt();\\n\t\tint plug=A;\\n\t\tint ans=1;\\n\\n\t\tif(B==1) {\\n\t\t\tans=0;\\n\t\t\tSystem.out.println(ans);\\n\t\t\treturn;\\n\t\t}\\n\\n\t\twhile(true) {\\n\t\t\tif(B<=plug) {\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tplug+=A-1;\\n\t\t\tans++;\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n}", "target": "101", "substitutes": {"sc": ["ch", "sw", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "out", "ko", "c", "sub", "inc", "g", "bc", "cc", "sys", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "nc", "system", "cs", "tc", "sq", "se", "pc", "ctl", "ser", "dc", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "A": ["AB", "S", "AT", "D", "PA", "BA", "T", "AF", "K", "AC", "U", "AI", "H", "As", "P", "RA", "AD", "V", "CA", "SA", "ACC", "M", "C", "AR", "a", "G", "I", "AA", "R", "IA", "GA", "AP", "L", "AU", "AM", "All", "N", "API", "AN", "An"], "B": ["AB", "Bs", "S", "BR", "BB", "J", "BU", "D", "BA", "T", "CB", "AC", "b", "IB", "U", "BP", "VB", "USB", "Y", "Z", "P", "TB", "V", "BO", "M", "C", "SB", "BC", "NB", "I", "G", "BI", "R", "BS", "But", "LB", "BL", "Reb", "L", "Q", "N", "DB"], "plug": ["bi", "add", "ab", "CP", "loop", "be", "au", "pen", "UD", "ub", "bank", "BA", "launch", "pad", "pack", "cap", "ctrl", "b", "usb", "aud", "aus", "enable", "butt", "db", "P", "PL", "push", "abin", "ug", "mod", "start", "supp", "feed", "plot", "power", "capacity", "rob", "length", "bridge", "log", "uc", "BUG", "plugin", "Plug", "link", "Cap", "pl", "bus", "mer", "man", "p", "mean", "pp", "button"], "ans": ["asks", "an", "uns", "acs", "ars", "anks", "ians", "ms", "ents", "names", "users", "rans", "ds", "aps", "aos", "ows", "ann", "locks", "ons", "ins", "AN", "ns", "aus", "vals", " fans", "ks", " scans", "ts", "cons", " orphans", "arts", "lines", "ats", "nets", "lets", "olds", "ants", "eps", "xs", "points", "caps", "ANS", "ads", "can", "ls", "cs", "con", " spans", "ores", "offs", "pins", "ums", "amps", "ens", "outs", "ids", "eds"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t\\n\t\tScanner stdIn = new Scanner(System.in);\\n\t\tint n = stdIn.nextInt();\\n\t\tint x;\\n\t\tfor (int i = 1; i <= n; i++) {\\n\t\t\tx = i;\\n\t\t\tif (x % 3 == 0) {\\n\t\t\t\tSystem.out.print(\" \" + i);\\n\t\t\t\tcontinue;\\n\t\t\t}\\n\t\t\t\\n\t\t\tdo {\\n\t\t\t\tif (x % 10 == 3) {\\n\t\t\t\t\tSystem.out.print(\" \" + i);\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t\tx /= 10;\\n\t\t\t} while(x != 0);\\n\t\t}\\n\t\tSystem.out.println();\\n\t}\\n}\\n\\n", "target": "154", "substitutes": {"stdIn": ["standardIns", "stdOut", "STDIns", "stOut", "stdIns", "stInit", "STDIt", "standardInit", " stdIns", " stdInit", " stdIt", "stIN", " stdIN", "standardOut", "stIn", "standardIt", " stdOut", "STDOut", "standardIn", "stdIN", "standardIN", "stdIt", "STDIn", "stdInit"], "n": ["nb", "and", "nn", "nw", "w", "network", "o", "l", "np", "ns", "c", "d", "g", "nt", "nm", "no", "ng", "j", "number", "sn", "ni", "nu", "m", "nl", " N", "nc", "ln", "nan", "ne", "t", "na", "z", "cn", "num", "count", "net", "N", "p", "mn"], "x": ["dx", "mx", "px", " xx", "ai", "e", "hello", "tx", "w", "xe", "xx", "xd", "key", "test", "xf", "l", "xi", "xt", "k", "xc", "fx", "xp", "mix", "xes", "v", "ci", "ox", "X", "y", "mod", "j", "wx", "xs", "inx", "rx", "php", "index", "cox", "exp", "t", "hex", "xy", "color", "z", "ex", "xxx", "xxxxxxxx", "ix", "xa", "lex", "history"], "i": ["yi", "bi", "in", "multi", "si", "ti", "ai", "integer", "ip", "it", "iu", "ie", "o", "l", "zi", "xi", "b", "k", "di", "pi", "by", "qi", "c", "iri", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "conv", "f", "uri", "I", "ind", "ij", "init", "m", "index", "ori", "ki", "batch", "ii", "gi", "us", "slice", "is", "li", "hi", "ui", "ji", "ix", "p", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        int count=0;\\n        String str = sc.next();\\n        for(int i=0; i<str.length();i++){\\n            if(str.charAt(i) == '1'){\\n                count++;\\n            }\\n        }\\n        System.out.println(count);\\n    }\\n}\\n", "target": "165", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "sm", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "sub", "dec", "bc", "cc", "sys", "screen", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "ss", "nc", "sq", "tc", "cs", "pc", "ser", "isc", "desc", "syn", "scl", "sv", "sp", "esc"], "count": ["nb", "old", "report", "add", "result", "size", "list", "total", "quiet", "check", "cache", "read", "empty", "status", "test", "now", "state", "sum", "const", "counter", "found", "conf", "c", "amount", "coll", "flag", "trace", "find", "nt", "score", "type", "must", "current", "err", "number", "length", "child", "hold", "index", "cond", "call", "Count", "t", "ount", "stat", "num", "code", "n", "ctr", "mean"], "str": ["result", "list", "cur", "obj", "ch", "iter", "it", "vol", "s", "ocr", "msg", "status", "next", "fr", "oct", "STR", "tr", "dr", "char", "text", "out", "form", "gr", "comm", "g", "r", "seq", "dat", "name", "j", "res", "print", "string", "st", "Str", "sl", "exp", "url", "t", "data", "br", "input", "txt", "n", "pr", "desc", "ctr", "p", "enc", "sp", "arr"], "i": ["yi", "bi", "in", "multi", "ms", "si", "ti", "ai", "ip", "it", "iu", "gu", "o", "xi", "k", "di", "pi", "qi", "x", "ei", "g", "my", "mi", "v", "ini", "ci", "y", "id", "oi", "j", "io", "a", "uri", "I", "m", "ori", "ki", "\u0438", "ii", "gi", "us", "t", "is", "li", "hi", "ui", "cli", "ji", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main\\n{\\n    public static void main(String[] args)\\n    {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int[] xs = new int[n];\\n        for (int i = 0; i < n; i++) {\\n            xs[i] = sc.nextInt();\\n        }\\n\\n        int hit = 0;\\n        int count = 0;\\n        int expected = 1;\\n        for (int i = 0; i < n; i++) {\\n            if (xs[i] == expected) {\\n                hit++;\\n                expected++;\\n            }\\n            else {\\n                count++;\\n            }\\n        }\\n\\n        if (hit == 0) {\\n            System.out.println(-1);\\n        }\\n        else {\\n            System.out.println(count);\\n        }\\n    }\\n}\\n", "target": "234", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "c", "ctx", "bc", "cc", "sys", "SC", "lc", "rc", "cv", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "system", "cs", "tc", "sq", "ck", "pc", "ctl", "isc", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "en", "size", "nn", "all", "o", "l", "np", "k", "ns", "out", "x", "c", "un", "d", "g", "nt", "no", "v", "nm", "ng", "on", "name", "j", "f", "number", "sn", "length", "q", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "p", "mn"], "xs": ["icks", "px", "eas", "pes", "xe", "xx", "fts", "ns", "ists", "bs", "xc", "x", "xes", "xp", "phis", "atts", "ts", "ocks", "iffs", "aces", "vs", "ics", "ats", "its", "eps", "owners", "inters", "posts", "gs", "fs", "ls", "aws", "ires", "qs", "ims", "xy", "xxx", "amps", "pps", "rex", "rs", "hs", "ints"], "i": ["in", "multi", "si", "ip", "set", "PI", "chain", "zi", "di", "point", "ini", "err", "iy", "me", "info", "hi", "phi", "it", "ie", "o", "qi", "x", "ik", "y", "sim", "uri", "q", "init", "ami", "ori", "any", "gi", "ii", "us", "base", "cli", "ji", "ic", "ri", "fire", "bi", "iu", "gu", "ei", "iri", "g", "j", "io", "I", "print", "ij", "is", "li", "ui", "client", "ix", "entry", "ti", "ai", "xi", "pi", "mi", "v", "ity", "ci", "iso", "oi", "id", "f", "php", "ki", "\u0438", "batch", "ims", "fi", "im", "u"], "hit": ["stick", "slot", "bug", "item", "bit", "iter", "fit", "success", "it", "check", "help", "set", "up", "cache", "hot", "test", "status", "read", "see", "ping", "with", "sum", "p", "miss", "host", "out", "x", "push", "act", "find", "fail", "attack", "hub", "search", "error", "h", "ait", "hop", "index", "handle", "batch", "call", "write", "exp", "att", "Hit", "stat", "ex", "match", "wait"], "count": ["result", "scroll", "report", "size", "list", "total", "iter", "it", "check", "max", "cache", "test", "status", "now", "allow", "sum", "counter", "found", "x", "out", "c", "ctx", "act", "nt", "find", "score", "cont", "search", "number", "length", "ph", "value", "child", "index", "cond", "call", "Count", "debug", "att", "offset", "z", "code", "num", "ct", "p", "val"], "expected": ["allowed", "required", "size", "sent", "it", "handled", "set", "kind", "seen", "test", "status", "served", "pe", "expr", "alias", "found", "failed", "foo", "row", "reported", "x", "pected", "created", "left", "flag", "act", "type", "pect", "default", "current", "needed", "want", "should", "length", "ind", "actual", "safe", "value", "command", "index", "target", "updated", "exp", "used", "offset", "ex", "code", "ct", "checked", "ed", "p"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\t//?????\u00a3?????????\\n\t\tint numN;\\n\\n\t\ttry {\\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\\n\t\t\tString line = br.readLine();\\n\\n\t\t\tnumN = Integer.parseInt(line);\\n\\n\t\t\t//????????\u00a8\\n\t\t\tString outputNum = \"\";\\n\\n\t\t\tfor (int i = 1; i <= numN; i++) {\\n\\n\\n\\n\t\t\t\t//3????????\u00b0????????\u00a7??????\\n\t\t\t\tif(i % 3 == 0){\\n\t\t\t\t\toutputNum +=\" \" + i;\\n\\n\t\t\t\t//3???????????\u00b0???????????\u00a7??????\\n\t\t\t\t}else if (String.valueOf(i).indexOf(\"3\") != -1) {\\n\t\t\t\t\toutputNum +=\" \" + i;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\t//???????????????\\n\t\t\tSystem.out.println(outputNum);\\n\t\t}catch (NumberFormatException e) {\\n\t\t\tSystem.out.println(e);\\n\t\t} catch (IOException e) {\\n\t\t\tSystem.out.println(e);\\n\t\t}\\n\\n\t}\\n\\n}", "target": "154", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner scanner = new Scanner(System.in);\\n        int value = scanner.nextInt();\\n        int maxTime = scanner.nextInt();\\n        int tempCost = 1001;\\n        for(int k = 0;k < value;k++){\\n            int cost = scanner.nextInt();\\n            int time = scanner.nextInt();\\n            if(time <= maxTime&&cost <= tempCost){\\n                tempCost = cost;\\n            }\\n        }\\n        if(tempCost == 1001) System.out.println(\"TLE\");\\n        else System.out.println(tempCost);\\n    }\\n}\\n", "target": "8", "substitutes": {"scanner": ["canner", "cannie", "caninner", "Scannie", "reachner", "Scanter", "scannie", "caner", "scanter", " scanbuilder", "Scaninner", "canener", " scanener", "canbuilder", "reachener", "grannie", "granner", "Scaner", "graner", "scanbuilder", "reachter", "Scanner", "canter", "scanener", "scaninner", " scaner", "Scanener", "scaner", "granter", "reachbuilder", " scanter", " scaninner"], "value": ["val", "size", "total", "hello", "integer", "VI", "level", "position", "sequence", "key", "Value", "gain", "unit", "V", "ue", "version", "v", "type", "start", "range", "current", "number", "length", "VALUE", "power", "index", "view", "values", "function", "scale", "count", "TV", "maximum", "vector"], "maxTime": [" maxtime", "MaxTime", "maxTIME", "maxValue", "MaxTIME", "Maxtime", "MaxLength", "totalLength", "totalTime", "fulltime", " maxValue", "fullTime", "MaxValue", "maxLength", "fullTIME", "maxtime", "fullValue", "totalValue", " maxTIME", " maxLength", "totaltime"], "tempCost": ["tempCal", "TempDiff", "mintWork", "TempCost", "tmpNeed", " tempPrice", "tmpCal", "TempPrice", "maxCost", "origPrice", "tempCount", "origNeed", "tempLength", "temcost", " tempCal", "origcost", "tempWork", "mintCost", "temNeed", "empCost", "maxNeed", "empLength", "Tempcost", "tmpWork", "tmpLength", "tempDoc", "TempNeed", " tempNeed", "tmpcost", "mintcost", "empNeed", "tempTime", "empDiff", "tempPrice", "mintTime", "tmpCost", "tmpDiff", "empTime", "empCount", "tmpCount", "TempLength", "tempcost", "temCost", " tempCount", "maxDoc", "temDoc", "tmpDoc", "origCost", "tempDiff", "tempNeed", "tmpTime", " tempcost", "empWork", "empCal", "maxcost", "empcost"], "k": ["ka", "kl", "kr", "kn", "it", "wk", "w", "sk", "kid", "K", "b", "ko", "kick", "i", "sc", "work", "ik", "isk", "ek", "g", "learn", "kt", "v", "ask", "ku", "ick", "ak", "j", "kw", "q", "kk", "ac", "m", "mk", "kj", "km", "go", "ck", "unk", "n", "kh", "ikk"], "cost": ["runtime", "cp", "core", "contact", "ace", "kind", "cal", "func", "coin", "CO", "expensive", "const", "sum", "step", "price", "fee", "c", "eff", "amount", " costs", "efficient", "find", "cc", "co", "score", "end", "date", "start", "charge", "make", "pay", "needed", "rice", "length", "gross", "rank", "ac", "force", "php", "cast", "transform", "cf", "scale", "count", "aco", "match", "weight", "tax", "Cost"], "time": ["runtime", "order", "etime", "port", "ace", "TIME", "max", "now", "Time", "instance", "tim", "clock", "price", "context", "form", "trace", "speed", "date", "id", "name", "length", "duration", "timer", "money", "m", "times", "tc", "trip", "ime", "t", "timeout", "request", "message", "year", "weight", "race", "est"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\\n\t\t\t\tint n = sc.nextInt();\\n\\n\t\t\t\tint array[] = new int[n];\\n\\n\t\t\t\tfor(int i = 0; i < n; i++) {\\n\t\t\t\t\tint a = sc.nextInt();\\n\t\t\t\t\tarray[i] = a;\\n\t\t\t\t}\\n\\n\t\t\t\tfor(int i = 0; i < n; i++) {\\n\t\t\t\t\tSystem.out.print(array[(n - 1) - i]);\\n\t\t\t\t\tif(i == n - 1) {\\n\t\t\t\t\t\tbreak;\\n\t\t\t\t\t}\\n\t\t\t\t\tSystem.out.print(\" \");\\n\t\t\t\t}\\n\t\t\t\tSystem.out.println();\\n\t}\\n}", "target": "79", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "arc", "c", "bc", "cc", "sys", "fc", "ng", "SC", "conv", "lc", "rc", "cv", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "system", "tc", "cs", "sq", "uc", "ck", "pc", "ctl", "isc", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "en", "size", "nn", "names", "null", "network", "all", "ll", "none", "o", "l", "np", "ns", "out", "x", "c", "d", "un", "g", "norm", "nm", "nt", "v", "no", "ng", "name", "j", "number", "sn", "ni", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "count", "len", "N", "gn", "p", "mn"], "array": ["field", "result", "list", "section", "integer", "pair", "vector", "null", "say", "sequence", "attribute", "table", "instance", "area", "ape", "audio", "row", "amount", "window", "library", "air", "Array", "ar", "ray", "range", "collection", "number", "length", "component", "value", "string", "hash", "answer", "arr", "arrow", "system", "object", "message", "grid", "angle", "auto", "database", "archive", "our", "ary", " Array"], "i": ["yi", "bi", "in", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "key", "chain", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "this", "g", "mi", "point", "v", "ini", "ity", "ci", "y", "sim", "err", "oi", "id", "j", "io", "f", "I", "ind", "q", "ij", "init", "iy", "me", "index", "ki", "\u0438", "ii", "gi", "info", "us", "ims", " I", "is", "li", "hi", "ex", "ui", "cli", "ji", "ix", "p", "im", "ic", "phi", "u", "ri"], "a": ["ana", "la", "ba", "ea", "ai", "au", "aaa", "b", "aj", "area", "p", "c", "am", "A", "ma", "ta", "j", "ao", "va", "alpha", "ac", "ach", "ata", "aa", "as", "sta", "t", "na", "pa", "z", "fa", "sa", "ca", "isa", "ed", "xa"]}}
{"code": "// Problem Matrix Maltiple\\n\\nimport java.util.Scanner;\\n\\nclass Main{\\n  public static void main(String[] args){\\n    // Config\\n    Scanner sc = new Scanner(System.in);\\n\\n    // Input\\n    String[] rowIn = sc.nextLine().split(\" \");\\n    int n = Integer.parseInt(rowIn[0]);\\n    int m = Integer.parseInt(rowIn[1]);\\n    int l = Integer.parseInt(rowIn[2]);\\n\\n    // Initialization\\n    int[][] A = new int[n][m];\\n    int[][] B = new int[m][l];\\n    long[][] C = new long[n][l];\\n    for(int i=0; i<n; i++){\\n      String[] tmp = sc.nextLine().split(\" \");\\n      for(int j=0; j<m; j++){\\n        A[i][j] = Integer.parseInt(tmp[j]);\\n      }\\n    }\\n    for(int i=0; i<m; i++){\\n      String[] tmp = sc.nextLine().split(\" \");\\n      for(int j=0; j<l; j++){\\n        B[i][j] = Integer.parseInt(tmp[j]);\\n      }\\n    }\\n\\n    // Matrix Multiple\\n    for(int i=0; i<n; i++){\\n      for(int j=0; j<l; j++){\\n        long tmp = 0;\\n        for(int k=0; k<m; k++){\\n          tmp += A[i][k] * B[k][j];\\n        }\\n        C[i][j] = tmp;\\n      }\\n    }\\n\\n    // Output\\n    for(int i=0; i<n; i++){\\n      for(int j=0; j<l-1; j++){\\n        System.out.print(C[i][j] + \" \");\\n      }\\n      System.out.print(C[i][l-1]);\\n      System.out.println();\\n    }\\n  }\\n}\\n\\n", "target": "204", "substitutes": {}}
{"code": "import java.util.*;\\n\\nclass Main{\\n  public static void main(String[] args){\\n     Scanner sc=new Scanner(System.in);\\n     int n=sc.nextInt();\\n     int T=sc.nextInt();\\n\\n     int answer=1001;\\n     for(int i=0;i<n;i++){\\n       int c=sc.nextInt();\\n       int t=sc.nextInt();\\n       if(c<answer&&t<=T){\\n         answer=c;\\n       }\\n     }\\n     System.out.println(answer!=1001?answer:\"TLE\");\\n  }\\n}", "target": "8", "substitutes": {"sc": ["irc", " scr", "ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "ko", "sci", "ctx", "inc", "cgi", "dec", "bc", "cc", "sys", "fc", "cont", "SC", "lc", "rc", "usc", "sec", "gc", "cl", "pb", "nc", "system", "cs", "tc", "sq", "ck", "pc", "ctl", "dc", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "en", "nn", "nw", "network", "l", "np", "ns", "x", "nr", "nt", "nm", "no", "v", "Ni", "name", "j", "sn", "ni", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "na", "num", "net", "N", "mn"], "T": ["GT", "S", "TI", "J", "VT", "D", "WT", "TM", "E", "K", "Y", "P", "PT", "TS", "TB", "A", "V", "TH", "M", "C", "W", "I", "TT", "G", "TN", "R", "TC", "TA", "TION", "L", "B", "F", "Q", "N", "Type", "TY"], "answer": ["order", "qa", "empty", "urn", "offer", "area", "accept", "unknown", "window", "ox", "mask", "ta", "issue", "vote", "value", "me", "TION", "continue", "equ", "aq", "archive", "result", "cache", "status", "term", "question", "version", "option", "remember", "search", "just", "q", " unanswered", "ant", "valid", "request", "qu", "query", "response", "yes", "know", "wer", "after", "reply", "ask", "address", "type", "error", "number", "answered", "command", "ence", "said", "zero", "ne", "about", "timeout", "grade", "energy", "be", "sequence", "entry", "echo", "ve", "integer", "test", "say", "comment", "v", "eni", "Answer", "uno", "exit", "message"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "iter", "ip", "it", "iu", "gu", "ie", "xi", "di", "pi", "qi", "x", "out", "mi", "ini", "ci", "y", "sim", "id", "j", "I", "ind", "q", "init", "me", "m", "ki", "asi", "ii", "gi", "us", "is", "li", "ex", "hi", "ui", "ix", "im", "ic", "phi", "qu"], "c": ["cp", "vc", "cache", "cat", "cod", "cm", "mc", "l", "k", "cd", "arc", "bc", "cc", "co", "C", "ci", "fc", "v", "cb", "cont", "lc", "erc", "rc", "cv", "q", "ac", "can", "m", "uc", "nc", "cs", "cf", "tc", "con", "pc", "dc", "cn", "ce", "ct", "ca", "cu", "ic", "unc"], "t": ["tt", "dt", "ot", "at", "e", "it", "pt", "test", "term", "et", "o", "l", "k", "ts", "g", "tz", "v", "kt", "type", "y", "ta", "j", "f", "q", "st", "m", "ant", "te", "tc", "z", "ct", "p"]}}
{"code": "\\n\\nimport java.util.*;\\nimport java.math.*;\\nimport java.util.Scanner;\\nimport java.math.BigInteger;\\n\\npublic class Main {\\n\tstatic final long mod = (int) (1e9 + 7);\\n\tstatic final int inf = (int) (1e9);\\n\tstatic final int maxn = (int) (1e5 + 10);\\n\\n\tstatic long ksm(long a, long b) {\\n\t\tlong ret = 1;\\n\t\twhile (b != 0) {\\n\t\t\tif (b % 2 == 1) {\\n\t\t\t\tret = ret * a % mod;\\n\t\t\t}\\n\t\t\tb >>= 1;\\n\t\t\ta = a * a % mod;\\n\t\t}\\n\t\treturn ret;\\n\t}\\n\\n\tstatic int n, q;\\n\tstatic String s;\\n\tstatic int sum[] = new int[maxn];\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner cin = new Scanner(System.in);\\n\t\tn = cin.nextInt();\\n\t\tq = cin.nextInt();\\n\t\ts = cin.next();\\n\t\tfor (int i = 1; i < n; i++) {\\n\t\t\tsum[i+1] = sum[i];\\n\t\t\tif (s.charAt(i) == 'C' && s.charAt(i - 1) == 'A') {\\n\t\t\t\tsum[i+1]++;\\n\t\t\t}\\n\t\t}\\n\t\tfor (int i = 1; i <= q; i++) {\\n\t\t\tint l = cin.nextInt(), r = cin.nextInt();\\n\t\t\tint ans = sum[r] - sum[l];\\n\t\t\tSystem.out.println(ans);\\n\t\t}\\n\t}\\n}", "target": "52", "substitutes": {"mod": ["fun", "add", "mult", "bit", "ai", "perm", " Mod", "um", "lib", "ver", "cmp", "prime", "trans", "x", "d", "Mod", "off", "tab", "deg", "ref", "fac", "comp", "id", "sim", "min", "mods", "modified", "MOD", "ind", "post", "le", "reg", "m", "log", "dev", "scale", "base", "num", "div", "od", "man", "mem", "temp", "val", "module", "dec"], "inf": ["aff", "bb", "ib", " ab", "lim", "eb", "bin", "eff", " eb", "bf", "Inf", "fac", "cb", "err", "reb", "mask", "f", "abs", " bi", "zero", "exp", "base", "z", "bound", "imal", "inv", "ipl", "ed"], "maxn": [" maxen", "maxnum", "axn", "MaxN", "MAXN", "axN", "MAXnum", "Maxen", " maxnum", "maxen", "Maxnum", "MAXn", "Maxn", " maxN", "maxN", "axnum", "MAXen"], "a": ["an", "add", "la", "ba", "ab", "at", "obj", "au", "it", "e", "o", "area", "arg", "x", "ad", "c", "am", "A", "g", "v", "ar", "y", "ia", "ta", "ma", "j", "f", "ao", "alpha", "ac", "ae", "m", "index", "aa", "as", "t", "na", "z", "sa", "p", "al", "u"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "e", "sb", "fb", "bu", "w", "o", "eb", "u", "ob", "bs", "binary", "bo", "x", "gb", "c", "d", "bg", "g", "or", "bc", "v", "bf", "y", "cb", "j", "m", "bp", "t", "br", "base", "z", "B", "rb", "p", "bn"], "ret": ["result", "ba", "ft", "be", "obj", "iter", "au", "mt", "ll", "re", "best", "Ret", "bd", "arg", "rt", "out", "x", "jp", "eff", "def", "reset", "g", "RET", "nt", "ref", "v", "ar", "rev", "pro", "j", " Ret", "res", "gt", "back", "value", "m", "alt", "t", "repl", " RET", "mem", "p", "val", "arr"], "n": ["nb", "an", "en", "in", "nn", "nw", "network", "o", "np", "u", "ns", "x", "c", "d", "nt", "v", "no", "ng", "name", "sn", "nu", "m", "nl", " N", "nc", "ln", "ne", "nan", "na", "z", "num", "net", "len", "N", "p", "mn"], "q": ["query", "qt", "dq", "qq", "quit", "ch", "qa", "e", "w", "ro", "k", "qv", "qi", "c", "g", "ue", "v", "j", "f", "iq", "m", "sq", "quant", "qs", "t", "z", "Q", "eq", "len", "queue", "p", "requ", "que", "u", "qu"], "s": ["ses", "S", "ws", "space", "sts", "sb", "ds", "stats", "csv", "gets", "series", "ns", "ins", "strings", "bs", "c", "ts", "js", "str", "lines", "sys", "ats", "ends", "its", "conv", "xs", "bits", "gs", "string", "ls", "fs", "sam", " ss", "ss", "sl", "sq", "ssl", "cs", "qs", "os", "so", "ims", "bis", "t", "ps", "is", "less", "sa", "sql", "sv", "rs", "sp", "css"], "sum": ["result", "add", "summary", "size", "ot", "si", "total", "vol", "dict", "max", "cache", "cat", "set", "um", " SUM", "cal", "status", "comment", "stats", "cum", "out", "ram", "sky", "parse", "share", "score", "oss", "sim", "range", "ma", "cu", "process", "sv", "hash", "Sum", "weight", "index", "tail", "sam", "mu", "ss", "scan", "zero", "sort", "use", "us", "info", "se", "scale", "na", "stat", "num", "su", "count", "sa", "mem", "match", "mean", "average"], "cin": [" din", "in", "zu", "kit", "vc", "pal", "tic", "maker", "cat", "nar", "mc", "rin", "coin", "zi", "stri", "jin", "lin", "kin", "c", " sin", "arin", "tin", "cgi", "sin", "cos", "parse", "zin", "ini", "ci", "ku", "cit", "circ", "can", "zo", "chu", "cz", "scan", "san", "cci", "cs", "slice", "vin", "cus", "isin", "cil", "cn", "nie", "tan", " cis", "aco", "cu", "dar", "ic"], "i": ["bi", "in", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "status", "o", "chain", "zi", "xi", "di", "pi", "qi", "x", "ei", "mi", "ity", "ini", "ci", "y", "id", "oi", "span", "sim", "j", "io", "uri", "f", "iq", "I", "print", "ij", "init", "me", "ami", "index", "ori", "ki", "\u0438", "asi", "gi", "ii", "info", "us", "ims", "is", "li", "hi", "ui", "cli", "ji", "ix", "im", "ic", "phi", "u", "ri"], "l": ["la", "lt", "e", "ll", "lv", "o", "lb", "x", "el", "c", "d", "lp", "tl", "ly", "v", "y", "j", "f", "lc", "le", "ls", "m", "lr", "nl", "sl", "il", "ln", "t", "li", "L", "p", "u"], "r": ["e", "ri", "vr", "mr", "o", "re", "tr", "rd", "dr", "rt", "c", "rel", "d", "ar", "res", "h", "rc", "m", "R", "lr", "rf", "rr", "t", "rb", "p", "er", "rs", "rar", "ru", "u", "ro"], "ans": ["an", "uns", "ars", "ms", "ents", "ians", " sums", "names", "ups", "rans", "ds", "aps", "ann", "ons", "ints", "ins", "ags", "ns", "aus", "vals", "ks", "arts", "lines", " means", "ats", "nets", "ras", "anes", "ants", "ANS", "ads", "gs", "ls", "orders", "ots", "cs", "as", "ors", "ps", "offs", "ations", "amps", "ings", "rs", "outs", "ids", "eds"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tString inStr;\\n\t\tinStr = inp();\\n\t\tString[] in;\\n\t\tin = inStr.split(\" \");\\n\\n\t\tint a = Integer.valueOf(in[0]);\\n\t\tint b = Integer.valueOf(in[1]);\\n\\n\t\tif (a < b)\\n\t\t\tSystem.out.println(\"a < b\");\\n\t\telse if (a > b)\\n\t\t\tSystem.out.println(\"a > b\");\\n\t\telse\\n\t\t\tSystem.out.println(\"a == b\");\\n\\n\t}\\n\\n\tprivate static String inp() throws Exception {\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\treturn br.readLine();\\n\t}\\n\\n}", "target": "179", "substitutes": {"inStr": ["inputSt", "inputString", "InSt", " inSt", "outString", "inSTR", "instr", "inputSTR", "inSt", " inSTR", " instr", "outStr", "InString", "outSTR", "Instr", " inString", "InStr", "nStr", "nstr", "nSt", "inString", "outSt", "nString", "inputStr", "outstr"], "in": ["query", "add", "en", "mat", "pin", "In", "it", "s", "check", "pp", "up", "din", "all", "rin", "sum", "ins", "rt", "char", "bin", "out", "login", "i", "c", "form", "el", "conf", "doc", "str", "inc", "r", "ini", "id", "err", "min", "ma", "print", "ac", "IN", "init", "m", "join", "log", "call", "reader", "info", "con", "gin", "t", "is", "isin", "nin", "vin", "input", "ex", "serv", "stream", "inn", "n", "inner", "session", "p", "inf", "im", "ic", "cin"], "a": ["an", "la", "ba", "eas", "ea", "au", "now", "o", "ax", "aaa", "aj", "area", "sha", "i", "am", "A", "this", "era", "act", "ar", "ta", "ma", "f", "ao", "va", "alpha", "ac", "ach", "ata", "ga", "oa", "aa", "sta", "t", "to", "data", "pa", "apa", "z", "as", "sa", "ca", "isa", "ed", "p"], "b": ["bi", "ba", "be", "bb", "ib", "e", "fb", "erb", "l", "ob", "gb", "bs", "db", "x", "by", "i", "c", "d", "g", "r", "bc", "v", "y", "bt", "bar", "j", "f", "h", "back", "m", "mb", "t", "z", "B", "rb", "n", "p", "u"], "br": ["wr", "bsp", "bi", "bl", "hr", "ba", "kr", "bj", "bb", "BR", "Br", "mr", "fr", "tr", "browser", "dr", "buf", "bd", "bs", "cr", "gb", "ov", "bg", "gr", "str", "nr", "r", "bh", "bc", "yr", "bt", "bar", "sp", "bridge", "shr", "bp", "rb", "bm", "div", "ctr", "bro", "bn"]}}
{"code": "\\nimport java.util.*;\\nimport java.io.*;\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        int c = sc.nextInt();\\n        int count = 0;\\n        for(int i = b; i<=c;i++){\\n            if(i%a==0){\\n               count++;\\n               break;\\n            }\\n            else{\\n                continue;\\n            }\\n        }\\n        if(count>0) System.out.println(\"OK\");\\n        else System.out.println(\"NG\");\\n    }\\n}\\n", "target": "28", "substitutes": {"sc": ["si", "ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "ctx", "inc", "bc", "cc", "sys", "fc", "SC", "conv", "lc", " Sc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "scan", "nc", "system", "cs", "tc", "sq", "ck", "tch", "pc", "ctl", "acc", "dc", "isc", "capt", "scl", "sh", "sv", "sp", "esc"], "a": ["an", "la", "ba", "size", "ea", "ai", "au", "total", "ama", "ax", "aj", "area", "am", "amount", "A", "window", "act", "mod", "ia", "ma", "ta", "f", "ao", "length", "alpha", "ac", "ae", "ach", "index", "xa", "oa", "aa", "sta", "as", "apa", "z", "num", "fa", "sa", "ca", "len", "n", "p", "val", "al"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "fb", "ib", "sb", "erb", "eb", "l", "bs", "gb", "db", "d", "g", "r", "bc", "v", "bf", "y", "bot", "cb", "bt", "f", "body", "ble", "mb", "blue", "bis", "bp", "br", "base", "B", "bound", "rb", "n"], "c": ["ch", "e", "com", "cache", "cm", "chain", "l", "cr", "arc", "ctx", "d", "g", "bc", "fc", "co", "C", "v", "cc", "f", "lc", "ac", "m", "cond", "gc", "cs", "tc", "cf", "etc", "con", "t", "dc", "ce", "ct", "n", "div", "p"], "count": ["nb", "result", "add", "report", "core", "size", "list", "contact", "close", "total", "check", "test", "next", "now", "group", "chain", "counter", "sum", "const", "found", "amount", "coll", "flag", "trace", "find", "nt", "cont", "must", "search", "number", "process", "length", "ind", "force", "follow", "body", "hold", "index", "batch", "call", "Count", "continue", "ount", "stat", "num", "ct", "client", "n", "ctr", "match", "sequence", "reset"], "i": ["bi", "multi", "si", "ti", "iter", "ai", "ip", "it", "iu", "ie", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "mi", "point", "v", "ini", "ci", "y", "sim", "id", "j", "uri", "I", "ind", "ij", "q", "init", "m", "index", "ki", "mu", "ii", "gi", "t", "is", "li", "hi", "ui", "cli", "n", "client", "ji", "ix", "im", "ic", "phi", "u"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t// \u6574\u6570\u306e\u5165\u529b\\n\t\tint a = sc.nextInt();\\n\t\tString f = sc.next();\\n\t\tString b = sc.next();\\n\t\tString[] c = new String[a];\\n\t\tString[] d = new String[a];\\n\t\tString e = \"\";\\n\t\tfor(int i = 0; i < a; i++){\\n\t\t\tc[i] = f.substring(i, i + 1);\\n\t\t} \\n\t\tfor(int i = 0; i < a; i++){\\n\t\t\td[i] = b.substring(i, i + 1);\\n\t\t}\\n\t\tfor(int i = 0; i < a; i++){\\n\t\t\te += c[i] + d[i];\\n\t\t}\\n\t\tSystem.out.println(e);\\n\t\t\\n\t\t\\n\t}\\n}", "target": "200", "substitutes": {"sc": [" scr", "ch", "sb", " scorer", "cr", "Sc", "c", " sh", "sys", "proc", "SC", " sa", " Sc", "rc", " SC", "scan", " cr", " ss", "ss", "sq", "system", "cs", " sk", " sw", " sp", "sa", "sv", "sp"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tint cnt5=0, cnt7=0;\\n\t\tfor(int i=0; i<3; ++i)\\n\t\t{\\n\t\t\tint x=sc.nextInt();\\n\t\t\tif(x==5) ++cnt5;\\n\t\t\telse if(x==7) ++cnt7;\\n\t\t}\\n\t\tSystem.out.println((cnt5==2 && cnt7==1)?\"YES\":\"NO\");\\n\t\tsc.close(); \\n\t}\\n\\n}", "target": "16", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "scrib", "anc", "cr", "Sc", "arc", "c", "sub", "bc", "cc", "sys", "fc", "SC", "lc", "rc", "usc", "sec", "sch", "nl", "gc", "cl", "scan", "uc", "pb", "nc", "sq", "tc", "cs", "system", "ck", "pc", "psc", "pl", "isc", "capt", "syn", "scl", "desc", "sv", "sp", "esc"], "cnt5": ["csum5", " cnt75", " cnc25", "cnc7", " cnc75", "cot5", "cnc3", "ccount5", "ctnt3", "cNT1", " cnc7", "cnc25", "cNT7", "cct5", "ctnc25", "cctL", "ctnt5", "cot75", " cct1", " cnt1", "cnt25", " cct7", "ctnt25", "ccount3", "cct1", "cnt1", "ctnc3", "csumL", "cnc5", "cct75", "cNT5", "cot7", "csum7", "crt25", " cctL", "cnt3", "cnt75", "cnc75", "cct7", "cot25", " cnc5", "crt5", "ccount25", "crt3", "csum1", "cNTL", "ctnc5", " cct5", " cntL", " cnt25", "cntL", "cct25"], "cnt7": ["cgt7", "cct8", " cnt13", "cant07", "cnc13", "Cnt07", "cnc7", "cot13", "cgt5", "cct07", "Cnt77", "cNT8", "cNT7", "cNT77", "cct5", "Cct5", " cnt8", "cot11", "cnc1", "cnt8", "cgt8", "cant8", " cct7", "cct13", "cct1", "Cnt7", "cnt1", "cnt11", "Cct07", "cnc5", "cot8", "cnt07", "Cct77", "cNT07", "cnt77", "Cnt1", "Cct1", "Cct7", "cot7", "cnc8", "cnc11", "cct7", " cct11", "cgt1", "Cct8", "cant7", " cct8", "Cnt5", " cct13", "cant77", "cnt13", " cnt11", "Cnt8", "cct11", "cct77"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "gu", "iu", "ie", "xi", "di", "pi", "qi", "my", "mi", "v", "ini", "ci", "id", "sim", "j", "io", "f", "I", "ind", "init", "me", "m", "index", "batch", "go", "ii", "gi", "info", "us", "t", "is", "li", "ui", "cli", "n", "ix", "im", "ic", "phi"], "x": ["dx", "mx", "px", " xx", "hello", "tx", "xe", "xx", "lat", "ax", "xf", "xi", "xt", "xc", "xes", "xp", "c", "fx", "ctx", "v", "ux", "X", "y", "ox", "wx", "xxxx", "inx", "rx", "php", "exp", "hex", "xy", "z", "ex", "xxx", "ix", "xa", "lex"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String args[]) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint x = sc.nextInt();\\n\t\tsc.close();\\n\t\tfor (int a = 1; a <= 9; a++) {\\n\t\t\tif (x % a == 0 && x / a <= 9) {\\n\t\t\t\tSystem.out.println(\"Yes\");\\n\t\t\t\treturn;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(\"No\");\\n\t}\\n}\\n", "target": "194", "substitutes": {"sc": ["ch", "cle", "asc", "mc", "osc", "scrib", "anc", "cr", "ec", "Sc", "out", "ko", "c", "sub", "dec", "bc", "cc", "sys", "SC", "lc", "wx", "rc", "RC", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "reader", "nc", "sq", "tc", "cs", "system", "pb", "uc", "ck", "pc", "ser", "psc", "syn", "isc", "sh", "scl", "sv", "sp", "esc"], "x": ["dx", "mx", "px", "max", "tx", "xx", "xd", "ax", "xf", "l", "xi", "xt", "p", "xc", "fx", "xp", "i", "c", "v", "ux", "X", "ox", "y", "f", "wx", "xs", "h", "inx", "rx", "index", "t", "hex", "xy", "z", "ex", "xxx", "n", "ix", "xa", "u"], "a": ["aff", "an", "la", "ba", "ka", "eas", "da", "ea", "at", "qa", "au", "ai", "e", "w", "aos", "from", "aba", "aka", "o", "b", "aj", "area", "sha", "el", "i", "am", "A", "era", "act", "ia", "ta", "j", "ma", "ao", "va", "alpha", "ac", "ae", "wa", "index", "ha", "ga", "oa", "aa", "as", "sta", "t", "na", "pa", "acc", "apa", "fa", "ica", "sa", "ca", "aq", "Ax", "xa", "u"]}}
{"code": "\\nimport java.io.*;\\nimport java.util.StringTokenizer;\\npublic class Main{\\n    public static void main(String[] args) throws IOException {\\n        scanner sc = new scanner(System.in);\\n        PrintWriter out = new PrintWriter(System.out);\\n\\n        int n = sc.nextInt();\\n        double sum = 0;\\n        for (int i = 0; i < n; i++) {\\n            sum+= 1/sc.nextDouble();\\n        }\\n        out.print(1/sum);\\n\\n        out.flush();\\n\\n    }\\n}\\nclass scanner{\\n    StringTokenizer st;\\n    BufferedReader br;\\n    public scanner(InputStream s){\\n        br = new BufferedReader(new InputStreamReader(s));\\n    }\\n    public scanner (String s) throws FileNotFoundException { br = new BufferedReader(new FileReader(s));}\\n\\n    public String next() throws IOException {\\n        while (st == null || !st.hasMoreTokens())\\n            st = new StringTokenizer(br.readLine());\\n        return st.nextToken();\\n    }\\n\\n    public int nextInt() throws IOException {\\n        return Integer.parseInt(next());\\n    }\\n\\n    public long nextLong() throws IOException {\\n        return  Long.parseLong(next());\\n    }\\n\\n    public String nextLine() throws IOException {\\n        return br.readLine();\\n    }\\n\\n    public double nextDouble() throws IOException {\\n        return Double.parseDouble(next());\\n    }\\n\\n    public boolean ready() throws IOException {\\n        return br.ready();\\n    }\\n}", "target": "120", "substitutes": {"sc": ["si", "ch", "sync", "asc", "mc", "osc", "ec", "cr", "Sc", "c", "ctx", "bc", "cc", "sys", "fc", "sim", "SC", "lc", "rc", "usc", "sch", "nl", "gc", "cl", "ss", "pb", "nc", "sq", "cs", "tc", "ck", "pc", "dc", "isc", "sh", "scl", "sv", "sp", "esc"], "out": ["in", "at", "ch", "OU", "null", "it", "console", "w", "file", "put", "all", "aos", "o", "Out", "flush", "x", "c", "window", "r", "nt", "v", "sys", "screen", "err", "on", "name", "error", "io", "res", "print", "log", "buffer", "ou", "OUT", "write", "info", "output", "os", "writer", "t", "to", "exit", "ex", "net", "client", "auto", "p", "outs"], "n": ["nb", "nd", "nn", "nw", "ll", "o", "l", "np", "k", "ns", "d", "nt", "no", "ng", "j", "sn", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "gn", "p", "mn"], "sum": ["summary", "size", " sums", "multi", "si", "total", "vol", "set", "um", "cal", "cum", " summed", "mix", "sky", "med", "volume", "square", "cos", "cost", "score", "sim", "fac", "SI", "sat", "ass", "hash", "Sum", "weight", "m", "sam", "mu", "hum", "zero", "dev", "se", "scale", "na", "count", "num", "sa", "su", "sample", "mean", "average"], "i": ["bi", "in", "multi", "ms", "si", "ti", "ai", "ip", "it", "iu", "ie", "o", "di", "pi", "qi", "x", "g", "my", "mi", "ini", "ci", "sim", "j", "io", "I", "ind", "q", "init", "me", "m", "gi", "ii", "us", "ims", "mac", "is", "li", "ex", "hi", "ui", "cli", "client", "ix", "im", "phi", "u"], "st": ["tt", " St", "bl", "irst", "ft", "std", "nd", "ste", "ost", "ch", "sb", "lt", "sw", "mt", "sts", "sm", "et", "fr", "sty", "first", "l", "tr", "rd", "const", "step", "th", "stri", "rt", " ST", "ust", "str", "r", "nt", "ST", "bt", "must", "start", "inst", "sn", "ut", "rest", "cl", "sl", "ss", "stable", "so", "storage", "se", "sta", "t", "ist", "St", "z", "stat", " superst", "ct", "sh", "p", "sv", "sp", "est"], "br": ["ber", "bsp", "wr", "bl", "hr", "ba", "kr", "bolt", "BR", "sb", "Br", "vr", "mr", "next", "bern", "rem", "fr", "tr", "b", "buf", "dr", "browser", "bd", "bs", "cr", "jp", "rel", "gr", "bg", "str", "ptr", "nr", "r", "bh", "bc", "bt", "sp", "bridge", "lr", "shr", "bre", "bp", "adr", "rb", "bm", "pr", "ctr", "bro", "bn"], "s": ["ies", " ls", "in", "ses", "ms", " inputs", "S", "ws", "sts", "sb", "ds", "w", "stats", "es", "l", "b", "ns", "ins", "ges", "bs", "ks", "c", "ts", "js", "ys", "str", "r", "ats", "sys", "y", "its", "a", "h", "xs", "gs", "south", "ls", "fs", "ers", "ss", "sl", "qs", "cs", "os", "less", "t", "ps", "is", "ves", "states", "p", "sv", "rs", "ids", "eds"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n    public static void main(String [] args) throws IOException{\\n        FastScanner sc=new FastScanner();\\n        PrintWriter out=new PrintWriter(System.out);\\n        int n=sc.nextInt();\\n        char [] ch=sc.next().toCharArray();\\n        int cnt=0;\\n        char p=ch[0];\\n        for(int i=1;i<n;i++){\\n            if(ch[i]!=p){\\n                cnt++;\\n                p=ch[i];\\n            }\\n        }\\n        cnt++;\\n        out.println(cnt);\\n        out.close();\\n    }\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nclass FastScanner{\t\\n    private int BUFFER_SIZE = 1 << 16;\\n   \\n   private  DataInputStream din;\\n   \\n   private  byte[] buffer;\\n   \\n   private int bufferPointer, bytesRead;\\n   \\n   public FastScanner() {\\n       din = new DataInputStream(System.in);\\n       buffer = new byte[BUFFER_SIZE];\\n       bufferPointer = bytesRead = 0;\\n   }\\n\\n   public FastScanner( String file_name) throws IOException {\\n       din = new DataInputStream(new FileInputStream(file_name));\\n       buffer = new byte[BUFFER_SIZE];\\n       bufferPointer = bytesRead = 0;\\n   }\\n   \\n   public String readLine() throws IOException {\\n        byte[] buf = new byte[64];\\n       int cnt = 0, c;\\n       while ((c = read()) != -1) {\\n           if (c == '\\n')\\n               break;\\n           buf[cnt++] = (byte) c;\\n       }\\n       return new String(buf, 0, cnt);\\n   }\\n   \\n   public String next() throws IOException{\\n\\n       byte c = read();\\n       while(Character.isWhitespace(c)){\\n           c = read();\\n       }\\n       \\n        StringBuilder builder = new StringBuilder();\\n       builder.append((char)c);\\n       c = read();\\n       while(!Character.isWhitespace(c)){\\n           builder.append((char)c);\\n           c = read();\\n       }\\n       \\n       return builder.toString();\\n   }\\n\\n   public int nextInt() throws IOException {\\n       int ret = 0;\\n       byte c = read();\\n       while (c <= ' ')\\n           c = read();\\n        boolean neg = (c == '-');\\n       if (neg)\\n           c = read();\\n       do {\\n           ret = ret * 10 + c - '0';\\n       } while ((c = read()) >= '0' && c <= '9');\\n\\n       if (neg)\\n           return -ret;\\n       return ret;\\n   }\\n   \\n   public int[] nextIntArray( int n) throws IOException {\\n        int arr[] = new int[n];\\n       for(int i = 0; i < n; i++){\\n           arr[i] = nextInt();\\n       }\\n       return arr;\\n   }\\n\\n   public long nextLong() throws IOException {\\n       long ret = 0;\\n       byte c = read();\\n       while (c <= ' ')\\n           c = read();\\n        boolean neg = (c == '-');\\n       if (neg)\\n           c = read();\\n       do {\\n           ret = ret * 10 + c - '0';\\n       } while ((c = read()) >= '0' && c <= '9');\\n       if (neg)\\n           return -ret;\\n       return ret;\\n   }\\n   \\n   public long[] nextLongArray( int n) throws IOException {\\n        long arr[] = new long[n];\\n       for(int i = 0; i < n; i++){\\n           arr[i] = nextLong();\\n       }\\n       return arr;\\n   }\\n\\n   public char nextChar() throws IOException{\\n       byte c = read();\\n       while(Character.isWhitespace(c)){\\n           c = read();\\n       }\\n       return (char) c;\t\\n   }\\n   \\n   public double nextDouble() throws IOException {\\n       double ret = 0, div = 1;\\n       byte c = read();\\n       while (c <= ' ')\\n           c = read();\\n        boolean neg = (c == '-');\\n       if (neg)\\n           c = read();\\n\\n       do {\\n           ret = ret * 10 + c - '0';\\n       } while ((c = read()) >= '0' && c <= '9');\\n\\n       if (c == '.') {\\n           while ((c = read()) >= '0' && c <= '9') {\\n               ret += (c - '0') / (div *= 10);\\n           }\\n       }\\n\\n       if (neg)\\n           return -ret;\\n       return ret;\\n   }\\n   \\n   public double[] nextDoubleArray( int n) throws IOException {\\n        double arr[] = new double[n];\\n       for(int i = 0; i < n; i++){\\n           arr[i] = nextDouble();\\n       }\\n       return arr;\\n   }\\n\\n   private void fillBuffer() throws IOException {\\n       bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\\n       if (bytesRead == -1)\\n           buffer[0] = -1;\\n   }\\n\\n   private byte read() throws IOException {\\n       if (bufferPointer == bytesRead)\\n           fillBuffer();\\n       return buffer[bufferPointer++];\\n   }\\n\\n   public void close() throws IOException {\\n       if (din == null)\\n           return;\\n       din.close();\\n   }\\n\\n}\\n\\n", "target": "218", "substitutes": {"sc": ["sync", "asc", "mc", "osc", "ctrl", "cmp", "ec", "Sc", "ctx", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "pb", "nc", "sq", "tc", "cs", "pc", "dc", "ctl", "isc", "desc", "syn", "scl", "sh", "sv", "ic", "sp", "esc"], "out": ["in", "outer", "list", "ot", "at", "obj", "null", "it", "s", "console", "cache", "w", "file", "all", "aos", "o", "Out", "flush", "outs", "bin", "r", "nt", "conn", "sys", "co", "v", "screen", "err", "name", "error", "io", "res", "print", "log", "write", "OUT", "output", "os", "writer", "t", "serv", "ex", "input", "net", "txt", "ou"], "n": ["nb", "an", "en", "nn", "nw", "l", "np", "k", "ns", "d", "nr", "nt", "no", "ng", "name", "f", "sn", "fn", "m", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "net", "len", "N", "gn", "mn"], "ch": ["cp", "arch", "unch", "cur", "chn", "vc", "cha", "pt", "msg", "zh", "cht", "channel", "gb", "char", "ich", "sky", "Ch", "y", "che", "CH", "h", "html", "wh", "cho", "ph", "ind", "q", "sch", "ach", "cl", "cs", "cmd", "chan", "tch", "att", "br", "och", "ce", "ech", "ct", "sh", "val", "history", "qu"], "cnt": ["ectr", "cust", "uncNT", "uncnt", "rcnt", "rnt", "ecNT", "ncnc", "Cnt", "rcnd", "Cnz", "Cnc", "Ccount", " count", " cnc", " cnn", "rret", "ccount", "unccount", "rcct", "cnd", "cNT", "ecct", "uncret", "Ctx", "counter", "cct", "Cret", "ectx", " ctx", "rcnz", " cnz", "ctx", "cnc", " ctr", "rcust", "dcounter", "Cust", "cret", "ecnc", " cust", " cnd", " cct", "Counter", "ncount", " counter", "ecnt", "ncnn", "cnz", "dcct", "rNT", "cnn", "Count", "Cnd", "rcounter", "rcnn", "dctr", "Ctr", " cNT", "rcNT", "rcount", "Cct", "count", "rctr", "ctr", "dcnt", "rcnc", "CNT", "ncnt"], "p": ["rep", "ap", "cp", "part", "pkg", "e", "ip", "pen", "up", "pt", "prev", "pe", "np", "b", "u", "k", "vp", "P", "char", "jp", "lp", "prefix", "pat", "v", "ar", "tp", "j", "pos", "h", "ph", "m", "pre", "pb", "pc", "t", "ps", "pa", "pl", "pr", "er", "pp", "par", "sp"], "i": ["bi", "in", "multi", "ms", "list", "si", "ti", "ai", "iter", "ip", "it", "set", "ie", "o", "PI", "chain", "di", "pi", "x", "get", "my", "mi", "point", "v", "ini", "parent", "ci", "y", "id", "sim", "j", "io", "I", "ind", "q", "me", "init", "m", "index", "any", "gi", "ii", " I", "is", "li", "ex", "ui", "ji", "ix", "im", "ic", " j", "phi"], "BUFFER_SIZE": ["BUFFERVERENGTH", "BUFFERCCSIZE", "BUFFERITSIZE", "BUFFERCCENGTH", "BUFFERITSize", "BUFILE_VERSION", "BUFFER_TIME", "BUFFERCCSize", "BUFFERVERVERSION", "BUFFER_ENGTH", "BUBuffer_TIME", "BUFFER_Size", "BUFFERVERSize", "BUFILE_SOURCE", "BUFILE_SIZE", "BUFFERVERSIZE", "BUBuffer_TYPE", "BUFILE_Size", "BUFFER_VERSION", "BUFFER_SOURCE", "BUFILE_ENGTH", "BUFFERITVERSION", "BUBuffer_ORY", "BUBuffer_SIZE", "BUFFER_TYPE", "BUFFERITSOURCE", "BUFFERCCVERSION", "BUFFER_ORY"], "din": ["liv", "in", "irin", "did", "pin", "rison", "ds", "sol", "rin", "don", "rain", "oin", "amin", "rd", "di", "thin", "lin", "kin", "bin", "asin", "login", " sin", "d", "sin", "socket", "dat", "elin", "udd", " inh", "there", "mail", "pas", "join", "asi", "reader", "wine", "die", "docker", "fin", "gin", "vin", "isin", "input", "inn", "dn", "inside", "cin", "mn"], "buffer": ["limit", "record", "uf", "bb", "buff", "iter", "cache", "bare", "block", "variable", "table", "face", "b", "binary", "bin", "context", "password", "font", "paste", "memory", "library", "window", "bf", "mask", "where", "shape", "length", "document", "bridge", "initial", "batch", "pb", "stack", "Buffer", "bone", "data", "base", "header", "message", "queue", "mem", "filter", "database", "match", "sequence", "temp", "button", "history", "map"], "bufferPointer": ["BufferPOiter", "bufferPOiter", "bufferPriinter", "BufferPoister", "bufferPoister", "bufferpoister", "bufferPOistor", "BufferPOptr", "bufferpoistor", "bufferpointer", "bufferPrptr", "bufferPrinter", "bufferPOinter", "BufferPoistor", "bufferPripointer", "bufferPOlr", "BufferPOlr", "bufferPtrinter", "bufferPoistor", "bufferPeptr", "bufferPrinters", "bufferPepointer", "bufferPOinters", "bufferPrilr", "BufferPointer", "bufferPoptr", "bufferPOister", "bufferPopointer", "BufferPolr", "bufferPeinters", "bufferPolr", "BufferPOpointer", "BufferPOister", "BufferPOistor", "bufferpopointer", "bufferPtrister", "bufferPtrpointer", "bufferPeinter", "bufferPOptr", "bufferPoiter", "BufferPOinters", "bufferpoiter", "BufferPOinter", "BufferPoptr", "bufferPOpointer", "bufferpolr", "bufferPriiter", "bufferPrpointer", "BufferPopointer", "bufferPtristor", "bufferPointers", "BufferPoiter", "BufferPointers"], "bytesRead": ["BytesWrite", "timesRead", "sitesWritten", "linesFind", "bytesLoad", "linesPrint", "bytesNeed", " bytesPrint", "bytesWrite", "rowsPrint", "linesReader", "sitesLoad", "BytesRead", "secondsRead", " bytesFind", "secondsLoad", "timesFound", "sitesRead", "rowsFind", "BytesLoad", "bytesFind", "bytesPrint", "rowsRead", "linesNeed", "groupsReader", "groupsRead", "timesReader", "linesFound", "bytesWritten", "rowsWrite", "linesWrite", "bytesReader", "timesNeed", "secondsWrite", "bytesFound", "sitesWrite", "groupsFound", " bytesWrite", "BytesWritten", "linesRead", "secondsWritten", "groupsNeed"], "file_name": ["fileNamefile", "file_link", " file_link", "FILE_name", "FILE_file", "fileNameName", "FILE_type", " file_Name", "fileNametype", "file_type", "fileNamename", "file_path", "file_file", "fileNamelink", "fileNamepath", "FILE_path", " file_path", "file_Name"], "buf": ["nb", "bl", "uf", "buff", "img", "wb", "cat", "aka", "block", "bytes", "cap", "box", "b", "bs", "db", "bo", "vec", "bin", "font", "comm", "tab", "bh", "bc", "bf", "seq", "bar", "fac", "cb", "conv", "Buff", "alph", "bed", "cv", "emb", "comb", "bag", "mu", "batch", "mb", "pb", "cmd", "abs", "br", "rb", "queue", "temp", "mem"], "c": ["character", "abc", "cp", "cur", "vc", "com", "cache", "cod", "cat", "cm", "mc", "chain", "l", "b", "k", "cmp", "cd", "anc", "ec", "char", "cr", "arc", "xc", "\u00e7", "d", "g", "cos", "bc", "fc", "co", "cc", "cont", "C", "ci", "cb", "current", "v", "conv", "h", "f", "lc", "rc", "ac", "can", "m", "gc", "cl", "uc", "nc", "cs", "cf", "tc", "etc", "con", "pc", "dc", "t", "z", "ce", "code", "ct", "ca", "cu", "cut", "unc", "col"], "builder": ["manager", "outer", "der", "var", "uild", "ener", "and", "BU", "sf", "utils", "older", "Builder", "aker", "block", "er", "l", "war", "b", "browser", "layer", "th", "boat", "built", "char", "db", "row", "def", "r", "orter", "bar", "handler", "parser", "build", "runner", "html", "builders", "good", "atter", "pb", "upper", "wrapper", "loader", "reader", "url", "writer", "control", "web", "full", "base", "penter", "client", "inner", "building", "bur", "adder", "entry"], "ret": ["result", "cur", "ft", "nz", "cat", "et", "re", "xt", "Ret", "rt", "rs", "flag", "j", "conv", "res", "cre", "back", "cond", "continue", "ext", "ct", "mem", "val", "reset"], "neg": ["Exception", "func", "println", "cont", "Print", "_"]}}
{"code": "import java.util.*;\\nclass Main{\\n  public static void main(String[] args){\\n       Scanner sc = new Scanner(System.in);\\n    int h = sc.nextInt();   \\n    int a = sc.nextInt();\\n    int t = 0;\\n    while(h > 0){\\n    h = h - a;\\n      t = t + 1;\\n      }\\n    System.out.println(t);\\n }\\n}", "target": "147", "substitutes": {"sc": ["irc", "ch", "sb", "sw", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "ec", "Sc", "c", "sub", "inc", "cgi", "bc", "cc", "sys", "cont", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "nc", "sq", "cs", "tc", "system", "pc", "ctl", "acc", "isc", "desc", "scl", "sv", "sp", "esc"], "h": ["oh", "hr", "hat", "ch", "ah", "help", "his", "l", "b", "zh", "dr", "th", "H", "hp", "he", "c", "d", "hm", "g", "hu", "r", "bh", "hd", "v", "hl", "ht", "change", "hh", "html", "f", "ph", "rh", "m", "index", "ha", "ho", "hz", "dh", "hi", "n", "sh", "ih", "p", "hs", "history", "kh", "u"], "a": ["an", "la", "ba", "ea", "at", "ai", "au", "e", "s", "o", "l", "b", "aj", "area", "i", "c", "am", "A", "g", "r", "ia", "ma", "ta", "f", "ao", "alpha", "ac", "ae", "le", "ach", "xa", "oa", "aa", "na", "pa", "z", "sa", "ca", "n", "p"], "t": ["qt", "tt", "dt", "vt", "ot", "total", "e", "it", "s", "mt", "pt", "w", "test", "T", "term", "o", "l", "tr", "b", "wt", "rt", "out", "i", "c", "ts", "d", "tw", "g", "nt", "type", "y", "ret", "ty", "ta", "tf", "j", "td", "f", "title", "q", "m", "ent", "ant", "tu", "tc", "z", "ct", "n", "p"]}}
{"code": "\\n\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n    public static void main(String[] args)throws IOException {\\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\\n        StringTokenizer st;\\n        StringBuilder print=new StringBuilder();\\n        int x=Integer.parseInt(br.readLine());\\n        x=1-x;\\n        System.out.println(x);\\n    }\\n}\\n", "target": "148", "substitutes": {"br": ["wr", "bsp", "bi", "ber", "bl", "hr", "ba", "kr", "bb", "BR", "Br", "vr", "ocr", "mr", "fr", "er", "tr", "b", "buf", "dr", "bd", "gb", "cr", "gr", "str", "r", "bh", "bc", "yr", "bt", "bridge", "lr", "sr", "bp", "rb", "bm", "pr", "be", "bro", "bn"], "st": [" sto", " est", "ste", "sts", " fe", " sor", " stro", "sty", " spe", "STR", " std", " sn", " ST", " sts", " ste", "str", "ST", " sd", " sa", " subst", " ut", "se", "St", " superst", " sty", "sv", " stri"], "print": [" scr", "uf", "sts", "sb", "sf", "builder", " pat", " db", "db", " gr", "lp", " ps", " su", "str", "spr", "bf", "bt", "SB", " fmt", " pp", "buffer", "pb", "bp", " sp", "su", "txt", " pr", "sv", "sp"], "x": ["dx", "mx", "px", "e", "s", "tx", "w", "xe", "xx", "xd", "status", "ax", "xf", "l", "xi", "xt", "step", "xc", "fx", "i", "xp", "c", "v", "X", "ox", "y", "h", "number", "wx", "xs", "f", "xxxx", "q", "inx", "rx", "index", "m", "batch", "t", "xy", "z", "ex", "num", "xxxxxxxx", "xxx", "n", "ix", "p", "wait"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tint n = Integer.parseInt(sc.next());\\n\t\t\\n\t\tint[] h = new int[n];\\n\t\t\\n\t\tfor(int i = 0; i < n; i++) {\\n\t\t\th[i] = Integer.parseInt(sc.next());\\n\t\t}\\n\t\t\\n\t\tint res = 1;\\n\t\t\\n\t\tfor(int i = 1; i < n; i++) {\\n\t\t\tfor(int j = 0; j < i; j++) {\\n\t\t\t\tif(h[i] < h[j]){\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t\t\\n\t\t\t\tif(j == i-1) {\\n\t\t\t\t\tres++;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(res);\\n\t}\\n}\\n", "target": "7", "substitutes": {"sc": ["irc", "ch", "sync", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "arc", "c", "dec", "bc", "cc", "sys", "fc", "SC", "lc", " Sc", "rc", " SC", "usc", "sch", "sec", "exec", "nl", "gc", "cl", "scan", "pb", "nc", "sq", "cs", "tc", "disc", "pc", "ctl", "dc", " unsc", "isc", "desc", "sh", "scl", "sv", "sp", "esc"], "n": ["nb", "en", "size", "nn", "network", "all", "o", "l", "np", "k", "ns", "pi", "x", "out", "c", "un", "g", "r", "nt", "v", "no", "ng", "name", "number", "sn", "ni", "q", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "num", "net", "count", "ct", "len", "N", "p", "mn"], "h": ["oh", "hr", "ah", "it", "uh", "l", "dr", "th", "H", "p", "hp", "host", "he", "c", "hm", "bh", "hd", "y", "hl", "ht", "hh", "ph", "rh", "hash", "has", "ha", "ho", "hw", "hz", "hi", "sh", "ih", "hex", "pp", "hs", "history", "kh"], "i": ["in", "multi", "si", "ip", "chain", "l", "zi", "di", "my", "ini", "ret", "length", "me", "info", "p", "phi", "it", "ie", "o", "qi", "x", "ik", "y", "sim", "ia", "uri", "q", "init", "ami", "index", "ori", "ii", "gi", "us", "cli", "ji", "inner", "ic", "ri", "bi", "iu", "mm", "progress", "k", "ei", "this", "io", "I", "ind", "ij", "is", "li", "ui", "client", "ix", "ti", "ai", "integer", "xi", "pi", "mi", "ity", "v", "ci", "iso", "id", "uci", "f", "iq", "m", "ki", "ims", "z", "im", "u"], "res": ["resh", "result", "ms", "results", "resp", "vol", "ress", "resolution", "red", "cal", "rem", "re", "expr", "ver", "progress", "Res", "req", "sum", "ins", "vals", "out", "RES", "cons", "def", "gr", "rel", " Res", "rev", "ret", "err", "id", "pos", "reg", "rest", "cond", "arr", "zero", "cs", "con", "ps", "rand", "stock", "count", "num", "pres", "pr", "val", "reset"], "j": ["jo", "bi", "bj", "oj", "obj", "at", "jc", "json", "J", "it", "s", "pt", "key", "o", "fr", "l", "b", "dj", "k", "jj", "aj", "jl", "jp", "uj", "js", "str", "g", "v", "ja", "y", "f", "ind", "jac", "ij", "q", "kj", "m", "ne", "br", "z", "jump", "other", "job", "ev", "ji", "pr", "ix", "p", "ge", "im", "note"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tint n,c;\\n\t\tString b;\\n\t\tScanner scan=new Scanner(System.in);\\n\t\tn=scan.nextInt();\\n\t\tint a[][]=new int[4][13];\\n\t\tfor(int i=0;i<n;i++)\\n\t\t{\\n\t\tb=scan.next();\\n\t\tc=scan.nextInt();\\n\t\tif(b.equals(\"S\"))a[0][c-1]=1;\\n\t\telse if(b.equals(\"H\"))a[1][c-1]=1;\\n\t\telse if(b.equals(\"C\"))a[2][c-1]=1;\\n\t\telse if(b.equals(\"D\"))a[3][c-1]=1;}\\n\t\tfor(int i=0;i<4;i++) {\\n\t\tfor(int j=0;j<13;j++){\\n\t\tif(a[i][j]==0 && i==0){\\n\t\tSystem.out.println(\"S \"+(j+1));}\\n\t\telse if(a[i][j]==0 && i==1){\\n\t\tSystem.out.println(\"H \"+(j+1));}\\n\t\telse if(a[i][j]==0 && i==2){\\n\t\tSystem.out.println(\"C \"+(j+1));}\\n\t\telse if(a[i][j]==0 && i==3){\\n\t\tSystem.out.println(\"D \"+(j+1));}\\n\t\t   }         \\n\t\t} \\n\t}\\n}", "target": "189", "substitutes": {"n": ["nb", "en", "size", "nn", "s", "o", "l", "np", "k", "ns", "out", "un", "d", "nr", "g", "r", "nm", "nt", "no", "v", "y", "ng", "on", "f", "sn", "ni", "nu", "m", "nl", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "p"], "c": ["abc", "cp", "ch", "vc", "s", "com", "cache", "cat", "cm", "mc", "chain", "ec", "conf", "cr", "arc", "d", "sc", "r", "cos", "bc", "cc", "co", "C", "ci", "fc", "cb", "lc", "rc", "col", "ac", "m", "gc", "cl", "uc", "cs", "cf", "tc", "con", "pc", "dc", "t", "cn", "ce", "ct", "ca", "cu", "cin", "cor"], "b": ["nb", "bi", "abc", "ba", "ab", "be", "bb", "fb", "ib", "sb", "BB", "ch", "buff", "bu", "erb", "eb", "lib", "orb", "l", "bs", "ob", "binary", "bin", "db", "bo", "gb", "bg", "g", "r", "bh", "bc", "bf", "bt", "y", "cb", "bar", "reb", "h", "app", "emb", "verb", "beta", "pb", "mb", "bis", "url", "bp", "t", "br", "label", "z", "B", "rb", "base", "p"], "scan": ["an", "scroll", "en", "in", " Scan", "query", "report", "ch", "nn", "sync", "pass", "check", "read", "gen", "send", "connect", "re", "ann", "run", "by", "row", "out", "seek", "char", "sc", "get", "pan", "g", "parse", "ner", "find", "skip", "sys", "proc", "start", "search", "io", "can", "reach", "log", "gate", "san", "gc", "info", "se", "ser", "link", "na", "util", "stat", "store", "sur", "auto", "sql", "Scan", "sp"], "a": ["an", "la", "add", "ba", "ab", "parts", "eas", "da", "at", "ea", "ai", "au", "set", "test", "aos", "aka", "aaa", "aux", "area", "ache", "el", "am", "A", "era", "window", "act", "v", "ar", "y", "ia", "ta", "ma", "f", "ao", "alpha", "ac", "ae", "app", "ata", "dev", "ga", "oa", "aa", "action", "as", "t", "apa", "na", "att", "z", "to", "sa", "ca", "div", "ed", "val", "history", "arr"], "i": ["in", "multi", "si", "at", "iii", "ip", "ir", "l", "zi", "di", "ion", "ini", "me", "hi", "phi", "it", "um", "ie", "o", "qi", "x", "ik", "y", "sim", "ia", "inter", "q", "init", "ami", "ii", "gi", "us", "cli", "ji", "ic", "ri", "bi", "iter", "iu", "iti", "ei", "this", "io", "I", "ind", "print", "ij", "is", "li", "ex", "ui", "ix", "ti", "ai", "xi", "pi", "mi", "v", "ar", "ci", "id", "f", "iq", "m", "ki", "\u0438", "ims", "er", "im", "u"], "j": ["jo", "bi", "bj", "oj", "adj", "obj", "at", "jc", "json", "J", "it", "jack", "jet", "pt", "fr", "l", "tr", "jit", "dj", "k", "jj", "jas", "aj", "jl", "row", "out", "x", "jp", "uj", "js", "str", "g", "off", "r", "ion", "my", "v", "ja", "y", "h", "res", "ij", "q", "je", "m", "kj", "ne", "att", "br", "z", "job", "jump", "ev", "tree", "ji", "pr", "yy", "ix", "er", "ijk", "mn"]}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n \\n    public static void main(String[] args) {\\n        Scanner stdIn = new Scanner(System.in);\\n        int A = stdIn.nextInt();\\n        int B = stdIn.nextInt();\\n        stdIn.close();\\n\\n        int result = 0;\\n        for (int i = 13; i <= 1000; i++) {\\n            if (((int)Math.floor(i * 0.08) == A) && ((int)Math.floor(i * 0.1) == B)) {\\n                System.out.println(i);\\n                result = 1;\\n                break;\\n            }\\n        }   \\n        if (result == 0) {\\n            System.out.println(-1);\\n        }\\n    }\\n}", "target": "121", "substitutes": {"stdIn": ["descOut", "randIN", "standardin", "stdOut", "astIn", "stdin", "procOut", "descIN", "astInput", "procIN", "ndOut", "stdIns", " stdInput", "STDin", "ndIn", "procin", "procIn", "descin", "astIns", " stdIns", "stdInput", " stdIN", "randOut", "standardOut", " stdin", " stdOut", "randIn", "ndInput", "randin", "STDOut", "astOut", "stdIN", "standardIn", "ndIns", "STDIn", "STDIN", "descIn"], "A": ["AY", "AB", "S", "Abs", "This", "AF", "ESS", "AC", "AGE", "AI", "H", "As", "P", "AS", "RA", "AD", "AH", "CA", "SA", "AV", "ACC", "ACT", "C", "Alpha", "LA", "AR", "G", "AA", "What", "AL", "GA", "AP", "L", "AU", "AST", "O", "Ax", "AN", "An"], "B": ["BR", "BB", "J", "BF", "RB", "Back", "BA", "CB", "IB", "VB", "USB", "Y", "MB", "TB", "Blue", "V", "BO", "C", "BC", "WB", "NB", "BE", "BI", "OB", "Bar", "BS", "EB", "FB", "LB", "PB", "BL", "Reb", "L", "JB", "Ber", "GB", "DB"], "result": ["report", "feature", "complete", "results", "integer", "successful", "success", "true", "diff", "test", "status", "term", "comment", "group", "folder", "neutral", "goal", "correct", "relation", "mate", "draw", "r", "proc", "date", "ret", "default", "mask", "error", "search", "make", "number", "currency", "process", "power", "res", "duration", "answer", "command", "Result", "zero", "debug", "continue", "function", "valid", "message", "match", "sequence"], "i": ["yi", "bi", "multi", "si", "ti", "ai", "json", "ip", "it", "hello", "set", "iu", "gu", "status", "key", "series", "l", "xi", "di", "pi", "qi", "x", "ei", "iri", "ik", "my", "mi", "point", "v", "ini", "ci", "y", "sim", "id", "oi", "j", "uri", "number", "iq", "f", "I", "ij", "init", "php", "m", "index", "me", "ki", "batch", "go", "ii", "gi", "us", "info", "ims", "is", "li", "ex", "hi", "ui", "client", "ji", "cli", "ix", "p", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n \tpublic static void main(String[] args){\\n    \tScanner sc = new Scanner(System.in);\\n\t\tint X = sc.nextInt();\\n\t\tint x = 0, y = 0;\\n\t\t\\n\t\tif(X>=500){\\n\t\t\tx = X/500;\\n\t\t\tX -= 500*x;\\n        }\\n\t\tif(X>=5){\\n\t\t\ty = X/5;\\n\t\t\tX -= 5*y;\\n        }\\n\\n\t\tSystem.out.println(1000*x+5*y);\\n\t}\\n}\\n", "target": "180", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "asc", "mc", "osc", "cr", "Sc", "sel", "Desc", "c", "row", "sub", "bc", "cc", "sys", "screen", "SC", "lc", " Sc", "usc", "sch", "sec", "rx", "gc", "scan", "cl", "ss", "uc", "nc", "system", "cs", "tc", "sq", "spec", "pc", "acc", "desc", "isc", "syn", "scl", "sv", "Scan", "sp", "esc"], "X": ["SIZE", "BY", "S", "J", "IE", "HTTP", "D", "MAX", "WH", "T", "IC", "PE", "Xi", "DATA", "K", "U", "ID", "EX", "HTML", "FILE", "H", "Y", "TX", "Z", "IX", "P", "XL", "TYPE", "RAW", "READ", "IP", "DX", "KEY", "XM", "V", "TH", "Ex", "M", "C", "UX", "GET", "ONE", "W", "OK", "I", "VALUE", "RC", "ALL", "R", "ANY", "MX", "INT", "XXX", "XX", "XP", "L", "OX", "F", "Q", "RE", "N"], "x": ["dx", "mx", "px", "edit", "check", "time", "sw", "tx", "w", "lat", "xx", "xd", "ax", "xf", "l", "xi", "xt", "fx", "xc", "xp", "i", "el", "v", "ox", "height", "xs", "wx", "yx", "xml", "rx", "view", "xa", "exp", "t", "xy", "z", "ex", "ct", "n", "ix", "p", "lex", "u"], "y": ["yi", "ies", "ay", "sy", "ch", "dy", "xx", "ye", "hot", "ey", "o", "yl", "yer", "b", "year", "Y", "by", "gy", "i", "sky", "ys", "my", "cy", "ly", "yr", "sys", "ty", "j", "vy", "uy", "h", "py", "yt", "ry", "iy", "ya", "yo", "oy", "yn", "ny", "ym", "xy", "z", "yy", "axy", "fy", "wy"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tint K = sc.nextInt();\\n\t\tint[] height = new int[N];\\n\t\tint con = 0;\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\theight[i]=sc.nextInt();\\n\t\t}\\n\t\tfor (int i : height) {\\n\t\t\tif (K<= i) {\\n\t\t\t\tcon++;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(con);\\n\t}\\n\\n}", "target": "145", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "sci", "c", "inc", "dec", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "system", "tc", "cs", "sq", "ck", "pc", "ctl", "dc", "isc", "desc", "scl", "sv", "sp", "esc"], "N": ["NP", "NI", "S", "NA", "D", "T", "NH", "NM", "No", "H", "P", "A", "V", "NT", "KN", "M", "C", "NO", "Ni", "NE", "NB", "I", "TN", "NW", "CN", "R", "NL", "NR", "NN", "Ns", "Num", "Na", "NS", "L", "SN", "GN", "F", "n", "ND", "O", "NC", "AN"], "K": ["S", "J", "KR", "T", "Key", "Kn", "KK", "KS", "DK", "PK", "U", "k", "KI", "H", "IK", "Z", "P", "V", "KN", "M", "C", "UK", "KA", "W", "I", "G", "TN", "NK", "R", "SK", "KC", "KE", "KB", "Q", "VK", "HK", "KY"], "height": ["size", "hang", "hung", "total", "max", "depth", "Height", "above", "zh", "sum", "th", "he", "sky", "volume", "window", "high", "range", "ht", "rows", "h", "shape", "bottom", "tight", "density", "length", "capacity", "rank", "kw", "hash", "alpha", "hold", "shift", "index", "huge", "sticks", "buffer", "stack", "gravity", "hist", "holes", "wall", "count", "hi", "header", "width", "headers", "div", "hei", "grow", "history"], "con": [" Con", "fun", "en", "cur", "ain", "open", "pen", "com", "max", "cal", "connect", "cum", "don", "won", "ver", "const", "sum", "cone", "cover", "conf", "xc", "c", "ran", "pan", "cons", "un", "common", "conn", "co", "fc", "acon", "fac", "conv", "pos", "change", "den", "inter", "cv", "free", "can", "cloud", "cond", "gate", "pc", "cn", "count", "num", "len", "CON", "unc", "Con"], "i": ["yi", "bi", "ish", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "chain", "zi", "xi", "k", "di", "pi", "p", "qi", "x", "c", "ei", "iri", "ik", "mi", "v", "ini", "ci", "y", "id", "sim", "oi", "io", "uri", "I", "ind", "ij", "q", "init", "iy", "m", "index", "ori", "ki", "\u0438", "ii", "gi", "info", "ims", "is", "li", "hi", "ui", "cli", "client", "ix", "fi", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n\tprivate static void solve(){\\n\t\t//Implement solution here.\\n\t\tlong N = ni();\\n\t\tlong D = ni();\\n\t\tint result = 0;\\n\t\tfor(int i = 0; i < N; i++) {\\n\t\t\tlong X = ni();\\n\t\t\tlong Y = ni();\\n\t\t\tresult += (X * X + Y * Y <= D * D) ? 1 : 0;\\n\t\t}\\n\t\tSystem.out.println(result);\\n\t}\\n\\n\\n\t//Switch input source (stdin/file)\\n\tprivate static BufferedReader br;\\n\tpublic static void main(String[] args){\\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString debugDataPath = System.getenv(\"DD_PATH\");        \\n\t\tif(debugDataPath != null){\\n\t\t\ttry{\\n\t\t\t\tbr = new BufferedReader(new InputStreamReader(new FileInputStream(new File(debugDataPath))));\\n\t\t\t}catch(Exception e){\\n\t\t\t\tthrow new RuntimeException(e);\\n\t\t\t}\\n\t\t}\\n\t\tboolean hasNext = true;\\n\t\twhile(hasNext){\\n\t\t\tsolve();\t\\n\t\t\ttry{\\n\t\t\t\tbr.mark(1);\\n\t\t\t\tif(br.read() > 0){\\n\t\t\t\t\tbr.reset();\t\t\t\\n\t\t\t\t\tSystem.out.println(\"---\");\\n\t\t\t\t} else {\\n\t\t\t\t\thasNext = false;\\n\t\t\t\t}\\n\t\t\t}catch(Exception e){\\n\t\t\t\tthrow new RuntimeException(e);\\n\t\t\t} \\n\t\t}\\n\t}\\n\\n\t//Input read utility\\n\tprivate static StringTokenizer tokenizer = null;\\n\tpublic static String next() {\\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n\t\t\ttry {\\n\t\t\t\ttokenizer = new StringTokenizer(br.readLine());\\n\t\t\t} catch (Exception e) {\\n\t\t\t\tthrow new RuntimeException(e);\\n\t\t\t}\\n\t\t}\\n\t\treturn tokenizer.nextToken();\\n\t}\\n\t//Get next single int\\n\tprivate static int ni() {\\n\t\treturn Integer.parseInt(next());\\n\t}\\n\t//Get next single long\\n\tprivate static long nl() {\\n\t\treturn Long.parseLong(next());\\n\t}\\n\t//Get next single double\\n\tprivate static double nd() {\\n\t\treturn Double.parseDouble(next());\\n\t}\\n\t//Get next int array from one line\\n\tprivate static int[] na(int n) {\\n\t\tint[] a = new int[n];\\n\t\tfor (int i = 0; i < n; i++)\\n\t\t\ta[i] = ni();\\n\t\treturn a;\\n\t}\\n\t//Get next char array from one line\\n\tprivate static char[] ns() {\\n\t\treturn next().toCharArray();\\n\t}\\n\t//Get next long array from one line\\n\tprivate static long[] nal(int n) {\\n\t\tlong[] a = new long[n];\\n\t\tfor (int i = 0; i < n; i++)\\n\t\t\ta[i] = nl();\\n\t\treturn a;\\n\t}\\n}\\n", "target": "42", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\\n    public static void main(String args[])\\n    {\\n        Scanner sc=new Scanner(System.in);\\n        long a =sc.nextLong();\\n        String s=sc.next();\\n        long b=(s.charAt(0)-'0')*100+(s.charAt(2)-'0')*10+(s.charAt(3)-'0');\\n        long c=(a*b)/100;\\n        System.out.println(c);\\n\\n    }\\n}\\n", "target": "15", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "ko", "sci", "sel", "sub", "inc", "bc", "cc", "sys", "ok", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "uc", "nc", "sq", "cs", "tc", "exp", "pc", "ctl", "isc", "syn", "desc", "scl", "sv", "sp", "esc"], "a": ["an", "la", "ba", "ab", "af", "da", "ea", "at", "ai", "au", "ax", "l", "aj", "area", "am", "A", "act", "ia", "ta", "ma", "ao", "alpha", "ac", "ae", "ach", "aw", "ata", "abs", "oa", "sta", "aa", "as", "sa", "ca", "aq", "al"], "s": ["ms", "S", "space", "ws", "sts", "sf", "sb", "sw", "ds", "gets", "l", "ns", "strings", "bs", "tes", "ts", "js", "str", "g", "r", "sys", "ats", "j", "its", "xs", "gs", "string", "ls", "m", "fs", "sl", "ss", "sq", "cs", "qs", "less", "spec", "t", "ps", "is", "n", "sql", "sv", "rs", "hs", "sp"], "b": ["nb", "bi", "ba", "ab", "bool", "bb", "fb", "ib", "sb", "wb", "eb", "l", "bd", "bs", "gb", "db", "d", "r", "bc", "xb", "cb", "j", "f", "beta", "mb", "bis", "t", "base", "B", "rb", "n", "be"], "c": ["cp", "e", "w", "o", "l", "cd", "p", "ec", "cr", "arc", "x", "d", "g", "r", "cc", "fc", "C", "cont", "cb", "f", "h", "lc", "ac", "m", "gc", "uc", "tc", "etc", "t", "dc", "z", "count", "ce", "ct", "n", "ca", " C", "cu", "enc", "unc", "u"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tfinal static long limit = 1000000000000000000l;\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        long mul = 1l;\\n        boolean isOver = false;\\n        \\n        for(int i=0; i<N; i++) {\\n        \tlong a = sc.nextLong();\\n        \tif(a==0) {\\n        \t\tSystem.out.println(0);\\n        \t\treturn;\\n        \t}\\n        \tif (mul>limit/a) {\\n        \t\tisOver = true;\\n        \t}else {\\n            \tmul *= a;\\n        \t}\\n        }\\n        \\n        if(isOver) {\\n        \tSystem.out.println(-1);\\n        }else {\\n        \tSystem.out.println(mul);\\n        }\\n        \\n\t}\\n\\n}\\n", "target": "27", "substitutes": {"limit": ["delay", "size", "limited", "total", "max", "available", "lim", "MAX", "pool", "block", "l", "cap", "latest", "amount", "margin", "window", "Limit", "v", "lock", "line", "mask", "h", "limits", "capacity", "length", "star", "buffer", "Lim", "clip", "scale", "L", "len", "n", "map", "maximum", "stop"], "sc": ["ch", "sync", "sb", "asc", "sm", "mc", "osc", "cr", "Sc", "sel", "c", "sub", "bc", "cc", "sys", "ng", "ok", "SC", "lc", " Sc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "sq", "cs", "tc", "system", "ck", "pc", "ctl", "dc", "pl", "isc", "syn", "desc", "scl", "sh", "sv", "sp", "esc"], "N": ["NP", "NI", "NG", "S", "NA", "J", "D", "NH", "K", "No", "Net", "NT", "V", "M", "C", "Sn", "NO", "Ni", "NE", "NB", "I", "Number", "TN", "Node", "NL", "NR", "NN", "Ns", "Num", "Na", "NC", "NS", "L", "GN", "n", "SN"], "mul": ["manUL", "mult", "Muf", "cmul", "mUL", "mdal", "smult", "mtul", "mdult", "Mul", "mtult", "cmUL", "Muli", "mcul", "smul", "manul", "Mmult", " muc", " muf", "mtuf", "mtuc", "Mult", "MUL", "lcul", "muli", "smUL", " mmult", "manult", "mal", "mtUL", "mmult", "manuli", "Muc", "mtal", " mUL", "smmult", "lul", "mdcul", "muf", " mult", "cmult", "mtcul", "muc", "mdul", "cmuli", "lal", "lult"], "i": ["bi", "si", "ti", "ai", "iter", "ip", "it", "set", "gu", "iu", "ie", "xi", "di", "pi", "qi", "x", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "I", "ind", "init", "m", " di", "ki", "gi", "ii", "us", "is", "li", "z", "ex", "hi", "ui", "n", "ix", "im", "ic", "phi", "u"], "a": ["an", "la", "ba", "si", "ea", "at", "e", "au", "w", "o", "l", "aaa", "b", "pi", "area", "x", "sha", "out", "am", "d", "A", "g", "v", "ia", "ma", "ta", "h", "j", "f", "va", "ao", "alpha", "ac", "m", "ha", "ga", "oa", "aa", "as", "t", "sta", "na", "pa", "apa", "z", "fa", "sa", "ca", "n", "p", "val", "u"], "isOver": ["lisToo", " isOVER", "isAbove", "ISAbove", "isToo", "lisOver", "isover", "lisJust", "IsAbove", "ISover", "idAbove", "areOVER", "areAbove", "isOVER", " isover", "idOVER", "ISOver", "ISToo", "areover", "IsOVER", "idOver", "ISJust", " isJust", "areOver", "Isover", " isToo", "idover", "IsOver", " isAbove", "ISOVER", "isJust"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\t/*??\u00b6?\u00b4???????????????????*/\\n\tpublic static void judge(int parse[]){\\n\t\t\tif(parse[0]<=0||parse[0]>100){\\n\t\t\t\tSystem.out.println(\"W?????\\?????????1~100??\\???????????\u00a7???.???????????????.\");\\n\t\t\t\tSystem.exit(0);\\n\t\t}\\n\t\t\telse if(parse[1]<=0||parse[1]>100){\\n\t\t\t\tSystem.out.println(\"H?????\\?????????1~100??\\???????????\u00a7???.???????????????.\");\\n\t\t\t\tSystem.exit(0);\\n\t    }\\n\t\t\telse if(parse[2]<-100||parse[2]>100){\\n\t\t\t\tSystem.out.println(\"x?????\\?????????-100~100??\\???????????\u00a7???.???????????????.\");\\n\t\t\t\tSystem.exit(0);\\n\t\t\t}\\n\t\t\telse if(parse[3]<-100||parse[3]>100){\\n\t\t\t\tSystem.out.println(\"y?????\\?????????-100~100??\\???????????\u00a7???.???????????????.\");\\n\t\t\t\tSystem.exit(0);\\n\t\t\t}\\n\t\t\telse if(parse[4]<=0||parse[4]>100){\\n\t\t\t\tSystem.out.println(\"r?????\\?????????1~100??\\???????????\u00a7???.???????????????.\");\\n\t\t\t\tSystem.exit(0);\\n\t\t\t}\\n\t}\\n\t public static void main(String[] args) throws IOException{\\n\t\tint W,H,x,y,r;\\n\t\tString str;\\n\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tstr = br.readLine();\\n\\n\t\tString[] st = str.split(\" \");\\n\t\t/*for(int i=0;i<st.length;i++){\\n\t\t System.out.println(\"st[\"+i+\"]=\"+st[i]); //?????????????\u00b4??\u00a2????\\n\t\t }*/\\n\t\tint len=st.length; //?????????????\u00b4???\u00b0\\n\t\tint parse[] = new int[len]; //String???int????????\u00a8??????\\n\\n\t\tfor(int p=0;p<len;p++){\\n\t\t\tparse[p]=Integer.parseInt(st[p]); //String???int??????\\n\t\t}\\n\\n\t\tW=parse[0]; H=parse[1]; x=parse[2]; y=parse[3]; r=parse[4];\\n\\n\t\tjudge(parse); //??\u00b6?????????.????????????????????\u00b0????????????\\n\t\t/*??????????????\u00a7????????\u00a8?\u00b0???????????????\\????????????????????\\??????????????????????????????*/\\n\\n\t\t/*for(int i=0;i<st.length;i++){\\n\t\t System.out.println(\"st[\"+i+\"]=\"+st[i]); //?????????????\u00b4??\u00a2????\\n\t\t }*/\\n\\n\t\t/*????????\u00a8????????????*/\\n\\n\t\tif((x-r<0||x+r>W)||(y-r<0||y+r>H))\\n\t\t\tSystem.out.println(\"No\");\\n\t\telse if((x-r>=0&&x+r<=W)&&(y-r>=0&&y+r<=H))\\n\t\t\tSystem.out.println(\"Yes\");\\n\\n\t}\\n\\n}", "target": "171", "substitutes": {"parse": ["cp", "Par", "list", "parts", "create", "complete", "pair", "iter", "json", "check", "set", "cache", "cycle", "test", "say", "send", "spe", "apply", "pe", "pack", "see", "ping", "save", "arg", "split", "row", "arse", "style", "use", "share", "find", "fail", "load", "proc", "parser", "shape", "process", "print", "post", "show", "cast", "scan", "delete", "go", "stack", "replace", "info", "params", "slice", "sche", "spec", "se", "exp", "zero", "scale", "tree", "num", "match", "p", "grow", "par", "sp", "figure"], "W": ["VW", "EW", "MW", "S", "D", "w", "T", "K", "WD", "Y", "P", "Wh", "A", "V", "M", "C", "WA", "X", "I", "G", "R", "WC", "CW", "L", "F", "Q", "N"], "H": ["HE", "J", "HTTP", "D", "HH", "T", "K", "U", "HI", "Y", "HA", "P", "RH", "V", "M", "C", "X", "He", "CH", "h", "HS", "G", "HT", "R", "B", "F", "Q"], "x": ["dx", "e", "it", "w", "tx", "xx", "l", "xi", "xt", "c", "i", "v", "X", "ox", "h", "f", "wx", "xs", "q", "rx", "t", "xy", "z", "ex", "n", "p", "u"], "y": ["yi", "ies", "sy", "e", "w", "ey", "o", "b", "Y", "i", "c", "g", "v", "sys", "j", "h", "py", "yt", "yn", "ym", "t", "xy", "z", "n", "yy", "p"], "r": ["e", "w", "mr", "o", "re", "b", "rd", "dr", "rt", "nr", "v", "h", "rc", "q", "ry", "sr", "rx", "R", "t", "rb", "p", "er", "rar", "ru", "ro"], "str": ["wr", "result", "part", "obj", "vol", "it", "s", "set", "mt", "w", "msg", "fr", "STR", "tr", "dr", "stri", "cr", "char", "out", "text", "gr", "ST", "v", "err", "name", "print", "string", "Str", "stable", "usr", "data", "t", "txt", "n", "pr", "div", "p", "sp", "arr"], "br": ["wr", "bsp", "ber", "hr", "bl", "ba", "Tr", "kr", "ch", "BR", "Br", "mr", "fr", "tr", "b", "buf", "dr", "browser", "bd", "cr", "bro", "gr", "bh", "bc", "yr", "bt", "bridge", "lr", "sr", "shr", "bp", "adr", "rb", "pr", "be", "sp"], "st": ["bl", "std", "nd", "ste", "ost", "sts", "it", "sb", "sw", "mt", "sty", "ld", "stri", "trans", "ast", "ts", "ust", "nt", "ST", "sth", "bt", "inst", "ut", "rest", "sl", "stable", "se", "sta", "t", "ist", "usr", "St", "stru", "sh", "sv", "sp", "est"], "len": ["fun", "en", "lvl", "set", "l", "vals", "vec", "trans", "un", "def", "seq", "end", "line", "start", "pos", "length", "Len", "ls", "nl", "lan", "ln", "fin", "L", "n", "val", "par"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n\\n        Scanner sc = new Scanner(System.in);\\n        String S = sc.next();\\n\\n        int ans = solve(S);\\n        System.out.println(ans);\\n\\n    }\\n\\n    private static int solve(String s) {\\n        char[] sn = s.toCharArray();\\n        int white = count(sn, '0', '1');\\n        int black = count(sn, '1', '0');\\n        return Math.min(white, black);\\n    }\\n\\n    private static int count(char[] sn, char match, char counterpart) {\\n        int cnt = 0;\\n        for (int i = 0; i < sn.length; i++) {\\n            if (i % 2 == 0 && sn[i] == counterpart) {\\n                cnt++;\\n            }\\n            if (i % 2 == 1 && sn[i] == match) {\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n}\\n", "target": "146", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "ec", "Sc", "c", "bc", "cc", "sys", "SC", "lc", "rc", "RC", "sch", "sec", "gc", "scan", "ss", "cl", "nc", "sq", "cs", "tc", "system", "pc", "ser", "isc", "scl", "sv", "rs", "sp", "esc"], "S": ["CS", "SER", "STR", "SU", "SL", "SE", "SAM", "Sc", "P", "TS", "SM", "V", "SA", "Si", "ST", "M", "C", "SD", "SB", "SI", "SC", "SR", "GS", "SP", "Str", "SK", "St", "NS", "L", "B", "N", "SN", "SS"], "ans": ["an", "angs", "uns", "reads", "ars", "ms", "ents", "orts", "rans", "aps", "aos", "ann", "arms", "ons", "ints", "ns", "ins", "outs", "ks", " scans", "pan", "arts", "ats", "oss", "anners", "anes", "ants", "xs", "ANS", "ls", "san", "ams", "ots", "os", "as", " spans", "offs", "books", "amps", "ens", "AN", "ols", "ids"], "s": ["ms", "sb", "sf", "l", "b", "ns", "bs", "c", "ts", "js", "g", "v", "sys", "ats", "y", "h", "xs", "gs", "st", "string", "ls", "ss", "sl", "sq", "cs", "os", "t", "ps", "is", "n", "sql", "scl", "p", "sv", "rs", "sp"], "sn": ["stick", "wn", "nex", "si", "sen", "nn", "kn", "sb", "snap", "sw", "sync", "sol", "stats", "sk", "voc", "spe", "np", "ns", "stri", "bs", "sky", "nr", "vs", "nt", "sys", "tn", "news", "Sn", "span", "sd", "sv", "fn", "sr", "secure", "nl", "pn", "sam", "ss", "sl", "san", "sq", "ny", "cs", "ln", "stat", "cn", "su", "n", "syn", "pres", "gn", "scl", "dn", "SN", "sql", "sh", "sp", "bn"], "white": ["wn", "spread", "focus", "space", "stone", "w", "red", "term", "none", "fill", "clean", "pack", "silver", "window", "mate", "workers", "light", "draw", "screen", "brown", "wh", "win", "word", "alk", "good", "fore", "zero", "warm", "yellow", "gray", "awn", "staff", "width", "pace", "important", "blank", "hair", "race", "White", "green"], "black": ["card", "bb", "buff", "total", "blocks", "red", "wild", "ank", "thin", "ful", "row", "Black", "stroke", "ink", "square", "light", "cell", "bar", "brown", "mask", "wh", "grey", "bottom", "ack", "kw", "star", "good", "normal", "broad", "ck", "zero", "gray", "blue", "raw", "dash", " BLACK", "color", "blank"], "match": ["field", "result", "query", "update", "card", "part", "pair", "check", "equal", "matched", "test", "comment", "attribute", "fill", "tag", "char", "text", "template", "get", "parse", "mate", "find", "token", "cell", "quote", "search", "process", "patch", "callback", "string", "pattern", "word", "mark", "view", "ment", "delete", "buffer", "replace", "watch", "Match", "link", "filter", "fire"], "counterpart": ["pagepart", "counterpartial", "pageparts", "currencypart", "controllerparts", "counterpair", "controllerpart", " counterpair", "controllerpartial", "pagepartial", "currencypair", "pagepad", "controllerpad", "Counterpair", "Counterparty", "counterpatch", " counterpad", " counterpatch", "currencyparty", " counterparty", " counterpartial", " counterparts", "Counterpatch", "counterparty", "Counterpart", "currencypatch", "counterpad", "counterparts"], "cnt": ["cust", "ctt", " carr", "cuct", "Cnt", " ccount", "lccount", "Ccount", "cred", "csnt", "lctr", "ccount", "icarr", "cuarr", "icct", "lcct", "cct", "ncred", "Cred", "csnz", " cnz", " cred", "csred", "Cpt", " ctr", "cutt", "cpt", "icnt", " cpt", "ncct", "carr", " cust", " cct", "ictt", " ctt", "connz", "lcnt", "connt", "ncpt", "cnz", "conred", "csust", "Ctr", "cunt", "Cct", "conust", "ctr", "ncnt"], "i": ["bi", "multi", "si", "ti", "ai", "ip", "it", "iu", "status", "key", "depth", "series", "chain", "zi", "xi", "b", "di", "pi", "qi", "x", "ei", "g", "mi", "v", "ini", "ci", "y", "oi", "sim", "j", "f", "uri", "I", "q", "init", "ami", "m", "index", "me", "ori", "ki", "\u0438", "ii", "gi", "info", "us", "slice", "exp", "is", "li", "z", "hi", "ui", "cli", "n", "ji", "ix", "ic", " j", "phi", "ri"]}}
{"code": "import java.util.*;\\npublic class Main{\\n\tpublic static void main(String[] args){\\n      Scanner sc = new Scanner(System.in);\\n      String s = sc.next();\\n      int len = s.length();\\n      \\n      int start = 0;\\n      for(int i=0; i<len; i++){\\n        if(\"A\".equals(s.substring(i,i+1))){\\n            start = i;\\n            break;\\n        }\\n      }  \\n      int end = 0;\\n      for(int j=len-1; j>0; j--){\\n        if(\"Z\".equals(s.substring(j,j+1))){\\n            end = j;\\n            break;\\n        }\\n      }  \\n\\n      System.out.println(end-start+1);\\n    }  \\n}", "target": "109", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "inc", "dec", "bc", "cc", "sys", "SC", "conv", "lc", "usc", "sch", "sec", "gc", "cl", "scan", "ss", "uc", "nc", "sq", "cs", "tc", "system", "se", "pc", "ser", "capt", "isc", "desc", "sh", "scl", "syn", "sv", "sp", "esc"], "s": ["ms", "S", "ws", "sts", "sb", "sf", "sw", "sol", "source", "gets", "l", "b", "ns", "bs", "ts", "js", "str", "g", "sys", "ats", "its", "conv", "h", "gs", "ls", "m", "fs", "sl", "ss", "abs", "sq", "so", "less", "qs", "os", "se", "ims", "t", "ps", "is", "su", "n", "sql", "p", "sv", "rs", "sp"], "len": ["fl", "en", "list", "kl", "size", "lim", "et", "ll", "all", "gl", "lib", "l", "ld", "cmp", "vl", "loc", "mil", "el", "vec", "lp", "str", "deg", "LI", "nt", "ml", "lf", "pos", "length", "ell", "le", "Len", "nl", "cl", "sl", "il", "lan", "ln", "fin", "t", "li", "lis", "pl", "L", "n", "elt", "dl", "val", "lon"], "start": ["in", "ish", "part", "size", "open", "it", "check", "set", "time", "from", "first", "art", "table", "step", "started", "starting", "Start", "trans", "row", "style", "window", "origin", "before", "ST", "id", "default", "range", "pos", "top", "ind", "print", "st", "init", "index", "rest", "wind", "pre", "info", "begin", "head", "t", "offset", "ari", "store", "client", "blank", "inner", "reset", "stop"], "i": ["bi", "ish", "ms", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "ico", "zi", "xi", "di", "pi", "qi", "ei", "iri", "my", "mi", "v", "ini", "ci", "sim", "oi", "ia", "io", "iq", "ni", "I", "ami", "init", "ori", "ki", "ii", "info", "gi", "is", "li", "hi", "ui", "II", "ix", "im", "ic", "phi", "u", "ri"], "end": ["old", "add", "limit", "complete", "nd", "close", "quit", "ended", "and", "obj", "last", "max", "e", "endif", "next", "all", "send", "ension", "after", "END", "until", "out", "rend", "ff", "window", "edge", "End", "conn", "fail", "ends", "range", "id", "change", "bottom", " End", "post", "append", "ort", "rest", "ent", "ender", "write", "pend", "org", "fin", "head", "hend", "offset", "est", "ext", "ending", "bound", "dest", "due", "cut", "stop"], "j": ["bi", "old", "bj", "oj", "obj", "jc", "J", "json", "it", "jack", "key", "o", "fr", "dj", "b", "k", "jj", "step", "aj", "jl", "bs", "by", "bo", "x", "jp", "uj", "js", "g", "point", "v", "ja", "y", "err", "gov", "f", "jac", "ij", "q", "col", "je", "kj", "ne", "zone", "br", "z", "job", "other", "jump", "ji", "div", "pr", "n", "axy", "ge", "note"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n\tstatic FastReader f = new FastReader();\\n\tstatic PrintWriter out = new PrintWriter(System.out);\\n\\n\tpublic static void main(String[] args) {\\n\t\tlong n = f.nextInt(), x = f.nextInt(), t =  f.nextInt();\\n\t\tout.println(((n-1)/x+1)*t);\\n\t\tout.close();\\n\t}\\n\t\t\\n\\n\tstatic class FastReader {\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tStringTokenizer st;\\n\\n\t\tString next() {\\n\t\t\twhile(st == null || !st.hasMoreElements()) {\\n\t\t\t\ttry {\\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\\n\t\t\t\t} catch(IOException e) {\\n\t\t\t\t\te.printStackTrace();\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn st.nextToken();\\n\t\t}\\n\\n\t\tString nextLine() {\\n\t\t\tString str = \"\";\\n\\n\t\t\ttry {\\n\t\t\t\tstr = br.readLine();\\n\t\t\t} catch(IOException e) {\\n\t\t\t\te.printStackTrace();\\n\t\t\t}\\n\t\t\treturn str;\\n\t\t}\\n\\n\t\tint nextInt() {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n\\n\t\tdouble nextDouble() {\\n\t\t\treturn Double.parseDouble(next());\\n\t\t}\\n\\n\t\tlong nextLong() {\\n\t\t\treturn Long.parseLong(next());\\n\t\t}\\n\t}\\n}", "target": "34", "substitutes": {"f": ["fl", "fp", "in", "uf", "ft", "fb", "e", "sf", "w", "fd", "fr", "l", "b", "fps", "p", "conf", "fx", "i", "c", "form", "far", "r", "fc", "bf", "v", "lf", "fac", "tf", "conv", "df", "rf", "fm", "fu", "cf", "fo", "fe", "fa", "F", "fi", "fs", "fed"], "out": ["in", "en", "outer", "at", "ch", "e", "null", "it", "s", "console", "w", "file", "msg", "aos", "o", "Out", "l", "sum", "println", "c", "i", "r", "v", "sys", "conn", "screen", "err", "name", "error", "io", "res", "conv", "print", "fn", "log", "buffer", "ou", "OUT", "write", "output", "info", "os", "con", "ln", "writer", "to", "ex", "p", "outs"], "n": ["nb", "nn", "nw", "o", "l", "np", "ns", "i", "d", "nt", "v", "y", "ng", "j", "sn", "nu", "nl", "nc", "ln", "ne", "nan", "na", "z", "cn", "num", "dn", "N", "gn", "wn", "p"], "x": ["dx", "mx", "e", "tx", "w", "xe", "xx", "o", "ax", "xf", "l", "xt", "k", "xc", "c", "i", "xp", "v", "y", "ox", "X", "j", "h", "xs", "wx", "q", "rx", "xa", "xy", "z", "ex", "ix", "p"], "t": ["tt", "vt", "ot", "dt", "e", "it", "mt", "pt", "T", "o", "l", "b", "wt", "k", "rt", "c", "i", "ts", "tz", "r", "nt", "v", "y", "ty", "tf", "j", "h", "ta", "m", "te", "tc", "z", "ct", "p"], "br": ["wr", "bsp", "ber", "bl", "hr", "kr", "ch", "BR", "sb", "Br", "vr", "pt", "mr", "fr", "tr", "b", "browser", "dr", "bs", "cr", "gr", "r", "bh", "yr", "bt", "sp", "bridge", "lr", "her", "shr", "bp", "rb", "pr", "ctr", "er", "bro", "bn", "ri"], "st": ["tt", "std", "nd", "ste", "ost", "sts", "null", "sw", "mt", "set", "pt", "s", "sm", "et", "stop", "sty", "first", "l", "const", "th", "rt", "ast", "ts", "ust", " ST", "r", "nt", "ST", "v", "bt", "start", "h", "inst", "sn", "ut", "stage", "rest", "cl", "sl", "ss", "stack", "stable", "ze", "so", "se", "sta", "ist", "St", "z", "stat", "ct", "sh", "p", "sv", "sp", "est"], "str": ["result", "list", "cur", "sts", "it", "s", "set", "sw", "ocr", "msg", "fr", "chain", "tr", "STR", "dr", "ns", "del", "stri", "p", "cr", "char", "text", "gr", "g", "r", "v", "cont", "j", "res", "print", "string", "Str", "ent", "stable", "shr", "exp", "spec", "raw", "data", "txt", "pr", "div", "ctr", "hex", "enc", "sp", "arr"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\\n\t\tScanner scan = new Scanner(System.in);\\n\t\t// ??\\???\\n\t\tint n = scan.nextInt();\\n\t\tint m = scan.nextInt();\\n\t\tint l = scan.nextInt();\\n\t\t// ???????????\u00a3?\u00a8?\\n\t\tint A[][] = new int[n][m];\\n\t\tint B[][] = new int[m][l];\\n\t\t// ?????????????\u00b4?\\n\t\tfor(int i=0; i<n; i++){\\n\t\t\tfor(int i2=0; i2<m; i2++){\\n\t\t\t\tint x = scan.nextInt();\\n\t\t\t\tA[i][i2] = x;\\n\t\t\t}\\n\t\t}\\n\t\tfor(int i=0; i<m; i++){\\n\t\t\tfor(int i2=0; i2<l; i2++){\\n\t\t\t\tint x = scan.nextInt();\\n\t\t\t\tB[i][i2] = x;\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\t// \t???????\u00b1????????\\n\t\tfor(int i=0; i<n; i++){\\n\t\t\tint x = 0;\\n\t\t\tlong y = 0;\\n\t\t\tfor(int j=0; j<l; j++){\\n\t\t\t\tlong C = 0;\\n\t\t\t\tfor (int k=0; k<m; k++){\\n\t\t\t\t\ty = A[i][k]*B[k][j];\\n\t\t\t\t\tC = C + y;\\n\t\t\t\t\t// ??????\\n\t\t\t\t\tif(k == (m-1)){\\n\t\t\t\t\t\tSystem.out.print(C);\\n\t\t\t\t\t\tx++;\\n\t\t\t\t\t\tif(x == l) x = 0;\\n\t\t\t\t\t\telse System.out.print(\" \");\\n\t\t\t\t\t\t\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tSystem.out.println();\\n\t\t}\\n\t\t\t\\n\t\t\\n\t}\\n\\n}", "target": "204", "substitutes": {}}
{"code": "import java.util.Scanner;\\nimport java.util.Arrays;\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int[] a = new int [2];\\n        int[] b = new int [2];\\n        for(int i = 0;i < 2;i++){\\n            a[i] = sc.nextInt();\\n        }\\n        for(int i = 0;i < 2;i++){\\n            b[i] = sc.nextInt();\\n        }\\n        int ans = Math.min(a[1],b[1]) - Math.max(a[0],b[0]);\\n        if(ans <= 0){\\n            System.out.println(0);\\n            return;\\n        }\\n        System.out.println(ans);\\n    }\\n}\\n", "target": "47", "substitutes": {"sc": [" scr", "si", "ch", "sb", "sync", "sw", "mc", "osc", "anc", "cr", "Sc", "sci", "c", "ctx", "bc", "cc", "sys", "fc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "scan", "ss", "cl", "pb", "nc", "system", "cs", "tc", "sq", "pc", "ctl", "psc", "capt", "isc", "desc", "scl", "sv", "sp", "esc"], "a": ["ap", "an", "aff", "av", "la", "ba", "ab", "eas", "da", "at", "ea", "ai", "au", "obj", "s", "aka", "art", "aaa", "aj", "area", "el", "c", "am", "A", "era", "act", "\u00e4", "ar", "ia", "ma", "ao", "alpha", "ac", "ae", "app", "ga", "oa", "att", "as", "aa", "sta", "apa", "sa", "ca", "aq", "ed", "al"], "b": ["nb", "bi", "ba", "bl", "ab", "bb", "buff", "fb", "sb", "ib", "s", "it", "wb", "eb", "lib", "l", "bs", "ob", "gb", "bin", "db", "bo", "c", "by", "d", "bg", "bc", "v", "bar", "cb", "j", "back", "beta", "mb", "blue", "bis", "bp", "br", "base", "B", "rb", "n", "be"], "i": ["in", "multi", "si", "ti", "ai", "ip", "it", "set", "iu", "ie", "PI", "chain", "zi", "xi", "di", "pi", "qi", "ei", "parent", "mi", "point", "ity", "ini", "ci", "y", "sim", "err", "oi", "id", "io", "uri", "I", "ind", "q", "init", "me", "m", "iy", "inx", "\u0438", "batch", "gi", "ii", "info", "us", "ims", "used", "to", "is", "li", "hi", "ui", "cli", "client", "fire", "inner", "ix", "sequence", "im", "ic", "phi", "u", "ri"], "ans": ["an", "uns", "ars", "ents", "ms", "ians", "names", "s", "orts", "rans", "flags", "aps", "ann", "arms", "ons", "ins", "ns", "ags", "aus", "ros", "vals", "ks", " scans", "arts", "vs", "lines", " means", "ats", "nets", "rors", "sets", "anes", "ants", "eps", "xs", "posts", "ANS", "ads", "ls", "lan", "times", "cs", "as", " spans", "ps", "ations", "amps", "ens", "rs", "outs", "ids", "eds"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n//import java.math.*;\\nimport java.awt.Point;\\n \\npublic class Main {\\n\t//static final long MOD = 998244353L;\\n\t//static final long INF = -1000000000000000007L;\\n\tstatic final long MOD = 1000000007L;\\n\t//static final int INF = 1000000007;\\n\\n\tpublic static void main(String[] args) {\\n\t\tFastScanner sc = new FastScanner();\\n\t\tPrintWriter pw = new PrintWriter(System.out);\\n\t\tString s = sc.next();\\n\t\tint L = s.length();\\n\t\tfor (int i = 0; i < L; i++)\\n\t\t\tpw.print('x');\\n\t\tpw.println();\\n\t\tpw.close();\\n\t}\\n\\n\t\\n\tpublic static long dist(long[] p1, long[] p2) {\\n\t\treturn (Math.abs(p2[0]-p1[0])+Math.abs(p2[1]-p1[1]));\\n\t}\\n\t\\n\t//Find the GCD of two numbers\\n\tpublic static long gcd(long a, long b) {\\n\t\tif (a < b) return gcd(b,a);\\n\t\tif (b == 0)\\n\t\t\treturn a;\\n\t\telse\\n\t\t\treturn gcd(b,a%b);\\n\t}\\n\t\\n\t//Fast exponentiation (x^y mod m)\\n\tpublic static long power(long x, long y, long m) { \\n\t\tif (y < 0) return 0L;\\n\t\tlong ans = 1;\\n\t\tx %= m;\\n\t\twhile (y > 0) { \\n\t\t\tif(y % 2 == 1) \\n\t\t\t\tans = (ans * x) % m; \\n\t\t\ty /= 2;  \\n\t\t\tx = (x * x) % m;\\n\t\t} \\n\t\treturn ans; \\n\t}\\n\t\\n\tpublic static int[][] shuffle(int[][] array) {\\n\t\tRandom rgen = new Random();\\n\t\tfor (int i = 0; i < array.length; i++) {\\n\t\t    int randomPosition = rgen.nextInt(array.length);\\n\t\t    int[] temp = array[i];\\n\t\t    array[i] = array[randomPosition];\\n\t\t    array[randomPosition] = temp;\\n\t\t}\\n\t\treturn array;\\n\t}\\n\t\\n    public static int[][] sort(int[][] array) {\\n    \t//Sort an array (immune to quicksort TLE)\\n \\n\t\tArrays.sort(array, new Comparator<int[]>() {\\n\t\t\t  @Override\\n        \t  public int compare(int[] arr1, int[] arr2) {\\n\t\t\t\t  return arr1[0]-arr2[0]; //ascending order\\n\t          }\\n\t\t});\\n\t\treturn array;\\n\t}\\n    \\n    public static long[][] sort(long[][] array) {\\n    \t//Sort an array (immune to quicksort TLE)\\n\t\tRandom rgen = new Random();\\n\t\tfor (int i = 0; i < array.length; i++) {\\n\t\t    int randomPosition = rgen.nextInt(array.length);\\n\t\t    long[] temp = array[i];\\n\t\t    array[i] = array[randomPosition];\\n\t\t    array[randomPosition] = temp;\\n\t\t}\\n\t\tArrays.sort(array, new Comparator<long[]>() {\\n\t\t\t  @Override\\n        \t  public int compare(long[] arr1, long[] arr2) {\\n\t\t\t\t  //return 0;\\n\t\t\t\t  if (arr1[0] < arr2[0]) {\\n\t\t\t\t\t  return -1;\\n\t\t\t\t  } else if (arr1[0] > arr2[0]) {\\n\t\t\t\t\t  return 1;\\n\t\t\t\t  } else {\\n\t\t\t\t\t  return 0;\\n\t\t\t\t  }\\n\t          }\\n\t\t});\\n\t\treturn array;\\n\t}\\n    \\n    static class FastScanner { \\n        BufferedReader br; \\n        StringTokenizer st; \\n  \\n        public FastScanner() { \\n            br = new BufferedReader(new InputStreamReader(System.in)); \\n        } \\n  \\n        String next() { \\n            while (st == null || !st.hasMoreElements()) { \\n                try { \\n                    st = new StringTokenizer(br.readLine());\\n                } catch (IOException  e) { \\n                    e.printStackTrace(); \\n                } \\n            } \\n            return st.nextToken(); \\n        } \\n  \\n        int ni() { \\n            return Integer.parseInt(next()); \\n        } \\n  \\n        long nl() { \\n            return Long.parseLong(next()); \\n        } \\n  \\n        double nd() { \\n            return Double.parseDouble(next()); \\n        } \\n  \\n        String nextLine() { \\n            String str = \"\"; \\n            try { \\n                str = br.readLine(); \\n            } catch (IOException e) {\\n                e.printStackTrace(); \\n            } \\n            return str;\\n        }\\n    }\\n}", "target": "122", "substitutes": {}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String args[]){\\n    Scanner sc=new Scanner(System.in);\\n    String str=sc.next();\\n    if(str.equals(\"Sunny\")){\\n      System.out.println(\"Cloudy\");\\n    }\\n    if(str.equals(\"Cloudy\")){\\n      System.out.println(\"Rainy\");\\n    }\\n    if(str.equals(\"Rainy\")){\\n      System.out.println(\"Sunny\");\\n    }\\n  }\\n}", "target": "60", "substitutes": {"sc": ["ch", "sync", "s", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "sel", "c", "sub", "inc", "dec", "bc", "cc", "sys", "screen", "SC", "conv", "lc", "rc", "usc", "st", "sch", "sec", "gc", "scan", "cl", "uc", "system", "nc", "sq", "tc", "cs", "pc", "isc", "desc", "scl", "sv", "sp", "esc"], "str": ["wr", "result", "list", "cur", "obj", "iter", "vol", "s", "key", "next", "fr", "group", "expr", "STR", "tr", "req", "dr", "del", "stri", "char", "out", "doc", "jp", "coll", "comm", "gr", "r", "cont", "dat", "name", "j", "print", "string", "st", "Str", "stable", "exp", "url", "att", "usr", "data", "t", "piece", "br", "input", "txt", "inv", "n", "desc", "elt", "div", "hex", "enc", "arr"]}}
{"code": "import java.util.*;\\n\\n\\nclass Main {\\n  private static long gcd(long m, long n) {\\n      if(m < n) return gcd(n, m);\\n      if(n == 0) return m;\\n      return gcd(n, m % n);\\n  }\\n\\n  private static long lcm(long m, long n) {\\n      return m * n / gcd(m, n);\\n  }\\n\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int a = sc.nextInt();\\n    int b = sc.nextInt();\\n    System.out.println(lcm(a, b));\\n  }\\n}", "target": "67", "substitutes": {"m": ["ms", "mat", "md", "perm", "mt", "sm", "cm", "mr", "um", "msg", "mc", "mm", "o", " M", "l", "om", "x", "c", "i", "am", "d", "med", "g", "r", "mi", "pm", "v", "M", "nm", "y", "mod", "rm", "ma", "min", "f", "mo", "me", "tm", "mk", "mu", "mb", "dm", "t", "gm", "em", "man", "mem", "p", "im", "mn", "mun"], "n": ["an", "nb", "en", "ms", "size", "nn", "nw", "nor", "w", "o", "l", "np", "ns", "x", "c", "i", "d", "un", "g", "r", "nt", "no", "nm", "v", "M", "ng", "name", "j", "h", "sn", "number", "nu", "nl", "nc", "ln", "nan", "ne", "t", "na", "z", "num", "net", "cn", "len", "dn", "N", "gn", "p", "mn"], "sc": ["si", "ch", "sb", "sync", "sw", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "c", "ctx", "inc", "bc", "cc", "sys", "SC", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "ss", "nc", "sq", "cs", "tc", "spec", "disc", "tch", "pc", "ctl", "acc", "psc", "sa", "capt", "isc", "desc", "scl", "sh", "sv", "sp", "esc"], "a": ["aff", "an", "la", "ba", "ab", "eas", "da", "ea", "ai", "au", "ama", "aka", "aaa", "aj", "am", "A", "ia", "ta", "ma", "ao", "va", "alpha", "ac", "ae", "ua", "ga", "oa", "sta", "aa", "ova", "apa", "pa", "fa", "sa", "ca", "aq", "xa"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "fb", "sb", "zb", "it", "wb", "eb", "l", "ob", "gb", "bs", "db", "c", "i", "d", "bc", "v", "bf", "cb", "xb", "j", "f", "back", "body", "beta", "mb", "bis", "bp", "br", "z", "B", "rb"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        String Str = sc.nextLine();\\n        String Ans = \"\";\\n        int l = Str.length();\\n        int i;\\n        char c1,c2;\\n        for(i=0;i<l;i++){\\n            c1 = Str.charAt(i);\\n            if(Character.isLowerCase(c1) == true) {\\n                c2 = Character.toUpperCase(c1);\\n            }else{\\n                c2 = Character.toLowerCase(c1);\\n            }\\n            Ans += c2;\\n        }\\n        System.out.println(Ans);\\n    }\\n}\\n\\n", "target": "192", "substitutes": {"sc": ["ch", "sync", "s", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "ec", "Sc", "out", "sel", "c", "ko", "dec", "bc", "cc", "sys", "ng", "SC", "lc", " Sc", "rc", "usc", "sec", "sch", "nl", "gc", "scan", "cl", "ss", "nc", "sq", "cs", "tc", "system", "pc", "isc", "desc", "soc", "sv", "sp", "esc"], "Str": ["Tr", "Ws", "S", "Msg", "In", "Coll", "s", "Raw", "Source", "Sl", "Inv", "STR", "Res", "Sec", "Rest", "Ms", "Orig", "Query", "Js", "Ar", "str", " str", "r", "Ch", "Read", "Sn", "Is", "Gr", "New", "Spec", "Val", "Rs", "R", "Wr", "Bytes", "St", "Obj", "Text", "Ts", "Qu", "Ins", "Form", "Name"], "Ans": ["ANes", "ANps", "Anes", "anss", "Anss", "ans", "ann", "anps", "ANn", "Ants", " ann", " Ancs", "ANts", "Ann", " ancs", " Anps", "ANss", "anes", "ants", "ANs", " Ann", "Ancs", " ants", " Anes", "ANcs", "Anps", " ans", " Ants", " Anss"], "l": ["list", "kl", "lt", "e", "s", " L", "lay", "level", "ll", "lit", "loc", "el", "c", "d", "lp", "tl", "ly", "r", "v", "f", "lc", "length", "ell", "le", "m", "nl", "sl", "ln", "ol", "dl", "isl", "t", "li", "L", "z", "pl", "len", "n", "p"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "it", "ip", "gu", "iu", "ie", "o", "chain", "zi", "xi", "di", "pi", "qi", "x", "c", "ei", "my", "mi", "point", "v", "ini", "load", "ci", "sim", "id", "j", "io", "conv", "uri", "I", "ind", "q", "init", "me", "m", "index", "ori", "\u0438", "batch", "ii", "gi", "us", "t", "to", "is", "li", "ui", "cli", "n", "ji", "ix", "p", "im", "ic", "phi", "ri"], "c1": ["c0", "p0", "p3", " c5", "char4", "c91", "arc15", "p1", "c5", "char1", "pc1", "catone", "arc2", "p2", "CFirst", "lc1", "cat61", " c3", "charFirst", "ct1", "COne", "C15", "cone", "C3", "cache91", "cat41", "pc41", "c3", "ct91", "pcone", "lc15", "lcOne", "cFirst", "cache1", "pc61", "char2", "char41", "cache5", "C1", "c4", "cat1", "arc1", "ct2", "cache2", "cOne", " c4", "C2", "C0", "c61", " cFirst", "charone", " c91", "ct5", "char61", "c15", " c0", "lc2", "C4", "c41", "arcOne"], "c2": ["cf1", "c7", " c52", "clet", "co32", "ac1", " ctwo", "ac3", "ac7", "cachelet", "ctwo", " c36", "cf2", " c3", "C36", "C3", "c3", "cftwo", "cache1", "c52", "c32", "Clet", "C1", "cache2", "co2", "C32", "C52", "c36", "Ctwo", " c7", "C2", " clet", " c32", "ac2", "cf36", "co1", "C7", "co52"]}}
{"code": "\\nimport java.util.Scanner;\\n\\n\\npublic class Main {\\n\\n    /**\\n     * @param args the command line arguments\\n     */\\n    public static void main(String[] args) {\\n        \\n        Scanner s = new Scanner(System.in);\\n        String str = s.next();\\n        \\n        int c = 0;\\n        int maxC = 0;\\n        \\n        for (int i = 0; i < str.length(); i ++) {\\n            if (str.charAt(i) == 'A' || str.charAt(i) == 'C' || str.charAt(i) == 'G' || str.charAt(i) == 'T') {\\n                c ++;\\n                if (c > maxC)\\n                    maxC = c;\\n            } else\\n                c = 0;\\n        }\\n        \\n        System.out.println(maxC);\\n        \\n    }\\n    \\n}\\n", "target": "100", "substitutes": {"s": ["ses", "ms", "S", "ws", "sts", "sb", "ds", "sol", "w", "es", "b", "ns", "rs", "ts", "sc", "js", "ys", "sys", "y", "search", "j", "h", "xs", "gs", "ls", "ss", "sq", "so", "cs", "qs", "os", "bis", "se", "as", "ps", "is", "p", "sv", "fs", "gets"], "str": ["rep", "list", "cur", "obj", "ch", "it", "vol", "sw", "ocr", "msg", "fr", "oct", "l", "tr", "STR", "b", "req", "dr", "del", "char", "text", "out", "form", "sc", "gr", "comm", "g", "r", "seq", "v", "cont", "err", "dat", "name", "j", "f", "print", "string", "st", "m", "Str", "ent", "stack", "exp", "url", "spec", "raw", "rec", "t", "data", "br", "z", "input", "txt", "n", "pr", "desc", "div", "hex", "enc", "sp", "arr"], "c": ["cp", "check", "com", "max", "cache", "cm", "mc", "cum", "chain", "k", "cmp", "cd", "cr", "conf", "ec", "x", "sc", "d", "g", "cos", "cy", "bc", "fc", "co", "C", "ci", "v", "cc", "conv", "h", "f", "lc", "a", "rc", "ac", "m", "gc", "uc", "nc", "cs", "cf", "tc", "con", "pc", "t", "dc", "count", "ce", "ct", "n", "ca", "ctr", "cu", "ic", "unc", "u"], "maxC": ["maxCC", " maxCount", " maxCC", "maximumG", "minT", "MaxCC", "maximumCount", "checkc", "MAXT", " maxR", "checkCC", " maxc", "meanC", "minP", "newT", "MAXG", "MaxT", " maxCR", "maximumR", "maxR", "meanCC", "minC", "maximumC", "newG", "maxc", "MAXP", "MaxG", "MAXC", "meanc", " maxP", "meanCR", " maxG", "MaxR", "MaxCount", "newC", "maxG", "checkC", "minG", " maxT", "maxCR", "maxP", "maxCount", "checkCR", "MaxC", "maxT", "newCC"], "i": ["bi", "multi", "si", "ti", "ai", "it", "iu", "ie", "status", "o", "zi", "xi", "di", "pi", "qi", "x", "ei", "iri", "my", "mi", "v", "ini", "ci", "y", "oi", "ia", "j", "io", "a", "uri", "conv", "I", "ind", "ij", "me", "ami", "m", "init", "ori", "\u0438", "go", "ii", "gi", "info", "us", "slice", "t", "to", "is", "li", "hi", "ui", "cli", "n", "sql", "ji", "ix", "im", "ic", "phi", "u", "ri"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args)\\n\t{\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint dataSize = Integer.parseInt(sc.nextLine());\\n\t\tint[][] data = new int[dataSize][3];\\n\t\\n\t\tfor(int i = 0; i < dataSize; ++i)\\n\t\t{\\n\t\t\tString[] splitted = sc.nextLine().split(\"\\\\s+\");\\n\t\t\tdata[i][0] = Integer.parseInt(splitted[0]);\\n\t\t\tdata[i][1] = Integer.parseInt(splitted[1]);\\n\t\t\tdata[i][2] = Integer.parseInt(splitted[2]);\\n\t\t}\\n\t\t\\n\t\tfor(int i = 0; i < dataSize; ++i)\\n\t\t{\\n\t\t\tif(IsRight(data[i][0],data[i][1],data[i][2]))\\n\t\t\t\tSystem.out.println(\"YES\");\\n\t\t\telse\\n\t\t\t\tSystem.out.println(\"NO\");\\n\t\t}\\n\t\t\\n\t}\\n\t\\n\tpublic static boolean IsRight(int a, int b, int c)\\n\t{\\n\t\tif((a*a == b*b + c*c) || (b*b == a*a + c*c ) || (c*c == a*a + b*b))\\n\t\t\treturn true;\\n\t\telse \\n\t\t\treturn false;\t\\n\t}\\n\t\\n\t\\n\t\\n\t\\n\\n\t\\n}", "target": "65", "substitutes": {"sc": [" scr", "ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "sub", "bc", "cc", "sys", "screen", "SC", "lc", " Sc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "nc", "sq", "cs", "tc", "pc", "isc", "capt", "desc", "scl", "sh", "sv", "sp", "esc"], "dataSize": ["windowSize", "tableSIZE", " datasize", "fileSize", "filesize", " dataFontSize", "dataFontSize", "DataSIZE", "DataFontSize", "tableSet", "windowLength", "dSIZE", "datSet", "dsize", "DataSet", "windowLen", "lengthLength", " dataSIZE", " dataSet", "datSize", "dataLength", "dataCount", "tableSize", "dataSet", "DATACount", "dataSIZE", "dataLen", "fileSIZE", "datFontSize", "lengthSize", "datasize", "windowCount", "DataSize", "dSize", "DATASize", "lengthCount", "DATALen", "DATALength", "lengthLen"], "data": ["result", "add", "size", "list", "items", "da", "results", "item", "json", "dict", "it", "open", "set", "cache", "content", "users", "then", "empty", "next", "all", "block", "DATA", "series", "bytes", "table", "chain", "missing", "state", "image", "step", "di", "ns", "details", "db", "row", "d", "def", "rel", "format", "window", "end", "no", "dat", "default", "done", "where", "shape", "index", "values", "ata", "mu", "batch", "buffer", "zero", "info", "debug", "params", "raw", "valid", "array", "bus", "n", "filter", "map", "sequence", "entry"], "i": ["bi", "multi", "item", "si", "ti", "ai", "ip", "it", "port", "iu", "ie", "o", "chain", "zi", "xi", "di", "pi", "qi", "x", "ei", "g", "ik", "mi", "point", "v", "ini", "ity", "ci", "y", "sim", "id", "err", "span", "j", "io", "uri", "oi", "ia", "I", "ind", "q", "ij", "init", "me", "m", "index", "ori", "iy", "ami", "\u0438", "go", "batch", "ii", "gi", "info", "is", "li", "ex", "ui", "cli", "ji", "ix", "p", "er", "im", "ic", "history", "phi", "ri"], "splitted": ["plits", "partitted", "splatted", "partited", "splited", "splitter", " splitter", "spits", "skitted", "plitter", " splits", " spliced", "plited", "partatted", " splitting", "spatted", "skitting", "spitting", "skatted", "spliced", "spitted", "spiced", "spited", "splits", "splitting", "skited", "plitted", "particed", " splatted", "spitter", " splited", "partitting"], "a": ["an", "aff", "la", "ba", "ab", "j", "at", "ea", "ai", "ra", "au", "e", "w", "o", "ax", "l", "aaa", "aj", "area", "x", "ad", "am", "d", "A", "g", "r", "ar", "y", "ia", "ak", "ta", "ma", "h", "admin", "ao", "va", "ack", "alpha", "ac", "ae", "app", "ach", "m", "abs", "ga", "oa", "aa", "as", "t", "sta", "pa", "sa", "ca", "aq", "p", "val", "al", "u"], "b": ["nb", "bi", "ba", "ab", "bl", "bb", "ib", "fb", "e", "sb", "bu", "ub", "wb", "o", "eb", "l", "ob", "bs", "gb", "db", "d", "g", "r", "bc", "v", "y", "cb", "j", "f", "h", "m", "br", "t", "z", "B", "rb", "n", "p", "be", "u"], "c": ["cur", "ch", "e", "vc", "w", "cm", "mc", "o", "l", "k", "cd", "p", "cr", "ec", "arc", "d", "g", "r", "bc", "v", "cc", "C", "ci", "y", "co", "cb", "fc", "ar", "j", "f", "lc", "h", "rc", "ac", "sec", "m", "cl", "uc", "cs", "tc", "con", "t", "dc", "z", "ce", "ct", "n", "cu", "ic", "unc", "u"]}}
{"code": "public class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\\n\t\tjava.util.Scanner scanner = new java.util.Scanner(System.in);\\n\t\tint a = scanner.nextInt();\\n\t\tint b = scanner.nextInt();\\n\t\t\\n\t\tint num = a;\\n\t\tint num2 = b;\\n\t\t\\n\t\tif(num > num2){\\n\t\t\tSystem.out.println(\"a\"+\" \"+\">\"+\" \" +\"b\");\\n\t\t}else if(num < num2){\\n\t\t\tSystem.out.println(\"a\"+\" \"+\"<\"+ \" \"+\"b\");\t\\n\t\t}else if(num == num2){\\n\t\t\tSystem.out.println(\"a\"+\" \"+ \"==\" +\" \" + \"b\");\\n\t\t}\\n\\n\t}\\n}", "target": "179", "substitutes": {"scanner": ["canner", "Scanter", "caner", "scanter", "canener", " scanener", "Scanator", "Scaner", "canator", "Scanner", "canter", "scanener", " scaner", "Scanener", " scanator", "scaner", "scanator", " scanter"], "a": ["an", "ba", "ab", "ea", "at", "au", "e", "s", "o", "l", "aj", "x", "i", "c", "am", "A", "r", "v", "ar", "name", "ia", "ta", "ma", "f", "ao", "ac", "ae", "m", "oa", "aa", "as", "t", "sa", "ca", "n", "p"], "b": ["nb", "bi", "ba", "ab", "be", "bb", "ib", "e", "fb", "sb", "wb", "eb", "l", "ob", "gb", "bs", "db", "c", "i", "d", "g", "r", "bc", "v", "y", "f", "body", "m", "blue", "bis", "t", "z", "B", "rb", "n", "p"], "num": ["nb", "en", "mom", "mult", "multi", "total", "snap", "umi", "um", "ord", "msg", "cal", "rem", "none", "cum", "np", "coord", "tim", "sum", "un", "comm", "draw", "nm", "dec", "NUM", "proc", "pai", "name", "number", "alph", "nom", "nu", "m", "mon", "index", "sam", "zero", "typ", "Num", "na", "one", "net", "n", "div", "cu", "prim", "nam", "mn"], "num2": ["mon1", "mon2", "seq2", "number0", "num0", "Numpl", "num8", "seqb", "numTwo", "number2", "Numb", "nom2", "proc2", "number8", "monpl", " numb", " num1", "um1", "seqTwo", "seq5", " num5", " num8", " num0", "umb", "numb", "num1", "number1", "num5", "numpl", "con2", "number5", "con5", "proc5", "um0", "con8", "nomb", " numpl", "nomTwo", "numberb", "Num1", "nom5", "monb", "um2", "procb", "procTwo", "con1", "Num2"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main (String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tint[] counts = new int[8];\\n\t\tint over = 0;\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t    int x = sc.nextInt();\\n\t\t    int idx = x / 400;\\n\t\t    if (idx >= 8) {\\n\t\t        over++;\\n\t\t    } else {\\n\t\t        counts[idx]++;\\n\t\t    }\\n\t\t}\\n\t\tint types = 0;\\n\t\tfor (int i = 0; i < counts.length; i++) {\\n\t\t    if (counts[i] != 0) {\\n\t\t        types++;\\n\t\t    }\\n\t\t}\\n\t\tint max = types + over;\\n\t\tint min = Math.max(types, 1);\\n\t\tSystem.out.println(min + \" \" + max);\\n\t}\\n}\\n", "target": "94", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "c", "sub", "bc", "cc", "sys", "co", "screen", "SC", "conv", "lc", "rc", "usc", "st", "sec", "sch", "nl", "gc", "scan", "cl", "ss", "pb", "nc", "sq", "cs", "tc", "system", "ck", "pc", "ctl", "isc", "scl", "sh", "sv", "rs", "sp", "esc"], "n": ["nb", "en", "nn", "nw", "nor", "network", "l", "np", "ns", "c", "d", "nr", "nm", "nt", "no", "ng", "on", "name", "number", "sn", "ni", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "cn", "num", "net", "N", "mn"], "counts": ["amounteds", " counteds", "Counts", "ountss", "countrs", "ountings", "countings", "countss", "counted", "counteds", "countries", " countries", "cted", "ounted", " countings", "Countss", "ountrs", "Countries", "Counteds", "ounteds", " countrs", "Countrs", " counted", "ounts", "Countings", "amounts", "ctries", "cts", "ountries", "amountss", "ctrs", "amountries"], "over": ["errors", "order", "copy", "overs", "iter", "total", "older", "overed", "obs", "always", "re", "after", "above", "allow", "OVER", "with", "area", "cover", "ob", "conf", "covered", "op", "nr", "off", "r", "or", "orange", "v", "co", "high", "no", "vers", "err", "on", "rows", "options", "error", "bottom", "inter", "Over", "can", " OVER", "under", "replace", "times", " overs", "timeout", "other", "hover", "auto", "er", "orp"], "i": ["bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "iu", "ie", "o", "chain", "zi", "xi", "di", "pi", "qi", "ei", "g", "mi", "v", "ini", "ity", "ci", "id", "sim", "name", "oi", "j", "uri", "iq", "ni", "I", "print", "q", "iy", "init", "inx", "me", "m", "ki", "\u0438", "batch", "ii", "info", "gi", "us", "to", "is", "li", "z", "ex", "hi", "ui", "ji", "cli", "ix", "fi", "er", "im", "ic", "phi", "ri"], "x": ["dx", "mx", "px", " xx", "tx", "xe", "xx", "xd", "ax", " cx", "xf", "xi", "xt", "p", "xc", "c", "xp", "ux", "v", "y", "ox", "X", "wx", "xs", "xxxx", "ic", "inx", "rx", "index", "t", "xy", "z", "ex", "xxx", "ix", "xa", "lex"], "idx": ["idxs", " idX", "ridix", "IDxs", "IDx", "IDxc", "Idxc", " idxs", "idi", "Idxs", "Idy", "ridxc", "ridi", "midix", " idy", "Idi", "midx", "midxs", "Idix", "IdX", "Idx", "idey", "IDi", " idix", "ideX", "idy", "midX", "ridxs", "ridX", "idX", "idex", "idxc", "idix", "ridx", "ideix"], "types": ["roots", "jobs", "tons", "items", "results", "names", "users", "s", "pes", "orts", "tips", "boxes", "stats", "issues", "ports", "versions", "actions", "objects", "ins", "ids", "faces", "classes", "otypes", "ts", "workers", "keys", "codes", "lines", "nos", "ypes", "ats", "options", "ics", "lets", "tp", "rows", "styles", "ites", "xs", "posts", "asts", "orders", "packages", "values", "Types", "mins", "files", "ots", "cats", "params", "times", "checks", "tests", "ors", "states", "ints"], "max": ["pop", "cross", "add", "size", "ms", "mx", "total", "last", "right", "MAX", "diff", "ax", "pad", "box", "sum", "cmp", "step", "aj", "aux", "prime", "out", "med", "average", "or", "end", "act", "mod", "range", "height", "ma", "res", "power", "inter", "rank", "gt", "recent", "rest", "Max", "plus", "huge", "cast", "times", "exp", "head", "t", "scale", "full", "dot", "z", "count", "ext", "base", "div", "mean", "grow", "maximum"], "min": ["in", "mid", "diff", "aug", "rain", "amin", "lower", "hide", "rel", "un", "sub", "mod", "id", "start", "default", "range", "minute", "mask", "mint", "admin", "mini", "ind", "m", "index", "pre", "initial", "mins", "minimum", "sort", "begin", "MIN", "Min", "div", "temp", "store", "mean", "small", "mn"]}}
{"code": "import java.util.Scanner;\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner in = new Scanner(System.in);\\n        while(in.hasNext()){\\n        int H = in.nextInt();\\n        int W = in.nextInt();\\n        if(H==0&&W==0){\\n            break;\\n        }\\n        for(int i = 0; i<H ; i++){\\n            for(int j = 0; j<W ; j++){\\n                System.out.print(\"#\");\\n            }\\n            System.out.println();\\n        }\\n        System.out.println();\\n        }\\n        in.close();\\n    }\\n    }\\n", "target": "87", "substitutes": {"in": [" din", "old", "en", "query", "add", "copy", "std", "In", "iter", "null", "it", "check", "din", "read", " out", "from", "source", "all", "rin", "re", "run", "world", "l", "user", "sum", "ins", "thin", "by", "bin", "out", "doc", "conf", "char", "get", "inc", "window", "sin", "r", "conn", "ini", "line", "err", "on", "id", "ma", "io", "ind", "al", "can", "IN", "init", "scan", "reader", "info", "per", "con", "raw", "gin", "isin", "is", "serv", "as", "stream", "input", "client", "n", "inn", "inf", "inner", "inside", "cin"], "H": ["HE", "J", "Eh", "This", "HH", "HR", "WH", "IM", "NH", "Height", "AC", "HI", "HO", "MH", "HD", "HTML", "FH", "OH", "HA", "AH", "RH", "TH", "High", "AV", "HB", "X", "He", "CH", "h", "HS", "His", "I", "G", "HT", "HQ", "HL", "GO", "L", "HK", "GH", "SH"], "W": ["SW", "EW", "VW", "IF", "MW", "J", "WAR", "WR", "D", "w", "WH", "WT", "Width", "SU", "WD", "P", "Wh", "MS", "V", "WI", "M", "WA", "WW", "FW", "I", "WS", "NW", "We", "TW", "WE", "R", "DW", "WC", "CW", "OW", "WM", "WP", "Win", "L", "B", "F", "RE", "N", "BW", "Week"], "i": ["yi", "jo", "bi", "si", "iter", "ip", "it", "iu", "ie", "zi", "xi", "di", "pi", "x", "mi", "v", "ini", "ci", "y", "sim", "ret", "ia", "a", "iq", "ni", "inter", "ind", "I", "ij", "q", "init", "m", "ki", "ii", "info", "us", "ims", "is", "li", "ui", "ji", "inner", "ix", "im", "ic", "phi", "ri"], "j": ["jo", "bi", "bj", "oj", "obj", "jc", "json", "J", "it", "pt", "key", "o", "fr", "dj", "b", "k", "jj", "jas", "aj", "jl", "jp", "uj", "js", "nr", "g", "ja", "y", "sp", "ph", "ij", "q", "kj", "m", "ne", "br", "z", "jump", "job", "ji", "pr", "n", "ge", "im"]}}
{"code": "import java.text.ParseException;\\nimport java.text.SimpleDateFormat;\\nimport java.util.Date;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString dateStr = sc.nextLine();\\n\t\tSimpleDateFormat sdFormat = new SimpleDateFormat(\"yyyy/MM/dd\");\\n\t\tDate inputDate = null;\\n\t\tDate lastHeisei = null;\\n\t\ttry {\\n\t\t\tinputDate = sdFormat.parse(dateStr);\\n\t\t\tlastHeisei = sdFormat.parse(\"2019/4/30\");\\n\t\t} catch (ParseException e) {\\n\\n\t\t}\\n\t\tif (inputDate.after(lastHeisei)) {\\n\t\t\tSystem.out.println(\"TBD\");\\n\t\t} else {\\n\t\t\tSystem.out.println(\"Heisei\");\\n\t\t}\\n\t\tsc.close();\\n\t}\\n}", "target": "163", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "Sc", "arc", "c", "bc", "cc", "sys", "fc", "sim", "SC", "lc", "rc", "usc", "st", "sch", "sec", "nl", "gc", "cl", "scan", "nc", "system", "cs", "tc", "sq", "ga", "se", "pc", "isc", "desc", "syn", "scl", "soc", "sh", "sv", "sp", "esc"], "dateStr": [" datestr", "dateSt", "timeSt", "dayStr", " dateSt", " DateString", " dateDec", " dateString", "timeStr", " DateStr", "dateString", "dayString", " dateYe", " DateYe", "dateDec", "dayDec", " Datestr", "dateYe", "daystr", "timeString", "daySt", "dayYe", "datestr", "timeDec"], "sdFormat": ["sdParser", "sdName", "mdParser", "sySet", "syDate", "svformat", "dsName", "svLayout", "sdformat", " sdSet", "skyLayout", "ddParser", "sdLayout", "SDSet", "dsForm", "ddForm", "SDDate", "skyformat", "SDForm", " sdForm", "syFormat", "SDFormat", " sdDate", "sdForm", "mdForm", "sdDate", "mdName", "skyForm", " sdLayout", " sdformat", "mdFormat", "dsFormat", "syForm", "skyFormat", "dsParser", "svForm", "ddName", "sdSet", "svFormat", "ddFormat"], "inputDate": ["inNow", " InputTime", "inputTime", "InputDat", "inputDo", "outputDat", "dateInstant", "outputDate", " InputDat", "outputDay", " inputdate", "inputDay", "datedate", "inInstant", " inputDat", "InputDay", " inputDay", " inputTime", "indate", "inputDat", " inputDo", " inputNow", "dateNow", "InputDo", " InputDo", "InputDate", "inDate", "outputTime", " inputInstant", "dateDate", "inputInstant", " InputDate", "inputdate", "inputNow", "InputTime"], "lastHeisei": ["lastHeissee", "lastHeISEi", "lastHeisesy", "lastHeisationi", "lastKeisesi", "lastHeiske", "lastHeISEphi", "lastHeisationis", "lastHeisedi", "lastHeisationy", "lastHeisingy", "lastHeisesu", "lastHeiseis", "lastHeisee", "lastHeisese", "lastCheisei", "lastHeisingis", "lastHeisesis", "lastCheiseis", "lastKeisesis", "lastHeisesi", "lastHeISEe", "lastCheisationis", "lastHeissei", "lastKeisei", "lastCheisationi", "lastKeiseu", "lastHeisede", "lastKeisee", "lastHeisephi", "lastCheisationy", "lastHeisationo", "lastHeisedu", "lastKeisesu", "lastHeisingo", "lastHeISEis", "lastHeisingi", "lastHeisedis", "lastKeisese", "lastCheiseo", "lastHeiseu", "lastHeiski", "lastCheisationo", "lastHeisseis", "lastCheisey", "lastKeiseis", "lastKeisesphi", "lastHeiseo", "lastHeisesphi", "lastHeisseu", "lastHeiskphi", "lastHeiseso", "lastKeisephi", "lastHeisey", "lastHeiskis"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int m = sc.nextInt();\\n        sc.close();\\n        System.out.println(n * (n - 1) / 2 + m * (m - 1) / 2);\\n    }\\n}", "target": "49", "substitutes": {"sc": ["ch", "sync", "cle", "asc", "mc", "osc", "ctrl", "anc", "cr", "Sc", "ko", "arc", "c", "jp", "sub", "inc", "bc", "cc", "sys", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "pb", "nc", "system", "cs", "tc", "sq", "ck", "exp", "uc", "pc", "ctl", "dc", "capt", "isc", "desc", "scl", "sh", "cu", "sv", "sp", "esc"], "n": ["nb", "an", "en", "ot", "nn", "s", "ll", "l", "np", "ns", "x", "c", "i", "d", "r", "nt", "v", "nm", "tn", "conn", "on", "name", "j", "number", "sn", "nu", "nl", "yn", "nc", "ln", "ne", "t", "na", "z", "num", "cn", "dn", "N", "gn", "p", "mn"], "m": ["ms", "mx", "md", "perm", "mt", "sm", "cm", "mr", "um", "mc", "mm", "l", "b", "k", "c", "i", "d", "hm", "g", "r", "mi", "pm", "v", "M", "mod", "rm", "j", "h", "me", "tm", "fm", "mu", "vm", "dm", "t", "gm", "bm", "mem", "mis", "p", "mn"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n      String C = sc.next();\\n      String alfa = \"abcdefghijklmnopqrstuvwxyz\";\\n      int A = alfa.indexOf(C);\\n      System.out.println(alfa.substring(A+1,A+2));\\n    }\\n}", "target": "150", "substitutes": {"sc": ["ch", "sync", "sw", "cle", "asc", "mc", "osc", "anc", "sac", "cr", "ec", "Sc", "sel", "c", "bc", "cc", "sys", "soc", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "scan", "cl", "nc", "sq", "tc", "cs", "system", "pc", "ser", "capt", "isc", "desc", "scl", "syn", "sv", "sp", "esc"], "C": ["CS", "CP", "S", "CT", "CG", "D", "LC", "T", "CB", "E", "K", "AC", "U", "CV", "H", "JC", "P", "c", " c", "V", "CA", "M", "X", "SC", "BC", "I", "CC", "Cs", "CN", "YC", "TC", "CE", "CD", "CNN", "B", "F", "N", "CCC", "CR"], "alfa": ["alfoa", "elfi", "altaa", "alfea", "alsepa", "alta", " alti", "alfas", "heta", "fareoa", "aldb", "alfi", "farepa", "hetoa", "elfb", "eleoa", "farea", "elfas", "altb", "aldi", "hetea", "alseaa", "alfpa", "fareea", "aldaa", "altpa", "elea", "eleea", "alfb", "alsea", "aldas", "alfaa", " altb", "alda", "aldpa", "elepa", "hetpa", " altas", "alseb", " alta", "elfa"], "A": ["AY", "AB", "VA", "NA", "D", "PA", "BA", "T", "AF", "mA", "E", "K", "EA", "U", "AC", "JA", "AI", "H", "HA", "P", "SHA", "CA", "MA", "V", "SA", "ACC", "Array", "M", "ETA", "AE", "LA", "AR", "a", "I", "G", "AA", "TA", "IA", "GA", "L", "B", "N", "An"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\nclass Main {\\n\tpublic static void main(String args[]) throws IOException {\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t\tSolver solver = new Solver();\\n\t\tsolver.init();\\n\t\tsolver.readHead(in.readLine());\\n\t\tsolver.readA(in.readLine());\\n\t\tsolver.readB(in.readLine());\\n\t\tsolver.readC(in.readLine());\\n\t\t// for (; solver.hasNext();) {\\n\t\t// solver.readBody(in.readLine());\\n\t\t// }\\n\t\tsolver.solve();\\n\t}\\n}\\n\\nclass Solver {\\n\tint N;\\n\tint cnt;\\n\\n\tpublic void init() {\\n\t\tN = 0;\\n\t\tcnt = 0;\\n\t}\\n\\n\tpublic void readHead(String str) {\\n\t\tString[] strArr = str.split(\"\\\\s+\");\\n\t\tN = Integer.parseInt(strArr[0]);\\n\t\t// System.out.println(N);\\n\t\tA = new int[N + 1];\\n\t\tB = new int[N + 1];\\n\t\tC = new int[N + 1];\\n\t}\\n\\n\tpublic void readA(String str) {\\n\t\tString[] strArr = str.split(\"\\\\s+\");\\n\t\tfor (int i = 0; i < N; i++)\\n\t\t\tA[i + 1] = Integer.parseInt(strArr[i]);\\n\t}\\n\\n\tpublic void readB(String str) {\\n\t\tString[] strArr = str.split(\"\\\\s+\");\\n\t\tfor (int i = 0; i < N; i++)\\n\t\t\tB[i + 1] = Integer.parseInt(strArr[i]);\\n\t}\\n\\n\tpublic void readC(String str) {\\n\t\tString[] strArr = str.split(\"\\\\s+\");\\n\t\tfor (int i = 0; i < N - 1; i++)\\n\t\t\tC[i + 1] = Integer.parseInt(strArr[i]);\\n\t}\\n\\n\tint[] A;\\n\tint[] B;\\n\tint[] C;\\n\\n\tpublic boolean hasNext() {\\n\t\treturn cnt < N;\\n\t}\\n\\n\tpublic void readBody(String str) {\\n\t\t// System.out.println(str);\\n\t\tcnt++;\\n\t}\\n\\n\tpublic void solve() {\\n\t\tint ans = 0;\\n\t\tfor (int i = 1; i <= N; i++) {\\n\t\t\tans += B[A[i]];\\n\t\t\tif (i >= N)\\n\t\t\t\tcontinue;\\n\t\t\tif (A[i] + 1 == A[i + 1])\\n\t\t\t\tans += C[A[i]];\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n}\\n", "target": "223", "substitutes": {"in": [" din", "query", "en", "std", "at", "In", "it", "check", " IN", "diff", "din", "read", "file", "from", "all", "rin", "mm", "user", "b", "sum", "ins", "pi", "thin", "by", "bin", "out", "doc", "i", "get", "r", "ini", "line", "err", "on", "id", "f", "ind", "IN", "body", "init", "cl", "scan", "reader", "OUT", "info", "per", "con", "readable", "gin", "isin", "is", "vin", "stream", "input", "session", "inv", "n", "inn", "inner", "er", "ic", "cin"], "solver": ["Solver", " solved", " solution", "Sorter", "solution", "sololution", "settingsolution", "vol", "resolve", "settingsester", "tsolving", "sol", " solve", "resolution", "volver", " suzzle", "settingsolver", " sorter", "nsorter", "resol", "Solve", "Sol", "solve", "sololver", "gsol", "nsolve", "nsolver", "slove", "Solving", "sololved", "esester", " sester", "Solution", "solved", "esolving", "sorter", " slove", "esolution", "volve", " sol", "tsolved", "gsolve", "sollove", "nsolution", "suzzle", "esolver", "esolve", "sester", "gsolution", "esuzzle", "tsolve", "volution", "solving", "tsolution", "tsolver", "tslove", "settingsuzzle", "resolver", "gsolver"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n\\n    Scanner scan = new Scanner(System.in);\\n\\n    String str = scan.next();\\n    int max = 0;\\n\\n    for (int i = 0; i < str.length();) {\\n      int cnt = 0;\\n      for (int j = i; j < str.length(); j++) {\\n        i = j + 1;\\n        if ((str.charAt(j) == 'A') || (str.charAt(j) == 'C') || (str.charAt(j) == 'G') || (str.charAt(j) == 'T')) {\\n          cnt++;\\n        } else {\\n          break;\\n        }\\n      }\\n      max = Math.max(max, cnt);\\n    }\\n\\n    System.out.println(max);\\n  }\\n\\n}", "target": "100", "substitutes": {"scan": ["an", "scroll", "in", "query", " Scan", "spin", "ch", "sync", "check", "set", "sm", "read", "send", "connect", "re", "run", "save", "out", "seek", "sc", "get", "g", "sin", "ner", "r", "parse", "v", "sys", "find", "skip", "black", "range", "search", "can", "reach", "m", "nl", "gate", "san", "system", "se", "scale", "util", "stat", "n", "auto", "sv", "Scan"], "str": ["wr", "rep", "list", "cur", "obj", "iter", "pkg", "it", "vol", "s", "sw", "ocr", "msg", "fr", "oct", "chain", "STR", "tr", "req", "dr", "del", "char", "text", "out", "form", "sc", "gr", "comm", "g", "r", "seq", "err", "dat", "name", "res", "inst", "print", "string", "st", "m", "Str", "stack", "exp", "url", "spec", "raw", "t", "data", "br", "z", "input", "tree", "txt", "n", "pr", "desc", "p", "enc", "sp", "arr"], "max": ["dx", "add", "cross", "highest", "mx", "size", "largest", "ms", "total", "null", "check", "right", "last", "MAX", "diff", "next", "all", "put", "ax", "after", "best", "sum", "p", "conf", "doc", "x", "c", "med", "window", "or", "end", "v", "lock", "mod", "ox", "range", "current", "default", "min", "ma", "id", "res", "gt", "inter", "length", "rank", "hash", "recent", "m", "rest", "Max", "huge", "view", "grow", "scale", "dot", "ext", "rand", "full", "gd", "count", "n", "checked", "div", "mind", "map", "mean", "average", "maximum"], "i": ["in", "si", "ti", "ai", "e", "ip", "it", "s", "iu", "ie", "key", "l", "zi", "xi", "k", "di", "pi", "x", "iat", "c", "ei", "mi", "v", "ini", "ci", "y", "start", "ia", "io", "a", "f", "iq", "I", "ind", "ij", "ami", "init", "m", "index", "ori", "ii", "info", "t", "is", "li", "base", "z", "ui", "ji", "n", "ix", "p", "im", "ic", "phi", "u"], "cnt": [" ccount", "Cnt", "nn", "Ccount", " count", " catt", " cnc", " cant", "Catt", "Cant", "ccount", "pcpt", "cnd", "pcount", "lcct", "cct", "ncant", "lcn", " cn", "Cpt", "cnc", "nccount", "nct", "cpt", " cpt", "ncnd", " cnd", " cct", "lcnt", "lcnc", "pcnt", "catt", "Count", "Cnd", "cn", "count", "nnt", "nnc", "pcatt", "ncnt", "cant"], "j": ["jo", "bi", "bj", "oj", "adj", "obj", "jc", "json", "J", "it", "ie", "o", "fr", "er", "kid", "l", "jit", "dj", "b", "k", "jj", "req", "aj", "jl", "x", "el", "jp", "uj", "jen", "js", "g", "ion", "v", "ja", "y", "err", "ju", "ind", "jac", "ij", "q", "je", "kj", "m", "exp", "t", "br", "to", "z", "job", "jump", "other", "ji", "n", "pr", "ix", "ge", "ijk", "note", "u"]}}
{"code": "import java.util.Scanner;\\npublic class Main{\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tlong h = sc.nextLong();\\n\t\th = calc(h);\\n\t\tSystem.out.println(h);\\n\t}\\n\tpublic static long calc(long h){\\n\t\tlong res = 1;\\n\t\tif(h > 1){\\n\t\t\tres = 1 + 2 * calc(h / 2);\\n\t\t}\\n\t\treturn res;\\n\t}\\n}", "target": "51", "substitutes": {"sc": ["ch", "sync", "cam", "asc", "mc", "osc", "cr", "ec", "Sc", "sel", "c", "dec", "bc", "cc", "sys", "proc", "SC", "conv", "lc", "rc", "sch", "sec", "nl", "gc", "cl", "scan", "ss", "uc", "nc", "sq", "cs", "tc", "tk", "pc", "ser", "acc", "txt", "desc", "sh", "scl", "sv", "sp", "esc"], "h": ["oh", "hr", "ah", "it", "history", "uh", "his", "o", "l", "zh", "b", "th", "H", "p", "hp", "host", "he", "c", "d", "hm", "r", "bh", "hd", "v", "high", "eh", "hl", "y", "ht", "j", "height", "html", "hh", "f", "ph", "rh", "q", "hash", "m", "index", "ha", "handle", "ho", "t", "dh", "hz", "z", "hi", "count", "sh", "ih", "hex", "hs", "hal", "kh"], "res": ["resh", "result", "des", "ms", "resp", "pers", "vol", "ress", "sol", "resolution", "red", "rem", "re", "Res", "ons", "req", "sum", "vals", "out", "real", "RES", "cons", "gr", "rel", "js", "def", " Res", "r", "rev", "ret", "reg", "rest", "cond", "pas", "pre", "zero", "os", "usr", "con", "ps", "rand", "pres", "val", "rs", "reset"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        String s = sc.next();\\n        int n = s.length();\\n        for(int i = 1 ; i <= n ; i++ ){\\n            System.out.print(\"x\");\\n        }\\n        sc.close();\\n    }\\n}", "target": "122", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "ko", "arc", "c", "bc", "cc", "sys", "fc", "ok", "SC", "lc", "rc", "usc", "sch", "sec", "nl", "gc", "cl", "scan", "uc", "nc", "sq", "tc", "cs", "system", "ck", "pc", "psc", "isc", "capt", "syn", "sh", "scl", "sv", "sp", "esc"], "s": ["ms", "S", "ws", "sts", "sb", "sw", "l", "b", "ns", "ins", "strings", "bs", "c", "ts", "js", "ys", "str", "v", "sys", "ats", "its", "xs", "gs", "st", "ls", "ss", "sl", "sq", "qs", "cs", "t", "ps", "is", "p", "sv", "rs", "hs", "sp"], "n": ["nb", "nv", "ot", "nd", "nn", "non", "nor", "ll", "np", "ns", "x", "d", "nm", "nt", "no", "ng", "j", "sd", "sn", "ni", "nu", "m", "nl", "nc", "ln", "nan", "ne", "t", "na", "cn", "num", "net", "N", "gn", "mn"], "i": ["yi", "bi", "multi", "ms", "si", "ti", "ai", "it", "gu", "iu", "ie", "zi", "xi", "di", "pi", "qi", "x", "ei", "mi", "uu", "ini", "ci", "y", "sim", "j", "iq", "I", "q", "init", "m", "ki", "mu", "ii", "gi", "us", "ski", "is", "li", "hi", "ui", "cli", "client", "ix", "ic", "phi", "u"]}}
{"code": "import java.util.Scanner;\\nclass Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    int k = sc.nextInt();\\n    int[] a = new int[n];\\n    for(int i = 0; i < n ; i++) {\\n      a[i] = sc.nextInt();\\n    }\\n    int c = 0;\\n    for(int i =0 ; i < n ; i++) {\\n      if(k <= a[i]) {\\n        c++;\\n      }\\n    }\\n    System.out.println(c);\\n  }\\n}\\n", "target": "145", "substitutes": {"sc": ["ch", "sync", "sb", "cle", "asc", "mc", "osc", "anc", "cr", "Sc", "sel", "sci", "inc", "dec", "bc", "cc", "sys", "fc", "cont", "ng", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "exec", "nl", "gc", "cl", "scan", "ss", "pb", "nc", "system", "tc", "cs", "sq", "ck", "pc", "ctl", "isc", "desc", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["nb", "an", "en", "nn", "network", "ll", "o", "l", "np", "ns", "x", "un", "g", "nt", "nm", "no", "v", "ng", "on", "name", "j", "number", "sn", "length", "m", "nu", "nl", " N", "nc", "ln", "ne", "nan", "t", "na", "z", "cn", "num", "net", "len", "N", "p", "mn"], "k": ["ka", "kl", "ke", "kr", "kn", "w", "sk", "kan", "kid", "K", "b", "ko", "ks", "g", "ik", "ek", "r", "kar", "v", "kt", "kat", "ku", "ak", "j", "h", "kk", "q", "kw", "m", "kj", "mk", "ki", "km", "ck", "tk", "t", "dk", "p", "kh"], "a": ["an", "la", "ba", "ab", "da", "ea", "ai", "au", "aka", "aaa", "b", "area", "am", "A", "ia", "ma", "ta", "ao", "va", "alpha", "ac", "ae", "wa", "ata", "ga", "oa", "aa", "as", "att", "sta", "na", "apa", "array", "fa", "sa", "ca", "p"], "i": ["bi", "in", "multi", "si", "ti", "ai", "iter", "ip", "it", "set", "iu", "ie", "PI", "chain", "zi", "xi", "di", "iti", "pi", "qi", "ei", "ion", "mi", "v", "ini", "ity", "ci", "y", "sim", "err", "oi", "iso", "j", "io", "uri", "id", "I", "ind", "q", "ij", "iy", "init", "me", "ori", "ki", "\u0438", "batch", "ii", "gi", "info", "ims", "is", "li", "hi", "ui", "cli", "client", "ji", "ix", "fi", "im", "ic", "phi", "ri"], "c": ["e", "content", "w", "cm", "mc", "o", "l", "cd", "p", "cr", "conf", "ec", "out", "d", "r", "bc", "fc", "v", "C", "cont", "co", "cc", "cb", "f", "lc", "h", "cv", "rc", "ac", "m", "gc", "uc", "call", "nc", "tc", "cs", "cf", "con", "pc", "t", "dc", "z", "count", "ce", "ct", "ca", "cu", "unc", "u"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\twhile(true) {\\n\t\tint n;\\n\t\tn = sc.nextInt();\\n\t\tif(n==0) {\\n\t\t\tbreak;\\n\t\t}\\n\t\tdouble[] num;\\n\t\tdouble sum = 0;\\n\t\tnum = new double[n];\\n\t\tfor(int i = 0;i<n;i++) {\\n\t\t\tnum[i] = sc.nextInt();\\n\t\t\tsum += num[i];\\n\t\t}\\n\\n\t\tdouble ave = sum/n;\\n\t\tdouble sum_2 = 0;\\n\t\tfor(int i = 0;i<n;i++) {\\n\t\t\tsum_2 += (num[i]-ave)*(num[i]-ave);\\n\t\t}\\n\t\tdouble bunsan = sum_2/n;\\n\t\tdouble ans = Math.sqrt(bunsan);\\n\t\tSystem.out.printf(\"%f\\n\",ans);\\n\t}\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "203", "substitutes": {"sc": ["ch", "sync", "sb", "sw", "cle", "cam", "asc", "mc", "osc", "scrib", "anc", "cr", "Sc", "sel", "arc", "c", "inc", "bc", "cc", "sys", "fc", "co", "SC", "conv", "lc", "rc", "usc", "sch", "sec", "gc", "cl", "scan", "pb", "nc", "sq", "cs", "tc", "system", "ck", "pc", "ctl", "pl", "isc", "syn", "capt", "scl", "sh", "sv", "sp", "esc"], "n": ["an", "nb", "en", "nn", "names", "it", "s", "nor", "all", "ll", "none", "o", "l", "np", "k", "ns", "c", "x", "d", "un", "comm", "g", "r", "nm", "nt", "no", "nia", "v", "y", "ng", "name", "j", "ren", "number", "sn", "ni", "f", "q", "nu", "m", "nl", "nc", "ny", "ln", "nan", "ne", "t", "na", "z", "cn", "net", "len", "dn", "N", "gn", "p", "note", "mn"], "num": ["nb", "val", "copy", "add", "multi", "mat", "total", "img", "tmp", "cache", "um", "dim", "cal", "rem", "test", "cum", "np", "mont", "save", "om", "bin", "bo", "unit", "un", "note", "norm", "nm", "no", "NUM", "mean", "nut", "dat", "name", "ma", "number", "cu", "alph", "nom", "nu", "m", "mon", "index", "pn", "sam", "mu", "tu", "zero", "info", "con", "Num", "hex", "na", "one", "count", "net", "mem", "temp", "node", "p", "prim", "im", "nam"], "sum": ["add", "summary", " sums", "size", "si", "total", "vol", "set", "cache", "max", "um", "cal", "cum", " summed", "un", "med", "mess", "v", "mass", "mod", "sim", "fac", "ma", "sal", "sat", "ass", "Sum", "weight", "me", "ul", "index", "sam", "go", "so", "us", "ne", "se", "na", "su", "sa", "count", "mem", "umm", "mean", "average"], "i": ["ies", "bi", "multi", "list", "si", "ti", "ai", "json", "ip", "it", "set", "iu", "ie", "status", "source", "o", "PI", "zi", "xi", "di", "pi", "details", "qi", "ei", "this", "g", "ik", "mi", "point", "ity", "ini", "ci", "y", "err", "id", "oi", "sim", "j", "io", "uri", "I", "ind", "print", "q", "ij", "iy", "init", "me", "php", "ori", "ki", "\u0438", "ii", "gi", "info", "slice", " I", "is", "li", "ex", "hi", "ui", "client", "ji", "ger", "cli", "ix", "fi", "im", "ic", "phi", "ri"], "ave": ["ale", "ive", "av", "af", "aul", "ay", "ve", "aler", "ai", "rade", "au", "ain", "ee", "ade", "aka", "care", "aste", "sav", "afe", "save", "ice", "aver", "ue", "air", "ane", "have", "age", "ack", "agle", "ae", "aja", "slave", "are", "aw", "aved", "scale", "pa", "sa", "ca", "osa", "vae", "aves", "average", "al", "ake"], "sum_2": ["um_two", " sum_1", "um_2", "num_4", "sum_4", "sum_3", "num_3", "num_2", "sum_two", "num_02", "sum_1", " sum_4", "sum_02", "um_3", " sum_3"], "bunsan": ["bunstan", "bmunnan", "bsunstan", "nbunsan", "bmunSan", "nbmunsi", "bsoonsan", "bmunsan", "bmunsu", "boulnan", "bmunstan", "bsunsan", "bsuntan", "bunSan", "boonsan", "bmunsi", "nbunSan", "bsoontan", "boonstan", "bounsu", "nbmunSan", "boonnan", "boulsu", "boulsi", "boontan", "bunsi", "bsoonstan", "bsunnan", "nbunsu", "boulstan", "bunsu", "nbunsi", "boulsan", "boultan", "bsoonnan", "bounsi", "bounsan", "boulSan", "nbmunsan", "nbmunsu", "buntan", "bounSan", "bmuntan", "bunnan"], "ans": ["an", "uns", "ars", "anks", "ians", "ales", "rans", "zan", "ann", "ins", "outs", "aus", "anas", "nas", "ks", "nes", "vers", "ats", "anners", "anes", "ants", "ANS", "ados", "lan", "ums", "AN", "leans", "eds"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n       Scanner stdIn= new Scanner(System.in);\\n\\n        int x = stdIn.nextInt();\\n        int y = stdIn.nextInt();\\n        if(x<=y){\\n            System.out.println(\"unsafe\");\\n        }else{\\n            System.out.println(\"safe\");\\n        }\\n    }\\n}\\n", "target": "177", "substitutes": {"stdIn": ["randIN", "standardIns", "stdOut", "sysIN", "stOut", "stIns", "stdin", "STDIns", "stdIns", "procIns", "sysIn", "sysin", "STDin", "procin", "standardInt", "procIn", "sysOut", " stdIns", " stdInt", " stdIN", "standardOut", "stIn", "randOut", " stdin", " stdOut", "stInt", "randIn", "randin", "standardIn", "stdIN", "STDIn", "stdInt"], "x": ["dx", "mx", "px", "zx", " xx", "tx", "w", "xx", "xd", "ax", "xf", "l", "xi", "xt", "xc", "fx", "i", "xp", "ux", "v", "X", "ox", "xb", "a", "f", "wx", "xs", "yx", "inx", "rx", "index", "xy", "z", "ex", "n", "ix", "p", "lex"], "y": ["yi", "ies", "sy", "dy", "ye", "xx", "ey", "ady", "b", "Y", "gy", "i", "sky", "ys", "ly", "cy", "my", "sys", "ty", "j", "uy", "vy", "yt", "py", "iy", "yo", "oy", "idy", "ny", "story", "t", "xy", "z", "yy", "axy", "p", "fy", "wy"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.math.BigInteger;\\nimport java.util.Comparator;\\nimport java.util.StringTokenizer;\\n\\n/**\\n *\\n * @author dkcs\\n */\\nclass Main\\n{\\n    static class FastReader {\\n        \\n        BufferedReader br;\\n        StringTokenizer st;\\n        \\n        public FastReader() {\\n            br = new BufferedReader(new InputStreamReader(System.in));\\n        }\\n        \\n        String next() {\\n            while (st == null || !st.hasMoreElements()) {\\n                try {\\n                    st = new StringTokenizer(br.readLine());\\n                } catch (IOException e) {\\n                    e.printStackTrace();\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n        \\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n        \\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n        \\n        double nextDouble() {\\n            return Double.parseDouble(next());\\n        }\\n        \\n        String nextLine() {\\n            String str = \"\";\\n            try {\\n                str = br.readLine();\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            return str;\\n        }\\n    }\\n    \\n    static class Node {\\n        \\n        long pp;\\n        long a, b;\\n        \\n        Node(long x, long y) {\\n            a = x;\\n            b = y;\\n            pp = a * b;\\n        }\\n    }\\n    \\n    static class Comp implements Comparator<Node> {\\n        \\n        public int compare(Node o1, Node o2) {\\n            if (o1.pp > o2.pp) {\\n                return 1;\\n            } else {\\n                return -1;\\n            }\\n        }\\n    }\\n\\n    public static void main(String[] args) \\n    {\\n        FastReader sc = new FastReader();\\n        String s[]=sc.nextLine().split(\" \");\\n        BigInteger a=new BigInteger(s[0]);\\n        BigInteger b=new BigInteger(s[1]);\\n        BigInteger c=new BigInteger(s[2]);\\n        BigInteger d=new BigInteger(s[3]);\\n        BigInteger g=c.gcd(d);\\n        BigInteger lcm=(c.multiply(d)).divide(g);\\n        \\n        BigInteger ca=(a.subtract(BigInteger.ONE)).divide(c);\\n        BigInteger cb=b.divide(c);\\n        \\n        BigInteger da=(a.subtract(BigInteger.ONE)).divide(d);\\n        BigInteger db=b.divide(d);\\n        \\n        BigInteger la=(a.subtract(BigInteger.ONE)).divide(lcm);\\n        BigInteger lb=b.divide(lcm);\\n        \\n        BigInteger ans1=(cb.subtract(ca));\\n        BigInteger ans2=(db.subtract(da));\\n        BigInteger ans3=(lb.subtract(la));\\n        \\n        BigInteger ans=ans1.add(ans2);\\n        ans=ans.subtract(ans3);\\n        \\n        BigInteger t=b.subtract(a.subtract(BigInteger.ONE));\\n        ans=t.subtract(ans);\\n        System.out.println(ans);\\n\\n\\n        \\n        \\n        \\n        \\n        \\n    }\\n    \\n    \\n}\\n", "target": "9", "substitutes": {"br": ["ber", "bsp", "wr", "bl", "hr", "kr", "bb", "BR", "sb", "Br", "pt", "vr", "mr", "next", "fr", "tr", "buf", "dr", "browser", " bl", "bd", "bs", "cr", "jp", "rel", "gr", "r", "bh", "bc", "bf", "brace", " tr", "bt", "sp", "bridge", "sr", "rx", "lr", "shr", "bp", "bre", "rb", "pr", "ctr", "rs", "bro", "bn"], "st": ["ft", "std", "nd", "ste", "sy", "sts", "ost", "lt", "mt", "sw", "pt", "sb", "sm", "et", "sty", "l", "tr", "const", "step", "th", "stri", "cr", "rt", "ast", "ust", "nt", "ST", "sth", "bt", "start", "inst", "ut", "rest", "cl", "sl", "stable", "stack", "so", "se", "sta", "ist", "St", "stat", " superst", "sa", "ct", "sh", "p", "sv", "sp", "est"], "str": ["result", "cur", "e", "set", "msg", "next", "comment", "fr", "STR", "tr", "dr", "ns", "del", "stri", "cr", "char", "text", "gr", "r", "spr", "line", "j", "res", "print", "string", "Str", "ent", "sl", "stable", "shr", "txt", "pr", "n", "div", "ctr", "p", "enc", "sp", "arr"], "pp": ["cpp", "mp", "ap", "fp", "cp", "bb", "ip", "prep", "bps", "pe", "yp", "dep", "ppo", "ipp", "ping", "pi", "upp", "price", "xp", "jp", "push", "lp", "ptr", "ripp", "cc", "dp", "proc", "opp", "tp", "supp", "isp", "po", "PP", "ppa", "peak", "app", "ppe", "gp", "php", "arp", "bp", "amp", "ps", "pc", "pa", "pl", "pr", "pps", "p", "par", "sp", "pg", "ep"], "a": ["an", "aff", "ba", "ab", "af", "eas", "ea", "at", "ai", "e", " A", "au", "anta", "o", "ax", "l", "aaa", "aj", "i", "am", "ad", "A", "r", "ar", "ia", "ak", "ma", "ao", "va", "le", "ae", "ac", "m", "xa", "oa", "aa", "as", "apa", "pa", "sa", "n", "aq", "p", "u"], "b": ["nb", "bi", "an", "ba", "bl", "ab", "be", "bb", "ib", "fb", "e", "sb", "ub", "o", "eb", "l", "ob", "bs", "gb", "bo", "i", "r", "bc", "v", "bf", "bar", "j", "f", "h", "bis", "B", "rb", "n", "p", "u"], "x": ["in", "e", "w", "tx", "xx", "ax", "l", "xi", "xt", "xc", "i", "r", "v", "X", "ox", "ty", "xs", "q", "rx", "m", "xa", "z", "ex", "code", "n", "ix", "p", "ic"], "y": ["ay", "sy", "ch", "e", "w", "xx", "ey", "o", "l", "Y", "i", "ly", "cy", "r", "v", "ty", "j", "h", "vy", "py", "yt", "ry", "m", "oy", "yn", "ny", "xy", "z", "n", "yy", "p"], "o1": ["ano0", "ano2", "os1", "n81", "n0", "ao1", "ao9", "os9", " o81", "os0", "os81", " o0", "ao81", "e0", "e2", "n1", "o0", "e81", "e1", "ano81", "ano1", "ao0", "o81", "n9", "o9"], "o2": ["nb", "otwo", " o4", "oktwo", "O1", "ok2", "mo4", "mob", "ob", " ob", "O2", " otwo", "n1", "n4", "ok1", "Ob", "Otwo", "o4", "okb", "mo1", "n2", "mo2"], "sc": ["irc", "sync", "asc", "mc", "osc", "anc", "cr", "ec", "Sc", "bc", "cc", "sys", "fc", "SC", "lc", " Sc", "rc", "usc", "sch", "sec", "sr", "gc", "cl", "ss", "uc", "nc", "sq", "cs", "tc", "pc", "dc", "ct", "isc", "scl", "soc", "sv", "ic", "sp", "esc"], "s": ["ies", " ls", "ses", "ms", "parts", "S", "ws", "sts", "gets", "arms", "es", "als", "ns", "ins", "ags", "strings", "details", "tes", " parts", "ts", "js", "r", "v", "ats", "its", "styles", "h", "words", "xs", "els", "gs", "ls", "fs", "ers", "aws", "tags", "ss", "sq", "cs", "qs", "os", "bis", "ims", "as", "ps", "is", "n", "p", "sv", "rs", "hs", "ties", "ids"], "c": ["cp", "cur", "ch", "e", "cm", "o", "l", "cd", "p", "r", "cy", "bc", "cc", "co", "C", "ci", "fc", "f", "lc", "rc", "ac", "m", "cs", "cf", "con", "dc", "n", "ct", "cu", "col", "u"], "d": ["des", "dt", "e", "D", "w", "ds", "red", "o", "l", "dr", "di", "cd", "bd", "dd", "deb", "dra", "i", "ad", "r", "j", "h", "f", "df", "m", "dc", "z", "dad", "n", "p", "dec", "u"], "g": ["e", "gu", "mc", "l", "gb", "i", "ig", "r", "v", "cc", "mg", "gg", "j", "h", "f", "G", "q", "gp", "ac", "m", "gc", "go", "gi", "ga", "z", "gm", "n", "p", "ge", "u"], "lcm": ["Lmc", "rmc", "Lca", "Lcm", "Lcp", " lmc", "lmc", "rca", " lcp", "rcp", " lca", "rcm", "lcp", "lca"], "ca": ["abc", "cp", "ka", "ab", "cca", "ea", "ai", "ax", "aaa", "ada", "arc", "am", "Ca", "CA", "ia", "ma", "ta", "ac", "ae", "ata", "ua", "cf", "aa", "pa", "fa", "ica", "ce"], "cb": ["nb", "cp", "ba", "abb", "ab", "bb", "BF", "zb", "wb", "eb", "cd", "bd", "gb", "deb", "cr", "bc", "cc", "bf", "fc", "bt", "xb", "lc", "cv", "cf", "bp", "rb", "bm"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n    public static void main(String[] args){\\n        Main2 cc = new Main2();\\n        cc.yesNo();\\n    }\\n}\\n\\nclass Main2{\\n    public void yesNo(){\\n        Scanner scan = new Scanner(System.in);\\n        int[] abc = new int[3];\\n        for(int i=0; i < 3; i++){\\n            abc[i] = scan.nextInt();\\n        }\\n        if(abc[0] < abc[1] && abc[1] < abc[2]){\\n            System.out.println(\"Yes\");\\n        }\\n        else{\\n            System.out.println(\"No\");\\n        }\\n    }\\n}\\n\\n", "target": "168", "substitutes": {"cc": ["cpp", "cp", "cca", "bb", " mc", "vc", "jack", "cle", "cm", "mc", "func", " CC", "AC", "ec", "xc", "ucc", "c", "cy", "fc", " gcc", "co", "BC", "cong", "lc", "cv", "CC", "ac", "gc", "cl", "uc", "cci", "ck", "nc", "tc", "cs", "cf", "craft", "pc", "acc", "cn", "ca", "ct", "cu", "ic"], "scan": ["an", "scroll", "in", "query", " Scan", " scanner", "ch", "sync", "pass", "check", "cat", "read", "connect", "ann", "run", "bin", "out", "seek", "c", "row", "sc", "get", "parse", "sin", "ner", "skip", "r", "find", "sys", "can", "reach", "sr", "gate", "san", "system", "con", "ser", "scale", "acc", "stat", "n", "sv", "Scan", "sp"], "abc": ["acs", "Ec", "toc", "abb", "ab", "cca", "eas", "fb", "ib", "au", "cache", "asc", "erb", "ais", "xff", "obs", "aka", "lab", "lib", "aaa", "api", "buf", "aux", "anc", "ob", "ec", "conf", "arc", "xc", "auc", "ops", "exc", "lam", "abin", "fc", "ox", "cb", "abi", "circ", "alph", "erc", "ABC", "ac", "roc", "alpha", "cox", "abs", "pb", "oc", "frac", "etc", "amp", "rox", "abet", "acc", "apa", "hz", "dc", "rb", "chest", "unc", "arr"], "i": ["bi", "in", "multi", "ms", "si", "ti", "iter", "e", "it", "ip", "ai", "gu", "iu", "chain", "xi", "k", "di", "pi", "qi", "x", "c", "my", "mi", "v", "ini", "ci", "y", "id", "sim", "j", "io", "I", "ind", "print", "q", "ij", "init", "m", "batch", "gi", "ii", "us", "used", "t", "is", "li", "ex", "hi", "ui", "cli", "n", "client", "ix", "im", "ic", "phi", "u", "fire"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.InputStreamReader;\\nimport java.io.OutputStream;\\nimport java.io.PrintWriter;\\nimport java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.Collections;\\nimport java.util.Comparator;\\nimport java.util.List;\\nimport java.util.Map;\\nimport java.util.StringTokenizer;\\nimport java.util.TreeSet;\\n\\nimport javax.swing.*;\\n\\nimport static java.util.Arrays.binarySearch;\\nimport static java.util.Arrays.copyOfRange;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws Exception {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n\\n        InputReader in = new InputReader(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n\\n        Task solver = new Task();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n}\\n\\nclass Task {\\n\\n    private static int mod = 1000000007;\\n\\n\\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\\n        int n = in.nextInt();\\n        String s = in.next();\\n        for (int i = 0; i < s.length(); i++) {\\n            out.print((char)((s.charAt(i) - 'A' + n) % 26 + 'A'));\\n        }\\n        out.println();\\n    }\\n\\n\\n}\\n\\nclass InputReader {\\n\\n    private final BufferedReader reader;\\n    private StringTokenizer tokenizer;\\n\\n    public InputReader(InputStream stream) {\\n        reader = new BufferedReader(new InputStreamReader(stream));\\n        tokenizer = null;\\n    }\\n\\n    public String nextLine() {\\n        try {\\n            return reader.readLine();\\n        } catch (IOException e) {\\n            throw new RuntimeException(e);\\n        }\\n    }\\n\\n    public String next() {\\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n            tokenizer = new StringTokenizer(nextLine());\\n        }\\n        return tokenizer.nextToken();\\n    }\\n\\n    public int nextInt() {\\n        return Integer.parseInt(next());\\n    }\\n\\n    public long nextLong() {\\n        return Long.parseLong(next());\\n    }\\n\\n    public double nextDouble() {\\n        return Double.parseDouble(next());\\n    }\\n\\n}\\n", "target": "13", "substitutes": {"inputStream": ["sourceSocket", "sourceSteam", "sourceStream", " inputSteam", "currentSteam", "currentSocket", "inputFile", "inputSteam", "InputFile", " inputstream", "sourceFile", "inputstream", "outputSocket", "currentstream", "InputSteam", "currentStream", "inputSocket", " inputSocket", "outputstream", "outputSteam", " inputFile", "InputStream", "InputSocket"], "outputStream": ["inputForm", "OutputForm", "outForm", "inputSteam", "inputPath", "OutputStream", "OutputPath", "outSteam", " outputPath", "inputstream", "OutputSteam", "Outputstream", "outStream", "outputPath", " outputSteam", " outputForm", "outstream", "outputstream", "outputForm", "outputSteam"], "in": ["old", "en", "add", "In", "iter", "null", "it", "check", "ai", "local", "din", "file", "ro", "source", "from", "rin", "mm", "run", "l", "ins", "rt", "conf", "context", "bin", "el", "c", "form", "doc", "this", "str", "inc", "sin", "r", "mi", "ini", "err", "current", "name", "id", "on", "io", "h", "ind", "al", "ac", "IN", "init", "m", "log", "info", "con", "gin", "isin", "is", "input", "inn", "inf", "inner", "er", "inside", "ic", "cin", "ri"], "out": ["report", "outer", "list", "obj", "OU", "at", "ch", "null", "it", "check", "cache", "up", "w", "aos", "pool", "all", "o", "group", "Out", "table", "user", "flush", "l", "sum", "rt", "c", "gr", "this", "str", "or", "nt", "end", "v", "co", "sys", "screen", "err", "name", "io", "res", "conv", "print", "can", "log", "gc", "write", "OUT", "info", "output", "os", "ou", "con", "t", "to", "writer", "full", "ex", "net", "txt", "client", "inner", "p", "outs"], "solver": ["Solver", " solution", "rsolver", "solution", "psolver", "psasser", "resolution", " solve", "rsolution", " sorter", "Solve", "solve", "psolve", "Solution", "sorter", " sector", "sector", " sasser", "rsector", "rsorter", "sasser", "resector", "Sasser", "psolution", "resolver", "resorter"], "mod": ["fun", "mult", "max", " Mod", "ver", "tr", "mode", "step", "const", " MOD", " maj", "Mod", "ref", "fac", "min", "MOD", "m", "rot", "scale", "base", "rand", " mult", "inv", "serial", "dec"], "testNumber": [" trialNumber", " attemptnumber", " attemptNo", "testnumber", " trialType", "testType", " testType", " attemptType", "testNo", " attemptNumber", " testNo", " trialnumber", " testnumber", " trialNo"], "n": ["nb", "an", "nd", "nn", "nw", "nor", "w", "o", "l", "np", "ns", "pi", "x", "c", "d", "nt", "nm", "y", "ng", "j", "number", "sn", "ni", "m", "nu", "nl", "ln", "nan", "ne", "t", "na", "z", "cn", "num", "len", "node", "N", "p", "mn"], "s": ["ms", "S", "ws", "sts", "sb", "sw", "ds", "source", "es", "l", "ns", "ins", "strings", "bs", "p", "ts", "js", "str", "g", "r", "ats", "its", "h", "bits", "gs", "string", "ls", "fs", "ss", "sl", "sq", "cs", "qs", "os", "less", "ims", "t", "ps", "is", "sql", "ings", "sv", "rs", "hs", "gets"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "ip", "it", "gu", "iu", "o", "chain", "xi", "di", "pi", "qi", "x", "c", "my", "mi", "point", "ini", "ci", "y", "id", "j", "a", "I", "q", "me", "init", "m", "ami", "ki", "\u0438", "ogi", "gi", "ii", "us", "info", "t", "is", "li", "ex", "hi", "ui", "cli", "ji", "ix", "ic", "phi", "u"], "reader": ["Reader", "field", "iter", " parser", "read", "linger", "builder", "file", "ro", "driver", "dr", "keeper", "row", "book", "worker", "r", "iterator", "ner", "oder", "proc", "rl", "handler", "resource", "finder", "liner", "parser", "runner", "rer", "rc", " viewer", "rx", " trainer", "buffer", " subscriber", "loader", "former", "wrapper", "writer", "rr", "data", "input", "header", "redo", "inner", "er", "rar", " waiter", " ruler", "creator"], "tokenizer": [" tokenifer", "tokeniter", "Tokenator", "tokenisher", "okenner", "Tokener", "initializer", "okenize", "normalzer", "wordisher", "tagifer", "wordner", "okenizer", " tokenifier", "okenizable", " tokenize", " tokenizable", " tokenzer", " tokener", "Tokenner", " tokenization", "tagzer", "normalifier", "tokenger", " tokenator", "Tokenization", "wordizer", "optimization", "tokenifier", "wordization", "initialization", "Tokenifier", "tokenize", "optimizer", "initialzer", "Tokenger", " tokenger", "Tokenifer", "tokenizable", "normalizer", "Tokeniter", "Tokenizer", "tokenzer", "okenisher", " tokeniter", "Tokenizable", "Tokenzer", "tokenator", "optimner", "tagizer", " tokenner", "normalner", "okeniter", "Tokenize", "initialator", "okenization", "tokenization", "optimisher", "tokener", "tokenner", "tagger", "okener", "tokenifer"], "stream": ["loop", "console", "content", "port", "zip", "file", "test", "pool", "phrase", "source", "driver", "chain", "ream", "channel", "row", "form", "context", "this", "window", "iterator", "type", "peer", "secure", "view", "handle", "buffer", "wrapper", "stack", "down", "output", "path", "data", "pipe", "input", "message", "client", "sample", "Stream", "inner", "history"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws Exception {\\n\\n//    \tFile file = new File(\"test.txt\");\\n//    \tScanner sc = new Scanner(file);\\n    \tScanner sc = new Scanner(System.in);\\n    \tString N = sc.next();\\n    \tsc.close();\\n    \tSystem.out.println(N.contains(\"7\")?\"Yes\":\"No\");\\n    }\\n}", "target": "99", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n\\n        int A = scanner.nextInt();\\n        int B = scanner.nextInt();\\n\\n        for (int i = 1 ; i <= 1000 ; i++) {\\n            int eight = (int) (i * 0.08);\\n            int ten = (int) (i * 0.1);\\n            if (eight == A && ten == B) {\\n                System.out.println(i);\\n                return;\\n            }\\n        }\\n\\n        System.out.println(-1);\\n    }\\n}\\n", "target": "121", "substitutes": {"scanner": ["canner", "searchning", "Scanter", "Scanning", "caner", "scanter", "canener", " scanener", "searchener", "searchter", "scanning", "Scaner", "searchner", "Scanner", "canter", "scanener", " scaner", "Scanener", "scaner", "canning", " scanter"], "A": ["AY", "AB", "S", "Certainly", "Al", "D", "This", "AF", "E", "AC", "Some", "Sure", "H", "As", "P", "CA", "AV", "ACC", "ACT", "AE", "And", "Alpha", "LA", "ONE", "a", "AA", "What", "Eight", "There", "That", "AL", "Ok", "The", "Alice", "AP", "L", "AU", "Given", "AST", "Ax", "An"], "B": ["AB", "bb", "BR", "BB", "J", "BF", "D", "RB", "BA", "T", "CB", "IB", "b", "VB", "Y", "Bern", "TB", "V", "BC", "WB", "NB", "I", "G", "BE", "BI", "OB", "Bar", "BS", "Seven", "EB", "LB", "BL", "Reb", "Ben", "L", "JB", "Ber", "GB", "N", "DB"], "i": ["yi", "bi", "multi", "si", "ti", "ai", "iter", "ip", "it", "hello", "json", "integer", "iu", "series", "l", "zi", "xi", "di", "pi", "qi", "x", "ei", "iri", "ik", "my", "mi", "v", "ini", "ci", "id", "sim", "oi", "j", "a", "iq", "I", "ij", "init", "php", "m", "index", "me", "ki", "ogi", "batch", "ii", "gi", "us", "info", "gravity", "life", "t", "is", "li", "hi", "ui", "ji", "n", "cli", "ix", "im", "ic", "phi", "u", "ri"], "eight": ["think", "eng", "gage", "cue", "five", "integer", "invest", "ifty", "fort", "alone", "east", "eeks", "family", "woman", "four", "three", "efficient", "often", "teen", "rice", "seven", "power", "Eight", "nine", "arde", "zero", "ighth", "six", "ality", "sense", "two", "ffe", "one", "few", "almost", " Eight", "igree"], "ten": ["nir", "ven", "tie", "literally", "five", "sen", "taker", "forth", "fort", "whatever", "numbered", "mont", "tin", "approximately", "often", "atan", "sequ", "town", "teen", "umen", "alph", "seven", "pour", "father", "rent", "mon", "Ten", "flake", "knife", "von", "ffe", "worthy", "bert", "tan", "billion", "ter", "ton"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args)\\n\t{\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint count = scan.nextInt();\\n\t\tint min = 1000000;\\n\t\tint max = -1000000;\\n\t\tlong sum = 0;\\n\t\tint num = 0;\\n\t\tfor(int i = 0;i < count;i++)\\n\t\t{\\n\t\t\tnum = scan.nextInt();\\n\t\t\tsum = sum + num;\\n\t\t\tif(num < min)\\n\t\t\t{\\n\t\t\t\tmin = num;\\n\t\t\t}\\n\t\t\tif(num > max)\\n\t\t\t{\\n\t\t\t\tmax = num;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(min + \" \" + max + \" \" + sum);\\n\t}\\n}", "target": "21", "substitutes": {"scan": ["an", "scroll", "in", "query", " Scan", "report", "ch", "nn", "sync", "check", "set", "read", "send", "connect", "re", "ann", "save", "bin", "out", "seek", "row", "sc", "get", "g", "sin", "ner", "r", "parse", "find", "sys", "proc", "black", "skip", "search", "can", "reach", "gc", "gate", "san", "system", "sort", "se", "ser", "na", "util", "n", "store", "sur", "auto", "sql", "sv", "Scan", " scanner"], "count": ["nb", "size", "list", "ch", "total", "set", "cache", "all", "first", "counter", "const", "found", "area", "conf", "c", "ctx", "amount", "find", "nt", "cont", "span", "current", "id", "top", "length", "ind", "index", "cond", "gc", "call", "Count", "ount", "base", "code", "len", "n", "ct", "ctr"], "min": ["mp", "floor", "in", "val", "part", "lt", "partial", "local", "mid", "low", "diff", "mm", "master", "first", "art", "l", "amin", "cmp", "lower", "middle", "sub", "rel", "left", "lo", "sin", "my", "mi", "lock", "mod", "bot", "start", "default", "range", "minute", "ma", "pos", "mint", "admin", "ind", "mel", "st", "init", "m", "index", "pre", "mon", "mins", "minimum", "sort", "MIN", "begin", "Min", "rand", "pl", "emin", "mean", "small", "mit", "mn"], "max": ["limit", "add", "mx", "size", "cur", "major", "total", "last", "right", "up", "MAX", "all", "fr", "ax", "pad", "best", "box", "k", "prime", "out", "x", "med", "window", "act", "end", "parent", "v", "co", "high", "grand", "mod", "range", "default", "ma", "h", "gt", "rank", "can", "m", "recent", "rest", "Max", "view", "huge", "upper", "to", "na", "full", "wall", "rand", "scale", "net", "inv", "n", "grow", "maximum", "est"], "sum": ["result", "add", "summary", "size", "si", "total", "vol", "cache", "tmp", "um", " SUM", "msg", "cal", "all", "cum", "SU", "cmp", "doc", "out", "unit", "med", "mess", "norm", "score", "mod", "sim", "alpha", "sat", "hash", "Sum", "index", "sam", "mu", "tu", "sort", "zero", "loss", "hum", "hist", "na", "acc", "scale", "util", "sa", "su", "n", "mem", "temp", "div", "mean", "average"], "num": ["nb", "en", "mom", "mult", "multi", "total", "nn", "snap", "check", "set", "um", "ord", "msg", "cal", "gen", "orig", "rem", "block", "np", "tim", "cmp", "th", "bo", "nam", "unit", "comm", "str", "draw", "nm", "no", "nt", "uu", "NUM", "proc", "sim", "conv", "number", "alph", "nom", "nu", "index", "mon", "pn", "sam", "dev", "ne", "Num", "t", "na", "net", "n", "temp", "node", "div", "mem", "cu", "val", "im", "note", "mn"], "i": ["bi", "multi", "ms", "si", "ti", "ai", "mill", "ip", "it", "set", "iu", "ie", "o", "xi", "di", "pi", "qi", "x", "g", "mi", "ini", "ci", "y", "id", "sim", "j", "io", "I", "ind", "q", "init", "me", "m", "ki", "ii", "gi", "info", "us", "is", "li", "z", " ii", "ui", "n", "sql", "ix", "im", "ic", " j", "phi", "u"]}}
