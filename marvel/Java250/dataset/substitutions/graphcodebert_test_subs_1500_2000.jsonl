{"code": "import java.io.*;\\nimport java.util.*;\\n\\nclass Main {\\n    static final String YES = \"Yes\";\\n    static final String NO = \"No\";\\n\\n    // Generated by 1.1.5 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\\n    public static void main(String[] args) throws Exception {\\n        final Scanner sc = new Scanner(System.in);\\n        long N;\\n        N = sc.nextLong();\\n        long K;\\n        K = sc.nextLong();\\n        long Q;\\n        Q = sc.nextLong();\\n        long[] A = new long[(int)(Q)];\\n        for(int i = 0 ; i < Q ; i++){\\n                A[i] = sc.nextLong();\\n        }\\n        solve(N, K, Q, A);\\n    }\\n\\n    static void solve(long N, long K, long Q, long[] A){\\n        long[] AnswerNum = new long[(int)(N)];\\n        Arrays.fill(AnswerNum, 0);\\n\\n        for (long ai: A) {\\n            AnswerNum[(int)(ai - 1)]++;\\n        }\\n\\n        for (long ANi: AnswerNum) {\\n            if(ANi > Q - K) System.out.println(YES);\\n            else System.out.println(NO);\\n        }\\n    }\\n}\\n", "target": "102", "substitutes": {"YES": ["XX", "Yes", "HI", "Y", "SU", "POS", "BUS", "VER", "US", "ONE", "MAL", "UP", "NUM", "OH", "OK", "ANY", "yes", "USER", "WH", "SO", "ON", "WARN", "BY", "BS", "ALL", "NPR", "NOW"], "NO": ["MOD", "VO", "RO", "POS", "LO", "no", "MO", "DO", "ONE", "MAL", "UN", "NR", "NUM", "OH", "NL", "ERROR", "OK", "ANY", "GO", "NA", "SO", "ME", "BY", "NOR", "No", "NOT", "NE"]}}
{"code": "\\nimport java.util.Scanner;\\n\\n class Main {\\n    public static void main(String[] args) {\\n        Scanner in = new Scanner(System.in);\\n        int n= in.nextInt();\\n        int m=in.nextInt();\\n        int min=1, max=n;\\n        boolean flag=false;\\n        for(int i=0;i<m;i++){\\n            int lb=in.nextInt();\\n            int ub=in.nextInt();\\n\\n            if(lb>=min)\\n                min=lb;\\n            if(ub<=max)\\n                max=ub;\\n\\n            if(ub<min || lb >max){\\n                flag=true;\\n            }\\n\\n        }\\n        if(flag)\\n            System.out.println(0);\\n        else {\\n            int ans = max - min + 1;\\n            System.out.println(ans);\\n        }\\n    }\\n}\\n", "target": "124", "substitutes": {"in": ["or", "din", "io", "serv", "IN", "ic", "inn", "inner", "from", "mm", "bin", "all", "ai", "is", "out", "ind", "ins", "sum", "add", "std", "r", "on", "rin", "err", "check", "source", "thin", "isin", "by", "init", "conf", "en", "info", "con", "q", " din", "gin", "doc", "cin", "In", "inc", "readable", "it", "world", "input", "stream", "file", "ini", "rt", "cgi", "as", "user", "id", "inf", "ex", "vin", "reader", "log", "ln", "line", "get", "scan"], "n": ["nm", "t", "mn", "k", "out", "na", "x", "o", "r", "on", "c", "an", "h", "nn", "name", "v", "en", "s", "w", "N", "j", "l", "a", "nu", "np", "cn", "p", "sn", "b", "ns", "nt", "num", "z", "d", "g"], "m": ["mt", "om", "nm", "f", "t", "bm", "mm", "M", "mn", "ma", "x", "o", "ms", "r", "mi", "c", "dm", "h", "v", "man", "gm", "N", "j", "l", "mc", "mx", "p", "tm", "b", "cm", "mean", "d", "km"], "min": ["sort", "art", "first", "mit", "range", "before", "from", "dim", "left", "sol", "member", "mn", "ma", "ind", "minus", "amin", "Min", "len", "mid", "thin", "lo", "init", "MIN", "only", "man", "small", "lower", "local", "master", "pl", "low", "l", "mini", "sam", "mel", "admin", "mod", "mask", "start", "rand", "sin", "lt", "p", "minimum", "pre", "mean", "mins", "remove", "hide", "minute", "temp", "begin", "un", "act", "val", "rain", "default", "loc"], "max": ["MAX", "length", "history", "upper", "huge", "ax", "range", "view", "ro", "Max", "ref", "right", "k", "last", "out", "now", "sum", "x", "ms", "size", "dev", "on", "up", "full", "maximum", "cur", "med", "prime", "conf", "con", "wh", "high", "mod", "rest", "co", "current", "rand", "recent", "vol", "res", "mx", "world", "can", "gt", "total", "ex", "mad", "to", "top", "end", "ext", "act", "ma"], "i": ["zi", "I", "hi", "ci", "ie", "sql", "si", "io", "ic", "sim", "u", "ai", "xi", "ei", "is", "ind", "x", "mi", "cli", "index", "im", "y", "v", "init", "ix", "gi", "ui", "ki", "j", "qi", "pi", "multi", "it", "ii", "gu", "ini", "di", "id", "li", " ii", "ti", "bi", "iu", "phi", "ip"], "lb": ["bp", "pb", "lv", "bb", "lu", "ln", "lf", "ll", "bl", "bf", "sub", "rob", "fb", "lin", "eb", "ib", "zb", "kb", "bs", "lib", "ob", "lr", "pl", "lc", "cb", "bt", "lab", "l", "dl", "rb", "lt", "il", "gb", "bal", "b", "lbs", "la", "db", "li", "rl", "ld", "LB", "lp", "sb"], "ub": ["UB", "uf", "pb", "ug", "bb", "lu", "u", "ul", "pub", "du", "deb", "sub", "ab", "uc", "ur", "uv", "up", "rob", "bur", "eb", "ib", "zb", "umb", "ut", "bs", "tu", "ob", "ui", "pl", "cb", "ubs", "ud", "ue", "rb", "tt", "gb", "il", "b", "hub", "uu", "um", "db", "urb", "ube", "sb", "rub"], "flag": ["error", "mail", "bool", "level", "status", "join", "lv", "enable", "tag", "sync", "hold", "save", "debug", "cond", "kill", "sp", "Flag", "check", "flags", "limit", "true", "lag", "lock", "mask", "bug", "force", "store", "start", "neutral", "compl", "ground", "print", "cmd", "offset", "group", "fail", "cloud", "field", "layout", "leaf", "ld", "wait", "set", "list", "line", "split", "sign"], "ans": ["nets", "ANS", "orts", "span", "offs", "lines", "ats", "ums", "eps", "aps", "eds", "ann", "ints", "ants", "ins", "names", "outs", "als", "ms", "ps", "aus", "ks", "an", "lan", "ands", "amps", "rans", "lets", " spans", "olds", "cons", "ars", "ations", "ids", "ns", "ls", "as", "ds", "vals", "cs", "pan", "actions", "ors", "xs"]}}
{"code": "import java.util.*;\\npublic class Main{\\n\\n\tpublic static void main(String[] args) {\\n\t\tint i1, i2, i3;\\n\t\tScanner sc = new Scanner(System.in);\\n\t\ti1 = sc.nextInt();\\n\t\ti2 = sc.nextInt();\\n\t\ti3 = sc.nextInt();\\n\t\tif(i1 < i2 && i2 < i3)\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\telse\\n\t\t\tSystem.out.println(\"No\");\\n\t}\\n}", "target": "168", "substitutes": {"i1": [" i00", "pi00", "pi1", "zi101", "is001", "zi2", "int1", "pi001", " i0", "pi101", " i001", "i0", "i101", "i61", "pi2", "is2", "zi61", "i001", "i00", " i101", " i61", "pi61", "int2", "int00", "zi1", "is0", "is1", "pi0"], "i2": ["s2", "i82", "iioe", "s1", "ilet", "pi1", "li2", "i102", "qi2", " ilet", "ioder", "ioe", "ii2", "pioder", "iitwo", "ii02", "qi3", "pi3", "uilet", "si2", "pi02", "li102", "pi2", "ui82", " i82", "pioe", "si82", "itwo", "i02", "li02", " itwo", "li3", "qi1", "qioder", " i02", "soder", " ioe", "ui2", "silet", "pi102", "s3", "pitwo", " i102"], "i3": [" i33", " i7", "i53", "gi883", "pi1", "intder", "pithree", "li883", "iiii", "iThree", " ider", "lider", "gi3", " i883", "pi3", "irithree", "intThree", "i883", " iThree", "ider", "int3", "gi53", "liThree", "li53", "piiii", "hiiii", "hithree", "li3", "i33", "hi1", "li7", "int33", "iri1", " i53", "i7", "hi3", "iriiii", "gi7", "li33", "ithree", "iri3"], "sc": ["SC", "osc", "pc", "sys", "ctx", "usc", "sv", "nc", "bc", "asc", "sch", "gc", "sq", "sub", "scope", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "ko", "lc", " Sc", "desc", "ctrl", "mc", "inc", "acc", "scl", "cr", "ch", "system", "tch", "ck", "st", "ss", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tScanner sc=new Scanner(System.in);\\n\t\t\\n\t\tint n=sc.nextInt();\\n\t\t\\n\t\t\\n\t\tint count=0;\\n\t\tfor (int i=1;i<=n;i++) {\\n\t\t\tint p= sc.nextInt();\\n \\n\t\t\tif (p!=i) {\\n\t\t\t\tcount++;\\n\t\t\t}\\n \\n\t\t}\\n\t\tif(count<=2) {\\n\t\t\tSystem.out.println(\"YES\");\\n\t\t}else {\\n\t\t\tSystem.out.println(\"NO\");\\n\t\t}\\n\\n\t}\\n\\n}\\n", "target": "82", "substitutes": {}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n    public static void main(final String[] args) {\\n        final FastReader s=new FastReader();\\n        int n = s.nextInt();\\n        int last = 0;\\n        long sum = 0;\\n        while (n-- > 0)\\n        {\\n            int x = s.nextInt();\\n            if(x<last) {\\n                sum+= last-x;\\n            }\\n            last = Math.max(last, x);\\n        }\\n        System.out.println(sum);\\n    }\\n\\n    static class FastReader\\n    {\\n        BufferedReader br;\\n        StringTokenizer st;\\n        public FastReader() { br = new BufferedReader(new InputStreamReader(System.in)); }\\n        String next() {\\n            while (st == null || !st.hasMoreElements()) {\\n                try { st = new StringTokenizer(br.readLine()); }\\n                catch (final IOException  e) { e.printStackTrace(); }\\n            }\\n            return st.nextToken();\\n        }\\n        int nextInt() { return Integer.parseInt(next()); }\\n        long nextLong() { return Long.parseLong(next()); }\\n        double nextDouble() { return Double.parseDouble(next()); }\\n        String nextLine() {\\n            String str = \"\";\\n            try { str = br.readLine(); }\\n            catch (final IOException e) { e.printStackTrace(); }\\n            return str;\\n        }\\n    }\\n}", "target": "202", "substitutes": {"s": ["sm", " rs", "opens", "qs", "fs", "utils", "sys", "sl", "ats", "t", "eps", "js", "sv", "eds", "sts", "se", "gets", "aws", "sol", "is", "abs", "sq", "ses", "ins", "ms", "S", "ps", "ys", "sb", "less", "g", "h", "os", "ws", "sam", "gs", "fps", "ns", "rs", "http", "ls", "ers", "ds", "as", "ims", "ss", "xs", "ts"], "n": ["nb", "f", "t", "ren", "nc", "net", "ll", "mn", "nan", "i", "na", "names", "ng", "on", "c", "nn", "nor", "y", "v", "gn", "remote", "non", "N", "j", "l", "np", "nl", "cn", "norm", "sn", "ns", "nt", "ni", "number", "num", "nr", "un", "z", "d", "m", "ne"], "last": ["stable", "est", "length", "best", "first", "show", "t", "flush", "latest", "largest", "left", "max", "base", "out", "count", "no", "size", "Last", "since", "len", "tail", "index", "ast", "v", "las", "highest", "l", "prev", "next", "start", "current", "recent", "stop", "nl", "old", "most", "le", "nd", "total", "nt", "active", "top", "end", "bottom"], "sum": ["zero", "cos", "hist", " SUM", "mass", "cost", "si", "sim", "ums", "fac", "max", "count", "out", "union", " summed", "add", "size", "weight", "cum", "med", "index", "cal", "average", "summary", "sam", "hash", "carry", "Sum", "su", "mem", "vol", "acc", "diff", "ass", "mean", "total", "result", "um", " sums", "num", "star", "mod", "ss"], "x": ["fx", "px", "xp", "hex", "ct", "ax", "xx", "xt", "pe", " xx", "xi", "lex", "exp", "xf", "xa", "xxxx", "dx", "ox", "i", "index", "xc", "y", "v", "ix", "pl", "xe", "l", "wx", "rx", "nex", "mx", "xy", "tx", "ex", "X", "inx", "ext", "z", "xxx", "xs"], "br": ["bp", "bre", "bm", "bh", "bridge", "ger", "er", "dr", "bro", "bl", "ctr", "gr", "r", "sp", "tr", "shr", "bs", "bsp", "lr", "bt", "mr", "Br", "pr", "next", "rb", "jp", "itter", "cr", "p", "kr", "b", "BR", "browser", "rel", "hr", "fr", "buf", "ber", "wr", "vr"], "st": ["stable", "sm", "mt", "ist", "sw", "est", "ft", "sty", "const", "ct", "sl", "t", "th", "sts", "sv", "sh", "bl", "fr", "stat", "inst", "ste", "tmp", "std", "z", "r", "sp", "ust", "tr", "ut", "lo", "pt", "St", "bt", "l", "rest", "start", "stan", "p", "sn", "ST", "nd", "nt", "stack", "rt", "be", "set", "et", "ss", "se", "ost"], "str": ["stable", "ent", "t", "div", "raw", "exp", "dr", "inst", "data", "ctr", "gr", "msg", "r", "sp", "cont", "tr", "cur", "arr", "shr", "v", "del", "Str", "output", "STR", "j", "next", "string", "char", "res", "text", "ocr", "print", "cr", "p", "txt", "ret", "pse", "result", "fr", "list", "g"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\npublic class Main {\\n    static class Scan {\\n        private byte[] buf=new byte[1024];\\n        private int index;\\n        private InputStream in;\\n        private int total;\\n        public Scan()\\n        {\\n            in=System.in;\\n        }\\n        public int scan()throws IOException\\n        {\\n            if(total<0)\\n            throw new InputMismatchException();\\n            if(index>=total)\\n            {\\n                index=0;\\n                total=in.read(buf);\\n                if(total<=0)\\n                return -1;\\n            }\\n            return buf[index++];\\n        }\\n        public int scanInt()throws IOException\\n        {\\n            int integer=0;\\n            int n=scan();\\n            while(isWhiteSpace(n))\\n            n=scan();\\n            int neg=1;\\n            if(n=='-')\\n            {\\n                neg=-1;\\n                n=scan();\\n            }\\n            while(!isWhiteSpace(n))\\n            {\\n                if(n>='0'&&n<='9')\\n                {\\n                    integer*=10;\\n                    integer+=n-'0';\\n                    n=scan();\\n                }\\n                else throw new InputMismatchException();\\n            }\\n            return neg*integer;\\n        }\\n        public double scanDouble()throws IOException\\n        {\\n            double doub=0;\\n            int n=scan();\\n            while(isWhiteSpace(n))\\n            n=scan();\\n            int neg=1;\\n            if(n=='-')\\n            {\\n                neg=-1;\\n                n=scan();\\n            }\\n            while(!isWhiteSpace(n)&&n!='.')\\n            {\\n                if(n>='0'&&n<='9')\\n                {\\n                    doub*=10;\\n                    doub+=n-'0';\\n                    n=scan();\\n                }\\n                else throw new InputMismatchException();\\n            }\\n            if(n=='.')\\n            {\\n                n=scan();\\n                double temp=1;\\n                while(!isWhiteSpace(n))\\n                {\\n                    if(n>='0'&&n<='9')\\n                    {\\n                        temp/=10;\\n                        doub+=(n-'0')*temp;\\n                        n=scan();\\n                    }\\n                    else throw new InputMismatchException();\\n                }\\n            }\\n            return doub*neg;\\n        }\\n        public String scanString()throws IOException\\n        {\\n            StringBuilder sb=new StringBuilder();\\n            int n=scan();\\n            while(isWhiteSpace(n))\\n            n=scan();\\n            while(!isWhiteSpace(n))\\n            {\\n                sb.append((char)n);\\n                n=scan();\\n            }\\n            return sb.toString();\\n        }\\n        private boolean isWhiteSpace(int n)\\n        {\\n            if(n==' '||n=='\\n'||n=='\\r'||n=='\\t'||n==-1)\\n            return true;\\n            return false;\\n        }\\n    }\\n    public static void main(String args[]) throws IOException {\\n        Scan input=new Scan();\\n        int test=1;\\n//        test=input.scanInt();\\n        StringBuilder ans=new StringBuilder(\"\");\\n        for(int tt=1;tt<=test;tt++) {\\n            long a=input.scanInt();\\n            long b=input.scanInt();\\n            long c=input.scanInt();\\n            long d=input.scanInt();\\n            long max=Long.MIN_VALUE;\\n            if(0>=a && 0<=b) {\\n                max=0;\\n            }\\n            if(0>=c && 0<=d) {\\n                max=0;\\n            }\\n            max=Math.max(max,a*c);\\n            max=Math.max(max,a*d);\\n            max=Math.max(max,b*c);\\n            max=Math.max(max,b*d);\\n            ans.append(max);\\n        }\\n        System.out.println(ans);\\n    }\\n}\\n", "target": "244", "substitutes": {"buf": ["mb", "Buffer", "uf", "cap", "pb", "seq", "img", "bin", "bl", "out", "cv", "vec", "data", "buffer", "tmp", "msg", "pkg", "wb", "read", "arr", "bytes", "mu", "bs", "ob", "orig", "box", "cb", "batch", "cat", "rb", "buff", "mem", "br", "pool", "p", "cmd", "b", "queue", "txt", "bar", "db", "Buff", "cp", "bag"], "index": ["iter", "length", "open", "zero", "location", "si", "position", "pos", "version", "max", "port", "count", "initial", "ind", "i", "find", "x", "pointer", "buffer", "point", "client", "size", "dimension", "context", "read", "key", "page", "value", "device", "info", "ix", "state", "column", "batch", "start", "can", "connection", "offset", "seek", "Index", "number", "num", "row", "address", "slice", "scan", "loc"], "in": ["f", "din", "io", "IN", "t", "inn", "inner", "from", "bin", "all", "er", "ain", "is", "out", "ind", "i", "ins", "o", "std", "r", "rin", "c", "lin", "h", "isin", "conf", "en", "info", "con", "s", "nin", "gin", "l", "cin", "In", "inc", "it", "can", "run", "stream", "ini", "id", "inf", "reader", "ln", "m", "get", "scan"], "total": ["stable", "note", "sequence", "length", "open", "volume", "relative", "sys", "otal", "si", "t", "scale", "complete", "all", "net", "max", "free", "base", "count", "last", "padding", "sum", "global", "no", "buffer", "type", "size", "eta", "len", "successful", "full", "partial", "database", "bytes", "page", "info", "valid", "non", "json", "this", "serial", "summary", "available", "table", "ta", "current", "meta", "amount", "normal", "alloc", "system", "result", "stats", "null", "more", "Total", "number", "other", "m", "details", "quant", "scan", "percent"], "integer": ["division", " integral", "sequence", "eger", "basic", "national", "important", "internal", "inter", "article", "attribute", "universal", "position", "translation", "natural", "ment", "auto", "version", "net", "primary", "initial", "i", "information", "rational", "reference", "orient", "image", "object", "database", "ior", "pixel", "unsigned", "value", "expression", "choice", "olean", "entity", "processor", "integ", "imei", "negative", "directory", "binary", "neutral", "internet", "zero", "minimum", "international", "result", "element", "significant", "number", "atomic", "minute", "ison", "major", "digit"], "n": ["note", "raw", "nc", "net", "node", "mn", "o", "conn", "body", "fn", "y", "en", "w", "l", "cn", "sn", "num", "none", "g", "rn", "hn", "nm", "nb", "syn", "network", "t", "ren", "nan", "out", "no", "names", "ng", "an", "nn", "pn", "s", "non", "j", "nu", "nl", "np", "nw", "nr", "number", "d", "ion", "ern", "obj", "ann", "ll", "x", "on", "cont", "nor", "name", "gn", "N", "ner", "can", "ns", "nt", "un", "z", "all", "na", "arn", "c", "tn", "v", "dn", "norm", "ln", "ne"], "neg": ["or", "rev", "zero", "status", "Neg", "eg", "scale", "sec", "valid", "emin", "negative", " negative", "ku", "jump", "not", "nov", "agg", "num", "bad", "sign", "rot", "def", "minus", "sum", "ori", "no", "odd", "isl", "flags", "ko", "non", "dest", "und", "normal", "uu", "mis", "rel", "ptr", "nom", "mod", "tag", "gate", "ind", "tmp", "dev", "unit", "orient", "unsigned", "den", "dec", "rand", "acc", "diff", "issues", "digit", "imag", "uint", "cos", "div", "pos", "inv", "cond", "foreign", "mic", "term", "integ", "ois", "iv", "deg", "neutral", "tem", "origin", "norm", "coll", "comp", "omin", "ne", "ost"], "doub": ["domb", " domb", " druck", "doby", "moton", "ondobb", "drib", "moby", "dhoub", "Dumm", "Dobb", "metermin", "determin", "dhumm", " dobb", " doby", "mrib", "dhoby", "mumm", "Domb", "dhruck", "dumm", "toton", "druck", "momb", "toub", "dhobb", "Drib", "ondoubt", "doubt", "mibble", " drib", "Determin", "dibble", "Doubt", "mobb", "ondoub", "Doby", "dhetermin", " doton", "Doub", "Druck", "moub", "dobb", "tibble", " dibble", "ondrib", "doton", " doubt", "toby"], "temp": ["em", "perature", "fake", "cu", "div", "t", "tim", "alt", "mm", "porary", "unt", "dry", "mag", " Temp", "tmp", "cond", "dev", "typ", "unit", "partial", "tr", "tail", "cum", "prime", "v", "emp", "Temp", "volt", "dest", "adj", "term", "perm", "deg", "mem", "acc", "tem", "tm", "pre", "dat", "txt", "Temperature", "template", "ptr", "nom", "mod", "tc", "cell"], "sb": ["sm", "bp", "sg", "pb", "si", "bb", "sf", "bh", "sd", "bf", "sq", "bg", "sp", "eb", "SB", " SB", "bt", "rb", "gb", "bd", " sob", "sn", " eb", "db", "sa", "erb", "lp", "ss", "tk"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = Integer.parseInt(sc.nextLine());\\n\t\tList<String> list = new ArrayList<String>();\\n\t\tString[] mark ={\"S\",\"H\",\"C\",\"D\"};\\n\\n\t\tfor(int i=0;i<=3;i++){\\n\t\t\tfor(int j=0;j<=12;j++){\\n\t\t\t\tlist.add(mark[i]+\" \"+(j+1));\\n\t\t\t}\\n\t\t}\\n\t\tfor(int i=0;i<=n-1;i++){\\n\t\t\tlist.remove(sc.nextLine());\\n\t\t}\\n\t\tfor(String ans:list){\\n\t\t\tSystem.out.println(ans);\\n\t\t}\\n\t}\\n}", "target": "189", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "sync", "sh", "sch", "sq", "gc", "sub", "disc", "anc", "sec", "sp", "c", "cc", "esc", "isc", "spec", "cl", "lc", "irc", "arc", "ctl", "desc", "mc", "nl", "inc", "scl", "sel", "capt", "ch", "st", "ss", "so", "conv", "cle", "cs", "asc", "Sc", "sb", "scan"], "n": ["nm", "nb", "network", "t", "ln", "nc", "net", "mn", "count", "k", "na", "no", "names", "ng", "size", "c", "nn", "gn", "en", "N", "l", "nu", "np", "nl", "cn", "p", "norm", "sn", "ns", "nd", "nt", "ni", "nw", "num", "z", "d", "m", "ne"], "list": ["default", "ist", "sequence", "def", "pair", "level", "show", "L", "t", "range", "collection", "shape", "left", "all", "ll", "sync", "net", "map", "out", "the", "add", "parent", "cont", "and", "index", "LIST", "filter", "del", "output", "lit", "load", "true", "batch", "we", "l", "dl", "table", "lat", "print", "pool", "p", "dict", "st", "listed", "queue", "result", "detail", "array", "li", "see", "lists", "set", "block", "tree", "test"], "mark": ["met", "note", "pen", "fill", "flag", "park", "white", "tag", "style", "match", "hold", "keep", "fix", "base", "point", "marks", "reset", "skip", "kill", "link", "save", "ARK", "rank", "are", "prefix", "set", "blank", "ark", "mask", "marked", "ank", "stop", "remove", "ean", "line", "pres", "block", "follow", "draw", "Mark"], "i": ["zi", "iq", "iti", "ie", "hi", "ci", "I", "iter", "status", "ami", "\u0438", "si", "at", "sim", "ic", "ai", "xi", "ei", "me", "umi", "base", "is", "eu", "ind", "point", "ori", "mi", "err", "cli", "index", "im", "init", "gi", "info", "ix", "MI", "ui", "this", "ki", "batch", "ri", "ity", "qi", "pi", "multi", "ji", "ij", "it", "ii", "PI", "chain", "ini", "di", "ret", "yi", "um", "to", "ni", "li", "ti", "bi", "ims", "iu", "phi", "ip", "asi"], "j": ["bj", "jl", "js", "obj", "ody", "kj", "k", "ind", "oj", "job", "je", "on", "err", "uj", "ge", "jc", "pt", "y", "kid", "bs", "q", "dj", "json", "pr", "ju", "aj", "jp", "jo", "jump", "ji", "J", "ij", "ph", "br", "jit", "jack", "b", "jj", "ja", "other", "jet", "bi", "z", "jas", "el", "g", "ion"], "ans": ["ANS", "anks", "ces", "AN", "anes", "lines", "san", "ats", "ads", "sts", "us", "eds", "ann", "is", "ants", "ins", "marks", "outs", "ms", "ps", "anc", "sk", "ks", "an", " scans", "vs", "fts", "os", "s", " spans", "ens", "ars", "gs", "can", "An", "ns", "rs", "ls", "ds", "vals", "cs", "arts", "xs", "ents"]}}
{"code": "import java.util.Scanner;\\npublic class Main{\\n\\n    int a,b,c;\\n    int[] data;\\n    int size = 3;\\n\\n    public void input(){\\n\tScanner scan = new Scanner(System.in);\\n        data = new int[3];\\n\tfor ( int i = 0; i < 3; i++ ){\\n\t    data[i] = scan.nextInt();\\n\t}\\n    }\\n \\n    public void selsort(){\\n\tfor (int front = 0;front < size - 1;front++){\\n\\n\t    int minIndex = front;\\n            for (int j = front + 1;j < size;j++){\\n\t\tif (data[j] < data[minIndex]){\\n                    minIndex = j;\\n\t\t}\\n\t    }\\n  \\n\t    int tmp = data[front];\\n            data[front] = data[minIndex];\\n            data[minIndex] = tmp;\\n\t}\\n    }\\n\\n    public void output(){\\n\tSystem.out.println(data[0]+\" \"+data[1]+\" \"+data[2]);\\n\\n      \\n    }\\n public static void main(String[] args){\\n     Main p = new Main();\\n     p.input();\\n     p.selsort();\\n     p.output();\\n }\\n}\\n", "target": "37", "substitutes": {"a": ["ar", "aa", "t", "at", "A", " A", "x", "o", "ab", "r", "an", "ba", "n", "ap", "y", "v", "e", "ca", "ata", "z", "d", "g"], "b": ["bp", "f", "bb", "bc", "bf", "ub", "ab", " B", "B", "r", "fb", "ba", "eb", "beta", "ib", "y", "v", "bs", "cb", "rb", "e", "db", "be", "bi", "g"], "c": ["ci", "f", "C", "ct", "bc", "o", "fc", "cd", "n", "ce", "cc", "v", "s", "cb", "l", "e", "cm", "ca", "cf", "cp", "dc", "cs", "ec", "d", "m", "sc", "g", "ac"], "data": ["done", "zero", "raw", "da", "debug", "images", "n", "index", "valid", "output", "next", "dat", "result", "empty", "num", "row", "none", "items", "aw", "def", "what", "view", "content", "map", "no", "where", "results", "blocks", "hash", "table", "step", "chain", "ret", "db", "DATA", "rel", "number", "then", "cache", "actions", "d", "ma", "list", "str", "delete", "format", "length", "params", " DATA", "rew", "save", "type", "use", "image", "mu", "options", "bytes", "value", "state", "json", "dec", "errors", "news", "vals", "val", "details", "message", "values", "date", "window", "pos", "all", "action", "last", "buffer", "code", "entry", "info", "this", "res", "users", "input", "ata", "array", "missing"], "size": ["length", "zero", "zone", "SIZE", "si", "mode", "window", "shape", "capacity", "scale", "dim", "shift", "area", "send", "max", "height", "count", "now", "sum", "scope", "message", "dimension", "n", "by", "south", "name", "function", "s", "small", "shell", "set", "space", "mini", "Size", "owner", "offset", "ize", "resolution", "empty", "id", "news", "number", "ze", "z", "m", "g"], "scan": ["trans", "connect", "auto", "sys", "io", " scanner", "san", "pass", "get", "Scan", "sv", "re", "scale", "ann", "bin", "sync", "reach", "gate", "out", "stat", "find", "sum", "skip", "parse", "check", "an", "read", "ser", "scroll", "en", "con", "ner", "cat", "start", "ch", "can", " Scan", "run", "st", "seek", "nav", "row", "in", "query", "sc", "g", "se"], "i": ["ie", "hi", "ci", "I", "ami", "inter", "f", "si", "ic", "sim", "oi", "ai", "me", "us", "is", "x", "client", "mi", "cli", "ir", "index", "im", "y", "gi", "info", "q", "ix", "ui", "ri", "ki", "l", "qi", "pi", "multi", "my", "it", "ii", "PI", "ex", "ini", "di", "id", "li", "in", "ti", "bi", " I", "m", "iu", "phi", "ip"], "front": ["aux", "root", "zero", "back", "off", "before", "fort", "at", "floor", "right", "n", "index", "head", "mobile", "prefix", "next", "force", "form", "st", "offset", "be", "row", "def", "ft", "f", "Front", "flush", "iterator", "ren", "out", "reset", "fd", "opp", "col", "behind", "init", "current", "after", "br", "ret", "foot", "pad", "ptr", "ff", "success", "art", "offs", "boot", "obj", "from", "left", "fac", "ind", "tail", "buff", "lead", "frac", "nt", "top", "end", "z", "cart", "fr", "first", "window", "pos", "last", "forward", "face", "fat", "v", "start", "stop", "ot", "feature", "field", "aft", "fore"], "minIndex": ["maxInd", " minInsert", "MinInd", "smallInd", " minTime", " minindex", "relIndex", "smallOffset", "MinSection", "relindex", "aminIndex", " minPos", "minuteSection", "minimumIndex", "eminIndex", "minimumValue", "aminInd", "minimumPos", "eminRoute", "relTime", "maxIndex", "eminSection", "minimumZero", "relInd", "minPos", "maxPtr", "MinPosition", "aminZero", "aminPtr", "smallInsert", "minOffset", "minSection", "minuteRoute", "minInd", "minuteInd", "maxInsert", "smallIndex", " minInd", " minValue", "MinRoute", "minindex", "minTime", "MinTime", "minZero", "eminInd", "minPtr", "minimumInd", "minimumPosition", "MinIndex", "minuteIndex", "Minindex", " minOffset", "maxZero", "minPosition", "maxOffset", " minPosition", "minimumPtr", "MinPos", "minInsert", "MinValue", "minRoute", "minValue"], "j": ["f", "bj", "jl", "js", "obj", "kj", "ind", "k", "point", "oj", "x", "job", "je", "son", "uj", "n", "tr", "ge", "jc", "by", "y", "v", "kid", "pt", "dj", "json", "bo", "l", "pr", "ju", "aj", "jp", "jo", "jump", "ji", "ij", "ph", "J", "jit", "jack", "it", "br", "jet", "jj", "ja", "other", "att", "jam", "bi", "z", "jas", "g", "ion"], "tmp": ["cmp", "important", "ctx", "tv", "t", "img", "obj", "mm", "porary", "net", "same", "max", "mp", "mut", "ind", "nom", "timeout", "sp", "MP", "vt", "v", "lib", "tc", "prefix", "term", "perm", "prev", "buff", "np", "tt", "tm", "etc", "txt", "td", "ret", "rt", "yy", "temp", "buf", "xxx", "tf", "test"], "p": ["bp", "pc", "pp", "pb", "t", "wp", "part", "mp", "op", "pa", "par", "ps", "parse", "tp", "pd", "ping", "pm", "r", "d", "sp", "pkg", "P", "rep", "h", "php", "ap", "pt", "v", "pg", "plant", "app", "q", "man", "per", "y", "w", "pers", "admin", "process", "jp", "np", "fp", "pre", "proc", "cp", "lp", "m", "post", "g"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n  private static boolean solve(int[] ls) {\\n    Arrays.sort(ls);\\n    int sum = 0;\\n    for (int l : ls) {\\n      sum += l;\\n    }\\n    return sum > ls[ls.length - 1] * 2;\\n  }\\n  \\n  private static void execute(ContestReader reader, PrintWriter out) {\\n    int n = reader.nextInt();\\n    int[] ls = reader.nextIntArray(n);\\n    out.println(solve(ls) ? \"Yes\" : \"No\");\\n  }\\n  \\n  public static void main(String[] args) {\\n    ContestReader reader = new ContestReader(System.in);\\n    PrintWriter out = new PrintWriter(System.out);\\n    execute(reader, out);\\n    out.flush();\\n  }\\n}\\n\\nclass ContestReader {\\n  private BufferedReader reader;\\n  private StringTokenizer tokenizer;\\n  \\n  ContestReader(InputStream in) {\\n    reader = new BufferedReader(new InputStreamReader(in));\\n  }\\n  \\n  public String next() {\\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n      try {\\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\\n      } catch (Exception e) {\\n        throw new RuntimeException(e);\\n      }\\n    }\\n    return tokenizer.nextToken();\\n  }\\n  \\n  public int nextInt() {\\n    return Integer.parseInt(next());\\n  }\\n  \\n  public long nextLong() {\\n    return Long.parseLong(next());\\n  }\\n  \\n  public double nextDouble() {\\n    return Double.parseDouble(next());\\n  }\\n  \\n  public int[] nextIntArray(int n) {\\n    int[] array = new int[n];\\n    for (int i = 0; i < n; i++) {\\n      array[i] = nextInt();\\n    }\\n    return array;\\n  }\\n  \\n  public long[] nextLongArray(int n) {\\n    long[] array = new long[n];\\n    for (int i = 0; i < n; i++) {\\n      array[i] = nextLong();\\n    }\\n    return array;\\n  }\\n  \\n  public int[][] nextIntMatrix(int n, int m) {\\n    int[][] matrix = new int[n][m];\\n    for (int i = 0; i < n; i++) {\\n      for (int j = 0; j < m; j++) {\\n        matrix[i][j] = nextInt();\\n      }\\n    }\\n    return matrix;\\n  }\\n  \\n  public long[][] nextLongMatrix(int n, int m) {\\n    long[][] matrix = new long[n][m];\\n    for (int i = 0; i < n; i++) {\\n      for (int j = 0; j < m; j++) {\\n        matrix[i][j] = nextInt();\\n      }\\n    }\\n    return matrix;\\n  }\\n}\\n\\nclass Algorithm {\\n  private static void swap(Object[] list, int a, int b) {\\n    Object tmp = list[a];\\n    list[a] = list[b];\\n    list[b] = tmp;\\n  }\\n  \\n  public static <T extends Comparable<? super T>> boolean nextPermutation(T[] ts) {\\n    int rightMostAscendingOrderIndex = ts.length - 2;\\n    while (rightMostAscendingOrderIndex >= 0 &&\\n        ts[rightMostAscendingOrderIndex].compareTo(ts[rightMostAscendingOrderIndex + 1]) >= 0) {\\n      rightMostAscendingOrderIndex--;\\n    }\\n    if (rightMostAscendingOrderIndex < 0) {\\n      return false;\\n    }\\n    \\n    int rightMostGreatorIndex = ts.length - 1;\\n    while (ts[rightMostAscendingOrderIndex].compareTo(ts[rightMostGreatorIndex]) >= 0) {\\n      rightMostGreatorIndex--;\\n    }\\n    \\n    swap(ts, rightMostAscendingOrderIndex, rightMostGreatorIndex);\\n    for (int i = 0; i < (ts.length - rightMostAscendingOrderIndex - 1) / 2; i++) {\\n      swap(ts, rightMostAscendingOrderIndex + 1 + i, ts.length - 1 - i);\\n    }\\n    return true;\\n  }\\n  \\n  public static void shuffle(int[] array) {\\n    Random random = new Random();\\n    int n = array.length;\\n    for (int i = 0; i < n; i++) {\\n      int randomIndex = i + random.nextInt(n - i);\\n      \\n      int temp = array[i];\\n      array[i] = array[randomIndex];\\n      array[randomIndex] = temp;\\n    }\\n  }\\n  \\n  public static void shuffle(long[] array) {\\n    Random random = new Random();\\n    int n = array.length;\\n    for (int i = 0; i < n; i++) {\\n      int randomIndex = i + random.nextInt(n - i);\\n      \\n      long temp = array[i];\\n      array[i] = array[randomIndex];\\n      array[randomIndex] = temp;\\n    }\\n  }\\n  \\n  public static void sort(int[] array) {\\n    shuffle(array);\\n    Arrays.sort(array);\\n  }\\n  \\n  public static void sort(long[] array) {\\n    shuffle(array);\\n    Arrays.sort(array);\\n  }\\n}\\n\\n", "target": "25", "substitutes": {"ls": ["its", "qs", "fs", "lines", "lv", "ads", "ats", "obs", "ols", "lf", "ll", "ims", "ints", "outs", "ms", "als", "ps", "links", "len", "els", "vs", "los", "les", "bs", "s", "las", "acts", "sels", "lc", "dl", "lems", "nl", "gs", "lt", "lis", "LS", "tl", "ists", "ns", "rs", "lbs", "ds", "vals", "cs", "lists", "rl", "ln", "xs"], "sum": ["sort", "success", "zero", "cos", "mass", "cost", "si", "t", "sim", "ul", "us", "scale", "share", "sol", "max", "count", " summed", "add", "ms", "size", "must", "cont", "sat", "up", "weight", "cum", "index", "v", "cal", "average", "summary", "hash", "sam", "doc", "Sum", "su", "mem", "vol", "amount", "acc", "ass", "mean", "total", "um", "alpha", " sums", "sa", "num"], "l": ["yl", "L", "t", "sl", "ln", "lf", "ll", "len", "c", "lin", "lb", "label", "v", "lc", "hl", "dl", "kl", "nl", "lt", "ly", "p", "tl", "ol", "lis", "le", "la", "li", "ld", "z", "lp", "line", "el", "ell"], "reader": ["word", "builder", "dd", "io", "reflect", "sync", "parse", "rator", "source", "read", "wrapper", "load", "rer", " reporter", "service", "handler", "driver", "file", "row", "rot", "test", "handle", "book", "iterator", "ro", "dr", "client", "timer", "rx", "oder", "document", "run", "stream", "worker", "Reader", "older", "rd", "iter", "inner", "rc", "er", "r", "rr", "ser", "ler", " writer", "actor", "ner", "reading", " viewer", "red", "author", "owner", "rt", "writer", "linger", "data", "buffer", "redo", "context", "entry", " ruler", "resource", "parser", "journal", "this", "mr", "rar", "input", "rs", "null", "runner", "rl", "ry", "loader"], "out": ["writer", "error", "exit", "report", "status", "sys", "OUT", "io", "t", "at", "flush", "inner", "obj", "all", "net", "write", "exec", "gc", "o", "outs", "client", "msg", "r", "err", "os", "OU", "v", "server", "name", "info", "s", "aos", "output", "w", "Out", "this", "outer", "screen", "co", "res", "crit", "it", "print", "ch", "pool", "p", "file", "ex", "txt", "null", "nt", "user", "to", "end", "ou", "log", "set", "str"], "n": ["nc", "net", "mn", "o", "y", "en", "w", "pi", "cn", "sn", "num", "g", "nm", "ed", "nb", "f", "ct", "t", "network", "max", "nan", "no", "names", "ng", "len", "an", "nn", "s", "nu", "nl", "np", "nw", "nr", "number", "d", "nv", "nos", "x", "size", "r", "on", "name", "gn", "local", "N", "it", "e", "p", "ns", "le", "nt", "un", "z", "all", "count", "na", "c", "h", "v", "dn", "q", "batch", " N", "ln", "ne"], "tokenizer": ["okeniser", "Tokenizer", "timizer", "okenger", "serialifier", "Tokenenser", "tokenger", "serialzer", "tokenizing", " tokenizing", " tokenifier", " tokenizers", "serializer", "okenization", "timifier", "okenzer", " tokenzer", "tokenifier", "okenenser", "timzer", "okenifier", "tokenization", " tokenener", "tokenizers", "Tokenization", "colorizer", " tokeniser", "colorenser", "Tokenger", " tokenization", "Tokenzer", "colorifier", "Tokeniser", "tokeniser", "okenizer", "Tokenifier", "okenerer", "okenener", "Tokenener", " tokenger", "okenizers", "tokenerer", "Tokenerer", "colorerer", "timizing", "Tokenizers", "tokenenser", "tokenzer", "serializing", "tokenener"], "in": ["din", "io", "IN", "t", "inner", "inn", "from", "mm", "bin", "console", "is", "ins", "data", "arg", "r", "on", "err", "c", "cli", "source", "info", "con", "s", "w", "cin", "In", "inc", "it", "input", "p", "stream", "run", "file", "ini", "rt", "null", "id", "d", "ac"], "array": ["format", "root", "archive", "sequence", "closure", "record", "pair", "ar", "section", "ray", "air", "instance", "range", "angular", "collection", "window", "raw", "area", "our", "csv", "all", "map", "Array", "global", "parent", "save", "module", "response", "dict", "stage", "var", "database", "arr", "relation", "object", "function", "other", "expression", "arrow", "actor", "ace", "variable", "batch", "hash", "table", "binary", "current", "amount", "vector", "append", "child", "file", "bar", "audio", "stack", "angle", "export", "queue", "element", "row", "role", "trace", "cache", "message"], "i": ["status", "io", "us", "ice", "php", "y", "ix", "you", "pi", "ii", "ti", "bi", "fire", "phi", "ie", "hi", "ci", "def", "xi", "ei", "base", "parent", "cli", "init", "s", "ui", "uri", "qi", "multi", "my", "print", "chain", "ex", "ini", "set", "si", "ic", "sim", "oi", "inner", "obj", "eu", "is", "mi", "cont", "gi", "println", "char", "ji", "it", "di", "ims", "I", "ami", "\u0438", "u", "ai", "me", "mac", "iy", "im", "info", "q", "lit", "ki", "batch", "ity", "ij", "PI", "li", " I", "iu", "get", "ip"], "m": ["mt", "f", "t", "bm", "dim", "mm", "M", "k", "mn", "o", "x", "ms", "r", "mi", "c", "an", "h", "dm", "mat", "y", "v", "im", "w", "rm", "mod", "mc", "mem", "mx", "p", "tm", "cm", "d", "ma", "g"], "matrix": ["matrices", "atMatrix", "mrix", "matMatrix", " matrices", "atrix", "mrices", "mMatrix", "atrices", " matMatrix"]}}
{"code": "import java.io.*;\\n// import java.math.*;\\n// import java.util.*;\\n// import java.util.Map.*;\\n// import java.util.stream.*;\\n\\npublic class Main {\\n    public static void main (String[] args) throws Exception {\\n        BufferedReader reader =\\n            new BufferedReader (new InputStreamReader (System.in));\\n        String[] arr = reader.readLine().split (\" \");\\n        int A, B;\\n        A = Integer.parseInt (arr[0]);\\n        B = Integer.parseInt (arr[1]);\\n        int ans = 0;\\n        int cur = 1;\\n        while (cur < B) {\\n            ans++;\\n            cur += A - 1;\\n        }\\n        System.out.println (ans);\\n        return;\\n    }\\n}", "target": "101", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\nclass Main{\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tint A[] = new int[n];\\n\t\tint i, j, key;\\n\t\tfor(i=0; i<n; i++){\\n\t\t\tA[i] = sc.nextInt();\\n\t\t}\\n\t\tprint(A);\\n\t\tfor(i=1; i<n; i++){\\n\t\t\tkey = A[i];\\n\t\t\tj = i - 1;\\n\t\t\twhile(j>=0 && A[j]>key){\\n\t\t\t\tA[j+1] = A[j];\\n\t\t\t\tj--;\\n\t\t\t}\\n\t\t\tA[j+1] = key;\\n\t\t\tprint(A);\\n\t\t}\\n\t}\\n\tpublic static void print(int A[]){\\n\t\tfor(int i=0; i<A.length; i++){\\n\t\t\tif(i!=0) System.out.print(\" \");\\n\t\t\tSystem.out.print(A[i]);\\n\t\t}\\n\t\tSystem.out.println();\\n\t}\\n}", "target": "69", "substitutes": {"sc": ["SC", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "ng", "anc", "fc", "r", "sec", "sp", "c", "cc", "isc", "esc", "src", "cl", "lc", " Sc", "ctl", "desc", "mc", "nl", "scl", "cr", "capt", "ch", "system", "ss", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["nm", "nb", "t", "nc", "all", "net", "mn", "nan", "count", "k", "na", "o", "x", "no", "ng", "size", "len", "c", "an", "nn", "fn", "name", "v", "en", "N", "l", "a", "nu", " N", "nl", "np", "ot", "cn", "p", "sn", "ns", "nt", "ni", "number", "num", "in", "un", "z", "d", "m", "ne"], "A": ["MA", "Alpha", "E", "I", "ATA", "AF", "GA", "C", "AE", "L", "Area", "AI", "Alice", "AV", "Array", "App", "TA", "M", "Ar", "D", "AA", "AP", "The", "ACT", "SA", "S", "B", "ACC", "HA", "What", "F", "P", "V", "At", "AU", "IA", "WA", "And", "AB", "N", "Cache", "U", "AC", "EA", "AM", "a", "JA", "Authorities", "NA", "BA", "K", "G", "J", "Answer", "AR", "H", "An", "Av", "As", "mA", "X", "This", "T", "RAM", "All", "AT", "LA", "API", "UA", "CA"], "i": ["io", "us", "o", "iu", "source", "index", "y", "ix", "l", "pi", "series", "ii", "id", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "ori", "progress", "cli", "init", "ui", "uri", "qi", "multi", "ini", "list", "m", "iter", "history", "iso", "si", "ic", "sim", "oi", "is", "k", "ind", "x", "mi", "gi", "ji", "it", "e", "p", "di", "in", "ims", "zi", "I", "ami", "\u0438", "u", "ai", "me", "im", "v", "info", "this", "ri", "ki", "batch", "a", "ity", "ij", "PI", "li", "point", "ip"], "j": ["f", "t", "js", "window", "obj", "k", "kj", "fr", "o", "x", "job", "msg", "col", "d", "uj", "h", "jc", "by", "y", "v", "kid", "bs", "pt", "q", "dj", "json", "bo", "l", "pr", "ju", "aj", "jp", "jit", "ji", "J", "ij", "jump", "it", "br", "p", "res", "b", "jj", "other", "row", "bi", "z", "str", "block", "g", "ja"], "key": ["pe", "obj", "ro", "max", "right", "base", "k", "ole", "sum", "x", "o", "link", "type", "ek", "col", "size", "code", "ke", "index", "prime", "by", "name", "value", "y", "leader", "q", "v", "prefix", "here", "min", "ry", "json", "bo", "info", "kw", "Key", "hash", "lock", "next", "ey", "char", "rand", "pop", "keys", "my", "p", "le", "mk", "id", "alpha", "val", "KEY", "row", "list", "set", "item", "tip", "tree"]}}
{"code": "import java.util.*;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        double N = sc.nextInt();\\n        double K = sc.nextInt();\\n        double tmp = 0.0;\\n        double kakuritu = 0.0;\\n\\n        for(int i = 0; i < N; i++){\\n          for(int j = 0; j < 1000000 ; j++ ){\\n            if (((i+1) * Math.pow(2.0,j)) >= K){\\n              tmp = Math.pow(0.5,j) / N;\\n              break;\\n            }\\n\\n          }\\n          kakuritu += tmp;\\n          //kakuritu = kakuritu / N;\\n        }\\n        System.out.println(kakuritu);\\n}\\n}\\n", "target": "20", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "ng", "anc", "sec", "sp", "cont", "cc", "c", "esc", "isc", "ser", "cl", "lc", " Sc", "ctl", "desc", "ctrl", "mc", "inc", "scl", "cr", "ch", "system", "cgi", "ss", "dc", "cs", "tc", "Sc", "sb", "scan"], "N": ["I", "NN", "NM", "R", "NC", "AN", "ND", "L", "C", "Y", "Q", "NO", "A", "Num", "NT", "M", "D", "S", "B", "F", "P", "V", "n", "NR", "CNN", "Ni", "W", "NB", "NP", "TN", "U", "NI", "GN", "NA", "G", "J", "NH", "H", "NS", "Len", "X", "SN", "T", "Ns", "NE"], "K": ["I", "R", "C", "L", "PK", "KE", "VK", "Y", "KY", "Q", "Z", "M", "k", "S", "B", "F", "P", "V", "NK", "W", "HK", "Sch", "KK", "SK", "KR", "G", "J", "H", "KI", "KB", "KA", "X", "T", "KS"], "tmp": ["cmp", "PUT", "TB", "nb", "fake", "suff", "tv", "t", "obj", "mp", "mut", "buffer", "tp", "mint", "sp", "MP", "pkg", "qq", "partial", "vt", "prop", "beta", "tn", "emp", "Temp", "term", "bt", "perm", "buff", "jp", "np", "acc", "tt", "p", "etc", "resp", "ppo", "txt", "total", "ret", "nt", "offset", "cp", "temp", "cache", "tf", "tap", "attr", "pot"], "kakuritu": ["kakauririn", "kakauritu", "kakauu", "kakauirin", "kakuriaru", "kakauaru", "kakuaru", "kakuru", "kakauraru", "kakuriitu", "kakurita", "kakuranitu", "kakaurita", "kakauita", "kakuranirin", "kakurtita", "kakuririn", "kakauitu", "kakuranita", "kakuranaru", "kakuita", "kakuriu", "kakauati", "kakurtati", "kakuitu", "kakurtitu", "kakuirin", "kakauru", "kakuu", "kakuraru", "kakaurati", "kakurati", "kakuriirin", "kakuati", "kakuranati", "kakuranu", "kakurtaru"], "i": ["zi", "iq", "ie", "hi", "ci", "I", "ami", "si", "ic", "sim", "u", "ai", "xi", "us", "is", "out", "ind", "x", "o", "r", "mi", "n", "index", "y", "v", "im", "init", "ix", "q", "ui", "ri", "a", "qi", "pi", "multi", "ij", "it", "ii", "di", "ini", "id", "li", "in", " Xi", "bi", "ims", "ti", "m", "iu", "phi", "ip", "asi"], "j": ["jac", "bj", "t", "jl", "js", "obj", "k", "kj", "ion", "oj", "on", "son", "uj", "n", "ge", "jc", "pt", "y", "v", "bs", "q", "dj", "json", "l", "pr", "bot", "aj", "jp", "jo", "jump", "ji", "J", "ij", "jit", "br", "p", "tri", "b", "jj", "ja", "other", "li", "bi", "z", "m", "jas", "g", "fr"]}}
{"code": "//package atcoder;\\n \\nimport java.util.*;\\n//import java.math.BigDecimal;\\n \\npublic class Main{\\n\tstatic boolean[] targetNumbers;\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint A = sc.nextInt();\\n\t\tint B = sc.nextInt();\\n\t\tif(A+B==3) {\\n\t\t\tSystem.out.println(3);\\n\t\t}else if(A+B==4) {\\n\t\t\tSystem.out.println(2);\\n\t\t}else {\\n\t\t\tSystem.out.println(1);\\n\t\t}\\n\t}\\n}", "target": "236", "substitutes": {}}
{"code": "import java.util.*;\\nimport java.lang.*;\\nclass Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        char[] s = sc.next().toCharArray();\\n        String ans = \"AC\";\\n        if(s[0]!='A'){\\n            ans = \"WA\";\\n        }\\n        if(Character.isUpperCase(s[1])){\\n            ans = \"WA\";\\n        }\\n        int count = 0;\\n        for(int i =2;i<s.length;i++){\\n            if(Character.isUpperCase(s[i])){\\n                if(count==0&&s[i]=='C'&&i!=s.length-1){\\n                    count ++;\\n                } else {\\n                    ans = \"WA\";\\n                }\\n            }\\n        }\\n        if(count==0){\\n            ans =\"WA\";\\n        }\\n        System.out.println(ans);\\n    }\\n}", "target": "209", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "sac", "sh", "exec", "sch", "sq", "gc", "sub", "uc", "anc", "sec", "sp", "c", "cc", "isc", "esc", "soc", "cl", " Sc", "desc", "dec", "screen", "mc", "scl", "cr", "sel", "ch", "system", "ss", "cle", "cs", "ec", "tc", "Sc", "scan"], "s": ["its", "qs", "fs", "hs", "ashes", "ats", "js", "sts", "sv", "eps", "gets", "strings", "aws", "bis", "is", "abs", "sq", "ins", "ses", "ms", "S", "ps", "g", "c", "h", "vs", "os", "v", "tes", "bs", "w", "ws", "states", "cons", "gs", "bits", "ids", "p", "ns", "rs", "ls", "stats", "ds", "parts", "cs", "ims", "ss", "xs", "ts"], "ans": ["ras", "ANS", "orts", "anks", "offs", "ces", " beans", "ats", "ads", "eps", "inks", "eds", "aps", "ann", "ols", "oss", "ems", "mn", "ants", "ins", " means", "outs", "uns", "ms", "orders", "helps", "aus", "acs", "ks", "an", "ags", "vs", "angs", "os", "amps", "rans", "aos", " spans", "aults", "posts", "olds", "asks", " names", "yes", "ons", "ens", "asms", "ots", "ars", "ams", "vers", "forms", "uploads", "ops", "ns", "rs", "aints", "ames", "as", " orphans", "ds", "utters", "vals", "ls", "cs", "caps", "arms", "arts", "ays", "ents"], "count": ["found", "report", "length", "flag", "counter", "Count", "nb", "const", "hold", "ind", "loop", "sum", "find", "add", "stat", "ctr", "cond", "client", "size", "must", "cd", "reset", "cont", "len", "check", "c", "n", "index", "ount", "conf", "scroll", "state", "comment", "current", "amount", "continue", "coll", "child", "total", "result", "nt", "number", "num", "trace", "cache", "list", "cell", "test", "cast", "call"], "i": ["go", "zi", "I", "sequence", "ci", "f", "\u0438", "si", "oi", "us", "ei", "ai", "xi", "base", "is", "ind", "point", "x", "o", "mi", "err", "cli", "key", "index", "name", "im", "y", "gi", "init", "ix", "q", "ui", "v", "info", "ri", "ki", "j", "batch", "uri", "qi", "pi", "multi", "ji", "ij", "it", "print", "ii", "slice", "p", "chain", "di", "ini", "ni", "id", "to", "li", "ti", "bi", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\ttry {\\n\t\t\tString str = br.readLine();\\n\t\t\tString[] arr = str.split(\" \");\\n\t\t\tint x = Integer.parseInt(arr[0]);\\n\t\t\tint y = Integer.parseInt(arr[1]);\\n\t\t\tint z = x*y;\\n\t\t\tint a = x+x+y+y;\\n\t\t\\n\t\t\tSystem.out.println(z + \" \" + a);\\n\t\t} catch (IOException e) {\\n\t\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f catch \u30d6\u30ed\u30c3\u30af\\n\t\t\te.printStackTrace();\\n\t\t}\\n\\n\t}\\n}", "target": "92", "substitutes": {"br": ["bp", "bn", "bm", "bc", "bh", "bridge", "er", "dr", "bro", "bl", "bg", "ctr", "gr", "sp", "tr", "shr", "bs", "lr", "yr", "bt", "mr", "Br", "pr", "rb", "cr", "bd", "ch", "kr", "BR", "db", "be", "rel", "nr", "browser", "hr", "vr", "buf", "ber", "wr", "fr"], "str": ["iter", "art", "t", "div", "obj", "exp", "dr", "comm", "out", "bl", "inst", "data", "gr", "r", "sec", "sp", "err", "tr", "n", "s", "Str", "STR", "pr", "next", "string", "char", "vol", "res", "oct", "coll", "st", "dat", "txt", "result", "fr", "line", "g", "wr"], "arr": ["iq", "art", "ar", "addr", "ray", "sys", "div", "img", "js", "obj", "unch", "map", "part", "bl", "ord", "expr", "par", "gr", "alph", "r", "len", "tr", "ev", "app", "ix", "pl", "adj", "batch", "av", "elt", "ars", "aaa", "vol", "coll", "frac", "agg", "rs", "dat", "dict", "ele", "ang", "att", "db", "array", "rel", "vals", "fr", "list", "val", "attr", "ell"], "x": ["fx", "px", "f", "xd", "ax", "t", "xx", " xx", "xi", "dx", "ox", "i", "o", "r", "c", "n", "h", "zx", "index", "v", "xc", "ix", "yx", "w", "xe", "j", "l", "wx", "rx", "mx", "e", "p", "xy", "ex", "tx", "X", "xs", "width", "d", "m", "g"], "y": ["cy", "vy", "py", "xx", "Y", "wy", "ies", "oy", "i", "gy", "o", "sy", "ym", "uy", "g", "c", "ery", "n", "h", "iy", "yt", "v", "ty", "dy", "q", "yr", "yz", "j", "ey", "asy", "ly", "iny", "ky", "my", "p", "xy", "ny", "axy", "b", "ch", "yi", "yy", "ry", "m", "hy", "ay"], "z": ["zi", "zone", "nz", "zo", "t", "u", "uz", "Z", "sd", "tz", "ox", "i", "iz", "ez", "zz", "n", "h", "zx", "oz", "zy", "ix", "yz", "w", "zu", "j", "zon", "rez", "zer", "zip", "ze", "cz", "hz", "d", "az", "zh"], "a": ["aa", "f", "t", "area", "xa", "va", "A", "da", "au", "i", "data", "o", "na", "oa", "ao", "ba", "an", "c", "am", "n", "m", "ea", "j", "sta", "ta", "ae", "aj", "e", "p", "b", "ca", "alpha", "la", "as", "sa", "ma", "ana", "ac"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\\n\t\twhile(true){\\n\t\t\tString str = br.readLine();\\n\t\t\tStringTokenizer st = new StringTokenizer(str, \" \");\\n\t\t\tint H = Integer.parseInt(st.nextToken());\\n\t\t\tint W = Integer.parseInt(st.nextToken());\\n\\n\t\t\tif(H == 0 && W == 0){\\n\t\t\t\tbreak;\\n\t\t\t}\\n\\n\t\t\tfor ( int i = 0; i < H; i++ ){\\n\t\t\t\tfor ( int j = 0; j < W; j++ ){\\n\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t}\\n\t\t\t\tSystem.out.println(\"\");\\n\t\t\t}\\n\t\t\tSystem.out.println(\"\");\\n\t\t}\\n\t}\\n}\\n\\n", "target": "87", "substitutes": {"br": ["bp", "bb", "bn", "bm", "bc", "bh", "bridge", "er", "dr", "bro", "bl", "bg", "ctr", "gr", "sp", "err", "tr", "bs", "bsp", "yr", "bt", "mr", "Br", "pr", "rb", "gb", "cr", "bd", "ch", "kr", "BR", "browser", "hr", "fr", "buf", "ber", "wr", "vr"], "str": ["sw", "f", "t", "div", "obj", "exp", "dr", "sol", "comm", "out", "data", "stri", "gr", "z", "r", "sp", "n", "tr", "cur", "arr", "spec", "s", "Str", "STR", "dec", "string", "char", "vol", "res", "text", "print", "p", "piece", "b", "txt", "dat", "fr", "list", "line", "g", "wr"], "st": ["stable", "mt", "sc", "sw", "est", "ft", "sty", "status", "const", "ct", "sl", "t", "th", "sts", "sv", "se", "obj", "sd", "stat", "inst", "ste", "stri", "std", "sp", "ust", "h", "pt", "ast", "St", "sta", "desc", "rest", "start", "step", "tt", "ch", "sn", "td", "ST", "nd", "stack", "nt", "set", "et", "ss", "sb", "ts", "ost"], "H": ["I", "HO", "High", "RH", "His", "He", "SH", "HH", "L", "HI", "HE", "AV", "M", "Host", "IT", "MH", "HA", "GH", "IM", "P", "HR", "h", "HM", "OH", "HTML", "HK", "HL", "FH", "HB", "N", "AH", "Health", "AC", "WH", "CH", "TH", "G", "HS", "J", "HD", "NH", "This", "HT", "HC", "HQ"], "W": ["Week", "Width", "I", "WAR", "WT", "AL", "VW", "L", "WE", "OW", "DW", "Wh", "EW", "Win", "M", "D", "S", "B", "WP", "F", "P", "V", "IF", "CW", "WS", "SW", "WM", "WA", "RE", "OU", "TW", "HTML", "w", "N", "MW", "Watch", "NW", "WH", "WR", "J", "T", "BW", "WW", "FW", "We", "WC"], "i": ["zi", "iq", "iter", "ie", "I", "ci", "Ti", "ami", "si", "io", "ic", "inner", "xi", "me", "is", "ind", "mi", "index", "gi", "y", "im", "v", "init", "q", "ui", "ix", "this", "ki", "a", "pi", "multi", "ij", "it", "ii", "ex", "ini", "di", "ret", "yi", "id", "ni", "li", "bi", "ims", "m", "iu", "phi", "ip"], "j": ["ie", "bj", "ct", "jl", "js", "obj", "k", "oj", "job", "no", "z", "err", "uj", "ge", "key", "jc", "pt", "y", "q", "dj", "json", "pr", "aj", "jp", "jo", "jump", "ji", "J", "ij", "it", "ph", "b", "ja", "jj", "other", "nr", "bi", "kj", "m", "jas", "ne", "g", "fr"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString[] lines = sc.nextLine().split(\" \");\\n\t\tint num1 = Integer.parseInt(lines[0]);\\n\t\tint num2 = Integer.parseInt(lines[1]);\\n\t\tString result;\\n\t\tif(num1 < num2){\\n\t\t\tresult = \"a < b\";\\n\t\t} else if(num1 > num2) {\\n\t\t\tresult = \"a > b\";\\n\t\t} else {\\n\t\t\tresult = \"a == b\";\\n\t\t}\\n\\n\t\tSystem.out.println(result);\\n\\n\t}\\n}", "target": "179", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "se", "sv", "nc", "bc", "asc", "sync", "gc", "sq", "sch", "anc", "sec", "sp", "c", "cc", "ser", "esc", "isc", "spec", "cl", "lc", "desc", "dec", "screen", "mc", "nl", "scl", "cr", "capt", "ch", "system", "sel", "ss", "conv", "cle", "cs", "ec", "tc", "Sc", "scan"], "lines": ["nets", "its", "views", "cells", "qs", "ues", "frames", "faces", "rows", "styles", " Lines", "models", "ses", "outs", "elines", "pins", "phones", "mails", "links", "sites", "ks", "vs", "fts", "bytes", "los", "les", "sets", "notes", "poses", "ines", "ends", "blocks", "locks", "lights", "files", "states", "points", "gs", "objects", "ids", "uses", "plates", "xes", "ls", "dates", "words", "pages", "steps", "works", "heads", "issues", "lists", "reads", "details"], "num1": ["mon0", "num5", "numMap", "num0", "alph5", "alph3", "number1", "mon1", "umMap", "monator", "numberator", "num3", "number0", "um5", "alph1", " numator", "um1", "mon2", "numator", "number2", "alph0", "alphMap", "um0", " numMap", "alph2", "number3", " num5", " num0", "mon3"], "num2": ["date2", "mon0", "tim0", "num0", "tim1", "um2", " numb", "tim2", " numtwo", "mon02", "number1", "mon1", "num02", "um02", "number0", "date1", " num02", "dateb", "date0", "umb", "numberb", "montwo", "monb", "numtwo", "mon2", "number2", "numb", "timtwo", "numbertwo", " num0", "umtwo"], "result": ["found", "report", "sequence", "success", "word", "what", "status", "join", "section", "def", "date", "RESULTS", "style", "tag", "product", "complete", "match", "part", "transform", "params", "data", "debug", "message", "response", "r", "err", "request", "key", "relation", "value", "expression", "prefix", "results", "output", "json", "term", "description", "true", "valid", "summary", "method", "res", "answer", "diff", "feature", "continue", "chain", "command", "search", "ret", "reason", "url", "element", "null", "Result", "rel", "field", "comment", "work", "task", "draw", "test"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        FastReader s = new FastReader();\\n        int A = s.nextInt();\\n        int B = s.nextInt();\\n        int flag=-1;\\n        for(int i=0;i<10;i++){\\n            if(A==Math.floor(((B*10)+i)*0.08)){\\n                flag=(B*10)+i;\\n                break;\\n            }\\n\\n        }\\n        System.out.println(flag);\\n    }\\n\\n    private static boolean isPrime(int n) {\\n        if (n == 2)\\n            return true;\\n        else if ((n % 2 == 0 && n > 2) || n < 2)\\n            return false;\\n        else {\\n            for (int i = 3; i <= (int) Math.sqrt(n); i += 2) {\\n                if (n % i == 0)\\n                    return false;\\n            }\\n            return true;\\n        }\\n\\n\\n    }\\n\\n    static class FastReader {\\n        BufferedReader br;\\n        StringTokenizer st;\\n\\n        public FastReader() {\\n            br = new BufferedReader(new\\n                    InputStreamReader(System.in));\\n        }\\n\\n        String next() {\\n            while (st == null || !st.hasMoreElements()) {\\n                try {\\n                    st = new StringTokenizer(br.readLine());\\n                } catch (IOException e) {\\n                    e.printStackTrace();\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n\\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n\\n        double nextDouble() {\\n            return Double.parseDouble(next());\\n        }\\n\\n        String nextLine() {\\n            String str = \"\";\\n            try {\\n                str = br.readLine();\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            return str;\\n        }\\n    }\\n\\n}", "target": "121", "substitutes": {"s": ["sm", "its", "sw", "qs", "fs", "hs", "sys", "t", "ats", "js", "sv", "aws", "sol", "comm", "abs", "sq", "ses", "ins", "S", "ms", "ps", "als", "r", "sb", "less", "h", "os", "w", "ws", "a", "gs", "ools", "fps", "p", "b", "ns", "rs", "http", "ls", "ers", "ds", "cs", "ims", "ss", "xs", "ts"], "A": ["Al", "I", "AF", "AL", "RA", "C", "L", "AI", "Q", "AV", "D", "AA", "AP", "SA", "S", "F", "P", "V", "AU", "AB", "N", "U", "AC", "AGE", "a", "BA", "G", "AR", "H", "An", "As", "X", "This", "Ant", "T", "AT", "CA"], "B": ["I", "R", "GB", "C", "L", "RB", "BM", "Y", "BL", "Z", "M", "S", "BO", "BI", "EB", "BB", "P", "V", "DB", "BT", "BE", "SB", "BF", "IB", "NB", "AB", "N", "BA", "G", "J", "VB", "b", "BR", "BY", "Bar", "BC", "BS", "T", "LB", "BG"], "flag": ["bool", "status", "f", "FLAG", "tag", "style", "window", "ment", "count", "age", "arg", "debug", "cond", "bit", "stage", "Flag", "weight", "anch", "flags", "lag", "lock", "mask", "char", "bug", "string", "store", "ag", "start", "continue", "old", "cmd", "offset", "ret", "id", "field", "ld", "ff", "sign", "test"], "i": ["zi", "iq", "iter", "ie", "hi", "ci", "I", "ami", "io", "si", "ic", "sim", "u", "t", "ai", "me", "xi", "ei", "integer", "us", "port", "is", "ind", "point", "o", "x", "mi", "err", "cli", "mu", "index", "im", "y", "gi", "info", "ix", "v", "ui", "ri", "ki", "j", "l", "a", "qi", "pi", "multi", "ji", "ij", "it", "e", "ii", "continue", "p", "ex", "ini", "di", "id", "li", "fi", "in", "ti", "bi", "d", "m", "iu", "phi", "g", "ip", "asi"], "n": ["note", "nm", "nb", "t", "ln", "nc", "all", "net", "count", "nan", "na", "no", "o", "x", "size", "on", "len", "c", "nn", "nor", "y", "v", "gn", "name", "dn", "q", "non", "N", "j", "l", "nu", "nl", "np", "cn", "p", "norm", "sn", "ns", "nt", "number", "num", "none", "nr", "un", "z", "d", "m", "ne", "g"], "br": ["bp", "bre", "bm", "bc", "bh", "bridge", "rier", "bra", "dr", "bro", "bl", "ctr", "gr", "r", "sp", "tr", "shr", "bs", "bsp", "lr", "bt", "j", "mr", "Br", "pr", "next", "rb", "jp", "brace", "itter", "bd", "cr", "vr", "kr", "ch", "b", "BR", "rel", "ptr", "hr", "buf", "fr", "Tr", "ber", "wr", "bn"], "st": ["stable", "sm", "mt", "ist", "sw", "est", "ft", "sth", "sty", "const", "first", "ct", "sl", "t", "th", "sts", "dr", "sh", "wt", "bl", "stat", "inst", "ste", "stri", "tmp", "std", "z", "r", "sp", "stage", " superst", "tr", "ut", "pt", "cl", "St", "set", "bt", "l", "pr", "rest", "start", "it", "p", "sn", "ST", "nd", "stack", "nt", "be", "fr", "et", "sc", "se", "ost"], "str": ["stable", "rec", "ent", "usr", "t", "div", "raw", "dr", "out", "inst", "data", "ctr", "msg", "r", "sp", "cont", "tr", "cur", "arr", "shr", "del", "Str", "STR", "j", "arc", "dec", "next", "string", "char", "vol", "res", "text", "print", "p", "ns", "txt", "pse", "result", "ret", "fr", "list"]}}
{"code": "import java.util.Scanner;\\n\\n/**\\n * Created by enpingkuang on 2020/9/13 8:01 \u4e0b\u5348\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        long[] a = new long[4];\\n        long sum = Long.MIN_VALUE;\\n        for(int i = 0;i<4;i++){\\n            a[i] = scanner.nextLong();\\n        }\\n        sum = Math.max(sum,a[0]*a[2]);\\n        sum = Math.max(sum,a[0]*a[3]);\\n        sum = Math.max(sum,a[1]*a[2]);\\n        sum = Math.max(sum,a[1]*a[3]);\\n        System.out.println(sum);\\n    }\\n}", "target": "244", "substitutes": {"scanner": ["Scanner", "Scaner", "scaner", " scanator", "scanener", " scanter", "canter", "scanator", "canator", "Scanener", " scanener", " scaner", "Scanter", "caner", "canener", "Scanator", "scanter", "canner"], "a": ["aux", "go", "aw", "es", "history", "aa", "ack", "f", "at", "window", "area", "ad", "all", "A", "fa", "da", "au", "na", "ab", "o", "oa", "eta", "ao", "ba", "an", "am", "ap", "y", "app", "m", "ea", "w", "ga", "ia", "sta", "ta", "ae", "aaa", "aff", "apa", "b", "ca", "alpha", "as", "att", "parts", "array", "sa", "la", "to", "ma", "ac"], "sum": ["sort", "mix", "zero", "join", "status", "mass", "us", "scale", "alph", "msg", "html", "summary", "pi", "sample", "pool", "result", "num", " total", "see", "dot", " som", "percent", " summ", "share", "max", "add", "cum", "cal", "average", "hash", "Sum", " num", "su", "vol", "mean", "hum", "um", " sums", "cache", "set", "list", "help", "ac", "cu", "si", "sim", "mm", "fac", "match", " summary", "sup", "stat", "tmp", " Sum", "size", "score", "use", "up", "tail", "mu", "tu", "acc", "diff", "total", "stack", "temp", "trace", "comment", "val", "cmp", "ul", "prof", "all", "count", "height", "union", " summed", "buffer", " sim", "weight", " count", "sam", "ot", "norm", "util", "fail", "sa", "missing", "se"], "i": ["iter", "I", "hi", "ci", "ie", "f", "io", "si", "ic", "sim", "u", "us", "me", "ai", "er", "is", "ind", "x", "ms", "client", "mi", "c", "n", "y", "im", "v", "init", "q", "ix", "ui", "gi", "j", "batch", "uri", "qi", "pi", "multi", "it", "e", "my", "ii", "print", "chain", "b", "gu", "di", "id", "li", "ti", "bi", "set", "m", "phi", "ip"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Collections;\\nimport java.util.Comparator;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n\\n        Scanner scanner = new Scanner(System.in);\\n\\n        int A = scanner.nextInt();\\n        int B = scanner.nextInt();\\n        int K = scanner.nextInt();\\n\\n        ArrayList<Integer> ok = new ArrayList<>();\\n\\n        for(int i=1; i<=100; i++){\\n            if(A%i ==0 && B%i==0){\\n                ok.add(i);\\n            }\\n        }\\n\\n        Collections.sort(ok, Comparator.reverseOrder());\\n\\n        System.out.println(ok.get(K-1));\\n\\n    }\\n}", "target": "134", "substitutes": {"scanner": ["scanzer", "Scanner", "Scanzer", "gateener", "gatezer", "reachzer", "reachner", "Scaner", "gatener", "scaner", "reachatter", " scanator", "canatter", "scanener", " scanter", "canter", "readner", "scanator", "readatter", "canator", "readener", "Scanener", " scanener", "scanatter", " scaner", "gateatter", "caner", "Scanter", "canener", "Scanator", "reader", "reachener", "scanter", "canner", "Scanatter"], "A": ["AS", "AD", "R", "GA", "AL", "RA", "AN", "AE", "AV", "TA", "AP", "AA", "ACT", "SA", "AY", "HA", "ACC", "AU", "IA", "AB", "AC", "EA", "AGE", "BA", "Ax", "AR", "An", "As", "Ant", "This", "AT", "LA", "AST", "ALL", "API", "CA"], "B": ["Ber", "FB", "I", "R", "GB", "C", "OB", "L", "RB", "Y", "BL", "M", "S", "BO", "BI", "EB", "BB", "P", "V", "DB", "IB", "AB", "N", "BA", "G", "J", "H", "Bern", "WB", "b", "BR", "BC", "VB", "BER"], "K": ["E", "I", "R", "C", "PK", "KE", "VK", "Y", "Q", "Z", "M", "k", "UK", "S", "MN", "P", "V", "W", "HK", "KK", "OK", "NB", "N", "SK", "KR", "Key", "G", "J", "H", "KI", "KA", "X", "BC", "T", "KT", "KEY", "KS"], "ok": ["rec", "error", "iter", "success", "checks", "ack", "Ok", "rc", "exp", "sync", "ro", "exec", "k", "now", "o", "oc", "check", "full", "ks", "read", "options", "org", "info", "ob", "ko", "valid", "OK", "ook", "load", "yes", "ready", "good", "kok", "ik", "yk", "allow", "iv", "ku", "clean", "some", "res", "req", "ocr", "warn", "ck", "ops", "quick", "oks", "bar", "result", "fail", "none", "poll", "checked", "items", "og"], "i": ["zi", "iq", "iter", "I", "span", "ci", "si", "io", "ic", "u", "oi", "ai", "ei", "xi", "us", "is", "k", "ind", "ori", "x", "o", "ms", "client", "mi", "n", "cli", "mu", "index", "ib", "y", "gi", "init", "info", "ix", "page", "ui", "ri", "ki", "j", "batch", "a", "ik", "qi", "pi", "multi", "ji", "ij", "it", "print", "ii", "b", "ini", "di", "yi", "id", "li", "fi", "ti", "bi", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n\\n        int N = sc.nextInt();\\n        int[] p = new int[N];\\n\\n        for(int i=0; i<N; i++){\\n            p[i] = sc.nextInt();\\n        }\\n\\n        boolean result = check(p);\\n\\n        if(!result){\\n            for(int i=0; i<N; i++){\\n                for(int j=0; j<N; j++){\\n                    if(i == j) break;\\n                    int[] list = p.clone();\\n\\n                    int tmp = list[i];\\n                    list[i] = list[j];\\n                    list[j] = tmp;\\n                    if(check(list)){\\n                        result = true;\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n\\n        System.out.println(result ? \"YES\" : \"NO\");\\n\\n    }\\n\\n    public static boolean check(int[] list){\\n        boolean result = true;\\n\\n        for(int i=0; i<list.length-1; i++){\\n            if(list[i] > list[i+1]){\\n                result = false;\\n            }\\n        }\\n\\n        return result;\\n    }\\n}", "target": "82", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "mp", "sch", "sq", "gc", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", " Sc", "desc", "ctl", "mc", "scl", "cr", "capt", "ch", "system", "ss", "sci", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["I", "NM", "NN", "R", "NC", "C", "ND", "L", "AN", "OUT", "NO", "Z", "Num", "NT", "O", "M", "D", "Net", "NAT", "S", "Node", "F", "P", "V", "n", "NR", "Ni", "NL", "Number", "NB", "NP", "ANY", "TN", "NI", "GN", "NA", "K", "J", "NH", "NS", "X", "SN", "T", "Ns", "Sn", "NE"], "p": ["pp", "pb", "t", "pe", "exp", "part", "pro", "mp", "op", "primary", "vp", "ps", "parse", "tp", "ping", "d", "sp", "pkg", "P", "c", "n", "pid", "rep", "h", "ap", "v", "m", "q", "pl", "pers", "perm", "l", "jp", "np", "pi", "cp", "lp", "pres", "post", "g", "ip"], "i": ["io", "us", "point", "ir", "index", "php", "y", "ix", "pi", "ii", "id", "ti", " Xi", "bi", "phi", "g", "ie", "hi", "ci", "xi", "ei", "ori", "cli", "init", "ui", "uri", "ik", "qi", "multi", "chain", "ex", "ini", "ni", "um", "set", "m", "iter", "iso", "si", "ic", "sim", "inner", "eu", "is", "ind", "mi", "gi", "iat", "ji", "it", "e", "di", "ims", "zi", "iq", "iti", "I", "ami", "u", "ai", "me", "c", "entry", "im", "info", "q", "this", "ki", "ia", "ri", "ity", "ij", "li", "iu", "ip"], "result": ["region", "flag", "done", "zero", "status", "important", "profile", "direction", "debug", "response", "request", "cup", "goal", "valid", "output", "power", "process", "mask", "answer", "reason", "sign", "other", "test", "something", "complete", "condition", "know", "false", "relation", "currency", "correct", "results", "make", "su", "current", "created", "chain", "run", "ret", "number", "Result", "set", "confirmed", "draw", "report", "sequence", "success", "match", "successful", "value", "description", "present", "diff", "total", "event", "comment", "message", "stay", "mate", "date", "product", "ful", "data", "verified", "check", "term", "true", "contact", "res", "neutral", "feature", "continue", "command", "there", "point"], "j": ["note", "uni", "jac", "bj", "off", "jl", "js", "obj", "kj", "k", "out", "ind", "oj", "x", "o", "ne", "z", "sp", "uj", "n", "ge", "pt", "im", "y", "v", "s", "q", "dj", "json", "adj", "l", "pr", "aj", "jp", "jo", "jump", "ji", "ij", "it", "ot", "J", "br", "jit", "res", "e", "b", "jj", "other", "nd", "to", "str", "fr", "bi", "m", "el", "g", "ja"], "list": ["note", "ist", "sequence", "mt", "def", "pair", "join", "status", "show", "view", "t", "range", "ul", "left", "all", "map", "part", "bl", "out", "loop", "data", "add", "parent", "link", "msg", "cont", "pkg", "check", "page", "LIST", "filter", "spec", "v", "del", "local", "set", "batch", "l", "dl", "table", "lat", "print", "pool", "form", "chain", "listed", "st", "old", "ls", "dict", "null", "reason", "user", "array", "li", "row", "log", "lists", "other", "see", "block", "tree", "test"], "tmp": ["cmp", "ctx", "t", "img", "obj", "amp", "same", "mp", "node", "mut", "sp", "MP", "pkg", "prop", "attr", "needed", "emp", "orig", "prefix", "term", "perm", "prev", "table", "buff", "np", "slice", "my", "tt", "tm", "etc", "st", "old", "td", "txt", "ret", "pre", "mk", "comp", "top", "cp", "temp", "cache", "pretty", "m", "tc", "test"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\npublic class Main {\\n    public static void main(String args[]) {\\n        Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\\n        int t = 1;\\n        int n = in.nextInt();\\n        int m = in.nextInt();\\n        int a[] = new int[n];\\n        int x = 0,cnt=0,sum=0;\\n        for(int i=0;i<n;i++){\\n            a[i] = in.nextInt();\\n            sum+=a[i];\\n        }\\n        \\n        x = (int)Math.ceil(sum/(1.0*4*m));\\n        for(int i=0;i<n;i++){\\n            if(a[i]>=x) cnt++;\\n        }\\n        System.out.println(cnt>=m?\"Yes\":\"No\");\\n    }\\n}", "target": "43", "substitutes": {"in": ["din", "IN", "inn", "inner", "from", "raw", "bin", "all", "er", "is", "out", "ind", "k", "ins", "add", "std", "r", "rin", "err", "c", "source", "thin", "isin", "by", "init", "conf", "en", "info", "con", "per", " din", "l", "doc", "gin", "cin", "In", "inc", "readable", "it", "world", "input", "can", "stream", "st", "file", "ini", "rt", "null", "as", "user", "inf", "reader", "log", "get", "scan"], "t": ["ct", "at", "k", "out", "count", "type", "c", " T", "v", "q", "w", "j", "l", "ta", "it", "ot", "e", "p", "total", "rt", "dt", "T", "z", "d", "g", "ts"], "n": ["nm", "nb", "ln", "nc", "net", "mn", "out", "k", "nan", "na", "o", "no", "size", "r", "on", "len", "c", "an", "nn", "name", "y", "v", "en", "N", "j", "l", "nu", "pi", "np", "nl", "cn", "p", "sn", "ns", "nt", "nr", "num", "un", "z", "d", "ne"], "m": ["mt", "nm", "f", "bm", "mm", "M", "mn", "k", "ma", "o", "ms", "r", "mi", "c", "dm", "h", "mu", "y", "v", "man", "gm", "w", "j", "perm", "l", "mc", "p", "tm", "b", "cm", "num", "z", "d", "g"], "a": ["aa", "at", "area", "xa", "all", "A", "va", "fa", "da", "au", "na", "ab", "oa", "ao", "ba", "c", "am", "an", "ap", "y", "v", "app", "ea", "ga", "this", "sta", "ta", "ity", "ae", "aaa", "p", "b", "ca", "ata", "alpha", "as", "la", "att", "sa", "z", "eas", "ma", "ama", "ac"], "x": ["px", "xp", "f", "ax", "xx", "xt", "u", "xi", "lex", "xf", "xa", "dx", "ox", "k", "o", "c", "index", "y", "v", "xc", "ix", "w", "xe", "l", "wx", "rx", "mx", "it", "p", "xy", "ex", "tx", "X", "inx", "xs", "ux", "g"], "cnt": ["gnt", "cnz", "ecNT", "cNT", " ctr", "Count", " cct", "Cnt", "Cnd", "count", "ecct", "rcnd", "CNT", "rcnt", "csnd", " cNT", "ctr", "Cct", "rcNT", "Ctr", "crt", "Crt", " crt", " count", "csnz", "cct", "csNT", "csnt", "cnd", "gct", "gount", "Cnz", "ecrt", "ecnt", "rcnz", "gtr"], "sum": ["success", "mix", " SUM", "mass", "si", "sim", "ul", "us", "mm", "share", "all", "count", "out", "ma", "na", " summed", "ms", "add", " Sum", "size", "mess", "cum", "med", "cal", "average", "summary", "sam", "hash", "Sum", "su", "mem", "vol", "norm", "mean", "total", "cm", "hum", "um", "stack", "so", "result", "sa", "num", "temp", "cache"], "i": ["status", "io", "us", "ski", "o", "iu", "y", "ix", "pi", "ii", "gu", "yi", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "ei", "xi", "ger", "base", "ori", "client", "progress", "cli", "init", "ui", "j", "uri", "qi", "multi", "chain", "ini", "ni", "list", "set", "si", "ic", "sim", "oi", "eu", "is", "ind", "mi", "gi", "ji", "it", "di", "ims", "details", "zi", "I", "\u0438", "u", "ai", "me", "iy", "im", "v", "info", "q", "wi", "this", "ki", "batch", "ri", "ity", "ij", "PI", "cgi", "li", "point", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tvoid solve() {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint n = scan.nextInt();\\n\t\tint[] a = new int[n];\\n\t\tint[] b = new int[n];\\n\t\tint[] c = new int[n - 1];\\n\t\tfor(int i = 0; i < n; i++) a[i] = scan.nextInt();\\n\t\tfor(int i = 0; i < n; i++) b[i] = scan.nextInt();\\n\t\tfor(int i = 0; i < n - 1; i++) c[i] = scan.nextInt();\\n\t\tint out = 0;\\n\t\tfor(int i = 0; i < n - 1; i++) {\\n\t\t\tif(a[i + 1] - a[i] == 1) {\\n\t\t\t\tout += c[a[i] - 1];\\n\t\t\t}\\n\t\t\tout += b[a[i] - 1];\\n\t\t}\\n\t\tout += b[a[n - 1] - 1];\\n\t\tSystem.out.println(out);\\n\t\tscan.close();\\n\t}\\n\t\\n\tpublic static void main(String[] args) {\\n\t\tnew Main().solve();\\n\t}\\n}\\n", "target": "223", "substitutes": {"scan": ["report", "auto", "sql", "sys", "syn", "io", "get", "san", "pass", "sim", "Scan", "se", "range", "scale", "ann", "sync", "sv", "send", "all", "reach", "gate", "gc", "stat", "na", "find", "skip", "link", "parse", "conn", "r", "sur", "check", "an", "source", "read", "ser", "scroll", "info", "query", "ner", "cat", "sr", "plan", "gen", "sin", "ch", "can", "system", "p", "run", "search", "spin", "cgi", "util", "chain", " Scan", "sn", "row", "in", "see", "set", "m", "sc", "g"], "n": ["note", "nm", "nb", "ct", "t", "network", "ren", "at", "inn", "nc", "all", "net", "ll", "max", "count", "nan", "k", "na", "no", "x", "o", "ng", "names", "r", "d", "on", "len", "g", "an", "nn", "fn", "h", "name", "v", "init", "en", "dn", "q", "local", "N", "non", "j", "l", "nu", " N", "current", "np", "nl", "after", "ot", "cn", "p", "sn", "ns", "nt", "number", "num", "none", "un", "z", "ln", "m", "ne"], "a": ["art", "ar", "aa", "f", "t", "at", "u", "ai", "area", "all", "A", "da", "au", "na", "ab", "o", "data", "oa", "r", "ao", "code", "ba", "an", "am", "h", "index", "ap", "y", "app", "s", "m", "w", "ga", "ia", "j", "l", "av", "ta", "ae", "aaa", "pi", "e", "p", "ca", "as", "alpha", "la", "sa", "act", "ma", "g", "ac"], "b": ["mb", "bp", "nb", "f", "bb", "t", "u", "bc", "bin", "bis", "bl", "bf", "bg", "ab", "o", "ble", "B", "r", "fb", "g", "ba", "eb", "ib", "by", "y", "v", "bs", "ob", "s", "bo", "cb", "j", "l", "rb", "gb", "br", "e", "p", "bar", "db", "be", "bi", "z", "m", "sb"], "c": ["ci", "cos", "f", "ct", "C", "cu", "ic", "t", "u", "com", "bc", "x", "o", "fc", "z", "r", "ce", "cc", "v", "s", "lc", "cb", "l", "ctrl", "co", "crit", "e", "cr", "cn", "ch", "can", "p", "cm", "ca", "cf", "cp", "dc", "cs", "ec", "d", "m", "tc", "sc", "g", "ac"], "i": ["io", "us", "ice", "ski", "o", "iu", "y", "ix", "l", "pi", "ii", "gu", "fi", "ti", "bi", "fire", "phi", "g", "ie", "hi", "ci", "xi", "ei", "ori", "parent", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "my", "ini", "ni", "et", "ion", "iter", "iso", "si", "ic", "sim", "oi", "iri", "inner", "is", "ind", "mi", "gi", "ji", "it", "di", "to", "in", "zi", "I", "ami", "\u0438", "u", "ai", "ies", "iy", "im", "v", "info", "q", "ri", "ki", "batch", "ia", "ity", "ij", "PI", "ico", "cgi", "ios", "li", "point", "ip"], "out": ["status", "io", "off", "at", "raw", "sync", "net", "outs", "o", "conn", "msg", "index", "one", "output", "hit", "outer", "screen", "text", "pool", "append", "result", "conv", "ou", "dot", "line", "OUT", "t", "flush", "write", "console", "sum", "reset", "client", "var", "Out", "j", "print", "cmd", "ex", "ret", "log", "list", "str", "set", "format", "exit", "over", "ent", "report", "obj", "inner", "exp", "size", "r", "cont", "err", "name", "external", "it", "user", "to", "end", "ext", "in", "comment", "writer", "error", "sys", "all", "data", "std", "bit", "timeout", "check", "course", "v", "update", "batch", "res", "crit", "null", "att"]}}
{"code": "import java.util.*;\\n\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n\\n    Scanner sc = new Scanner(System.in);\\n    String ans = \"\";\\n    int N = sc.nextInt();\\n    int[] A = new int[N];\\n    for(int i = 0;i < N;i++){\\n      A[i] = sc.nextInt();\\n    }\\n    Arrays.sort(A);\\n    for(int i = 0;i < N-1;i++){\\n      if(A[i] == A[i+1]){\\n        ans = \"NO\";\\n        break;\\n      }else{\\n        ans = \"YES\";\\n      }\\n    }\\n    System.out.print(ans);\\n  }\\n}\\n", "target": "44", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "irc", " Sc", "ctl", "mc", "inc", "scl", "cr", "capt", "ch", "system", "sel", "ss", "conv", "dc", "cle", "cs", "tc", "Sc", "scan"], "ans": ["ras", "ANS", " warns", "orts", "anks", "offs", " sans", " beans", "AN", "ats", "san", "aps", " pan", "eds", "eps", "ads", "ann", "urs", "ants", "ins", " means", "uns", "outs", "orders", "helps", "aus", "ks", "an", " scans", "ians", "angs", "s", "amps", "rans", "aos", " spans", "lets", "posts", "ends", "olds", " names", "yes", "ons", " Ans", "ens", "asms", "ots", "ars", "ros", "forms", "ids", "ns", "umes", "rs", "aints", "ames", " orphans", "utters", "mas", "arms", "arts", "ents"], "N": ["I", "NN", "R", "NC", "C", "ND", "L", "AN", "Body", "Y", "Q", "Na", "NO", "Num", "NT", "Max", "O", "M", "D", "Net", "S", "B", "Node", "UN", "F", "NG", "V", "n", "P", "NR", "Ni", "NL", "NB", "NP", "TN", "NI", "GN", "NA", "K", "G", "J", "NH", "NS", "Len", "NOR", "SN", "Total", "Length", "T", "Ns", "Sn", "ALL", "NE"], "A": ["MA", "Alpha", "I", "AF", "GA", "AL", "RA", "C", "L", "AE", "AI", "AV", "App", "TA", "ARC", "M", "Ar", "AA", "AP", "The", "ACT", "SA", "HA", "ACC", "B", "What", "At", "V", "P", "ETA", "IA", "AU", "W", "AB", "AC", "EA", "AM", "a", "JA", "NA", "BA", "Answer", "AR", "PA", "An", "Av", "As", "mA", "This", "All", "RAM", "AT", "LA", "API", "CA"], "i": ["go", "zi", "iter", "ie", "sequence", "ci", "hi", "I", "iso", "ami", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "us", "ei", "me", "base", "is", "ind", "point", "ori", "client", "mi", "err", "cli", "lo", "index", "y", "im", "gi", "init", "q", "ix", "ui", "info", "ri", "ki", "j", "uri", "batch", "this", "a", "ity", "qi", "pi", "multi", "ji", "it", "my", "ii", "chain", "gu", "di", "ini", "ni", "yi", "id", "to", "li", "in", "ti", "bi", "ims", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint[] cnt = new int[26];\\n\t\t\\n\t\twhile (sc.hasNext()) {\\n\t\t\tString str = sc.nextLine();\\n\t\t\t\\n\t\t\tfor (int i = 0; i < str.length(); i++) {\\n\t\t\t\tchar c = str.charAt(i);\\n\t\t\t\t\\n\t\t\t\tif (Character.isUpperCase(c))\\n\t\t\t\t\tcnt[c - 'A']++;\\n\t\t\t\telse if (Character.isLowerCase(c))\\n\t\t\t\t\tcnt[c - 'a']++;\\n\t\t\t}\\n\t\t}\\n\t\tfor (int i = 0; i < 26; i++) {\\n\t\t\tSystem.out.printf(\"%c : %d\\n\", 'a' + i, cnt[i]);\\n\t\t}\\n\t}\\n}\\n", "target": "242", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "sync", "sh", "gc", "sq", "sch", "sub", "uc", "anc", "fc", "sec", "ys", "sp", "cc", "isc", "ser", "esc", "soc", "cl", "tc", "lc", "desc", "dec", "mc", "nl", "inc", "cr", "ch", "system", "ck", "st", "sci", "cle", "cs", "ec", "asc", "Sc", "scan"], "cnt": ["cNT", "condnd", " cct", "Cnt", "condnt", " crand", "Cpt", "coct", "condrand", " cnd", "CNT", "tcnd", " cNT", "Cct", "csct", "cont", "cfrac", "acnt", "cspt", "acpt", "tcfrac", "condfrac", "cct", "actt", "csNT", " cpt", "cott", "Ctt", "tcnt", "tcrand", "csnt", "cpt", "cnd", " cfrac", "crand", "ctt", "copt", "acct"], "str": ["mt", "ent", "iter", "status", "f", "sl", "t", "obj", "exp", "dr", "comm", "out", "data", "r", "sp", "cont", "n", "tr", "cur", "arr", "pt", "spec", "s", "cl", "Str", "STR", "j", "l", "pr", "desc", "string", "char", "enc", "vol", "res", "text", "it", "print", "br", "ch", "p", "form", "st", "dat", "txt", "nt", "fr", "list", "m", "g"], "i": ["zi", "iq", "iter", "ie", "hi", "ci", "I", "status", "si", "io", "ic", "sim", "u", "oi", "ai", "ei", "xi", "me", "base", "eu", "is", "ind", "x", "o", "z", "mi", "err", "cli", "index", "init", "im", "y", "v", "ix", "q", "ui", "gi", "ri", "ki", "j", "l", "a", "ity", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "chain", "ex", "di", "ini", "gu", "yi", "id", "to", "cgi", "li", "ti", "bi", "ims", "m", "iu", "phi", "g", "ip"], "c": ["pc", "ar", "f", "C", "ct", "cu", "ic", "u", "rc", "bc", "abc", "k", "uc", "fc", "unc", "r", "col", "cd", "cont", "cod", "code", "cur", "ce", "cc", "v", "cor", "con", "lc", "cat", "l", "arc", "a", "char", "co", "mc", "enc", "current", "cr", "ch", "p", "chain", "comp", "vc", "cf", "conv", "cp", "dc", "cs", "cache", "ec", "tc", "ac"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        // Your code here!\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        String[] abcd = br.readLine().split(\" \");\\n        int a = Integer.parseInt(abcd[0]);\\n        int b = Integer.parseInt(abcd[1]);\\n        int c = Integer.parseInt(abcd[2]);\\n        int d = Integer.parseInt(abcd[3]);\\n        \\n        int ans = Math.min(b, d) - Math.max(a, c);\\n        System.out.println(Math.max(ans, 0));\\n    }\\n}\\n", "target": "47", "substitutes": {}}
{"code": "import java.util.*;\\n\\nclass Main{\\n\tpublic static void main(String[] $){\\n\t\tScanner s=new Scanner(System.in);\\n\t\tint a=s.nextInt(),b=s.nextInt();\\n\t\tSystem.out.println((a+b)%2==0?(a+b)/2:\"IMPOSSIBLE\");\\n\t}\\n}\\n", "target": "31", "substitutes": {"s": ["sm", "qs", "utils", "sys", "sl", "ats", "sts", "sv", "gets", "aws", "is", "abs", "sq", "ses", "ins", "S", "ms", "r", "sb", "less", "h", "south", "ws", "j", "ts", "l", "sam", "gs", "fps", "search", "rs", "stats", "as", "conv", "sa", "cs", "self", "z", "d", "m", "ss", "xs", "se"], "a": ["aa", "era", "t", "aq", "at", "ai", "area", "va", "xa", "A", "ova", "eu", "au", "deb", "na", "x", "ab", "pa", "oa", "ao", "ba", "an", "ea", "aura", "ga", "eas", "ia", "sta", "ta", "ae", "aj", "aaa", "aff", "\u00e1", "ya", "qa", "apa", "aka", "ca", "alpha", "la", "as", "sa", "act", "ma", "ama", "\u00e4"], "b": ["mb", "bp", "nb", "f", "bb", "u", "bc", "bis", "abs", "now", "i", "ub", "ab", "B", "r", "fb", "c", "n", "ba", "eb", "ib", "beta", "by", "y", "v", "bs", "ob", "cb", "j", "l", "rb", "it", "e", "br", "p", "bar", "db", "to", "be", "erb", "bi", "d", "m", "sb"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tint[] a = new int[n];\\n\t\tint[] b = new int[8];\\n\t\tint r = 0, c = 0;\\n\t\tfor(int i = 0 ; i < n ; i++) a[i] = sc.nextInt();\\n\t\tfor(int i = 0 ; i < n ; i++) {\\n\t\t\tint index = a[i] / 400;\\n\t\t\tif(index == 0) b[index]++;\\n\t\t\telse if(index == 1) b[index]++;\\n\t\t\telse if(index == 2) b[index]++;\\n\t\t\telse if(index == 3) b[index]++;\\n\t\t\telse if(index == 4) b[index]++;\\n\t\t\telse if(index == 5) b[index]++;\\n\t\t\telse if(index == 6) b[index]++;\\n\t\t\telse if(index == 7) b[index]++;\\n\t\t\telse c++;\\n\t\t}\\n\t\tfor(int i = 0 ; i < 8 ; i++) {\\n\t\t\tif(b[i] != 0) r++;\\n\t\t}\\n\t\tint min = Math.max(1, r);\\n\t\tint max = 0;\\n\t\tif(min == r) max = c + r;\\n\t\telse max = c;\\n\t\tSystem.out.println(min + \" \" + max);\\n\t}\\n}\\n", "target": "94", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "anc", "fc", "sec", "sp", "cc", "isc", "esc", "spec", "cl", "lc", "irc", " Sc", "desc", "ctl", "mc", "nl", "scl", "cr", "sel", "ch", "system", "ck", "ss", "sci", "cs", "tc", "Sc", "sb", "scan"], "n": ["length", "nm", "nb", "t", "ln", "nc", "net", "count", "k", "na", "x", "o", "no", "ng", "size", "len", "nn", "name", "v", "en", "s", "q", "N", "j", "l", "nu", " N", "nl", "np", "e", "cn", "p", "sn", "ns", "nt", "ni", "nr", "num", "in", "z", "d", "m", "ne", "g"], "a": ["art", "ar", "auto", "aa", "at", "ai", "area", "va", "A", "au", "abs", "na", "ab", "o", "x", "oa", "ao", "ba", "an", "am", "ap", "s", "ga", "ia", "sta", "av", "ae", "aaa", "apa", "ca", "ata", "as", "alpha", "att", "la", "array", "sa", "ma", "ac"], "b": ["mb", "bp", "nb", "f", "pb", "back", "bb", "u", "bc", "bin", "bis", "base", "bl", "bf", "ab", "buffer", "B", "sb", "arb", "fb", "ba", "wb", "abb", "eb", "ib", "y", "v", "bs", "ob", "lib", "app", "cb", "j", "l", "rb", "buff", "aaa", "it", "gb", "bd", "br", "p", "e", "bar", "db", "be", "bi", "z", "d", "m", "g"], "r": ["ar", "R", "f", "t", "range", "u", "rc", "re", "er", "ro", "right", "k", "out", "x", "rr", "h", "v", "w", "j", "l", "mr", "rb", "rand", "res", "e", "cr", "br", "p", "rs", "rt", "nr", "row", "rd", "d", "m", "g", "sr"], "c": ["ci", "pc", "f", "cu", "C", "ct", "t", "u", "rc", "count", "gc", "k", "out", "x", "o", "fc", "cc", "h", "v", "s", "w", "lc", "cb", "l", "co", "mc", "e", "cr", "cn", "p", "cm", "ca", "cp", "dc", "cs", "z", "d", "m", "tc", "g", "ac"], "i": ["note", "status", "io", "o", "iu", "y", "ix", "load", "pi", "ii", "gu", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "ori", "client", "link", "cli", "init", "s", "ui", "j", "uri", "qi", "multi", "my", "print", "chain", "ini", "iter", "iso", "si", "ic", "sim", "oi", "iri", "is", "ind", "x", "mi", "name", "gi", "json", "ji", "it", "p", "di", "to", "in", "zi", "iq", "iti", "I", "\u0438", "u", "ai", "me", "iy", "im", "info", "q", "ri", "ki", "batch", "ity", "ij", "PI", "ios", "li", " I", "point", "ip"], "index": ["close", "note", "time", "zero", "status", "position", "scale", "port", "cycle", "read", "ix", "thread", "id", "row", "see", "display", "test", "loc", "def", "view", "loop", "no", "link", "host", "init", "small", "j", "lock", "chain", "vector", "ex", "active", "number", "list", "set", "address", "draw", "alias", "ion", "iter", "success", "level", "iso", "hex", "si", "style", "shape", "exp", "match", "gate", "is", "ind", "scope", "find", "x", "unit", "local", "stick", "diff", "total", "Index", "trace", "block", "slice", "scroll", "error", "location", "EX", "date", "instance", "pos", "all", "axis", "height", "cond", "when", "check", "context", "key", "label", "info", "search", "element", "query", "point", "se"], "min": ["sort", "span", "nm", "ax", "range", "div", "me", "mm", "part", "mn", "ma", "sub", "mint", "mi", "Min", "mid", "just", "tr", "key", "v", "MIN", "only", "small", "emin", "j", "rm", "mini", "l", "mod", "start", "rand", "lt", "diff", "minimum", "pre", "mean", "le", "mins", "id", "rel", "minute", "in", "temp", "begin", "z", "d", "m", "rain", "default"], "max": ["or", "aux", "cmp", "MAX", "huge", "cost", "ax", "div", "range", "window", "t", "re", "wrap", "scale", "exp", " Max", "Max", "right", "cross", "last", "k", "ma", "sum", "add", "copy", "x", "std", "maximum", "full", "ge", "prime", "conf", "cal", "con", "m", "grow", "power", "cat", "rest", "aj", "rand", "recent", "res", "step", "diff", "mx", "start", "norm", "chain", "gt", "mean", "total", "nd", "mad", "pad", "end", "ext", "dot", "act", "mod", "az", "cast"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        String C = sc.next();\\n        byte[] byteC = C.getBytes();\\n        byteC[0]++;\\n        String nextC = new String(byteC);\\n        \\n        System.out.println(nextC);\\n    }\\n}", "target": "150", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "syn", "sv", "rc", "nc", "bc", "asc", "sync", "sac", "sch", "sq", "gc", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "s", "lc", "desc", "mc", "scl", "cr", "ch", "system", "ss", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "C": ["SC", "CN", "I", "CHAR", "YC", "CT", "NC", "L", "EC", "CAR", "CE", "Q", "CF", "A", "M", "CS", "S", "B", "F", "P", "c", "V", "TC", "JC", "CR", "OC", "VC", "N", " c", "AC", "K", "CC", "CP", "CON", "CV", "CA", "CG", "LC", "ENC", "T", "CU", "Sc", "WC"], "byteC": ["rowc", " bytec", "bufferC", "bufferCS", "pixelC", "charS", "pixelCE", "byteCE", "pixelN", "bytesCS", "wordCS", "rowN", "byteN", "rowCE", " byteN", " byteCC", "charN", "wordCC", " byteCS", "bytesS", "bufferCC", "byteCS", "rowC", "bytesC", "bufferS", "bytesN", "byteS", "wordC", " byteCE", "charCS", "bytec", "wordc", "byteCC", "charC", "bufferN", "pixelc", "bufferc"], "nextC": ["newN", "NextE", "nextT", " nextT", "NextS", " nextJC", "newJC", "nextJC", "newS", "newT", "NextC", "nextS", " nextE", " nextN", "NextJC", "newC", " nextS", "newE", "NextT", "nextE", "nextN", "NextN"]}}
{"code": "import java.util.*;\\n\\nclass Main{\\n    public static void main(String args[]) {\\n        Scanner scan = new Scanner(System.in);\\n        int n = scan.nextInt();\\n        int k = scan.nextInt();\\n        int[] arr = new int[n];\\n        for(int i=0;i<n;i++)arr[i] = scan.nextInt();\\n        scan.close();\\n        int[] dp = new int[n+1];\\n        Arrays.fill(dp,1000000005);\\n        dp[0] = 0;\\n        for(int i= 0;i<n;i++){\\n            for(int j=1;j<=k;j++){\\n                if(i+j < n)dp[i+j] = Math.min(dp[i+j],dp[i] + Math.abs(arr[i]- arr[i+j]));\\n            }\\n        }\\n        System.out.println(dp[n-1]);\\n        }\\n}\\n", "target": "241", "substitutes": {"scan": ["sm", "trans", "report", "connect", "sql", "sys", "get", " scanner", "san", "pass", "sim", "Scan", "sv", "se", "re", "ann", "sync", "all", "send", "reach", "out", "gate", "gc", "find", "sum", "skip", "save", "parse", "link", "conn", "stat", "r", "na", "sur", "check", "an", "read", "ser", "pixel", "scroll", "conf", "info", "query", "ner", "cat", "clean", "sin", "p", "can", " Scan", "system", "ch", "search", "run", "cgi", "row", "in", "see", "set", "m", "sc", "g"], "n": ["kn", "nm", "nb", "t", "network", "ren", "inn", "ln", "nc", "all", "net", "mn", "nan", "na", "x", "o", "no", "ng", "size", "r", "on", "len", "c", "an", "nn", "fn", "index", "name", "v", "en", "dn", "N", "l", "a", "nu", " N", "nl", "np", "pi", "cn", "p", "sn", "ns", "nt", "ni", "nr", "num", "un", "z", "d", "m", "ne"], "k": ["kn", "t", "ak", "ka", "kk", "ek", "r", "sk", "ks", "c", "ke", "h", "key", "kb", "kid", "v", "q", "ko", "w", "ki", "kw", "ik", "ku", "kl", "K", "ok", "p", "ck", "kr", "mk", "d", "m", "km", "g", "tk"], "arr": ["uf", "aug", "art", "ar", "hist", "addr", "aa", "ack", "pp", "air", "ax", "img", "obj", "all", "ll", "Array", "dr", "rad", "Ar", "now", "bl", "au", "data", "ab", "arg", "par", "parse", "gr", "alph", "r", "arb", "err", "rr", "rep", "var", "app", "pl", "av", "elt", "arp", "buff", "rb", "enc", "aaa", "res", "gb", "br", "coll", "p", "dict", "dat", "ang", "att", "db", "array", "rel", "row", "str", "fr", "act", "list", "val", "attr", "loc"], "i": ["at", "us", "ir", "y", "ix", "iii", "pi", "ii", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "ori", "init", "s", "ui", "uri", "qi", "multi", "my", "ex", "ini", "m", "iter", "iso", "si", "ic", "sim", "oi", "iri", "inner", "is", "ind", "mi", "gi", "ji", "it", "e", "p", "di", "to", "ims", "zi", "iq", "iti", "I", "ami", "u", "ai", "me", "im", "v", "info", "q", "this", "ki", "batch", "ia", "ri", "ity", "ij", "li", " I", "iu", "ip"], "dp": ["def", "bps", "wd", "bp", "dd", "pb", "dep", "pp", "dq", "wp", "dr", "dk", "gp", "DP", "deb", "vp", "ps", "pd", "tp", "pm", "pkg", "df", "dm", "isp", "dj", "dl", "dh", "arp", "lp", "jp", "np", "hp", "adr", "p", "pipe", "fp", "di", "dt", "ds", "db", "dc", "cp", "d"], "j": ["ie", "ed", "bj", "ax", "off", "jl", "js", "obj", "us", "exp", "kh", "er", "fr", "oj", "job", "x", "z", "je", "sp", "err", "uj", "ge", "prop", "key", "jc", "by", "im", "y", "bs", "kid", "q", "v", "pt", "dj", "json", "aj", "jp", "jo", "jump", "ji", "ij", "J", "ph", "br", "jit", "jack", "it", "b", "jj", "other", "kj", "jas", "ne", "g", "vol", "ja"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\ttry {\\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(\\n\t\t\t\t\tSystem.in));\\n\t\t\tString line;\\n\t\t\tString[] strArray = new String[3];\\n\t\t\tboolean cntFlg = true;\\n\\n\t\t\twhile (cntFlg == true){\\n\t\t\t\t\\n\t\t\t\tline = br.readLine();\\n\t\t\t\tstrArray = line.split(\"\\\\s\");\\n\t\t\t\t\\n\t\t\t\tswitch (strArray[1].charAt(0)) {\\n\t\t\t\tcase '+':\\n\t\t\t\t\tSystem.out.println(Integer.parseInt(strArray[0])\\n\t\t\t\t\t\t\t+ Integer.parseInt(strArray[2]));\\n\t\t\t\t\tbreak;\\n\t\t\t\tcase '-':\\n\t\t\t\t\tSystem.out.println(Integer.parseInt(strArray[0])\\n\t\t\t\t\t\t\t- Integer.parseInt(strArray[2]));\\n\t\t\t\t\tbreak;\\n\t\t\t\tcase '*':\\n\t\t\t\t\tSystem.out.println(Integer.parseInt(strArray[0])\\n\t\t\t\t\t\t\t* Integer.parseInt(strArray[2]));\\n\t\t\t\t\tbreak;\\n\t\t\t\tcase '/':\\n\t\t\t\t\tSystem.out.println(Integer.parseInt(strArray[0])\\n\t\t\t\t\t\t\t/ Integer.parseInt(strArray[2]));\\n\t\t\t\t\tbreak;\\n\t\t\t\tcase '?':\\n\t\t\t\t\tcntFlg = false;\\n\t\t\t\t\tbreak;\\n\t\t\t\tdefault:\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tbr.close();\\n\t\t} catch (Exception e) {\\n\t\t\tSystem.err.println(e);\\n\t\t}\\n\t}\\n}", "target": "139", "substitutes": {"br": ["bp", "bc", "bh", "bridge", "ger", "dr", "bro", "bl", "ctr", "gr", "r", "tr", "shr", "bs", "bsp", "lr", "pl", "bt", "mr", "Br", "pr", "rb", "jp", "cr", "vr", "bd", "kr", "ch", "b", "BR", "block", "db", "be", "rel", "browser", "hr", "buf", "fr", "str", "ber", "wr", "bn"], "line": ["record", "liner", "word", "LINE", "ine", "date", "lines", "range", "ip", "re", "inline", "part", "base", "phrase", "online", "Line", "no", "link", "buffer", "r", "lin", "source", "entry", "page", "name", "eline", "l", "char", "string", "frame", "nl", "text", "sample", "e", "print", "document", "chain", "le", "file", "block", "field", "user", " Line", "row", "log", "str", "comment", "ln", "point", "cell", "message", "se"], "strArray": ["strQuery", "objTable", "listArray", "stTable", "StrHash", "stringHistory", " strHash", " strarray", "datPart", "jsonArray", "stickResponse", "StrList", " strList", " strDef", "striResponse", "attQuery", "jsonRAY", "strMap", "STRArray", " strAr", "sparray", "datAr", "objAdapter", "strResponse", "drPart", "strarray", " strHistory", "datHash", "STRQuery", "StrRAY", "stickArray", "stArray", "drarray", "listMemory", "strMemory", "striQuery", "staRAY", "objAnswer", "strRAY", "jsonHistory", "stickMemory", " strMemory", "StrArray", "STRAnswer", "striAdapter", "stAdapter", "strAdapter", "datArray", "arrAr", "stickInstance", "StrResponse", "spArray", "strPart", "stResponse", "datDef", "strAr", "strList", "spMap", "datList", "staAnswer", "strTable", "objResponse", "staArray", "drAr", "objRAY", "stickRAY", " strMap", "strAnswer", "strHistory", "stringArray", "listDef", " strInstance", "listRAY", "objArray", "stringRAY", "datInstance", " strPart", "strInstance", "arrarray", " strRAY", "strHash", "arrArray", "stickDef", "datarray", " strTable", "striArray", "spAr", "striRAY", "drArray", "strDef", "attArray", "stRAY", "attAnswer", "arrMap", "striAnswer", "STRRAY"], "cntFlg": ["cntLLgs", "cstFleg", "cCountFLgs", "cstFlgc", "cntFrgs", "cntFLeg", "cntFLg", "cntfleg", "cCountFlgs", "cntLLg", "cCountFlu", "cntflgs", "cntflgc", "cntFrg", "cCountFlg", "cCountFLgc", "cntFlu", "cntFlgs", "cntFLr", "cntFLu", "cCountFLu", "cntFLgc", "cCountFLg", "cntGlgc", "cCountFlgc", "cntLLgc", "cstfleg", "cstFlgs", "cntflr", "cCountFLr", "cntflu", "cntFlr", "cntflg", "cntFleg", "cstFlg", "cntFLgs", "cntLLu", "cntFlgc", "cstflgc", "cstflgs", "cntGlg", "cntFrgc", "cntFreg", "cCountFlr", "cntGlgs", "cntGlr", "cstflg"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner scan = new java.util.Scanner(System.in);\\n        String s = scan.next();\\n        boolean b = true;\\n        for(int i = 0; i < s.length(); i++){\\n            if(i % 2 == 0 && b){\\n                if(s.charAt(i) == 'R' || s.charAt(i) == 'U' || s.charAt(i) == 'D'){\\n                    b = true;\\n                }else{\\n                    b = false;\\n                }\\n            }else if(b){\\n                if(s.charAt(i) == 'L' || s.charAt(i) == 'U' || s.charAt(i) == 'D'){\\n                    b = true;\\n                }else{\\n                    b = false;\\n                }\\n            }\\n        }\\n        if(b){\\n            System.out.println(\"Yes\");\\n        }else{\\n            System.out.println(\"No\");\\n        }\\n    }\\n}", "target": "205", "substitutes": {"scan": ["sm", "report", "connect", "auto", "sys", "black", "san", "Scan", "sv", "se", "re", "scale", "sync", "send", "reach", "gate", "out", "stat", "find", "skip", "save", "parse", "r", "check", "an", "n", "read", "ser", "v", "scroll", "query", "ner", "sin", "nl", "ch", "can", " Scan", "system", "run", "spin", "seek", "search", "conv", "in", "set", "m", "sc", "sb"], "s": ["its", "sort", "sw", "qs", "hs", "sql", "sys", "sl", "t", "ats", "js", "sts", "sv", "strings", "is", "abs", "sq", "ins", "stat", "S", "ms", "ps", "r", "sp", "g", "less", "c", "n", "source", "h", "vs", "os", "spec", "v", "bs", "ends", "ws", "l", "string", "series", "gs", "p", "search", "rs", "ns", "ls", "stats", "xs", "ds", "parts", "conv", "news", "cs", "str", "ims", "m", "ss", "sb", "ts"], "i": ["status", "io", "us", "n", "index", "y", "ix", "pi", "ii", "gu", "id", "ti", "bi", "phi", "g", "hi", "ci", "t", "ei", "xi", "ori", "cli", "init", "ui", "j", "uri", "them", "qi", "multi", "my", "print", "ex", "ini", "m", "span", "si", "ic", "sim", "oi", "iri", "exp", "is", "ind", "x", "mi", "err", "gi", "json", "ji", "it", "p", "di", "depth", "in", "z", "slice", "I", "ami", "\u0438", "u", "ai", "me", "key", "im", "info", "q", "ri", "ki", "batch", "ia", "ij", "li", "iu", "ip"], "b": ["mb", "bool", "success", "bp", "nb", "f", "back", "bb", "t", "u", "obj", "bc", "bh", "bis", "base", "bf", "bg", "out", "bl", "ab", "enabled", "bound", "buffer", "B", "r", "body", "fb", "g", "blue", "wb", "n", "h", "eb", "ib", "y", "v", "bs", "ob", "w", "bo", "cb", "bt", "j", "l", "a", "rb", "rest", "binary", "it", "gb", "bd", "br", "p", "bar", "db", "be", "z", "d", "m", "block", "sb"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        long N = sc.nextLong();\\n\\n        for(long i = N; i < 10000000; i++) {\\n            if(isPrime(i)) {\\n                System.out.println(i);\\n                break;\\n            }\\n        }\\n\\n    }\\n    public static boolean isPrime(long N) {\\n        if(N == 1) return false;\\n        for(long i = 2; i * i <= N; i++) {\\n            if(N % i == 0) return false;\\n        }\\n        return true;\\n    }\\n}\\n", "target": "183", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "se", "sv", "rc", "nc", "bc", "asc", "sync", "tk", "sh", "sch", "sq", "gc", "cv", "uc", "sec", "sp", "c", "cc", "esc", "isc", "spec", "cl", "lc", "desc", "dec", "mc", "nl", "acc", "cr", "sel", "ch", "system", "ck", "ss", "conv", "cs", "tc", "Sc", "scan"], "N": ["CN", "I", "NM", "NN", "R", "NC", "C", "AN", "L", "Q", "NO", "Z", "Num", "NT", "O", "M", "D", "Net", "NF", "S", "B", "BN", "NG", "V", "n", "P", "NR", "CNN", "Ni", "NL", "NUM", "NB", "NP", "NV", "TN", "NI", "GN", "NA", "K", "G", "J", "NH", "H", "New", "NS", "SN", "Length", "FN", "T", "Ns", "Sn", "NE"], "i": ["io", "us", "integer", "o", "ms", "n", "index", "y", "ix", "iii", "l", "pi", "ii", "yi", "id", "ti", "bi", "phi", "asi", "hi", "ci", "f", "t", "xi", "ei", "ori", "client", "cli", "init", "Ni", "ui", "j", "uri", "qi", "multi", "print", "chain", "ini", "ni", "number", "iter", "si", "ic", "sim", "oi", "is", "x", "mi", "mu", "gi", "ji", "it", "p", "di", "to", "ims", "zi", "I", "ami", "u", "ai", "c", "h", "uli", "im", "v", "ri", "ki", "batch", "ij", "PI", "li", "iu", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    \\n    \\n    public static void main(String[] args) throws Exception {\\n        \\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        int Q = sc.nextInt();\\n        String S = sc.next();\\n        \\n        char[] buf = S.toCharArray();\\n        \\n        int[] acCnt = new int[S.length()];\\n        acCnt[0] = 0;\\n        int sumCnt = 0;\\n\\n        for (int i = 1; i < S.length(); ++i) {\\n        \\n            if ( (buf[i - 1] == 'A')  && (buf[i] == 'C') ) {\\n                ++sumCnt;\\n            }\\n            acCnt[i] = sumCnt;\\n        }\\n        \\n        for (int i = 0; i < Q; ++i) {\\n            int l = sc.nextInt() - 1;\\n            int r = sc.nextInt() - 1;\\n            int cnt = acCnt[r] - acCnt[l];\\n            System.out.println(cnt);\\n        }\\n        \\n    }\\n}\\n", "target": "52", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "ctx", "psc", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "exec", "sch", "sq", "gc", "scope", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "src", "cl", "lc", "irc", " Sc", "ctl", "desc", "ctrl", "cons", "mc", "inc", "scl", "cr", "capt", "ch", "system", "st", "ss", "sci", "conv", "dc", "ssl", "cle", "cs", "ec", "tc", "Sc", "scan"], "N": ["E", "I", "NN", "R", "NC", "C", "L", "Y", "Z", "NT", "O", "M", "D", "B", "F", "P", "V", "n", "NR", "K", "G", "J", "H", "NS", "X", "T"], "Q": ["E", "I", "R", "Qu", "C", "L", "Y", "Z", "O", "M", "D", "B", "F", "P", "V", "W", "Query", "q", "QU", "U", "MQ", "CH", "K", "G", "J", "H", "X", "IQ", "T", "Que"], "S": ["R", "FS", "C", "RS", "L", "TS", "SL", "SAN", "SS", "SU", "A", "M", "SER", "CS", "SA", "B", "F", "P", "V", "SM", "SB", "NRS", "s", "Str", "STR", "SI", "G", "Si", "SE", "H", "NS", "SP", "SN", "SAM", "T", "SQL"], "buf": ["mb", "Buffer", "uf", "iter", "cap", "length", "nb", "seq", "img", "bc", "bh", "mph", "vec", "cv", "BU", "buffer", "emb", "pkg", "arr", "bytes", "mu", "src", "bs", "cb", "axe", "rb", "buff", "BA", "fg", "mem", "brace", "br", "ch", "b", "aka", "txt", "queue", "words", "db", "conv", "Buff", "stab", "str", "ff", "bag"], "acCnt": ["acACount", "acECnt", " acECnt", "ACNpt", "acUpt", "acECcat", "acCct", "accNct", "acNnd", "acCachect", "acCnd", "accCnt", "tcCachect", "tcCrc", "acECNT", " acCrc", "acCNT", " acCNT", "acCachenc", "ACCnt", "acCount", "tcCnc", "accrc", "accnd", "accNnc", "accACount", " acECcat", "tcCnt", "ACNnt", "acDnc", "accCct", "acCacherc", "accnc", "ACCrt", "accnt", "ACCpt", "accCount", "accrt", "accACnt", "accCnd", "acECrc", "acCachent", "acTount", "acACNT", "accNnt", "acNnt", "acTnd", "acNrt", " acECrc", "acTnt", "acCpt", "acUrt", " acCcat", "acNNT", "acACnt", "acDnt", "accct", "accCNT", "accCnc", "acCrt", "acUnt", "tcCachenc", "acUNT", "acCnc", "acCcat", "accNT", "ACNNT", "ACCNT", "tcCachent", "acACnd", "accNnd", "acNnc", "ACNrt", "acNount", "accpt", "acDnd", "acTNT", "tcCct", "acNct", "acCrc", "acNrc", "accACNT", "acNpt", "acNcat", "tcCacherc", "acDct", " acECNT", "accACnd"], "sumCnt": ["sumCCNT", "sumCCnc", " sumcgt", "sumCtx", "sumctr", "sumCCgt", "sumctx", "sumFCnc", "sumCnc", "sumBtr", "sumCCnt", "sumConpt", "sumcpt", " sumcpt", "sumCCst", " sumCgt", "sumCtr", " sumcst", "sumCCtr", "sumCgt", "sumFCgt", " sumcnc", "sumFCnt", "sumBnt", " sumCnc", "sumcst", " sumctx", "sumConnt", "sumcnt", "sumBst", "sumContx", "sumCpt", "sumCst", " sumcnt", " sumCpt", "sumFCst", " sumCtr", " sumCNT", "sumcnc", " sumctr", "sumBNT", "sumCNT", " sumCst", " sumcNT", "sumcNT", " sumCtx", "sumcgt", "sumConnc"], "i": ["zi", "I", "ie", "ci", "hi", "ami", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "ei", "me", "base", "is", "ind", "ori", "o", "x", "mi", "cli", "index", "name", "y", "im", "gi", "v", "ix", "info", "ui", "init", "q", "ri", "j", "uri", "ia", "ity", "qi", "pi", "multi", "ji", "it", "ii", "gu", "ini", "di", "ni", "yi", "id", "li", "fi", "in", "ti", "bi", "list", "m", "iu", "phi", "g", "ip"], "l": ["f", "L", "sl", "t", "u", "lv", "left", "ll", "x", "d", "len", "c", "n", "h", "v", "s", "q", "lr", "pl", "lc", "j", "a", "lp", "nl", "lt", "il", "p", "b", "le", "la", "li", "rl", "z", "ln", "m", "el"], "r": ["ar", "R", "f", "ru", "t", "u", "re", "rc", "er", "dr", "rr", "c", "n", "tr", "h", "v", "q", "lr", "w", "ri", "pr", "mr", "rb", "br", "p", "b", "rs", "rt", "rel", "rl", "rd", "fr", "d", "m", "g", "sr", "vr"], "cnt": ["cnz", "cNT", "cnc", " ctr", "Cnt", "dcnz", "conNT", "Cpt", "tcnz", "CNT", " cNT", "ctr", "conpt", "contr", "Ctr", "tcnc", " cpt", "dcnc", "dcnt", "tcnt", "tcNT", "cpt", "dcNT", "Cnz", "connt", "Cnc"]}}
{"code": "\\n\\nimport java.io.BufferedReader;\\nimport java.io.BufferedWriter;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.io.OutputStreamWriter;\\nimport java.io.PrintWriter;\\nimport java.util.Arrays;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n    StringTokenizer tokenizer = null;\\n    int totalCases, testNum;\\n\\n    PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\\n\\n    void solve() throws IOException {\\n\\n    }\\n\\n    void execute() throws IOException {\\n        int k = ni();\\n        String s = ns();\\n        if (s.length() <= k) {\\n            out.println(s);\\n        } else {\\n            out.println(s.substring(0, k) + \"...\");\\n        }\\n\\n        out.close();\\n    }\\n\\n    public static void main(String[] args) throws IOException {\\n        new Main().execute();\\n    }\\n\\n    void debug(Object... os) {\\n        System.out.println(Arrays.deepToString(os));\\n    }\\n\\n    int ni() throws IOException {\\n        return Integer.parseInt(ns());\\n    }\\n\\n    long nl() throws IOException {\\n        return Long.parseLong(ns());\\n    }\\n\\n    double nd() throws IOException {\\n        return Double.parseDouble(ns());\\n    }\\n\\n    String ns() throws IOException {\\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n            tokenizer = new StringTokenizer(br.readLine());\\n        }\\n        return tokenizer.nextToken();\\n    }\\n\\n    String nline() throws IOException {\\n        tokenizer = null;\\n        return br.readLine();\\n    }\\n\\n    boolean input() throws IOException {\\n        return true;\\n    }\\n\\n}\\n", "target": "248", "substitutes": {"br": ["ran", "repl", "ber", "bp", "boot", "obj", "bh", "bridge", "dr", "bro", "bl", "gr", "r", "sp", "tr", "shr", "bs", "lr", "yr", "bt", "batch", "mr", "Br", "pr", "rb", "jp", "brace", "res", "cr", "vr", "ch", "kr", "p", "b", "BR", "pre", "browser", "rel", "hr", "buf", "fr", "bi", "rain", "wr", "bn"], "tokenizer": ["Tokenizer", "okenifer", "serialifier", "serialzer", "okenter", "tokenifer", "Tokenize", "toolifier", "tokenize", "normalister", "tunister", " tokenifier", " tokenizers", "serializer", "toolter", "okenization", " tokenter", "tokenister", "okenzer", "tokenifier", " tokenzer", "stonization", "okenifier", "toolifer", "tokenization", "tokenizers", " tokenener", " tokenization", "tunener", "serializers", " tokenifer", "stonifer", "Tokenzer", "stonizer", "tokenter", "normalizer", " tokenize", "okenizer", "Tokenifier", "okenener", "normalener", "toolister", "tunizer", "okenizers", "okenize", "tunifer", "toolener", "normalifer", "toolizer", "serialener", "Tokenizers", "stonifier", "tokenzer", "tokenener"], "totalCases": ["totalcase", " totalCase", "totalSecats", "totalCcases", "totalScase", "totalccases", "totalcases", "totalCats", "totalSeccases", "totalScats", "totalcats", "totalSecase", "totalSccases", " totalcats", " totalccases", "totalScases", " totalcases", " totalCcases", " totalCats", "totalCase", " totalcase", "totalSecases"], "testNum": ["testsCount", "testsNum", " testnum", "TestCount", "testnum", "testNo", "Testnum", "TestNum", "testsnum", " testCount", "testsNo", "testCount", " testNo", "TestNo"], "out": ["or", "writer", "error", "report", "sys", "OUT", "io", "t", "at", "flush", "obj", "display", "all", "net", "write", "console", "exec", "ins", "o", "outs", "tmp", "client", "gr", "buffer", "r", "msg", "conn", "err", "up", "n", "name", "OU", "v", "con", "aos", "output", "w", "Out", "l", "put", "outer", "lock", "table", "co", "screen", "res", "crit", "it", "print", "p", "ch", "pool", "st", "txt", "ex", "ret", "nt", "null", "rt", "to", "result", "conv", "end", "ou", "in", "log", "str", "cache", "m"], "k": ["kn", "wk", "t", "kh", "ka", "ak", "dk", "kk", "i", "x", "ek", "z", "sk", "ks", "n", "ke", "kar", "kid", "kee", "q", "ko", "w", "ki", "kw", "j", "ik", "ku", "kl", "K", "uk", "ok", "ck", "p", "mk", "num", "kj", "m", "km", "tk"], "s": ["its", "qs", "sql", "sl", "ats", "js", "sts", "sv", "se", "eps", "raw", "strings", "sol", "is", "abs", "sq", "S", "ms", "ps", "simple", "r", "sb", "sp", "less", "full", "n", "h", "ess", "y", "south", "des", "w", "ws", "l", "string", "gs", "p", "ns", "rs", "ls", "ds", "parts", "cs", "str", "ims", "ss", "g", "ts"], "os": ["ose", "sys", "js", "obs", "obj", "mot", "ols", "oss", "OS", "Os", "ins", "mos", "o", "ms", "ps", "ys", "bos", "ones", "los", "bs", "des", "aos", "oses", "oids", "otes", "ros", "res", "osi", "ops", "ns", "rs", "oos", "ls", "ds", "ios", "cs", "dos", "ts"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\npublic class Main{\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tHashMap hs = new HashMap();\\n\t\tPrintWriter ou = new PrintWriter(System.out);\\n\t\tint[] a = new int[3];\\n\t\tfor(int i = 0 ; i < 3 ; i++){\\n\t\t\ta[i] = Integer.parseInt(sc.next());\\n\t\t}\\n\t\tou.print(a[2] / a[0] * a[1] + \"\\n\");\\n\t\tou.flush();\\n\t}\\n}", "target": "4", "substitutes": {"sc": ["SC", "sm", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "gc", "sq", "sch", "sec", "sp", "c", "cc", "esc", "isc", "ser", "cl", "lc", "irc", "sr", "screen", "mc", "scl", "cr", "capt", "ch", "ss", "proc", "sci", "sche", "cle", "cs", "ec", "Sc", "scan"], "hs": [" kb", " gn", " ah", " ps", "bh", " uh", "ha", "Va", " vs", " he", " rh", " have", " af", "angs", " har", " hp", " hat", " hi", " md", "he", " hashes", "hp", " hom", " ha", "hm", " has", " nm", " dh", " ho"], "ou": ["uit", "or", "ci", "auto", "cu", "io", "ru", "whe", "lu", "u", "our", "ro", "du", "cro", "eu", "au", "out", "o", "oc", "uo", "iet", "ao", "tml", "dis", "ous", "cho", "OU", "os", "tu", "ob", "ui", "zu", "web", "bo", "oo", "put", "you", "ue", "ku", "co", "su", "oud", "ott", "ot", "oct", "oul", "ow", "ont", "og", "iu"], "a": ["aux", "aw", "zero", "aa", "at", "t", "ai", "area", "xa", "va", "A", "all", "changes", "fa", "da", "au", "sha", "na", "ab", "pa", "data", "oa", "ao", "ba", "an", "am", "c", "index", "ap", "m", "ea", "w", "ga", "eas", "each", "ia", "j", "sta", "ta", "ae", "aaa", "e", "p", "b", "ca", "ata", "as", "alpha", "att", "to", "la", "sa", "z", "act", "ma", "g", "ac"], "i": ["iter", "I", "hi", "ci", "ie", "io", "si", "ic", "sim", "u", "ai", "me", "xi", "is", "ind", "x", "o", "ms", "client", "mi", "err", "c", "n", "cli", "key", "y", "v", "im", "init", "q", "ix", "ui", "gi", "set", "j", "batch", "qi", "pi", "multi", "it", "e", "my", "ii", "chain", "gu", "ex", "di", "ini", "id", "li", "fire", "ti", "wait", "bi", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int N = scanner.nextInt();\\n\\n        int times = ((N - 1) / 111) + 1;\\n        System.out.print(times);\\n        System.out.print(times);\\n        System.out.println(times);\\n    }\\n}\\n", "target": "106", "substitutes": {"scanner": ["Scanner", "canning", "Scaner", "scanning", "Scanning", "scaner", "scanener", " scanter", "canter", "queryter", "queryner", "Scanener", " scanener", " scaner", "queryer", "queryning", "Scanter", "caner", "canener", "scanter", "canner"], "N": ["I", "NN", "NM", "R", "NC", "C", "L", "NO", "A", "Z", "NT", "M", "D", "S", "F", "P", "V", "n", "NG", "NR", "CNN", "NB", "NP", "TN", "NI", "GN", "NA", "K", "J", "NH", "H", "NS", "X", "SN", "FN", "T", "Ns"], "times": ["time", "history", "values", "events", "Times", "counter", "checks", "lines", "t", "TS", "types", "tim", "measures", "cases", "hours", "tracks", "reports", "ins", "tests", "names", "PS", "ms", "ps", "outs", "versions", "ctr", "timeout", "months", "seconds", "options", "bytes", "prime", "s", "terms", "results", "blocks", "tags", "series", "places", "imes", "stats", "pages", "steps", " Times", "cs", "windows", "reads", "TM", "ts"]}}
{"code": "import java.util.HashSet;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\t// \u5165\u529b\u5024\u306e\u53d6\u5f97\\n\t\tint N = sc.nextInt();\\n\t\tHashSet<Integer> A = new HashSet<>();\\n\t\t\\n\t\t// \u7d50\u679c\u306e\u51fa\u529b\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\tif (!A.add(sc.nextInt())) {\\n\t\t\t\tSystem.out.println(\"NO\");\\n\t\t\t\treturn;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(\"YES\");\\n\t\t\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "44", "substitutes": {"sc": ["SC", " SC", "sw", " sp", "pc", "sys", "sv", "rc", "nc", "bc", "gc", "sq", "uc", "sk", "sp", "c", " Sc", "cr", " scr", "ch", "system", "ss", "sa", "cs", "set", "Sc", " sk", "scan"]}}
{"code": "import java.io.IOException;\\nimport java.io.InputStream;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        FastScanner fs = new FastScanner();\\n        int N = fs.nextInt();\\n\\n        int ans = 0;\\n        for (int i = 1; i <= N; ++i) {\\n            int cnt = 0;\\n            for (int j = 1; j <= i; ++j) {\\n                if (i % j == 0) ++cnt;\\n            }\\n            if (cnt == 8 && i % 2 == 1) ++ans;\\n        }\\n\\n        System.out.println(ans);\\n    }\\n}\\n\\nclass FastScanner {\\n    private final InputStream in = System.in;\\n    private final byte[] buffer = new byte[1024];\\n    private int ptr = 0;\\n    private int buflen = 0;\\n\\n    private boolean hasNextByte() {\\n        if (ptr < buflen) {\\n            return true;\\n        }else{\\n            ptr = 0;\\n            try {\\n                buflen = in.read(buffer);\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            if (buflen <= 0) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\\n    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\\n\\n    public String next() {\\n        if (!hasNext()) throw new NoSuchElementException();\\n        StringBuilder sb = new StringBuilder();\\n        int b = readByte();\\n        while(isPrintableChar(b)) {\\n            sb.appendCodePoint(b);\\n            b = readByte();\\n        }\\n        return sb.toString();\\n    }\\n\\n    public long nextLong() {\\n        if (!hasNext()) throw new NoSuchElementException();\\n        long n = 0;\\n        boolean minus = false;\\n        int b = readByte();\\n        if (b == '-') {\\n            minus = true;\\n            b = readByte();\\n        }\\n        if (b < '0' || '9' < b) {\\n            throw new NumberFormatException();\\n        }\\n        while(true){\\n            if ('0' <= b && b <= '9') {\\n                n *= 10;\\n                n += b - '0';\\n            }else if(b == -1 || !isPrintableChar(b)){\\n                return minus ? -n : n;\\n            }else{\\n                throw new NumberFormatException();\\n            }\\n            b = readByte();\\n        }\\n    }\\n\\n    public int nextInt() {\\n        long nl = nextLong();\\n        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\\n        return (int) nl;\\n    }\\n\\n    public double nextDouble() { return Double.parseDouble(next());}\\n}\\n\\n\\n", "target": "85", "substitutes": {"fs": ["FS", "sys", "f", "si", "js", "sf", "irs", "bf", "gc", "ms", "ps", "fd", "fc", "Fs", "df", "ks", "vs", "fn", "os", "bs", "ws", "mr", "rys", "gs", "fps", "gb", "fp", "ns", "rs", "cf", "proc", "ls", "ds", "cs", "fm", "ss", "xs", "ts"], "N": ["I", "NN", "R", "NC", "C", "L", "Q", "NO", "Z", "Num", "NT", "M", "D", "S", "F", "P", "V", "NR", "Ni", "NB", "NP", "NI", "NA", "K", "G", "J", "Size", "H", "NS", "Len", "X", "SN", "T", "Ns", "Sn", "No"], "ans": ["ANS", "ions", "orts", "anks", "offs", "AN", "lines", "ats", "faces", "eds", "us", "ann", "ings", "nan", "ants", "ports", "ins", "names", "outs", "ms", "uns", "orders", "ks", "an", "ians", " scans", "os", "flags", "s", "results", "aces", "ons", "ens", "ots", "cons", "ations", "gs", "ows", "ates", "ops", "ns", "ls", "stats", "cs", "actions", "reads", "arts", "xs", "ents"], "i": ["zi", "ie", "I", "ci", "hi", "ami", "si", "io", "ic", "sim", "t", "oi", "ai", "xi", "me", "ei", "II", "M", "is", "k", "ind", "inst", "x", "o", "mi", "gi", "im", "y", "v", "ix", "info", "ui", "q", "json", "ki", "l", "qi", "pi", "multi", "ji", "ij", "it", "e", "ii", "p", "ini", "di", "id", "li", "ti", "bi", "ims", "m", "iu", "phi", "g", "ip"], "cnt": ["cnz", "cNT", "ncnz", " cct", "Cnt", "ctpt", "Cpt", " cond", "ctgt", "coNT", "Cond", "CNT", "cumnt", " cNT", "Cct", "cond", " cnz", "cont", "cct", "cgt", "ncct", "ctNT", " cpt", "ncpt", "ncnt", "ctnt", "cumct", "cpt", " cgt", "cumNT", "cogt", "cumond", "Cnz", "copt"], "j": ["ie", "bj", "jl", "js", "obj", "k", "oj", "job", "z", "je", "d", "uj", "jc", "y", "v", "q", "dj", "json", "bo", "l", "pr", "ju", "aj", "jp", "jump", "ji", "ij", "J", "jo", "br", "p", "jj", "ja", "other", "li", "rel", "bi", "kj", "jas", "g", "ion"], "in": ["or", "pc", "ar", "f", "din", "io", "IN", "ic", "t", "al", "inn", "inner", "from", "us", "bin", "all", "mm", "is", "out", "ind", "ins", "r", "on", "rin", "mi", "isin", "conf", "info", "con", "s", "nin", "cin", "In", "inc", "it", "input", "run", "win", "ini", "file", "as", "id", "to", "inf", "log", "m", "get"], "buffer": ["Buffer", "iter", "sequence", "length", "history", "view", "window", "display", "match", "bone", "phrase", "initial", "pointer", "button", "size", "face", "reference", "source", "read", "database", "page", "resource", "password", "device", "output", "limit", "batch", "available", "memory", "table", "buff", "screen", "binary", "mem", "store", "sample", "normal", "document", "p", "command", "queue", "bank", "paste", "bar", "template", "row", "temp", "buf", "cache", "block", "address", "library", "message"], "ptr": ["Ptr", "pert", "iter", "bp", "pc", "addr", "inter", "dep", "ctx", "pe", "pos", "th", "ped", "dr", "esp", "ind", "pointer", "expr", "ctr", "ps", "tp", "Po", "tip", "sp", "rob", "tr", "index", "prime", "pt", "src", "pl", "pers", "pend", "pr", "next", "ta", "jp", "pi", "np", "req", "push", "adr", "br", "p", "fp", "seek", "offset", "pointers", "inters", "td", "proc", "pad", "rel", "heads", "trace", "post", "address", "ts", "loc"], "buflen": [" buplenum", "bufillen", "bufden", "bufdlen", "cuclenn", "buFlen", "tufloc", "cuflen", "buFlens", " buflang", "bullens", "bullenum", "bufilens", "tuflens", "tufllen", "tuFlen", "bucllen", "buflist", " buflens", "buplenum", "buFlist", " buplens", "buclen", "bublens", "bulllen", "buFloc", "tuFllen", "bufiloc", " buplang", "buplen", "tuFloc", "buflength", "bufllen", "buplens", "tuflen", " buflength", " buflenum", "cuclen", "cucllen", "bublength", "buFlenn", " buplen", "bufdist", "buflang", "bufdenn", "bullen", "bublang", "bullength", "buluenum", "bufloc", "buFllen", "buluens", "cuflist", "buluen", "buflenum", "bulloc", "buplang", "buflens", "tuFlens", "cuclist", "buclist", "cufllen", "buluength", "cuflenn", "buplength", "bublen", "buflenn", "buclenn", " buplength", "bufilen", "bullang"], "c": ["ci", "f", "ct", "C", "cu", "t", "u", "rc", "bc", "fac", "count", "k", "x", "ctr", "uc", "fc", "cd", "category", "cont", "code", "cc", "ce", "cur", "v", "con", "w", "lc", "cb", "l", "dec", "a", "char", "enc", "e", "cr", "ch", "p", "cm", "ca", "cf", "dc", "cp", "cs", "ec", "d", "m", "unc", "g", "ac"], "sb": ["mb", "bp", "sg", "nb", "pb", "bj", "bb", "sf", "sv", "bh", "bg", "bf", "ub", "sq", "rob", "wb", "eb", "zb", "lb", "kb", "ib", "SB", "bs", "ob", "bsp", "cb", "bt", "sbm", "rb", "buff", "xb", "gb", "gob", "erb", "sa", "ssl", "lp"], "b": ["mb", "bp", "nb", "f", "pb", "back", "bb", "t", "u", "bc", "bin", "base", "bis", "bf", "bg", "bound", "bl", "o", "ab", "B", "emb", "r", "body", "fb", "g", "ba", "wb", "eb", "ib", "beta", "y", "v", "bs", "ob", "bo", "cb", "bt", "l", "a", "rb", "buff", "binary", "gb", "bd", "br", "ch", "p", "e", "bar", "db", "be", "bi", "z", "d", "reb"], "n": ["nb", "syn", "t", "mn", "out", "len", "an", "nn", "fn", "pn", "w", "l", "nu", "cn", "p", "sn", "ns", "nt", "nr", "z", "d", "m", "ne"], "minus": ["nos", "zero", "cos", "little", "de", "div", "doesn", "foo", "bra", "butt", "axis", "bis", "tie", "plus", "no", "danger", "odd", "neg", "seconds", "partial", "lo", "beta", "min", "second", "terms", "small", "mini", "some", "bot", "dec", "negative", "mod", "desc", "meta", "none", "dot", "sign", "nom", "digit", "bad", "pot"]}}
{"code": "import java.io.IOException;\\nimport java.util.Scanner;\\n\\n/**\\n * \u9078\u629e\u30bd\u30fc\u30c8\\n * \\n *\\n */\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tScanner s = new Scanner(System.in);\\n\\n\t\tint n = s.nextInt();\\n\t\t\\n\t\tint[] arr = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tarr[i] = s.nextInt();\\n\t\t}\\n\t\t\\n\t\tselectionSort(arr, n);\\n\t\t\\n\t}\\n\t\\n\tpublic static void selectionSort(int[] arr, int n) {\\n\t\tint count = 0;\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tint minj = i;\\n\t\t\tfor (int j = i; j < n; j++) {\\n\t\t\t\tif (arr[j] < arr[minj]) {\\n\t\t\t\t\tminj = j;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tif (i != minj) {\\n\t\t\t\tcount++;\\n\t\t\t}\\n\t\t\tint tmp = arr[i];\\n\t\t\tarr[i] = arr[minj];\\n\t\t\tarr[minj] = tmp;\\n\t\t}\\n\t\tprintArray(arr);\\n\t\tSystem.out.println(count);\\n\t}\\n\t\\n\tpublic static void printArray(int[] arr) {\\n\t\tString ans = \"\";\\n\t\tfor (int i = 0; i < arr.length; i++) {\\n\t\t\tans += arr[i] + \" \";\\n\t\t}\\n\t\tSystem.out.println(ans.trim());\\n\t}\\n}\\n", "target": "199", "substitutes": {"s": ["sm", "es", "hs", "sys", "serv", "ats", "js", "sts", "sv", "gets", "aws", "sol", "bis", "is", "sq", "ses", "ins", "S", "ms", "ps", "ys", "r", "less", "g", "c", "h", "os", "y", "v", "ws", "ts", "l", "sam", "gs", "p", "b", "ns", "rs", "ls", "as", "xs", "ds", "ssl", "sa", "cs", "m", "ss", "sb", "se"], "n": ["nm", "nb", "t", "network", "ln", "nc", "all", "net", "ll", "comm", "mn", "k", "nan", "na", "x", "o", "no", "ng", "out", "size", "r", "on", "len", "c", "an", "nn", "name", "y", "v", "en", "q", "N", "l", "nu", " N", "nl", "np", "cn", "p", "sn", "ns", "nt", "ni", "number", "num", "in", "un", "z", "d", "m", "ne"], "arr": ["repl", "mb", "uf", "Array", "Ar", "bl", "expr", "parse", "alph", "emb", "msg", "cur", "ix", "load", "arp", "rest", "enc", "compl", "resp", "dat", "agg", "row", "align", "hist", "map", "dr", "au", "inst", "vec", "add", "gr", "var", "del", "pl", "ag", "ars", "vol", "br", "db", "rel", "buf", "list", "str", "ARR", "art", "addr", "ear", "obj", "ll", "ind", "r", "arb", "err", "rr", "tr", "ev", "dec", "buff", "aaa", "req", "frac", "nt", "vals", "fr", "act", "val", "attr", "iq", "ar", "ray", "pp", "img", "js", "ict", "now", "ab", "rep", "play", "app", "adj", "batch", "pr", "av", "elt", "deg", "rar", "ij", "coll", "dict", "rs", "att", "array"], "i": ["status", "io", "us", "integer", "umi", "o", "ir", "index", "php", "y", "ix", "iii", "l", "pi", "series", "ii", "id", "any", "fi", "ti", "bi", "phi", "ie", "hi", "ci", "f", "t", "xi", "ei", "ori", "client", "cli", "init", "ui", "remote", "uri", "qi", "multi", "my", "chain", "jj", "ex", "ini", "m", "ion", "iter", "iso", "si", "ic", "sim", "iri", "is", "ind", "x", "mi", "name", "gi", "ji", "it", "e", "p", "di", "in", "ims", "zi", "iq", "iti", "I", "ami", "\u0438", "u", "ai", "me", "c", "entry", "key", "im", "v", "info", "q", "wi", "this", "ki", "batch", "ri", "ia", "ij", "li", "iu", "ip"], "count": ["found", "report", "length", "counter", "nb", "Count", "const", "ct", "ctx", "collection", "hold", "max", "gc", "now", "ind", "sum", "find", "add", "ctr", "cond", "size", "cd", "must", "cont", "err", "check", "c", "cc", "code", "index", "ount", "conf", "consider", "cat", "force", "amount", "acc", "coll", "resp", "total", "result", "nt", "number", "num", "trace", "list", "z", "cache", "follow", "cast", "call"], "minj": ["smallj", "memberjs", "mirjs", "lowerjs", " ming", "MINl", "minjs", "mintjs", "lowerj", "mirjp", "loweri", " minJ", "minimuml", "minl", "mirj", "minja", " minreq", "smallz", "minsj", "MINji", " minz", "minimumz", "mitreq", "smallJ", "minimumi", "lowerja", "smallg", "minji", "memberja", "minimumj", "MINj", "minz", "minreq", "minimumja", "minjp", "mintjp", "Mini", " minji", "minti", "mini", "minsja", "minimumJ", "mirreq", "minsji", "ming", "memberji", "mitji", "Minjs", "minimumjp", "memjs", "minJ", "mirl", "memberj", "mirji", "memj", "miri", "mirja", "Minj", "memja", "memji", "mintj", "minimumji", "MINjp", " mini", "minimumg", "Minjp", "miti", "minsjs", "minimumjs", "mitj"], "j": ["jac", "f", "bj", "zone", "Ja", "off", "ax", "js", "at", "obj", "u", "jl", "kj", "k", "oj", "x", "o", "job", "parent", "r", "uj", "false", "ge", "prop", "by", "pt", "y", "im", "v", "jc", "q", "ix", "dj", "json", "l", "pr", "bot", "aj", "jp", "jo", "jump", "ji", "ph", "ij", "ot", "br", "it", "e", "jit", "J", "b", "jj", "ja", "jet", "other", "z", "m", "block", "g", "ion"], "tmp": ["mmm", "cmp", "clip", "nb", "ctx", "t", "img", "obj", "amp", "mm", "mp", "mut", "timeout", "sp", "MP", "pkg", "qq", "attr", "dirty", "emp", "tc", "gm", "prefix", "term", "perm", "my", "tt", "xy", "etc", "pre", "jj", "td", "txt", "ret", "mk", "db", "yy", "temp", "m", "tf", "test"], "ans": ["ras", "ran", "ANS", "es", "orts", "anks", "rets", "ats", "ums", "eps", "ads", "ann", "urs", "ols", "ants", "ins", " means", "outs", "prints", "ms", "uns", "ps", "aus", "acs", "ks", "an", "vs", "angs", "fts", "rus", "os", "amps", "rans", "posts", "ons", "ens", "ars", "vers", "ros", "ows", "can", "ns", "rs", "ls", "as", "ds", "vals", "ents", "cs", "arts", "xs", "ts"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.FileNotFoundException;\\nimport java.io.FileReader;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.InputStreamReader;\\nimport java.util.*;\\n\\npublic class Main{\\n  static String YES = \"Yes\", NO= \"No\";\\n  public static void main(String[] args) throws IOException {\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt(), count = 0;\\n    for(int i=0; i<n; i++){\\n      if(sc.nextInt() == sc.nextInt()){\\n        if(++count == 3){\\n          System.out.println(YES);\\n          return;\\n        }\\n      }\\n      else{\\n        count =0;\\n      }\\n    }\\n    System.out.println(NO);\\n  }\\n\\n  static class Scanner {\\n    StringTokenizer st;\\n    BufferedReader br;\\n\\n    public Scanner(InputStream s) {\\n      br = new BufferedReader(new InputStreamReader(s));\\n    }\\n\\n    public Scanner(FileReader s) throws FileNotFoundException {\\n      br = new BufferedReader(s);\\n    }\\n\\n    public String next() throws IOException {\\n      while (st == null || !st.hasMoreTokens())\\n        st = new StringTokenizer(br.readLine());\\n      return st.nextToken();\\n    }\\n\\n    public int nextInt() throws IOException {\\n      return Integer.parseInt(next());\\n    }\\n\\n    public long nextLong() throws IOException {\\n      return Long.parseLong(next());\\n    }\\n\\n    public String nextLine() throws IOException {\\n      return br.readLine();\\n    }\\n\\n    public double nextDouble() throws IOException {\\n      return Double.parseDouble(next());\\n    }\\n\\n    public boolean ready() throws IOException {\\n      return br.ready();\\n    }\\n  }\\n}", "target": "215", "substitutes": {"YES": ["XX", "VO", "EL", "OUT", "Yes", "Y", "SU", "POS", "NULL", "CHECK", "GREEN", "SA", "US", "ONE", "USE", "FAULT", "WS", "NR", "STDOUT", "PRES", "OK", " yes", "N", " Yes", "ANY", "TON", "yes", "INFO", "THIS", "SO", "NAME", "ON", "MS", "WHAT", "UX", "WIN", "YOU", "DATA", "ULL", "BS", "NEWS", "NOW"], "NO": ["None", "VO", "RO", "NOTE", "POS", "KEN", "O", "no", "MO", "DO", "ONE", "MAL", "FAULT", "UN", "NR", "NK", "NUM", "OTO", "ERROR", "OK", "N", "OTHER", "NEW", "NA", "SO", "NS", "BY", "NOR", "No", "KO", "NOT", "NE", "NOW", "PO"], "sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "si", "ic", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sac", "sh", "sch", "sq", "gc", "sk", "sp", "c", "cc", "cur", "isc", "esc", "src", "cl", "lc", " Sc", "desc", "mc", "nl", "scl", "cr", "ch", "ck", "rs", "cgi", "ss", "proc", "sci", "dc", "cs", "ec", "tc", "Sc", "sb"], "n": ["nm", "nb", "t", "ln", "nc", "net", "mn", "nan", "na", "no", "o", "ng", "c", "nn", "nor", "gn", "Ni", "N", "l", "nu", "np", "nl", "p", "sn", "ns", "nd", "nt", "nw", "number", "num", "z", "d", "m", "ne"], "count": ["found", "flag", "length", "trust", "nb", "counter", "Count", "ct", "hold", "last", "ind", "loop", "sum", "find", "reset", "ctr", "cond", "stat", "cd", "size", "z", "add", "cycle", "cont", "check", "c", "code", "index", "ount", "limit", "batch", "next", "force", "rand", "thread", "amount", "print", "total", "nt", "number", "num", "list", "cache", "draw", "test", "call"], "i": ["iq", "mill", "I", "ie", "ci", "f", "si", "ic", "sim", "u", "ai", "me", "us", " x", "is", "ind", "x", "o", "ms", "mi", "err", "c", "index", "im", "init", "y", "q", "ix", "ui", "ki", "j", "batch", "qi", "pi", "multi", "my", "it", "ii", "p", "ex", "ini", "di", "id", "li", " ii", "in", "ti", "m", "iu", "phi", "ip"], "st": ["stable", "mt", "ist", "sw", "est", "ft", "sth", "sty", "usr", "const", "storage", "ct", "sl", "t", "xt", "th", "sts", "sv", "irst", "sh", "fr", "inst", "stat", "ste", "stri", "std", "must", "r", "z", "sp", "stage", "ust", " superst", " ss", "tr", "ut", "cl", "St", "bt", "l", "sta", "rest", "start", "stop", "step", " St", "it", "ch", "sn", "stream", "ST", "nd", "nt", "rt", "ss", "so", "str", "set", "et", "sb", "se", "ost"], "br": ["or", "mt", "bp", "bre", "obj", "bm", "bc", "bh", "bridge", "dr", "bro", "bl", "ctr", "gr", "r", "sp", "ba", "tr", "shr", "bs", "bsp", "yr", "lr", "bo", "bt", "mr", "Br", "pr", "sr", "next", "rb", "jp", "brace", "bd", "cr", "ch", "kr", "b", "BR", "ibr", "browser", "rel", "ptr", "hr", "buf", "fr", "str", "ber", "sb", "wr", "bn"], "s": ["its", "es", "qs", "fs", "sys", "scripts", "ats", "t", "js", "sts", "gets", "eds", "eps", "services", "ies", "sv", "abs", "ses", "ins", "ms", "ps", "S", "ys", "r", "sp", "g", "ves", "c", "h", "os", "ges", "sets", "src", "bs", "w", "ws", "a", "gs", "ches", "p", "ids", "ns", "rs", "b", "ers", "ls", "ds", "cs", "ims", "ss", "xs", "ts"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n\tScanner sc = new Scanner(System.in);\\n\tint x = sc.nextInt();\\n\tint result = 0;;\\n\tboolean is = true;\\n\tif (x == 2 || x == 3) {\\n\t    is = false;\\n\t    result = x;\\n\t    System.out.print(result);\\n\t}\\n\twhile (is) {\\n\t    if (x % 2 != 0) {\\n\t\tfor (int i=3; i<x; i++) {\\n\t\t    if (x % i == 0) {\\n\t\t\tbreak;\\n\t\t    }\\n\t\t    if (i == x-1) {\\n\t\t\tis = false;\\n\t\t\tresult = x;\\n\t\t\tSystem.out.print(result);\\n\t\t\tis = false;\\n\t\t    }\\n\t\t}\\n\t    }\\n\t    x++;\\n\t}\\n    }\\n}\\n", "target": "183", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "out", "sq", "gc", "sub", "uc", "ng", "sec", "sp", "c", "cc", "esc", "isc", "ser", "cl", "lc", "desc", "wx", "rx", "mc", "scl", "cr", "sel", "ch", "system", "ss", "proc", "conv", "cs", "ec", "tc", "Sc", "sb", "scan"], "x": ["fx", "xml", "xa", "ox", "expr", "n", "index", "php", "y", "ix", "con", "w", "xe", "l", "tx", "any", "num", "row", "xxx", "g", "f", "ct", "t", "xx", "content", "xi", "max", "out", "j", "create", "rx", "co", "chain", "ex", "m", "length", "px", "history", "hex", "xt", "lex", "exp", "xf", "ord", "name", "xc", "value", "wx", "lat", "e", "p", "xy", "X", "to", "wait", "z", "message", "xs", "xp", "xd", "ctx", "ax", "window", "u", "dx", "check", "c", "full", "h", "v", "batch", "xes", "inx", "checked"], "result": ["root", "error", "report", "sequence", "success", "def", "done", "status", "date", "sex", "folder", "RESULTS", "complete", "integer", "match", "transform", "params", "message", "response", "score", "successful", "duration", "false", "currency", "function", "goal", "prefix", "results", "output", "valid", "term", "power", "true", "summary", "process", "make", "su", "res", "diff", "after", "feature", "continue", "chain", "search", "command", "ret", "reason", "proc", "Result", "number", "comment", "block", "draw", "test"], "is": ["or", "its", "ism", "ist", "es", "sim", "does", "enable", "ris", "tis", "has", "iss", "Is", "ims", "bis", " Is", "ish", "ins", "ms", "ps", " cis", "are", "isi", "isp", "isin", "isc", " indis", "os", "isl", "im", "isf", "bs", "vs", "ends", "IS", "vis", " iss", "isa", "ik", " os", "rest", " vis", "res", "bits", "it", " ms", "ais", "lis", "ops", "ists", " has", "ls", "as", "parts", "any", " stats", " it", " isn", " im", "iris", " IS"], "i": ["zi", "iter", "I", "hi", "ci", "span", "ie", "f", "\u0438", "si", "ic", "sim", "ai", "ei", "us", "me", "inner", "xi", "base", "k", "ind", "ori", "o", "mi", "cli", "mu", "index", "gi", "im", "y", "init", "ix", "v", "ui", "ri", "ki", "j", "l", "qi", "pi", "multi", "ij", "it", "ii", "p", " di", "chain", "ini", "di", "ni", "li", "fi", "ti", "bi", "d", "m", "iu", "phi", "slice", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n  public static void main(String args[]){\\n    Scanner sc = new Scanner(System.in);\\n    \\n    int n = sc.nextInt();\\n    boolean isPrime = false;\\n    \\n    for(int i = n; !isPrime; i++){\\n      boolean flg = true;\\n      \\n      for(int j = 2; flg && j <= Math.sqrt(n); j++){\\n        if(i % j == 0){\\n          flg = false;\\n        }\\n      }\\n      \\n      if(flg){\\n        System.out.println(i);\\n        isPrime = true;\\n      }\\n    }\\n  }\\n}", "target": "183", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "se", "sv", "Scan", "nc", "bc", "asc", "sync", "rc", "sch", "sq", "gc", "out", "sub", "uc", "sp", "c", "cc", "isc", "esc", "ser", "src", "cl", "lc", "ner", "mc", "nl", "scl", "cr", "sel", "ch", "system", "txt", "ss", "conv", "cle", "cs", "tc", "Sc", "g", "scan"], "n": ["nm", "nb", "t", "u", "ln", "net", "mn", "nan", "na", "x", "o", "ng", "size", "r", "c", "nn", "y", "gn", "s", "q", "N", "l", "nu", " N", "np", "nl", "pi", "cn", "p", "sn", "ns", "total", "nt", "ni", "nw", "nr", "num", "number", "d", "m", "ne", "g"], "i": ["zi", "iti", "I", "iter", "ci", "hi", "ami", "f", "si", "ic", "iri", "ai", "xi", "inner", "ei", "integer", "is", "ind", "x", "mi", "key", "index", "y", "im", "gi", "info", "ix", "ui", "ri", "ki", "l", "ik", "qi", "pi", "ji", "ij", "it", "print", "ii", "p", "ini", "di", "ni", "yi", "id", "to", "li", "number", "in", "ti", "bi", "m", "iu", "phi", "ip"], "isPrime": ["IsPub", "isRoot", "isaChance", " isChance", "ISUnique", "IsPrime", "isoRoot", "ISprime", "isoprime", "ISChance", "isaUnique", "IsRoot", "isChance", " isprime", " isRoot", "ISRoot", "ISPrime", "isUnique", " isPub", "Isprime", "isoPub", "isPub", "isoPrime", "isaPrime", "isprime", "isaprime", " isUnique"], "j": ["jac", "bj", "off", "jl", "js", "div", "obj", "k", "out", "ind", "oj", "o", "z", " dj", "err", "uj", "ge", "key", "jc", "prime", "y", "v", "q", "state", "dj", "json", "bo", "adj", "l", "aj", "jp", "jump", "ji", "ij", "J", "jo", "br", "jit", "step", "p", "b", "jj", "ja", "other", "bi", "kj", "d", "m", "g", "fr"], "flg": ["blj", "Flgs", "Flbg", "flog", "Flog", " flog", "flgs", "boolt", "vlog", "bogc", "Flj", "folp", "bog", "blgc", "folbg", "bosg", "flp", "filbg", " flt", "boolgg", "Flp", " flj", " flgg", "vlg", "boolic", " flgc", "vlgs", "filg", "lugg", "folg", "lug", "filgu", "flj", " flic", "flgg", "folgu", "blsg", "flgu", "boolg", "blg", "Flg", "flsg", "Flgu", "vlj", "lut", "boj", "luic", "flt", "flbg", " flgs", "flgc", " flsg", "filp", "flic"]}}
{"code": "import java.util.*;\\n\\npublic class Main\\n{\\n\tpublic static void main(String args[])\\n\t{\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tint a,b,c;\\n\t\ta=sc.nextInt();\\n\t\tb=sc.nextInt();\\n\t\tc=sc.nextInt();\\n\t\tif(a>b+c)\\n\t\t{\\n\t\t\tSystem.out.println(\"0\");\\n\t\t}\\n\t\telse\\n\t\t{\\n\t\t\tSystem.out.println(Math.abs(b+c-a));\\n\t\t}\\n\t}\\n}", "target": "45", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "sec", "sp", "cc", "isc", "esc", "cl", "ko", "lc", "ctl", "ctrl", "mc", "inc", "scl", "cr", "sel", "ch", "system", "ck", "ss", "sci", "conv", "sa", "dc", "cle", "cs", "tc", "Sc", "scan"], "a": ["ar", "aa", "f", "era", "t", "at", "al", "aq", "ai", "u", "from", "area", "A", "ak", "au", "i", "ab", "add", "pa", "ao", "act", "an", "am", "ba", "h", "y", "app", "m", "ea", "ace", "eas", "ia", "sta", "l", "ta", "aj", "ae", "aaa", "aff", "af", "\u00e1", "e", "apa", "p", "qa", "ca", "alpha", "la", "att", "as", "sa", "z", "d", "ma", "ac"], "b": ["or", "mb", "bp", "nb", "back", "bb", "bc", "bin", "base", "bis", "bf", "i", "bound", "ab", "ble", "B", "body", "fb", "rob", "ba", "wb", "eb", "ib", "by", "beta", "v", "bs", "ob", "bo", "cb", "j", "l", "rb", "it", "gb", "br", "big", "bar", "db", "be", "reb", "erb", "bi", "z", "bu", "sb"], "c": ["ci", "cos", "f", "C", "cu", "ct", "div", "com", "rc", "nc", "bc", "abc", "gc", "anc", "cod", "fc", "cd", "ce", "cc", "n", "cur", "v", "conf", "cut", "con", "lc", "cb", "l", "co", "mc", "crit", "e", "cr", "ch", "chain", "etc", "cm", "ca", "cf", "dc", "cp", "cs", "cache", "ec", "d", "m", "tc", "ac"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.io.OutputStreamWriter;\\nimport java.io.PrintWriter;\\nimport java.util.Arrays;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n    static PrintWriter out;\\n    static CF_Reader in;\\n\\n    public static void main(String[] args) throws IOException {\\n        out = new PrintWriter(new OutputStreamWriter(System.out));\\n        in = new CF_Reader();\\n\\n        long n = in.longNext();\\n        long k = in.longNext();\\n        out.println(solve(n, k));\\n\\n        out.close();\\n    }\\n\\n    static long solve(long n, long k) throws IOException {\\n        if (k >= n) return 0;\\n        long[] monsterHealths = in.nextLongArray((int) n);\\n        Arrays.sort(monsterHealths);\\n        long total = 0;\\n        for (int i = 0; i < (n - k); i++) {\\n            total += monsterHealths[i];\\n        }\\n        return total;\\n    }\\n\\n    static class CF_Reader {\\n        BufferedReader br;\\n        StringTokenizer st;\\n\\n        public CF_Reader() throws IOException {\\n            br = new BufferedReader(new InputStreamReader(System.in));\\n        }\\n\\n        String next() throws IOException {\\n            while (st == null || !st.hasMoreTokens())\\n                st = new StringTokenizer(br.readLine().trim());\\n            return st.nextToken();\\n        }\\n\\n        long longNext() throws IOException {\\n            return Long.parseLong(next());\\n        }\\n\\n        int intNext() throws IOException {\\n            return Integer.parseInt(next());\\n        }\\n\\n        double doubleNext() throws IOException {\\n            return Double.parseDouble(next());\\n        }\\n\\n        char charNext() throws IOException {\\n            return next().charAt(0);\\n        }\\n\\n        public int[] nextIntArray(final int n) throws IOException {\\n            final int[] a = new int[n];\\n            for (int i = 0; i < n; i++)\\n                a[i] = intNext();\\n            return a;\\n        }\\n\\n        public long[] nextLongArray(final int n) throws IOException {\\n            final long[] a = new long[n];\\n            for (int i = 0; i < n; i++)\\n                a[i] = longNext();\\n            return a;\\n        }\\n\\n        String line() throws IOException {\\n            return br.readLine().trim();\\n        }\\n    }\\n}\\n", "target": "230", "substitutes": {"out": ["writer", "report", "sys", "OUT", "io", "t", "at", "obj", "net", "write", "gc", "ins", "o", "outs", "copy", "client", "std", "conn", "r", "err", "up", "c", "os", "OU", "name", "s", "con", "aos", "output", "w", "Out", "j", "l", "outer", "put", "co", "res", "it", "print", "ot", "input", "p", "can", "pool", "cmd", "b", "tx", "file", "result", "nt", "null", "to", "conv", "ou", "log", "pretty", "str", "d", "cache"], "in": ["or", "inside", "ar", "din", "IN", "t", "at", "inn", "inner", "from", "mm", "bin", "all", "raw", "ain", "ind", "ins", "is", "o", "add", "r", "rin", "up", "c", "lin", "h", "isin", "v", "init", "en", "con", "local", "nin", "query", "l", "gin", "doc", "asin", "cin", "rest", "mc", "In", "inc", "it", "il", "input", "p", "pin", "old", "b", "stream", "ini", "rt", "null", "as", "id", "inf", "reader", "str", "log", "m"], "n": ["note", "nm", "nb", "t", "u", "nc", "net", "ll", "mn", "nan", "na", "no", "o", "x", "ng", "conn", "size", "names", "d", "r", "on", "len", "g", "c", "an", "nn", "fn", "h", "count", "nor", "name", "v", "gn", "en", "dn", "y", "s", "w", "N", "j", "l", "nu", "np", "nl", "it", "cn", "p", "ok", "sn", "b", "ns", "nt", "nw", "number", "nr", "num", "un", "z", "ln", "m", "ne"], "k": ["kn", "wk", "t", "kan", "ak", "kh", "ka", "dk", "kk", "unk", "o", "kat", "ek", "z", "sk", "ks", "kick", "ke", "c", "key", "kb", "kid", "kind", "q", "ko", "ki", "kw", "j", "kok", "ik", "ku", "kl", "K", "uk", "ok", "ck", "p", "kr", "mk", "num", "kj", "m", "km", "g", "tk"], "monsterHealths": ["monsterDeathts", "monsterALTHses", "monsterViewys", "hogHealthses", "minecraftHealths", "monsterHealthses", "monsterSpawnses", "monsterSpawns", "monsteroothy", "monsterHealthes", "minecraftHealthiths", "monsterDeathy", "monsterAlertins", "monsterSpawnls", "monsteroothins", "monsterCountiths", "monsterCounts", "monsterCountxs", "animalHealthy", "monsterHealthiths", "monsterHealthins", "monsterDeathins", "minecraftShieldiths", "minecraftShields", "monsterSpawnts", "monsterDeaths", "monsterALTHs", "monsterALTHts", "animalAlertes", "monsterViews", "monsterAlertes", "hogSpawnls", "monsterHealthxs", "monsterShieldxs", "hogHealthts", "monsterHealthys", "monsterViewxs", "monsteroothes", "minecraftShieldys", "monsterDeathses", "monsterALTHls", "hogSpawns", "minecraftHealthys", "monsterAlerty", "animalHealths", "minecraftShieldxs", "monsterooths", "animalAlerty", "hogSpawnses", "monsterHealthy", "hogHealthls", "animalHealthins", "hogSpawnts", "monsterHealthls", "monsterCountys", "monsterHealthts", "monsterDeathls", "monsterDeathes", "animalHealthes", "animalAlertins", "monsterShieldiths", "hogHealths", "animalAlerts", "monsterShieldys", "minecraftHealthxs", "monsterAlerts", "monsterViewiths", "monsterShields"], "total": ["note", "ent", "sequence", "length", "basic", "huge", "relative", "otal", "black", "translation", "t", "latest", "complete", "all", "max", "human", "free", "base", "count", "initial", " Total", "ful", "no", "sum", "size", "eta", "full", "database", "equal", "goal", "needed", "valid", "serial", "unique", "summary", "available", "current", "normal", "system", "result", "balance", "template", "Total", " totals", "num", "checked", "number", "confirmed", "oat", "shared", "OTAL", "quant", "real"], "i": ["zi", "iter", "I", "hi", "ci", "ie", "ami", "\u0438", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "ei", "us", "ski", "is", "ind", "o", "x", "z", "mi", "iu", "cli", "im", "y", "gi", "wi", "ix", "MI", "ui", "q", "ri", "ki", "j", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "PI", "ico", "ex", "ini", "di", "li", "fire", "ti", "bi", "ims", "m", "point", "phi", "ip"], "br": ["bp", "bre", "bm", "bc", "bh", "bridge", "bra", "dr", "bro", "bl", "stat", "ctr", "gr", "r", "sp", "tr", "shr", "abl", "bs", "bsp", "lr", "bt", "mr", "Br", "pr", "rb", "rain", "bd", "cr", "ch", "kr", "BR", "b", "txt", "browser", "hr", "buf", "fr", "str", "Tr", "ber", "sb", "wr", "vr"], "st": ["stable", "sm", "mt", "ist", "sw", "est", "sth", "sty", "const", "ct", "sl", "t", "th", "sts", "dr", "irst", "sh", "bl", "stat", "inst", "ste", "stri", "std", "must", "r", "sp", "ust", " superst", "tr", "h", "ut", "cl", "s", "St", "bt", "l", "rest", "start", "step", "it", "cr", "sn", "stream", "ST", "nd", "nt", "rt", "stack", "be", "rd", "str", "fr", "et", "ss", "sb", "se", "ost"], "a": ["aa", "era", "u", "area", "va", "xa", "A", "fa", "da", "ava", "au", "ma", "na", "pa", "o", "ab", "ao", "an", "ba", "c", "s", "ea", "aos", "ga", "ada", "ia", "ua", "ta", "ae", "aaa", "ya", "p", "b", "aka", "ca", "ata", "as", "la", "sa", "z", "d", "m", "ac"]}}
{"code": "import java.util.*;\\npublic class Main{\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner (System.in);\\n\t\tint N = sc.nextInt();\\n\t\tchar S[] = sc.next().toCharArray();\\n\t\tint count = 0;\\n\t\t\\n\t\tint t=0;\\n\t\tint ssss=0;\\n\t    int data[] =new int[3];\\n\t\tfor(int i=0;i<N;i++) {\\n\t\t\t       if(i<N-2) {\\n\t\t\t           if(S[i]=='A' && S[i+1]=='B' && S[i+2]=='C'){\\n\t\t\t           count++;\\n\t\t\t          }\\n\t\t\t       }\\n\t\t\t    }\\n\t\tSystem.out.println(count);\\n\\n\t\t\t}\\n\t\t\\n\t\t\\n\t\t\\n\t}", "target": "110", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sq", "sch", "sub", "ng", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "ser", "cl", "lc", "Sc", "ctl", "ctrl", "desc", "cons", "screen", "mc", "inc", "scl", "cr", "sel", "ch", "system", "sci", "cle", "cs", "tc", "ss", "sb", "scan"], "N": ["I", "NN", "R", "NC", "Count", "C", "ND", "L", "AN", "Y", "Q", "Z", "A", "NT", "Num", "M", "D", "B", "F", "P", "V", "n", "NG", "NR", "Ni", "NB", "NP", "NV", "TN", "NI", "GN", "NA", "K", "J", "NH", "H", "NS", "X", "SN", "T", "Ns", "NE"], "S": ["E", "AS", "I", "ASC", "R", "C", "RS", "L", "SH", "SL", "TS", "SS", "SU", "A", "M", "D", "CS", "SA", "PS", "B", "US", "JS", "VS", "P", "V", "SM", "DS", "SOURCE", "SB", "s", "IS", "STR", "Source", "Sample", "SF", "SI", "GS", "SO", "G", "HS", "SE", "H", "Bytes", "LS", "Si", "NS", "SP", "ST", "X", "T", "States", "ss", "SQL"], "count": ["found", "report", "length", "flag", "status", "counter", "Count", "const", "nb", "ct", "max", "base", "out", "ind", "sum", "find", "stat", "ctr", "size", "z", "score", "cont", "code", "c", "n", "index", "ount", "head", "state", "quiet", "current", "start", "print", "coll", "total", "result", "nt", "id", "number", "num", "depth", "trace", "cache", "set", "test", "call"], "t": ["time", "f", "ct", "tv", "at", "test", "type", "typ", "c", "tc", "w", "l", "ta", "table", "title", "tt", "ot", "p", "txt", "rt", "total", "dt", "top", "T", "d", "tf", "g", "ts"], "ssss": ["sme", "ssme", "sds", "sdme", "tsme", "ss", "tsss", "sdc", "tsc", "ssc", "tss", "sss", "sdss"], "data": ["trans", "services", "window", "scale", "map", "type", "size", "bytes", "flags", "info", "state", "set", "table", "step", "text", "bits", "dat", "di", "ata", "DATA", "cache", "str", "d", "list"], "i": ["zi", "iter", "I", "hi", "ci", "\u0438", "si", "ic", "sim", "u", "oi", "ai", "xi", "us", "ei", "me", "ski", "is", "eu", "ind", "ori", "o", "x", "mi", "c", "n", "cli", "mu", "index", "im", "y", "init", "gi", "ix", "q", "ui", "info", "ri", "ki", "j", "batch", "uri", "this", "a", "qi", "pi", "multi", "ji", "it", "ii", "chain", "b", "ex", "ini", "di", "id", "li", "in", "ti", "bi", "m", "iu", "phi", "slice", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tString string = sc.nextLine();\\n\t\tString[] a = string.split(\" \");\\n\\n\t\tPoppin poppin = new Poppin(1000);\\n\\n\t\tfor (int i = 0; i < a.length; i++) {\\n\\n\t\t\tif (a[i].equals(\"+\")) {\\n\t\t\t\tint p = poppin.pop();\\n\t\t\t\tint q = poppin.pop();\\n\t\t\t\tpoppin.add(p + q);\\n\t\t\t\tcontinue;\\n\\n\t\t\t}\\n\t\t\tif (a[i].equals(\"-\")) {\\n\\n\t\t\t\tint p = poppin.pop();\\n\t\t\t\tint q = poppin.pop();\\n\t\t\t\tpoppin.add(q - p);\\n\t\t\t\tcontinue;\\n\t\t\t}\\n\t\t\tif (a[i].equals(\"*\")) {\\n\\n\t\t\t\tint p = poppin.pop();\\n\t\t\t\tint q = poppin.pop();\\n\t\t\t\tpoppin.add(p * q);\\n\t\t\t\tcontinue;\\n\t\t\t}\\n\\n\t\t\tint n = Integer.parseInt(a[i]);\\n\t\t\tpoppin.add(n);\\n\\n\t\t}\\n\\n\t\tSystem.out.println(poppin.pop());\\n\\n\t}\\n\\n}\\n\\nclass Poppin {\\n\tint top = 0;\\n\tint[] a;\\n\\n\tpublic Poppin(int n) {\\n\t\ta = new int[n];\\n\t}\\n\\n\tvoid add(int x) {\\n\t\ttop++;\\n\t\ta[top] = x;\\n\\n\t}\\n\\n\tint pop() {\\n\t\tint x = a[top];\\n\t\ttop--;\\n\t\treturn x;\\n\t}\\n}", "target": "114", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sq", "sub", "anc", "sec", "sp", "cc", "c", "ser", "isc", "esc", "spec", "cl", "ko", "lc", "ner", "desc", "dec", "co", "mc", "nl", "scl", "cr", "sel", "ch", "system", "ss", "cs", "ec", "tc", "Sc", "scan"], "string": ["sequence", "word", "join", "network", "san", "strings", "filename", "data", "dump", "buffer", "r", "c", "source", "object", "name", "v", "value", "function", "s", "description", "space", "char", "series", "text", "sample", "input", "document", "system", "ident", "chain", "st", "result", "null", "ring", "array", "in", "str", "list", "line", "past", "message"], "a": ["aux", "go", "aw", "es", "history", "ed", "ar", "aa", "f", "era", "at", "t", "u", "area", "wa", "va", "all", "A", "er", "fa", "da", "au", "out", "ava", "na", "o", "ab", "pa", "oa", "ao", "err", "ba", "an", "am", "c", "ache", "h", "ap", "y", "v", "app", "s", "ea", "aos", "w", "ga", "eas", "ia", "sta", "ta", "ae", "aaa", "apa", "b", "aka", "ca", "ata", "as", "la", "att", "parts", "array", "sa", "d", "ma", "el", "ac"], "poppin": ["moppins", "papppin", "pofficion", "papoppin", "moppon", "poeper", "poopIN", "poppins", "poppend", "yesppyall", "popperine", "pooppinn", "poarchpin", "pofficin", "poepinner", "mopperIN", "poppyinn", "pooppsin", "poophin", "pokkout", "potppen", "poplin", "pepperinit", "poepinit", "pappinit", "pooppin", "popoin", "potcapserv", "popion", "poeffinit", "peppin", "popinc", "potppine", "poploadinit", "paeffinit", "popin", "pobuffin", "poppinn", "popopine", "pouppinit", "peppinit", "poppser", "poppsin", "pooppi", "poppIN", "popout", "popperin", "pepprin", "poopprin", "popopIN", " poppout", "popperon", "pooppon", "popperer", "poptrin", "potfficion", "pobuffinn", "papopsin", "poupprin", "poarchinner", "pofficen", "popperi", "poopine", "pooppall", "popopin", "pepperi", "pooppins", "poippin", "poopin", "pobuffserv", "poploadend", "popperrin", " popper", "poppain", "poppian", "pepperine", "poepine", "potppin", "pocaprin", "yesppyin", "yesppinn", "popserv", "pappsin", "mooppins", "ogopopIN", "potppoin", "pepperdin", "mooppin", "moppIN", "popopcin", "potfficen", "yesppall", "poippend", "tooppin", "yesppyinn", "popopinner", "pofficine", "pepperrin", "poper", "potfficine", "pooppIN", "pocapserv", "pocapin", "moopper", "popopsin", "pooppinner", "pobuffall", "poophine", "poppyin", "pappine", "poppine", "ogoppcin", "popoppin", "poptinner", "poeffin", "yesppin", "poeffend", "pokkinc", "poppsoin", "poppsinc", "poppi", "paeffend", "poppinc", "poplserv", "poppaIN", "popperIN", "ogoppine", "poppaine", "pappend", "toopper", "poppall", "pooppserv", "poopppin", "moppin", "potppserv", "poophen", "poploadin", "popine", "poppsout", "paeffin", "toppian", "poploin", "peppine", "toppinner", "poppinner", "poeffine", "papopin", "poophion", "toppin", "poplrin", "potppion", "potcapoin", "mooppoin", "poarchsin", " poppsinc", "popppin", "poppyserv", "popperinner", "poopcin", "poppon", "potcaprin", "papopinner", "mopper", " poppsin", " poppinc", "poppserv", "ogoppin", "poptin", "potcapin", "poepin", "poepian", "poptdin", "poppen", "mopperin", "poppcin", "popton", "pappinner", "poppion", "peppi", " poppser", "mopperon", "popprin", "poopper", "ogopopine", "poarchin", "popperian", "popen", "ogopopin", "pouppin", "ogoppIN", "mopperinner", "popti", "poippine", "poippoin", "poppoin", "ogopopcin", "pokker", "paeffine", "poppsins", "poptIN", "poipper", "pooppoin", "potpprin", "tooppinner", "poppacin", "moppinner", "poprin", "poppyall", "pepperin", "poploadine", "poippinit", "popperdin", " poppsout", "poippins", "moppoin", "pooppian", "popperinit", "pokkin", "poeprin", "yesppserv", "pouppine", "pappin", "poppdin", "topper", "peppdin", "poppout", "pooppdin", "pocapoin", "potfficin", "tooppian", "popper", "poppinit", "yesppyserv"], "i": ["zi", "ie", "hi", "ci", "I", "gl", "history", "status", "sql", "f", "si", "io", "t", "sim", "u", "oi", "us", "xi", "me", "ei", "ai", "ic", "ski", "is", "ind", "o", "mi", "cli", "index", "y", "im", "init", "info", "ix", "gi", "ui", "json", "ri", "ki", "batch", "j", "uri", "ik", "qi", "pi", "multi", "series", "ij", "it", "print", "ii", "ji", "gu", "di", "ini", "ex", "major", "id", "to", "li", "conv", "in", "ti", "bi", "ims", "m", "iu", "phi", "ip"], "p": ["bp", "pc", "pp", "pb", "f", "t", "pe", "u", "pos", "vp", "part", "pro", "mp", "port", "op", "pa", "par", "o", "tp", "ps", "ping", "pm", "d", "parent", "pkg", "up", "P", "c", "pid", "sp", "h", "php", "ap", "pt", "v", "pg", "app", "per", "pl", "perm", "j", "l", "pr", "jp", "pi", "ph", "e", "fp", "pre", "cp", "lp", "m", "g", "ip"], "q": ["mb", "iq", "quest", "qs", "pc", "ql", "f", "qt", "cu", "pp", "aq", "t", "u", "dq", "Q", "ll", "eq", "mp", "fy", "k", "sq", "kg", "ms", "cond", "pm", "quote", "r", "pkg", "g", "qq", "c", "var", "qu", "h", "ib", "pt", "y", "v", "pg", "ia", "j", "ue", "qi", "pi", "req", "ph", "qa", "ch", "ck", "qual", "mk", "qv", "quit", "z", "d", "query", "quant", "ip"], "n": ["nat", "nv", "nm", "nb", "t", "nc", "net", "node", "mn", "out", "nan", "count", "na", "o", "no", "ng", "r", "on", "c", "nn", "pn", "y", "v", "en", "dn", "N", "j", "l", "nu", "k", "np", "nl", "cn", "sn", "b", "ns", "nt", "ni", "nr", "num", "number", "z", "d", "m", "ne"], "top": ["root", "clip", "success", "level", "best", "upper", "snap", "first", " TOP", "t", "at", "hot", "alt", "pos", "left", "part", "max", "op", "TOP", "plot", "loop", "toc", "parent", "tools", "client", "tmp", "tp", "job", "prototype", "global", "sp", "boost", "org", "index", "pt", "ap", "popular", "tops", "con", "pl", "master", "set", "cart", "high", "onet", "bot", "population", "current", "Top", "pop", "ot", "tips", "origin", " Top", "most", "offset", "stack", "to", "dot", "list", "bottom", "tf", "tip"], "x": ["fx", "px", "xp", "ax", "t", "xx", "xt", "at", " xx", "xi", "ic", "xa", "dx", "ox", "o", "add", "r", "on", "c", "an", "h", "index", "y", "v", "xc", "ix", "xe", "l", "wx", "rx", "mx", "it", "e", "ch", "xy", "ex", "tx", "X", "rex", "z", "act", "m", "val", "ux", "xs"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tdouble d =0.0;\\n\t\tfor (int i=0;i<n;i++) {\\n\t\t\tint temp = sc.nextInt();\\n\t\t\td+=((double)1/(double)temp);\\n\t\t}\\n\t\tSystem.out.println((double)1/d);\\n\\n\t}\\n}", "target": "120", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "pb", "cu", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "cv", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "pl", "lc", "ctl", "ctrl", "desc", "mc", "nl", "scl", "cr", "ch", "system", "ck", "ss", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["nb", "t", "network", "ln", "nc", "net", "mn", "nan", "na", "no", "ng", "nn", "nor", "name", "v", "gn", "en", "N", "j", "l", "nu", " N", "nl", "np", "ot", "cn", "sn", "ns", "nt", "nw", "number", "num", "nr", "un", "m", "ne"], "d": ["f", "dd", "t", "div", "ad", "du", "sd", "dx", "D", "da", "out", "ind", "x", "fd", "pd", "dev", "df", "c", "dm", "y", "v", "s", "m", "des", "det", "l", "dh", "dl", "red", "diff", "density", "bd", "p", "dict", "b", "td", "di", "gd", "dat", "dt", "ds", "db", "dist", "ld", "mod", "draw", "g"], "i": ["iter", "ie", "hi", "ci", "I", "\u0438", "si", "io", "ic", "sim", "u", "ai", "xi", "us", "me", "is", "ind", "x", "mi", "cli", "index", "init", "im", "gi", "v", "q", "ix", "ui", "ki", "j", "uri", "qi", "pi", "multi", "it", "my", "ii", "gu", "ini", "di", "id", "li", "in", "ti", "bi", "m", "iu", "phi", "ip"], "temp": ["sequence", "length", "em", "level", "perature", "status", "fake", "t", "tim", "porary", "stem", "max", "condition", " Temp", "buffer", "tmp", "unit", "context", "prime", "emp", "Temp", "orig", "local", "variable", "kw", "current", "thread", "acc", "step", "tem", "pre", "txt", "null", "Temperature", "template", "ptr", "mod", "tc", "cell", "test"]}}
{"code": "import java.io.*;\\nimport java.math.*;\\nimport java.security.*;\\nimport java.text.*;\\nimport java.util.*;\\nimport java.util.concurrent.*;\\nimport java.util.regex.*;\\nimport java.util.Arrays;\\nimport java.util.ArrayList;\\nimport java.lang.Math; \\nimport java.util.Arrays;\\nimport java.util.Comparator;\\n \\n \\n \\npublic class Main \\n{ \\n    static class FastReader \\n    { \\n        BufferedReader br; \\n        StringTokenizer st; \\n  \\n        public FastReader() \\n        { \\n            br = new BufferedReader(new\\n                     InputStreamReader(System.in)); \\n        } \\n  \\n        String next() \\n        { \\n            while (st == null || !st.hasMoreElements()) \\n            { \\n                try\\n                { \\n                    st = new StringTokenizer(br.readLine()); \\n                } \\n                catch (IOException  e) \\n                { \\n                    e.printStackTrace(); \\n                } \\n            } \\n            return st.nextToken(); \\n        } \\n  \\n        int nextInt() \\n        { \\n            return Integer.parseInt(next()); \\n        } \\n  \\n        long nextLong() \\n        { \\n            return Long.parseLong(next()); \\n        } \\n  \\n        double nextDouble() \\n        { \\n            return Double.parseDouble(next()); \\n        } \\n        \\n  \\n        String nextLine() \\n        { \\n            String str = \"\"; \\n            try\\n            { \\n                str = br.readLine(); \\n            } \\n            catch (IOException e) \\n            { \\n                e.printStackTrace(); \\n            } \\n            return str; \\n        } \\n    } \\n\\n   \\n\\n    static int binarySearch(int a[],int k,int l,int h){\\n        \\n        while(l<=h){\\n         int mid = (l+h)/2;\\n         if(a[mid]==k) return mid;\\n         else if(a[mid]>k) h=mid-1;\\n         else if(a[mid]<k) l =mid+1;\\n    }\\n        \\n        return -1;\\n    }\\n\\n\\n\\n    static String reverse(String input)  \\n    { \\n        char[] a = input.toCharArray(); \\n        int l, r = 0; \\n        r = a.length - 1; \\n  \\n        for (l = 0; l < r; l++, r--) \\n        { \\n            // Swap values of l and r  \\n            char temp = a[l]; \\n            a[l] = a[r]; \\n            a[r] = temp; \\n        } \\n        return String.valueOf(a); \\n    } \\n\\n   \\n    \\n    static int gcd(int a, int b) \\n    { \\n        // Everything divides 0  \\n        if (a == 0) \\n          return b; \\n        if (b == 0) \\n          return a; \\n       if (a == b) \\n            return a; \\n       if (a > b) \\n            return gcd(a-b, b); \\n        return gcd(a, b-a); \\n    } \\n\\n    static int lcm(int a, int b) \\n    { \\n        return (a*b)/gcd(a, b); \\n    } \\n\\n    static int solve(int A, int B) \\n   { \\n    int count = 0; \\n    for (int i = 0; i < 21; i++) { \\n        if (((A >> i) & 1) != ((B >> i) & 1)) { \\n            count++; \\n        } \\n    } \\n  \\n   return count;\\n  } \\n\\n        static long nCr(int n, int r) \\n        { \\n            return fact(n) / (fact(r) * \\n                        fact(n - r)); \\n        } \\n        \\n        \\n        static long fact(int n) \\n        { \\n            long res = 1; \\n            for (int i = 2; i <= n; i++) \\n                res = res * i; \\n            return res; \\n        } \\n        \\n        public static long count(long k) {\\n            return k * (k - 1) / 2;\\n        }\\n\\n        static boolean isPrime(int n) { \\n            // if(n==1) return false; \\n            if(n==2) return true;\\n            if (n%2==0) return false; \\n            \\n            for(int i=3;i<=Math.sqrt(n);i+=2) { \\n                if(n%i==0) \\n                    return false; \\n            } \\n            return true; \\n        }\\n\\n        static int negMod(int n){\\n            int a = (n % 1000000007 + 1000000007) % 1000000007;\\n            return a;\\n        }\\n        static String value(int val) {\\n            String bin = \"\"; \\n                    while (val > 0)  \\n                    { \\n                        if (val % 2 == 1) \\n                        { \\n                            bin += '1'; \\n                        } \\n                        else\\n                            bin += '0'; \\n                        val /= 2; \\n                    } \\n                    bin = reverse(bin); \\n                    return bin;\\n                }\\n\\n                public static int sum(long x) {\\n                    int sum = 0;\\n                    while (x > 0) {\\n                        sum += x % 10;\\n                        x /= 10;\\n                    }\\n                    return sum;\\n                }\\n             \\n        \\n        static int mod=1000003;\\n        public static void main(String[] args) throws Exception \\n    {   \\n       \\n        OutputStream outputStream = System.out;\\n        PrintWriter w = new PrintWriter(outputStream);\\n        FastReader sc = new FastReader();\\n        // Scanner sc = new Scanner(new File(\"input.txt\"));\\n        // PrintWriter out = new PrintWriter(new File(\"output.txt\"));\\n        int i,j=0;\\n        \\n        int n = sc.nextInt();\\n        long d = sc.nextLong();\\n        int c = 0;\\n        // HashMap<Long,Long> h = new HashMap<>();\\n        for(i=1;i<=n;i++){\\n            j=0;\\n            long x  = sc.nextLong();\\n            long y  =  sc.nextLong();\\n            // if(h.containsKey(x)){\\n            //     if(h.get(x) == y) {j=1;continue;}\\n            // }\\n            // if(j==1) continue;\\n            // h.put(x,y);\\n            double f = Math.sqrt(x*x + y*y);\\n            // w.println(f);\\n            if(f<=d) c++;\\n        }\\n        w.print(c);\\n        w.close();\\n     }\\n\\n       \\n}\\n\\n\\n\\n// System.out.println();\\n\\n        \\n    \\n    \\n\\n", "target": "42", "substitutes": {"br": ["bp", "bre", "bn", "bm", "bc", "bh", "bridge", "dr", "bro", "bl", "bf", "ctr", "gr", "tr", "shr", "bs", "bsp", "lr", "bt", "wr", "mr", "Br", "pr", "next", "rb", "jp", "brace", "itter", "cr", "bd", "adr", "kr", "ch", "BR", "b", "browser", "nr", "ptr", "rel", "hr", "vr", "buf", "Tr", "ber", "sr", "fr"], "st": ["stable", "sm", "mt", "ist", "sw", "est", "ft", "sth", "sty", "usr", "const", "first", " ST", "ct", "sl", "t", "th", "se", "sts", "sv", "sh", "fr", "stat", "inst", "ste", "stri", "tmp", "std", "sy", "must", "sp", "stage", "ust", "ut", "pt", "cl", "St", "bt", "sta", "rest", "start", "stop", "lt", "cr", "sn", "ST", "rt", "nd", "nt", "stack", "set", "et", "ss", "sb", "ts", "ost"], "str": ["stable", "ent", "sys", "sl", "t", "inner", "raw", "exp", "dr", "stri", "spr", "ctr", "gr", "msg", "z", "sp", "cont", "tr", "cur", "n", "arr", "shr", "spec", "s", "del", "Str", "STR", "pr", "desc", "next", "string", "char", "enc", "vol", "res", "text", "ocr", "print", "cr", "coll", "ns", "txt", "fr", "g"], "a": ["aux", "aw", "history", "aa", "era", "at", "obj", "area", "wa", "va", "all", "A", "fa", "da", "ava", "au", "sha", "i", "na", "data", "ab", "ao", "ba", "an", "am", "c", "y", "app", "m", "ea", "aos", "ga", "eas", "ia", "j", "sta", "ta", "ae", "aaa", "e", "apa", "p", "b", "aka", "ca", "ata", "as", "la", "att", "alpha", "parts", "sa", "array", "act", "ma", "ac"], "k": ["kn", "zero", "wk", "t", "u", "kh", "ka", "kk", "unk", "i", "o", "x", "ek", "z", "sk", "c", "n", "ke", "key", "kar", "y", "v", "q", "ko", "w", "ki", "j", "kw", "ik", "ku", "kl", "K", "e", "p", "ch", "kr", "ck", "b", "mk", "id", "kj", "d", "m", "km", "g", "tk"], "l": ["hi", "ql", "f", "L", "sl", "jl", "ul", "t", "lu", "u", "al", "left", "ll", "i", "x", "d", "len", "ml", "n", "lin", "lo", "lb", "y", "v", "s", "low", "lr", "pl", "w", "lc", "cl", "q", "lit", "j", "dl", "hl", "kl", "lp", "nl", "lt", "ly", "e", "il", "p", "tl", "ol", "b", "le", "ls", "la", "li", "fl", "ld", "ln", "m", "line", "gl", "el", "g", "ell", "loc"], "h": ["hi", "hh", "hs", "f", "ul", "u", "th", "bh", "kh", "sh", "ha", "height", "i", "o", "x", "his", "c", "n", "y", "v", "q", "ht", "w", "j", "high", "hl", "hash", "he", "oh", "ih", "ph", "e", "H", "ch", "p", "hd", "b", "hm", "hr", "fr", "ho", "m", "phi", "g", "hei"], "mid": ["mmm", "Mid", "trans", "mt", "hi", "lim", "px", "mill", "div", "middle", "medium", "dim", "mm", "pard", "max", "part", "sid", "lay", "half", "ind", "ms", "msg", "md", "mi", "len", "partial", "pid", "key", "med", "lo", "index", "kid", "min", "mobile", "man", "hend", "rid", "local", "mr", "mod", "mask", "start", "rand", "wid", "my", "lt", "tri", "dem", "uid", "le", "nd", "mad", "mouse", "id", "li", "late", "grid", "bid", "m", "val", "mer"], "input": ["script", " Input", "raw", "ref", "base", "initial", "out", "data", "Input", "buffer", "config", "subject", "request", "context", "source", "image", "password", "value", "q", "prefix", "state", "output", "pattern", "current", "qi", "char", "string", "text", "it", "qa", "form", "cmd", "command", "active", "accept", "in", "query", "ip"], "r": ["rec", "ar", "R", "ru", "t", "rc", "ro", "er", "dr", "right", "i", "o", "rr", "err", "c", "n", "tr", "v", "q", "w", "j", "mr", "pr", "rb", "rar", "res", "e", "cr", "p", "b", "rs", "rt", "nr", "hr", "rd", "rw", "fr", "d", "m", "g", "sr"]}}
{"code": "import java.util.ArrayDeque;\\nimport java.util.Queue;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tQueue<String> nameQueue = new ArrayDeque<>();\\n\t\tQueue<Integer> timeQueue = new ArrayDeque<>();\\n\t\tint time = 0;\\n\\n\t\t// \u30d7\u30ed\u30bb\u30b9\u6570\u3068\u30af\u30aa\u30f3\u30bf\u30e0\u3092\u8aad\u307f\u8fbc\u3080\\n\t\tint num = scan.nextInt();\\n\t\tint quantum = scan.nextInt();\\n\\n\t\t// \u5404\u30d7\u30ed\u30bb\u30b9\u306e\u60c5\u5831\u3092\u8aad\u307f\u8fbc\u3080\\n\t\tfor(int i = 0; i < num; i++) {\\n\t\t\tnameQueue.add(scan.next());\\n\t\t\ttimeQueue.add(scan.nextInt());\\n\t\t}\\n\\n\t\t// \u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\\n\t\twhile(!timeQueue.isEmpty()) {\\n\t\t\tif(timeQueue.peek() > quantum) {\\n\t\t\t\ttimeQueue.add(timeQueue.poll() - quantum);\\n\t\t\t\tnameQueue.add(nameQueue.poll());\\n\t\t\t\ttime += quantum;\\n\t\t\t} else {\\n\t\t\t\ttime += timeQueue.poll();\\n\t\t\t\tSystem.out.print(nameQueue.poll() + \" \");\\n\t\t\t\tSystem.out.println(time);\\n\t\t\t}\\n\\n\t\t}\\n\\n\t}\\n}\\n\\n", "target": "231", "substitutes": {"scan": ["anners", "sys", "Scan", "inner", "ann", "sync", " scanned", "out", "parse", "r", " scorer", "an", "n", "nn", "ser", "parser", " cons", "process", " span", " annot", "ans", "can", "system", "ss", "runner", " ans", "in", "sc"], "nameQueue": ["idStack", "sizeQueue", "sizeManager", " nameVo", "sizeVo", "nameVo", "idVo", " nameManager", "sizeStack", "nameStack", "idManager", " nameStack", "idQueue", "nameManager"], "timeQueue": ["imeQue", "imeBus", " timeBus", "timeQue", "timeBus", "imeManager", "timeManager", "imeQueue", " timeQue", "valueQue", " timeManager", "valueQueue", "valueBus", "valueManager"], "time": ["error", "est", "counter", "ime", "t", "max", "count", "estamp", "runtime", "times", "sec", "timeout", "rank", "name", "timer", "etime", "value", "second", "process", "start", "mem", "step", "file", "proc", "id", "depth", "set", "Time"]}}
{"code": "import java.util.Scanner;\\n\\n\\n//Print a Rectangle\\n//\\n//\u305f\u3066H cm \u3088\u3053 W cm \u306e\u9577\u65b9\u5f62\u3092\u63cf\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u4e0b\u3055\u3044\u3002\\n//\\n//1 cm \u00d7 1cm \u306e\u9577\u65b9\u5f62\u3092 '#'\u3067\u8868\u3057\u307e\u3059\u3002\\n//Input\\n//\\n//\u5165\u529b\u306f\u8907\u6570\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5404\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5f62\u5f0f\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\uff1a\\n//\\n//H W\\n//\\n//H, W \u304c\u3068\u3082\u306b 0 \u306e\u3068\u304d\u3001\u5165\u529b\u306e\u7d42\u308f\u308a\u3068\u3057\u307e\u3059\u3002\\n//Output\\n//\\n//\u5404\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u3064\u3044\u3066\u3001H \u00d7 W \u500b\u306e '#' \u3067\u63cf\u304b\u308c\u305f\u9577\u65b9\u5f62\u3092\u51fa\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002\\n//\\n//\u5404\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5f8c\u306b\u3001\uff11\u3064\u306e\u7a7a\u884c\u3092\u5165\u308c\u3066\u4e0b\u3055\u3044\u3002\\n//Constraints\\n//\\n//H, W ? 300\\n//Sample Input\\n//\\n//3 4\\n//5 6\\n//2 2\\n//0 0\\n//\\n//Sample Output\\n//\\n//####\\n//####\\n//####\\n//\\n//######\\n//######\\n//######\\n//######\\n//######\\n//\\n//##\\n//##\\n\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n\\n    \t/*Scanner = \u30c6\u30ad\u30b9\u30c8\u5165\u529b\u3092\u6271\u3046\u305f\u3081\u306e\u30af\u30e9\u30b9\\n\t\t *\u30ad\u30fc\u30dc\u30fc\u30c9\u304b\u3089\u306e\u5165\u529b\u3092\u53d7\u3051\u3064\u3051\u308b\u5834\u5408\u306f\\n\t\t *System.in\u3092\u4f7f\u3063\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\\n\t\t */\\n\t\tScanner scan = new Scanner(System.in);\\n\\n\t\t//for\u30eb\u30fc\u30d7\u6587\u7528\u306b\u5909\u6570\u6e96\u5099\\n\t\tint i;\\n\t\tint j;\\n\\n\t\t/*while\u6587\u3067\u7121\u9650\u30eb\u30fc\u30d7\u8a2d\u5b9a\\n\t\t * if\u6587\u3067break\u3092\u304b\u3051\u308b\\n\t\t * \u6c42\u3081\u3089\u308c\u3066\u3044\u308b\u901a\u308a\u306b\u306a\u3063\u305f\u304c\u30b3\u30fc\u30c9\u304c\u7121\u99c4\u306b\u591a\u3044\u3088\u3046\u306b\u601d\u3048\u308b\\n\t\t * \u5f8c\u7a0b\u4fee\u6b63\u3092\u884c\u3048\u308b\u304b\u8a66\u3059\\n\t\t */\\n\\n\t\twhile(true){\\n\t\t\tint H = scan.nextInt();\\n\t\t\tint W = scan.nextInt();\\n\t\t\tif(H == 0 && W == 0 || H > 300 || W > 300)break;\\n\t\t\tfor(j = 0; j < H; j++){\\n\t\t\t\tfor(i = 0; i < W; i++){\\n\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t}\\n\t\t\tSystem.out.println();\\n\t\t\t}\\n\t\t\tSystem.out.println();\\n\t\t}\\n    }\\n}", "target": "87", "substitutes": {}}
{"code": "import java.util.Scanner;\\n \\nclass Main {\\n\tpublic static void main(String[] args) {\\n \\n\t    Scanner sc = new Scanner(System.in);\\n\t    long A = sc.nextLong();\\n\t    long B = sc.nextLong();\\n\t    long C = sc.nextLong();\\n\t    long K = sc.nextLong();\\n\t    long max = 0;\\n\t    \\n\t    if (K > 0 && K >= A) {\\n\t      max += (A * 1);\\n\t      K -= A;\\n\t    } else if (K > 0 && K < A) {\\n\t      max += (K * 1);\\n\t      K = 0;\\n\t    }\\n\t    \\n\t    if (K > 0 && K >= B) {\\n\t      K -= B;\\n\t    } else if (K > 0 && K < B) {\\n\t      K = 0;\\n\t    }\\n\t    \\n\t    if(K > 0 && K >= C) {\\n\t      max += (C * -1);\\n\t      K -= C;\\n\t    } else if (K > 0 && K < C) {\\n\t      max += (K * -1);\\n\t      K = 0;\\n\t    }\\n\t    \\n\t    System.out.println(max);\\n\t    \\n\t  }\\n}", "target": "56", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "ctx", "usc", "se", "rc", "nc", "bc", "asc", "sync", "sh", "out", "sch", "gc", "sq", "scope", "ng", "anc", "fc", "sec", "sp", "cont", "cc", "c", "esc", "isc", "cl", "lc", " Sc", "ctl", "ctrl", "desc", "mc", "jp", "inc", "cr", "ok", "ch", "system", "p", "ck", "ss", "dc", "cs", "tc", "Sc", "g", "scan"], "A": ["Alpha", "AS", "ATA", "AD", "R", "AF", "GA", "ASC", "AL", "AN", "L", "AE", "AV", "Array", "App", "Ar", "AA", "AP", "SA", "S", "ACC", "HA", "ACE", "At", "IA", "AU", "AB", "N", "AH", "ART", "AC", "AM", "a", "BA", "G", "Ax", "AR", "H", "An", "As", "X", "AT", "LA", "CA"], "B": ["Ber", "E", "I", "TB", "R", "GB", "OB", "L", "RB", "OUT", "Y", "BL", "Z", "JB", "M", "D", "PB", "BU", "S", "BO", "USB", "BI", "EB", "BB", "F", "V", "DB", "BE", "BF", "IB", "NB", "AB", "N", "U", " b", "BA", "G", "J", "AR", "WB", "b", "BR", "BY", "Bar", "BC", "BS", "T", "BD", "LB", "BG", "Bs"], "C": ["SC", "E", "I", "YC", "CT", "R", "NC", "L", "GC", "EC", "Y", "CE", "Q", "CF", "Car", "M", "D", "CS", "Ch", "S", "F", "P", "V", "c", "TC", "JC", "CR", "CB", "CW", "Co", "CNN", "W", "WC", "FC", "VC", "N", "DC", "U", "AC", "CCC", "CH", "G", "CM", "J", "IC", "H", "CC", "CON", "BC", "CP", "CV", "X", "T", "LC", "CG", "CO", "CA", "Cs"], "K": ["VK", "Keep", "ID", "Max", "UK", "Prime", "DEC", "MC", "NG", "GER", "W", "KK", "MK", "OK", "DH", "WH", "KER", "G", "H", "Disk", "Maybe", "KEY", "Used", "MAX", "KC", "PK", "Q", "Ke", "The", "Ch", "Filter", "Last", "KR", "GO", "TH", "J", "MS", "KI", "CC", "KA", "KT", "KN", "E", "TV", "Die", "He", "FK", "Sk", "M", "k", "Can", "S", "Kick", "P", "V", "AK", "Kind", "HK", "N", "SK", "Key", "Skip", "AR", "Right", "Int", "KB", "X", "Total", "Index", "Ak", "KING", "R", "Kill", "L", "KE", "Y", "NO", "Z", "IT", "F", "NK", "Mask", "Power", "Context", "IK", "CP", "Length", "T", "KS", "Log", "Value"], "max": ["root", "MAX", "length", "best", "auto", "R", "Maximum", "ax", "view", "range", "window", " Max", "exp", "left", "all", "Max", "action", "right", "base", "k", "last", "initial", "sum", "global", "x", "size", "and", "check", "full", "maximum", "n", "prime", "value", "min", "conf", "random", "prefix", "w", "limit", "batch", "lock", "mask", "rest", "force", "co", "recent", "mx", "can", " MAX", "total", "mean", "X", "cp", "checked", "temp", "list", "set", "act", "mod", "core"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main{\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tdouble W = sc.nextInt();\\n\t\tdouble H = sc.nextInt();\\n\t\tdouble x = sc.nextInt();\\n\t\tdouble y = sc.nextInt();\\n\t\tsc.close();\\n\t\t\\n\t\tdouble half = H/2;\\n\t\tdouble area = half*W;\\n\t\tSystem.out.printf(\"%.8f\",area);\\n\t\t\\n\t\tif (x==0 && y==0)\\n\t\t\tSystem.out.println(\" \"+0);\\n\t\t\\n\t\telse if (x==W/2 && y==H/2)\\n\t\t\tSystem.out.println(\" \"+1);\\n\t\telse\\n\t\t\tSystem.out.println(\" \"+0);\\n\t}\\n\\n}\\n", "target": "182", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "sub", "uc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "esc", "isc", "cl", "ko", "lc", " Sc", "arc", "ctl", "desc", "ctrl", "mc", "jp", "scl", "cr", "capt", "ch", "system", "st", "conv", "sa", "dc", "cs", "tc", "Sc", "g", "scan"], "W": ["Width", "R", "WT", "C", "VW", "L", "WE", "DW", "OW", "Wh", "Y", "EW", "A", "Win", "M", "D", "B", "WP", "F", "P", "V", "WS", "CW", "SW", "WM", "WA", "TW", "HTML", "w", "N", "MW", "NW", "WH", "WR", "WB", "X", "T", "BW", "WD", "WW", "HT", "FW", "WC"], "H": ["HO", "High", "RH", "His", "He", "C", "L", "HH", "SH", "HI", "Y", "HE", "HTTP", "M", "MH", "B", "HA", "Haw", "F", "P", "V", "h", "OH", "HTML", "HK", "HL", "HB", "N", "AH", "Height", "ANG", "DH", "WH", "CH", "K", "TH", "G", "HS", "Eh", "HD", "NH", "X", "T", "HT", "HC", "HQ"], "x": ["fx", "px", "xp", "f", "xd", "t", "xt", "at", "xx", "xi", "left", "xf", "dx", "ox", "i", "o", "on", "n", "h", "xc", "ix", "w", "j", "l", "XP", "wx", "rx", "a", "lat", "e", "p", "xy", "ex", "tx", "X", "width", "z", "m", "xs"], "y": ["ye", "cy", "py", "t", "Y", "ies", "height", "out", "i", "o", "sy", "ys", "ym", "iley", "n", "h", "key", "iy", "yt", "by", "v", "ty", "yet", "yr", "j", "lon", "l", "ey", "sky", "lat", "my", "ya", "ot", "it", "ch", "xy", "ny", "p", "b", "yy", "z", "m", "ay"], "half": ["hat", "pair", "div", "off", "window", "split", "shift", "scale", "lambda", "fac", "left", "part", "butt", "side", "padding", "partial", "full", "h", "key", "dirty", "goal", "second", "small", "local", "factor", "power", "mini", "Half", "step", "quarter", "shake", "offset", "total", " halfway", "parts", "pad", "near", " halves", "shared", "cast"], "area": [" areas", "error", "division", "alias", "zero", "section", "magic", "zone", "square", "era", "mode", "Area", "window", "radius", "scale", "va", "TA", "AA", "SA", "aria", "size", "eta", "are", "progress", "alone", "dirty", "average", "space", "a", "rea", "shadow", "extra", "meta", "aka", "offset", "balance", "angle", "alpha", "near"]}}
{"code": "import java.util.Scanner;\\npublic class Main{\\n\tpublic static void main(String[] args) {\\n\t\tint a,b=0,W,H;\\n\t\tScanner br = new Scanner(System.in);\\n\t\twhile(true){\\n\t\t\tH=br.nextInt();\\n\t\t\tW=br.nextInt();\\n\t\t\tif(H==0 && W==0){\\n\t\t\t\tbreak;\\n\t\t\t}else{\\n\t\t\t\tfor(a=1;a<=H;a++){\\n\t\t\t\t\tif(a%2==1){\\n\t\t\t\t\t\tfor(b=1;b<=W;b++){\\n\t\t\t\t\t\t\tif(b%2==1){\\n\t\t\t\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t\t\t\t\t}else{\\n\t\t\t\t\t\t\t\t\tSystem.out.print(\".\");\\n\t\t\t\t\t\t\t\t\t}\\n\t\t\t\t\t\t\t}\\n\t\t\t\t\t}else{\\n\t\t\t\t\t\tfor(b=1;b<=W;b++){\\n\t\t\t\t\t\t\tif(b%2==1){\\n\t\t\t\t\t\t\t\tSystem.out.print(\".\");\\n\t\t\t\t\t\t\t}else{\\n\t\t\t\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t\t\t\t}\\n\t\t\t\t\t\t}\\n\t\t\t\t\t}\\n\t\t\t\t\tSystem.out.println();\\n\t\t\t\t}\\n\t\t\tSystem.out.println();\\n\t\t\t}\\n\t\t}\\n\t}\\n}", "target": "131", "substitutes": {"a": [" ba", " fa", "ar", "aa", "era", " na", "at", "aq", "ai", " sa", "area", "va", "from", "A", "part", "fa", "da", "au", "ha", "sha", "na", "x", " ab", "pa", "oa", "ach", " pa", "ao", "ba", "an", "am", " ca", " af", " ax", "ap", " an", "ea", "w", "ga", "ia", "ta", "ae", "aj", " al", "aff", "e", "apa", " ta", "ca", "as", "alpha", "att", "la", "sa", " ra", "act", "ma", "el", "ac"], "b": ["mb", "back", "bis", "bg", "bl", "i", "o", "body", "ba", "n", "blue", "kb", "y", "ob", "w", "cb", "l", "old", "be", "bi", "g", "nb", "f", "t", "bc", "base", "bf", "button", "B", "lb", "bs", "j", "binary", "db", "bid", "bu", "m", "business", "bool", "bp", "obj", "bin", "bh", "ben", "r", "fb", "ib", "bt", "buff", "it", "gb", "bd", "p", "to", "pb", "bb", "bound", "ab", "buffer", "bit", "c", "bur", "wb", "h", "eb", "beta", "by", "v", "bo", "batch", "bot", "rb", "bar", "sb"], "W": ["Week", "Width", "WAR", "WT", "R", "VW", "L", "OW", "DW", "WE", "Wh", "EW", "WI", "Y", "A", "Win", "M", "B", "What", "RW", "WP", "F", "V", "WS", "CW", "SW", "WA", "TW", "HTML", "NB", "w", "MW", "N", "NW", "Watch", "WH", "WR", "Weight", "BW", "WD", "WW", "HT", "FW", "We", "WC"], "H": ["HO", "High", "RH", "His", "He", "SH", "HH", "L", "HI", "HE", " h", "A", "HTTP", "M", "Host", "MH", "HA", "B", "GH", "Haw", "F", "P", "HR", "h", "OH", "HTML", "HP", "HL", "FH", "HB", "AH", "ANG", "DH", "WH", "CH", "TH", "G", "HS", "HD", "NH", "Eh", "X", "HT", "HC", "HQ"], "br": ["repl", "bp", "bj", "js", "obj", "bc", "bh", "bridge", "bro", "bl", "bg", "ctr", "gr", "r", "sp", "tr", "bs", "obl", "cb", "bt", "j", "mr", "Br", "pr", "next", "jp", "nl", "res", "prot", "bd", "ch", "kr", "sn", "BR", "nav", "browser", "nr", "hr", "bi", "fr", "str", "buf", "ber", "sb", "sr", "bn"]}}
{"code": "import java.util.*;\\n\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        // \u81ea\u5206\u306e\u5f97\u610f\u306a\u8a00\u8a9e\u3067\\n        // Let's \u30c1\u30e3\u30ec\u30f3\u30b8\uff01\uff01\\n\\n        Scanner sc = new Scanner(System.in);\\n        String line = sc.nextLine();\\n      String line2 = sc.nextLine();\\n      int n=line.length();\\n      int n2=line2.length();\\n      if(n!=n2){\\n        System.out.println(\"No\");\\n      }\\n      else{\\n        int count=0;\\n        boolean f=false;\\n      \twhile(count!=n){\\n      \t\tif(line.equals(line2)){\\n            \tf=true;\\n              \tbreak;\\n            }\\n          String l=line.substring(0,1);\\n            line=line.substring(1,line.length());\\n          line+=l;\\n            count++;\\n      \t}\\n        if(f){\\n        \tSystem.out.println(\"Yes\");\\n        }\\n        else System.out.println(\"No\");\\n        \\n      }\\n \\n    }\\n}", "target": "220", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\n\\npublic class Main {\\n\\n\t/**\\n\t * @param args\\n\t */\\n\tpublic static void main(String[] args) {\\n\t\t// TODO Auto-generated method stub\\n\t\tint input[] = new int[3];\\n\t\t\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tfor(int i = 0; i < 3; i++){\\n\t\t\tinput[i] = sc.nextInt();\\n\t\t}\\n\t\t\\n\t\tint order[][] = {{0,1,2},{0,2,1},{1,0,2},{1,2,0},{2,1,0},{2,0,1}};\\n\t\t\\n\t\tint result = Integer.MAX_VALUE;\\n\t\tfor(int i = 0; i < order.length; i++){\\n\t\t\tint tmpTotal = 0;\\n\t\t\tint prev = input[order[i][0]];\\n\t\t\t\\n\t\t\tfor(int j = 1; j < 3; j++){\\n\t\t\t\ttmpTotal += Math.abs(prev - input[order[i][j]]);\\n\t\t\t}\\n\t\t\t\\n\t\t\tresult = Math.min(result, tmpTotal);\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(result);\\n\t}\\n\\n}\\n", "target": "247", "substitutes": {}}
{"code": "import java.io.*;\\nimport java.math.*;\\nimport java.util.*;\\nimport java.util.stream.*;\\n\\nclass Main {\\n    static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n    static final PrintWriter pw = new PrintWriter(System.out);\\n    public static void main(String[] args) throws IOException {\\n        String[] inputs = br.readLine().split(\" \");\\n        int[] nums = new int[3];\\n        for(int i = 0; i < 3; i++) {\\n            nums[i] = Integer.parseInt(inputs[i]);\\n        }\\n        String ans = nums[2] + \" \" + nums[0] + \" \" + nums[1];\\n\\n        pw.println(ans);\\n        pw.flush();\\n    }\\n}\\n", "target": "149", "substitutes": {"br": ["bp", "io", "bn", "bm", "bh", "bridge", "dr", "bro", "bf", "bl", "ctr", "gr", "r", "sp", "tr", "shr", "bs", "bsp", "yr", "lr", "pl", "bt", "wr", "pr", "Br", "mr", "adr", "bd", "cr", "kr", "ch", "BR", "db", "browser", "hr", "str", "vr", "ber", "sr", "fr"], "pw": ["tpwb", " pow", "prw", "prwh", "pow", "npwt", " pwt", "spwt", "tpow", "tpwd", "pwh", "prwa", "pwt", "spw", "ww", "pwb", "wwr", "wwt", "apw", "wwd", "npwd", "apwt", "prwt", "pwa", "apwh", "apwa", " pwd", " pwb", "npw", "spwd", "spwr", "npwb", " pwh", "pwr", "tpw", "npow", "pwd", "npwr", " pwa"], "inputs": ["inputses", "ints", "intlines", "inputces", "inputlines", " inputlines", "sequses", " inputces", " inputses", "inputms", "outputses", "outputs", "hiddens", "hiddences", "sequs", "outputS", "inputS", "sequS", " inputms", "hiddenlines", "outputms", "intces", "sequms", " inputS"], "nums": [" namps", "onues", "pum", "onum", "pums", "nsogs", "nues", "onumps", "samps", " news", "nsames", "pamps", " numers", "sum", " numbers", "namps", "nicks", "nsues", "names", " noms", "poms", "onamps", "noms", "nsews", "numers", " numps", "pumps", "sums", "nogs", "nsumbers", "onicks", "nsamps", "pumbers", "pumers", "numps", " nogs", "nsicks", " names", "numbers", " num", " nicks", "Numbers", "Numers", "Names", "Nums", "onums", "news", "nsum", "num", "Nogs", "sews", "Noms", "nsums", " nues"], "i": ["iter", "I", "hi", "ci", "ie", "status", "\u0438", "si", "io", "ic", "sim", "u", "ai", "me", "us", "xi", "is", "ind", "x", "o", "mi", "err", "n", "cli", "h", "key", "y", "v", "init", "gi", "ix", "q", "ui", "info", "json", "this", "ri", "batch", "j", "uri", "a", "qi", "pi", "multi", "ji", "slice", "my", "it", "ii", "p", "chain", "di", "ini", "id", "li", "fire", "missing", "ti", "bi", "m", "point", "phi", "g", "ip"], "ans": ["ran", "ras", "ANS", "anks", " sans", "AN", "san", "ats", "ads", "ann", "mn", "ants", "ins", " means", "ms", "ps", "aus", "ks", "an", "angs", "lan", "os", "amps", "des", "aos", "rans", "anas", "ens", "ars", "cn", "ns", "mean", "ls", "aned", "wan", "mas", "pan", "arms", "arts"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scr =new Scanner(System.in);\\n\t\t\\n\t\tint N = scr.nextInt();\\n\t\tint K = scr.nextInt();\\n\t\tint d = 0;\\n\t\tint A;\\n\t\tint result = 0;\\n\t\t\\n\t\tint []Ns = new int [N];\\n\t\t\\n\t\tfor(int i = 0;i < K;i++) {\\n\t\t\td = scr.nextInt();\\n\t\t\tfor(int j = 0;j < d;j++) {\\n\t\t\t\tA = scr.nextInt();\\n\t\t\t\tNs[A-1] = 1;\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tfor(int i = 0;i < N;i++) {\\n\t\t\tif(Ns[i] == 0) {\\n\t\t\t\tresult += 1;\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(result);\\n\t\t\\n\t}\\n}", "target": "81", "substitutes": {"scr": ["crc", "ScR", "descor", "scdr", " scrc", "scR", " scc", "ascr", "scanor", "scheerr", " scsr", "Scar", "scanar", "Sccr", "corrc", "scanr", "scrc", "car", "corr", "scerr", "ascdr", "Scrc", "descar", "coror", "scanerr", " sccr", "scancr", "ascR", "descr", "scsr", "descsr", "asccr", " scor", "scar", "scc", "scansr", " scar", "Scdr", "Scr", "schecr", "descc", "scanc", " scerr", "corR", "cr", "descR", "sccr", " scdr", "scher", "scheor", " scR", "descrc", "scor", "cR"], "N": ["I", "NN", "NM", "R", "NC", "C", "ND", "L", "AN", "Y", "Q", "Na", "NO", "Num", "NT", "O", "M", "D", "S", "B", "F", "P", "V", "n", "NR", "Ni", "NB", "NP", "NI", "NA", "J", "NH", "NS", "X", "SN", "Length", "T", "No"], "K": ["I", "KC", "R", "C", "L", "PK", "KE", "Q", "Z", "M", "k", "D", "UK", "S", "P", "V", "NK", "KK", "SK", "KR", "WH", "NA", "G", "J", "H", "KI", "NS", "X", "T", "KS", "KN"], "d": ["dd", "date", "de", "t", "div", "dim", " D", "sd", "dr", "dk", "D", "da", "k", "data", "fd", "debug", "pd", "cd", "r", "df", "c", "n", "days", "dm", "v", "dn", "del", "l", "dh", "dl", "dec", "e", "p", "b", "dat", "di", "dL", "dt", "ds", "db", "dir", "dist", "dc", "z", "m", "draw"], "A": ["Alpha", "E", "I", "R", "C", "AE", "L", "Area", "AI", "Z", "App", "Array", "M", "D", "au", "AA", "AP", "The", "SA", "S", "B", "HA", "P", "At", "V", "AU", "And", "One", "AB", "AC", "EA", "a", "NA", "G", "J", "An", "Av", "As", "alpha", "This", "CA", "Ant", "T", "To", "Ax"], "result": ["found", "error", "report", "sequence", "length", "success", "def", "status", "date", "ULT", "complete", "integer", "match", "params", "count", "debug", "message", "response", "score", "r", "err", "successful", "currency", "goal", "results", "valid", "term", "true", "summary", "res", "diff", "answer", "feature", "command", "search", "total", "ret", "Result", "number", "mult", "cache", "comment", "test"], "Ns": ["Us", "Ds", "Parts", "Ins", "NT", "Windows", "Is", "Os", "Vs", "AppData", "Notes", "Lens", "Sys", "Ms", "Gs", "Fs", "WS", "Ws", "Files", "NRS", "Cs", "Ni", "GS", "Names", "Numbers", "Results", "LS", "NS", "ns", "Rs", "Ts", "Es", "Sn", "Args", "KS", "States", "Cos", "Ps", "Cons", "Maps"], "i": ["zi", "iq", "iti", "ie", "hi", "ci", "I", "iter", "ami", "inter", "\u0438", "si", "ic", "sim", "ei", "xi", "me", "ski", "is", "ind", "ori", "x", "mi", "cli", "index", "im", "init", "gi", "info", "ix", "q", "ui", "iii", "y", "ri", "ki", "this", "uri", "l", "ity", "qi", "pi", "multi", "ji", "ij", "it", "series", "ii", "PI", "ini", "di", "ret", "ni", "id", "li", "ti", "bi", "ims", "iu", "phi", "ip"], "j": ["ie", "bj", "jl", "js", "obj", "kj", "k", "oj", "job", "uj", "ge", "jc", "pt", "y", "im", "v", "kid", "q", "dj", "json", "bo", "pr", "aj", "jp", "jo", "jump", "ji", "ij", "J", "ph", "br", "it", "b", "jj", "other", "att", "rel", "bi", "z", "m", "jas", "el", "g", "ja"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO Auto-generated method stub\\n\t\tScanner scn = new Scanner(System.in);\\n\t\tint a = scn.nextInt();\\n\t\tlong ans = (long) (a + Math.pow(a, 2) + Math.pow(a, 3));\\n\t\tSystem.out.println(ans);\\n\\n\t}\\n\\n}\\n", "target": "162", "substitutes": {}}
{"code": "import java.io.*;\\nimport java.util.*;\\nimport java.math.*;\\nimport java.awt.Point;\\n \\npublic class Main {\\n\tstatic final long MOD = 998244353L;\\n\t//static final long INF = 1000000000000000007L;\\n\tstatic String letters = \"abcdefghijklmnopqrstuvwxyz\";\\n\t//static final long MOD = 1000000007L;\\n\tstatic final int INF = 1000000007;\\n\t\\n\tpublic static void main(String[] args) {\\n\t\tFastScanner sc = new FastScanner();\\n\t\tPrintWriter pw = new PrintWriter(System.out);\\n\t\t\\n\t\t/*int Q = sc.ni();\\n\t\tfor (int q = 0; q < Q; q++) {\\n\t\t\tint N = sc.ni();\\n\t\t}*/\\n\t\t\\n\t\t//int N = sc.ni();\\n\t\tchar c = sc.next().charAt(0);\\n\t\tif ('a' <= c && c <= 'z')\\n\t\t\tpw.println(\"a\");\\n\t\telse\\n\t\t\tpw.println(\"A\");\\n\t\tpw.close();\\n\t}\\n\t\\n\tpublic static long dist(long[] p1, long[] p2) {\\n\t\treturn (Math.abs(p2[0]-p1[0])+Math.abs(p2[1]-p1[1]));\\n\t}\\n\t\\n\t//Find the GCD of two numbers\\n\tpublic static long gcd(long a, long b) {\\n\t\tif (a < b) return gcd(b,a);\\n\t\tif (b == 0)\\n\t\t\treturn a;\\n\t\telse\\n\t\t\treturn gcd(b,a%b);\\n\t}\\n\t\\n\t//Fast exponentiation (x^y mod m)\\n\tpublic static long power(long x, long y, long m) { \\n\t\tif (y < 0) return 0L;\\n\t\tlong ans = 1;\\n\t\tx %= m;\\n\t\twhile (y > 0) { \\n\t\t\tif(y % 2 == 1) \\n\t\t\t\tans = (ans * x) % m; \\n\t\t\ty /= 2;  \\n\t\t\tx = (x * x) % m;\\n\t\t} \\n\t\treturn ans; \\n\t}\\n\t\\n\tpublic static int[] shuffle(int[] array) {\\n\t\tRandom rgen = new Random();\\n\t\tfor (int i = 0; i < array.length; i++) {\\n\t\t    int randomPosition = rgen.nextInt(array.length);\\n\t\t    int temp = array[i];\\n\t\t    array[i] = array[randomPosition];\\n\t\t    array[randomPosition] = temp;\\n\t\t}\\n\t\treturn array;\\n\t}\\n\t\\n\tpublic static long[] shuffle(long[] array) {\\n\t\tRandom rgen = new Random();\\n\t\tfor (int i = 0; i < array.length; i++) {\\n\t\t    int randomPosition = rgen.nextInt(array.length);\\n\t\t    long temp = array[i];\\n\t\t    array[i] = array[randomPosition];\\n\t\t    array[randomPosition] = temp;\\n\t\t}\\n\t\treturn array;\\n\t}\\n\t\\n    public static int[][] sort(int[][] array) {\\n    \t//Sort an array (immune to quicksort TLE)\\n\t\tRandom rgen = new Random();\\n\t\tfor (int i = 0; i < array.length; i++) {\\n\t\t    int randomPosition = rgen.nextInt(array.length);\\n\t\t    int[] temp = array[i];\\n\t\t    array[i] = array[randomPosition];\\n\t\t    array[randomPosition] = temp;\\n\t\t}\\n\t\tArrays.sort(array, new Comparator<int[]>() {\\n\t\t\t  @Override\\n        \t  public int compare(int[] a, int[] b) {\\n\t\t\t\t  return a[0]-b[0]; //ascending order\\n\t          }\\n\t\t});\\n\t\treturn array;\\n\t}\\n    \\n    public static long[][] sort(long[][] array) {\\n    \t//Sort an array (immune to quicksort TLE)\\n\t\tRandom rgen = new Random();\\n\t\tfor (int i = 0; i < array.length; i++) {\\n\t\t    int randomPosition = rgen.nextInt(array.length);\\n\t\t    long[] temp = array[i];\\n\t\t    array[i] = array[randomPosition];\\n\t\t    array[randomPosition] = temp;\\n\t\t}\\n\t\tArrays.sort(array, new Comparator<long[]>() {\\n\t\t\t  @Override\\n        \t  public int compare(long[] a, long[] b) {\\n\t\t\t\t  if (a[0] < b[0])\\n\t\t\t\t\t  return -1;\\n\t\t\t\t  else\\n\t\t\t\t\t  return 1;\\n\t          }\\n\t\t});\\n\t\treturn array;\\n\t}\\n    \\n    static class FastScanner { \\n        BufferedReader br; \\n        StringTokenizer st; \\n  \\n        public FastScanner() { \\n            br = new BufferedReader(new InputStreamReader(System.in)); \\n        } \\n  \\n        String next() { \\n            while (st == null || !st.hasMoreElements()) { \\n                try { \\n                    st = new StringTokenizer(br.readLine());\\n                } catch (IOException  e) { \\n                    e.printStackTrace(); \\n                } \\n            } \\n            return st.nextToken(); \\n        }\\n        \\n        int ni() { \\n            return Integer.parseInt(next()); \\n        }\\n  \\n        long nl() { \\n            return Long.parseLong(next()); \\n        } \\n  \\n        double nd() { \\n            return Double.parseDouble(next()); \\n        } \\n  \\n        String nextLine() {\\n            String str = \"\"; \\n            try { \\n                str = br.readLine(); \\n            } catch (IOException e) {\\n                e.printStackTrace(); \\n            } \\n            return str;\\n        }\\n    }\\n}", "target": "80", "substitutes": {"MOD": [" rev", " pid", " BIG", "UID", " offset", " tid", " stamp", " MAG", " h", " D", " base", " last", " A", " M", " B", " Z", " len", " mu", " LONG", " serial", " reg", " S", " max", " MAX", " mod", " PID", " BASE", " LOG", " start"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int N = sc.nextInt();\\n    int M = sc.nextInt();\\n    int[] num = new int[M*2];\\n    int[] count = new int[N];\\n\\n    for(int i=0; i < M*2; i++){\\n        num[i] = sc.nextInt();\\n        count[num[i]-1]++;\\n    }\\n    for(int i=0; i < N; i++){\\n        System.out.println(count[i]);\\n    }\\n  }\\n}", "target": "57", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "pl", "lc", "ctl", "dec", "mc", "inc", "scl", "cr", " scr", "ch", "ck", "ss", "conv", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["I", "NM", "NN", "R", "NC", "C", "ND", "L", "AN", "Y", "Na", "NO", "Num", "NT", "O", "D", "S", "B", "MN", "P", "V", "n", "NR", "NUM", "Ni", "NB", "NP", "TN", "NI", "NA", "K", "G", "J", "Size", "H", "NS", "X", "SN", "T", "Ns", "No", "NE"], "M": ["MA", "I", "R", "PM", "C", "L", "MAT", "D", "JM", "S", "MH", "B", "MO", "MC", "MN", "MP", "P", "V", "DM", "NUM", "MI", "MU", "MAN", "MM", "K", "G", "MX", "CM", "MS", "H", "MT", "RM", "LM", "T", "MB", "Mi", "m", "TM", "MF"], "num": ["note", "nm", "zero", "mon", "nb", "obj", "floor", "fac", "coord", "net", "Num", "node", "sum", "na", "no", "add", "hom", "tmp", "alph", "nam", "check", "n", "pn", "index", "NUM", "cal", "info", "con", "local", "nu", "mem", "np", "mark", "norm", "form", "total", "result", "nt", "um", "id", "conv", "number", "temp", "missing", "cache", "nom", "digit", "val"], "count": ["found", "report", "length", "flag", "nb", "Count", "counter", "ct", "match", "map", "max", "ref", "out", "stat", "sum", "data", "find", "ctr", "add", "cond", "size", "score", "c", "n", "weight", "index", "v", "value", "info", "cat", "summary", "hash", "current", "mem", "amount", "print", "not", "p", "old", "dict", "total", "offset", "result", "nt", "number", "log", "trace", "list", "cache", "val", "cast"], "i": ["zi", "ie", "hi", "ci", "I", "\u0438", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "us", "ei", "umi", "me", "eu", "is", "ori", "o", "x", "client", "mi", "err", "cli", "iy", "by", "php", "gi", "im", "y", "init", "ix", "q", "ui", "ri", "ki", "j", "uri", "a", "ity", "qi", "pi", "multi", "ji", "ij", "it", "print", "ii", "chain", "gu", "ini", "di", "ex", "ni", "id", "to", "li", "fi", "in", "ti", "bi", "z", "fire", "iu", "phi", "g", "ip"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.PrintWriter;\\nimport java.util.Map;\\nimport java.util.TreeMap;\\nimport java.util.concurrent.atomic.AtomicInteger;\\n\\npublic class Main {\\n  public static void main(String[] args) throws Exception {\\n    int max = 0;\\n    final Map<String, AtomicInteger> map = new TreeMap<>();\\n\\n    try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\\n      int n = Integer.parseInt(br.readLine());\\n      for (int i = 0; i < n; i++) {\\n        String s = br.readLine();\\n        AtomicInteger c = map.get(s);\\n        int val = 1;\\n        if (c == null) {\\n          map.put(s, new AtomicInteger(1));\\n        } else {\\n          val = c.incrementAndGet();\\n        }\\n        if (val > max) {\\n          max = val;\\n        }\\n      }\\n    }\\n    try (PrintWriter pw = new PrintWriter(System.out)) {\\n      for (Map.Entry<String, AtomicInteger> e : map.entrySet()) {\\n        if (e.getValue().get() == max) {\\n          pw.println(e.getKey());\\n        }\\n      }\\n    }\\n  }\\n}", "target": "235", "substitutes": {"max": ["cmp", "ver", "MAX", "length", "upper", "best", "ax", "range", "window", "latest", "scale", "exp", "Max", "right", "last", "now", "ox", "count", "sum", "x", "ms", "size", "dev", "rank", "len", "full", "maximum", "cur", "med", "v", "min", "value", "m", "highest", "limit", "high", "hash", "pr", "mod", "current", "rand", "res", "mx", "p", "can", "gt", "total", "mean", "id", "top", "end", "num", "ma", "default"], "map": ["sm", "mb", "mt", "cap", "addr", "maps", "view", "shape", "scale", "mm", "complete", "mp", "policy", "copy", "save", "parse", "module", "pm", "mg", "use", "code", "index", "ap", "man", "where", "place", "master", "MAP", "set", "load", "batch", "hash", "table", "lock", "make", "process", "memory", "mem", "store", "create", "form", "pack", "dict", "collect", "pre", "group", "cache", "list", "m", "block", "tree", "metadata", "handle"], "n": ["nm", "nb", "f", "t", "network", "ln", "nc", "net", "sd", "mn", "k", "nan", "na", "no", "ng", "size", "nn", "name", "gn", "N", "nu", " N", "nl", "np", "norm", "sn", "ns", "nd", "nt", "nw", "ni", "number", "num", "un", "z", "d", "m", "ne"], "i": ["iq", "I", "ie", "ci", "sql", "si", "ic", "sim", "u", "ai", "us", "me", "is", "ind", "o", "x", "mi", "im", "y", "v", "init", "ix", "ui", "q", "gi", "ki", "j", "batch", "a", "qi", "pi", "multi", "it", "ii", "p", "chain", "ex", "di", "id", "li", "fi", "ti", "bi", "m", "iu", "phi", "ip"], "s": ["its", "es", "qs", "fs", "hs", "sql", "ats", "js", "sf", "sts", "sv", "gets", "is", "abs", "sq", "ps", "S", "ms", "sb", "sp", "less", "g", "vs", "os", "v", "ws", "l", "string", "series", "gs", "b", "ns", "rs", "ls", "stats", "ds", "str", "m", "ss", "xs", "ts"], "c": ["cmp", "ci", "cos", "f", "C", "ct", "cu", "ic", "u", "com", "rc", "bc", "count", "cv", "fc", "cod", "r", "cd", "cc", "ce", "cur", "v", "cor", "con", "lc", "cb", "l", "co", "mc", "cr", "p", "coll", "ch", "cm", "ca", "cf", "cp", "dc", "cs", "ec", "tc", "sc", "ac"], "val": ["Val", "iter", "ver", "quad", "change", "cu", "div", "al", "grad", "sol", "ref", "ival", "x", "cond", "dev", "err", "ev", "vt", "cho", "v", "cal", "value", "state", "aval", "valid", "pl", "update", "pr", "elt", "kl", "vol", "acc", "il", "bal", "sel", "it", "p", "az", "eval", "tx", "ret", "util", "fail", "alpha", "vals", "VAL", "ee", "li", "rel", "num", "z", " eval", "el", "loc"], "e": ["or", "E", "ent", "ie", "es", "ed", "te", "eg", "ine", "de", "pe", "re", "me", "eur", "er", "eu", "o", "ade", "ce", "ev", "ge", "eb", "ke", "entry", "fe", "ate", "one", "ve", "el", "ue", "he", "eeee", "le", "edge", "element", "ele", "event", "be", "end", "ee", "ze", "ec", "ne", "se"]}}
{"code": "import java.io.*;\\n\\nclass Main {\\n\tpublic static void main(String[] args) {\\n\t\tBufferedReader kb = new BufferedReader( new InputStreamReader( System.in ) );\\n\t\ttry {\\n\t\t\tint[] Count = new int[29];\\n\t        String str;\\n\t\t\twhile( null != ( str = kb.readLine() ) ) {\\n\t            int len = str.length();\\n\t            if( null == str || 0 == len ) { break; }\\n\t            char c;\\n\t       \t\tfor( int i=0; i<len; i++ ) {\\n\t       \t\t\tc = Character.toUpperCase( str.charAt( i ) );\\n\t       \t\t\tif(  'A' <= c && c <= 'Z' ) {\\n\t       \t\t\t\tCount[ c - 'A' ]++;\\n\t       \t\t\t}\\n\t       \t\t}\\n       \t\t}\\n       \t\tfor( int i=0; i<26; i++ ) {\\n\t\t\t\tSystem.out.printf( \"%c : %d\\n\", ('a'+i ), Count[ i ] );\\n       \t\t}\\n\t\t} catch( IOException e ) {\\n\t\t\tSystem.err.println( e );\\n\t\t}\\n\t}\\n}", "target": "242", "substitutes": {"kb": ["mb", "kn", "bp", "nb", "wk", "kB", "bb", "bm", "ka", "dk", "bf", "kg", "pd", "sk", "ks", "ke", "kt", "kid", "cb", "bt", "kw", "ik", "kl", "wid", "gb", "bd", "hd", "ck", "kr", "KB", "kas", "mk", "kin", "lp", "sb", "tk"], "Count": ["Only", "Flags", "Code", "Amount", "C", "Found", "Push", "Connect", "Current", "Num", "Max", "Array", "Cond", "count", "Ch", "Last", "Depth", "Counter", "Flag", "Written", "Stack", "Content", "Base", "Start", "Force", "Call", "Cache", "Table", "Read", "Sum", "Not", "Const", "Size", "Weight", "Len", "Length", "Total", "Ct", "Limit", "Now", "All", "Index", "Cast", "Add", "Log", "Tr"], "str": ["mt", "ent", "status", "seq", "t", "div", "re", "obj", "exp", "dr", "comm", "bl", "inst", "expr", "data", "buffer", "gr", "z", "r", "msg", "sp", "cont", "n", "cur", "tr", "arr", "pt", "spec", "v", "s", "del", "cl", "Str", "STR", "j", "l", "pr", "cr", "elt", "string", "char", "enc", "res", "vol", "text", "it", "input", "print", "ch", "p", "br", "st", "b", "txt", "dat", "form", "chain", "att", "fr", "list", "m", "g"], "len": ["fin", "iter", " length", "lim", "length", "sl", "t", "pos", "lvl", "lf", "ll", "all", "count", "size", "n", "bytes", "lan", "en", "cl", " l", "pl", "lon", "l", "hl", "elt", "kl", "lp", "nl", "wid", "il", "le", "Len", "ls", " clen", "Length", "nt", "li", "fl", "end", "ld", "list", "ln", "val", "el", "loc"], "c": ["cmp", "sc", "ci", "cap", "cos", "ar", "const", "f", "C", "ct", "cu", "t", "com", "rc", "bc", "k", "count", "gc", "x", "uc", "unc", "col", "r", "fc", "cod", "cont", "cd", "z", "code", "cc", "ce", "cur", "h", "v", "cl", "con", "lc", "cb", "cat", "l", "arc", "ctrl", "a", "char", "co", "mc", "cr", "ch", "chain", "cm", "ca", "cf", "comp", "dc", "cp", "cs", "cache", "ec", "tc", "\u00e7", "g", "ac"], "i": ["zi", "iter", "ie", "hi", "ci", "I", "span", "status", "ami", "f", "\u0438", "si", "io", "ic", "sim", "u", "oi", "ai", "ei", "me", "xi", "us", "base", "is", "ish", "ind", "point", "ori", "o", "eu", "ms", "mi", "cli", "n", "index", "im", "init", "gi", "info", "q", "y", "ui", "ix", "v", "wi", "this", "ri", "j", "ki", "a", "ity", "qi", "pi", "multi", "ji", "ij", "it", "ii", "chain", "ex", "ini", "di", "id", "to", "li", "in", "ti", "bi", "ims", "m", "iu", "phi", "ip"], "e": ["E", "error", "ie", "es", "ed", "te", "f", "ine", "de", "t", "pe", "re", "me", "er", "x", "r", "err", "n", "ev", "ge", "y", "v", "ate", "en", "ve", "oe", "a", "ae", "eeee", "ode", "p", "ex", "le", "ite", "event", "be", "ee", "ze", "d", "m", "ne", "g", "se"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\nimport java.math.*;\\n \\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    long l = sc.nextLong();\\n    long r = sc.nextLong();\\n    r = Math.min(r,(l+2019));\\n    long mod = 2019L;\\n    long ans = (long)Math.pow(10,9)+7;\\n    for(long i = l; i < r; i++){\\n        for(long j = i+1; j <= r; j++){\\n            long tmp = ((i%mod)*(j%mod))%mod;\\n            ans = Math.min(ans,tmp);\\n        }\\n    }\\n    System.out.println(ans);\\n  }\\n}", "target": "193", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "ctx", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "Sync", "sch", "gc", "sq", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "s", "cl", "lc", "ner", " Sc", "ctrl", "mc", "scl", "cr", "ch", "system", "cle", "cs", "tc", "Sc", "sb", "scan"], "l": ["length", "L", "sl", "t", "al", "lv", "jl", "ul", "ll", "x", "o", "size", "len", "ml", "c", "n", "h", "lo", "lb", "v", "q", "lr", "pl", "lit", "lc", "dl", "kl", "lp", "nl", "ly", "p", "tl", "le", "ls", "li", "ld", "z", "ln", "m", "el", "g", "loc"], "r": ["ran", "rec", "ar", "R", "rect", "ru", "t", "range", "ren", "u", "re", "rc", "radius", "ro", "er", "dr", "rr", "err", "c", "n", "tr", "h", "v", "s", "q", "lr", "rid", "w", "ri", "mr", "rn", "rx", "rb", "rf", "rar", "res", "br", "cr", "p", "kr", "b", "rs", "rt", "rg", "rel", "nr", "hr", "rd", "rw", "fr", "d", "m", "sr", "vr"], "mod": ["reg", "trans", "cmp", "MOD", "fun", "zero", " Mod", "seq", "cu", "tab", "mode", "div", "sim", "hex", "scale", "mm", "max", "mag", "sum", "add", "ms", "cond", "module", "var", "mu", "min", "cal", "lib", "m", "man", "mods", "trade", "term", "rm", "Mod", "perm", "dec", "mem", "res", "step", "cm", "comp", "id", "pad", "num", "row", "temp", "log", "sign", "d", "post", "modified", "od"], "ans": ["nets", "ANS", "ions", "orts", "offs", "ats", "ads", "aps", "eps", "eds", "ann", "ols", "oss", "ants", "ins", "outs", "uns", "ms", "names", "aus", "acs", "an", "ians", "ags", "ks", "vs", "angs", "lan", "annot", "os", "ups", "s", "amps", "mods", "rans", "ends", "aces", "posts", "ons", "ens", "ots", "ars", "cons", "ams", "ations", "gs", "ows", "can", "ids", "ns", "rs", "ls", "as", "ames", "vals", "mas", "arts", "ents"], "i": ["zi", "iq", "I", "hi", "ci", "ie", "\u0438", "si", "ic", "u", "iri", "ai", "xi", "ei", "ims", "is", "o", "x", "mi", "ir", "ib", "y", "im", "init", "gi", "ix", "ui", "ri", "ki", "ia", "a", "ik", "pi", "multi", "ji", "ij", "it", "ii", "di", "ini", "yi", "li", " Xi", "bi", "ti", "iu", "phi", "ip", "asi"], "j": ["ie", "jac", "bj", "jl", "js", "obj", "kj", "k", "ind", "oj", "o", "job", "je", "son", "uj", "ge", "h", "jc", "pt", "y", "v", "bs", "jack", "q", "dj", "json", "pr", "aj", "jp", "jo", "jump", "ji", "J", "ij", "ph", "it", "br", "jit", "jet", "jj", "ja", "other", "bi", "z", "jas", "ne", "g", "fr"], "tmp": ["mmm", "cmp", "cow", "important", "ctx", "tv", "t", "img", "obj", "lambda", "mm", "amp", "same", "mp", "mut", "ind", "tf", "cont", "MP", "uv", "qq", "prime", "needed", "emp", "prefix", "perm", "sam", "buff", "su", "uff", "extra", "acc", "tt", "xy", "etc", "td", "yy", "temp", "nom", "tc", "test", "pot"]}}
{"code": "import java.util.*;public class Main{public static void main(String[] args) {Scanner sc =new Scanner(System.in);int n=sc.nextInt(),c=n,m=sc.nextInt();int num[]=new int[n+1];for(;n>0;n--) num[n]=n;for(;m>0;m--){String []s=sc.next().split(\",\");int a=Integer.parseInt(s[0]),b=Integer.parseInt(s[1]),t=num[a];num[a]=num[b];num[b]=t;}for(;n<c;n++)System.out.println(num[n+1]);}}", "target": "156", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "exec", "sch", "gc", "sq", "sub", "ng", "anc", "fc", "sec", "sp", "cc", "esc", "isc", "ser", "cl", "lc", "ctl", "desc", "mc", "scl", "cr", "sel", "ch", "sci", "dc", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "n": ["note", "nc", "net", "mn", "i", "o", "conn", "fn", "index", "y", "en", "l", "cn", "sn", "g", "rn", "hn", "nm", "nb", "f", "network", "ren", "nan", "out", "ng", "len", "an", "pn", "nn", "j", "nu", "np", "nl", "yn", "number", "nr", "d", "ann", "ll", "k", "x", "size", "r", "on", "name", "nor", "gn", "N", "p", "ns", "nt", "in", "un", "z", "act", "unc", "u", "inn", "all", "count", "na", "tn", "v", "dn", "q", " N", "norm", "ln", "ne"], "c": ["ci", "f", "C", "ct", "nc", "bc", "k", "count", "gc", "i", "r", "cc", "h", "v", "con", "lc", "l", "co", "mc", "e", "cn", "p", "ch", "cm", "cf", "dc", "cs", "d", "unc", "g"], "m": ["sm", "mt", "om", "em", "me", "bm", "mm", "mo", "M", "mn", "k", "i", "o", "ms", "r", "md", "mi", "dm", "h", "am", "arm", "mat", "im", "v", "y", "man", "gm", "j", "rm", "l", "mr", "perm", "mc", "mx", "e", "p", "tm", "cm", "mis", "mk", "um", "d", "g"], "num": ["cmp", "note", "nm", "zero", "mon", "nb", "date", "div", "tim", "th", "tag", "dim", "coord", "net", "Num", "max", "node", "count", "out", "sum", "na", "no", "save", "alph", "dev", "digit", "nam", "check", "code", "mu", "index", "mat", "NUM", "cal", "con", "Number", "one", "set", "term", "dec", "desc", "nu", "gen", "np", "mem", "multi", "form", "total", "result", "nt", "um", "conv", "number", "missing", "nom", "cache", "val", "draw", "test"], "s": ["its", "qs", "hs", "sql", "fs", "ashes", "ats", "js", "sts", "sv", "gets", "aws", "strings", "bis", "abs", "sq", "i", "ins", "ses", "ps", "ms", "S", "sb", "els", "vs", "h", "tes", "bs", "ws", "l", "series", "gs", "bits", "ns", "rs", "ls", "stats", "xs", "ds", "parts", "cs", "ss", "details", "g", "ts"], "a": ["ed", "ar", "art", "aa", "f", "ax", "ra", "u", "aq", "at", "al", "va", "ad", "A", "fa", "au", "i", "na", "o", "x", "pa", "oa", "ab", "r", "ao", "an", "ba", "am", "ea", "ga", "ia", "l", "ta", "ae", "aj", "aaa", "e", "p", "ca", "alpha", "as", "la", "sa", "z", "ma", "ac"], "b": ["nb", "f", "bb", "u", "bc", "bis", "bf", "i", "ab", "x", "B", "r", "fb", "g", "ba", "eb", "lb", "ib", "y", "v", "bs", "ob", "cb", "j", "l", "rb", "e", "bd", "br", "p", "db", "be", "bi", "z", "d", "sb"], "t": ["te", "tg", "f", "tab", "tv", "at", "wt", "tz", "i", "o", "tf", "tp", "tr", "vt", "pt", "y", "tw", "ty", "tu", "term", "j", "l", "ta", "tt", "it", "ot", "p", "tm", "td", "txt", "rt", "dt", "T", "z", "tc", "tip", "ts"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args){\\n\\n\t\tScanner sc=new Scanner(System.in);\\n\\n\t\tString[] str=(sc.next()).split(\"\");\\n\\n\t\tsc.close();\\n\\n\t\tList<String> list=new ArrayList<String>();\\n\\n\t\tint cnt=0;\\n\\n\t\tfor(int i=0;i<4;i++){\\n\t\t\tif(list.contains(str[i])){\\n\t\t\t\tcnt++;\\n\t\t\t}else{\\n\t\t\t\tlist.add(str[i]);\\n\t\t\t}\\n\t\t}\\n\\n\t\tif(list.size()>2){\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}else{\\n\t\t\tif(cnt==2){\\n\t\t\t\tSystem.out.println(\"Yes\");\\n\t\t\t}else{\\n\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t}\\n\t\t}\\n\\n\\n\t}\\n}\\n", "target": "33", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "psc", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sac", "sh", "sch", "gc", "sq", "sub", "uc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "ser", "cl", "lc", " Sc", "arc", "mc", "nl", "scl", "cr", "ch", "ss", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "str": ["sw", "sys", "hex", "seq", "sl", "sts", "strings", "dr", "bl", "inst", "data", "stri", "ctr", "gr", "r", "sec", "sp", "ust", "tr", "n", "arr", "utt", "spec", "s", "Str", "STR", "wr", "sta", "rest", "char", "string", "enc", "vol", "text", "br", "ch", "form", "st", "dat", "txt", "rs", "att", "parts", "conv", "split", "g", "ts", "fr"], "list": ["format", "iter", "ist", "sequence", "record", "level", "show", "L", "t", "view", "collection", "left", "all", "ll", "map", "sync", "out", "now", "data", "parent", "add", "index", "LIST", "name", "filter", "json", "load", "batch", "l", "table", "string", "current", "lat", "lt", "print", "old", "st", "dict", "listed", "other", "group", "ls", "nt", "search", "file", "top", "li", "array", "null", "see", "log", "total", "set", "lists", "number", "tree", "test"], "cnt": ["vct", "vst", "cNT", "cnc", "cund", " cct", "cunt", "Cnt", "Cnd", " cnd", "CNT", "vnt", " cNT", "Cct", "cst", "vrt", "Cst", "crt", " cnc", " cn", "Crt", " cst", " crt", "Cn", "cust", "cct", "mcnc", "mcnt", "mcct", "mcn", "cuNT", "cn", "cnd", "Cnc"], "i": ["zi", "iq", "I", "hi", "ci", "ie", "\u0438", "si", "io", "ic", "t", "u", "sim", "ai", "ei", "me", "us", "xi", "exp", "ski", "is", "ind", "ori", "x", "o", "ms", "mi", "n", "cli", "index", "im", "init", "gi", "y", "q", "ix", "ui", "ri", "ki", "j", "uri", "a", "qi", "pi", "multi", "ji", "my", "it", "ii", "chain", "ini", "di", "id", "li", "ti", "bi", "m", "iu", "phi", "slice", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        String s = sc.next();\\n\\n\\n        Map<Integer, Character> map = new HashMap<>();\\n        Map<Character, Integer> map2 = new HashMap<>();\\n        int p = 0;\\n        for (char a = 'A';a <= 'Z';a++) {\\n            map2.put(a,p);\\n            map.put(p++, a);\\n        }\\n\\n        StringBuilder sb = new StringBuilder();\\n        for (int i = 0; i< s.length(); i++) {\\n            \\n            char c = map.get((map2.get(s.charAt(i))+n) % 26);\\n            //System.out.println(c);\\n            sb.append(c);\\n        }\\n        System.out.println(sb.toString());\\n    }\\n\\n}\\n", "target": "13", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sch", "sq", "sub", "uc", "anc", "sec", "sp", "cont", "cc", "isc", "esc", "ser", "src", "cl", "lc", "ctl", "ctrl", "desc", "dec", "mc", "inc", "scl", "cr", "sel", "ch", "rs", "ss", "sci", "conv", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "n": ["nb", "t", "nc", "net", "mn", "count", "na", "o", "ng", "d", "sp", "nn", "h", "name", "v", "en", "w", "N", "j", "nu", " N", "nl", "np", "cn", "sn", "ns", "nd", "nt", "num", "z", "ln", "m", "ne"], "s": ["its", "es", "qs", "fs", "sql", "hs", "sys", "sl", "t", "ats", "js", "sf", "sv", "sts", "ings", "strings", "is", "abs", "sq", "ins", "S", "ps", "ms", "r", "sp", "less", "source", "os", "ess", "ws", "j", "l", "gs", "st", "b", "rs", "ns", "ls", "ss", "ds", "xs", "conv", "cs", "in", "str", "g", "ts"], "map": ["mt", "open", "pair", "tree", "ack", "maps", "view", "shape", "scale", "mm", "bridge", "transform", "mp", "node", "policy", "link", "pm", "mg", "bind", "use", "ml", "code", "tr", "ape", "ap", "en", "man", "per", "place", "master", "MAP", "where", "load", "replace", "hash", "lock", "make", "mask", "create", "table", "control", "mem", "pose", "pack", "dict", "apper", "result", "cp", "cache", "set", "list", "m", "block", "default", "test"], "map2": ["cache3", "cache2", "policy42", "ap2", " map42", "cache1", " map02", "policy2", "MAP02", "Map1", "map1", "MAP1", "cache02", " map1", "policy02", "ap3", "map3", "ap1", " map3", "Map3", "Map02", "policy1", "MAP42", "map02", "map42", "Map2", "MAP2"], "p": ["bp", "pc", "pp", "pb", "t", "pe", "pos", "at", "pro", "port", "k", "out", "pa", "o", "ps", "tp", "ping", "sp", "P", "pid", "h", "php", "pt", "ap", "v", "pg", "pl", "pers", "j", "perm", "pr", "jp", "np", "pi", "e", "b", "pre", "cp", "num", "d", "m", "point", "g"], "a": ["go", "ar", "aa", "era", "area", "wa", "xa", "va", "A", "ka", "part", "fa", "da", "na", "x", "pa", "o", "oa", "ab", "r", "ao", "an", "am", "name", "app", "m", "ea", "ga", "ia", "l", "sta", "ta", "ae", "aj", "aaa", "aff", "acc", "apa", "b", "ca", "element", "ata", "as", "alpha", "la", "any", "att", "sa", "z", "act", "ma", "el", "ac"], "sb": ["sm", "sw", "bp", "sg", "pb", "bj", "si", "bb", "sf", "sv", "bc", "bh", "sh", "bf", "sq", "sp", "SB", "bs", "ob", " SB", "cb", "bt", "rb", "buff", "gb", "bd", "db", "sa", "lp"], "i": ["zi", "I", "hi", "ci", "ie", "ami", "\u0438", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "me", "us", "ei", "ogi", "Di", "is", "mi", "cli", "mu", "index", "gi", "y", "init", "ix", "q", "ui", "ri", "ki", "j", "uri", "qi", "pi", "multi", "ji", "it", "ii", "gu", "di", "ini", "ni", "id", "li", "ti", "bi", "m", "iu", "phi", "ip"], "c": ["ci", "pc", "f", " C", "C", "ct", "rc", "nc", "cd", "fc", "r", "category", "xc", "con", "lc", "cat", "l", "e", "b", "ca", "cp", "dc", "cs", "d", "m", "unc", "ac"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner scan = new Scanner(System.in);\\n    int n = scan.nextInt();\\n    int[] g = new int[n];\\n    for (int i=0;i<n;i++){\\n      g[i] = scan.nextInt();\\n    }\\n    Arrays.sort(g);\\n    if (g.length % 2 != 0){\\n      System.out.println(0);\\n    }\\n    else{\\n      int t = g.length;\\n      t = (int) t/2;\\n      System.out.println(g[t] - g[t-1]);\\n    }\\n  }\\n}\\n", "target": "119", "substitutes": {"scan": ["sm", "report", "connect", "sys", "get", "san", "range", "Scan", "sv", "se", "re", "ann", "scale", "sync", "send", "reach", "gate", "out", "find", "sum", "skip", "na", "parse", "link", "r", "sb", "sur", "sp", "check", "an", "read", "ser", "by", "v", "scroll", "con", "query", "ner", "store", "sin", "ch", "can", "system", "p", "search", "seek", "row", "in", "see", "m", "sc"], "n": ["nm", "nb", "network", "nc", "all", "net", "ll", "mn", "count", "out", "k", "na", "no", "o", "x", "ng", "nan", "size", "r", "len", "c", "nn", "v", "en", "N", "j", "l", "nu", " N", "np", "nl", "cn", "p", "sn", "ns", "total", "nt", "number", "num", "un", "z", "ln", "m", "ne"], "g": ["groups", "go", "guard", "sg", "eg", "tg", "pp", "back", "ger", "ig", "erg", "gp", "bg", "gc", "gr", "mg", "ge", "gi", "v", "gg", "pg", "q", "gm", "ga", "j", "l", "ag", "fg", "gen", "G", "gs", "deg", "gb", "p", "google", "gt", "b", "gu", "cfg", "group", "gd", "rg", "d", "m", "og", "get"], "i": ["iter", "I", "sequence", "ci", "hi", "ie", "iso", "si", "io", "ic", "sim", "u", "oi", "us", "ai", "me", "is", "ind", "x", "ms", "client", "mi", "err", "y", "v", "init", "im", "ix", "q", "ui", "gi", "ri", "j", "uri", "batch", "qi", "pi", "multi", "my", "it", "ii", "chain", "b", "gu", "di", "ini", "ex", "li", "ti", "bi", "set", "m", "iu", "phi", "ip"], "t": ["ent", "time", "te", "f", "ct", "at", "wt", "k", "out", "o", "tp", "c", "tr", "h", "vt", "index", " T", "pt", "y", "tw", "ty", "v", "tu", "q", "w", "j", "l", "ta", "title", "tt", "ot", "it", "p", "tm", "total", "rt", "nt", "dt", "T", "tower", "temp", "z", "d", "m", "tc", "tip", "tree", "ts"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        Scanner in = new Scanner(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        B solver = new B();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class B {\\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\\n            // \u5165\u529b\\n            int n = Integer.parseInt(in.next());\\n            String w[] = new String[n];\\n            for (int i = 0; i < n; i++) {\\n                w[i] = in.next();\\n            }\\n            int ans = 0;\\n\\n            for (int i = 1; i < n; i++) {\\n                if (w[i - 1].charAt(w[i - 1].length() - 1) != w[i].charAt(0)) {\\n                    out.print(\"No\");\\n                    return;\\n                }\\n                if (isExist(i, w)) {\\n                    out.print(\"No\");\\n                    return;\\n                }\\n            }\\n\\n            // \u51fa\u529b\\n            out.println(\"Yes\");\\n\\n        }\\n\\n        private static boolean isExist(int n, String s[]) {\\n            for (int i = 0; i < n; i++) {\\n                if (s[i].equals(s[n])) {\\n                    return true;\\n                }\\n            }\\n            return false;\\n        }\\n\\n    }\\n}\\n\\n", "target": "70", "substitutes": {"inputStream": [" inputSteam", "importStream", "outputView", "outputWindow", "inputFile", "sourceSteam", " inputWindow", "inputView", "outputstream", "importFile", " inputView", "outputSteam", "importSteam", " inputstream", "sourceView", "sourcestream", "sourceStream", "inputstream", "inputWindow", "outputFile", "inputSteam", " inputFile", "importWindow"], "outputStream": ["inputScreen", "topWriter", "outputForm", "connectionSet", "outputWriter", "thisStream", "inputForm", "connectionStream", "connectionSteam", " outputSet", "topSet", "topSteam", " outputForm", "outputSteam", "thisScreen", "inputSteam", " outputSteam", "topStream", "outputSet", " outputWriter", "thisForm", "connectionWriter", "outputScreen", " outputScreen", "thisSteam"], "in": ["or", "inside", "din", "io", "IN", "t", "al", "ic", "inn", "inner", "kin", "bin", "all", "er", "is", "ind", "i", "ins", "add", "r", "on", "rin", "err", "source", "thin", "isin", "by", "init", "en", "info", "s", "output", "local", "this", "gin", "l", "cin", "current", "In", "sin", "inc", "it", "input", "pin", "run", "st", "file", "ini", "rt", "null", "user", "id", "inf", "reader", "login", "get"], "out": ["stable", "writer", "report", "sys", "OUT", "io", " OUT", "t", "at", "flush", "inner", "all", "net", "er", "write", "gc", "ins", "outs", "o", "x", "no", "client", "gr", "r", "msg", "err", "check", "c", "n", "name", "os", "OU", "info", "s", "aos", "output", "w", "Out", "this", "good", "outer", "table", "co", "res", "crit", "it", "p", "can", "run", "gt", "b", "ex", "ch", "chain", "null", "nt", "result", "to", "ou", "log", "temp", "cache", "list"], "solver": ["Solution", "resolver", "insolving", "insolution", "solved", "solving", "insolved", "ssolve", "unsolution", "ssolutions", " solutions", "ssolver", " solution", "resolving", "ssolution", "solutions", "resolved", "Solve", "insolver", "unsolved", "unsolving", "Solutions", "solve", "resolution", "unsolver", " solve", "Solver", "solution"], "testNumber": [" testNum", "testnumber", "testNumbers", " solutionNumber", "testNum", " attemptNum", " attemptNumber", " testnumber", " solutionNum", " testNumbers", " attemptnumber", " solutionnumber", " solutionNumbers", " attemptNumbers"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(final String[] args) throws Exception {\\n        final Scanner sc = new Scanner(System.in);\\n        String S;\\n        S = sc.next();\\n\\n        final Solver solver = new Solver();\\n        solver.solve(S);\\n    }\\n}\\n\\nclass Solver {\\n    public void solve(String S) {\\n        int ans = 0;\\n        int N = S.length();\\n        for (int i = 0; i < N / 2; i++) {\\n            if (S.charAt(i) != S.charAt(N - i - 1)) {\\n                ans++;\\n            }\\n        }\\n        System.out.println(ans);\\n    }\\n}\\n\\n", "target": "115", "substitutes": {"sc": ["SC", " SC", "sw", "osc", "pc", "sys", "se", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "gc", "uc", "anc", "sec", "sk", "sp", "c", "cc", "esc", "isc", "s", "cl", "lc", "Sc", " Sc", "arc", "desc", "dec", "mc", "RC", "cr", "ch", "dc", "cle", "cs", "ec", "tc", "ss", "scan"], "S": ["SC", "AS", "I", "SSL", "R", "C", "RS", "SH", "L", "SL", "TS", "SS", "IN", "SU", "SR", "SAN", "Q", "A", "M", "SER", "CS", "SA", "JS", "B", "US", "F", "P", "V", "SM", "DS", "SB", "s", "IS", "STR", "U", "SD", "SF", "SI", "GS", "SO", "G", "Si", "SE", "H", "NS", "SP", "ST", "SN", "SAM", "BS", "T", "SQL"], "solver": ["sacker", "Solution", "isolver", "isol", "resolver", "solved", "Sacker", "sol", "resacker", "isolved", " sacker", "resolve", "Sol", " solution", " solved", "isolve", "Solve", "solution", "solve", "resolution", " solve", "Solver", "Solved", " sol"], "ans": ["ANS", "anks", "offs", "AN", "lines", "eatures", "ats", "anes", "aps", "ads", "eds", "ann", "is", "ants", "ins", "outs", "uns", "ms", "ps", "an", " scans", "ks", "ians", "lan", "os", "s", "rans", "ends", "aces", "ons", "ens", "anas", "ars", "ros", "ations", "ows", "can", "ids", "ns", "rs", "errors", "ls", "as", "vals", "ents", "cs", "pan", "ims", "alls", "arts", "ts"], "N": ["I", "NM", "NN", "R", "NC", "C", "ND", "L", "NO", "Num", "NT", "O", "M", "D", "Net", "NF", "NG", "V", "n", "P", "NR", "Ni", "NL", "W", "NB", "NP", "NV", "TN", "NI", "GN", "NA", "K", "J", "Size", "NH", "H", "NS", "Len", "SN", "Length", "T", "Ns", "Sn", "NE"], "i": ["zi", "iter", "I", "hi", "ci", "ami", "\u0438", "si", "ic", "u", "ai", "xi", "ei", "is", "ind", "ori", "x", "o", "mi", "n", "cli", "mu", "index", "init", "y", "v", "gi", "ix", "info", "ui", "one", "ri", "ki", "j", "uri", "a", "qi", "pi", "multi", "ji", "it", "e", "ii", "PI", "gu", "ini", "di", "id", "li", "ti", "bi", "m", "iu", "phi"]}}
{"code": "import java.util.Collections;\\nimport java.util.HashSet;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int m = sc.nextInt();\\n        int[] p = new int[m];\\n        String[] s = new String[m];\\n        HashSet<Integer> set = new HashSet<>();\\n        for (int i = 0; i < m; i++) {\\n            p[i] = sc.nextInt();\\n            s[i] = sc.next();\\n            set.add(p[i]);\\n        }\\n        if(m == 0) {\\n            System.out.println(\"0 0\");\\n            return;\\n        }\\n        int size = Collections.max(set);\\n        boolean[] tmp = new boolean[size + 1];\\n        int[] tmp2 = new int[size + 1];\\n        int ac = 0;\\n        int wa = 0;\\n        for (int i = 0; i < m; i++) {\\n            int tmp3 = p[i];\\n            if(!tmp[tmp3]) {\\n                if(s[i].equals(\"WA\")) {\\n                    tmp2[tmp3]++;\\n                } else {\\n                    ac++;\\n                    wa += tmp2[tmp3];\\n                    tmp[tmp3] = true;\\n                }\\n            }\\n        }\\n        System.out.println(ac + \" \" + wa);\\n    }\\n}", "target": "48", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "pb", "ctx", "usc", "sim", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "sub", "anc", "fc", "sec", "sp", "cont", "c", "cc", "esc", "isc", "ser", "cl", "lc", "arc", "ctl", "dec", "desc", "mc", "scl", "cr", "ch", "ss", "sci", "scan", "conv", "dc", "cle", "cs", "tc", "Sc", "sb", "se"], "n": ["nm", "nb", "t", "nc", "net", "mn", "k", "count", "x", "on", "c", "nn", "v", "en", "N", "j", "l", "np", "cn", "sn", "ns", "nt", "num", "z", "d"], "m": ["sm", "mt", "nm", "f", "t", "mo", "bm", "mm", "dim", "max", "mp", "M", "mn", "k", "ma", "o", "ms", "z", "r", "md", "mi", "c", "dm", "h", "med", "y", "v", "im", "man", "gm", "w", "j", "perm", "l", "mr", "mod", "mc", "tm", "b", "cm", "num", "d", "g"], "p": ["bp", "pc", "pp", "pb", "t", "pe", "pro", "mp", "pa", "vp", "ps", "tp", "sp", "pkg", "P", "c", "rep", "pid", "h", "php", "pt", "ap", "v", "pl", "pers", "j", "l", "pr", "a", "jp", "pi", "np", "cp", "lp", "ip"], "s": ["sw", "fs", "sys", "si", "sl", "t", "ats", "sts", "sv", "strings", "sd", "is", "sq", "ses", "spe", "ins", "S", "ps", "ms", "sp", "c", "v", "bs", "string", "gs", "sn", "st", "ns", "rs", "ss", "ls", "ds", "so", "stats", "sa", "sing", "cs", "str", "sb", "ts"], "set": ["close", "draw", "open", "setup", "scale", "SET", "map", "net", "sync", "sh", "ha", "out", "sum", "reset", "add", "find", "save", "sp", "use", "check", "read", "ap", "equal", "init", "create", "mod", "start", "store", "mem", "it", "st", "pre", "group", "empty", "export", "end", "sche", "see", "sa", "list", "clear", "cache", "et", "tree", "get", "se"], "i": ["io", "us", "o", "iu", "y", "ix", "iii", "load", "pi", "ii", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "ei", "xi", "ori", "link", "cli", "init", "ui", "j", "uri", "qi", "multi", "my", "print", "chain", "ex", "ini", "ni", "list", "si", "ic", "sim", "oi", "inner", "is", "ind", "x", "mi", "err", "gi", "ji", "it", "di", "in", "details", "zi", "iq", "I", "ami", "\u0438", "ai", "me", "by", "im", "v", "info", "q", "ri", "ki", "batch", "ij", "PI", "li", "point", "ip"], "size": ["sm", "length", "mate", "zero", "storage", "zone", "SIZE", "si", "capacity", "shape", "scale", "area", "radius", "max", "count", "height", "year", "sum", "city", "scope", "ms", "iz", "sy", "mi", "len", "sp", "dimension", "name", "small", "power", "space", "mem", "pi", "Size", "sn", "cm", "ize", "empty", "news", "number", "ze", "see", "z", "g", "se"], "tmp": ["mb", "cmp", "bool", "auto", "nb", "fake", "snap", "ack", "ctx", "t", "img", "obj", "mp", "shot", "sup", "node", "tar", "timeout", "sp", "pkg", "rep", "partial", "qq", "vt", "emp", "tc", "priv", "cb", "perm", "rm", "utm", "po", "buff", "np", "aaa", "acc", "tt", "etc", "managed", "txt", "proc", "nt", "alpha", "cp", "temp", "cache", "kept", "tf", "bag", "attr"], "tmp2": ["perm2", "mp2", "mp4", "temp3", " tmp4", "cmp3", "perm1", "tmp4", "perm4", "temp4", "perm3", "cmpTwo", "temp2", " tmp1", "mp1", "tmpTwo", "temp1", "mp3", " tmpTwo", "cmp2", "tmp1", "mpTwo", "cmp4"], "ac": ["iac", "rac", "cas", "pc", "jac", "aa", "ack", "cu", "ic", "auc", "pac", "aq", "ai", "bc", "ad", "sac", "abc", "cam", "au", "x", "ab", "uc", "oc", "anc", "fc", "ach", "acs", "c", "cc", "am", "ap", "tc", "ace", "AC", "Ac", " cac", "a", "co", "mc", "acl", "acc", "aci", "ca", "alpha", "aca", "ec", "act", "unc"], "wa": ["aw", "sw", "wd", "aa", "dra", "wal", "wp", "xa", "awa", "wy", "lambda", "ww", "wt", "fa", "ha", "da", "wat", "sha", "na", "pa", "wb", "WA", "ap", "wi", "w", "ws", "kw", "wh", "we", "wx", "a", "acl", "wid", "apa", "wan", "sa", "wl", "wait", "Wa", "wo", "ay", "wr"], "tmp3": ["cache3", "obj34", "obj03", "cache2", "zip3", "zip4", "obj3", "mp2", "temp3", "tp34", "tmp003", " tmp03", "mp4", "attr003", "tpDef", "cmp3", "emp2", "emp43", "tmp03", "tmp4", " tmp7", "temp15", "temp4", "cmp15", "mp34", "cache03", "zipThree", "cmp4", "mp43", "tmp7", "tmpThree", "temp2", "zip15", "temp43", "tp3", "ptrThree", "obj2", "tpThree", "tmp15", "tmp43", "tp2", "temp7", "attrThree", "ptr003", "mp03", "tmp34", "attrDef", "mp3", "ptrDef", "emp4", "temp03", "tempThree", "emp3", "tp03", "attr3", "tmpDef", "cache7", "ptr3", "cmpThree", "tp003"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        PrintWriter out = new PrintWriter(System.out);\\n        \\n        final int S = Integer.parseInt(sc.next());\\n        final int W = Integer.parseInt(sc.next());\\n        \\n\\n\\n\\n\\n        \\n        out.println(S <= W ? \"unsafe\" : \"safe\");\\n        \\n        out.flush();\\n    }\\n}", "target": "177", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "exp", "exec", "sch", "gc", "sq", "sec", "sp", "c", "cc", "isc", "esc", "src", "cl", "decl", "lc", "desc", "ctl", "cons", "mc", "inc", "scl", "cr", "capt", "ch", "tch", "sel", "conv", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "out": ["writer", "error", "exit", "report", "sys", "OUT", "io", "t", "at", "flush", "ul", "all", "net", "write", "sum", "outs", "o", "client", "buffer", "r", "err", "up", "n", "os", "name", "v", "en", "info", "con", "aos", "output", "w", "Out", "outer", "put", "lock", "screen", "res", "crit", "it", "print", "ch", "cmd", "gt", "ex", "file", "to", "end", "ou", "in", "log", "list", "str"], "S": ["E", "I", "R", "C", "L", "SL", "SS", "SU", "A", "Z", "ISS", "M", "D", "SER", "CS", "SA", "JS", "B", "P", "V", "SB", "s", "N", "SK", "SF", "SI", "ESS", "K", "G", "J", "SE", "H", "Si", "X", "BS", "T", "SQL"], "W": ["E", "I", "WAR", "WT", "C", "VW", "L", "WE", "DW", "Wh", "EW", "WI", "Y", "Q", "A", "Z", "O", "Win", "M", "B", "WP", "F", "P", "V", "WS", "SW", "WM", "WA", "w", "N", "MW", "U", "NW", "WH", "WR", "G", "H", "X", "T", "BW", "We", "WC"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n    public static void main(String args[]) throws IOException {\\n\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\\n\tString str[] = br.readLine().split(\" \");\\n\tint A = Integer.parseInt(str[0]);\\n\tint B = Integer.parseInt(str[1]);\\n\\n\tif (A > 0 && A < 10 && B > 0 && B < 10)\\n\t    System.out.println(A * B);\\n\telse\\n\t    System.out.println(-1);\\n    }\\n}", "target": "58", "substitutes": {"br": ["bp", "bb", "div", "bm", "bc", "bh", "bridge", "dr", "bro", "bl", "gr", "sp", "tr", "shr", "bs", "bsp", "yr", "lr", "bt", "mr", "Br", "pr", "next", "sr", "rb", "gb", "cr", "bd", "vr", "kr", "ch", "b", "BR", "db", "be", "browser", "hr", "fr", "buf", "ber", "wr", "bn"], "str": ["iter", "usr", "syn", "sl", "t", "div", "js", "sts", "obj", "raw", "exp", "strings", "sol", "comm", "rip", "data", "stri", "gr", "r", "sec", "sp", "uts", "tr", "n", "cur", "s", "del", "Str", "STR", "desc", "string", "char", "vol", "print", "input", "oct", "b", "st", "dat", "ls", "att", "ld", "cs", "fr", "list", "split", "wr"], "A": ["Alpha", "E", "AS", "I", "AD", "AF", "R", "GA", "AL", "RA", "AN", "L", "AE", "C", "AV", "TA", "M", "D", "AA", "AP", "AX", "AY", "SA", "S", "HA", "ACC", "AST", "P", "AU", "IA", "AB", "N", "U", "AH", "AC", "EA", "AGE", "a", "JA", "BA", "G", "Ax", "AR", "H", "An", "Av", "As", "X", "Ant", "This", "T", "AT", "LA", "API", "CA"], "B": ["FB", "E", "I", "R", "TB", "GB", "C", "OB", "L", "RB", "Y", "Q", "BL", "JB", "M", "D", "BU", "S", "BO", "USB", "BI", "EB", "BB", "P", "V", "CB", "DB", "BT", "BE", "SB", "BF", "IB", "NB", "AB", "N", "BA", "G", "J", "WB", "b", "BR", "BY", "Bar", "BC", "BS", "T", "LB", "VB", "Bs", "BER"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String args[]){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint A = sc.nextInt();\\n\t\tint B = sc.nextInt();\\n\t\tint C = sc.nextInt();\\n\t\tint D = sc.nextInt();\\n\\n\t\tdo {\\n\t\t\tC = C-B;\\n\t\t\tif(C > 0) {\\n\t\t\t\tA = A-D;\\n\t\t\t}\\n\t\t}while (A > 0 && C > 0);\\n\t\t\t\t\\n\t\tif(A > C) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t}else{\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t\t\\n\t\tsc.close();\\n\t}\\n}", "target": "186", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "gc", "out", "sq", "scope", "sub", "anc", "fc", "sec", "sb", "sp", "cont", "c", "cc", "esc", "isc", "cl", "ko", "lc", "hl", "ctl", "desc", "arc", "mc", "jp", "inc", "scl", "cr", "capt", "ch", "system", "ck", "cgi", "ss", "dc", "cle", "cs", "tc", "Sc", "g", "scan"], "A": ["Alpha", "E", "AS", "I", "ASC", "R", "AF", "GA", "AD", "AL", "AN", "L", "RA", "AI", "AE", "AV", "M", "AA", "AP", "AY", "SA", "S", "ACC", "P", "At", "V", "AU", "IA", "AB", "N", "U", "AH", "AC", "EA", "a", "NA", "BA", "G", "AR", "H", "An", "As", "X", "T", "AT", "LA", "API", "CA"], "B": ["Ber", "E", "I", "R", "L", "RB", "Y", "BL", "M", "BO", "Bi", "BI", "BB", "P", "V", "CB", "DB", "BT", "BE", "IB", "NB", "AB", "N", "BA", "G", "J", "H", "b", "BR", "Bar", "BC", "BS", "T", "MB", "LB", "VB", "Bs"], "C": ["SC", "E", "CI", "I", "YC", "R", "CT", "Count", "L", "EC", "Y", "Q", "Z", "O", "M", "CS", "S", "F", "P", "V", "c", "CB", "JC", "CR", "TC", "W", "N", "DC", "U", "CD", "K", "G", "CM", "H", "CC", "CP", "BC", "X", "T", "LC", "CU", "CO", "CA", "Cs"], "D": ["E", "R", "L", "Ds", "Y", "Q", "Z", "Dir", "O", "M", "S", "Dr", "F", "P", "V", "DB", "DS", "DF", "DM", "W", "Deb", "DC", "N", "U", "CD", "G", "H", "DE", "DA", "T", "BD", "d", "DD"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint n = sc.nextInt();\\n\t\tsc.nextLine();\\n\t\tString s = sc.nextLine();\\n\\n\t\tfor (int i = 0; i < s.length(); i++) {\\n\t\t\tif ((int) (s.charAt(i) + n) <= 90) {\\n\t\t\t\tSystem.out.print((char) (s.charAt(i) + n));\\n\t\t\t} else {\\n\t\t\t\t{\\n\t\t\t\t\tSystem.out.print((char) ((s.charAt(i) + n) % 90 + 64));\\n\t\t\t\t}\\n\\n\t\t\t}\\n\\n\t\t}\\n\t}\\n}\\n", "target": "13", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "pb", "cu", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "lc", "ctl", "ctrl", "dec", "cons", "mc", "inc", "scl", "cr", "ok", "ch", "ck", "ss", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "n": ["nb", "t", "ln", "nc", "net", "ll", "k", "out", "na", "o", "x", "no", "ng", "c", "an", " ng", "nn", "nor", "y", "v", "en", "N", "j", "l", "nu", "np", "nl", "cn", "sn", "ns", "nt", "nw", "number", "num", "nr", "z", "d", "m", "ne"], "s": ["its", "sw", "qs", "hs", "sql", "sys", "sl", "ats", "t", "js", "sts", "sv", "se", "sf", "gets", "csv", "strings", "bis", "is", "abs", "sq", "ins", "S", "ms", "ps", "ys", "sp", "g", "less", "vs", "bs", "ws", "l", "gs", "bits", "p", "st", "b", "rs", "ns", "ls", "ss", "so", "xs", "ds", "stats", "cs", "str", "ims", "sb", "ts"], "i": ["iter", "I", "hi", "ci", "history", "ami", "\u0438", "si", "io", "ic", "sim", "u", "t", "ai", "xi", "ei", "iri", "ogi", "oi", "me", "base", "is", "ish", "ind", "ski", "ma", "x", "eu", "mi", "cli", "key", "index", "y", "im", "init", "gi", "ix", "q", "ui", "info", "remote", "ri", "ki", "batch", "j", "uri", "qi", "pi", "multi", "ji", "series", "it", "my", "ii", "b", "di", "ini", "id", "li", "in", "ti", "bi", "m", "iu", "phi", "g", "ip"]}}
{"code": "//Range\\nimport java.util.Scanner;\\n\\nclass Main {\\n    public void cubic() {\\n        Scanner sc = new Scanner(System.in);\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        int c = sc.nextInt();\\n        \\n        String out = \"No\";\\n        if (a < b) {\\n            if(b < c) {\\n                out = \"Yes\";\\n            }\\n        }\\n                                        \\n        System.out.println(out);\\n    }\\n    \\n    public static void main(String[] args){\\n    new Main().cubic();\\n    }\\n}", "target": "168", "substitutes": {}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n  private static int solve(int n) {\\n    int count = 0;\\n    while (n > 1) {\\n      n /= 2;\\n      count++;\\n    }\\n    return 1 << count;\\n  }\\n  \\n  private static void execute(ContestReader reader, PrintWriter out) {\\n    int n = reader.nextInt();\\n    out.println(solve(n));\\n  }\\n  \\n  public static void main(String[] args) {\\n    ContestReader reader = new ContestReader(System.in);\\n    PrintWriter out = new PrintWriter(System.out);\\n    execute(reader, out);\\n    out.flush();\\n  }\\n}\\n\\nclass ContestReader {\\n  private BufferedReader reader;\\n  private StringTokenizer tokenizer;\\n  \\n  ContestReader(InputStream in) {\\n    reader = new BufferedReader(new InputStreamReader(in));\\n  }\\n  \\n  public String next() {\\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n      try {\\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\\n      } catch (Exception e) {\\n        throw new RuntimeException(e);\\n      }\\n    }\\n    return tokenizer.nextToken();\\n  }\\n  \\n  public int nextInt() {\\n    return Integer.parseInt(next());\\n  }\\n  \\n  public long nextLong() {\\n    return Long.parseLong(next());\\n  }\\n  \\n  public double nextDouble() {\\n    return Double.parseDouble(next());\\n  }\\n  \\n  public String[] next(int n) {\\n    String[] array = new String[n];\\n    for (int i = 0; i < n; i++) {\\n      array[i] = next();\\n    }\\n    return array;\\n  }\\n  \\n  public int[] nextInt(int n) {\\n    int[] array = new int[n];\\n    for (int i = 0; i < n; i++) {\\n      array[i] = nextInt();\\n    }\\n    return array;\\n  }\\n  \\n  public long[] nextLong(int n) {\\n    long[] array = new long[n];\\n    for (int i = 0; i < n; i++) {\\n      array[i] = nextLong();\\n    }\\n    return array;\\n  }\\n  \\n  public double[] nextDouble(int n) {\\n    double[] array = new double[n];\\n    for (int i = 0; i < n; i++) {\\n      array[i] = nextDouble();\\n    }\\n    return array;\\n  }\\n  \\n  public char[] nextCharArray() {\\n    return next().toCharArray();\\n  }\\n  \\n  public int[][] nextInt(int n, int m) {\\n    int[][] matrix = new int[n][m];\\n    for (int i = 0; i < n; i++) {\\n      for (int j = 0; j < m; j++) {\\n        matrix[i][j] = nextInt();\\n      }\\n    }\\n    return matrix;\\n  }\\n  \\n  public long[][] nextLong(int n, int m) {\\n    long[][] matrix = new long[n][m];\\n    for (int i = 0; i < n; i++) {\\n      for (int j = 0; j < m; j++) {\\n        matrix[i][j] = nextLong();\\n      }\\n    }\\n    return matrix;\\n  }\\n  \\n  public double[][] nextDouble(int n, int m) {\\n    double[][] matrix = new double[n][m];\\n    for (int i = 0; i < n; i++) {\\n      for (int j = 0; j < m; j++) {\\n        matrix[i][j] = nextDouble();\\n      }\\n    }\\n    return matrix;\\n  }\\n  \\n  public char[][] nextCharArray(int n) {\\n    char[][] matrix = new char[n][];\\n    for (int i = 0; i < n; i++) {\\n      matrix[i] = next().toCharArray();\\n    }\\n    return matrix;\\n  }\\n}\\n", "target": "225", "substitutes": {"n": ["or", "nc", "net", "comm", "o", "y", "en", "w", "l", "next", "cn", "sn", "any", "num", "g", "nm", "ed", "nb", "f", "ct", "t", "network", "ren", "base", "nan", "no", "names", "ng", "len", "an", "nn", "init", "nu", "np", "nl", "after", "b", "nd", "nw", "number", "log", "d", "ll", "x", "size", "r", "on", "nor", "name", "local", "N", "it", "p", "ns", "le", "nt", "un", "z", "all", "na", "c", "h", "v", "conf", "dn", "q", " N", "ln", "ne"], "count": ["length", "counter", "Count", "nb", "ct", "frequency", "t", "repeat", "nc", "all", "gc", "ind", "now", "sum", "reset", "find", "ctr", "cond", "size", "cd", "cont", "cycle", "c", "index", "ount", "N", " c", "batch", "current", "rand", "amount", "multi", "acc", "print", "coll", "total", "nt", "number", "num", "z", "d", "draw", "scroll", "call"], "reader": ["builder", "io", "reflect", "sync", "parse", "rator", "source", "read", "wrapper", "rer", " reporter", "service", "handler", "driver", "file", "row", "rot", "test", "book", "iterator", " parser", "ro", "write", "client", "rx", "method", "oder", "through", "document", "run", "stream", "worker", "Reader", "rd", "yard", "iter", " scanner", "inner", "rc", "rate", "er", "r", "rr", "manager", "ler", " writer", "actor", "ner", "reading", " viewer", "red", "author", "owner", "rt", "writer", "window", "linger", "data", "buffer", "redo", "context", "entry", " ruler", "resource", " driver", "parser", "this", "mr", "rar", "input", "rs", "runner", "rl", "ry", "query", "loader"], "out": ["writer", "error", "report", "sys", "OUT", "io", "t", "at", "flush", "window", "inner", "obj", "all", "net", "write", "console", "o", "outs", "buffer", "client", "err", "os", "name", "server", "conf", "info", "aos", "output", "w", "Out", "this", "outer", "table", "co", "store", "crit", "it", "print", "p", "pool", "cmd", "txt", "ex", "file", "nt", "null", "user", "to", "end", "ou", "log", "list", "set", "cache", "str"], "tokenizer": ["okeniser", "Tokenizer", " tokenoder", "Tokenize", "tokenize", "okeniter", " tokenner", "Tokenister", "terminization", "serializer", " tokenizers", "lniter", "okener", " tokenifier", "okenization", "okenister", "okenoder", "terminize", "tokenister", "okenator", "tokenifier", "serialize", "tokenner", "lnize", "okenifier", "tokenization", "tokenizers", "terminizer", "Tokenization", " tokeniser", " tokenization", "tokenoder", "lnizer", "lnization", " tokenator", "tokeniter", "okenner", "Tokeniser", " tokenize", "tokeniser", "okenizer", "Tokenator", "serialer", "tokenator", "Tokenifier", "tokener", "okenizers", "okenize", " tokenister", "terminiter", "serialner", "Tokenoder", " tokener", "Tokenizers"], "in": ["or", "xml", "din", "io", "serv", "IN", "ic", "inner", "inn", "from", "re", "bin", "mm", "net", "er", "console", "is", "ins", "data", "r", "on", "err", "cli", "lin", "source", "init", "conf", "info", "con", "gin", "doc", "l", "cin", "current", "In", "inc", "it", "input", "run", "stream", "file", "ini", "rt", "null", "id", "log", "val", "ac"], "array": ["root", "storage", "at", "collection", "csv", "area", "raw", "Array", "global", "response", "arr", "object", "function", "here", "arrow", "child", "append", "file", "row", "camera", "other", "map", "parent", "var", "hash", "table", "amount", "my", "vector", "component", "audio", "angle", "cloud", "list", "cache", "rays", "format", "sequence", "record", "section", "air", "range", "our", "params", "save", " Array", "actor", "external", "queue", "container", "stack", "trace", "message", "archive", "pair", "ar", "attribute", "ray", "instance", "angular", "window", "all", "now", "module", "stage", "database", "resource", "variable", "batch", "allow", "bar", "element", "export"], "i": ["ie", "hi", "ci", "I", "status", "ami", "f", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "ei", "xi", "me", "us", "ies", "ice", "dr", "ims", "is", "ful", "client", "mi", "c", "cli", "mac", "iy", "php", "im", "y", "gi", "info", "ix", "q", "ui", "init", "MI", "set", "ki", "batch", "ia", "ity", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "PI", "ex", "di", "ini", "id", "li", "fire", "ti", "bi", " I", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner; \\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner in = new Scanner(System.in);\\n\t\tString line = in.nextLine();\\n\t\tString[] Array = line.split(\" \");\\n\t\tint a = Integer.parseInt(Array[0]);\\n\t\tint b = Integer.parseInt(Array[1]);\\n\t\tint c = Integer.parseInt(Array[2]);\\n\t\tif(a<b&&b<c&&a<c){\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t}else{\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t}\\n}", "target": "168", "substitutes": {"in": ["inside", "din", "io", "lines", "IN", "serv", "inn", "inner", "bin", "all", "is", "out", "ind", "i", "ins", "sum", "std", "d", "r", "err", "check", "n", "source", "thin", "isin", "conf", "en", "info", "con", " din", "l", "doc", "cin", "char", "In", "sin", "inc", "world", "input", "old", "ini", "null", "as", "user", "inf", "reader", "ln", "get", "scan"], "line": ["liner", "word", "LINE", "ine", "lines", "pe", "raw", "inline", "out", "data", "Line", "link", "lin", "source", "page", "output", "space", "l", "next", "string", "frame", "store", "nl", "text", "sample", "input", "command", "le", "file", "result", "detail", "block", "row", "str", "comment", "ln", "list", "cell", "message", "se"], "Array": [" array", "Values", "RAY", "Row", "JSON", "Stream", "ray", "Var", "Vector", "Area", "Action", "Parts", "Square", "Memory", "Ray", "Hash", "A", "Function", "Range", "Ar", "Line", "Rest", "Message", "V", "At", "Raw", "Query", "Base", "Number", "Str", "Bank", "Table", "Block", "Answer", "Type", "Bytes", "Release", "As", "Box", "Matrix", "Instance", "Length", "array", "Root", "All", "Stage", "Group", "rays", "Value", "Order"], "a": ["access", "ar", "aa", "f", "t", "al", "aq", "at", "ai", "area", "from", "va", "all", "A", "fa", "da", "au", "na", "ab", "pa", "oa", "r", "ach", "ao", "ba", "am", "an", "app", "s", "ea", "ga", "ace", "l", "ta", "aj", "ae", "af", "ca", "alpha", "la", "as", "sa", "act", "ma", "ac"], "b": ["mb", "bp", "nb", "f", "bb", "t", "u", "bc", "bis", "bf", "i", "ub", "o", "ab", "ble", "B", "r", "sb", "fb", "ba", "n", "wb", "h", "eb", "ib", "y", "v", "bs", "ob", "cb", "j", "l", "rb", "e", "gb", "db", "be", "bi", "d", "bu", "g"], "c": ["ci", "f", "C", "ct", "cu", "t", "div", "u", "com", "rc", "bc", "cond", "fc", "unc", "r", "cd", "n", "ce", "cc", "h", "v", "lc", "cb", "l", "co", "mc", "e", "cr", "ch", "p", "chain", "etc", "cm", "cf", "dc", "cs", "z", "d", "m", "tc", "sc", "g", "ac"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main{\\n\tpublic static void main(String[] args){\\n\t\t\\n\t\tScanner num = new Scanner(System.in);\\n\t\t\\n\t\tint a = num.nextInt();\\n\t\tint b = num.nextInt();\\n\t\tif(a == b){\\n\t\t\tSystem.out.println(\"a == b\");\\n\t\t}else if(a > b){\\n\t\t\tSystem.out.println(\"a > b\");\\n\t\t}else if(a < b){\\n\t\t\tSystem.out.println(\"a < b\");\\n\t\t}else{\\n\t\t\tSystem.out.println(\"\u5165\u529b\u306b\u554f\u984c\u304c\u3042\u308a\u307e\u3059\");\\n\t\t}\\n\t}\\n}", "target": "179", "substitutes": {"num": ["ver", " nu", "nm", "mon", "nb", "prim", "ann", "gener", "net", "Num", "out", "sum", "na", "no", "mom", "hom", "alph", "msg", "nam", " numer", "eng", "NUM", "cal", "en", "gor", "con", "Number", "man", "sam", "nu", "gen", "np", "norm", "nav", "hum", "um", "conv", "number", " Num", "rot", "nom", "gram", "get", "scan", "bn"], "a": ["access", "ar", "ami", "aa", "era", "ax", "at", "al", "ai", "area", "from", "A", "da", "au", "now", "data", "ab", "oa", "ach", "ao", "act", "ba", "an", "am", "index", "name", "app", "ea", "ga", "ia", "sta", "isa", "ta", "admin", "ae", "aj", "aaa", "aff", "\u00e1", "p", "aka", "ca", "alpha", "la", "as", "sa", "eas", "ma", "ama", "ac"], "b": ["nb", "f", "back", "pb", "bb", "t", "u", "bc", "bis", "i", "bound", "ab", "B", "r", "sb", "body", "fb", "c", "ba", "n", "wb", "h", "eb", "ib", "y", "v", "ob", "s", "w", "j", "l", "rb", "gb", "br", "e", "p", "bar", "db", "be", "erb", "bi", "z", "d", "m", "g"]}}
{"code": "import java.util.Scanner;\\n \\npublic class Main {\\n\tpublic static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        String s = sc.next();\\n        String[] sp = s.split(\"\");\\n        String[] al = {\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"};\\n        for(int i = 0; i < sp.length; i++) {\\n            for(int j = 0; j < 26; j++) {\\n                if(sp[i].equals(al[j])) {\\n                    if(j+N >=26) {\\n                        System.out.print(al[j+N-26]);\\n                    }else {\\n                        System.out.print(al[j+N]);\\n                    }\\n                    break;\\n                }\\n            }   \\n        }\t\\n        System.out.println(\"\");\\n\t}\\n}", "target": "13", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "se", "sv", "rc", "nc", "bc", "sync", "sh", "sch", "sq", "gc", "anc", "sec", "c", "cc", "isc", "ser", "esc", "src", "cl", "ko", "lc", "Sc", " Sc", "ctl", "sr", "desc", "dec", "mc", "nl", "inc", "scl", "cr", "ok", "ch", "system", "sel", "sci", "conv", "cle", "cs", "ec", "asc", "ss", "scan"], "N": ["E", "CN", "I", "NN", "R", "NC", "C", "ND", "L", "AN", "NO", "Z", "Num", "NT", "O", "M", "D", "S", "B", "MN", "P", "V", "n", "NG", "NR", "Ni", "NB", "NP", "NV", "TN", "NI", " n", "NA", "K", "G", "J", "NJ", "H", "NS", "X", "SN", "T", "Ns", "Sn", "NE"], "s": ["sw", "sql", "f", "sl", "t", "js", "sf", "sv", "se", "is", "sq", "S", "ps", "r", "g", "c", "n", "h", "v", "bs", "w", "l", "string", "p", "b", "rs", "ls", "str", "ss", "sb", "ts"], "sp": ["sm", "sw", "pp", "spl", "si", "sl", "ip", "sv", "Sp", "esp", "sh", "sch", "spe", "spr", "ps", "tp", "sk", "n", "isp", "pt", "ap", "bsp", "pl", "space", "jp", "np", "osp", "nl", "p", "ch", "SP", "st", "pol", "ss", "so", "str", "lp", "se"], "al": ["Al", "alg", "aler", "ar", "ali", "AL", "sl", "ul", "alt", "wal", "all", "ll", "stal", "sal", "bl", "ial", "ab", "als", "alph", "isal", "n", "mal", "ap", "cal", "ale", "adal", "pl", "tal", "l", "ell", "gal", "ass", "bal", "il", "p", "hal", "dal", "alf", "el", "pal", "ala"], "i": ["zi", "iq", "I", "ie", "ci", "ami", "si", "io", "ic", "t", "ai", "ei", "xi", "is", "ind", "ori", "x", "mi", "index", "gi", "y", "im", "init", "ix", "ui", "ri", "ki", "ia", "pi", "ji", "ij", "it", "ii", "ini", "di", "li", "ti", "bi", "m", "iu", "phi", "ip", "asi"], "j": ["note", "ie", "jac", "bj", "at", "jl", "js", "obj", "k", "out", "fr", "ion", "oj", "job", "o", "ne", "ind", "z", "je", "err", "uj", "n", "ge", "key", "jc", "pt", "y", "v", "jack", "q", "dj", "json", "adj", "pr", "aj", "jp", "jo", "jump", "ji", "ij", "J", "it", "br", "jit", "p", "b", "jj", "other", "di", "user", "to", "bi", "kj", "ort", "el", "g", "ja"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\\n        String[] line = bufferedReader.readLine().split(\" \");\\n        int A = Integer.parseInt(line[0]);\\n        int B = Integer.parseInt(line[1]);\\n        int H = Integer.parseInt(line[2]);\\n        int M = Integer.parseInt(line[3]);\\n        double radA = Math.PI * (60 * H + M) / (60 * 12) * 2;\\n        double radB = Math.PI * M / 60 * 2;\\n        double C = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.abs(radA - radB)));\\n        System.out.println(C);\\n    }\\n}\\n", "target": "86", "substitutes": {"bufferedReader": ["buffiedReader", "buffedRead", "buffedReader", "buffenedReader", "Buffedreader", "buffenedParser", "buffeledreader", "bufferredreader", "bufferredLoader", "BuffedParser", " bufferredBuilder", "bufferedreader", "buffersreader", " bufferedLoader", "buffedParser", "buffiedBuilder", "BuffedReader", "buffeledBuilder", " bufferedreader", " bufferredLoader", "bufferedRead", "buffenedreader", " bufferedBuilder", "BufferedRead", "BufferedParser", " bufferredReader", "bufferedParser", "buffeledLoader", "buffersReader", "buffedreader", "buffersRead", "bufferredReader", "bufferedBuilder", "bufferredBuilder", "buffeledReader", "buffersParser", "BufferedReader", "buffiedreader", "Bufferedreader", "buffenedRead", "BuffedRead", "bufferedLoader", " bufferredreader", "buffiedLoader"], "line": ["note", "cell", "iter", "word", "tile", "liner", "LINE", "ine", "zone", "date", "tab", "range", "pe", "part", "node", "port", "Line", "no", "link", "parse", "rule", "entry", "lo", "page", "device", "shell", "eline", "column", "cat", "l", "string", "nl", "print", "piece", "stroke", "cmd", "le", "group", "detail", "field", "user", "number", "row", "log", "list", "ln", "query", "block", "point", "frame", "se", "call"], "A": ["E", "AS", "I", "AD", "AF", "R", "GA", "AL", "RA", "L", "AE", "AN", "AV", "Array", "D", "AA", "AP", "SA", "S", "ACE", "AMA", "P", "V", "AU", "IA", "AB", "N", "AC", "AM", "a", "BA", "ESS", "G", "J", "AR", "An", "Av", "As", "This", "T", "AT", "LA", "AST", "API", "CA"], "B": ["UB", "E", "I", "TB", "R", "GB", "OB", "L", "RB", "BM", "Y", "BL", "D", "S", "Bi", "USB", "BI", "BB", "P", "V", "DB", "BT", "SB", "IB", "AB", " b", "BA", "G", "J", "b", "BR", "BY", "BC", "T", "LB", "VB", "Bs", "BER"], "H": ["HO", "R", "He", "L", "HH", "SH", "HI", "HE", " h", "Y", "S", "MH", "HA", "F", "P", "V", "HR", "h", "HM", "W", "OH", "HL", "N", "Height", "DH", "CH", "TH", "G", "HS", "J", "NH", "T", "HT"], "M": ["E", "I", "R", "PM", "L", "Ma", "Y", "Q", "Z", "O", "D", "JM", "S", "MH", "Ms", "MC", "F", "P", "V", "SM", "HM", "DM", "W", "MI", "N", "U", "MAN", "MM", "AM", "TH", "G", "CM", "J", "MX", "MS", "MT", "T", "m"], "radA": ["intAA", "devAn", "RadAn", "redAP", "radAn", "rankAn", "randAn", "RadCA", "randCA", "rankAA", "intAP", "devCA", "redAA", "devL", "redA", "rankAP", "redAn", "devA", "RadA", "RadL", "radAA", "radCA", "radAP", "intAn", "rankA", "randL", "radL", "intA", "randA"], "radB": ["randT", "randB", "vecCB", "skyb", " radb", "termb", "skyB", "vecC", "radb", "skyT", "randC", "termB", "radC", " radC", " radCB", "termM", "vecb", "radCB", "termT", "randCB", "radM", "skyM", "randb", "radT", "randM", "vecB"], "C": ["SC", "CI", "CN", "YC", "KC", "R", "CT", "EC", "CE", "ISC", "D", "CS", "CDC", "F", "P", "c", "V", "CW", "JC", "CB", "CNN", "Craig", "N", "CCC", "Cal", "CD", "Cr", "K", "G", "CM", "CL", "CC", "CON", "CV", "LC", "T", "CG", "REC", "CU", "CO", "CA", "Cs"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tScanner sc = new Scanner(System.in);\\n\\n\tvoid run() {\\n\t\tint n = sc.nextInt();\\n\t\tint[] R = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tR[i] = sc.nextInt();\\n\t\t}\\n\t\tint min = R[0];\\n\t\tint ans = -Integer.MAX_VALUE;\\n\t\tfor (int i = 1; i < n; i++) {\\n\t\t\tans = Math.max(ans, R[i] - min);\\n\t\t\tmin = Math.min(min, R[i]);\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n\\n\tpublic static void main(String[] args) {\\n\t\tnew Main().run();\\n\t}\\n}", "target": "208", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "pb", "ctx", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "cv", "anc", "fc", "r", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "arc", "ctl", "mc", "nl", "scl", "cr", "capt", "ch", "system", "ss", "sci", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["nb", "f", "t", "network", "nc", "all", "net", "mn", "nan", "k", "na", "x", "o", "names", "ng", "no", "r", "on", "len", "c", "nn", "fn", "name", "v", "gn", "en", "q", "N", "j", "l", "nu", " N", "np", "nl", "cn", "p", "sn", "ns", "nt", "ni", "number", "num", "un", "z", "ln", "m", "ne", "g"], "R": ["RES", "RG", "I", "RO", "RA", "RS", "C", "L", "Res", "JR", "Y", "REM", "SR", "RT", "Q", "RB", "Z", "M", "D", "REL", "RP", "S", "B", "RL", "r", "RI", "P", "V", "NR", "CR", "RE", "RR", "Rot", "N", "IR", "K", "J", "AR", "BR", "RM", "DR", "GR", "Rs", "T", "RF", "RAM"], "i": ["io", "o", "iu", "y", "ix", "pi", "series", "ii", "gu", "id", "ti", "bi", "fire", "phi", "g", "ie", "hi", "ci", "ei", "xi", "base", "client", "cli", "init", "ui", "j", "uri", "qi", "multi", "my", "print", "chain", "ini", "list", "iter", "sequence", "iso", "si", "ic", "sim", "oi", "r", "mi", "err", "gi", "json", "ji", "it", "di", "ims", "slice", "zi", "I", "ami", "\u0438", "u", "ai", "me", "ies", "key", "iy", "im", "v", "info", "q", "ri", "ki", "batch", "this", "ity", "ij", "PI", "inx", "li", "point", "ip"], "min": ["default", "sort", "span", "aug", "first", "mit", "div", "pos", "shift", "pres", "left", "part", "max", "ref", "sol", "mn", "last", "ind", "stat", "na", "minus", "sub", "sum", "r", "amin", "mi", "Min", "len", "partial", "mid", "down", "init", "MIN", "Mini", "small", "lower", "pl", "only", "local", "mini", "l", "sam", "mel", "next", "mod", "rest", "start", "sin", "lt", "diff", "p", "minimum", "st", "pre", "mean", "search", "mins", "ni", "dist", "rel", "minute", "in", "un", "begin", "mine", "none", "m", "ne", "loc"], "ans": ["nets", "ran", "ANS", "ions", "orts", "offs", "AN", "lines", "ats", "types", "sts", "eds", "aps", "rows", "ann", "ols", "ims", "is", "mn", "ants", "ins", "x", "outs", "ms", "uns", "an", "ians", "ks", "vs", "os", "s", "amps", "rans", "ends", "ons", "ens", "cons", "ars", "vers", "ros", "ations", "gs", "res", "ids", "can", "ns", "rs", "mins", "ls", "scan", "vals", "ents", "cs", "actions", "arts", "xs", "ts"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\\n\t\tScanner scan = new Scanner(System.in);\\n\\n\t\tint n = scan.nextInt();\\n\t\tint m = scan.nextInt();\\n\t\tint c = scan.nextInt();\\n\t\tint ans = 0;\\n\t\tint b[] = new int[m];\\n\\n\t\tfor (int i = 0; i < m; i++) {\\n\t\t\tb[i] = scan.nextInt();\\n\t\t}\\n\\n\t\tint num = 0;\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tfor (int j = 0; j < m; j++) {\\n\t\t\t\tnum += scan.nextInt() * b[j];\\n\t\t\t}\\n\t\t\tif (num + c > 0)  ans++;\\n\t\t\tnum = 0;\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n\\n}", "target": "68", "substitutes": {}}
{"code": "\\nimport java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n\\n        int k = sc.nextInt();\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        int ad = 0;\\n        int ans = 0;\\n        sc.close();\\n\\n        ad = a;\\n        for(int i=0 ; i<=(b-ad) ; i++){\\n            ans = (a%k==0)?1:0;\\n            if(ans == 1){break;}\\n            a++;\\n        }\\n        if(ans == 1){\\n            System.out.println(\"OK\");\\n        }else{      \\n            System.out.println(\"NG\");\\n        }\\n    }\\n}", "target": "28", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "sub", "anc", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "ser", "cl", "lc", " Sc", "arc", "ctl", "dec", "desc", "ctrl", "mc", "inc", "scl", "cr", "ch", "system", "ck", "conv", "sa", "dc", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "k": ["kn", "kan", "ka", "kh", "ak", "dk", "kk", "max", "unk", "ek", "alk", "sk", "ks", "n", "ke", "kar", "kt", "kid", "q", "ko", "w", "kw", "j", "ikk", "ik", "ku", "kl", "K", " K", "ok", "ck", "p", "kr", "mk", "num", "kj", "m", "km", "tk"], "a": ["art", "ar", "aa", "at", "t", "al", "ai", "area", "va", "A", "ak", "da", "au", "na", "o", "ab", "pa", "oa", "r", "ao", "an", "ba", "c", "am", "n", "index", "ap", "y", "ast", "s", "m", "ada", "ia", "j", "l", "sta", "ta", "ae", "e", "p", "as", "alpha", "to", "sa", "d", "ma", "arts", "ac"], "b": ["mb", "bp", "nb", "f", "pb", "bb", "t", "bc", "base", "bf", "ab", "B", "r", "g", "c", "ba", "n", "wb", "eb", "ib", "y", "v", "bs", "ob", "l", "rb", "e", "br", "gb", "p", "db", "be", "bi", "z", "d", "m", "sb"], "ad": ["Ad", "AD", "addr", "ar", "inter", "dd", "back", "ax", "ads", "bb", "al", "ai", "sd", "pard", "dk", "rad", "da", "au", "ind", "ab", "adi", "pd", "ade", "md", "an", "ada", "adj", "ta", "ud", "adr", "p", "td", "ca", "nd", "ds", "id", "db", "pad", "ard", "ld", "ady", "d", "od", "ac"], "ans": ["nets", "ANS", "offs", "anes", "lines", "ats", "ums", "aps", "sts", "eds", "ads", "eps", "ann", "ies", "ants", "grades", "ins", "uns", "names", "ms", "ps", "aus", "acs", "an", "ks", "n", "ians", "vs", "ags", "lan", "os", "ands", "s", "terms", "amps", "rans", "ends", "asks", "ons", "ens", "cons", "ars", "vers", "ates", "ops", "ids", "ns", "rs", "ls", "as", "ds", "wan", "vals", "ents", "cs", "mas", "arts", "xs", "ts"], "i": ["zi", "I", "hi", "ci", "si", "t", "ic", "sim", "ai", "xi", "ei", "ski", "is", "ori", "x", "ms", "mi", "err", "n", "index", "init", "im", "y", "gi", "ix", "ui", "ki", "j", "ia", "l", "qi", "pi", "multi", "it", "ii", "di", "ini", "ni", "li", "ti", "m", "iu", "phi", "ip", "asi"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        MyScanner sc = new MyScanner();\\n\\n        long n = sc.nextLong();\\n\\n        long ans = n-1;\\n        for (int x = 2; x < Math.sqrt(n)+5; x++) {\\n            long y = n / x;\\n\\n            if (x * y == n)\\n                ans = Math.min(x+y-2, ans);\\n        }\\n\\n        System.out.println(ans);\\n    }\\n\\n    static class MyScanner {\\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1 << 15);\\n        StringTokenizer tokenizer;\\n\\n        String next() {\\n            try {\\n                while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n                    tokenizer = new StringTokenizer(reader.readLine());\\n                }\\n            } catch (IOException ignored) {\\n            }\\n            return tokenizer.nextToken();\\n        }\\n\\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n    }\\n}", "target": "157", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "NC", "sys", "pb", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "cv", "uc", "sp", "c", "cc", "esc", "isc", "cl", "lc", "desc", "mc", "acc", "scl", "cr", "ch", "tch", "rs", "ca", "conv", "cs", "pic", "ec", "tc", "Sc"], "n": ["nb", "nz", "t", "ln", "nc", "net", "ll", "mn", "k", "i", "na", "o", "names", "ng", "conn", "r", "and", "len", "an", "c", "nn", "name", "v", "gn", "s", "w", "N", "j", "l", "nu", "np", "nl", "cn", "norm", "p", "sn", "ns", "nt", "nw", "num", "z", "d", "m", "ne", "g"], "ans": ["ANS", "ions", "es", "span", "anks", "anes", "lines", "ats", "eps", "aps", "rows", "ann", "ings", "nan", "ants", "ins", "outs", "ms", "als", "names", "ys", "aus", "an", " scans", "ians", "vs", "ks", "angs", "nn", "os", "lan", "s", "amps", "rans", "posts", "ons", "ens", "anas", "cons", "ars", "nl", "ations", "gs", "ows", "ros", "can", "ns", "rs", "ls", "as", "scan", "vals", "ents", "cs", "reads", "arts", "xs", "ts"], "x": ["ux", "fx", "px", "xp", "ick", "f", "xd", "ct", "ax", "t", "xx", "xt", " cx", " xx", "xi", "lex", "xa", "xf", "xxxx", "dx", "ox", "k", "cross", "i", "c", "h", "index", " ax", " i", "xc", " X", "v", "ix", "yx", "s", "w", "xe", "j", "el", "l", "wx", "rx", "co", "mx", "e", "ident", "p", "xy", "xes", "ex", "tx", "X", "inx", " dx", "xxx", "z", "m", " tx", "xs"], "y": ["ye", "cy", "yl", "vy", "py", "sys", "Y", "ies", "oy", "fy", "yer", "i", "gy", "o", "sy", "ys", "uy", "ym", "iy", "yt", "v", "ty", "ry", "yx", "yr", "ey", "sky", "my", "ya", "ly", "xy", "ny", "axy", "yn", "yi", "yy", "hy", "ay"], "reader": ["writer", "iter", "dd", "io", "iterator", "rc", "inner", "er", "ro", "dr", "data", "buffer", "r", "rator", "rr", "context", "read", "parser", "ri", "this", "ner", "rx", "rar", "input", "handler", "system", "stream", "file", "tx", "Reader", "runner", "row", "rl", "in", "ry", "rd", "loader"], "tokenizer": ["Tokenizer", "serialifier", "serialzer", "Tokenize", "toolifier", "tokenize", "okenisher", "okeniter", " tokenner", "terminizable", "callization", "callizer", "operatorifier", " tokenifier", " tokenizers", "serializer", "okenization", "okenzer", "okenator", "tokenifier", " tokenzer", "tokenner", "callisher", "okenifier", "tooliter", "tokenization", "tokenizers", "Tokenization", "terminizer", "serializers", "tokenizable", " tokenator", "toolator", "Tokenzer", "tokeniter", "okenner", " tokenize", "operatorizer", "okenizer", "Tokenifier", "terminner", "callzer", "okenizable", "tokenator", "Tokenator", "tokenisher", "operatorize", "okenizers", "Tokenisher", "terminiter", " tokeniter", "toolizer", " tokenizable", "operatorator", "tokenzer"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner scan = new Scanner(System.in);\\n\\n\t\tlong A = scan.nextLong() - 1;\\n\t\tlong B = scan.nextLong();\\n\t\tlong C = scan.nextLong();\\n\t\tlong D = scan.nextLong();\\n\\n\t\tlong tmp = (C * D) / gcd(C, D);\\n\t\tlong n = ((B - (B / C + B / D)) + (B / tmp));\\n\t\tlong m = ((A - (A / C + A / D)) + (A / tmp));\\n\\n\t\tSystem.out.println(n - m);\\n\t}\\n\\n\tstatic long gcd(long a, long b) {\\n\t\tif (b == 0) {\\n\t\t\treturn a;\\n\t\t}\\n\t\ta = a % b;\\n\t\treturn gcd(b, a);\\n\t}\\n}", "target": "9", "substitutes": {"scan": ["report", "connect", "sql", "sys", "black", "get", " scanner", "san", "pass", "Scan", "sv", "se", "re", "ann", "sync", "send", "reach", "k", "out", "gate", "stat", "find", "gc", "skip", "link", "parse", "save", "r", "sur", "check", "an", "read", "nn", "ser", "v", "scroll", "info", "ner", "cat", "sin", "ch", "can", "system", " Scan", "p", "spin", "search", "cgi", "util", "proc", "see", "in", "row", "log", "list", "query", "sc", "g"], "A": ["MA", "E", "AS", "I", "AD", "R", "AF", "GA", "AL", "AN", "L", "AE", "Y", "AZ", "AV", "Array", "M", "AA", "AP", "ACT", "SA", "S", "HA", "ACC", "ACE", "AMA", "P", "V", "At", "AU", "IA", "AB", "N", "ANY", "AH", "AC", "EA", "ANG", "AM", "JA", "BA", "G", "AR", "H", "An", "As", "T", "AT", "LA", "API", "ALL", "CA"], "B": ["Ber", "E", "I", "R", "TB", "GB", "L", "RB", "BM", "Y", "BL", "O", "M", "BU", "S", "BO", "USB", "EB", "BB", "BG", "P", "V", "DB", "BT", "BE", "BF", "IB", "NB", "AB", "N", "Builder", "BA", "G", "J", "WB", "Big", "BR", "LIB", "BY", "BC", "T", "BW", "LB", "VB", "Bs"], "C": ["E", "CI", "I", "YC", "R", "CT", "L", "GC", "Y", "Q", "CF", "Z", "O", "Cow", "M", "Char", "Ch", "S", "F", "P", "V", "c", "CB", "Co", "CNN", "W", "N", "DC", "U", "CD", "K", "G", "CM", "H", "CC", "CON", "BC", "CP", "CV", "T", "CU", "CA", "Cs"], "D": ["E", "I", "DL", "DIR", "R", "MD", "FD", "L", "DI", "DW", "Ds", "Y", "Q", "Z", "Dir", "O", "M", "DP", "Diff", "S", "Def", "F", "P", "V", "DB", "DEV", "DS", "DF", "DM", "W", "DN", "N", "DC", "U", "CD", "SD", "G", "J", "DE", "X", "dL", "DA", "T", "TD", "d", "DD"], "tmp": ["cmp", "nm", "TB", "nb", "t", "TT", "mm", "mp", "mut", "M", "out", "sum", "tp", "sp", "MP", "P", "beta", "v", "emp", "Temp", "j", "perm", "l", "np", "tt", "p", "tm", "etc", "SP", "total", "td", "txt", "nt", "mk", "db", "top", "T", "cp", "num", "temp", "tc", "TM"], "n": ["nv", "nm", "nb", "f", "t", "mn", "na", "o", "x", "r", "d", "on", "c", "nn", "fn", "v", "en", "dn", "w", "N", "j", "l", "nu", "nl", "np", "cn", "p", "sn", "ns", "nt", "num", "z", "ln", "ne", "g"], "m": ["sm", "mt", "nm", "f", "t", "mo", "mm", "mp", "M", "mn", "ma", "i", "o", "x", "ms", "r", "ym", "md", "mi", "c", "dm", "an", "v", "man", "gm", "j", "l", "mx", "e", "p", "tm", "vm", "cm", "num", "z", "d", "g"], "a": ["ar", "aa", "f", "at", "al", "u", "t", "aq", "area", "au", "ma", "i", "na", "ab", "o", "x", "oa", "pa", "r", "ao", "c", "ba", "am", "an", "h", "y", "v", "ea", "w", "ia", "l", "ae", "aaa", "e", "p", "ca", "as", "alpha", "la", "sa", "d", "g", "ac"], "b": ["mb", "bp", "nb", "f", "back", "bb", "t", "u", "bc", "base", "bis", "i", "o", "ab", "r", "sb", "fb", "c", "ba", "h", "eb", "ib", "y", "v", "bs", "w", "cb", "j", "l", "rb", "e", "bd", "br", "p", "bar", "db", "be", "bi", "z", "d", "g"]}}
{"code": "import java.io.PrintStream;\\nimport java.util.HashMap;\\nimport java.util.HashSet;\\nimport java.util.LinkedList;\\nimport java.util.Map;\\nimport java.util.Queue;\\nimport java.util.Scanner;\\nimport java.util.Set;\\n\\npublic class Main {\\n\tstatic boolean debug = true;\\n\tstatic Scanner sc = new Scanner(System.in);\\n\\n\tpublic static void main(String[] args) {\\n\t\t// write here\\n\t\tint N=sc.nextInt();\\n\t\tint M=sc.nextInt();\\n\t\tint [] map=new int[N+1];\\n\t\tfor(int i=0;i<M;i++){\\n\t\t\tmap[sc.nextInt()]++;\\n\t\t\tmap[sc.nextInt()]++;\\n\t\t}\\n\t\tfor(int i=1;i<map.length;i++)\\n\t\t\tSystem.out.println(map[i]);\\n\t\t\\n\t}\\n\\n\tprivate static void print(String string) {\\n\t\t// TODO Auto-generated method stub\\n\t\tif (debug)\\n\t\t\tSystem.out.println(string);\\n\t}\\n\\n\tprivate static void print(int[] data) {\\n\t\tif (debug) {\\n\t\t\tfor (int i = 0; i < data.length; i++)\\n\t\t\t\tSystem.out.println(i + \":\" + data[i]);\\n\t\t}\\n\t}\\n\\n\tprivate static void print(String[] data) {\\n\t\tif (debug) {\\n\t\t\tfor (int i = 0; i < data.length; i++)\\n\t\t\t\tSystem.out.println(i + \":\" + data[i]);\\n\t\t}\\n\t}\\n\\n\tprivate static void print(char[] data) {\\n\t\tif (debug) {\\n\t\t\tfor (int i = 0; i < data.length; i++)\\n\t\t\t\tSystem.out.println(i + \":\" + data[i]);\\n\t\t}\\n\t}\\n\\n\tprivate static void print(double[] data) {\\n\t\tif (debug) {\\n\t\t\tfor (int i = 0; i < data.length; i++)\\n\t\t\t\tSystem.out.println(i + \":\" + data[i]);\\n\t\t}\\n\t}\\n\\n\tprivate static void print(int[][] data) {\\n\\n\t\tif (debug) {\\n\t\t\tfor (int i = 0; i < data.length; i++) {\\n\t\t\t\tfor (int j = 0; j < data.length; j++) {\\n\t\t\t\t\tSystem.out.print(i + \" \" + j + \":\" + data[i]);\\n\t\t\t\t}\\n\t\t\t\tSystem.out.println();\\n\t\t\t}\\n\t\t}\\n\t}\\n\\n\tprivate static void print(char[][] data) {\\n\\n\t\tif (debug) {\\n\t\t\tfor (int i = 0; i < data.length; i++) {\\n\t\t\t\tfor (int j = 0; j < data.length; j++) {\\n\t\t\t\t\tSystem.out.print(i + \" \" + j + \":\" + data[i][j] + \" \");\\n\t\t\t\t}\\n\t\t\t\tSystem.out.println();\\n\t\t\t}\\n\t\t}\\n\t}\\n\\n\tprivate static void print(String[][] data) {\\n\\n\t\tif (debug) {\\n\t\t\tfor (int i = 0; i < data.length; i++) {\\n\t\t\t\tfor (int j = 0; j < data.length; j++) {\\n\t\t\t\t\tSystem.out.print(i + \" \" + j + \":\" + data[i][j] + \" \");\\n\t\t\t\t}\\n\t\t\t\tSystem.out.println();\\n\t\t\t}\\n\t\t}\\n\t}\\n\\n\tprivate static void print(double[][] data) {\\n\\n\t\tif (debug) {\\n\t\t\tfor (int i = 0; i < data.length; i++) {\\n\t\t\t\tfor (int j = 0; j < data.length; j++) {\\n\t\t\t\t\tSystem.out.print(i + \" \" + j + \":\" + data[i][j] + \" \");\\n\t\t\t\t}\\n\t\t\t\tSystem.out.println();\\n\t\t\t}\\n\t\t}\\n\t}\\n\\n\tpublic static void inPutData(char[][] c) {\\n\t\tfor (int i = 0; i < c.length; i++) {\\n\t\t\tc[i] = sc.nextLine().toCharArray();\\n\t\t}\\n\t}\\n\\n}\\n", "target": "57", "substitutes": {"sc": ["SC", " SC", "sw", " sp", "pc", "si", "se", "sv", "rc", "bc", "sh", "gc", "sq", "ng", "sk", "sp", "c", "ser", "cl", " Sc", " scr", "ch", "dc", "cs", "set", "Sc", " sk", "scan"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tStringBuilder sb = new StringBuilder();\\n\t\tchar[] s = sc.next().toCharArray();\\n\t\tint len = s.length;\\n\t\tchar[] c1 = new char[len];\\n\t\tchar[] c2 = new char[len];\\n\t\tfor (int i = 0; i < len; i = i + 2) {\\n\t\t\tc1[i] = '0';\\n\t\t\tc2[i] = '1';\\n\t\t}\\n\t\tfor (int i = 1; i < len; i = i + 2) {\\n\t\t\tc1[i] = '1';\\n\t\t\tc2[i] = '0';\\n\t\t}\\n\t\tint dif1 = 0, dif2 = 0;\\n\t\tfor (int i = 0; i < len; i++) {\\n\t\t\tif (s[i] != c1[i]) {\\n\t\t\t\tdif1++;\\n\t\t\t}\\n\t\t\tif (s[i] != c2[i]) {\\n\t\t\t\tdif2++;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(Math.min(dif1, dif2));\\n\t}\\n}\\n", "target": "146", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "usc", "se", "sv", "rc", "nc", "bc", "tk", "sync", "gc", "sch", "sq", "sub", "uc", "anc", "sec", "sp", "cc", "c", "isc", "esc", "cl", "lc", "desc", "mc", "nl", "scl", "cr", "sel", "ch", "system", "ss", "sci", "cs", "ec", "asc", "Sc", "scan"], "sb": ["sm", " db", "bp", "sg", "pb", "si", "bb", "sf", "sv", "bc", "bh", "sh", "bf", "sq", "sp", "SB", "bs", "ob", " SB", "cb", "bt", "Bs", "gb", "bd", "b", "db", "sa", "lp", "bn"], "s": ["sw", "qs", "sql", "ats", "t", "js", "sts", "sv", "gets", "strings", "changes", "is", "abs", "sq", "ins", "data", "S", "ps", "ms", "r", "c", "n", "h", "south", "spec", "tes", "src", "ws", "j", "l", "a", "string", "gs", "bits", "p", "b", "ns", "rs", "ls", "ss", "ds", "stats", "so", "cs", "str", "g", "ts"], "len": ["fin", " length", "lim", "length", "sl", "t", "vl", "pos", "L", "lvl", "lf", "ll", "all", "vel", "count", "bl", "size", "full", "n", "lan", "en", "cl", " l", "lib", "del", "pl", "lit", "lc", "lon", "l", "hl", "dl", "den", "elt", "kl", "lp", "gen", "nl", "il", "compl", "lis", "coll", "le", "Len", "ret", "nt", " clen", "ls", "li", "rel", "fl", "ld", "list", "z", "ln", "val", "gl", "el", "ell", "loc"], "c1": ["C81", "cache2", "ct9", "CFirst", " c9", "c0", "cache81", "cache9", "c9", "cache1", "cu11", " c01", " c11", " c81", "C001", "c11", "C01", "c81", " c001", "c01", "C0", "cu2", "C1", "cu01", " c0", "ct11", "coll0", " cFirst", "ct01", "cu1", "ct1", "cache0", "coll1", "cFirst", "ct2", "cache01", "coll001", "collFirst", "c001"], "c2": ["cpl", "c62", "cache2", " c56", "cat2", "cache5", "c4", "ec4", "cachepl", " cpl", "cutwo", "catpl", "ctwo", "cu32", "C2", " c62", "cTwo", "cache4", "c5", "ce2", " c22", " cTwo", "cu2", "cache62", "C1", "cetwo", "catTwo", "c22", " c4", "ectwo", "CTwo", " ctwo", "cat56", "cacheTwo", "cu22", "ce22", " c32", "ce32", "c56", "ecTwo", "cachetwo", "c32", "C56", " c5", "cat5", "cat62", "ec2", "cat1"], "i": ["status", "io", "us", "iu", "page", "php", "y", "ix", "iii", "l", "pi", "ii", "id", "fi", "ti", "bi", "phi", "g", "ie", "ci", "ei", "xi", "dr", "vi", "ori", "cli", "init", "ui", "remote", "j", "uri", "qi", "multi", "chain", "ex", "ini", "ni", "m", "esi", "si", "ic", "sim", "oi", "iri", "exp", "is", "ind", "mi", "err", "gi", "ji", "it", "di", "z", "slice", "zi", "I", "ami", "\u0438", "ai", "me", "mac", "iy", "im", "v", "info", "q", "ri", "this", "ia", "batch", "ki", "ity", "ij", "cgi", "li", "point", "ip"], "dif1": ["difer1", "dimm51", "dib13", "dif3", "dim1", "sdif2", "dib51", "Dif3", "dic3", "dim2", "dif51", "sdic3", "DIF2", "DIF1", "dim01", "doif13", "difer13", "doifer3", "doifer51", "sdic2", "doif3", "doifer1", "dic1", "difer51", "dib3", "dif01", "dimm3", "doifer13", "difer3", "DIF3", "diff2", "dIF2", "dic2", "doif51", "dIF0", "sdif3", "dif13", "Dif1", "dIF3", "Dif2", "doif1", "dimm1", "diff3", "sdic01", "dimm13", "sdif1", "dimm0", "diff01", "dib1", "Dif0", "diff1", "dimm2", "dif0", "sdic1", "dIF1", "dim3", "DIF0", "dic01", "diff0", "sdif01"], "dif2": ["dif42", "dif3", " dIF1", "dim1", "dift7", " dIF42", "dim2", " dif3", "diff7", " dif42", "difi42", " diff4", "diff4", " diff2", " dIF2", " dif0", "difi0", "dif7", "dim4", "diff2", "dIF2", " dif4", "dift1", "dIF0", "diff42", "dIF4", "dift4", "dIF3", "dift2", "diff3", " dIF3", " diff7", "dif4", " dIF0", "diff1", "dif0", "dIF1", "dim3", " dif7", "dIF7", "dIF42", "difi1", "difi2", "diff0", " diff1", " dIF4"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\nimport java.lang.*;\\nimport java.awt.*;\\nimport java.awt.geom.*;\\nimport java.math.*;\\nimport java.text.*;\\nimport java.math.BigInteger.*;\\nimport java.util.Arrays; \\n\\npublic class   Main\\n{\\n  BufferedReader in;\\n  StringTokenizer as;\\n  int nums[],nums2[];\\n  int[] nums1[];\\n  boolean con = true;\\n \\n  ArrayList < Integer >  ar = new ArrayList < Integer >();\\n  ArrayList < Integer >  fi = new ArrayList < Integer >();\\n  Map<Integer,Integer > map = new HashMap<Integer, Integer>();\\n  public static void main (String[] args)\\n  {\\n    new Main  ();\\n  }\\n  \\n  public int GCD(int a, int b) {\\n    if (b==0) return a;\\n    return GCD(b,a%b);\\n  }\\n  \\n  \\n  \\n  \\n  \\n  public Main  ()\\n  {\\n    try\\n    {\\n      \\n      in = new BufferedReader (new InputStreamReader (System.in));\\n      int a = nextInt();\\n      int b = nextInt()-1;\\n      String c = nextLine();\\n      System.out.println(c.substring(0,b) + (char)(c.charAt(b)+32) + c.substring(b+1));\\n      \\n    }\\n    catch(IOException e)\\n    {\\n\\n    }\\n  }\\n  \\n  \\n  \\n  \\n  \\n  \\n  \\n  String next () throws IOException\\n  {\\n    while (as == null || !as.hasMoreTokens ())\\n    {\\n      as = new StringTokenizer (in.readLine ().trim ());\\n    }\\n    \\n    \\n    return as.nextToken ();\\n  }\\n  \\n  \\n  \\n  long nextLong () throws IOException\\n  {\\n    return Long.parseLong (next ());\\n  }\\n  \\n  \\n  int nextInt () throws IOException\\n  {\\n    return Integer.parseInt (next ());\\n  }\\n  \\n  \\n  double nextDouble () throws IOException\\n  {\\n    return Double.parseDouble (next ());\\n  }\\n  \\n  \\n  String nextLine () throws IOException\\n  {\\n    return in.readLine ().trim ();\\n  }\\n}", "target": "71", "substitutes": {"in": ["or", "din", "io", "t", "IN", "ic", "al", "inner", "inn", "from", "bin", "er", "ain", "is", "out", "ind", "i", "ins", "o", "std", "r", "on", "rin", "err", "n", "source", "thin", "h", "isin", "lin", "read", "init", "conf", "en", "s", "l", "gin", "doc", "cin", "In", "text", "it", "world", "input", "pin", "can", "stream", "session", "file", "ini", "p", "to", "inf", "reader", "log", "str", "ln", "m", "line", "get"], "as": ["ras", "or", "AS", "cas", "ats", "al", "at", "se", "us", "from", "er", "oss", "is", "ins", "pa", "ps", "ms", "ias", "aus", "ask", "acs", "an", "am", "var", "os", "ast", "bs", "s", "aster", "las", "aos", "aer", "ws", "ua", "asm", "pas", "asin", "asa", "ars", "ag", "vas", "res", "ass", "ase", "ais", "rs", "As", "ata", "nas", "ds", "asi", "sa", "cs", "eas", "ma", "jas", "ts", "ac"], "nums": ["Numbers", "enums", "Nums", " numbers", " noms", "num", "noms", " num", "numbers", "Noms", "enumbers", "enoms", "Num"], "nums2": ["num0", "nums0", "numbers0", " nums0", "noms0", " numbers2", " numbers0", " numbers1", "num2", "numbers1", "noms2", "num1", "noms1", "numbers2"], "nums1": ["nums0", "names2", " nims0", " nums0", "names1", "noms0", "names0", " nims2", " nims1", "nims2", "nims0", "noms2", "noms1", "nims1"], "ar": ["art", "ra", "al", "at", "ary", "ai", "er", "ro", "dr", "au", "r", "ao", "ir", "arr", "ap", "ri", "arc", "arp", "ars", "rar", "AR", "cr", "dar", "rs", "bar", "array", "sa", "ara", "fr"], "fi": ["ci", "f", "si", "oi", "lf", "fa", "fo", "fd", "fc", "mi", "fe", "wi", "ri", "ki", "fg", "fil", "ii", "fp", "tif", "ini", "fl", "li", "ff", "bi", "fr", "ti", "fu"], "map": ["mt", "maps", "mm", "mp", "sh", "ms", "mg", "sp", "use", "ml", "tr", "ap", "app", "en", "con", "pl", "MAP", "mod", "mem", "mx", "cm", "le", "id", "set", "m", "ip"], "a": ["aa", "era", "t", "aq", "u", "area", "wa", "va", "xa", "A", "count", "au", "i", "sha", "x", "ab", "o", "oa", "r", "ao", "ba", "an", "n", "am", "index", "m", "ea", "w", "ga", "ia", "j", "l", "sta", "ta", "ae", "aj", "aaa", "e", "p", "ca", "la", "to", "alpha", "sa", "z", "d", "ma", "val", "g", "ac"], "b": ["mb", "length", "bp", "nb", "f", "bb", "t", "u", "bc", "base", "bis", "bf", "i", "ab", "x", "o", "B", "r", "g", "fb", "ba", "n", "wb", "h", "eb", "ib", "beta", "y", "v", "value", "bs", "ob", "s", "lb", "w", "cb", "j", "l", "rb", "e", "br", "gb", "p", "bar", "db", "to", "be", "bi", "z", "d", "m", "sb"], "c": ["css", "ci", "pc", "cos", "C", "cu", "ct", "t", "u", "rc", "csv", "nc", "abc", "gc", "fc", "unc", "r", "cont", "code", "n", "cc", "ce", "cur", "xc", "conf", "cl", "lc", "cb", "l", "ctrl", "cin", "co", "char", "e", "cn", "p", "etc", "cm", "ca", "cf", "dc", "cp", "cs", "tc", "sc", "g", "ac"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws NumberFormatException,\\n\t\t\tIOException {\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t\tbyte min, count = 0, arrayLength = Byte.parseByte(in.readLine());\\n\t\tbyte[] array = new byte[arrayLength];\\n\t\tString[] strData = in.readLine().split(\" \");\\n\t\tfor (int i = 0; i < arrayLength; i++) {\\n\t\t\tarray[i] = Byte.parseByte(strData[i]);\\n\t\t}\\n\t\tfor (byte x = 0; x < arrayLength; x++) {\\n\t\t\tmin = x;\\n\t\t\tfor (byte y = (byte) (x + 1); y < arrayLength; y++) {\\n\t\t\t\tif (array[min] > array[y]) {\\n\t\t\t\t\tmin = y;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tif (array[x] > array[min]) {\\n\t\t\t\tbyte temp = array[x];\\n\t\t\t\tarray[x] = array[min];\\n\t\t\t\tarray[min] = temp;\\n\t\t\t\tcount++;\\n\t\t\t}\\n\t\t}\\n\t\tfor (int j = 0; j < arrayLength; j++) {\\n\t\t\tif (j == arrayLength - 1) {\\n\t\t\t\tSystem.out.println(array[j]);\\n\t\t\t} else {\\n\t\t\t\tSystem.out.print(array[j] + \" \");\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(count);\\n\t}\\n}", "target": "199", "substitutes": {"in": ["din", "OUT", "serv", "IN", "t", "al", "inn", "inner", "from", "mm", "bin", "ad", "is", "out", "ind", "ins", "add", "sum", "std", "r", "on", "rin", "err", "check", "c", "n", "source", "thin", "read", "isin", "by", "init", "conf", "info", "con", "per", "nin", " din", "l", "doc", "asin", "cin", "In", "inc", "it", "world", "input", "ac", "stream", "b", "old", "ini", "as", "user", "id", "inf", "to", "reader", "log", "d", "query", "get", "scan"], "min": ["sort", "zero", "area", "sol", "ms", "Min", "index", "emin", "l", "next", "none", "loc", "max", "member", "base", " Min", "sum", "no", "col", "just", "init", "only", "small", "Mini", "del", "lock", "my", " max", "minute", "begin", "mod", "m", "span", "from", "mm", "left", " minimal", "stat", "size", "mi", " smallest", "tail", "name", "MIN", "low", "local", "mini", "mem", "lt", "p", "mins", "yy", " MIN", "first", "seq", "dim", "part", "initial", "module", "amin", "code", "partial", "key", "v", "lower", "start", "minimum", "pre", "li"], "count": ["found", "report", "length", "status", "counter", "Count", "match", "hold", "max", "now", "ind", "sum", "find", "add", "message", "size", "z", "cont", "cycle", "err", "check", "c", "n", "weight", "code", "index", "follow", "info", "state", "allow", "summary", "hash", "process", "thread", "current", "print", "total", "result", "nt", "number", "num", "trace", "list", "cache", "common", "val", "core", "test", "call"], "arrayLength": ["ArrayLen", "ArrayLength", "arrayFontSize", "arealength", "arrCount", " arrayStorage", "rayENGTH", "arrayWidth", "archiveCount", "archivelength", "rayCount", "arrayENGTH", " arrayLen", "rayLen", "ArraySize", "raySize", "archiveStorage", "raylength", "arrayLen", "areaMemory", "arraylength", "byteLength", "arrENGTH", "rayWidth", "byteMemory", " arraySize", "rayFontSize", " arrayFontSize", " arrayCount", "archiveENGTH", "areaLength", " arraylength", " arrayENGTH", "byteENGTH", "byteFontSize", "ArrayWidth", "archiveLength", "arrlength", "arrayStorage", " arrayWidth", "arrayCount", "arraySize", "areaSize", "rayMemory", "arrSize", "rayStorage", "arrLength", "rayLength", "arrMemory", "archiveSize", " arrayMemory", "arrayMemory"], "array": ["root", "sort", "time", "storage", "collection", "raw", "area", "scale", "Array", "node", "ash", "global", "arr", "object", "index", "function", "expression", "one", "arrow", "force", "form", "result", "atomic", "row", "other", "default", "test", "view", "share", "map", "member", "parent", "var", "ape", "hash", "table", "string", "binary", "flash", "ase", "chain", "vector", "audio", "component", "angle", "group", "number", "cache", "list", "address", "format", "sequence", "length", "record", "history", "section", "range", "shape", "save", " Array", "use", "order", "dirty", "replace", "actor", "queue", "trace", "message", "archive", "ar", "attribute", "ray", "instance", "angular", "window", "all", "now", "data", "stage", "database", "v", "app", "lower", "batch", "allow", "av", "memory", "search", "bar", "element", "export"], "strData": ["STRText", "StrData", "STRSeries", "STRDATA", " strSeries", "STRData", " strata", "STRata", "StrSeries", "decParts", "decDATA", "strDATA", "StrParts", " strString", "strString", "StrDATA", "Strata", "strParts", "decData", "strSeries", "strata", "strText", "STRParts", "StrText", "STRString", "decText", "StrString"], "i": ["zi", "iter", "ie", "I", "ci", "inter", "\u0438", "si", "io", "ic", "sim", "u", "ai", "us", "me", "inner", "is", "ind", "ins", "point", "o", "ori", "mi", "c", "index", "im", "init", "info", "ix", "q", "ui", "gi", "this", "ri", "uri", "pi", "multi", "ij", "my", "it", "ii", "PI", "ini", "di", "inx", "id", "li", "ti", "bi", "m", "iu", "phi", "ip"], "x": ["fx", "time", "xml", "at", "xa", "right", "ox", "rem", "index", "en", "ix", "yx", "w", "xe", "l", "tx", "any", "num", "row", "xxx", "el", "g", "xx", "xi", "max", "ace", "rx", "my", "ex", "m", "Ax", "format", "length", "px", "xt", "pe", "lex", "xf", "left", "size", "on", "name", "value", "wx", "lat", "e", "p", "xy", "X", "width", "end", "pan", "z", "act", "xs", "xp", "ick", "ax", "dx", "data", "code", "key", "im", "v", "q", "mx", "inx", "point"], "y": ["ye", "cy", "vy", "py", "sys", "t", "Y", "wy", "ies", "oy", "max", "fy", "year", "yer", "gy", "yo", "sy", "ym", "z", "uy", "ys", "key", "iy", "yt", "by", "dy", "ty", "ry", "v", "zy", "yr", "ey", "ly", "my", "ya", "ch", "xy", "ny", "axy", "b", "yn", "yi", "yy", "ady", "m", "ay"], "temp": ["cap", "em", "fake", "cu", "tv", "t", "alt", "mm", "porary", "unt", "tty", " Temp", "copy", "tmp", "mint", "unit", "partial", "tr", "cum", "pt", "emp", "Temp", "term", "variable", "cat", " tmp", "red", "current", "thread", "ph", "tem", "tt", "tm", "pre", "txt", "null", "template", "ptr", "mod", "tc", "adjusted", "cell", "test"], "j": ["jac", "bj", "t", "jl", "js", "u", "obj", "k", "out", "oj", "o", "job", "ng", "z", "je", "on", "uj", "n", "ev", "h", "key", "jc", "pt", "v", "s", "q", "ix", "dj", "json", "next", "aj", "jp", "jo", "jump", "ji", "ij", "it", "jit", "br", "jack", "my", "J", "old", "b", "jj", "other", "kj", "m", "el", "g", "ja"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  private static char[] op1 = { '+', '+', '+', '+', '-', '-', '-', '-' };\\n  private static char[] op2 = { '+', '+', '-', '-', '+', '+', '-', '-' };\\n  private static char[] op3 = { '+', '-', '+', '-', '+', '-', '+', '-' };\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    char[] n = sc.next().toCharArray();\\n    int A = n[0] - '0';\\n    int B = n[1] - '0';\\n    int C = n[2] - '0';\\n    int D = n[3] - '0';\\n    for (int i = 0; i < 8; i++) {\\n      int sum = A;\\n      if (op1[i] == '+') {\\n        sum += B;\\n      } else {\\n        sum -= B;\\n      }\\n      if (op2[i] == '+') {\\n        sum += C;\\n      } else {\\n        sum -= C;\\n      }\\n      if (op3[i] == '+') {\\n        sum += D;\\n      } else {\\n        sum -= D;\\n      }\\n      if (sum == 7) {\\n        System.out.println(\"\"+A+op1[i]+B+op2[i]+C+op3[i]+D+\"=7\");\\n        return;\\n      }\\n    }\\n  }\\n}", "target": "152", "substitutes": {"op1": ["operator2", "operator0", "popOne", "pop0", "opA", "hopone", "popone", "bitA", "OP2", "Op1", "opt1", "bitone", "OP01", "Op0", " op01", " op0", "op01", "operatorOne", "optOne", "pop1", "op0", "bit2", "popA", "operator1", "Op2", "opt0", "opone", "OP1", "OP0", "opt2", "hop1", "hopA", "pop2", "opOne", "bit1", "Op01", "hop2"], "op2": [" op6", "operSecond", "operator2", "tipB", "operatorB", "mopB", "oper3", "operTwo", "hopTwo", "mop6", "OP2", "update6", "mop2", "operatorTwo", "op6", "update2", "opB", " opB", "tipTwo", "OPTwo", "opSecond", "hopSecond", "update1", "OPB", " opTwo", "tip2", "oper2", "opTwo", "mop1", "hop2", "updateB", " opSecond", "hop3"], "op3": ["Op6", " op4", " op6", "expr3", "opThree", "wordThree", "word23", "optthree", "Op3", "expr43", "pop43", "opt23", "Op003", "op003", "mop6", "Op1", "exprD", "op43", "pop3", "op6", "opt3", "Op23", "mop4", "opt43", "op4", "opt003", "word003", "exprthree", "popD", "OpThree", "optD", "Op4", "opthree", "mop3", "optThree", "op23", "opD", "word3", "mop1", "popthree"], "sc": ["SC", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "out", "sq", "sch", "anc", "sec", "sp", "cc", "c", "esc", "isc", "soc", "ser", "src", "cl", "lc", "Sc", "ctl", "desc", "scl", "ch", "system", "dc", "cs", "ec", "tc", "ss", "sb", "scan"], "n": ["note", "nv", "nos", "nm", "nb", "f", "t", "ren", "nc", "na", "o", "names", "ng", "conn", "an", "nn", "fn", "nor", "tn", "name", "gn", "en", "dn", "N", "j", "l", "nu", "np", "nl", "cn", "norm", "sn", "ns", "nt", "nw", "nr", "num", "z", "ln", "m", "ne", "g", "rn"], "A": ["AS", "I", "AD", "GA", "AL", "AN", "AE", "L", "AI", "AV", "Array", "AA", "The", "AP", "SA", "S", "P", "At", "V", "IA", "AU", "AB", "N", "U", "AH", "AC", "AM", "a", "K", "G", "AR", "An", "As", "X", "This", "T", "AT", "CA"], "B": ["Ber", "FB", "Bu", "TB", "GB", "OB", "L", "RB", "BM", "Y", "BL", "Rob", "PB", "Back", "BO", "BI", "EB", "BB", "F", "V", "CB", "DB", "BT", "BE", "SB", "BF", "IB", "NB", "AB", "N", "BA", "G", "J", "VB", "WB", "b", "BR", "BY", "Bar", "BC", "BS", "T", "LB", "BG", "Bs", "BER"], "C": ["SC", "E", "CN", "YC", "KC", "CT", "R", "L", "COM", "EC", "CE", "CF", "Car", "O", "M", "CS", "Ch", "Cu", "P", "c", "CB", "CW", "Co", "CR", "JC", "CBS", "CNN", "VC", "DC", "N", "AC", "CD", "CCC", "CSS", "Cr", "CH", "G", "CM", "CL", "CC", "CON", "BC", "CP", "CV", "CG", "T", "CU", "CA", "Cs"], "D": ["E", "DIR", "DL", "R", "MD", "L", "DI", "Ds", "Q", "Z", "M", "Do", "DP", "VD", "Thu", "S", "Dr", "DO", "F", "P", "V", "DB", "DEV", "DS", "DF", "DM", "N", "DC", "DES", "DH", "PD", "DIV", "TH", "G", "H", "DJ", "DX", "DR", "DE", "DA", "T", "Date", "DOM", "TD", "d", "DD"], "i": ["zi", "iq", "I", "hi", "ci", "status", "\u0438", "si", "io", "ic", "sim", "u", "ai", "xi", "me", "ei", "exp", "base", "ski", "is", "ind", "x", "o", "mi", "err", "cli", "index", "im", "gi", "y", "v", "init", "ix", "ui", "info", "json", "ri", "ki", "j", "batch", "this", "qi", "pi", "multi", "ji", "ij", "it", "jp", "ii", "chain", "gu", "ini", "di", "cgi", "id", "li", "ti", "bi", "m", "iu", "phi", "slice", "ip", "asi"], "sum": ["sm", "cmp", "aw", "zero", "status", " SUM", "mass", "cu", "si", "sim", "ums", "us", "SU", "scale", "dim", "fac", "mm", "share", "sh", "count", "ash", "ma", "stat", "gate", "add", "save", "na", "conn", "size", "must", "score", "sem", "unit", "weight", "cum", "mu", "tail", "cal", "tu", "term", "average", "summary", "sam", "sta", "doc", "hash", "Sum", "process", "SI", "su", "mem", "acc", "vol", "ass", "pool", "total", "mean", "result", "hum", "um", "alpha", "stack", "sa", "num", "see", "temp", "missing", "cache", "comment", "list", "mod", "black", "se", "ac"]}}
{"code": "import java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\npublic static void main(String[] args) {\\n\t\t\\n\t\tScanner keyboard = new Scanner(System.in); \\n\t\t\\n\t\tString S = keyboard.next();\\n\t\t\\n\t\tString[] tile = S.split(\"\");\\n\t\t\\n\t\tString Start = tile[0];\\n\t\tint countG = 0;\\n\t\tint countK = 0;\\n\t\t\\n\t\t\tfor (int g = 0; g < tile.length; g = g+2) {\\n\t\t\t\t if (tile[g].equals(Start)) {\\n\t\t\t\t\t countK ++;\\n\t\t\t\t }else {\\n\t\t\t\t\t countG ++;\\n\t\t\t\t }\\n\t\t\t\t \tif (g != tile.length - 1) {\\n\t\t\t\t \t\tint k = g + 1;\\n\t\t\t\t if (tile[k].equals(Start)) {\\n\t\t\t\t\t countG ++;\\n\t\t\t\t \t}else{\\n\t\t\t\t\t countK ++;\\n\t\t\t\t \t\t}\\n\t\t\t\t \t}\\n\t\t\t}\\n\t\t\t\\n\t\t\tint kotae = 0;\\n\t\t\t\\n\t\t\tkotae = countG < countK ? countG : countK;\\n\t\t\\n\t\tSystem.out.println(kotae);\\n\t\tkeyboard.close();\\n\t}\\n}", "target": "146", "substitutes": {"keyboard": ["yrow", "keyevent", "ystroke", " keyboards", "KeyBoard", " keyevent", "keyBoard", "scanbook", "Keyboards", "keyboards", "keystroke", " keystroke", "scanBoard", "checkevent", " keyrow", "Keystroke", "scanboard", " keybook", "scanboards", "checkboards", "Keybook", "checkboard", "Keyrow", "checkBoard", " keyBoard", "scanevent", "keybook", "yboard", "keyrow", "yboards", "Keyboard"], "S": ["E", "R", "C", "L", "TS", "SS", "SU", "SR", "Q", "A", "M", "D", "SER", "CS", "SA", "JS", "B", "F", "P", "V", "SM", "s", "Str", "N", "STR", "SK", "SI", "G", "Si", "SE", "NS", "ST", "T", "Single", "SQL"], "tile": ["note", "draw", "sequence", "tree", "attribute", "te", "tle", "square", "won", "window", "style", "tag", "scale", "complete", "seed", "domain", "node", "shot", "sett", "phrase", "test", "TI", "buffer", "face", "phy", "unit", "image", "prime", "pixel", "league", "info", "where", "set", " Tile", "batch", "texture", "table", "game", "phone", "char", "string", "start", "store", "title", "print", "pattern", "sel", "piece", "tif", "player", "details", "detail", "template", "angle", "flake", "token", "trace", "line", "grid", "query", "split", "tip", "cell", "slice", "Tile", "team"], "Start": ["Ptr", "Stop", "Starting", "Begin", " End", "End", "From", " Stamp", "Empty", "Before", "Range", " Begin", "Input", "Break", "Head", "Token", "Help", "First", "St", "Str", " starts", "Source", "Position", "Part", "Next", "Entry", "start", "Trigger", "Test", "Type", "Value", "Right", "Service", "Star", "ST", "Title", "Link", "Pos", "This", " START", "Now", "Root", "Offset", "Target", "Left", "Rest", " start"], "countG": ["ountg", "tryG", "countPG", "considerPG", "considerg", " countg", " countPG", "findGG", "ountPG", "commentg", "countGB", "condGB", "commentGP", "seeGG", "condg", "tryGB", "commentG", "seeG", "commentBG", "constg", "forceGP", "countg", " countGRE", "findg", "ountGP", "considerG", "countBG", "seeg", "countGRE", " countBG", "considerGRE", " countY", "countGG", "condGI", "forceK", "constG", "condG", "considerGG", "countGP", "ountBG", "considerGI", " countGP", "seeGRE", "findG", "findGRE", "ountK", "ountY", "considerGB", "ountG", "tryGI", "constGP", "ountGRE", "tryg", "countY", "countGI", "forceG", "constK", "considerY", "forceg"], "countK": ["countO", "countV", "CountHe", "castIK", " countZ", "traceSK", " countN", "CountIK", " countO", "castHe", "countN", "castK", "ountV", "cacheZ", "countMK", "fireKI", "fireMK", "CountG", "ountO", "ountk", "countSK", "processOK", " countOK", "processK", "traceMK", "castG", "cacheK", "fireK", "traceK", " countKI", "fireSK", "ountZ", "CountN", "countM", " countSK", "cellK", " countk", " countV", "traceKI", "countHe", "countZ", "countIK", "cacheO", "countk", "countOK", " countM", "CountK", "ountK", "ountOK", "countKI", "ountG", " countMK", "ountIK", "processM", "cacheV", "Countk", "cellk", "cellG", "ountM", "cellN", "ountHe", "processk"], "g": ["go", "reg", "tg", "eg", "f", "ug", "t", "ger", "ig", "erg", "bg", "gc", "i", "gy", "gp", "gate", "yg", "x", "gz", "arg", "msg", "gr", "mg", "gre", "gain", "ge", "h", "y", "gi", "pg", "gg", "gn", "v", "q", "gm", "ga", "j", "gravity", "l", "game", "greg", "gen", "G", "gs", "gh", "gb", "p", "gt", "b", "gu", "rg", "group", "gd", "gas", "z", "d", "m", "og", "gl"], "k": ["wk", "kin", "ka", "kh", "ak", "dk", "kk", "unk", "ek", "z", "sk", "ks", "ijk", "kar", "ke", "key", "kid", "ko", "ki", "kw", "j", "ik", "ikk", "ku", "kl", "K", "uk", "ok", "ck", "kr", "mk", "id", "kj", "km", "tk"], "kotae": ["kottae", "kiot\u00e6", "kokade", "kotca", "kokoe", " kotcoe", " kotacoe", "kotioe", "kotee", "kiotAE", "kotcoe", " kotee", " kotaade", "kotade", "kotaade", "kottca", " kot\u00e6", "kokcoe", "kottee", "kotiae", "knot\u00e6", "kiotee", " kotaae", "kotoe", "koticoe", "kotaae", " kottae", "kota\u00e6", "kiotca", "knotAE", "kokae", " kotoe", " kotaoe", " kott\u00e6", " kota\u00e6", "kiotae", " kottee", " kottAE", "kotacoe", "kottAE", "kotaca", "kot\u00e6", "kott\u00e6", "knotee", " kotAE", " kotca", "kotAE", "kotaAE", "kotaoe", " kotaAE", " kotaca", "kotiade", "knotae", " kotade"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args)throws Exception {\\n\\n        /*\\n         * \uff21\u5927\u5b66\u306f\uff11\u30d5\u30ed\u30a2\uff11\uff10\u90e8\u5c4b\u3001\\n         * \uff13\u968e\u5efa\u3066\u306e\u516c\u820e\uff14\u68df\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\u516c\u820e\u306e\u5165\u5c45\u30fb\u9000\u53bb\u306e\u60c5\u5831\u3092\u8aad\u307f\u8fbc\u307f\u3001\u5404\u90e8\u5c4b\u306e\u5165\u5c45\u8005\u6570\u3092\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u4e0b\u3055\u3044\u3002\\n         * \\n         * n\u4ef6\u306e\u60c5\u5831\u304c\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\u5404\u60c5\u5831\u3067\u306f\u3001\uff14\u3064\u306e\u6574\u6570b, f, r,\\n         * v\u304c\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001b\u68dff\u968e\u306er\u756a\u76ee\u306e\u90e8\u5c4b\u306bv\u4eba\u304c\u8ffd\u52a0\u3067\u5165\u5c45\u3057\u305f\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002v\u304c\u8ca0\u306e\u5024\u306e\u5834\u5408\u3001v\u4eba\u9000\u53bb\u3057\u305f\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\\n         * \\n         * \u6700\u521d\u3001\u5168\u3066\u306e\u90e8\u5c4b\u306b\u306f\u8ab0\u3082\u5165\u5c45\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3068\u3057\u307e\u3059\u3002 \u6700\u521d\u306e\u884c\u306b\u60c5\u5831\u306e\u6570 n \u304c\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\\n         * \\n         * \u7d9a\u3044\u3066 n \u4ef6\u306e\u60c5\u5831\u304c\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\u5404\u60c5\u5831\u306b\u306f\uff14\u3064\u306e\u6574\u6570 b, f, r, v \u304c\u7a7a\u767d\u533a\u5207\u308a\u3067\uff11\u884c\u306b\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002\\n         */\\n        int[][][] array_House = new int[4][3][10];\\n\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        for (int x = 0; x < n; x++) {\\n            int b = sc.nextInt() - 1;\\n            int f = sc.nextInt() - 1;\\n            int r = sc.nextInt() - 1;\\n            int v = sc.nextInt();\\n            if(array_House[b][f][r] + v > 9){\\n                array_House[b][f][r] = 9;\\n            }else if(array_House[b][f][r] < 0){\\n                array_House[b][f][r] = 0;\\n            }else{\\n                array_House[b][f][r] += v;\\n            }\\n        }\\n        sc.close();\\n\\n        for (int i = 0; i < array_House.length; i++) {\\n            for (int j = 0; j < array_House[i].length; j++) {\\n                for (int j2 = 0; j2 < array_House[i][j].length; j2++) {\\n\\n                    System.out.print(\" \" + array_House[i][j][j2]);\\n\\n                }\\n                System.out.println();\\n            }\\n            if (i < array_House.length - 1) {\\n                System.out.println(\"####################\");\\n            }\\n        }\\n\\n    }\\n}", "target": "211", "substitutes": {"array_House": ["array___Street", "arrayNameMe", "array_house", "array_Sky", " array_Street", "array_Name", " array_Book", "array___Dog", "array__Frame", "array_Matrix", "history_House", " array_Home", "array__House", "array_Space", " array_Box", "array__Me", "array_Wall", "array___House", " Array_House", "angular_LU", "array_Street", "array_Frame", "array___Home", " array_house", "angular_Street", "arrayNameFrame", "history_Sky", "arrayNamehouse", "array_Dog", " array_Space", "array_Me", "array_Home", "variable_House", " array_Dog", "array_Book", " array_Me", "variable_Matrix", "array_List", "angular_Memory", "array_LU", "array___Name", " Array_Wall", "array_Guy", " array_Frame", "history_Matrix", "angular_House", " array_List", "arrayNameHouse", "array___Hold", "array__house", " array_Hold", " array_Matrix", "array_Memory", "array_Box", " array_Cath", " array_Name", "array___house", "array_Cath", "array_Hold", "variable_Guy", " Array_Box", "history_Box"], "sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "func", "ctx", "psc", "syn", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "sch", "sub", "scrib", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "ko", "lc", "arc", "ctl", "desc", "mc", "enc", "scl", "cr", "capt", "ch", "system", "ck", "st", "cgi", "ss", "conv", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "n": ["nm", "nb", "t", "u", "ln", "nc", "net", "mn", "k", "na", "o", "no", "ng", "on", "c", "an", "nn", "y", "w", "N", "l", "a", "nu", "np", "nl", "p", "sn", "ns", "nt", "number", "num", "z", "d", "m", "ne", "g"], "x": ["fx", "px", "xp", "ick", "ct", "ctx", "ax", "t", "xt", "xx", " cx", "xi", "exp", "xf", "dx", "ox", "k", "o", "check", "key", "index", "y", "xc", "ix", "yx", "w", "batch", "el", "wx", "rx", "co", "step", "mx", "p", "xy", "xes", "ex", "tx", "X", "inx", "any", "z", "act", "ux"], "b": ["mb", "business", "nb", "tab", "back", "bb", "t", "bc", "bis", "base", "bl", "bf", "bound", "ab", "B", "sb", "body", "fb", "c", "ba", "h", "eb", "ib", "by", "beta", "y", "lb", "bs", "ob", "cb", "bt", "l", "a", "rb", "e", "gb", "br", "p", "bar", "db", "be", "erb", "bi", "z", "d", "bu", "g"], "f": ["or", "fx", "uf", "ft", "ed", "t", "family", "u", "sf", "exp", "fac", "lf", "er", "xf", "used", "fa", "k", "bf", "o", "tf", "fo", "fd", "fc", "F", "fb", "c", "h", "ib", "fe", "q", "w", "l", "a", "rf", "fg", "e", "br", "p", "file", "cf", "ret", "um", "field", "fl", "fi", "fm", "ff", "fr", "m", "et", "g"], "r": ["or", "rev", "ar", "R", "t", "range", "u", "re", "rc", "radius", "er", "ro", "dr", "right", "o", "gr", "z", "ur", "rr", "err", "c", "ir", "h", "attr", "q", "lr", "w", "ri", "l", "mr", "pr", "rf", "rb", "rar", "res", "e", "cr", "br", "p", "vr", "kr", "rs", "rt", "rel", "nr", "hr", "rd", "ry", "d", "m", "g", "sr", "fr"], "v": ["nv", "tv", "lv", "t", "u", "sv", "vi", "k", "o", "uv", "c", "V", "ev", "vt", "h", "vs", "y", "value", "q", "w", "ve", "l", "vv", "e", "p", "qv", "conv", "z", "d", "m", "val", "g", "vr"], "i": ["zi", "iq", "ie", "hi", "ci", "I", "history", "status", "ami", "\u0438", "si", "io", "ic", "u", "ai", "xi", "me", "ei", "eu", "is", "ind", "mi", "index", "name", "im", "y", "gi", "info", "ix", "ui", "ri", "ki", "ia", "l", "ik", "qi", "pi", "multi", "series", "ij", "it", "ii", "p", "ini", "di", "ret", "yi", "id", "li", "in", "ti", "bi", "ims", "list", "iu", "phi", "ip"], "j": ["note", "jac", "bj", "jl", "js", "obj", "out", "k", "fr", "ind", "oj", "job", "ne", "z", "je", "uj", "ijk", "ge", "jc", "pt", "y", "im", "q", "ix", "dj", "json", "adj", "pr", "aj", "jp", "jo", "ji", "J", "ij", "it", "br", "jump", "jj", "other", "str", "kj", "og", "el", "g", "ja"], "j2": ["j4", "ij2", " j02", "ijTwo", "zTwo", "aj02", "i2", "J02", "jp3", "aj2", " j3", "J2", "jtwo", "z2", "J3", " jTwo", "djTwo", "iTwo", "ijtwo", "jp4", "ztwo", "itwo", "j02", "ajTwo", "jTwo", "dj4", "jp02", "jp22", "j22", " j4", "jp2", "jpTwo", " j22", "dj2", "j3", "aj4", "dj02", "J22"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tint a;\\n\t\tint b;\\n\t\tint c;\\n\t\tScanner sc = new Scanner(System.in);\\n\t\ta = sc.nextInt();\\n\t\tb = sc.nextInt();\\n\t\tc = sc.nextInt();\\n\t\tsc.close();\\n\\n\t\tint ret = c - ( a - b );\\n\t\tif(ret < 0) {\\n\t\t\tret = 0;\\n\t\t}\\n\t\tSystem.out.println(ret);\\n\\n\t}\\n\\n}\\n", "target": "45", "substitutes": {"a": ["ar", "aa", "at", "t", "u", "ai", "va", "A", "da", "au", "abs", "i", "na", "ab", "x", "oa", "r", "d", "ao", "an", "ba", "am", "h", "n", "ap", "app", "ea", "eas", "ia", "sta", "l", "ta", "ity", "aj", "ae", "aaa", "aff", "af", "\u00e1", "e", "p", "ca", "as", "la", "att", "alpha", "sa", "act", "ma", "ac"], "b": ["or", "mb", "bp", "nb", "aa", "f", "bb", "u", "bc", "bis", "base", "bf", "ub", "i", "ab", "ble", "B", "emb", "fb", "g", "ba", "wb", "n", "h", "eb", "ib", "by", "beta", "y", "v", "bs", "ob", "cb", "l", "rb", "gb", "br", "p", "bar", "db", "be", "erb", "bi", "z", "sb"], "c": ["f", "C", "cu", "ct", "t", "div", "u", "com", "rc", "bc", "gc", "i", "o", "fc", "category", "r", "cd", "z", "ce", "n", "cc", "h", "v", "s", "con", "lc", "l", "co", "e", "cr", "ch", "p", "etc", "cm", "ca", "cf", "dc", "cp", "cs", "ec", "d", "m", "tc", "g", "ac"], "sc": ["SC", "cmp", "osc", "pc", "sys", "syn", "pb", "ctx", "usc", "sim", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "sub", "uc", "anc", "fc", "sec", "sp", "cc", "isc", "esc", "cl", "ko", "lc", "arc", "desc", "mc", "jp", "inc", "cr", "ch", "system", "ck", "ss", "dc", "cs", "ec", "tc", "Sc", "scan"], "ret": ["met", "repl", "aux", "mt", "report", "flag", "ft", "def", "rev", "status", "quad", "inter", "nz", "rets", "t", "alt", "net", "reply", "pret", "out", "reset", "arg", "rem", "cont", "len", "rep", "Ret", "tr", "arr", "mat", "des", "valid", "det", " RET", "rm", "cat", "desc", "elt", "red", "deg", "mem", "jp", "res", "lt", "RET", "cmd", "resp", "gt", "total", "rt", "result", "nt", "val", "att", "conv", "tf"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int N = sc.nextInt(), X = sc.nextInt();\\n    int[] L = new int[N];\\n    for (int i = 0; i < N; i++) L[i] = sc.nextInt();\\n\\n    int ans = 1;\\n    for (int i = 0, sum = 0; i < N; i++) {\\n      sum += L[i];\\n      if (sum <= X) ans++;\\n      else break;\\n    }\\n    System.out.println(ans);\\n  }\\n}", "target": "130", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "anc", "sec", "sem", "sp", "cont", "c", "cc", "isc", "esc", "cl", "lc", " Sc", "ctl", "dec", "desc", "mc", "inc", "scl", "cr", "capt", "ch", "system", "sel", "cgi", "ss", "sci", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["I", "NM", "NN", "R", "NC", "C", "AN", "ND", "Y", "Q", "NO", "Z", "Num", "NT", "O", "M", "D", "S", "F", "P", "V", "n", "NR", "Ni", "NL", "NB", "NP", "TN", "NI", "GN", "NA", "K", "G", "J", "NH", "NS", "SN", "T", "Ns", "NE"], "X": ["XX", "I", "MAX", "TX", "Rex", "C", "ax", "Y", "Q", "Z", "Xi", "XXX", "M", "XT", "Tx", "x", "XM", "AX", "P", "V", "OX", "XL", "XP", "K", "MX", "J", "H", "DX", "Ex", "UX", "T", "IX", "EX", "FX", "Ax"], "L": ["LR", "I", "LV", "DL", "PL", "LI", "EL", "Lu", "GV", "SL", "LD", "BL", "TL", "Li", "M", "RL", "P", "V", "LL", "LG", "LU", "NL", "ML", "l", "XL", "LT", "LP", "CL", "LS", "IL", "LM", "LC", "LE", "LB"], "i": ["io", "us", "ski", "o", "ms", "iu", "n", "y", "ix", "l", "pi", "ii", "gu", "ti", "bi", "phi", "g", "asi", "ie", "hi", "ci", "xi", "ei", "ori", "client", "cli", "init", "s", "ui", "j", "uri", "qi", "multi", "chain", "ini", "m", "iter", "uni", "span", "si", "ic", "sim", "oi", "iri", "inner", "is", "ind", "x", "mi", "gi", "ji", "it", "di", "in", "ims", "slice", "zi", "I", "\u0438", "u", "ai", "me", "iy", "im", "v", "info", "q", "ri", "ki", "this", "ij", "PI", "li", "point", "ip"], "ans": ["nets", "ANS", "checks", "AN", "lines", "ats", "ums", "types", "us", "rows", "ann", "ims", "ants", "ins", "x", "names", "ms", "ps", "uns", "versions", "times", "outs", "an", "n", "ks", "ones", "flags", "s", "results", "ons", "ens", "cons", "users", "ows", "ids", "ns", "mean", "ls", "stats", "um", " sums", "vals", "cs", "actions", "ss", "xs", "scan"], "sum": ["cos", "nz", "cost", "si", "sim", "ums", "ul", "us", "SU", "scale", "ann", "max", "count", "out", "na", "add", "ms", "size", "n", "cum", "mu", "index", "v", "cal", "m", "average", "summary", "sam", "hash", "Sum", "SI", "su", "mem", "acc", "ass", "can", "st", "mean", "total", "stats", "um", "scan", "alpha", "sa", "num", "sign", "set", "ma", "ss", "se"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString str1 = sc.nextLine();\\n\t\tString str2 = sc.nextLine();\\n\t\tsc.close();\\n\t\tboolean flug = false;\\n\t\t\\n\t\tfor(int i=0; i<str1.length(); i++) {\\n\t\t\tif(str1.equals(str2)) {\\n\t\t\t\tflug = true;\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tstr2 = str2.substring(str2.length()-1) + str2.substring(0, str2.length()-1);\\n\t\t}\\n\t\t\\n\t\tif(flug) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t} else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n      \\n\t}\\n}", "target": "220", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "cam", "gc", "sq", "sch", "anc", "fc", "sec", "sp", "cc", "c", "isc", "esc", "cl", "ko", "lc", "arc", "ctl", "dec", "mc", "RC", "inc", "scl", "cr", "ch", "system", "ck", "ss", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "str1": [" strName", "Str0", "st4", "sp0", "strOne", "objOne", "obj1", " strOne", "StrOne", "st0", "str4", "StrName", "stOne", "obj2", "str0", "strName", "sp2", "st2", "spOne", "st1", "Str1", "sp4", "Str2", "objName", "Str4", " str0", "sp1"], "str2": ["s2", "print4", "print2", "str6", "s1", "rep4", "StrTwo", "printTwo", " str6", "sp3", "Str64", "trytwo", "serv6", "STR3", "strTwo", "seq3", "dr1", " strtwo", "formtwo", "try1", "stwo", "tryTwo", "serv1", "s02", "try2", "repTwo", "str4", "Strtwo", " str4", "print1", "seq1", "sttwo", "st02", " strTwo", "Str02", "rep1", "serv2", "form1", "drTwo", "sp2", "st2", "rep2", "serv64", "st1", "strtwo", "Str1", "STR2", "Str3", "Str2", "str64", "form2", "STRTwo", "dr2", "str3", "seqTwo", "seq2", "Str6", " str64", "formTwo", "drtwo", " str3", "str02", "sp1", "spTwo", "STR1"], "i": ["zi", "go", "mill", "I", "hi", "ci", "ie", "sql", "si", "io", "ic", "t", "u", "sim", "ai", "xi", "ei", "us", "me", "is", "x", "mi", "c", "n", "cli", "y", "im", "v", "init", "ix", "ui", "j", "a", "qi", "pi", "multi", "it", "e", "ii", "gu", "di", "ex", "li", "in", "ti", "bi", "m", "iu", "phi", "ip", "asi"], "flug": ["Flash", "boudge", "Fludge", "slug", "flog", "Flog", "flugg", "lash", "boug", " fludge", "Flugg", "slugg", "slog", "ludge", "lugg", "sludge", "lug", "bougg", " flash", "fludge", "flash", "Flug", "boash", " flugg", "slash", "log", "boog"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\twhile (sc.hasNext()) {\\n\t\t\tString x = sc.next();\\n\t\t\tint sum = 0;\\n\t\t\tchar[] str1 = x.toCharArray();\\n\t\t\tfor (int i = 0; i < str1.length; i++) {\\n\t\t\t\tsum += Character.getNumericValue(str1[i]);\\n\t\t\t}\\n\\n\t\t\tif (x.equals(\"0\")) {\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tSystem.out.println(sum);\\n\t\t}\\n\\n\t}\\n\\n}", "target": "144", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "sch", "uc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "ko", "lc", "ctl", "mc", "inc", "scl", "cr", "capt", "ch", "sci", "cle", "cs", "ec", "tc", "Sc", "scan"], "x": ["fx", "px", "xp", "xml", "f", "xd", "ax", "xx", "xt", " xx", "xi", "lex", "xf", "xa", "ox", "g", "c", "n", "xc", "y", "v", "ix", "q", "xe", "l", "wx", "rx", "co", "nex", "xb", "string", "p", "xy", "ex", "tx", "X", "inx", "str", "z", "ux", "xs"], "sum": ["success", "zero", "status", "cu", "cost", "sim", "prof", "mm", "fac", "match", "dim", "max", "sup", "count", "out", "size", "score", "must", "alph", "body", "sat", "cum", "tail", "index", "cal", "tu", "average", "summary", "hash", "sam", "Sum", "SI", "su", "mem", "acc", "vol", "ass", "mean", "total", "result", "empty", "um", "hum", "sa", "num", "temp", "sign", "mod", "black"], "str1": ["STRone", "sp3", " strax", "sp0", "string1", " strone", " str8", "string8", "string0", "string01", "st0", "char1", "char0", "char3", "str0", "stone", "str01", "strax", "sp2", "st2", "charax", "st1", "STR01", "str8", "charone", "STR0", "st3", "char8", "str3", "stringax", "st01", "strone", "str2", "stringone", "char2", "sp1", "STR1"], "i": ["I", "hi", "ci", "ie", "span", "\u0438", "si", "io", "ic", "sim", "u", "oi", "us", "ai", "ei", "is", "k", "ind", "o", "ms", "mi", "err", "n", "cli", "y", "init", "im", "gi", "ix", "q", "ui", "json", "ri", "ki", "j", "uri", "gravity", "a", "qi", "pi", "multi", "ji", "it", "my", "ii", "PI", "di", "ini", "id", "to", "li", "fi", "ti", "bi", "z", "m", "point", "phi", "g", "ip"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int n=sc.nextInt();\\n    int d=sc.nextInt();\\n    int a[][] = new int[n][d];\\n    for(int i=0;i<n;i++){\\n      for(int j=0;j<d;j++){\\n        a[i][j]=sc.nextInt();\\n      }\\n    }\\n    int count=0;\\n    for(int i=0;i<n;i++){\\n      for(int j=i+1;j<n;j++){\\n        int total=0;\\n        for(int k=0;k<d;k++){\\n          total+=(a[i][k]-a[j][k])*(a[i][k]-a[j][k]);\\n        }\\n        int dist = (int)(Math.sqrt((double)total));\\n        if( dist*dist==total ){\\n          count++;\\n        }\\n      }\\n    }\\n    System.out.println(count);\\n  }\\n}", "target": "59", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "exec", "sch", "sq", "gc", "ng", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "lc", "ctl", "desc", "screen", "mc", "inc", "scl", "cr", "ch", "ss", "sci", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["length", "nm", "nb", "t", "network", "ln", "nc", "net", "mn", "nan", "na", "x", "o", "no", "ng", "size", "r", "on", "len", "c", "an", "nn", "name", "y", "v", "en", "dn", "N", "l", "nu", " N", "np", "nl", "p", "norm", "sn", "ns", "nd", "nt", "number", "num", "un", "z", "m", "ne", "g"], "d": ["length", "def", "done", "dd", "f", "de", "t", "div", "dim", "sd", "dp", "D", "da", "ind", "data", "pd", "cd", "dev", "r", "dom", "c", "dm", "dn", "del", "w", "l", "den", "dec", "p", "b", "dat", "di", "nd", "dt", "ds", "dir", "db", "dc", "num", "z", "m", "g"], "a": ["aux", "ar", "aa", "ack", "t", "at", "u", "ai", "area", "all", "A", "fa", "au", "na", "o", "data", "oa", "ation", "ao", "ba", "an", "am", "c", "arr", "ap", "v", "app", "s", "m", "ea", "ga", "ia", "ity", "ae", "aaa", "e", "apa", "p", "b", "ca", "result", "ata", "alpha", "as", "la", "att", "sa", "cache", "z", "ma", "g", "ac"], "i": ["or", "zi", "iq", "iter", "ie", "hi", "ci", "I", "iti", "ar", "ami", "iso", "si", "io", "at", "sim", "u", "ic", "us", "xi", "ai", "ei", "inner", "me", "eu", "is", "ish", "ind", "ori", "o", "x", "mi", "ir", "index", "by", "im", "init", "gi", "info", "ix", "q", "ui", "this", "ri", "ia", "ki", "qi", "pi", "multi", "ij", "it", "ii", "ini", "di", "id", "asi", "li", "in", "ti", "bi", "ims", "iu", "phi", "ip", "ion"], "j": ["note", "jac", "bj", "at", "jl", "js", "obj", "er", "fr", "out", "oj", "job", "o", "ne", "je", "z", "on", "sp", "err", "uj", "ge", "key", "jc", "pt", "kid", "y", "v", "bs", "q", "m", "dj", "bo", "json", "l", "pr", "ju", "aj", "jp", "jo", "jump", "ji", "ij", "it", "e", "br", "jit", "J", "res", "b", "jj", "ja", "other", "jet", "rel", "str", "kj", "bi", "ort", "og", "jas", "el", "g", "ion"], "count": ["found", "report", "length", "flag", "counter", "nb", "Count", "ct", "t", "match", "max", "ind", "sum", "find", "add", "ctr", "cond", "size", "must", "cd", "score", "cont", "code", "c", "check", "index", "ount", "info", "state", "amount", "coll", "cmd", "result", "nt", "number", "num", "trace", "list", "call"], "total": ["stable", "pdf", "note", "sequence", "length", "done", "open", "zero", "basic", "important", "relative", "otal", "translation", "t", "both", "raw", "complete", "integer", "all", "net", "human", "free", "base", "now", "sum", "global", "no", "eta", "full", "payment", "database", "equal", "value", "valid", "set", "unique", "summary", "available", "ta", "current", "diff", "normal", "created", "density", "result", "null", "empty", "template", "Total", "required", "checked", "trace", "other", "common", "shared", "quant"], "k": ["kn", "kit", "ack", "wk", "kin", "ak", "kh", "ka", "dk", "kk", "unk", "kg", "kat", "ork", "ek", "sk", "ask", "ks", "ijk", "ke", "kar", "key", "kt", "kid", "v", "kind", "q", "ko", "ki", "kw", "ik", "ark", "ku", "kl", "K", "ph", "uk", "ok", "ck", "kr", "mk", "kj", "m", "km", "g", "tk"], "dist": ["pdf", "cmp", "length", "def", "relative", "dd", "radius", "shift", "exp", "match", "sd", "dp", "ind", "sum", "cd", "dev", "md", "df", "dm", "Dist", "lib", "del", "dj", "det", "dest", "distance", "desc", "diff", "density", "delay", "norm", "driver", "rt", "nt", " distance", "dir", "rel", "dc", "Distance"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Collections;\\nimport java.util.HashMap;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        try (Scanner sc = new Scanner(System.in)) {\\n            int N = sc.nextInt();\\n            String[] S = new String[N];\\n            for (int i = 0; i < N; i++) {\\n                S[i] = sc.next();\\n            }\\n\\n            HashMap<String, Integer> sToNumber = new HashMap<String, Integer>();\\n            for (int i = 0; i < N; i++) {\\n                Integer number = sToNumber.get(S[i]);\\n                sToNumber.put(S[i], 1 + (number == null ? 0 : number.intValue()));\\n            }\\n\\n            ArrayList<String> list = new ArrayList<>();\\n            int max = 0;\\n            for (String key : sToNumber.keySet()) {\\n                int number = sToNumber.get(key).intValue();\\n                if (number >= max) {\\n                    if (number > max) {\\n                        max = number;\\n                        list.clear();\\n                    }\\n                    list.add(key);\\n                }\\n            }\\n            Collections.sort(list);\\n\\n            for (int i = 0; i < list.size(); i++) {\\n                System.out.println(list.get(i));\\n            }\\n        }\\n    }\\n}", "target": "235", "substitutes": {"N": ["I", "NM", "NN", "R", "Count", "NC", "C", "ND", "L", "IN", "AN", "Y", "NO", "Z", "Num", "NT", "M", "D", "Net", "Node", "NG", "P", "n", "V", "NR", "NL", "Number", "NB", "NP", "ANY", "TN", "NI", "GN", "NA", "K", "J", "Size", "NH", "H", "NS", "SN", "Length", "T", "Ns", "Sn", "ALL", "NE"], "S": ["AS", "I", "R", "FS", "RS", "L", "TS", "services", "ENS", "SS", "SL", "SU", "SAN", "SR", "Series", "ISS", "SIGN", "Windows", "M", "CS", "SER", "SA", "JS", "PS", "INS", "US", "VS", "P", "V", "SM", "DS", "SOURCE", "SB", "NRS", "s", "U", "Sample", "CSS", "SF", "SI", "GS", "SE", "LS", "NS", "SP", "BY", "IDS", "BS", "SAM", "T", "ASS", "States", "SQL"], "i": ["io", "us", "o", "n", "index", "y", "ix", "you", "pi", "series", "ii", "gu", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "ei", "xi", "base", "ori", "client", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "my", "chain", "uu", "ini", "ma", "m", "span", "si", "ic", "sim", "oi", "iri", "is", "ind", "x", "mi", "err", "mu", "name", "gi", "ji", "it", "di", "ims", "zi", "iq", "iti", "I", "ami", "\u0438", "u", "ai", "me", "ful", "iy", "im", "info", "q", "wi", "ri", "ki", "batch", "this", "ity", "ij", "PI", "cgi", "li", "iu", "ip"], "sToNumber": ["s2Number", " sTonumber", " stoCounter", "iToOther", "sTargetNumber", "sToInteger", "sToNum", " stoVersion", " stonumber", "stoNumber", "sTargetnumber", " stoInteger", "stoVersion", "sTOVersion", "stoCounter", "sTOCounter", "sTOInteger", "s2Integer", "iToNumber", " stoNum", "s2Num", "iTonumber", " sToNum", "stoOther", " sToInteger", "stoNum", "sToVersion", "stonumber", "stoInteger", " sToVersion", "sToCounter", "sTONum", "sTargetOther", "sTONumber", " stoNumber", "sTonumber", "sTOnumber", "iToInteger", "sTargetInteger", "sToOther", "s2number", " sToCounter"], "number": ["note", "zero", "notation", "position", "integer", "net", "node", "language", "less", "duration", "request", "n", "object", "next", "directory", "result", "num", "government", "none", "work", "hello", "nb", "counter", "book", "network", "information", "sum", "no", "maximum", "nn", "relation", "currency", "Number", "correct", "non", "string", "current", "amount", "step", "normal", "document", "nr", "umber", "still", "BER", "report", "length", "volume", "version", "match", "production", "name", "password", "value", "connection", "total", "news", "comment", "block", "message", " Number", "translation", "count", "padding", "na", "check", "money", "database", "NUM", "numbered", "element", "null", "token"], "list": ["sort", "ist", "sequence", "def", "word", "level", "pair", "show", "select", "collection", "shape", "complete", "left", "all", "ll", "map", "sync", "out", "loop", "add", "parent", "single", "dict", "cont", "and", "code", "check", "full", "entry", "index", "LIST", "spec", "relation", "name", "v", "php", "del", "filter", "valid", "load", "batch", "comment", "l", "dl", "table", "print", "pool", "form", "chain", "queue", "listed", "st", "search", "group", "ls", "detail", "stack", "result", "user", "array", "layout", "li", "see", "log", "lists", "set", "block", "tree", "test"], "max": ["MAX", "length", "zero", "best", "auto", "important", "huge", "ax", "range", "window", "radius", "latest", "scale", "exp", "Max", "right", "base", "height", "last", "now", "k", "sum", "count", "x", "ma", "tmp", "size", "check", "full", "maximum", "h", "med", "prime", "v", "min", "conf", "m", "grow", "limit", "hash", "rest", "current", "start", "mx", "p", "gt", "old", "total", "alpha", "top", "num", "checked", "temp", "end", "major", "mod", "default"], "key": ["poly", "cy", "pair", "te", "tag", "obj", "foo", "er", "base", "k", "primary", "phrase", "x", "link", "pkg", "var", "entry", "label", "by", "name", "y", "index", "ty", "value", "info", "q", "prefix", "bo", "ace", "Key", "hash", "ey", "char", "string", "title", "step", "keys", "my", "owner", "chain", "ex", "txt", "template", "id", "KEY", "row", "token", "str", "sym", "item", "ame"]}}
{"code": "import java.util.*;\\nimport java.lang.*;\\n\\nclass Main{\\n    public static void main(String args[]){\\n        Scanner sc = new Scanner(System.in);\\n        String[] line = sc.nextLine().split(\" \");\\n        int n = line.length;\\n        int[] arr = new int[n];\\n        int count = 0;\\n        int temp;\\n\\n        int v1;\\n        int v2;\\n        Integer ans;\\n        ArrayDeque<Integer> stk = new ArrayDeque<Integer>();\\n        for(int i = 0; i < n; i++){\\n            if(line[i].equals(\"+\")){\\n                v1 = stk.pop().intValue();\\n                v2 = stk.pop().intValue();\\n                ans = Integer.valueOf(v1 + v2);\\n                stk.push(ans);\\n            }else if(line[i].equals(\"-\")){\\n                v1 = stk.pop().intValue();\\n                v2 = stk.pop().intValue();\\n                ans = Integer.valueOf(v2 - v1);\\n                stk.push(ans);\\n            }else if(line[i].equals(\"*\")){\\n                v1 = stk.pop().intValue();\\n                v2 = stk.pop().intValue();\\n                ans = Integer.valueOf(v1 * v2);\\n                stk.push(ans);\\n            }else{\\n                stk.push(Integer.valueOf(line[i]));\\n            }\\n        }\\n        System.out.println(stk.pop().intValue());\\n        \\n        \\n\\n\\n\\n    }\\n}", "target": "114", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sq", "sch", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "lc", "ner", " Sc", "desc", "dec", "screen", "mc", "nl", "scl", "capt", "ch", "system", "st", "ss", "cle", "cs", "ec", "tc", "Sc", "scan"], "line": ["iter", "cell", "sequence", "note", "word", "LINE", "ine", "dd", "date", "lines", "network", "range", "pe", "ip", "inline", "net", "node", "port", "online", "look", "point", "Line", "link", "ne", "parse", "nice", "train", "err", "rule", "check", "lin", "lane", "lo", "page", "device", "shell", "where", "one", "eline", "ve", "column", "comment", "l", "char", "force", "store", "nl", "handle", "string", "normal", "print", "pipe", "chain", "cmd", "le", "file", "detail", "row", "log", "in", "ide", "ln", "query", "block", "list", "frame", "str", "se"], "n": ["length", "nm", "nb", "f", "t", "ln", "nc", "k", "nan", "mn", "na", "o", "x", "no", "r", "len", "c", "nn", "fn", "v", "gn", "en", "N", "j", "l", "nu", " N", "nl", "np", "cn", "p", "sn", "b", "ns", "nt", "ni", "num", "z", "d", "m", "ne"], "arr": ["ar", "ray", "sys", "aa", "ax", "obj", "map", "Array", "au", "bl", "ab", "par", "gr", "err", "var", "j", "ars", "res", "ij", "br", "rs", "array", "vals", "buf", "str", "list", "val", "fr"], "count": ["length", "cap", "flag", "counter", "Count", "nb", "max", "base", "last", "sum", "no", "ctr", "type", "z", "code", "c", "index", "current", "cr", "total", "number", "num", "list", "set", "cache", "val"], "temp": [" touched", "ver", "time", " k", "t", " ret", " val", "max", " ptr", "tmp", " t", " pos", " time", " tmp", "ta", " num", " max", " sum", " precision", " wr", " ti", " total", "ptr", "set", " rem", "val", " start", "ts"], "v1": ["Vone", "var1", "qu1", "lv0", "st9", " vij", "var81", " vaj", "qu10", "k0", "cv91", "cv1", "conv1", "v9", "m91", "convone", "cv2", "iv51", "versionaj", " v81", "lv2", "m0", " v51", "v11", "v0", "nv11", "cv01", "q41", "v91", "v81", " v10", "qu101", " v001", "V0", "v51", "ver01", "qu51", "ver91", "vtx", "q1", "conv41", "V1", "conv001", "ver1", "V2", "nv1", "m01", "vij", " v9", "var11", "v10", "version1", " v101", "k2", "iv1", "version9", "m2", " v11", "iv101", " v41", "nv81", "qone", "versionij", "iv10", "stij", "lv101", "m101", "v101", " vone", "lv1", "v01", "q001", " v0", "kone", "v001", "nvtx", "m1", " vtx", "staj", "st1", "v41", "ver2", "vaj", "vartx", "k1", "vone"], "v2": ["svto", " v42", " vto", "j6", "convoder", "V12", "inv8", "ev02", "v8", "vtwo", " v12", "q2", "stoder", "vTwo", " v6", "sv02", "tv2", "avtwo", " vtwo", "forcetwo", "stTwo", "inv2", "ev1", "v02", " v72", "q72", "vto", "inv42", "svtwo", "voder", "ev12", "qtwo", "force8", "Vtwo", "ivtwo", "qu42", "ev2", "force2", "v72", "convTwo", "sv6", "V2", "av2", "force72", "ivoder", "tvoder", "avoder", "qu8", "v42", "conv42", "m2", "qu2", "j02", " v8", "V02", "v6", "sv2", "q8", "conv2", "avto", "tv42", "ivto", "v12", "st42", "st2", "m1", "svoder", "invto", "j2", "mtwo", "iv2", "evtwo", "tvTwo", " v02", "quto"], "ans": ["ras", "orts", "ads", " cs", "ants", " ns", "outs", "ms", "pins", "orders", "ups", "angs", "ands", "os", "amps", "locks", "olds", " versions", "ids", "stats", "as", "nets", " sans", "aps", " plans", " means", "aus", "an", "ks", "els", "s", "anas", "ars", "vers", " flags", "ls", " stats", "actions", "jas", "rates", "cas", "offs", "ces", "ats", "ums", "ann", "ins", "uns", "acs", " spans", " offsets", "lets", " names", "yes", "ens", " os", "ams", "ns", " orphans", "vals", "arms", " caps", "ANS", "anks", "AN", "eps", "eds", " ants", " scans", "vs", "lan", "aos", "books", "posts", "cons", "gs", "ates", "rs", "mas", "arts"], "stk": ["latijk", " stkar", "estck", " stke", " stK", "stkj", "striak", "ftkl", "staker", "STk", "putrek", "statK", "statik", "stemaker", "thkar", "restek", " stck", "restkh", "strek", "mustk", " stack", "mustijk", " stak", "stK", "restks", "STkk", "estK", "stdk", "STkj", "swk", "stkar", "STks", "strikar", "STck", "mustaker", "swke", "stdc", "strik", "thak", "mustkh", "btkw", "stijk", "estk", "putkh", "stks", "btkh", "mustq", "restko", "thk", "stark", "tyko", "latq", "tyks", "ftk", "mustrek", "btck", "swkl", "stek", "mustak", "mustack", " stkk", " stik", "stemark", "tyk", "ftck", "btrek", "stdark", "astrek", "ftke", "tyck", "striK", " stq", "mustkk", " stkj", " stko", "stemk", "latyk", "btk", "putk", "styk", "swck", " stj", " stek", "latdc", "strk", "strkj", "stj", " stkl", "restk", "latk", "stack", "thK", "statck", "stemrek", "strks", "stak", "ttack", " stkh", "ttkh", "stkh", "ptk", "stemdc", "STak", " stijk", "ptijk", "mustyk", "stck", "mustj", "stik", "btek", "restck", "stkw", "strck", "putkw", "astkw", "estik", "ptaker", "stke", "stddc", "astk", "statk", "stkl", "stkk", "astkh", "stko", "ttj", "ptrek", "latark", " styk", "stq", "ttk", " stks", "stemijk"], "i": ["status", "io", "us", "ski", "point", "o", "iu", "index", "y", "ix", "pi", "series", "ii", "gu", "id", "conv", "ti", "bi", "phi", "g", "ie", "ci", "sql", "f", "ei", "xi", "cli", "init", "ui", "j", "uri", "qi", "multi", "print", "chain", "ex", "ini", "list", "m", "iter", "si", "ic", "sim", "oi", "is", "ind", "x", "mi", "gi", "json", "ji", "it", "di", "zi", "iq", "I", "\u0438", "u", "ai", "me", "ish", "key", "im", "v", "info", "q", "ri", "this", "batch", "ia", "ij", "li", "gl", "ip"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main\\n{\\n    public static void main(String[] args)\\n    {\\n        Deque<String> formula = new ArrayDeque<String>();\\n        Scanner scan = new Scanner(System.in);\\n\\n        while(scan.hasNext())\\n        {\\n            String input = scan.next();\\n            double num2,num1;\\n            switch(input)\\n            {\\n                case \"+\":\\n                    num2 = Double.parseDouble(formula.poll());\\n                    num1 = Double.parseDouble(formula.poll());\\n                    formula.push(String.valueOf(num1+num2));\\n                    break;\\n                case \"-\":\\n                    num2 = Double.parseDouble(formula.poll());\\n                    num1 = Double.parseDouble(formula.poll());\\n                    formula.push(String.valueOf(num1-num2));\\n                    break;\\n                case \"/\":\\n                    num2 = Double.parseDouble(formula.poll());\\n                    num1 = Double.parseDouble(formula.poll());\\n                    formula.push(String.valueOf(num1/num2));\\n                    break;\\n                case \"*\":\\n                    num2 = Double.parseDouble(formula.poll());\\n                    num1 = Double.parseDouble(formula.poll());\\n                    formula.push(String.valueOf(num1*num2));\\n                    break;\\n                default:\\n                    formula.push(input);\\n                    break;\\n            }\\n        }\\n        double ans = Double.parseDouble(formula.poll());\\n        if(ans==(int)ans)\\n        {\\n            System.out.println((int)ans);\\n        }\\n        else\\n        {\\n            System.out.println(ans);\\n        }\\n    }\\n}", "target": "114", "substitutes": {"formula": ["factulate", "formculation", "transformculation", "mutulation", "handula", "functionculation", "matula", "structula", "makeulator", " formulator", "calula", "handulo", "forecular", "formedulation", "normalula", " formato", "formerula", "functionatted", "handulative", "formerulative", "funulate", "formeratted", "familyulator", "mutculation", " formulo", "handcular", " formbook", "equula", "formeduler", "hexula", "formlied", "structbook", "structculation", "formbook", "transformula", " formuler", "formatulation", "equular", "matulation", "makela", "formeraco", "handulate", "factulation", "handmission", "transformulate", " formla", " formculation", "formercular", "handculation", "foreculation", "formato", "matulate", " formcular", " formular", "equulate", "formuted", "formatula", "formatbook", "formatted", "familyla", "makeulo", "handbook", "formedula", "hexulation", "formedato", "functionulate", "functionulation", "formerplant", "factula", "formuler", "formedaco", "formerlied", "hexculation", "familyulo", "formulo", "funulation", "handulation", "FORMulate", "FORMuler", "functionulo", "structulation", "hexular", "makeula", "formplant", "matuted", "makeuler", "formedcular", "normalulo", "formmission", "functionula", "foreulative", "formatulate", "calulate", "normalulation", " formulation", "familyula", "foreula", "formcular", "FORMculation", "formulator", "mutula", "makeulate", "formedulo", "functionlied", "formeruler", "formaco", "formerulation", "formerculation", "formulate", " formulate", " formmission", "hexuler", "FORMula", "formerulate", "normalmission", "formulative", "makeculation", "calular", "factuted", "transformulation", "formedular", "hexbook", "funula", "hexato", "formedatted", "formedplant", "funuted", "functionaco", "formulation", "formular", "transformulo", "formla", " formplant", "formedlied"], "scan": ["report", "connect", "auto", "sql", "sys", "black", "show", " scanner", "san", "pass", "watch", "Scan", "se", "scale", "sync", "match", "send", "reach", "gate", "look", "stat", "find", "skip", "parse", "sur", "check", "an", "n", "read", "nn", "ser", "ner", "clean", "store", "sin", "can", " Scan", "system", "spin", "search", "seek", "run", "sche", "see", "in", "query", "sc", "scroll"], "input": ["error", "hello", "word", "path", "join", "xml", "sql", "select", "raw", "shift", "human", "op", "hidden", "focus", "data", "Input", "arg", "add", "config", "context", "source", "cur", "image", "entry", "key", "label", "spec", "name", "index", "conf", "expression", "q", "ix", "output", "prefix", "json", "mask", "pattern", "string", "current", "char", "lat", "text", "print", "qa", "cmd", "command", "template", "in", "str", "query", "point", "visible", "ip"], "num2": ["ordtwo", "mon1", "Num02", " num4", "dist1", "num22", "msg02", "mont02", "mat2", "umoder", "Num2", "net002", "num21", "mat1", "n002", "Num96", "um4", "ord002", "dist22", "Num4", "nu1", "mon22", " num96", "mont4", "mont012", "num012", "num002", " num02", "n2", " num21", "mont2", "num4", "net2", "ntwo", "n1", "numTwo", "alph2", "num96", "umTwo", "number012", "num82", "number1", "nuoder", "num02", "nu2", "mat22", "um02", "net1", "NumTwo", "ord2", "alph1", "montwo", " num82", "um012", "alph21", "um82", "mont82", "mont96", "ord1", "msgTwo", "disttwo", "Num1", "um2", "nettwo", "number02", " numTwo", "dist2", "mattwo", "monTwo", "nutwo", "numoder", " num012", "msg2", "nuTwo", "um1", "numtwo", "mon2", "mont1", "msg1", "number2", "mont21", "nu22", "monoder"], "num1": ["num0", "gener11", "sumOne", "numberasso", "mon1", "numberator", "loc1", "montasso", "nuasso", "numberary", "gener1", "formOne", "nuator", "num51", "temp1", "form01", " num256", "number91", "mon3", " num01", "nu1", "num8", "gener2", "dim1", "dim2", "num3", "loc51", "gener01", "mont91", "mont2", "numOne", "form2", "mont8", " numOne", " num0", "num01", "numone", "dimary", "number1", "number8", " numone", "nu2", "temp256", "number0", " num8", "num256", "number01", "sum2", "num91", "numary", "monone", "nu001", "number3", " num91", "loc256", "numberone", "sumone", "num001", "sum01", "nuary", "sum1", "temp51", " num3", " num11", "number11", "num11", "number001", "form1", "mon2", "numasso", "numator", "mont1", "number2", "dim001", " num51", "gener0", "montator"], "ans": ["ANS", "ions", "orts", "anks", "offs", "anes", "lines", "ats", "ums", "aps", "eps", "ann", "mn", "nan", "ants", "ins", "outs", "names", "ms", "ps", "als", "times", "uns", "aus", "ks", "an", " scans", "ians", "vs", "angs", "os", "s", "amps", "rans", "aos", "results", "acts", "beans", "ons", "anas", "ens", "ars", "vers", "ations", "ates", "ids", "ns", "rs", "ls", "as", "ds", "vals", "cs", "actions", "arts", "xs", "ents"]}}
{"code": "\\n\\nimport java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.Collections;\\nimport java.util.List;\\nimport java.util.Map;\\nimport java.util.Scanner;\\nimport java.util.TreeMap;\\n\\npublic class Main {\\n\\n\tstatic Scanner scanner;\\n\\n\tpublic static void main(String[] args) {\\n\t    scanner = new Scanner(System.in);\\n\\n\t    int N=gi();\\n\t    int[] W=new int[N];\\n\\n        for(int i=0; i<N; i++) {\\n        \tW[i]=gi();\\n        }\\n\\n        int min=Integer.MAX_VALUE;        \\n        for (int i=1; i<N; i++) {\\n        \tint T=i;\\n        \tint b=0;\\n        \tint a=0;\\n        \tfor (int j=0; j<i; j++) {\\n        \t\tb+=W[j];\\n        \t}\\n        \tfor (int j=i; j<N; j++) {\\n        \t\ta+=W[j];\\n        \t}\\n        \tint z=Math.abs(b-a);\\n        \tif(z<min) {\\n        \t\tmin=z;\\n        \t}\\n        }\\n        \\n\\n        System.out.print(min);\\n\\n//        if (b>=1 && b<=12) {\\n//        \tif(a>=1 && a<=12) {\\n//        \t    System.out.println(\"AMBIGUOUS\");\\n//        \t} else {\\n//        \t\tSystem.out.println(\"MMYY\");\\n//        \t}\\n//        }else {\\n//        \tif(a>=1 && a<=12) {\\n//        \t    System.out.println(\"YYMM\");\\n//        \t} else {\\n//        \t\tSystem.out.println(\"NA\");\\n//        \t}\\n//        }\\n\t}\\n\\n\t// \u6587\u5b57\u5217\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\\n\tpublic static String gs() {\\n\t\treturn scanner.next();\\n\t}\\n\\n\t// int\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\\n\tpublic static int gi() {\\n\t\treturn Integer.parseInt(scanner.next());\\n\t}\\n\\n\t// long\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\\n\tpublic static long gl() {\\n\t\treturn Long.parseLong(scanner.next());\\n\t}\\n\\n\t// double\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\\n\tpublic static double gd() {\\n\t\treturn Double.parseDouble(scanner.next());\\n\t}\\n}", "target": "2", "substitutes": {"scanner": ["Scanner", "Scanler", "Scaner", "scaner", "scanler", "anter", "generener", "scanener", " scanter", "canter", "canler", "anner", " scanler", "aner", "generner", " scaner", "Scanter", "caner", "generer", "canener", "anener", "generter", "scanter", "canner"], "N": ["I", "NM", "NN", "R", "NC", "C", "ND", "L", "IN", "AN", "OUT", "Q", "NO", "Na", "Z", "Num", "NT", "M", "Net", "NAT", "S", "B", "MN", "F", "NG", "V", "n", "P", "NR", "Ni", "NB", "NP", "TN", "NI", "GN", "NA", "K", "J", "NH", "NS", "Ne", "Len", "SN", "Ns", "Sn", "NE"], "W": ["WAR", "WT", "R", "VW", "L", "WE", "DW", "EW", "Q", "Z", "Windows", "M", "B", "RW", "WP", "F", "Web", "V", "WS", "CW", "SW", "Writer", "WM", "WA", "w", "MW", "NW", "Watch", "G", "J", "Weight", "H", "BW", "We", "WC"], "i": ["status", "io", "us", "n", "source", "index", "y", "ix", "l", "you", "SI", "pi", "ii", "id", "fi", "ti", "bi", "phi", "g", "ie", "ci", "f", "t", "xi", "ei", "II", "ori", "init", "Ni", "s", "ui", "uri", "qi", "multi", "IC", "chain", "ini", "ni", "m", "ion", "iter", "si", "ic", "sim", "inner", "M", "is", "k", "ind", "x", "mi", "P", "V", "gi", "it", "e", "p", "di", "to", "in", "ims", "It", "zi", "iq", "iti", "I", "ami", "\u0438", "L", "u", "ai", "me", "key", "iy", "im", "v", "info", "q", "this", "ri", "batch", "ki", "ity", "ij", "PI", "li", " I", "iu", "ip"], "min": [" MIN", "zero", "best", "first", "t", "window", "me", "version", "latest", "max", "sol", "M", "mn", "initial", "ma", "stat", "sum", "Minimum", "size", "mint", "amin", "mi", "Min", "opt", "partial", "n", "beta", "index", "name", "init", "MIN", "second", "Mini", "small", "state", "lower", "s", "value", "emin", "mini", "summary", "mod", "start", "mem", "aj", "lt", "sample", "diff", "p", "minimum", "dem", "st", "mean", "mins", "number", "margin", "minute", "temp", "mine", "m", "val", "test"], "T": ["E", "I", "Ti", "R", "C", "L", "t", "AI", "Q", "Z", "O", "TA", "M", "D", "S", "B", "F", "P", "V", "ty", "U", "K", "G", "J", "Total", " ti", " I", "TI"], "b": ["bp", "f", "back", "bb", "t", "u", "bc", "bin", "base", "bl", "ab", "B", "r", "fb", "g", "ba", "n", "c", "wb", "eb", "ib", "y", "v", "bs", "bo", "l", "rb", "BA", "p", "bas", "bar", "db", "to", "be", "bi", "m", "sb"], "a": ["ar", "aa", "f", "t", "at", "ai", "area", "A", "da", "au", "na", "o", "ab", "pa", "oa", "eta", "ao", "ba", "n", "am", "an", "h", "c", "s", "m", "ea", "w", "ia", "sta", "l", "isa", "ae", "aj", "aaa", "af", "e", "apa", "p", "ca", "ata", "alpha", "la", "att", "as", "sa", "ma", "ac"], "j": ["note", "ie", "bj", "Ja", "off", "jl", "js", "obj", "ion", "fr", "oj", "job", "o", "ng", "je", "on", "err", "uj", "tr", "ev", "prop", "key", "jc", "by", "y", "v", "pt", "q", "ix", "dj", "json", "l", "pr", "next", "ju", "aj", "jp", "jo", "jump", "ji", "ij", "J", "ph", "br", "it", "jit", "jj", "other", "jet", "att", "rel", "kj", "m", "og", "g", "ja"], "z": ["zi", "zero", "nz", "zone", "zo", "div", "sim", "window", "u", "uz", "Z", "sd", "tz", "enz", "x", "gz", "iz", "ez", "c", "n", "iaz", "os", "y", "oz", "q", "yz", "rez", "zer", "zip", "cf", "ze", "ld", "cz", "d", "hz", "az", "slice", "zh"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main{\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\\n\t\tint n = scan.nextInt();\\n\t\tint m = scan.nextInt();\\n\t\tint [][] det = new int [n][m];\\n\t\tint [] b = new int [m];\\n\\n\t\tfor(int i = 0; i < n ; i++){\\n\t\t\tfor(int j = 0 ; j < m ; j++){\\n\t\t\t\tdet[i][j] = scan.nextInt();\\n\t\t\t}\\n\t\t}\\n\\n\t\tfor(int i = 0 ; i < m ; i++){\\n\t\t\tb [i] = scan.nextInt();\\n\\n\t\t}\\n\t\t\\n\t\tfor(int i = 0 ; i < n ; i++){\\n\t\t\tint sum = 0 ;\\n\t\t\tfor(int j = 0 ; j < m ; j++){\\n\t\t\t   sum += det[i][j]*b[j];\\n\t\t\t}\\n\t\t\tSystem.out.println(sum);\\n\t\t}\\n\\n\t}\\n}", "target": "185", "substitutes": {"scan": ["trans", "report", "connect", "sql", "sys", "pass", "san", "sim", "Scan", "sv", "re", "ann", "sync", "send", "reach", "gate", "out", "gc", "stat", "find", "save", "skip", "parse", "link", "conn", "na", "r", "sur", "check", "c", "an", "read", "ser", "v", "scroll", "query", "ner", "gen", "sin", "store", "ch", "can", "system", "search", "spin", "cgi", "proc", "sche", "row", "in", "see", "sc", "g", "se"], "n": ["nm", "t", "network", "nc", "net", "mn", "k", "nan", "na", "x", "o", "no", "ng", "conn", "r", "on", "c", "an", "nn", "fn", "name", "y", "v", "en", "dn", "N", "l", "nu", " N", "np", "nl", "pi", "cn", "p", "sn", "ns", "nt", "nr", "num", "un", "z", "d", "ne", "g"], "m": ["mt", "span", "om", "em", "nm", "f", "t", "me", "bm", "mm", "mo", "all", "M", "mn", "k", "ma", "o", "x", "ms", "r", "pm", "rem", "mi", "c", "dm", "h", "med", "mat", "y", "v", "im", "q", "man", "gm", "rm", "l", "perm", "mod", "mask", "mc", "pi", "e", "p", "tm", "cm", "mk", "um", "mis", "mun", "d", "km", "g"], "det": ["pred", "ent", "def", "wd", "dd", "ct", "t", " Det", "bis", "test", "ind", "fd", "pd", "dev", "df", "dis", "dm", "mat", "inet", "del", "des", "dh", "ded", "dl", "red", "binary", "diff", "normal", "xy", " DET", "dict", "dat", "td", "di", "detail", "dt", "dir", "att", "dist", "nt", "diagn", "d", "nit", "details", "Det"], "b": ["bp", "nb", "f", "bb", "t", "bm", "bc", "bin", "k", "bf", "bg", "B", "r", "fb", "c", "ba", "wb", "h", "ib", "y", "v", "bs", "ob", "bo", "bt", "l", "a", "rb", "br", "ch", "p", "db", "be", "bi", "d", "g"], "i": ["zi", "iq", "iti", "ie", "I", "ci", "hi", "ar", "ami", "\u0438", "si", "io", "ic", "sim", "ai", "ei", "xi", "us", "is", "ish", "ind", "ion", "ori", "mi", "ir", "iy", "im", "init", "gi", "info", "ix", "q", "ui", "ri", "ki", "ia", "uri", "this", "ik", "ity", "qi", "pi", "ji", "ij", "it", "ii", "chain", "ini", "di", "ni", "id", "asi", "li", "fi", "ti", "ims", "iu", "phi", "ip", "aci"], "j": ["note", "jac", "bj", "si", "ax", "off", "jl", "js", "Ja", "obj", "mn", "ind", "ion", "k", "oj", "o", "job", "ng", "z", "r", "je", "sp", "uj", "ev", "by", "pt", "y", "v", "jc", "kid", "s", "q", "ix", "dj", "json", "l", "pr", "ju", "aj", "jp", "jo", "jit", "ji", "ij", "it", "jump", "br", "J", "ph", "let", "p", "jj", "ja", "other", "di", "att", "li", "rel", "bi", "kj", "str", "og", "jas", "ne", "g", "fr"], "sum": ["report", "mix", "zero", "cost", "sim", "us", "fac", "match", "count", "out", "union", " summed", "add", "save", "size", "dev", "score", "cum", "tail", "cal", "umm", "average", "summary", "hash", "sam", "Sum", "su", "mem", "vol", "acc", "diff", "ass", "sample", "other", "total", "mean", "result", "null", "um", "hum", "num", "temp", "dot", "comment", "mod", "loss", "test", "se"]}}
{"code": "import java.util.*;\\nimport java.lang.*;\\npublic class Main\\n{\\n    public static void main(String[] args)\\n    {\\n        Scanner s = new Scanner(System.in);\\n        int n = s.nextInt();\\n        int[] a = new int[n];\\n        int sum = 0;\\n        for(int i=0; i<n; i++)\\n        {\\n            a[i] = s.nextInt();\\n            sum+=a[i];\\n        }\\n        int p = sum/n;\\n        int ans1=0;\\n        int ans2=0;\\n        for(int i=0; i<n; i++)\\n        {\\n            ans1+=Math.pow((a[i]-p),2);\\n            ans2+=Math.pow((a[i]-p-1),2);\\n        }\\n        if(ans1<ans2)\\n        System.out.println(ans1);\\n        else System.out.println(ans2);\\n    }\\n}", "target": "17", "substitutes": {"s": ["sm", "sc", "sw", "es", "hs", "fs", "sys", "sl", "js", "sf", "sv", "sts", "gets", "sh", "bis", "is", "abs", "sq", "ses", "ins", "S", "ms", "ps", "sb", "sp", "less", "ws", "ts", "sam", "gs", "search", "ns", "rs", "ls", "so", "ds", "as", "conv", "sa", "ssl", "cs", "ss", "xs", "se"], "n": ["span", "length", "nm", "nb", "f", "t", "network", "u", "nc", "all", "net", "ll", "comm", "mn", "count", "k", "out", "na", "o", "x", "nan", "ng", "no", "size", "r", "len", "g", "c", "an", "nn", "name", "y", "v", "en", "N", "j", "l", "nu", " N", "np", "nl", "cn", "norm", "sn", "ns", "nt", "number", "num", "un", "z", "m", "ne"], "a": ["aux", "aw", "history", "aa", "ack", "at", "ai", "obj", "area", "xa", "va", "A", "fa", "da", "au", "na", "ab", "oa", "ao", "ba", "am", "an", "c", "ap", "app", "m", "ea", "ga", "ia", "sta", "aaa", "pi", "apa", "aka", "b", "ca", "result", "ata", "alpha", "as", "att", "la", "array", "sa", "act", "ma", "ac"], "sum": ["success", "zero", "si", "sim", "us", "scale", "share", "max", "base", "count", "ash", "out", " summed", "na", "sup", "add", "size", "sat", "cum", "med", "index", "cal", "average", "summary", "sam", "hash", "Sum", "su", "mem", "pi", "vol", "ass", "mean", "total", "um", "so", " sums", "alpha", "sa", "num", "temp", "cache", "ho", "m"], "i": ["io", "us", "umi", "iu", "index", "php", "y", "ix", "pi", "ii", "id", "fi", "ti", "bi", "fire", "phi", "g", "ie", "hi", "ci", "ei", "xi", "base", "ori", "client", "cli", "init", "ui", "remote", "j", "uri", "qi", "multi", "chain", "ini", "set", "m", "et", "iso", "si", "ic", "sim", "oi", "inner", "er", "is", "ind", "mi", "err", "gi", "ji", "it", "di", "to", "details", "slice", "zi", "I", "ami", "\u0438", "ai", "me", "iy", "im", "v", "info", "q", "ri", "this", "batch", "ki", "ity", "ij", "PI", "spin", "li", " I", "point", "ip"], "p": ["pc", "pp", "f", "pb", "t", "k", "pa", "o", "ps", "vp", "tp", "ping", "sp", "P", "c", "pn", "h", "ap", "pt", "v", "q", "pl", "j", "perm", "l", "jp", "pi", "np", "pre", "b", "cp", "lp", "m", "g", "ip"], "ans1": ["ans8", "ans101", "ans7", "an0", " ansOne", "ann1", "annOne", "ins8", "ens6", "antsOne", "an1", " ans0", "ants0", " ans7", "ins0", "ens1", "ants8", "ants01", "ants3", " ans8", "ins1", "ansOne", "ann101", "ionsOne", "ann01", "ans01", "an7", "an8", "ions01", "ans6", "ions1", "insOne", "ants7", "ants1", "ans0", "ions101", "ins2", "ans3", " ans3", "ens8", "ins3", "an6", "ins6", "ants2", "ants101", "ens0"], "ans2": ["anas6", "faces64", " ans64", "ats02", "outs2", "offsor", "an2", "anTwo", "an15", "ands2", "ens2", "ans5", "ens6", "faces3", "ands02", "ANSor", "ans62", "ants62", "faces62", "ansTwo", "anas02", "ans02", "outs1", "an02", "offs1", "anasTwo", "ants3", "outsor", "ats15", "ands15", "ANS1", "ats2", "ands5", "ANS2", "ens02", "faces2", " ans62", "ans6", "ansor", "ensTwo", "ans64", "anas2", "ans3", "ants64", " ans3", "an5", "ats5", "offs2", "an6", "ants2", "ans15"]}}
{"code": "import java.io.IOException;\\nimport java.util.Arrays;\\nimport java.util.Scanner;\\n \\npublic class Main {\\n public static void print(int a,int b,int c){\\n\t System.out.print(a);\\n\t System.out.print(\" \");\\n\t System.out.print(b);\\n\t System.out.print(\" \");\\n\t System.out.println(c);\\n }\\n    public static void main(String[] args) throws IOException {\\n             \\n       Scanner sc = new Scanner(System.in);\\n       int []a=new int[3];\\n      a[0] = sc.nextInt();\\n      a[1] = sc.nextInt();\\n      a[2] = sc.nextInt();\\n      \\n      Arrays.sort(a);\\n      print(a[0],a[1],a[2]);       }\\n     \\n      } \\n", "target": "37", "substitutes": {"a": ["aux", "history", "zero", "aa", "f", "era", "at", "t", "window", "u", "area", "wa", "all", "A", "action", "fa", "da", "au", "ava", "i", "na", "o", "ab", "add", "oa", "pa", "z", "r", "ao", "act", "an", "am", "ba", "n", "ce", "h", "y", "v", "app", "m", "ea", "aos", "w", "ga", "eas", "ia", "sta", "admin", "ta", "aj", "ae", "aaa", "\u00e1", "e", "apa", "p", "ac", "aka", "ca", "ata", "as", "la", "att", "alpha", "sa", "ee", "set", "d", "ma", "el", "\u00e4"], "b": ["mb", "bp", "nb", "back", "bb", "bc", "bis", "bf", "bg", "ub", "ab", "ble", "B", "fb", "g", "ba", "blue", "wb", "h", "eb", "ib", "by", "v", "bs", "ob", "j", "rb", "br", "db", "be", "erb", "bi", "sb"], "c": ["C", "ct", "cu", "div", "t", "bc", "gc", "fc", "category", "sec", "cd", "ce", "cc", "n", "v", "lc", "cb", "co", "e", "cr", "etc", "cm", "ca", "cf", "dc", "cs", "ec", "d", "m", "tc", "g", "ac"], "sc": ["SC", "sw", "osc", "pc", "sys", "syn", "psc", "si", "ctx", "usc", "pb", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "fc", "sec", "sp", "cc", "esc", "isc", "cl", "lc", "Sc", "desc", "mc", "nl", "inc", "scl", "cr", "ch", "tch", "ss", "sci", "sic", "conv", "dc", "cle", "cs", "tc", "scan"]}}
{"code": "\\n\\n\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\nclass Main{\\n  public static void main(String args[]) throws IOException{\\n   BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\\n   int n = Integer.parseInt( br.readLine() );\\n\\n   int answer = 0;\\n\\n   for(int i = 0 ; i < n; i++){\\n      int x = Integer.parseInt( br.readLine() );\\n      int flag = 0;\\n\\n      if(x == 2){\\n    \tflag = 0;\\n\\n      }else if( x%2 == 0 || x < 2){\\n    \tflag = 1;\\n\\n       }else{\\n\\n       double sqrt = Math.sqrt(x);\\n       for(int j = 3; j <= sqrt; j = j+2){\\n    \t if(x % j ==0){\\n    \t\tflag = 1;\\n\\n    \t\tbreak;\\n    \t }\\n        }\\n\\n       }\\n\\n\\n    \tif(flag == 0){\\n\\n    \t\tanswer++;\\n\\n    \t}\\n\\n   }\\n\\n\\n\\n   System.out.println(answer);\\n }\\n}", "target": "226", "substitutes": {"br": ["bp", "bj", "bn", "bm", "bc", "bh", "bridge", "er", "ger", "dr", "bro", "bl", "gr", "r", "err", "ba", "tr", "arr", "shr", "bs", "lr", "yr", "bt", "mr", "Br", "pr", "rb", "jp", "gb", "cr", "bd", "adr", "kr", "b", "BR", "be", "browser", "nr", "rel", "hr", "buf", "fr", "ber", "wr", "vr"], "n": ["nb", "network", "t", "nc", "net", "mn", "nan", "na", "o", "no", "d", "on", "an", "c", "nn", "name", "y", "en", "q", "N", "l", "nu", " N", "nl", "np", "cn", "p", "sn", "ns", "nt", "nr", "num", "number", "z", "ln", "m", "ne"], "answer": ["oval", "exit", "answered", "remember", "sequence", "record", "onse", "translation", "aq", "window", "imate", "fit", "version", "area", "reply", "anova", "offer", "turn", "about", "swers", "response", "ask", "say", "vote", "notice", "entry", "erv", "image", "echo", "value", "q", "ve", "oe", "question", "blank", "yes", "Answer", "energy", "interpret", "option", "result", "wer", "array", "number", "support", "poll", "nut", "query"], "i": ["iq", "I", "ie", "ci", "inter", "si", "ic", "sim", "u", "ai", "xi", "me", "ei", "is", "ish", "ind", "o", "r", "mi", "index", "y", "init", "v", "im", "q", "ix", "ui", "ia", "a", "qi", "pi", "multi", "ij", "it", "ii", "p", "ini", "di", "id", "li", " ii", "in", "ti", "bi", "m", "iu", "phi", "asi"], "x": ["fx", "px", "xp", "xml", "f", "hex", "ax", "t", "xx", "xt", "xi", "lex", "exp", "xa", "xf", "dx", "ox", "on", "check", "color", "c", "h", "key", "xxxxxxxx", "xc", "y", "v", "ix", "orig", "q", "pl", "w", "xe", "wx", "rx", "lat", "mx", "e", "p", "xy", "ex", "inx", "X", "tx", "z", "act", "xxx", "xs"], "flag": ["error", "ver", "bool", "stay", "level", "status", "f", "window", "tag", "ment", "alt", "ln", "sync", "action", "member", "condition", "ord", "age", "button", "ond", "cond", "fd", "save", "ask", "bit", "stage", "Flag", "anch", "flags", "aint", "goal", "q", "state", "bird", "valid", "lag", "mask", "bug", "store", "nl", "print", "ground", "continue", "cmd", "option", "group", "ret", "id", "field", "cloud", "event", "ld", "log", "list", "set", "d", "fire", "sign", "wait"], "sqrt": [" sqRT", "qRT", "ssrc", "sqRT", "qt", "ssrt", " sqr", "qrt", "svRT", "qrc", "sqt", "squarert", "squareRT", "ssRT", " sqrat", "sqr", "qrat", "squarerat", "sqrat", "svr", "squarer", "qr", " sqrc", " sqt", "ssr", "sqrc", "svt", "svrt"], "j": ["ie", "bj", "ct", "ax", "t", "jl", "js", "obj", "k", "oj", "job", "o", "z", "uj", "key", "jc", "y", "im", "v", "bs", "kid", "q", "dj", "json", "l", "bot", "gov", "aj", "jp", "jump", "let", "ij", "J", "ji", "jit", "it", "p", "b", "jj", "ja", "other", "bi", "kj", "m", "og", "g", "fr"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    private static Scanner sc = new Scanner(System.in);\\n\\n    public static void main(String[] args) {\\n\\n        int n = sc.nextInt();\\n\\n        int[] cum = new int[n+1];\\n\\n        for (int i=0; i < n; i++) {\\n            cum[i+1] = cum[i] + sc.nextInt();\\n        }\\n\\n        int min = Integer.MAX_VALUE;\\n        for (int i=0; i < n; i++) {\\n            min = Math.min(min, Math.abs((cum[n] - cum[i]) - (cum[i] - cum[0])));\\n        }\\n\\n        System.out.println(min);\\n    }\\n\\n}\\n", "target": "2", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "pb", "psc", "ctx", "cu", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "mp", "sch", "gc", "sq", "ng", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "ctl", "mc", "nl", "scl", "cr", " scr", "ch", "system", "ss", "conv", "cs", "tc", "Sc", "sb", "scan"], "n": ["nb", "f", "t", "network", "u", "ln", "nc", "all", "net", "ll", "max", "mn", "count", "nan", "na", "no", "x", "names", "ng", "o", "r", "on", "len", "c", "nn", "h", "name", "y", "v", "gn", "en", "s", "m", "q", "w", "N", "j", "l", "a", "nu", " N", "np", "nl", "cn", "norm", "p", "sn", "b", "ns", "nt", "number", "num", "in", "un", "d", "ne", "g"], "cum": ["cmp", "css", "cas", "imp", "ci", "cow", "cos", "hist", "mon", "nz", "cu", "ct", "ctx", "sim", "com", "prof", "du", "max", "comm", "sup", "count", "gc", "sum", "vec", "ctr", "copy", "cond", "parse", "tar", "fam", "pu", "rank", "c", "cur", "qq", "cube", "mu", "prop", "conf", "con", "orig", "fre", "rup", "grow", "cat", "perm", "cons", "co", "su", "mem", "np", "pop", "vol", "mc", "cn", "zip", "dict", "frac", "cm", "ca", "cf", "chu", "um", "gran", "sci", "cp", "num", "cs", "row", "cache", "cand", "roc", "tc"], "i": ["io", "us", "y", "ix", "iii", "l", "pi", "ii", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "base", "ori", "client", "cli", "init", "ui", "j", "uri", "qi", "multi", "print", "chain", "ini", "ni", "m", "iter", "si", "ic", "sim", "oi", "is", "ind", "x", "mi", "err", "gi", "ji", "it", "e", "di", "to", "in", "ims", "zi", "I", "ami", "\u0438", "u", "ai", "me", "uli", "iy", "im", "v", "info", "q", "ri", "ki", "ity", "ij", "li", "iu", "ip"], "min": ["cmp", "sort", "aug", "best", "shift", "left", "map", "max", "sol", "mn", "initial", "minus", "stat", "sum", "ma", "Minimum", "score", "mint", "amin", "mi", "Min", "just", "beta", "init", "MIN", "conf", "Mini", "small", "lower", "low", " minimum", "local", "only", "emin", "mini", "dec", "next", "mod", "rest", "start", "sin", "diff", "lt", "sample", "minimum", "search", "mins", "dir", "val", "dist", "rel", "margin", "minute", "none", "mine", "in", "set", "temp", "m", "log", "default", "test"]}}
{"code": "import java.util.Arrays;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tMain main = new Main();\\n\\n\t\ttry (Scanner scan = new Scanner(System.in)) {\\n\t\t\tmain.changingACharchter(scan);\\n\t\t}\\n\t}\\n\\n\tprivate void changingACharchter(Scanner scan) {\\n\t\tscan.nextInt();\\n\t\tint k = scan.nextInt();\\n\t\tchar[] s = scan.next().toCharArray();\\n\\n\t\ts[k - 1] = Character.toLowerCase(s[k - 1]);\\n\t\tSystem.out.println(new String(s));\\n\\n\t}\\n\\n}\\n", "target": "71", "substitutes": {"scan": ["go", "trans", "report", "connect", "sql", "sys", "syn", "get", "pass", "san", "Scan", "sv", "se", "ann", "bin", "sync", "send", "reach", "gate", "out", "gc", "stat", "sum", "find", "skip", "link", "parse", "save", "sur", "train", "check", "c", "n", "an", "read", "nn", "ser", "scroll", "info", "m", "con", "parser", "ner", "cat", "serial", "sky", "process", "gen", "sin", "store", "stan", "ch", "can", "system", "run", "pack", "seek", "row", "in", "see", "set", "query", "sc", "sb"], "k": ["kn", "t", "kan", "ak", "kh", "max", "dk", "kk", "kj", "unk", "i", "ind", "x", "kat", "ek", "sk", "ask", "c", "n", "ks", "kick", "ijk", "key", "kid", "y", "kind", "q", "ko", "j", "kw", "ik", "ku", "kl", "K", "it", "ok", "ck", "kr", "kil", "mk", "id", "num", "z", "m", "km", "g", "tk"], "s": ["es", "qs", "fs", "sql", "hs", "ashes", "ats", "t", "js", "sts", "gets", "csv", "sv", "u", "aws", "strings", "sq", "i", "ins", "ses", "save", "ms", "ps", "S", "simple", "r", "less", "c", "h", "os", "y", "v", "tes", "bs", "des", "ws", "states", "l", "a", "gs", "p", "b", "ns", "rs", "ls", "stats", "ds", "cs", "str", "ss", "details", "sb", "ts"]}}
{"code": "import java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\npublic class Main{\\n\\n\tpublic static void main(String[] args){\\n\t\t//\u5165\u529b\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint k = sc.nextInt();\\n\t\tint x = sc.nextInt();\\n\t\tsc.close();\\n\\n\t\t//\u51e6\u7406\\n\t\t\\n\t\t//\u51fa\u529b\\n\t\tPrintWriter out = new PrintWriter(System.out);\\n\t\tfor(int i = 0; i < 2 * k - 1; i++){\\n\t\t\tint t = x - k + 1 + i;\\n\t\t\tout.print(t);\\n\t\t\tif(i == 2 * k - 2) out.println();\\n\t\t\telse out.print(\" \");\\n\t\t}\\n\t\tout.flush();\\n\t}\\n}", "target": "207", "substitutes": {}}
{"code": "import java.util.Scanner;\\nimport java.util.*;\\npublic class Main {\\n\tpublic static String S;\\n\tpublic static String T;\\n\tpublic static int sub = Integer.MAX_VALUE;\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tS = scan.next();\\n\t\tT = scan.next();\\n\t\tSystem.out.println(search());\\n\t}\\n\\n\tprivate static int search() {\\n\t\tfor (int i = 0;i <= S.length() - T.length() ;i++ ) {\\n\t\t\tint count = 0;\\n\t\t\tfor (int j = 0;j < T.length() ;j++ ) {\\n\t\t\t\tString s_i = S.substring(i + j,i + j + 1);\\n\t\t\t\tString t_i = T.substring(j,j + 1);\\n\t\t\t\tif (!s_i.equals(t_i)) count++;\\n\t\t\t}\\n\t\t\tsub = Math.min(sub,count);\\n\t\t}\\n\t\treturn sub;\\n\t}\\n\\n}\\n", "target": "158", "substitutes": {"S": ["SC", "AS", "I", "SSL", "RO", "RS", "SH", "TS", "SL", "L", "SS", "SU", "SR", "Z", "OS", "M", "SER", "CS", "SA", "PS", "INS", "US", "VS", "SM", "DS", "SOURCE", "SB", "s", "IS", "STR", "SF", "SI", "GS", "Si", "SE", "H", "HS", "LS", "SP", "NS", "ST", "BS", "ITS", "SQL"], "T": ["UT", "TV", "PT", "WT", "CT", "TB", "C", "L", "TS", "t", "TY", "TT", "RT", "TER", "TL", "NT", "TA", "O", "M", "ET", "XT", "IT", "F", "P", "V", "TG", "TC", "TABLE", "TF", "VT", "TN", "LT", "FT", "TO", "TH", "G", "J", "RET", "MT", "GT", "TR", "ST", "OT", "AT", "TI", "NOT", "TM"], "sub": ["imp", "Sub", "fun", "length", "section", "seq", "tab", " unsub", "div", "sim", " subs", "SU", "pub", "shift", "match", "sup", "inv", "sq", "ub", "sum", "add", "job", "size", "sec", "sur", "cont", "len", "rob", "index", "min", "con", "replace", "rm", "summary", "su", "pop", "diff", "ch", "pre", "search", "offset", "remove", "dist", "val", "rel", "sing", "num", "ext", "un", "mult", "set", "bi", "mod", "number", "sc", "slice", "delete"], "scan": ["report", "auto", "sys", "black", " scanner", "san", "range", "watch", "Scan", "pass", "ann", "sync", "reach", "k", "out", "gate", "stat", "find", "x", "parse", "r", "check", "c", "n", "an", "nn", "read", "ser", "v", "scroll", "s", "vis", "ner", "start", "store", "nl", "sin", "gen", "ch", " Scan", "can", "system", "search", "run", "seek", "proc", "row", "in", "list", "query", "sc", "g", "se"], "i": ["zi", "iq", "ie", "hi", "ci", "ami", "si", "t", "sim", "u", "ic", "ai", "xi", "ei", "us", "at", "is", "ind", "mi", "ir", "im", "init", "y", "iat", "ix", "gi", "ui", "s", "ri", "ki", "ia", "uri", "qi", "pi", "multi", "ij", "it", "ii", "ini", "di", "ni", "ret", "id", "li", "in", "ti", "bi", "ims", "iu", "phi", "ip", "asi"], "count": ["found", "iq", "report", "iter", "cmp", "length", "flag", "counter", "Count", "nb", "match", "hold", "now", "last", "ind", "sum", "find", "add", "ctr", "cond", "size", "cd", "z", "score", "cont", "err", "check", "c", "n", "code", "index", "ount", "conf", "second", "consider", "summary", "current", "amount", "child", "other", "total", "result", "nt", "more", "number", "num", "missing", "list", "comment", "follow", "cell", "call"], "j": ["f", "bj", "si", "t", "jl", "js", "u", "obj", "k", "oj", "o", "x", "ne", "col", "z", "on", "err", "uj", "n", "ge", "h", "key", "by", "jc", "y", "im", "v", "pt", "q", "ix", "dj", "json", "l", "pr", "bot", "aj", "jp", "jack", "jump", "ji", "J", "ij", "it", "br", "b", "jj", "ja", "other", "di", "str", "kj", "m", "bi", "el", "g", "fr"], "s_i": ["sixii", "sixbi", "vsolyini", "s_s", "solyini", "s_ii", " s_j", " s_s", "solyi", "sixi", "vsolyi", "vs_ii", "solyii", "vs_bi", "vs_ini", "sixini", "solybi", "s_j", "s_bi", "vsolyii", " s_r", "s_ini", "vs_i", "s_r", "vsolybi"], "t_i": ["j_n", " t_ui", "j_j", "t_j", "taxydi", "t_r", "t_qi", "t_di", "taxyi", "t_n", " t_qi", "j_i", "t_ui", "j_r", " t_di", "taxyqi", "taxyui"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n\\n    public static void main(String[] args) {\\n\\n        new Main().solve();\\n    }\\n\\n    void solve(){\\n\\n        long N, A, B;\\n\\n        Scanner sc = new Scanner(System.in);\\n        N = sc.nextLong();\\n        A = sc.nextLong();\\n        B = sc.nextLong();\\n        sc.close();\\n\\n        long numOfblue;\\n\\n        numOfblue = N / (A + B);\\n        numOfblue = numOfblue * A;\\n\\n        if(N % (A + B) >= A){\\n            numOfblue = numOfblue + A;\\n        }\\n        else{\\n            numOfblue = numOfblue + N % (A + B);\\n        }\\n\\n        System.out.println(numOfblue);\\n    }\\n\\n       \\n}", "target": "217", "substitutes": {"N": ["CN", "I", "NM", "NN", "R", "NC", "AN", "C", "L", "SIZE", "NOTE", "NO", "Num", "NT", "Z", "O", "M", "D", "You", "S", "EN", "UN", "F", "NG", "n", "V", "NR", "P", "CNN", "Ni", "W", "NL", "NUM", "Number", "NB", "NP", "ANY", "TN", "NV", "NI", "GN", "NA", "NAME", "G", "NH", "H", "NS", "SN", "Sn", "NE"], "A": ["MA", "Alpha", "E", "AS", "I", "AF", "GA", "AL", "RA", "AN", "AE", "C", "AI", "L", "AV", "App", "TA", "O", "M", "Ar", "AP", "The", "AA", "SA", "S", "HA", "ACC", "ONE", "F", "P", "V", "IA", "AU", "AB", "AH", "U", "AC", "EA", "AGE", "AM", "JA", "a", "NA", "BA", "G", "J", "AR", "H", "PA", "An", "Av", "As", "mA", "This", "T", "AT", "LA", "API", "UA", "CA"], "B": ["FB", "I", "TB", "R", "GB", "OB", "C", "L", "RB", "Y", "BL", "JB", "M", "BU", "S", "BO", "BI", "EB", "BB", "BG", "P", "V", "DB", "BT", "BE", "SB", "BF", "IB", "NB", "AB", "HB", "GO", "Builder", "BA", "G", "J", "H", "Bill", "WB", "b", "BR", "BY", "Bar", "BC", "BS", "T", "MB", "LB", "VB", "Bs"], "sc": ["SC", "osc", "pc", "sys", "pb", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "exp", "sh", "sch", "gc", "sq", "sub", "uc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "ko", "lc", " Sc", "hl", "ctl", "ctrl", "desc", "arc", "mc", "scl", "ch", "p", "ck", "ss", "cs", "ec", "tc", "Sc", "g", "scan"], "numOfblue": ["num_Blue", "numofyellow", "numOFgray", "numofresource", "numToblue", "numOrmoney", "numTheblue", "nomOfBlue", " numLgray", "numOfsuccess", "numOFblue", "numOFpixel", "numTheBlue", " numLsuccess", "nomOFgreen", "numOfgreen", "num_money", "num_pixel", "numAvractive", "numKnownslice", "numForBlue", "numOFresource", "numForlight", "numOFred", "numSetblue", "umOfgoo", " numLcolor", "numoflight", "monOFpixel", "numTomoney", "numOfyellow", "numAndpixel", "numLsuccess", "monOFBlue", "sumofblue", "umKnownblue", "numberAndpixel", "numOfmoney", "nomOFractive", "monOfpixel", "numSetgoo", "numThepixel", "numFBlue", "numForblue", "numFyellow", "numProcolor", "numberAndblue", "numProgray", "nomOfgoo", "numOrgreen", "numOfresource", " numOfgoo", "monOfBlue", "numOrBlue", "numofpixel", "umOfslice", "sumOfBlue", "sumOfblue", "numofmoney", "numProsuccess", "NumOrmoney", "nomOfractive", " numOfgray", "umKnownslice", " numofblue", "umOfmoney", "numOfgoo", "NumOrgoo", "numberOfblue", "numKnownblue", " numofBlue", "numFgray", "numofslice", "numFblue", "numSetslice", "numOFmoney", "num_blue", " numOfBlue", " numOflight", " numofgoo", "sumOfgray", "numKnowngoo", "numofgoo", "numOrgoo", "numOFBlue", "nomOfblue", "numOfgray", "nomOFgoo", "numOFgreen", "NumOfresource", "numberAndred", "numThemoney", "numberOfred", "numOFyellow", "numSetmoney", "nomOfgreen", "sumOfyellow", "numOfBlue", "NumOfgoo", "numOfpixel", "NumOrblue", "nomOFmoney", "numAvblue", "numToractive", "sumofBlue", "umKnownmoney", "numOFractive", "umOfblue", "nomOfmoney", "numLblue", "numOFcolor", "nomOfcolor", "numAndred", "numberOfpixel", "numTocolor", "numProblue", "numberAndBlue", "sumofyellow", "numAvcolor", "numAndBlue", "monOFmoney", "numofblue", "NumOrresource", "monOfmoney", " numOfcolor", "numofred", "numOfslice", "NumOfblue", "monOFblue", "numOflight", "numberOfBlue", " numoflight", "numAvmoney", "numOFsuccess", "umKnowngoo", "numForgoo", "numKnownmoney", "numOfcolor", "numAndblue", " numLblue", "numOfred", "numLgray", "monOfblue", "numOrblue", " numOfsuccess", "numofgray", "nomOFcolor", "numOFgoo", "NumOfmoney", "numofgreen", "numofBlue", "nomOFBlue", "nomOFblue", "sumofgray", "numOfractive", "numLcolor", "numOrresource"]}}
{"code": "import java.util.Scanner;\\nimport java.util.regex.Matcher;\\nimport java.util.regex.Pattern;\\n\\npublic class Main {\\n// Main\u306b\u66f8\u304d\u63db\u3048\uff01\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        // \u6574\u6570\u306e\u5165\u529b\\n        int len = Integer.parseInt(sc.next());\\n        String str = sc.next();\\n\\n        Pattern dupPattern = Pattern.compile(\"([ \\\\w]+)\\\\1\", Pattern.CASE_INSENSITIVE);\\n        Matcher matcher = dupPattern.matcher(str);\\n\\n        while (matcher.find()) {\\n            str = str.replaceAll(\"([ \\\\w]+)\\\\1\", \"$1\");\\n        }\\n        //System.out.println(str);\\n\\n        if ((len != str.length())&&(len % str.length()) == 0) {\\n            System.out.println(\"Yes\");\\n\\n        }else{\\n            System.out.println(\"No\");\\n\\n        }\\n\\n    }\\n}", "target": "161", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tint n = sc.nextInt();\\n\t\tint[] p = new int[n];\\n\t\tfor(int i=0; i<n; i++) {\\n\t\t\tp[i] = sc.nextInt();\\n\t\t}\\n\t\t\\n\t\tint count = 0;\\n\t\tfor(int i=0;i<n-2;i++) {\\n\t\t\tif(judge(p,i)) count++;\\n\t\t}\\n\t\tSystem.out.println(count);\\n\t\t\\n\t\tsc.close();\t\\n\t}\\n\t\\n\tprivate static boolean judge(int[] p,int first) {\\n\t\tint i1 = p[first];\\n\t\tint i2 = p[first + 1];\\n\t\tint i3 = p[first + 2];\\n\t\t\\n\t\tif(i1 < i2 && i2 < i3 || i1 > i2 && i2 > i3) {\\n\t\t\treturn true;\\n\t\t}else {\\n\t\t\treturn false;\\n\t\t}\\n\t}\\n}", "target": "96", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "syn", "psc", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "sub", "scrib", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "lc", " Sc", "arc", "ctl", "desc", "mc", "RC", "nl", "scl", "cr", "capt", "ch", "system", "ck", "ss", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["length", "nm", "nb", "t", "network", "ln", "nc", "net", "mn", "k", "nan", "na", "o", "x", "no", "ng", "names", "r", "len", "g", "c", "nn", "name", "v", "en", "N", "j", "l", "nu", " N", "nl", "np", "cn", "sn", "ns", "nt", "number", "num", "un", "z", "d", "m", "ne"], "p": ["bp", "pc", "xp", "pp", "pb", "f", "t", "pe", "wp", "exp", "mp", "dp", "params", "op", "pa", "vp", "ps", "o", "tp", "pins", "ping", "pm", "sp", "pkg", "progress", "P", "c", "pn", "ap", "pt", "v", "y", "app", "info", "q", "pl", "w", "pers", "j", "perm", "l", "pr", "a", "jp", "np", "pi", "fp", "pre", "b", "cp", "lp", "m", "post", "g", "ip"], "i": ["io", "us", "port", "o", "iu", "index", "y", "ix", "l", "pi", "ii", "id", "fi", "ti", "bi", "phi", "ie", "hi", "ci", "xi", "ei", "ori", "client", "cli", "init", "ui", "j", "uri", "qi", "multi", "my", "ex", "ini", "iter", "span", "si", "ic", "sim", "oi", "is", "ind", "x", "mi", "err", "gi", "it", "e", "di", "in", "ims", "zi", "I", "ami", "\u0438", "u", "ai", "me", "entry", "iy", "im", "v", "info", "q", "ri", "batch", "a", "ity", "ij", "li", "point", "ip"], "count": ["found", "report", "length", "flag", "counter", "Count", "nb", "ct", "frequency", "t", "hold", "max", "ind", "stat", "sum", "find", "ctr", "cond", "size", "z", "cont", "check", "c", "index", "ount", "value", "second", "info", "comment", "next", "current", "amount", "continue", "b", "total", "result", "nt", "number", "num", "list", "cache", "d", "draw", "call"], "first": ["success", "path", "f", "before", "at", "th", "latest", "front", "max", "irst", "last", "initial", "now", "primary", "stat", "sum", "client", "must", "cont", "use", "full", "entry", "index", "mat", "head", "ast", "second", "First", "only", "prefix", "local", "this", "third", "summary", "next", "rest", "current", "start", "rand", "force", "st", "id", "top", "num", "row", "then", "fr", "act", "pres", "frame"], "i1": [" i7", " i11", "pi1", "li2", "pi11", "li61", "ii2", "pione", "int1", " ione", "intone", "int61", "i61", "pi2", "iix", "ii1", "ix", "int7", " i61", "li7", "pi61", "i7", "li1", "ii11", "pix", "ione", " ix", "lione", "i11"], "i2": ["inttwo", "hi2", "di2", "pi1", "iUrl", "ittwo", "i102", "xi2", "jtwo", "icTwo", "ui1", "pi3", "ITwo", "itTwo", "ic3", "I2", "piTwo", "si2", "si102", "di02", "iTwo", "pi02", "pi2", "itwo", "Itwo", "i02", "hi1", "ditwo", "ui3", "ic2", "intUrl", "ui102", "it2", "hitwo", "intTwo", "IUrl", "j2", "xi1", "int2", "xitwo", "xi3", "ui2", "di1", "itUrl", "si3", "j1", "pi102", "hi02", " iTwo", "j3", "pitwo", "si1"], "i3": [" i33", " i11", "pi1", "pi003", "mi13", " ithree", "mithree", "ui33", " i13", "mi11", " i4", "ui1", "mi003", "pi3", "lithree", "i003", " i123", "li3", "i33", "ui123", "li4", "ui3", "pi13", "li11", "i123", "mi1", "i13", "mi3", "ithree", "i4", "mi4", "pi123", " i003", "i11", "pi33"]}}
{"code": "import java.util.Scanner;\\nclass Main {\\n  public static void main(String args[]){\\n    Scanner sc = new Scanner(System.in);\\n    long money , goen ,gohyaku;\\n    money = sc.nextInt();\\n    goen = (money % 500) / 5 * 5;\\n    gohyaku = (money / 500) *1000;\\n    System.out.println(goen + gohyaku);\\n  }\\n}\\n", "target": "180", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "se", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "gc", "sq", "sub", "uc", "anc", "sec", "sb", "sp", "c", "cc", "esc", "isc", "cl", "pl", "lc", "desc", "mc", "acc", "scl", "sel", "ch", "system", "txt", "ss", "sa", "cs", "tc", "Sc", "g", "scan"], "money": ["time", "zero", "mon", "volume", "magic", "translation", "div", "very", "coin", "t", "integer", "dollar", "human", "count", "sum", "data", "cash", "no", "euro", "size", "why", "Money", "ONEY", "bill", "machine", "payment", "fine", "soc", "currency", "fee", "value", "tax", "low", "transfer", "trade", "power", "how", "mini", "pay", "amount", "price", "million", "micro", "total", "balance", "angle", "number", "margin", "oshi", "minute", "m", "phi", "message"], "goen": ["gaeng", "gosten", "gaan", " goeng", "goener", "moen", " goern", "omeene", "goene", " goan", "gasten", "goan", "omeen", "moern", " gosten", "goens", "omeens", "moeng", " goade", "moene", "gaade", "mosten", "goeng", "gaen", " goene", "goern", "moens", "goade", "moener", " goener", " goens", "moan", "moade", "gaern", "omeener"], "gohyaku": ["gohyingu", "gohayasi", "gohysatsu", "gohiyatsu", "gohyasaki", "gohyamoto", "gohvyaka", "gehyimi", "gohyatsuki", "gohysamoto", "gahiyatsu", "gehyasaki", "gehoyasaki", "gohvyaku", "gehykok", "gohoyasi", "gohoyaka", "gohayaka", "goheyamoto", "gehayaku", "gehayaka", "gohykok", "gehyaku", "gohyskok", "gohyatsu", "gehayasi", "gohvyasi", "gohchasaki", "gehoyatsuki", "gahyatsu", "gohyasi", "gohyaka", "gohiyaku", "gohoykok", "gohysingu", "goheyingu", "gohvyimi", "gahyingu", "gohchatsuki", "gohoyasaki", "gahyamoto", "gohysaku", "goheyatsu", "gehoykok", "goheyaku", "gohysasaki", "gahyaku", "gahiyaku", "gohiyamoto", "gohoyaku", "gohysatsuki", "gehyasi", "gohayaku", "gohayimi", "gohoyimi", "gehayimi", "gohchkok", "gohchaku", "gohyimi", "gehyatsuki", "gehoyaku", "gahiyingu", "gehyaka", "gohiyingu", "gahiyamoto", "gohoyatsuki"]}}
{"code": "/**\\n * A\\n */\\nimport java.io.*;\\nimport java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream in = System.in;\\n        Scanner scanner = new Scanner(in);\\n    \\n        int next = scanner.nextInt();\\n        int left = 1000 - (next % 1000);\\n        System.out.println(left == 1000 ? 0 : left);\\n        scanner.close();\\n    }\\n\\n}", "target": "184", "substitutes": {"in": ["f", "din", "io", "serv", "IN", "t", "inn", "inner", "from", "bin", "all", "is", "out", "ind", "i", "ins", " out", "std", "r", "on", "rin", "err", "mi", "c", "source", "read", "isin", "v", "en", "info", "con", "nin", "this", "gin", "l", "cin", "In", "pi", "readable", "world", "input", "ac", "run", "stream", "st", "win", "ini", "file", "proc", "user", "inf", "reader", "m"], "scanner": ["Scanner", "Scaner", "scaner", " scanator", "scanener", " scanter", "canter", "scanator", "canator", "Scanener", " scanener", " scaner", "Scanter", "caner", "canener", "Scanator", "scanter", "canner"], "next": ["want", "below", "sequence", "success", "done", "first", "seq", "network", "front", "last", "primary", "now", "data", "button", "ne", "response", "sec", "n", "second", "info", "output", "this", "j", "prev", "future", "Next", "current", "frame", "start", "after", "continue", "big", "total", "result", "default", "sen"], "left": ["below", "length", "path", "level", "L", "off", "before", "inner", "exp", "lf", "right", "last", "half", "out", "padding", "ind", "data", "pieces", "size", "cont", "len", "partial", "n", "lo", "value", "low", "Left", "small", "expected", "limit", "this", "l", "future", "current", "after", "lt", "diff", "text", "piece", "le", "offset", "empty", "wrong", "width", "top", "knife", "end", "none", "missing", "list", "bottom", "lost", "ell"]}}
{"code": "import java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tPrintWriter out = new PrintWriter(System.out); \\n\t\t\\n\t\tint N = Integer.parseInt(sc.next());\\n\t\tint input;\\n\t\tint first = 0, second = 0;\\n\t\tint first_i = 0;\\n\t\t\\n\t\tfor(int i = 0; i < N; i++) {\\n\t\t\tinput = Integer.parseInt(sc.next());\\n\t\t\tif (first < input) {\\n\t\t\t\tsecond = first;\\n\t\t\t\tfirst = input;\\n\t\t\t\tfirst_i = i;\\n\t\t\t\t\\n\t\t\t} else if (second < input) {\\n\t\t\t\tsecond = input;\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tfor (int i = 0; i < N; i++ ) {\\n\t\t\tif (i == first_i) {\\n\t\t\t\tout.println(second);\\n\t\t\t} else {\\n\t\t\t\tout.println(first);\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tout.flush();\\n\t\tsc.close();\\n\t}\\n\\n}\\n", "target": "142", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "exp", "mp", "sch", "gc", "sq", "uc", "parse", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "irc", "arc", "desc", "ctl", "ctrl", "cons", "mc", "nl", "scl", "cr", "sel", "ch", "tch", "ck", "so", "sci", "conv", "cle", "cs", "tc", "Sc", "scan"], "out": ["or", "writer", "error", "exit", "sys", "OUT", "io", "at", "t", "flush", "obj", "net", "write", "sum", "outs", "o", "client", "conn", "r", "err", "n", "by", "os", "OU", "v", "en", "info", "con", "aos", "output", "w", "Out", "we", "put", "outer", "screen", "co", "res", "it", "ot", "print", "ch", "p", "gt", "st", "cmd", "file", "ex", "nt", "to", "news", "conv", "end", "ou", "in", "log", "list", "set", "g"], "N": ["None", "I", "NN", "NM", "R", "NC", "C", "OUT", "L", "ND", "Y", "Q", "NO", "Z", "Num", "NT", "M", "D", "S", "P", "V", "n", "NR", "Ni", "NL", "Number", "NB", "NP", "TN", "NI", "GN", "NA", "K", "J", "Size", "NH", "H", "NS", "X", "SN", "FN", "T", "Ns", "No"], "input": ["format", " Input", "error", "PUT", "hello", "xml", "internal", "view", "before", "inner", "raw", "from", "integer", "height", "initial", "data", "Input", "buffer", "tmp", "lat", "request", "context", "source", "image", "read", "index", "unsigned", "value", "mac", "init", "q", "peer", "output", "local", "present", "next", "pattern", "start", "current", "qi", "inc", "step", "text", "it", "qa", "p", "form", "print", "result", "um", "field", "id", "in", "temp", "query", "point", "visible", "ip"], "first": ["format", "sort", "art", "zero", "back", "before", "middle", "latest", "left", "part", "front", "max", "right", "base", "last", "initial", "primary", "sum", "data", "single", "full", "key", "index", "name", "head", "min", "First", "small", "only", "lower", "prefix", "one", "master", "this", "true", "local", "space", "third", "header", "prev", "next", "start", "current", "it", "st", "other", "total", "pre", "null", "top", "minute", "begin"], "second": ["fourth", "sort", "section", "zone", "position", "middle", "latest", "billion", "secret", "send", "front", "part", "console", "bis", "last", "fifth", "global", "tmp", "SEC", "sec", "unit", "foreign", "seconds", "video", "lo", "beta", "two", "south", "server", "only", "small", "lower", "third", "next", "Second", "service", "series", "secondary", "another", "session", "st", "empty", "end", "then", "other", "common", "test", "se", "fr"], "first_i": ["first____di", " first_ic", "second_j", "latest_it", "latest____it", "second_pi", "latest____in", "second_n", "first_n", "first____i", "second_i", "first_pi", "first____in", "first_j", "latest____i", "first___ic", "first____it", "first___ip", "first_ic", "first___pi", "first___i", " first_pi", "latest_di", "first_di", " first_ip", "first_it", "latest_i", "first_in", "latest____di", "first_ip", "latest_in"], "i": ["zi", "iq", "ie", "I", "ci", "span", "f", "si", "io", "t", "sim", "ic", "ai", "xi", "ei", "me", "us", "ice", "is", "ind", "point", "o", "x", "z", "mi", "err", "c", "cli", "n", "index", "im", "gi", "y", "init", "ix", "q", "ui", "v", "info", "s", "ki", "j", "l", "ity", "qi", "pi", "multi", "ji", "it", "ii", "p", "PI", "ex", "ini", "di", "ni", "cgi", "id", "li", "in", "ti", "bi", "ims", "list", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Collections;\\nimport java.util.List;\\nimport java.util.Scanner;\\n \\n\\n//result = Math.pow(num1, num3)\\n//StringBuffer str = new StringBuffer(hoge1);\\n//String hoge2 = str.reverse().toString();\\n//map.containsKey(A)\\n//Map<String, Integer> map = new HashMap<String, Integer>(n);\\n//ArrayList<String> cc = new ArrayList<>(n);\\n//Collections.sort(list);\\n//Array.sort(list);\\n//Arrays.asList(c).contains(\"a\")\\n\\npublic class Main {\\n\tprivate static Scanner sc = new Scanner(System.in);\\n\tstatic void p(String ans) {System.out.println(ans);};\\n\tstatic void p(int ans) {System.out.println(ans);};\\n\tstatic void p(long ans) {System.out.println(ans);};\\n\tstatic void p(double ans) {System.out.println(ans);};\\n\t//static String eikomoji[]={\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"};\\n\t\\n\t\\n\tpublic static void main(String[] args) {\\n\tint N=sc.nextInt();\\n\tint M=sc.nextInt();\\n\tint v=N*M;\\n\tString sum;\\n\tint wa=0;\\n\tint ac=0;\\n\tint s[]=new int[N+1];\\n\tfor(int i=0;i<M;i++) {\\n\t\tint g=sc.nextInt();\\n\t\tsum=sc.next();\\n\t\tif(s[g]==-1000) {\\n\t\tcontinue;\t\\n\t\t}\\n\t\tif(sum.equals(\"AC\")) {\\n\t\t\twa+=s[g];\\n\t\t\t//p(\"sg\"+s[g]);\\n\t\t//\tp(\"wa\"+wa);\\n\t\t\ts[g]=-1000;\\n\t\t\tac++;\\n\t\t}else {\\n\t\t\ts[g]++;\\n\t\t}\\n\t}\\n\tp(ac+\" \"+wa);\\n }\\n}\\n", "target": "48", "substitutes": {}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        String num = sc.next();\\n        if (num.contains(\"7\")) System.out.println(\"Yes\");\\n        else System.out.println(\"No\");\\n    }\\n}\\n", "target": "99", "substitutes": {"sc": ["SC", "sm", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sac", "sync", "sch", "sq", "gc", "sub", "anc", "sec", "sp", "c", "cc", "ser", "esc", "isc", "cl", "lc", "desc", "screen", "mc", "scl", "cr", "ch", "system", "cle", "cs", "tc", "Sc", "sb", "scan"], "num": ["nm", "zero", "mon", "nb", "hex", "won", "tim", "sim", "net", "Num", "sum", "na", "alph", "dev", "msg", "nam", "n", "eng", "NUM", "cal", "sym", "non", "serial", "sam", "nu", "su", "np", "sel", "uu", "hum", "um", "conv", "number", "gnu", "nom", "bid", "m", "test"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner in = new Scanner(System.in);\\n\t\tString s = in.next();\\n\t\tString t = in.next();\\n\t\tString t2 = t.substring(0, t.length()-1);\\n\t\tif (s.length()== t.length()-1 && s.equals(t2)) {\\n\t\t\tSystem.out.println(\"Yes\");}\\n\t\telse {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t}\\n}", "target": "137", "substitutes": {"in": ["iter", "inside", "din", "io", "IN", "inn", "inner", "from", "mm", "bin", "all", "raw", "sol", "is", "out", "ind", "i", "ins", "std", "r", "rin", "err", "mi", "n", "thin", "isin", "conf", "en", "info", "con", "gin", " din", "l", "doc", "cin", "In", "sin", "inc", "it", "world", "input", "run", "spin", "file", "ini", "null", "user", "inf", "reader", "log", "ln", "ma", "line", "scan"], "s": ["its", "sw", "qs", "hs", "sl", "js", "sts", "sv", "ains", "sol", "is", "sq", "i", "ins", "S", "ps", "ms", "ys", "sp", "g", "n", "h", "os", "bs", "j", "l", "string", "gs", "p", "st", "ns", "rs", "b", "ls", "ds", "xs", "cs", "str", "ims", "ss", "sb", "ts"], "t": ["mt", "ent", "te", "tg", "f", "ct", "at", "wt", "out", "test", "type", "tp", "c", "tr", "pt", "ty", "tu", "term", "j", "l", "ta", "title", "tt", "it", "ot", "p", "tm", "gt", "st", "tif", "rt", "total", "nt", "template", "dt", "txt", "T", "temp", "str", "tc", "tree", "g", "ts"], "t2": ["s2", "ta1", "s0", "s1", " t102", "t102", "stwo", "s02", "tatwo", "ttwo", "ta2", "ta102", "T1", "ta0", "t02", "T2", "s102", "t1", "t0", " t1", " t02", "ta02", "T0", "Ttwo"]}}
{"code": "import java.util.*;\\npublic class Main {\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n\\n    String s = sc.next();\\n    String t = sc.next();\\n    \\n    String l = \"\";\\n    String r = \"\";\\n    \\n    int n = s.length();\\n    \\n    String ans =\"\";\\n    \\n    if(s.equals(t)){\\n      ans = \"Yes\";\\n    }else{\\n    for(int i = n-1 ; i > 0 ; --i){\\n      r = s.substring(i);\\n      l = s.substring(0,i);\\n      if((r+l).equals(t)){\\n        ans = \"Yes\";\\n        break;\\n      }else{\\n        ans = \"No\";\\n      }\\n    }\\n    }\\n    \\n    System.out.println(ans);\\n    \\n  }\\n}\\n\\n", "target": "220", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "gc", "sq", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "ko", "lc", "irc", "ctl", "dec", "desc", "cons", "mc", "inc", "scl", "cr", "capt", "ch", "sel", "ss", "sci", "conv", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "s": ["its", "sw", "qs", "sql", "sys", "sl", "ats", "js", "se", "sv", "sts", "eps", "strings", "sol", "is", "sq", "S", "ps", "ms", "sp", "g", "c", "h", "os", "ess", "tes", "v", "bs", "state", "ws", "j", "string", "res", "gs", "e", "p", "st", "b", "rs", "ls", "stats", "parts", "sa", "cs", "in", "str", "m", "ss", "sb", "ts"], "t": ["or", "mt", "te", "ct", "at", "th", "tk", "wt", "type", "typ", "g", "tr", " T", "pt", "kt", "tw", "ty", "term", "true", "ta", "title", "text", "tt", "it", "ot", "e", "p", "tm", "st", "txt", "rt", "tif", "template", "to", "T", "et", "test", "ts"], "l": ["ql", "L", "sl", "lu", "lv", "jl", "ll", "o", "ml", "lin", "lo", "v", "lr", "lit", "lc", "dl", "hl", "kl", "lp", "nl", "lt", "it", "ly", "il", "p", "ol", "b", "le", "ls", "la", "li", "fl", "ld", "rl", "list", "ln", "el", "ell"], "r": ["or", "usr", "ar", "R", "rect", "ru", "ra", "ren", "rc", "re", "ro", "er", "dr", "fr", "gr", "ur", "rr", "tr", "lr", "rh", "ri", "rm", "mr", "rx", "rb", "res", "cr", "p", "rs", "rt", "nr", "rel", "hr", "rd", "rl", "vr", "g", "sr", "rn"], "n": ["nm", "nb", "network", "ln", "nc", "net", "nan", "na", "names", "ng", "len", "c", "nn", "nor", "gn", "en", "N", "j", "nu", "np", "nl", "cn", "norm", "sn", "ns", "nt", "ni", "nw", "un", "d", "m", "ne"], "ans": ["ANS", "orts", "anks", "offs", "lines", "ats", "ads", "ums", "eps", "eds", "aps", "ann", "ols", "ants", "ins", " means", "uns", "prints", "ms", "ps", "outs", "ys", "aus", "helps", "acs", "ks", "an", "ags", "vs", "angs", "os", "flags", "amps", "terms", "aos", "ends", "aces", "lets", "posts", "olds", "yes", "asms", "ons", "ens", "ots", "ars", "ams", "ros", "res", "gs", "forms", "ids", "ops", "ns", "rs", "umes", "aints", "ls", "as", "ds", "utters", "vals", "ents", "leans", "cs", "mas", "caps", "arms", "arts", "ays", "ts"], "i": ["zi", "iq", "I", "hi", "ci", "\u0438", "si", "io", "ic", "sim", "iri", "ai", "ei", "xi", "me", "oi", "ski", "is", "ori", "o", "mi", "cli", "uli", "index", "y", "gi", "v", "ix", "ui", "ri", "ki", "j", "batch", "qi", "pi", "multi", "ji", "it", "ii", "ini", "di", "ni", "li", "in", "ti", "bi", "z", "iu", "phi", "ip", "asi"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[]args){\\n  Scanner sc=new Scanner(System.in);\\n  int d=sc.nextInt();\\n  int as=sc.nextInt();\\n  int ar[]=new int[10000];\\n  int s=0;\\n  \\n  for(int i=0;i<as;i++){\\n  ar[i]=sc.nextInt();\\n  \\n  }\\n  for(int i=0;i<ar.length;i++){\\n  s=s+ar[i];\\n  }\\n  int f=d-s;\\n  if(f>=0){\\n\\n  System.out.println(f);\\n  }\\n  else{System.out.println(\"-1\");}\\n  }\\n}", "target": "108", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "psc", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "lc", "irc", "ctl", "desc", "mc", "nl", "inc", "scl", "cr", "capt", "ch", "ck", "cgi", "sci", "conv", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "d": ["dd", "de", "t", "dra", "sd", "dk", "D", "da", "data", "x", "fd", "pd", "cd", "r", "dom", "c", "n", "dm", "h", "w", "j", "dh", "a", "e", "p", "b", "dat", "di", "dt", "ds", "dir", "id", "z", "m", "g"], "as": ["ras", "AS", "ats", "ra", "area", "asar", " AS", "is", "pa", "ms", "ias", "aus", "are", "acs", "an", "os", "bs", "las", "aos", "pas", "a", "asin", "asa", "ars", "sis", "ase", "ais", "As", "nas", "ds", "sa", "mas", "eas", "ma", "jas", "asi"], "ar": ["art", "inter", "air", "al", "ear", "ary", "ai", "er", "iar", "war", "Ar", "par", "car", "ari", "tar", "r", "arry", "are", "arm", "var", "kar", "ir", "arr", "ser", "lar", "mar", "aer", "nar", "arc", "arp", "ars", "ag", "rar", "AR", "aro", "dar", "har", "array", "sa", "ard", "ara", "star", "sr"], "s": ["fs", "si", "t", "ats", "js", "se", "sv", "u", "sf", "sd", "is", "sq", "x", "o", "S", "ms", "ps", "ys", "r", "sb", "sp", "g", "c", "n", "h", "south", "v", "q", "w", "set", "j", "l", "a", "su", "gs", "e", "p", "b", "ns", "rs", "st", "ls", "ds", "cs", "z", "m", "ss", "xs", "ts"], "i": ["zi", "ie", "hi", "ci", "I", "\u0438", "si", "io", "sim", "oi", "us", "ei", "xi", "ai", "me", "ski", "ind", "point", "ori", "o", "client", "x", "mi", "err", "cli", "key", "iy", "gi", "im", "init", "v", "y", "ix", "ui", "info", "json", "ri", "ki", "j", "uri", "batch", "a", "ity", "qi", "pi", "multi", "ji", "ij", "it", "ii", "PI", "chain", "gu", "ini", "di", "id", "li", "fire", "fi", "in", "ti", "bi", "ims", "m", "iu", "phi", "ip"], "f": ["fx", "fs", "func", "t", "fort", "sf", "floor", "xf", "fac", "lf", "fa", "fal", "bf", "x", "fd", "fc", " F", "F", "df", "c", "n", "h", "fu", "fe", "v", "w", "alf", "l", "rf", "p", "fp", "b", "cf", "fi", "fm", "ff", "fr", "m", "tf", "g"]}}
{"code": "import java.util.Scanner;\\n \\npublic class Main {\\n \\n\tpublic static final MyScanner in = new MyScanner();\\n\tpublic static int[][][][] memo;\\n \\n\tpublic static void main(String[] args) {\\n \\n\t\tlong N = in.nextLong();\\n\t\tlong K = in.nextLong();\\n\t\tint cnt = 1;\\n\t\tN += 1;\\n\t\twhile(N > Math.pow(K, cnt)) cnt++;\\n \\n\t\tSystem.out.println(cnt);\\n \\n\t}\\n \\n \\n\tpublic static class MyScanner{\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString nextLine() {return sc.nextLine();}\\n\t\tString next() {return sc.next();}\\n\t\tint nextInt() {return Integer.valueOf(sc.next());}\\n\t\tlong nextLong() { return Long.valueOf(sc.next());}\\n\t}\\n}", "target": "219", "substitutes": {"in": ["din", "io", "ic", "IN", "inn", "inner", "ai", "mm", "bin", "raw", "is", "out", "i", "ins", "conn", "std", "r", "rin", "err", "n", "thin", "nn", "isin", "conf", "en", "info", "con", "q", "local", " din", "gin", "l", "doc", "cin", "mc", "In", "sin", "inc", "input", "stream", "file", "ini", "null", "user", "inf", "ssl", "reader", "str", "log", "line", "scan"], "memo": ["memro", "annao", "memao", "annO", "memoryO", "histO", "anno", "histo", "memoryo", "histro", "memoryao", "histao", "memO", "annro", "memoryro"], "N": ["CN", "I", "NN", "NM", "NC", "Count", "C", "AN", "L", "Y", "NO", "Num", "NT", "M", "S", "Node", "P", "V", "n", "NR", "CNN", "W", "NB", "NP", "NV", "TN", "NI", "GN", "NA", "G", "J", "NH", "NS", "X", "SN", "T", "Ns", "Sn", "No"], "K": ["I", "R", "C", "L", "PK", "KE", "VK", "KY", "Q", "Z", "A", "O", "M", "k", "UK", "S", "B", "F", "P", "V", "NK", "W", "KK", "MK", "NB", "SK", "KR", "G", "J", "H", "KI", "KB", "KA", "T", "KS", "KN"], "cnt": ["cNT", "countNT", "cnc", "Count", "ccnt", " cct", "Cnt", "Cnd", "countct", "ncnd", "cant", "count", " cnd", "CNT", " cNT", "Cct", "ctnc", "ctct", " cnc", "countant", " count", " cant", "cct", "ctNT", "ccount", "countnt", "ncnt", "Cant", "ccnc", "ncnc", "ctnt", "ccNT", "cnd", "ncNT", "Cnc"], "sc": ["SC", "sw", "osc", "pc", "sys", "pb", "cu", "ctx", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "exp", "mp", "sh", "sch", "sq", "gc", "disc", "uc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "mic", "lc", "irc", "ctl", "mc", "enc", "scl", "capt", "cr", "ch", "tch", "ss", "dc", "ssl", "cs", "ec", "tc", "Sc", "sb", "scan"]}}
{"code": "import java.util.Scanner;\\nimport java.util.Arrays;\\nimport java.util.List;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t    Scanner sc = new Scanner(System.in);\\n\t\tString[] array = sc.nextLine().split(\" \");\\n\t\tint target = Integer.parseInt(array[0]);\\n\t\tint speed = Integer.parseInt(array[1]);\\n\t\tint time = Integer.parseInt(array[2]);\\n\t\tint calc = target / speed;\\n\t\tint amari = target % speed;\\n\t\tString result = \"\";\\n\t\tif (amari > 0) {\\n\t\t\tresult = calc < time ? \"Yes\" : \"No\";\\n\t\t} else {\\n\t\t\tresult = calc <= time ? \"Yes\" : \"No\";\\n\t\t}\\n\t    System.out.println(result);\\n\t}\\n}\\n", "target": "246", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sac", "sch", "gc", "sq", "anc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", " Sc", "desc", "dec", "screen", "mc", "scl", "cr", "capt", "ch", "system", "ok", "sel", "ss", "cs", "ec", "tc", "Sc", "scan"], "array": ["archive", "sequence", "record", "pair", "word", "ar", "attribute", "section", "ray", "air", "instance", "range", "angular", "collection", "csv", "area", "raw", "share", "map", "Array", "ash", "save", "response", "say", "stage", "order", "arr", "object", "function", "app", "one", "arrow", "batch", "hash", "table", "string", "answer", "vector", "audio", "element", "angle", "number", "row", "list", "query", "address", "message"], "target": ["root", "length", "path", "home", "sys", "date", "t", "range", "window", "version", "project", "scale", "match", "port", "base", "global", "buffer", "type", "bolt", "duration", "weight", "source", "class", "value", "goal", "local", "term", "ARGET", "table", "memory", "cpu", "arget", "current", "process", "cmd", "total", "template", "id", "to", "top", "width", "rel", "trace", "Target"], "speed": ["trans", "sw", "length", "sex", "priority", "ime", "window", "secure", "shape", "rate", "skill", "scale", "direction", "transform", "send", "human", "fast", "port", "spe", "Speed", "size", "score", "EED", "sp", "duration", "weight", "swing", "spec", "efficiency", "power", "sleep", "service", "performance", "delay", "shock", "system", "stream", "command", "seek", "util", "width", "dist", "slow", "frequency", "peed", "test"], "time": ["sequence", "path", "date", "cost", "frequency", "ime", "tim", "t", "tag", "rate", "version", "transform", "count", "estamp", "now", "test", "runtime", "type", "size", "times", "timeout", "TIME", "duration", "weight", "context", "money", "etime", "name", "timer", "value", "info", " Time", "string", "start", "price", "delay", "tm", "file", "clock", "template", "id", "event", "comment", "Time", "task", "message", "ts"], "calc": ["calce", "alc", "concul", "calcul", "Calc", "Calct", "conc", " calce", " calcu", "concu", "alct", "Calcul", "calcs", "culc", "calp", "alcul", "alcs", " calcul", " calcs", "culcul", "Calcu", "culce", "calct", "calcu", " calct", "culp", "culcu", "Calp", "Calcs", "conp", "Calce"], "amari": ["ramaire", "ramari", "AMarian", " Amai", " Amari", "amai", "AMius", "amaire", " Amarian", "Amarian", " amarian", "armari", "AMari", "armius", "armarian", "ramarian", "amARI", "AMARI", "AmARI", " Amaire", "amius", "armARI", " amaire", "Amius", "amarian", "ramai", " amai", "Amari"], "result": ["root", "error", "report", "draw", "sequence", "success", "word", "join", "status", "date", "RESULTS", "product", "complete", "match", "transform", "out", "message", "response", "request", "relation", "password", "goal", "prefix", "results", "output", "valid", "json", "term", "true", "description", "summary", "res", "answer", "diff", "print", "feature", "continue", "command", "search", "ret", "reason", "url", "field", "Result", "comment", "work", "details", "test"]}}
{"code": "import java.io.IOException;\\nimport java.util.Scanner;\\nclass Main{\\n\tpublic static void main(String[] args)throws NumberFormatException, IOException{\\n\t\t//System.out.print(\" \");\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint n =scan.nextInt();\\n\t\tint m =scan.nextInt();\\n\t\tint l =scan.nextInt();\\n\t\tint A[][] = new int[100][100];\t//[???][?\u00a8?]\\n\t\tint B[][] = new int[100][100];\\n\t\tlong keisan = 0;\\n\\n\t\tfor(int i =0; i<n; i++){\t//??????A?????????\\n\t\t\tfor(int ii=0;ii<m;ii++){\\n\t\t\t\tA[i][ii] = scan.nextInt();\\n\t\t\t}\\n\t\t}\\n\\n\t\tfor(int i=0;i<m;i++){\t//??????B?????????\\n\t\t\tfor(int ii=0;ii<l;ii++){\\n\t\t\t\tB[i][ii] = scan.nextInt();\\n\t\t\t}\\n\t\t}\\n\\n\t\tfor (int i=0; i<n; i++){\t//?\u00a8????????????????C???\\n\t\t\tfor(int ii=0; ii<l; ii++){\\n\t\t\t\tkeisan = 0;\\n\t\t\t\tfor(int iii=0; iii<m; iii++){\\n\t\t\t\t\tkeisan += A[i][iii] * B[iii][ii];\\n\t\t\t\t}\\n\t\t\t\tSystem.out.print(keisan);\\n\t\t\t\tif(ii < l-1){\\n\t\t\t\t\tSystem.out.print(\" \");\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tSystem.out.println(\"\");\\n\t\t}\\n\t}\\n}", "target": "204", "substitutes": {}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\twhile (sc.hasNext()) {\\n\t\t\tint a = sc.nextInt();\\n\t\t\tint b = sc.nextInt();\\n\\n\t\t\tint c = a + b;\\n\\n\t\t\tint l = 0;\\n\\n\t\t\twhile (c != 0) {\\n\t\t\t\t++l;\\n\t\t\t\tc /= 10;\\n\t\t\t}\\n\\n\t\t\tSystem.out.println(l);\\n\t\t}\\n\t}\\n\\n}", "target": "176", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "exec", "gc", "sq", "sub", "sch", "scrib", "anc", "fc", "sec", "sp", "cc", "isc", "esc", "cl", "ko", "lc", "irc", "ctl", "desc", "dec", "ctrl", "screen", "mc", "enc", "inc", "scl", "cr", "ch", "tch", "cgi", "so", "conv", "dc", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "a": ["ar", "aa", "at", "aq", "ai", "area", "xa", "A", "au", "x", "ab", "oa", "ach", "ao", "ba", "an", "am", "app", "ea", "ga", "ia", "sta", "ta", "ae", "aj", "aaa", "ca", "alpha", "la", "sa", "ma", "ac"], "b": ["nb", "f", "bb", "t", "u", "bc", "bis", "i", "ab", "ble", "B", "r", "fb", "ba", "n", "eb", "ib", "by", "y", "v", "bs", "ob", "cb", "j", "rb", "gb", "e", "br", "db", "be", "bi", "z", "d", "sb"], "c": ["ci", "f", "C", "ct", "cu", "t", "u", "rc", "nc", "bc", "abc", "count", "gc", "i", "cv", "x", "o", "uc", "fc", "cd", "r", "cont", "n", "cc", "ce", "h", "cum", "v", "ec", "cl", "con", "tc", "lc", "arc", "mc", "e", "cr", "p", "ca", "cf", "conv", "dc", "cp", "li", "cs", "z", "d", "m", "unc", "g", "ac"], "l": ["f", "L", "t", "sl", "u", "left", "ll", "i", "r", "d", "len", "ml", "n", "lin", "cli", "lo", "v", "cl", "pl", "lit", "lc", "j", "hl", "dl", "lock", "lp", "nl", "lt", "p", "le", "ls", "la", "li", "fl", "list", "ln", "m", "line", "el", "g"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint a = Integer.parseInt(sc.next());\\n\t\tint b = Integer.parseInt(sc.next());\\n\\n\t\tint m = a * b;\\n\t\tif (m % 2 == 0) {\\n\t\t\tSystem.out.println(\"Even\");\\n\t\t} else {\\n\t\t\tSystem.out.println(\"Odd\");\\n\t\t}\\n\\n\t\tsc.close();\\n\\n\t}\\n\\n}", "target": "112", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "cu", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "gc", "sq", "sub", "scrib", "uc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "irc", "arc", "ctl", "desc", "ctrl", "mc", "scl", "cr", "sel", "ch", "system", "capt", "cgi", "ss", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "a": ["aa", "t", "aq", "ai", "area", "va", "A", "au", "ma", "i", "x", "ab", "oa", "r", "ach", "ao", "ba", "n", "an", "am", "ea", "ia", "sta", "l", "ta", "aj", "ae", "aaa", "p", "ca", "alpha", "la", "sa", "ac"], "b": ["nb", "f", "t", "bb", "bc", "k", "bf", "i", "ab", "x", "B", "r", "fb", "ba", "n", "c", "h", "eb", "ib", "y", "v", "bs", "j", "l", "rb", "e", "br", "p", "db", "be", "bi", "z", "d", "g"], "m": ["mmm", "sm", "mt", "f", "t", "me", "bm", "mm", "mut", "M", "k", " M", "i", "ms", "mi", "c", "n", "dm", "mu", "v", "man", "gm", "perm", "l", "mc", "mx", "p", "tm", "cm", "mean", "fm", "z", "d"]}}
{"code": "public class Main{\\n  public void run(java.io.InputStream in, java.io.PrintStream out){\\n    java.util.Scanner sc = new java.util.Scanner(in);\\n/*answer*/\\n    int a, b;\\n    a = sc.nextInt();\\n    b = sc.nextInt();\\n\\n    System.out.printf(\"%d %d %f%n\", a / b, a % b, a / (double)b);\\n/*fin*/\\n    sc.close();\\n  }\\n  public static void main(String[] args){\\n    (new Main()).run(System.in, System.out);\\n  }\\n}", "target": "90", "substitutes": {"in": ["env", "din", "io", "serv", "IN", "inn", "raw", "from", "inner", "bin", "net", "exec", "is", "ind", "i", "ins", "data", "r", "config", "on", "cont", "mi", "n", "source", "context", "pid", "isin", "init", "src", "en", "conf", "con", "info", "state", "l", "gin", "doc", "cin", "In", "inc", "world", "input", "stream", "st", "file", "ini", "user", "id", "inf", "dir", "reader", "log", "d"], "out": ["writer", "error", "report", "exit", "status", "sys", "OUT", "io", "t", "net", "write", "console", "sum", "ins", "outs", "o", "msg", "r", "err", "c", "n", "name", "v", "info", "ui", "output", "w", "Out", "l", "outer", "put", "screen", "res", "crit", "print", "p", "ch", "gt", "file", "ex", "result", "txt", "to", "end", "ou", "log", "list", "display", "d"], "sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "syn", "ctx", "si", "usc", "sim", "sv", "rc", "nc", "bc", "asc", "exp", "sync", "sh", "exec", "sch", "sq", "gc", "uc", "anc", "sec", "sp", "c", "cc", "isc", "esc", "spec", "cl", "ko", "lc", " Sc", "arc", "desc", "co", "mc", "scl", "cr", "capt", "ch", "sel", "ck", "ss", "conv", "cle", "cs", "row", "ec", "tc", "Sc", "sb", "scan"], "a": ["ar", "aa", "t", "at", "aq", "div", "ai", "area", "xa", "A", "da", "au", "i", "x", "ab", "add", "oa", "ach", "r", "ao", "act", "ba", "n", "an", "am", "c", "y", "app", "m", "ea", "ga", "eas", "ia", "sta", "ta", "aj", "ae", "aaa", "e", "ca", "as", "la", "att", "alpha", "sa", "d", "ma", "g", "ac"], "b": ["mb", "bp", "nb", "f", "back", "bb", "t", "u", "bc", "base", "bis", "bf", "i", "ab", "o", "B", "r", "fb", "g", "c", "blue", "ba", "n", "wb", "eb", "ib", "beta", "h", "y", "v", "bs", "ob", "w", "bo", "j", "l", "rb", "e", "br", "p", "big", "bar", "db", "be", "bi", "z", "d", "m", "sb"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\nclass Main {\\n\\n\tpublic static void main(String[] args) throws IOException {\\n\\n\t\tStringBuilder buider = new StringBuilder();\\n\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\\n\t\tString n = br.readLine();\\n\\n\t\tString[] Snums = br.readLine().split(\" \");\\n\\n\t\tint[]  nums = new int[Integer.parseInt(n)];\\n\\n\t\tfor(int i= 0; i<Integer.parseInt(n); i++){\\n\t\t\tnums[i]  = Integer.parseInt(Snums[i]);\\n\t\t}\\n\t\tint key =0;\\n\t\tint j=0;\\n\t\tfor(int i=1; i<nums.length; i++){\\n\t\t\tkey = nums[i];\\n\t\t\tj = i-1;\\n\t\t\tfor(int k=0; k<nums.length; k++){\\n\t\t\t\tbuider.append(nums[k]);\\n\t\t\t\tif(k != nums.length-1){\\n\t\t\t\tbuider.append(\" \");\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tSystem.out.println(buider.toString());\\n\t\t\tbuider.setLength(0);\\n\t\t\twhile (j>=0 && nums[j]>key) {\\n\t\t\t\tnums[j+1] =nums[j];\\n\t\t\t\tj--;\\n\t\t\t}\\n\t\t\tnums[j+1] =key;\\n\t\t}\\n\t\tfor(int k=0; k<nums.length; k++){\\n\t\t\tbuider.append(nums[k]);\\n\t\t\tif(k != nums.length-1){\\n\t\t\tbuider.append(\" \");\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(buider.toString());\\n\\n\\n\\n\t}\\n\\n}", "target": "69", "substitutes": {"buider": ["cuicer", "borier", "burier", " buander", "baider", "boIDER", "Buicer", " barier", "boainer", "uuiller", "boider", "Buander", "buIDER", " buier", "buide", "nuiler", "ausider", "nupler", "boicer", "bupler", "boarer", "boiller", " buainer", "buander", "yuider", "baancer", "cuIDER", "yuancer", "uicer", "oaide", "buarer", "uiler", "yupler", "ausander", " baide", "builer", "oaicer", "uuider", "boander", " baander", "Buarer", " bupler", "oaider", "bapler", "uider", "cuiller", "boier", "uuIDER", "baide", "Builer", "Burier", "cuider", "boide", " buancer", " builer", "buancer", "auspler", " buarer", "buier", " buicer", "nuider", "Buider", "oaier", "urier", "Buide", "boiler", "buainer", " burier", "bopler", " baider", "buicer", "nuicer", "uuicer", "ausainer", " buide", "builler", "yuide"], "br": ["repl", "bp", "bm", "bc", "bh", "bridge", "ger", "er", "dr", "bro", "bl", "gr", "r", "tr", "shr", "lr", "yr", "cb", "bt", "mr", "Br", "pr", "rb", "jp", "cr", "bd", "ch", "kr", "b", "BR", "be", "rel", "nr", "browser", "hr", "buf", "fr", "bi", "ber", "wr", "vr"], "n": ["note", "nb", "t", "ll", "net", "mn", "nan", "out", "na", "o", "names", "r", "d", "c", "nn", "fn", "name", "y", "v", "gn", "s", "w", "N", "l", "nu", "nl", "np", "cn", "p", "sn", "b", "ns", "nt", "nr", "num", "in", "z", "ln", "m", "ne", "rn"], "Snums": ["Snims", "Variums", "Notesums", "snms", "Variumps", "Notesumes", "Snumes", "Num", "SNums", "snumes", "Notesumps", "snumps", "SNum", "Snms", "snum", "Variumes", "snims", "Snumps", "Varium", "SNims", "SNms", "Nums", "Snum", "Nims", "Notesum", "Nms", "snums"], "nums": ["anrums", "snomes", "anumes", "bnumes", "formums", " news", "nsoms", " numers", "nsues", " nales", "unnamel", "numers", "snogs", "tenrums", "nsumbers", "bnums", "nuers", "nsumer", "numps", "joms", "nuum", " nules", "nsears", "nubes", "anubes", "tenaves", "neums", "nsists", "numes", "Names", "Numbers", "formucks", "nuims", "nsum", "num", "snoms", "Nogs", " nists", "Noms", "Nems", "tenums", "formrums", "names", "naves", "noms", "nuumps", " numps", "pumps", "snumps", " nrums", "nists", "normalils", "Nales", "anils", "nims", " num", "Numers", "Nuers", "unnrums", "Nums", "Numbs", "nems", "anumps", "nsumps", "nsems", "snums", "nules", "Nomes", "neubes", "snumbs", "nues", "numbs", "nrums", "bnues", " nomes", "nsims", " numbers", "tenamel", " noms", "normalumps", "nogs", " numer", " nims", "anomes", "jums", "neumers", "anucks", " numbs", " nogs", " names", " nuers", "numbers", "nales", " numes", "nsuers", "snames", "normalomes", "onums", "jists", "nuules", "unnaves", "neumes", " nems", "news", "nsumes", " namel", "nuaves", "normalumes", "Numps", "bnumbers", " nues", "jears", "onaves", "pums", "onumps", "snales", " nubes", "formubes", "nils", "snumers", " nucks", "nuums", "nomes", " nears", "snews", "onules", "anumers", "namel", "anums", "nears", "pumbers", " nils", "normalumers", "nucks", " naves", "snumbers", "News", "pumer", "normalubes", "unnums", "numer", "nsums", "normalums"], "i": ["zi", "iq", "iter", "ie", "I", "ci", "ami", "iso", "f", "\u0438", "si", "io", "ic", "at", "u", "oi", "ai", "me", "us", "inner", "xi", "is", "ind", "point", "ins", "o", "x", "ori", "mi", "c", "index", "by", "im", "y", "init", "v", "ix", "info", "ui", "gi", "this", "ri", "uri", "ki", "a", "ity", "qi", "pi", "multi", "ij", "it", "my", "ii", "PI", "ini", "di", "id", "li", "in", "ti", "bi", "m", "iu", "phi", "g", "ip", "ion"], "key": ["ver", "ie", "zero", "window", "obj", "shift", "net", "ak", "max", "node", "kk", "base", "primary", "ole", "item", "sum", "parent", "x", "no", "type", "ek", "size", "ke", "index", "by", "name", "kid", "y", "min", "leader", "ale", "label", "value", "prefix", "where", "here", "v", "bo", "Key", "hash", "prime", "lock", "next", "char", "start", "keys", "my", "le", "total", "null", "mk", "id", "KEY", "number", "ee", "set", "m", "val", "test", "ip"], "j": ["f", "t", "jl", "js", "off", "obj", "kj", "out", "x", "o", "job", "msg", "je", "uj", "index", "jc", "pt", "y", "v", "q", "dj", "json", "bo", "pr", "next", "ju", "aj", "jp", "jump", "ji", "J", "ij", "it", "res", "jit", "b", "jj", "ja", "other", "rel", "bi", "z", "str", "m", "g", "fr"], "k": ["kn", "ack", "wk", "u", "kh", "ak", "ka", "dk", "kk", "max", "unk", "ind", "ek", "oc", "z", "sk", "ask", "act", "ks", "c", "ijk", "ke", "kick", "kt", "kid", "kind", "q", "ko", "w", "ki", "kw", "ik", "isk", "ark", "ku", "kl", "K", "ikk", "uk", "it", "ok", "ck", "kr", "b", "mk", "kj", "d", "m", "km", "g", "tk", "ac"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n  private static double r;\\n  public static void main(String[] args) {\\n    Scanner stdIn = new Scanner(System.in);\\n    r = stdIn.nextDouble();\\n    double Pi = Math.PI;\\n    System.out.printf(\"%.6f %.6f\\n\", (r * r * Pi), (2 * Pi * r));\\n  }\\n}", "target": "239", "substitutes": {"r": ["pair", "ar", "R", "f", "ru", "t", "u", "rc", "re", "radius", "er", "ro", "dr", "rss", "i", "x", "ur", "err", "c", "n", "h", "v", "q", "lr", "j", " R", "mr", "pr", "rx", "rb", "rf", "rar", "pi", "res", "e", "cr", "p", "rs", "rt", "rel", "rd", "d", "m", "rat", "g", "sr"], "stdIn": ["sslAs", "sslIn", "sslOut", "stdIN", "standardIN", " stdAnd", "STDIns", "standardIns", "stdAnd", " stdOut", "STDIn", " stdIns", "standardIn", "stdIns", "STDOut", " stdAs", " stdIN", "sslAnd", "STDIN", "standardOut", "stdOut", "stdAs", "standardAs", "standardAnd"], "Pi": ["I", "Ti", "R", "PM", "si", "PK", "DI", "Mu", "Ry", "xi", "Xi", "Di", "DP", "Fr", " pi", "Po", "P", "mu", "TW", "Ni", "Rad", "\u03c1", "SI", "pi", "G", "Si", "PA", "PI", " Sigma", "di", "\u03c0", " PI", "Pa", "Fan", "PF", "phi", "CA", "PO"]}}
{"code": "\\n\\nimport java.util.*;\\nimport java.io.*;\\n\\npublic class Main \\n\\n{ \\nstatic int mod=(int)Math.pow(10, 9)+7;\\n\t static FastReader sc=new FastReader(); \\n\t \\n\t\t  public static void main(String[] args) \\n    {\\n\t\t\t  int n=i();\\n\t\t\t  if(n==0)\\n\t\t\t\t  System.out.println(\"1\");\\n\t\t\t  else\\n\t\t\t\t  System.out.println(\"0\");\\n\t\t\t \\n\t\t\t  \\n\t\t  \\n    }\\n\t\t  \\n\t\t  \\nstatic int[] input(int n) {\\n\tint A[]=new int[n];\\n\t   for(int i=0;i<n;i++) {\\n\t\t   A[i]=sc.nextInt();\\n\t   }\\n\t   return A;\\n   }\\nstatic long[] inputL(int n) {\\n\tlong A[]=new long[n];\\n\t   for(int i=0;i<n;i++) {\\n\t\t   A[i]=sc.nextLong();\\n\t   }\\n\t   return A;\\n   }\\nstatic String[] inputS(int n) {\\n\tString A[]=new String[n];\\n\t   for(int i=0;i<n;i++) {\\n\t\t   A[i]=sc.next();\\n\t   }\\n\t   return A;\\n   }\\n\\n\\nstatic void input(int A[],int B[]) {\\n\t   for(int i=0;i<A.length;i++) {\\n\t\t   A[i]=sc.nextInt();\\n\t\t   B[i]=sc.nextInt();\\n\t   }\\n}\\nstatic long mod(long x) {\\n\t  return ((x%mod + mod)%mod);\\n}\\n\\n     static int i() {\\n    \t return sc.nextInt();\\n     }\\n     static String s() {\\n    \t return sc.next();\\n     }\\n     static long l() {\\n    \t return sc.nextLong();\\n     }  \\n     static void sort(int[] arr){\\n        int n = arr.length;\\n        Random rnd = new Random();\\n        for(int i=0; i<n; ++i){\\n            int tmp = arr[i];\\n            int randomPos = i + rnd.nextInt(n-i);\\n            arr[i] = arr[randomPos];\\n            arr[randomPos] = tmp;\\n        }\\n        Arrays.sort(arr);\\n     }\\n  \\n        \\n        \\n    static class FastReader \\n    { \\n        BufferedReader br; \\n        StringTokenizer st; \\n  \\n        public FastReader() \\n        { \\n            br = new BufferedReader(new\\n                     InputStreamReader(System.in)); \\n        } \\n  \\n        String next() \\n        { \\n            while (st == null || !st.hasMoreElements()) \\n            { \\n                try\\n                { \\n                    st = new StringTokenizer(br.readLine()); \\n                } \\n                catch (IOException  e) \\n                { \\n                    e.printStackTrace(); \\n                } \\n            } \\n            return st.nextToken(); \\n        } \\n  \\n        int nextInt() \\n        { \\n            return Integer.parseInt(next()); \\n        } \\n  \\n        long nextLong() \\n        { \\n            return Long.parseLong(next()); \\n        } \\n  \\n        double nextDouble() \\n        { \\n            return Double.parseDouble(next()); \\n        } \\n  \\n        String nextLine() \\n        { \\n            String str = \"\"; \\n            try\\n            { \\n                str = br.readLine(); \\n            } \\n            catch (IOException e) \\n            { \\n                e.printStackTrace(); \\n            } \\n            return str; \\n        } \\n    } \\n} \\n\\n\\n\\n", "target": "148", "substitutes": {"mod": ["reg", "cmp", "ver", "MOD", "fun", "trans", "zero", " Mod", "cu", "mode", "div", "com", "re", "scale", "lex", "fac", "mm", "exp", "max", "inv", "mag", "sub", "sum", "add", "debug", "cond", "module", "ms", "z", "config", "len", "var", "tr", "prime", "spec", "min", "lib", "m", "mods", "man", "perm", "Mod", "j", "dec", "lock", "deg", "rand", "step", "cm", "comp", "ex", "id", "val", "num", "log", "mult", "temp", "set", "d", "ld", "modified", "od", "ac"], "sc": ["SC", "osc", "pc", "sys", "pb", "psc", "si", "ctx", "usc", "func", "cu", "sv", "rc", "nc", "bc", "asc", "sync", "mp", "gc", "sch", "scope", "uc", "ng", "anc", "fc", "r", "sec", "sp", "c", "cc", "esc", "isc", "cl", "mic", "lc", "irc", " Sc", "ctl", "ctrl", "desc", "mc", "scl", "cr", "ch", "ss", "sci", "sic", "dc", "sche", "cs", "tc", "Sc", "sb"], "n": ["note", "nc", "net", "node", "comm", "mn", "o", "fn", "index", "y", "en", "w", "l", "pi", "cn", "sn", "num", "g", "nm", "nb", "t", "network", "ren", "nan", "out", "no", "names", "ng", "len", "an", "nn", "s", "j", "nu", "current", "np", "nl", "ni", "nw", "number", "log", "d", "m", "ll", "size", "r", "on", "nor", "name", "local", "N", "p", "ns", "nt", "un", "z", "u", "all", "na", "c", "h", "v", "dn", "q", "a", " N", "ot", "norm", "missing", "ln", "ne"], "A": ["AS", "ATA", "GA", "Area", "AI", "Array", "TA", "Ar", "AP", "And", "EA", "AM", "La", "NA", "BA", "G", "H", " LA", "AT", "AF", "AV", "App", "D", "AA", "The", "ACT", "HA", "IA", "U", "AC", "J", "An", "This", "CA", "MA", "E", "AL", "C", "AE", "Am", " AA", "M", "Abs", "S", "ACC", "P", "V", "AU", "AB", "N", " a", "JA", "AR", "Av", "mA", "X", "API", "LA", "Alpha", "I", "R", "L", "Art", "SA", "At", "Ag", "One", " AI", "a", "As", "Bar", "T", "All", "ALL", "AST"], "i": ["status", "io", "at", "us", "ice", "abs", "point", "o", "index", "y", "MI", "ix", "l", "pi", "ii", "id", "fi", "ti", "bi", "display", "fire", "phi", "g", "ie", "ci", "f", "t", "ei", "xi", "dr", "ori", "client", "progress", "cli", "init", "s", "ui", "j", "uri", "qi", "multi", "print", "chain", "b", "ex", "ini", "ni", "help", "m", "et", "si", "ic", "sim", "oi", "is", "k", "ind", "r", "mi", "err", "ib", "gi", "ji", "it", "e", "p", "di", "in", "ims", "zi", "I", "ami", "\u0438", "u", "ai", "me", "initial", "ful", "c", "mac", "iy", "im", "v", "info", "q", "wi", "this", "ki", "batch", "ri", "ia", "a", "ity", "inc", "ij", "ios", "li", "ln", "iu", "ip"], "B": ["E", "I", "R", "GB", "C", "L", "RB", "Y", "BL", "Z", "O", "M", "D", "S", "BI", "EB", "BB", "P", "V", "BE", "SB", "IB", "AB", "N", "BA", "G", "J", "AR", "WB", "b", "BR", "BC", "X", "BS", "T", "LB", "Bs"], "x": ["px", "xp", "f", "hex", "ax", "xx", "u", " xx", "xi", "xa", "xf", "dx", "ox", "r", "g", "c", "h", "y", "v", "xc", "ix", "w", "l", "wx", "rx", "e", "p", "xy", "b", "ex", "tx", "X", "z", "xs"], "arr": ["repl", "iq", "aug", "art", "ar", "addr", "hist", "ray", "aa", "ax", "img", "js", "obj", "our", "all", "map", "Array", "dr", "Ar", "bl", "au", "inst", "ind", "expr", "par", "arg", "ari", "gr", "r", "rr", "err", "arb", "rep", "cur", "tr", "ev", "app", "pl", "adj", "j", "pr", "av", "arp", "ars", "elt", "rest", "ag", "aaa", "vol", "res", "ij", "coll", "resp", "dict", "agg", "rs", "txt", "dat", "nt", "att", "array", "vals", "rel", "row", "buf", "list", "val", "attr", "fr"], "rnd": ["ddd", "rrand", "Rrand", " rdd", "crng", "Rrd", "reng", "reund", "rdd", " rund", "dnd", "crrd", " rng", "redd", "rund", "Rng", "dund", "rrd", " rrand", "rng", "crnd", " rrd", "dng", "Rnd", "crrand", "rend"], "tmp": ["mmm", "mb", "cmp", "py", "ctx", "t", "obj", "mm", "same", "mp", "mut", "test", "sp", "MP", "qq", "attr", "src", "emp", "Temp", "orig", "prefix", "perm", "sam", "rb", "np", "aaa", "tt", "sample", "p", "etc", "jj", "txt", "td", "mk", "yy", "cp", "temp", "nom", "slice"], "randomPos": ["randomVal", "repeatPOS", "startPOS", "RandomPos", "randIndex", "RandomPOS", "repeatPoint", "startPos", " randomPosition", "randPOS", "repeatPos", "randpos", "andompos", "randPosition", "randompos", "randPos", "andomPOS", "repeatIndex", "randomPOS", "randomPoint", "andomPos", "RandomPosition", "recentPOS", "recentPoint", "randPoint", " randomPOS", "randomPosition", "randomIndex", "recentPos", "startVal", "recentIndex", " randomVal", "Randompos", "startPosition", "RandomVal", "andomPosition"], "br": ["bp", "bre", "bm", "bc", "bh", "dr", "bro", "bl", " BR", "bf", "gr", "r", "ba", "tr", "shr", "bs", "yr", "lr", "bt", "mr", "Br", "pr", "sr", "rb", "bd", "cr", "kr", "b", "BR", "ibr", "nr", "hr", "buf", "fr", "ber", "wr", "bn"], "st": [" ts", " ST", " sto", "sts", " ut", "ste", " fe", " ss", " us", "St", " sw", " et", " tu", " su", " sts", " cons", " se", " est", " ser", " ste", " sd", "ST", "nd", " std", " stri", " subst", "se"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        PrintWriter out = new PrintWriter(System.out);\\n\\n        final int N = Integer.parseInt(sc.next());\\n        final int L = Integer.parseInt(sc.next());\\n        String[] ss = new String[N];\\n        for (int i = 0; i < N; i++) {\\n            ss[i] = sc.next();\\n        }\\n        \\n        Arrays.sort(ss);\\n        String ans = \"\";\\n        for (int i = 0; i < N; i++) {\\n            ans += ss[i];\\n        }\\n        \\n        out.println(ans);\\n        \\n        out.flush();\\n    }\\n}", "target": "224", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "func", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "disc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "irc", "arc", "ctl", "desc", "dec", "cons", "mc", "acc", "scl", "cr", "capt", "ch", "tch", "comp", "sci", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "out": ["writer", "error", "exit", "sys", "OUT", "io", "at", "t", "flush", "net", "write", "sum", "outs", "o", "client", "msg", "r", "err", "up", "n", "os", "OU", "v", "en", "info", "con", "aos", "output", "w", "Out", "outer", "put", "screen", "co", "res", "crit", "it", "ot", "print", "ch", "cmd", "gt", "st", "file", "ex", "nt", "to", "end", "ou", "in", "log", "list", "g"], "N": ["E", "I", "NN", "NM", "R", "NC", "C", "ND", "Q", "NO", "Z", "Num", "NT", "O", "A", "M", "D", "S", "P", "V", "n", "NR", "NUM", "Ni", "NL", "NB", "NP", "TN", "NI", "GN", "NA", "K", "J", "Size", "H", "NS", "Len", "X", "SN", "T", "Ns", "NE"], "L": ["E", "I", "length", "Z", "O", "M", "D", "S", "B", "len", "F", "P", "V", "LL", "NL", "U", "l", "G", "J", "H", "LS", "Length", "T", "LE", "ln"], "ss": ["css", "est", "ress", "fs", "sys", "si", "ats", "SS", "sts", "sv", "us", "aws", "sol", "oss", "rss", "ems", "sq", "ests", "ses", "hess", "ms", "ps", "sy", "ys", "ness", "ites", "ess", "bs", "s", "sels", "ws", "mes", "ares", "ass", "uses", "ns", "rs", "ross", "pse", "uss", "\u00df", "ssl", "pps", "cs", "ims", "iss", "se"], "i": ["iter", "ie", "sequence", "ci", "hi", "I", "ami", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "ei", "xi", "us", "me", "inner", "used", "umi", "base", "is", "eu", "ind", "point", "client", "mi", "err", "cli", "iy", "im", "y", "init", "gi", "q", "ix", "ui", "info", "MI", "this", "ri", "j", "batch", "uri", "ki", "ity", "qi", "pi", "multi", "ji", "ij", "my", "it", "ii", "PI", "chain", "gu", "ini", "di", "ex", "ni", "yi", "li", "fi", "ti", "bi", "ims", "iu", "phi", "g", "ip"], "ans": ["ras", "nets", "ANS", "orts", "es", "anks", "ces", "AN", "san", "ats", "eps", "sts", "ums", "ads", "aps", "ann", "ols", "ants", "ins", " means", "prints", "uns", "ms", "aus", "acs", "ks", "an", " scans", "vs", "angs", "ands", "os", "s", "amps", "rans", " spans", "posts", "ons", "ens", "ars", "ams", "ros", "ates", "can", "ns", "rs", "ds", "caps", "arms", "arts", "ents"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        ArrayList<Integer> list = new ArrayList<>();\\n        list.add(1);\\n        list.add(2);\\n        list.add(3);\\n        list.remove(list.indexOf(a));\\n        list.remove(list.indexOf(b));\\n        System.out.println(list.get(0));\\n    }\\n}\\n", "target": "236", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sch", "sq", "gc", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "spec", "cl", "lc", "desc", "screen", "mc", "inc", "acc", "scl", "cr", "sel", "ch", "system", "ck", "sci", "conv", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "a": ["ar", "aa", "era", "t", "at", "ai", "area", "A", "fa", "da", "au", "oa", "ach", "r", "ao", "act", "an", "ba", "ea", "ga", "ia", "ta", "aj", "ae", "aaa", "apa", "ca", "alpha", "la", "as", "sa", "d", "ma", "ama", "ac"], "b": ["mb", "bp", "nb", "back", "bb", "bc", "bis", "i", "ab", "B", "r", "body", "fb", "c", "n", "ba", "blue", "eb", "ib", "lb", "y", "v", "beta", "bs", "ob", "cb", "j", "bot", "rb", "db", "be", "erb", "bi", "d", "sb"], "list": ["format", "sort", "ist", "sequence", "def", "word", "xml", "collection", "alt", "shape", "left", "sync", "all", "ll", "part", "net", "map", "out", "sum", "add", "parent", "size", "cont", "and", "check", "LIST", "filter", "cl", "listed", "load", "batch", "l", "dl", "table", "lat", "acl", "lt", "print", "coll", "pool", "form", "chain", "st", "queue", "dict", "group", "detail", "ls", "stack", "nt", "top", "li", "number", "null", "log", "lists", "set", "block", "tree", "test"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tint N=sc.nextInt();\\n\t\tchar[] S = sc.next().toCharArray();\\n\t\tchar[] T = sc.next().toCharArray();\\n\t\tsc.close();\\n\t\tString rs = String.valueOf(S);\\n\t\tint num = rs.length();\\n\\n\t\tfor(int i=0; i<num; i++) {\\n\t\t\tSystem.out.print(S[i]);\\n\t\t\tSystem.out.print(T[i]);\\n\t\t}\\n\t}\\n}\\n", "target": "200", "substitutes": {"sc": ["SC", "go", " SC", "osc", "pc", "sys", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sh", "cam", "sch", "gc", "sq", "sub", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "ko", "lc", " Sc", "arc", "ctl", "ctrl", "cons", "mc", "RC", "inc", "scl", "cr", "ok", "ch", "system", "ck", "ss", "conv", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "N": ["E", "I", "R", "C", "L", "Z", "Num", "A", "O", "NT", "M", "D", "B", "F", "P", "V", "n", " n", "K", "G", "J", "H", "NS", "X", "Ns", "No"], "S": ["SC", "I", "R", "RS", "C", "L", "TS", "SL", "SH", "SS", "Y", "SU", "SR", "A", "Z", "M", "CS", "SER", "SA", "JS", "PS", "B", "VS", "P", "V", "DS", "SB", "NRS", "s", "STR", "SI", "G", "HS", "SE", "H", "SP", "NS", "ST", "X", "SN", "DATA"], "T": ["UT", "I", "TV", "PT", "R", "WT", "TB", "RS", "C", "TS", "t", "Y", "TY", "TT", "RT", "TL", "NT", "TA", "M", "ET", "XT", "IT", "B", "P", "V", "TG", "TF", "VT", "TN", "J", "TR", "MT", "GT", "TE", "OT", "AT", "NOT", "TM"], "rs": ["ras", "RES", "rors", "R", "RS", "TS", "ats", "ris", "rc", "ARS", "dr", "Mr", "ATS", "ins", "PS", "r", "RI", "rr", "ags", "RR", "bs", "s", "NRS", "ts", "mr", "ars", "rys", "RC", "ros", "res", "gs", "GS", "rt", "ls", "Rs", "ds", "acks", "cs", "ims", " RS", "ss", "sr"], "num": ["uni", "om", "nm", "mon", "nb", "dim", "umi", "Num", "mn", "sum", " NUM", "no", "na", "hom", "alph", "nam", "n", "mu", "cum", "NUM", "cal", "en", "con", "man", "non", "den", "nu", "su", "np", "multi", "total", "um", "number", "un", "nom", "m"], "i": ["zi", "iter", "I", "hi", "ci", "ami", "\u0438", "si", "ic", "t", "u", "sim", "ai", "xi", "ei", "us", "me", "vi", "ski", "is", "ori", "x", "ms", "mi", "cli", "index", "y", "init", "v", "gi", "q", "ix", "ui", "ri", "ki", "j", "uri", "a", "qi", "pi", "multi", "ji", "ij", "it", "ii", "gu", "ini", "di", "yi", "id", "li", "ti", "bi", "sym", "m", "iu", "phi"]}}
{"code": "import java.util.Scanner;\\nclass Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    long in = sc.nextLong();\\n    long out = 1L;\\n    while(in != 0){\\n      in /= 2;\\n      out *= 2;\\n    }\\n    System.out.println(out - 1);\\n  }\\n}", "target": "51", "substitutes": {"sc": ["SC", "sm", "osc", "pc", "sys", "pb", "se", "sv", "tk", "nc", "bc", "rc", "Scan", "sh", "sch", "sq", "gc", "cv", "uc", "sp", "c", "cc", "ser", "esc", "src", "cl", "lc", "Sc", "desc", "dec", "mc", "nl", "acc", "cr", "ch", "system", "txt", "cs", "ec", "ss", "scan"], "in": ["iter", "din", "io", "IN", "t", "al", "inner", "inn", "from", "ai", "bin", "all", "max", "is", "ind", "i", "ins", "o", " IN", " inf", "std", "r", "rin", "err", "len", "n", "read", "isin", "by", "init", "min", "info", " input", "con", "update", "gin", "doc", " din", "l", "cin", "In", "inc", "it", "world", "input", "run", "b", "file", "ini", "null", "id", "user", "inf", "log", "act", "m", "line"], "out": ["exit", "sys", "OUT", "serv", "io", "t", "at", "ul", "inner", "ln", "all", "net", "max", "write", "i", "ins", "sum", "o", "outs", "x", "gr", "size", "timeout", "err", "check", "n", "bytes", "name", "v", "s", "con", "output", "w", "lit", "Out", "j", "l", "put", "screen", "vol", "let", "it", "ot", "print", "ch", "b", "total", "ex", "file", "nt", "null", "txt", " Out", "conv", "end", "result", "ou", "log", "list", "number", "d", "val", "num", "ne"]}}
{"code": "/**\\n * Created at 20:55 on 2019-07-07\\n */\\n\\nimport java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n  static FastScanner sc = new FastScanner();\\n  static PrintStream out = System.out;\\n  static PrintWriter pw = new PrintWriter(out);\\n\\n  static final int[] dx = {0, 1, 0, -1};\\n  static final int[] dy = {-1, 0, 1, 0};\\n\\n  static final long MOD = (long) (1e9 + 7);\\n  static final long INF = Long.MAX_VALUE / 2;\\n\\n  public static class Solver {\\n    public Solver() {\\n\\n      int N = sc.nextInt();\\n      int A = sc.nextInt();\\n      int B = sc.nextInt();\\n\\n      out.println(Math.min(N*A, B));\\n\\n    }\\n  }\\n\\n  public static void main(String[] args) {\\n    new Solver();\\n  }\\n\\n  static class FastScanner {\\n    private final InputStream in = System.in;\\n    private final byte[] buffer = new byte[1024];\\n    private int ptr = 0;\\n    private int buflen = 0;\\n\\n    private boolean hasNextByte() {\\n      if (ptr < buflen) {\\n        return true;\\n      } else {\\n        ptr = 0;\\n        try {\\n          buflen = in.read(buffer);\\n        } catch (IOException e) {\\n          e.printStackTrace();\\n        }\\n        if (buflen <= 0) {\\n          return false;\\n        }\\n      }\\n      return true;\\n    }\\n\\n    private int readByte() {\\n      if (hasNextByte()) return buffer[ptr++];\\n      else return -1;\\n    }\\n\\n    private static boolean isPrintableChar(int c) {\\n      return 33 <= c && c <= 126;\\n    }\\n\\n    private void skipUnprintable() {\\n      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\\n    }\\n\\n    public boolean hasNext() {\\n      skipUnprintable();\\n      return hasNextByte();\\n    }\\n\\n    public String next() {\\n      if (!hasNext()) throw new NoSuchElementException();\\n      StringBuilder sb = new StringBuilder();\\n      int b = readByte();\\n      while (isPrintableChar(b)) {\\n        sb.appendCodePoint(b);\\n        b = readByte();\\n      }\\n      return sb.toString();\\n    }\\n\\n    public long nextLong() {\\n      if (!hasNext()) throw new NoSuchElementException();\\n      long n = 0;\\n      boolean minus = false;\\n      int b = readByte();\\n      if (b == '-') {\\n        minus = true;\\n        b = readByte();\\n      }\\n      if (b < '0' || '9' < b) {\\n        throw new NumberFormatException();\\n      }\\n      while (true) {\\n        if ('0' <= b && b <= '9') {\\n          n *= 10;\\n          n += b - '0';\\n        } else if (b == -1 || !isPrintableChar(b)) {\\n          return minus ? -n : n;\\n        } else {\\n          throw new NumberFormatException();\\n        }\\n        b = readByte();\\n      }\\n    }\\n\\n    public int nextInt() {\\n      return (int) nextLong();\\n    }\\n\\n    public int[] nextIntArray(int N, boolean oneBased) {\\n      if (oneBased) {\\n        int[] array = new int[N + 1];\\n        for (int i = 1; i <= N; i++) {\\n          array[i] = sc.nextInt();\\n        }\\n        return array;\\n      } else {\\n        int[] array = new int[N];\\n        for (int i = 0; i < N; i++) {\\n          array[i] = sc.nextInt();\\n        }\\n        return array;\\n      }\\n    }\\n\\n    public long[] nextLongArray(int N, boolean oneBased) {\\n      if (oneBased) {\\n        long[] array = new long[N + 1];\\n        for (int i = 1; i <= N; i++) {\\n          array[i] = sc.nextLong();\\n        }\\n        return array;\\n      } else {\\n        long[] array = new long[N];\\n        for (int i = 0; i < N; i++) {\\n          array[i] = sc.nextLong();\\n        }\\n        return array;\\n      }\\n    }\\n  }\\n\\n}\\n", "target": "213", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "ctx", "usc", "sim", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sch", "sq", "scope", "r", "sec", "sp", "cc", "ser", "isc", "esc", "cl", "lc", " Sc", "ctl", "desc", "ctrl", "mc", "RC", "scl", "ch", "system", "ss", "sci", "scan", "conv", "dc", "cs", "tc", "Sc", "sr"], "out": ["writer", "error", "report", "auto", "sys", "OUT", "io", "t", "off", "window", "at", "obj", "write", "o", "outs", "client", "conn", "r", "on", "err", "up", "os", "OU", "v", "en", "s", "aos", "output", "w", "Out", "ws", "outer", "screen", "println", "res", "print", "input", "p", "ch", "gt", "pool", "ex", "txt", "result", "nt", "null", "file", "to", "ou", "log", "ln", "m"], "pw": ["spsw", " psw", " pW", "pW", "pws", "spW", "Psw", "Pws", " pws", "Pw", "psw", "spw", "spws", "PW"], "dx": ["fx", "xp", "xd", "ax", "xx", "dq", "xi", "dk", "ox", "da", "x", "cd", "ix", "yx", "dh", "dl", "wx", "rx", "xy", "tx", "ex", "dt", "ds", "nw", "eddy", "d", "ux", "xs"], "dy": ["py", "dd", "xx", "dq", "wy", "idy", "fy", "gy", "sy", "uy", "dm", "iy", "y", "dj", "dh", "dl", "ey", "yd", "ii", "ky", "xy", "di", "yi", "ds", "dt", "dir", "yy", "ld", "ay"], "MOD": ["MA", "MAC", "AD", "LOG", " Mod", "FD", "RO", "COM", "RB", "SH", "LD", "ZI", "EXP", "REG", "INC", "VER", "DEC", "MAG", "RR", "Mod", " RR", " MAX", "RM", "SUP", " mod", "UL", "mod", " LOG"], "INF": ["inEF", "inF", " INf", "InEF", "InV", "inf", " INEF", "INf", "Inf", " INV", "InF", "inV", "INV", "INEF"], "N": ["E", "I", "NN", "NM", "R", "NC", "C", "ND", "L", "Y", "Z", "NT", "M", "D", "S", "F", "P", "V", "NR", "CNN", "Ni", "NB", "NP", "NI", "NA", "K", "G", "J", "NH", "H", "NS", "X", "T", "Ns"], "A": ["AS", "AD", "AF", "GA", "AL", "RA", "AN", "C", "L", "Area", "Array", "TA", "M", "AP", "AA", "AY", "SA", "S", "HA", "ACC", "P", "AU", "IA", "AB", "AH", "AC", "EA", "AM", "JA", "a", "BA", "AR", "An", "Av", "LA", "CA"], "B": ["E", "I", "R", "GB", "C", "L", "BM", "Y", "Q", "BL", "Z", "O", "M", "D", "S", "BO", "USB", "EB", "BB", "P", "V", "SB", "IB", "NB", "AB", "Blue", "BA", "G", "J", "WB", "BC", "BS", "T", "LB"], "in": ["or", "f", "din", "io", "ic", "IN", "t", "inn", "inner", "from", "mm", "bin", "all", "is", "ind", "ins", "r", "on", "err", "up", "lin", "read", "im", "conf", "en", "con", "nin", "l", "gin", "cin", "In", "inc", "it", "input", "run", "stream", "ex", "ini", "null", "to", "inf", "log", "reader", "m", "get"], "buffer": ["Buffer", "iter", "sequence", "length", "history", "tree", "view", "window", "display", "bone", "phrase", "pointer", "button", "source", "read", "database", "index", "page", "device", "output", "limit", "batch", "texture", "memory", "table", "buff", "screen", "binary", "mem", "store", "sample", "document", "queue", "command", "append", "paste", "bar", "stack", "template", "result", "row", "temp", "buf", "cache", "block", "address", "library", "message", "scroll"], "ptr": ["Ptr", "pert", "iter", "bp", "pc", "addr", "inter", "dep", "ctx", "pe", "pos", "ped", "coord", "dr", "ref", "ind", "pointer", "expr", "ctr", "ps", "tp", "tip", "sp", " pointer", "rob", "err", "rep", "tr", "index", "prime", "pt", "head", "ix", "peer", "pl", "pers", "pend", "pr", "next", "jp", "pi", "np", "req", "push", "adr", "br", "tips", "fp", "seek", "offset", "pointers", "inters", "proc", "pad", "rel", "depth", "heads", "trace", "buf", "far", "post", "address", "ts", "loc"], "buflen": ["cuflen", "BUllens", "buflEN", "cuglen", "buplenn", "buclen", "BUflen", "buplen", "buflength", "buglength", "buglene", "brablenn", "buflig", "buglenn", "BUllen", "bullenn", "bulfEN", "buflenn", "bufllen", "BUflength", " bullength", "bucllen", "bucomplength", "cuglun", " buflene", " buflenn", "BUflenn", "bucomplene", " bullen", "bublength", "cuglig", "buclun", "bulfen", " bullene", "bullEN", "cuflig", "buflene", "BUllenn", "buflun", "bullens", "brablen", "brablEN", "braflEN", "BUllength", "brablens", "braflen", "BUflens", "bucomplenn", "bublenn", "buklen", "cugllen", "buclig", "buglig", "bullene", "cuflun", "buflens", "cufllen", " bullenn", "braflens", "bublen", "buklun", "buglen", "bugllen", "braflenn", "bucomplen", "bublens", "buklig", "bulfens", "bublEN", "buplens", " buflength", "buglun", "bukllen", "bulfenn", "bullen", "bullength", "buplength"], "c": ["ci", "pc", "f", "C", "ct", "cu", "t", "u", "rc", "bc", "fac", "abc", "k", "count", "x", "ctr", "fc", "cd", "unc", "cont", "code", "cc", "ce", "y", "v", "con", "lc", "cb", "l", "dec", "enc", "e", "p", "ca", "cf", "dc", "cp", "cs", "z", "d", "m", "tc", "\u00e7", "g", "ac"], "sb": ["mb", "bp", "sg", "builder", "sth", "nb", "bj", "pb", "bb", "sf", "bh", "bg", "bf", "abs", "ub", "sq", "sp", "rob", "abb", "eb", "lb", "zb", "kb", "ib", "SB", "bs", "s", " SB", "ob", "bsp", "cb", "bt", "rb", "buff", "gb", "bd", "db", "sa", "erb", "ssl", "gob", "lp"], "b": ["mb", "bp", "nb", "f", "pb", "bb", "bc", "base", "bis", "bl", "bg", "bound", "ab", "emb", "bit", "g", "fb", "wb", "eb", "lb", "ib", "y", "v", "bs", "ob", "cb", "bt", "j", "l", "a", "rb", "binary", "xb", "gb", "br", "ch", "bar", "db", "be", "reb", "bi", "z", "d", "m"]}}
{"code": "\\nimport java.util.*;\\n\\npublic class Main {\\n    public static void main(final String[] args) {\\n        final Scanner sc = new Scanner(System.in);\\n        // \u6574\u6570\u306e\u5165\u529b\\n        // final int a = sc.nextInt();\\n        // \u6587\u5b57\u5217\u306e\u5165\u529b\\n        // final String s1 = sc.next();\\n        final int d = sc.nextInt();\\n        final int n = sc.nextInt();\\n        sc.close();\\n        double result = 0;\\n        int nn = n;\\n        if (nn == 100) {\\n            nn = 101;\\n        }\\n        if (d == 0) {\\n            result = nn;\\n        } else {\\n            result = nn * Math.pow(100, d);\\n        }\\n\\n        System.out.println((int) result);\\n    }\\n}\\n", "target": "245", "substitutes": {"sc": ["SC", " SC", " sp", "sys", "se", "sv", "rc", " sh", " proc", "sq", " cr", " scorer", "c", " ss", " rc", " pc", " Sc", "Sc", "sr", " enc", " scr", "ch", " ser", "proc", "cs", "ss", " sk", "scan"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString line1 = sc.nextLine();\\n\t\tint n = Integer.parseInt(line1);\\n\\n\t\tString line2 = sc.nextLine();\\n\t\tString[] kari = line2.split(\" \");\\n\t\tint[] A = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tA[i] = Integer.parseInt(kari[i]);\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(line2);\\n\\n\t\tint v = 0;\\n\t\tint j = 0;\\n\\n\t\tfor (int i = 1; i < n; i++) {\\n\t\t\tv = A[i];\\n\t\t\tj = i - 1;\\n\t\t\twhile (j >= 0 && A[j] > v) {\\n\t\t\t\tA[j + 1] = A[j];\\n\t\t\t\tj--;\\n\t\t\t}\\n\t\t\tA[j + 1] = v;\\n\\n\t\t\tfor (int k = 0; k < n - 1; k++) {\\n\t\t\t\tSystem.out.print(A[k]);\\n\t\t\t\tSystem.out.print(\" \");\\n\t\t\t}\\n\t\t\tSystem.out.println(A[n - 1]);\\n\\n\t\t}\\n\\n\t}\\n\\n}", "target": "69", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint A = sc.nextInt();\\n\t\tint B = sc.nextInt();\\n\t\tint n;\\n\t\tif(A <= 9 && B <= 9) {\\n\t\t\tn = A * B;\\n\t\t}else {\\n\t\t\tn = -1;\\n\t\t}\\n\t\tSystem.out.println(n);\\n\t}\\n\\n}\\n", "target": "58", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sh", "cam", "sch", "gc", "sq", "anc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "ko", "lc", "ctl", "ctrl", "desc", "mc", "nl", "inc", "acc", "scl", "cr", "sel", "ch", "system", "ck", "ss", "conv", "cs", "tc", "Sc", "scan"], "A": ["Alpha", "AS", "AD", "R", "AF", "GA", "AL", "RA", "C", "AE", "L", "AN", "AV", "M", "D", "AA", "AP", "AY", "SA", "ACT", "S", "HA", "P", "V", "AU", "IA", "AB", "N", "AH", "AC", "AGE", "AM", "a", "ESS", "BA", "Ax", "AR", "H", "An", "As", "X", "mA", "alpha", "This", "AT", "LA", "API", "CA"], "B": ["FB", "I", "R", "TB", "GB", "C", "OB", "L", "RB", "BM", "Y", "Q", "BL", "Z", "M", "D", "BU", "S", "USB", "BI", "EB", "BB", "P", "V", "CB", "DB", "BE", "BF", "IB", "NB", "AB", "N", "BA", "G", "J", "WB", "b", "BR", "BY", "BC", "BS", "T", "LB", "VB", "Bs", "BER"], "n": ["nm", "nb", "t", "ren", "nc", "ll", "k", "nan", "out", "i", "mn", "na", "no", "ng", "on", "c", "nn", "fn", "nor", "v", "en", "dn", "w", "N", "l", "nu", "np", "nl", "cn", "norm", "sn", "p", "b", "ns", "nt", "nw", "number", "num", "z", "d", "m", "ne"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  static int head = 0;\\n  static int tail = 0;\\n  static int max = 100000;\\n  static int[] queue = new int[max];\\n  static String[] str = new String[max];\\n\\n  public static void initialize() {\\n    head = tail = 0;\\n  }\\n  public static boolean isEmpty() {\\n    return head == tail;\\n  }\\n  public static boolean isFull() {\\n    return head == (tail + 1) % max;\\n  }\\n  public static void enqueue(int x, String s) {\\n    if(isFull()) {\\n      throw new IllegalArgumentException(\"\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\");\\n    } else {\\n      queue[tail] = x;\\n      str[tail] = s;\\n      if(tail + 1 == max) {\\n        tail = 0;\\n      } else {\\n        tail++;\\n      }\\n    }\\n  }\\n  public static int dequeue() {\\n    if(isEmpty()) {\\n      throw new IllegalArgumentException(\"\u30a2\u30f3\u30c0\u30fc\u30d5\u30ed\u30fc\");\\n    } else {\\n      int x = queue[head];\\n      if(head + 1 == max) {\\n        head = 0;\\n      } else {\\n        head++;\\n      }\\n      return x;\\n    }\\n  }\\n  public static String destr() {\\n    if(head == 0) {\\n      return str[max - 1];\\n    } else {\\n      return str[head - 1];\\n    }\\n  }\\n\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    int q = sc.nextInt();\\n    String s = \"\";\\n    int a = 0;\\n    int time = 0;\\n    for(int i = 0; i < n; i++) {\\n      s = sc.next();\\n      a = sc.nextInt();\\n      if(a <= q) {\\n        time += a;\\n        System.out.println(s + \" \" + time);\\n      } else {\\n        time += q;\\n        enqueue(a - q, s);\\n      }\\n    }\\n    while(!isEmpty()) {\\n      a = dequeue();\\n      s = destr();\\n      if(a <= q) {\\n        time += a;\\n        System.out.println(s + \" \" + time);\\n      } else {\\n        time += q;\\n        enqueue(a - q, s);\\n      }\\n    }\\n  }\\n}\\n\\n", "target": "231", "substitutes": {"head": ["root", "back", "mit", "off", "before", "port", "da", "commit", "cycle", "index", "min", "next", "offset", "id", "num", "heads", "row", "line", "HEAD", "speed", "heading", "shift", "map", "out", "loop", "sum", "client", "len", "host", "cut", "high", "lock", "pop", "push", "mean", "foot", "pad", "ptr", "then", "d", "ac", "iter", "length", "tag", "left", "hold", "ind", "rank", "master", "stick", "top", "end", "depth", "block", "go", "ax", "window", "pos", "height", "last", "count", "buffer", "check", "code", "weight", "Head", "headed", "h", "key", "term", "limit", "header", "start", "stop", "ck", "point"], "tail": ["iter", "sort", "lim", "length", "tails", "zero", "back", "t", "position", "window", "tag", "capacity", "latest", "left", "linger", "port", "count", "last", "out", "loop", "sum", "scope", "buffer", "size", "col", "timeout", "cycle", "len", "body", "pull", "weight", "index", "fat", "min", "tailed", "master", "term", "limit", "lock", "next", "table", "stick", "lead", "start", "thread", "jump", "lt", "it", "pool", "chain", "offset", "total", "null", "foot", "top", "end", "ptr", "nil", "temp", "leaf", "list", "poll", "tip", "tree", "slice", "scroll", "ail"], "max": ["iter", "MAX", "lim", "cap", "length", "ctx", "ax", "range", "mode", "window", "t", "radius", "exp", "Max", "right", "base", "k", "count", "last", "now", "sum", "out", "parent", "ms", "size", "cycle", "len", "c", "med", "prime", "index", "name", "v", "min", "cl", "conf", "con", "w", "limit", "mod", "rest", "ram", "current", "rand", "mem", "res", "recent", "mx", "p", "chain", " MAX", "total", "ex", "mad", "id", "top", "end", "num", "row", "ext", "depth", "list", "act", "m"], "queue": ["iter", "pen", "sequence", "menu", "flag", "channel", "seq", "priority", "view", "dq", "me", "foo", "Q", "port", "count", "base", "buffer", "que", "index", "limit", "batch", "next", "ue", "thread", "pool", "pipe", "worker", "bar", "stack", "tube", "ques", "array", "late", "buf", "grid", "list", "wait", "line", "cache"], "str": ["sw", "sequence", "ar", "seq", "serv", "sl", "t", "sts", "strings", "dr", "out", "spe", "spr", "stri", "buffer", "data", "msg", "gr", "r", "sp", "err", "tr", "var", "arr", "utt", "shr", "name", "Str", "STR", "next", "string", "char", "vol", "res", "text", "print", "br", "p", "st", "ns", "rs", "txt", "url", "stack", "cs", "star", "fr", "list", "buf", "ts"], "x": ["fx", "px", "xp", "ick", "f", "ax", "ic", "xx", "u", "xt", "t", "xi", "at", "xa", "dx", "ox", "o", "on", "h", "y", "xc", "v", "ix", "xe", "wx", "rx", "mx", "p", "xy", "tx", "ex", "X", "in", "z", "val", "ux", "xs"], "s": ["its", "es", "fs", "sql", " ts", "f", "t", "ats", "js", "u", "sv", "sts", "us", "is", "sq", "ins", "o", "ms", "ps", "S", "z", "ys", "r", "sb", "less", "c", "h", "os", "y", "v", "bs", "state", "w", "ws", "l", "string", "series", "gs", "e", "p", "b", "ns", "rs", "txt", "ls", "as", "ds", "cs", "ims", "m", "ss", "g", "ts"], "sc": ["SC", "osc", "pc", "sys", "ct", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "exp", "sh", "gc", "sq", "sch", "disc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "spec", "cl", "lc", "irc", "Sc", " Sc", "desc", "dec", "ctl", "co", "mc", "nl", "scl", "cr", "ch", "tch", "sci", "ssl", "cle", "cs", "ec", "tc", "ss", "sb"], "n": ["nm", "nb", "nz", "t", "nc", "net", "na", "o", "no", "ng", "r", "on", "c", "an", "nn", "v", "en", "N", "j", "l", "nu", " N", "nl", "np", "p", "b", "ns", "nd", "nt", "nw", "num", "z", "d", "m", "ne"], "q": ["iq", "f", "qt", "t", "u", "dq", "Q", "eq", "k", "out", "sq", "o", "quant", "r", "que", "pkg", "c", "qq", "qu", "h", "y", "v", "m", "w", "ve", "j", "l", "ue", "qi", "it", "qa", "ch", "p", "b", "z", "d", "query", "g"], "a": ["aux", "span", "ed", "ar", "aa", "era", "t", "at", "aq", "u", "ai", "area", "wa", "xa", "all", "A", "action", "fa", "au", "na", "o", "pa", "oa", "ab", "d", "r", "ao", "an", "ba", "c", "am", "h", "index", "ap", "y", "m", "ea", "w", "ga", "ace", "ia", "j", "sta", "ta", "ae", "aaa", "apa", "p", "qa", "b", "ca", "ata", "alpha", "la", "as", "sa", "act", "ma", "g", "ac"], "time": ["mt", "length", "history", "sequence", "speed", "zone", "date", "frequency", "ime", "tim", "t", "window", "rate", "shift", "version", "race", "port", "estamp", "test", "now", "age", "runtime", "type", "times", "usage", "timeout", "TIME", "duration", "context", "weight", "etime", "timer", "prime", "value", "second", "comment", "memory", "process", "string", "start", "mem", "thread", "step", "tt", "delay", "tm", "command", "offset", "clock", "id", "event", "depth", "trace", "z", "Time", "m", "tree", "message", "ts"], "i": ["I", "hi", "ci", "sql", "f", "si", "ic", "t", "u", "sim", "ai", "xi", "us", "me", "is", " j", "ind", "o", "ms", "mi", "cli", "y", "v", "gi", "info", "ix", "ui", "j", "l", "qi", "pi", "multi", "it", "ii", "b", "di", "ini", "id", "li", "in", "ti", "bi", "z", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\t\tpublic static void main(String[] args) {\\n\t\t\tScanner sc = new Scanner(System.in);\\n\t\t\tint ans=0;\\n\t\t\tint N = sc.nextInt();\\n\t\t\tint A = sc.nextInt();\\n\t\t\tint B = sc.nextInt();\\n\t\t\tsc.close();\\n\\n\t\t\tfor (int i = 1; i <= N; i++) {\\n\t\t\t\tint sum = sum(i);\\n\t\t\t\tif (A <= sum && sum <= B) {\\n\t\t\t\t\tans+=i;\\n\t\t\t\t}\\n\t\t\t}\\n\\n\t\t\tSystem.out.println(ans);\\n\t\t}\\n\\n\t\tprivate static int sum(int i) {\\n\t\t\tint sumDigits = 0;\\n\t\t\twhile( i != 0) {\\n\t\t\t\tsumDigits += i % 10;\\n\t\t\t\ti /= 10;\\n\t\t\t}\\n\t\t\treturn sumDigits;\\n\t\t}\\n}", "target": "212", "substitutes": {"sc": ["SC", "go", "cmp", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "out", "gc", "sq", "scope", "sch", "sub", "anc", "fc", "sec", "sp", "cc", "c", "isc", "esc", "cl", "ko", "lc", " Sc", "arc", "ctl", "desc", "ctrl", "mc", "nl", "inc", "scl", "cr", "ch", "system", "ck", "ss", "conv", "cs", "tc", "Sc", "scan"], "ans": ["nets", "cas", "ANS", "anks", "offs", "AN", "lines", "ats", "ums", "aps", "ads", "eds", "us", "ann", "ants", "ins", " means", "names", "uns", "ms", "outs", "orders", "ps", "aus", "an", " scans", "ians", "ks", "sets", "amps", "aos", " spans", "aces", "posts", "ons", "ens", "cons", "ars", "ams", "gs", "ows", "ids", "An", "can", "ns", "ls", "ds", "vals", "actions", "arts", "xs", "ents"], "N": ["I", "NM", "NN", "R", "NC", "C", "ND", "L", "AN", "Y", "NO", "Num", "NT", "M", "S", "NG", "V", "n", "NR", "CNN", "Ni", "NL", "NB", "NW", "NI", "GN", "NA", "NH", "NS", "X", "SN", "T", "Ns", "No"], "A": ["Alpha", "AS", "AF", "AL", "RA", "AN", "L", "C", "Art", "AV", "App", "AA", "AP", "SA", "S", "HA", "P", "AU", "IA", "Ag", "One", "AB", "AH", "AC", "AM", "a", "Ast", "NA", "BA", "G", "AR", "An", "Av", "As", "alpha", "Ant", "CA", "AT", "LA", "Ax"], "B": ["E", "I", "GB", "C", "L", "RB", "BM", "Y", "BL", "M", "D", "BU", "S", "BO", "USB", "BI", "EB", "BB", "P", "V", "DB", "SB", "BF", "IB", "NB", "AB", "Blue", "BA", "G", "WB", "b", "BR", "BC", "BS", "LB", "VB"], "i": ["io", "port", "copy", "ms", "iu", "n", "index", "y", "ix", "l", "pi", "ii", "yi", "id", "conv", "ti", "bi", "phi", "g", "ie", "hi", "ci", "xi", "ei", "ori", "client", "cli", "init", "ui", "j", "qi", "multi", "b", "ini", "d", "m", "iter", "uni", "span", "si", "ic", "sim", "inner", "match", "is", "ind", "x", "mi", "gi", "ji", "it", "p", "di", "slice", "zi", "I", "ami", "u", "ai", "ish", "key", "im", "v", "info", "q", "ri", "ki", "batch", "a", "ij", "li", "point", "ip"], "sum": ["sm", "sort", "zero", "status", "square", " SUM", "cost", "si", "get", "sim", "us", "SU", "scale", "match", "share", "max", "sh", "count", "is", "last", "sha", "add", "na", "ms", "parse", " Sum", "size", "score", "n", "mu", "cum", "index", "tail", "cal", "s", "set", "average", "cat", "summary", "sam", "hash", "next", "Sum", "SI", "su", "mem", "acc", "ass", "sample", "can", "system", "mean", "total", "result", "stats", "um", "sa", "num", "number", "comment", "ma", "ss", "test", "se"], "sumDigits": ["sumdigates", "sumDecats", "sumdigins", "sumDatats", "umDigit", "umMagnats", "sumDecites", "numDigits", "umMagnates", "sumDigins", "sumMagnates", "numdigit", "sumdigits", "sumDigites", " sumDigit", "sumDecits", "numDigit", "sumMagnits", "sumMagnats", "sumPosats", "numDigins", " sumDigats", "numdigats", " sumDigites", "umDigats", "umDigates", "umMagnit", "sumMagnins", "sumDatits", "sumPosates", "sumDigats", "sumDecit", " sumdigites", "numDigats", "numdigits", "sumdigites", "umDigits", "sumdigit", " sumdigats", "sumPosit", "umMagnits", "sumDigates", "sumDatites", "sumMagnit", "sumDigit", " sumdigits", " sumdigit", "sumDatit", "numdigins", "sumPosits", "sumdigats"]}}
{"code": "import java.util.*; \\n\\nclass Main{\\npublic static void main(String[] args){\\n\tScanner sc=new Scanner(System.in);\\n        int k=sc.nextInt();\\n     \tint x=sc.nextInt();\\n  \\n\t\tfor(int i=x-k+1;i<=x+k-1;i++){\\n    \tSystem.out.println(i);\\n        }\\n    }\\n}\\n", "target": "207", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "sub", "anc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "desc", "mc", "inc", "acc", "scl", "cr", "ch", "ck", "ss", "sa", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "k": ["t", "kh", "ak", "ka", "dk", "kk", "unk", "ek", "sk", "ks", "n", "ijk", "ke", "kick", "key", "c", "kid", "q", "ko", "ki", "j", "kw", "kok", "ik", "yk", "isk", "ku", "kl", "K", "it", "ok", "ck", "kr", "mk", "alpha", "id", "kj", "m", "km", "g", "tk"], "x": ["px", "xp", "f", "xd", "ctx", "ax", "t", "xx", "ic", "xt", "xi", "xf", "xa", "max", "dx", "ox", "out", "on", "g", "c", "n", "h", "y", "v", "xc", "ix", "w", "xe", "j", "l", "wx", "rx", "mx", "e", "p", "xy", "ex", "tx", "X", "xxx", "z", "d", "m", "xs"], "i": ["zi", "iter", "I", "hi", "ci", "si", "io", "ic", "u", "iri", "ai", "xi", "ei", "ski", "is", "mi", "cli", "index", "gi", "im", "y", "ix", "ui", "ri", "ki", "j", "qi", "pi", "multi", "ji", "ij", "it", "ii", "di", "ini", "ni", "yi", "id", "li", "in", "ti", "bi", "ims", "iu", "phi", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n    public static void main(String args[]){\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int top = n/100;\\n        int ans = 0;\\n        if(n-top*100>top*10+top){\\n            ans = (top+1)*100+(top+1)*10+(top+1);\\n        }else{\\n            ans = top*100+top*10+top;\\n        }\\n        System.out.println(ans);\\n    }\\n}\\n\\n", "target": "106", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "out", "sq", "gc", "sub", "uc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "spec", "soc", "cl", "lc", "desc", "screen", "mc", "nl", "scl", "cr", "sel", "ch", "system", "ss", "cs", "tc", "Sc", "sb", "scan"], "n": ["nm", "nb", "t", "nc", "net", "count", "nan", "i", "na", "no", "o", "names", "ng", "cont", "c", "nn", "fn", "nor", "v", "en", "N", "j", "l", " N", "np", "nl", "cn", "p", "sn", "ns", "nt", "number", "num", "z", "d", "m", "ne", "g"], "top": ["root", "tab", "node", "global", "today", "html", "prefix", "above", "ta", "title", "Top", "pi", "tips", "offset", "parts", "num", "tip", "best", "t", "op", "nan", "TOP", "out", "toc", "parent", "client", "len", "oton", "host", "pt", "tops", "j", "table", "current", "np", "pop", "bottom", "ts", "hot", "than", "x", "type", "tp", "size", "typ", "sp", "soc", "ap", "master", "N", "lat", "p", "ns", "nt", "to", "pan", "scroll", "topic", "pos", "part", "pro", "height", "padding", "tools", "tom", "localhost", "timeout", "bot", "prot", "null", "alpha", "there"], "ans": ["nets", "ANS", "orts", "ions", "anks", "offs", "ces", "AN", "anes", "ats", "ads", "aps", "eps", "eds", "ann", "ants", "ins", "outs", "uns", "ms", "orders", "ys", "aus", "ks", "an", " scans", "angs", "lan", "amps", "rans", "aos", "lets", "aces", "books", "posts", " spans", "olds", "asks", "beans", "ons", "ens", "anas", "ots", "ars", "ams", "vers", "can", "ids", "ns", "ls", "ds", "vals", "cs", "pan", "arms", "arts", "xs", "ents"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    private static final int MAXSIZE = 200000;\\n\\n    public static void main(String[] args) {\\n        int[] R = new int[MAXSIZE];\\n\\n        Scanner sc = new Scanner(System.in);\\n        int rLength = sc.nextInt();\\n\\n        for (int idx = 0; idx < rLength; idx++) {\\n            R[idx] = sc.nextInt();\\n        }\\n\\n        int res = Integer.MIN_VALUE;\\n        int currMin = R[0];\\n        for (int idx = 1; idx < rLength; idx++) {\\n            res = Math.max(res, R[idx] - currMin);\\n            currMin = Math.min(currMin, R[idx]);\\n        }\\n\\n        System.out.println(res);\\n    }\\n}\\n", "target": "208", "substitutes": {"MAXSIZE": ["maxSIZE", "KEYSize", "MAXSize", "MaxSize", "KEYIZE", "KEYsize", "maxSize", "maxsize", "MaxSIZE", "MaxIZE", " MAXSize", "MAXsize", " MAXsize", "MAXIZE", " MAXIZE", "maxIZE", "Maxsize", "KEYSIZE"], "R": ["RES", "RG", "I", "RO", "RS", "RA", "RB", "L", "Res", "C", "REM", "SR", "RT", "Q", "M", "REL", "RP", "S", "RL", "r", "RGB", "RI", "P", "NR", "CR", "RE", "RR", "N", "IR", "U", "RC", "OR", "G", "J", "AR", "H", "Right", "TR", "BR", "BY", "RM", "DR", "GR", "Rs", "T", "RF", "RAM"], "sc": ["SC", "cmp", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "c", "cc", "ser", "isc", "esc", "src", "cl", "lc", " Sc", "ctl", "mc", "nl", "scl", "cr", "sel", "ch", "system", "tch", "ss", "so", "sci", "conv", "dc", "cs", "tc", "Sc", "scan"], "rLength": ["vrDefinition", "REnd", "rlength", "vrLen", "RHeight", "pDefinition", " rHeight", "RLen", "rbDuration", "rDuration", "Rlength", "rDefinition", "RDuration", "rHeight", " rDefinition", "pLen", "vrLength", "rbLen", " rEnd", "arrHeight", "rLen", "pLength", " rLen", "RLength", "arrlength", "rbLength", " rlength", "arrLen", " rDuration", "arrLength", "rbEnd", "rEnd"], "idx": ["idplex", "idsxb", "idxs", " idfx", "ridux", " Idly", "idxf", "indexx", "idexx", " idix", "needx", "idsxf", " idinx", "bidx", " idxe", "idex", "needex", "hidely", "widx", " idly", " idex", "idsX", "sidplex", "didX", "idxb", "idux", "bidxe", "idsxi", "indexX", "idsx", "widplex", " idxi", "widex", "idinx", "idy", "widxf", " idtx", "hidex", " idy", "hidexs", "IDxi", "partxb", "sidx", "iddx", "IDdx", " idnex", "idsxs", " idxs", " idxf", "idxx", "bidinx", "aidx", "didfx", "idX", "indexdx", "partxf", "needxi", "idnex", "widxi", " Idnex", "hidenex", "docix", "idly", "needtx", "docxi", " iddx", "indexxi", " Idx", " idux", "docx", "partx", "party", "sidxf", "idexf", "partxs", "partxe", "idxi", "ridx", "IDX", "didx", "ideix", "didxf", "idsfx", " idX", "partinx", "bidy", "idix", "docux", " idxb", "ridxi", " idxx", " Idxs", "aidxx", "idfx", "aidix", "widtx", "ridix", "idsplex", "aidxf", "idtx", "IDx", "sidxi", "idxe"], "res": ["RES", "rev", "def", "success", "resh", "zero", "ress", "range", "Res", "re", "obj", "raw", "rc", "max", "pro", "sol", "rss", "out", "inv", "reset", "expr", "ms", "gr", "size", "r", "rem", "progress", "med", "resource", "min", "des", "results", "mr", "pr", "red", "rest", "cons", "rand", "req", "resp", "rs", "result", "resolution", "ret", "id", "rel", "act", "pres", "val"], "currMin": [" curreMin", " curmMIN", "descrMinimum", "curRMin", "currbMIN", "curcMIN", "descrMax", "curmMinimum", "currMIN", "curremin", "currbMini", "currcMIN", "currbMin", "curmrMIN", "descrcMinimum", "currcMin", " curmMini", "curcmin", "curcMin", "descrcMIN", "currsMini", " curmmin", "curmMIN", "descrcMin", "curcMinimum", " currmin", "currsMin", "curcMax", "currermin", " curremin", "curmrMin", "curRMax", "curmMini", "currMod", "currcMinimum", " currMini", "currerMod", "curmMax", "descrcMax", "curreMini", "currMini", "curmmin", " currMIN", " curreMod", " currMod", "curmrMini", "currerMax", "currerMin", "currcMax", " curreMini", " currMax", "descrMIN", "curreMin", "currsMax", " curmMin", "currbmin", " curreMax", "curRMini", "curRMIN", "curreMax", "currmin", "curreMIN", "curmMin", "curreMod", "currMinimum", " curreMIN", "currMax", "curmrmin", "currsMIN", "descrMin", "curcMod"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n\\n        int n = sc.nextInt();\\n        String[] array = new String[n];\\n\\n        for (int i = 0; i < n; i++) {\\n            array[i] = sc.next();\\n        }\\n\\n        HashMap <String, Integer> map = new HashMap<>();\\n\\n        for (int i = 0; i < n; i++) {\\n            if (map.containsKey(array[i])){\\n                int value = map.get(array[i]);\\n                map.put(array[i], value + 1);\\n            } else {\\n                map.put(array[i], 1);\\n            }\\n        }\\n\\n        int max = Collections.max(map.values());\\n\\n        List<String> list = new ArrayList<String>();\\n\\n        for (String key : map.keySet()) {\\n            if (map.get(key) == max){\\n                list.add(key);\\n            }\\n        }\\n\\n        Collections.sort(list);\\n\\n        for (int i = 0; i < list.size(); i++) {\\n            System.out.println(list.get(i));\\n        }\\n    }\\n}\\n", "target": "235", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "uc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "src", "cl", "lc", "arc", "ctl", "co", "mc", "nl", "acc", "scl", "cr", "sel", "ch", "ss", "sci", "conv", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "n": ["nm", "nb", "ct", "t", "network", "ln", "nc", "all", "net", "ll", "mn", "nan", "out", "na", "o", "x", "no", "ng", "r", "len", "c", "nn", "nor", "name", "v", "en", "N", "j", "l", "nu", " N", "nl", "np", "cn", "p", "sn", "ns", "nt", "num", "un", "z", "d", "m", "ne"], "array": ["root", "archive", "sequence", "aw", "record", "history", "ar", "auto", "section", "ray", "attribute", "storage", "instance", "range", "at", "collection", "ear", "iterator", "raw", "area", "our", "integer", "all", "Array", "sh", "ash", "now", "message", "stage", "order", "var", "image", "arr", "index", "ape", "object", "function", "app", "random", "lower", "arrow", "load", "ace", "batch", "external", "hash", "a", "store", "answer", "my", "form", "chain", "vector", "search", "file", "audio", "stack", "angle", "element", "number", "atomic", "row", "trace", "address", "library", "test"], "i": ["status", "io", "us", "umi", "eric", "iu", "php", "index", "y", "ix", "pi", "series", "ii", "gu", "yi", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "ei", "xi", "base", "client", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "my", "chain", "ex", "ini", "m", "iter", "history", "iso", "si", "ic", "sim", "oi", "is", "ind", "mi", "err", "gi", "json", "ji", "it", "e", "di", "user", "to", "zi", "iq", "iti", "I", "ami", "\u0438", "u", "ai", "me", "iy", "by", "im", "info", "q", "wi", "ri", "ki", "batch", "ia", "this", "ity", "ij", "li", "point", "ip"], "map": ["mb", "cmp", "mt", "open", "cap", "forge", "addr", "snap", "tab", "maps", "view", "shape", "scale", "mm", "complete", "match", "transform", "mp", "op", "find", "add", "save", "link", "parse", "size", "mg", "bind", "cont", "manager", "use", "ape", "index", "ap", "app", "en", "man", "where", "place", "pl", "MAP", "set", "load", "master", "per", "hash", "table", "make", "mask", "lock", "build", "mem", "create", "pose", "print", "form", "pack", "dict", "collect", "pre", "apper", "group", "cp", "cache", "m", "block", "get", "handle"], "value": ["sequence", "hello", "values", "tv", "instance", "select", "get", "position", "version", "scale", "port", "initial", "data", "score", "unit", "image", "object", "label", "index", "v", "function", "state", "multiple", "operator", "distance", "json", "ue", "unknown", "VALUE", "property", "step", "feature", "Value", "total", "field", "number", "see", "ison", "minute", "bottom", "val", "default", "test"], "max": ["root", "MAX", "length", "best", "auto", "inter", "first", "ax", "range", "largest", "scale", "latest", " Max", "Max", "right", "last", "height", "k", "count", "sum", "x", "add", "size", "rank", "check", "maximum", "h", "cover", "index", "v", "min", "conf", "highest", "set", "average", "unique", "hash", "lock", "mod", "current", "rand", "recent", "pop", "step", "p", "gt", "total", "mean", "top", "any", "end", "number", "checked", "row", "dot", "major", "act", "m", "val", "default"], "list": ["note", "ist", "sequence", "menu", "iter", "def", "level", "mt", "status", "sort", "show", "collection", "watch", "left", "all", "ll", "sync", "out", "loop", "add", "msg", "cont", "and", "php", "LIST", "filter", "html", "del", "output", "json", "load", "batch", "l", "dl", "summary", "table", "lat", "diff", "print", "pool", "form", "old", "listed", "st", "search", "queue", "dict", "ls", "stack", "detail", "user", "li", "ssl", "log", "lists", "set", "line", "tree", "test"], "key": ["cy", "ie", "hello", "pair", "te", "tag", "obj", "foo", "member", "base", "k", "phrase", "x", "link", "entry", "mac", "by", "name", "y", "v", "ry", "info", "q", "label", "prefix", "choice", "bo", "ace", "set", "j", "Key", "hash", "ey", "string", "char", "my", "owner", "chain", "ex", "mk", "id", "any", "KEY", "row", "index", "str", "val", "tip", "ip"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\nimport static java.lang.System.out;\\n\\npublic class Main {\\n    static MyReader in = new MyReader();\\n\\n    public static void main(String[] args) {\\n        int X = in.i();\\n        int max = 1;\\n        for (int b = 2; b * b <= X; b++) {\\n            for (int p = 2; ; p++) {\\n                int t = pow(b, p);\\n                if (X < t) {\\n                    break;\\n                } else if (max < t) {\\n                    max = t;\\n                }\\n            }\\n        }\\n        out.println(max);\\n    }\\n\\n    static int pow(int a, int b) {\\n        int c = 1;\\n        while (b > 0) {\\n            if ((b & 1) == 1) {\\n                c *= a;\\n            }\\n            a *= a;\\n            b >>= 1;\\n        }\\n        return c;\\n    }\\n}\\n\\nclass MyReader extends BufferedReader {\\n    char[] cbuf = new char[1024];\\n    int head = 0;\\n    int tail = 0;\\n\\n    MyReader() {\\n        super(new InputStreamReader(System.in));\\n    }\\n\\n    char next() {\\n        if (head == tail) {\\n            try {\\n                tail = super.read(cbuf, 0, cbuf.length);\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            head = 0;\\n        }\\n        return cbuf[head++];\\n    }\\n\\n    void back() {\\n        head--;\\n    }\\n\\n    boolean minus() {\\n        boolean minus;\\n        while (true) {\\n            char c = next();\\n            if (!isDelimiter(c)) {\\n                if (!(minus = c == '-')) back();\\n                return minus;\\n            }\\n        }\\n    }\\n\\n    void skip() {\\n        while (isDelimiter(next()));\\n        back();\\n    }\\n\\n    char[] s(int N) {\\n        char[] cbuf = new char[N];\\n        read(cbuf, 0, N);\\n        return cbuf;\\n    }\\n\\n    public int read(char[] cbuf, int off, int len) {\\n        skip();\\n        int i;\\n        for (i = 0; i < cbuf.length; i++) {\\n            char c = next();\\n            if (isDelimiter(c)) {\\n                break;\\n            }\\n            cbuf[i] = c;\\n        }\\n        return i;\\n    }\\n\\n    boolean isDelimiter(char c) {\\n        return c == ' ' || c == '\\n' || c == '\\r';\\n    }\\n\\n    int i() {\\n        boolean minus = minus();\\n        int n = 0;\\n        while (true) {\\n            int k = next() - '0';\\n            if (k < 0 || 9 < k) break;\\n            n = 10 * n + k;\\n        }\\n        return minus ? -n : n;\\n    }\\n\\n    int[] ii(final int N) {\\n        int[] a = new int[N];\\n        for (int j = 0; j < a.length; j++) a[j] = i();\\n        return a;\\n    }\\n\\n    long l() {\\n        boolean minus = minus();\\n        long n = 0;\\n        while (true) {\\n            int k = next() - '0';\\n            if (k < 0 || 9 < k) break;\\n            n = 10 * n + k;\\n        }\\n        return minus ? -n : n;\\n    }\\n}\\n", "target": "143", "substitutes": {"in": ["ar", "f", "din", "io", "IN", "ic", "inner", "bin", "net", "is", "out", "ins", "sum", "o", "Input", " out", " IN", "std", "r", "on", "err", "thin", "h", "init", "conf", "s", " input", "con", "info", "Out", "nin", " din", "gin", "doc", "cin", "In", "inc", "diff", "world", "input", "stream", "st", "file", "win", "ini", "inf", "reader", "log", "ln", "m"], "X": ["XX", "I", "MAX", "TX", "Width", "R", "C", "L", "ax", "Y", "Q", "Z", "Max", "A", "XXX", "M", "ox", "O", "XT", "AX", "x", "S", "B", "F", "P", "V", "OX", "U", "XL", "XP", "K", "G", "J", "H", "Type", "DX", "Ex", "T", "IX"], "max": ["MAX", "TX", "length", "Maximum", "ax", "window", " Max", "Max", "right", "base", "last", "ox", "out", "M", "sum", "x", "ms", "tmp", "size", "rank", "maximum", "h", "prime", "v", "min", "conf", "w", "mod", "rest", "mask", "res", "mx", "gt", " MAX", "total", "tx", "top", "T", "cp", "end", "checked", "temp", "major", "m", "core"], "b": ["bp", "nb", "f", "pb", "bb", "u", "bc", "base", "bis", "bg", "bl", "bf", "ub", "x", "ab", "B", "body", "g", "fb", "ba", "wb", "h", "eb", "ib", "lb", "y", "v", "beta", "by", "ob", "bs", "cb", "bt", "batch", "rb", "binary", "gb", "bd", "e", "br", "bar", "db", "be", "bi", "z", "d", "m", "sb"], "p": ["bp", "pc", "pp", "pb", "pe", "pos", "at", "part", "port", "op", "pa", "par", "ps", "x", "tp", "sp", "P", "pn", "pt", "ap", "v", "pg", "y", "q", "pl", "w", "pr", "jp", "np", "ph", "it", "pre", "cp", "lp", "point", "g", "ip"], "t": ["time", "te", "tg", "at", "wt", "port", "out", "x", "type", "tp", "tmp", "tr", " T", "pt", "y", "v", "ty", "tu", "tc", "w", "term", "ta", "title", "tt", "ot", "it", "tm", "total", "rt", "td", "txt", "dt", "ret", "top", "T", "temp", "z", "d", "m", "tf", "tip", "test", "ts"], "a": ["ar", "aa", "f", "at", "u", "ai", "area", "A", "au", "out", "data", "o", "ab", "x", "pa", "r", "ba", "an", "y", "v", "s", "w", "e", "ca", "alpha", "as", "sa", "z", "m", "g", "ac"], "c": ["cmp", "cy", "ci", "pc", "ar", "cos", "f", "C", "cu", "ct", "ic", "u", "rc", "bc", "abc", "gc", "x", "ab", "fc", "cd", "r", "col", "unc", "cont", "category", "code", "cc", "ce", "cur", "h", "xc", "v", "ec", "q", "con", "lc", "cb", "cat", "arc", "co", "char", "mc", "e", "cr", "ch", "can", "cm", "ca", "cf", "comp", "vc", "cp", "dc", "cs", "cache", "z", "d", "m", "tc", "g", "ac"], "cbuf": ["kbuf", "cpuffy", "erbuffy", "kbfac", "obuf", "rbelf", "bclim", "sbuff", "rbuff", "erbbuf", "obbuff", "zbdf", "cblim", "zbimg", "erbbuff", "fbbuf", "pbbox", "fbelf", "blim", "cduffy", "cbimg", "bcaux", "bcuf", "bbuf", "bcbuf", "CBbuf", "bjbuf", "gbbuff", "cbfac", "sbbuf", "CBuff", "cduff", "bcelf", "rbfac", "bjuff", "cbuff", "CBuf", "buf", "cbuffy", "bcuff", "bjfac", "rbbf", "cpuff", "gbuf", "sbbuff", "fbbf", "pbuff", "fbuf", "cbelf", "rbuf", "bcimg", "gbbuf", "erbdf", "erbuf", "obbuf", "zbuf", "erbum", "gbuffy", "rbush", "rbuffy", "cpush", "bcush", "cbush", "pbbuf", "gbbf", "zbum", "cbbuff", "obbf", "bcbf", "cbum", "bcum", "CBbuff", "baux", "pbuf", "rbbuff", "cduf", "rbbuf", "sbuf", "cpuf", "cdbuf", "cbdf", "bcdf", "bjuf", "kbbuf", "sbbox", "cbbox", "rblim", "rbaux", "cpbuf", "kbuff", "cbbuf", "erbimg", "rbbox", "cbbf", "cbaux"], "head": ["root", "go", "iter", "length", "wind", "level", "HEAD", "back", "mit", "ax", "before", "pos", "window", "th", "shift", "position", "mm", "ad", "left", "heading", "tag", "front", "keep", "port", "count", "loop", "bound", "link", "client", "headers", "body", "Head", "headed", "h", "index", "key", "min", " heads", "limit", "high", "header", "hang", "next", "rest", "start", "pop", "it", "offset", "foot", "id", "top", "end", "depth", "then", "heads", "row", "ptr", "block", "neck"], "tail": ["iter", "length", "tails", "zero", "back", "left", "port", "last", "out", "count", "sum", "buffer", "tmp", "size", "body", "h", "lo", "index", "fat", "min", "limit", "next", "ta", "lock", "start", "stop", "offset", "total", "foot", "top", "end", "nil", "temp", "bottom", "ne", "scroll", "ail"], "minus": ["exit", "ie", "below", "clip", "done", "zero", "values", "cos", "mon", "zone", "de", "div", "js", "gets", "inner", "us", "foo", "left", "pos", "nan", "tie", "plus", "sub", "dump", "no", "nom", "times", "neg", "less", "partial", "lo", "mu", "south", "min", "second", "mobile", "small", "ui", "gone", "bo", "mini", "desc", "dec", "negative", "next", " negative", "unknown", "meta", "extra", "step", "diff", "my", "neutral", "origin", "empty", "stats", "nil", "wise", "none", "dot", "sign", "star", "digit", "ne", "get", "delete"], "N": ["E", "I", "NM", "R", "Count", "NC", "C", "SIZE", "L", "AN", "ND", "Q", "A", "Num", "NT", "O", "Z", "M", "D", "S", "B", "F", "P", "V", "NG", "NR", "W", "NL", "NB", "NP", "TN", "NI", "NA", "K", "G", "J", "Size", "H", "NS", "Len", "SN", "Length", "T", "Ns", "No"], "off": ["open", "eff", "offs", "f", "before", "pos", "obj", "OFF", "ref", "op", "out", "Off", "o", "no", "oa", "on", "of", "os", "start", "origin", "offset", "end", "num", "Offset", "ff", "set", "loc"], "len": ["fin", "length", "seq", "L", "pos", "all", "ll", "count", "last", "vec", "size", "bytes", "min", "en", "start", "loc", "Len", "ls", "Length", "val", "num", "list", "ln", "line", "ail"], "i": ["zi", "iter", "I", "hi", "ci", "ie", "ed", "f", "\u0438", "io", "si", "ic", "u", "sim", "ai", "xi", "ei", "is", "ori", "o", "x", "ms", "r", "mi", "cli", "h", "index", "y", "v", "im", "s", "ix", "info", "ui", "char", "pi", "multi", "ij", "it", "e", "ini", "di", "id", "li", "ti", "bi", "ims", "d", "m", "item", "iu", "phi", "g", "ip"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws Exception {\\n        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) {\\n            String[] array = reader.readLine().split(\" \");\\n            int A = Integer.parseInt(array[0]);\\n            int B = Integer.parseInt(array[1]);\\n            int C = Integer.parseInt(array[2]);\\n\\n            System.out.println(Math.max(B + C - A, 0));\\n        }\\n    }\\n\\n}\\n", "target": "45", "substitutes": {"array": ["archive", "sequence", "RAY", "record", "pair", "history", "attribute", "section", "ray", "storage", "air", "instance", "range", "angular", "collection", "raw", "area", "integer", "share", "map", "Array", "part", "ash", "now", "buffer", "response", "say", "stage", "var", "arr", "object", "value", "function", "expression", "arrow", "batch", "hash", "answer", "vector", "search", "details", "audio", "element", "angle", "number", "trace", "list", "query", "address", "rays"], "A": ["Al", "I", "AF", "AL", "RA", "AE", "L", "AV", "Array", "M", "AA", "AP", "SA", "S", "HA", "ACC", "P", "At", "V", "IA", "AU", "One", "AB", "AH", "AC", "a", "Ax", "AR", "An", "Av", "As", "mA", "This", "Ant", "LA", "CA"], "B": ["I", "TB", "R", "GB", "OB", "RB", "L", "Y", "M", "D", "S", "BO", "BI", "EB", "BB", "BG", "P", "V", "DB", "BE", "BF", "IB", "NB", "AB", "N", "Blue", "Reb", "BA", "G", "J", "WB", "b", "BR", "Bar", "BC", "BS", "T", "LB", "VB", "BER"], "C": ["E", "I", "Central", "R", "CT", "L", "EC", "CE", "Q", "CF", "Z", "Cow", "O", "M", "D", "CS", "You", "S", "F", "P", "c", "V", "CB", "Co", "CR", "Craig", "N", "DC", "U", "CD", "G", "CM", "Container", "CC", "Custom", "CP", "BC", "T", "CA", "Cs"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    static Scanner stdIn = new Scanner(System.in);\\n    public static void main(String[] args) {\\n        String s = stdIn.next();\\n        char[] sc = s.toCharArray();\\n\\n        int first = (sc[0]-'0')*10 + (sc[1]-'0');\\n        int second = (sc[2]-'0')*10 + (sc[3]-'0');\\n\\n        boolean firstIsYY = false;\\n        boolean firstIsMM = false;\\n        boolean secondIsYY = false;\\n        boolean secondIsMM = false;\\n\\n        if(1<=first && first <=12){\\n            firstIsMM = true;\\n        }\\n        if(0<= first && first <=99){\\n            firstIsYY = true;\\n        }\\n\\n        if(1<=second && second <=12){\\n            secondIsMM = true;\\n        }\\n        if(0<= second && second <=99){\\n            secondIsYY = true;\\n        }\\n\\n        if((firstIsYY && secondIsMM) && (firstIsMM && secondIsYY)){\\n            System.out.println(\"AMBIGUOUS\");\\n        }else if(firstIsMM && secondIsYY){\\n            System.out.println(\"MMYY\");\\n        }else if(firstIsYY && secondIsMM){\\n            System.out.println(\"YYMM\");\\n        }else{\\n            System.out.println(\"NA\");\\n        }\\n\\n    }\\n}", "target": "5", "substitutes": {"stdIn": ["dOut", "stdin", "din", "stdIN", " stdin", "STDIns", "STDin", "dIn", "dIns", " stdOut", "sentin", "STDIn", " stdIns", "sentIN", "sentOut", "stdIns", "STDOut", " stdIN", "sentIn", "stdOut", "dIN"], "s": ["hs", "sys", "sl", "ats", "t", "js", "sf", "sv", "sts", "sq", "i", "S", "ys", "sp", "g", "c", "n", "h", "os", "y", "v", "bs", "ts", "j", "space", "string", "scl", "p", "b", "rs", "ls", "ss", "in", "str", "sb", "se"], "sc": ["SC", "go", "sw", "osc", "pc", "sys", "seq", "cu", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "exp", "sac", "sh", "gc", "sq", "vec", "fc", "sp", "cont", "c", "cc", "esc", "isc", "cl", "tc", "decl", "lc", "ws", "Sc", "arc", "ctl", "desc", "cons", "enc", "scl", "sel", "ch", "tch", "rs", "sci", "dc", "sche", "cs", "ec", "pres", "unc", "scan"], "first": ["format", "fourth", "sort", "time", "art", "upper", "back", "f", "before", "middle", "th", "part", "front", "same", "last", "initial", "count", "primary", "single", "client", "must", "subject", "face", "full", "just", "key", "index", "host", "head", "min", "app", "First", "only", "master", "this", "term", "true", "third", "header", "prev", "next", "title", "current", "start", "lead", "through", "feature", "old", "pre", "st", "top", "minute", "then", "self", "begin", "fr", "act", "frame"], "second": ["fourth", "sort", "below", "slot", "zero", "section", "alt", "left", "secret", "front", "bis", "last", "count", "fifth", "SEC", "size", "sec", "unit", "seconds", "lo", "beta", "two", "south", "index", "server", "value", "only", "lower", "term", "third", "next", "table", "Second", "current", "service", "series", "bottom", "secondary", "session", "another", "system", "st", "minimum", "option", "then", "other", "se", "fr"], "firstIsYY": ["firstParentXX", "firstNameY", "secondISYY", "firstHasYES", "firstParentVER", "firstISNN", "firstWasMX", "firstIsREL", "firstIssYY", "firstISXX", "firstCheckVER", "secondIsNN", "secondISMX", "secondIsREL", "secondHasY", "firstISYES", "firstisYY", "secondIsY", "firstNameMM", "firstISVER", "secondIsMX", "firstIsNN", "firstNameYY", "firstISREL", "secondISVER", "secondISXX", "firstIssMX", "secondISMM", "firstIsYES", "secondIsYES", "firstCheckXX", "firstNameYES", "firstISY", "secondHasMM", "firstisMM", "firstIsY", "firstIsVER", "firstISYY", "firstCheckYY", "secondISNN", "firstHasMM", "firstisY", "firstHasYY", "firstHasY", "firstIsMX", "secondHasYES", "secondIsVER", "secondHasYY", "firstWasMM", "firstParentREL", "firstIssMM", "firstIsXX", "firstWasYY", "firstisXX", "firstISMM", "firstCheckREL", "secondISREL", "firstISMX", "firstIssNN", "secondISY", "firstWasNN", "secondIsXX", "firstParentYY"], "secondIsMM": ["thirdISMM", "secondISYY", "secondParentMD", "secondaryLikeYY", "secondISMS", "thirdAsMM", "secondaryIsMM", "secondaryIsEM", "secondISMP", "secondSyncAM", "secondParentAM", "secondIsMD", "secondAsMM", "secondaryIsMP", "secondIsAM", "twoParentMM", "thirdIsMM", "secondIsMS", "twoIsAM", "twoIsMD", "thirdAsMI", "secondISmm", "secondIsMP", "secondParentMM", "secondShareMM", "twoIsMM", "secondaryIsYY", "secondisYY", "secondISMM", "secondISEM", "secondLikemm", "twoParentAM", "secondAsmm", "secondaryLikeMP", "secondLikeEM", "thirdISYY", "thirdAsmm", "secondAsMI", "thirdIsmm", "secondLikeYY", "secondSyncMI", "secondIsMI", "secondSyncMD", "secondParentMI", "secondISMI", "secondShareMI", "secondAsMS", "thirdIsMS", "secondisEM", "secondLikeMS", "secondLikeMM", "thirdISMS", "twoParentMI", "thirdIsMI", "secondShareAM", "secondSyncMM", "thirdAsMS", "secondisMP", "secondShareMD", "thirdISmm", "twoIsMI", "secondaryLikeMM", "thirdIsYY", "secondLikeMP", "secondisMM", "secondaryLikeEM", "secondIsEM", "secondIsmm", "twoParentMD"], "firstIsMM": ["thirdISMM", " firstSyncEM", "firstWasMX", "thirdIsMX", "FirstIsIM", "thirdISMX", "firstisMF", "firstIsEM", " firstSyncMX", "firstISMI", "FirstisMF", "firstAsMI", "thirdISYY", "lastISMD", "firstISYY", "firstIsMX", " firstIsEM", "FirstisMM", " firstIsMX", "firstISMM", "firstSyncMN", "firstIsaMN", "firstSyncMX", "firstAsMB", "FirstIsMM", "firstAsMD", "thirdISMB", "firstIsaMM", "lastISYY", "firstAsIM", "firstIsMI", "firstIsMF", "firstisIM", "firstAsMM", "firstISIM", "FirstIsYY", "FirstisIM", "firstIsMD", " firstSyncMN", " firstIsMN", "firstISMF", "FirstisYY", "firstisMM", "lastIsMD", "firstIsMN", "firstISMB", "firstIsMB", "lastISMM", "thirdIsYY", "firstISMX", "firstServiceMM", "firstWasMB", "firstAsMX", "lastIsMI", "firstIsaMX", "thirdIsMM", "firstisYY", "firstISMN", "firstServiceMD", " firstSyncMM", "lastIsYY", "firstISMD", "FirstIsMF", "firstAsMF", "firstSyncMM", "lastIsMM", "firstServiceMI", "firstIsIM", "firstServiceYY", "firstWasMM", "firstWasYY", "firstSyncEM", "lastISMI", "firstISEM", "firstIsaEM", "thirdIsMB", "firstAsYY"], "secondIsYY": ["secondISYY", "secondCanYY", "firstISNN", "secondIdY", "secondIdMY", "secondIssGREEN", "secondaryIsMM", "secondIdGREEN", "secondaryIdMY", "secondIsMY", "secondCanYA", "secondAsMM", "secondAsYY", "secondIsNN", "secondIsYA", "secondaryIdY", "secondIssYY", "secondCanY", "SecondIsYA", "SecondISY", "secondISYA", "secondIsY", "SecondIsYY", "secondaryIdYY", "secondaryIsMY", "secondaryisMM", "secondIsGREEN", "secondaryIdGREEN", "secondaryIsXX", "firstIsNN", "secondisYY", "secondaryIsYY", "secondAsLL", "secondIdMM", "secondISXX", "secondISMM", "secondaryisYY", "SecondIsMM", "secondIdYY", "secondISGREEN", "secondIssY", "secondIssMY", "firstISYY", "secondISNN", "secondaryIsY", "secondaryIsGREEN", "secondIsLL", "secondISMY", "secondisXX", "SecondIsY", "secondISLL", "secondAsNN", "secondCanMM", "secondIdXX", "SecondISYY", "secondaryisXX", "firstISMM", "firstISLL", "SecondISMM", "secondisY", "secondaryisY", "secondISY", "secondisMM", "firstIsLL", "secondIsXX", "SecondISYA"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        int n;\\n\\n        Scanner sc = new Scanner(System.in);\\n        n = sc.nextInt();\\n\\n        String strn = String.valueOf(n);\\n        int len = strn.length();\\n\\n        String ans;\\n        int sum = 0;\\n        for (int i = 0; i < len; i++) {\\n            sum += Integer.parseInt(strn.substring(i, i + 1));\\n        }\\n        if (n % sum == 0) ans = \"Yes\";\\n        else ans = \"No\";\\n\\n        System.out.println(ans);\\n    }\\n}", "target": "195", "substitutes": {"n": ["nm", "nb", "f", "t", "ren", "ln", "nc", "net", "max", "k", "nan", "na", "no", "o", "ng", "r", "c", "an", "nn", "index", "v", "gn", "en", "s", "dn", "N", "j", "l", "nu", " num", "np", "nl", "cn", "p", "sn", "ns", "ni", "nt", "number", "num", "nr", "z", "d", "m", "ne"], "sc": ["SC", "cmp", "pc", "sys", "pb", "sv", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "out", "sub", "uc", "anc", "sec", "sp", "c", "cc", "ser", "esc", "isc", "spec", "cl", "lc", " Sc", "desc", "dec", "mc", "acc", "scl", "cr", "sel", "ch", "system", "ss", "conv", "dc", "cs", "ec", "tc", "Sc", "scan"], "strn": ["txtne", "brne", "strns", "STRne", "strp", "brn", "Strn", "Strne", "strne", "servne", "urlp", "txtn", "objns", "servln", "objN", "strna", " strp", " strna", "STRp", "objne", "brns", "txtns", "servn", "brln", "STRna", " strns", "Strns", "StrN", "strN", "STRn", "txtln", "urln", " strne", "urlne", "objn", " strN", "urlna", "servns", "strln"], "len": ["fin", " length", "lim", "length", "sl", "vl", "t", "pos", "L", "lf", "ll", "all", "count", "vec", "size", "lan", "en", "cl", " l", "lon", "l", "dl", "hl", "elt", "kl", "deg", "lp", "nl", "wid", "il", "le", "Len", "nt", " clen", "ls", "Length", "li", "num", "ln", "val", "gl", "el"], "ans": ["ras", "ANS", "es", "orts", "anks", "ats", "ums", "aps", "inks", "eds", "ads", "ann", "ols", "oss", "ants", "ins", " means", "outs", "names", "ms", "uns", "aus", "uds", "ks", "an", " scans", "ians", "vs", "angs", "fts", "ags", "amps", "aos", " spans", "ends", "posts", "olds", " names", "ons", "ens", "sam", "ots", "ars", "ams", "vers", "gs", "uploads", "ids", "ns", "ls", "as", "ames", "leans", "ents", "cs", "mas", "actions", "arms", "arts", "ts"], "sum": ["sm", "aw", "zero", "cos", " SUM", "si", "div", "sim", "scale", "mm", "fac", "match", "max", "count", "na", "add", "size", "must", "alph", "sat", "cum", "med", "mu", "cal", "tu", "average", "sta", "sam", "hash", "summary", "Sum", "SI", "su", "acc", "vol", "mean", "total", "hum", "um", "sa", "num", "cache", "set", "sign", "mod"], "i": ["zi", "iter", "I", "ie", "ci", "hi", "\u0438", "si", "ic", "sim", "oi", "ai", "xi", "us", "ei", "base", "is", "ind", "x", "o", "ms", "client", "mi", "cli", "index", "im", "y", "init", "gi", "ix", "q", "ui", "ri", "ki", "j", "l", "start", "qi", "pi", "multi", "ji", "my", "it", "ii", "p", "ex", "ini", "di", "yi", "id", "li", "ti", "bi", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        // \u5165\u529b\\n        int a = Integer.parseInt(sc.next()); // +1\\n        int b = Integer.parseInt(sc.next()); // 0\\n        int c = Integer.parseInt(sc.next()); // -1\\n        int k = Integer.parseInt(sc.next());\\n\\n        // \u51fa\u529b\\n        int num = 0;\\n        int count = 0;\\n        outside: {\\n            for (int i = 0; i < a; i++) {\\n                if (count == k) {\\n                    break outside;\\n                }\\n                num++;\\n                count++;\\n            }\\n            for (int i = 0; i < b; i++) {\\n                if (count == k) {\\n                    break outside;\\n                }\\n                count++;\\n            }\\n            for (int i = 0; i < c; i++) {\\n                if (count == k) {\\n                    break outside;\\n                }\\n                num--;\\n                count++;\\n            }\\n        }\\n        System.out.println(num);\\n    }\\n}\\n", "target": "56", "substitutes": {"sc": ["SC", " SC", "sw", " sp", "pc", "sys", "rc", "sv", "nc", "bc", "gc", "sq", "sk", "sp", "c", " ss", "src", " Sc", "cr", " scr", "ch", "system", "dc", "sa", "cs", "Sc", " sk", "scan"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tint n=sc.nextInt();\\n\t\tint a=n/1000;\\n\t\tint b=n%1000;\\n\t\tint c=0;\\n\t\tif(b==0) {\\n\t\t\tSystem.out.println(c);\\n\t\t}\\n\t\telse {\\n\t\t\tSystem.out.println(1000-b);\\n\t\t}\\n\t}\\n\t\\n}", "target": "184", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "out", "sq", "gc", "uc", "sec", "r", "sp", "cc", "esc", "isc", "spec", "ser", "cl", "lc", "desc", "mc", "acc", "scl", "cr", "sel", "ch", "system", "ss", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["note", "nm", "nb", "t", "natural", "ln", "nc", "net", "nan", "i", "na", "o", "names", "no", "ng", "on", "nn", "v", "en", "N", "j", "l", "nu", "nl", "np", "cn", "p", "sn", "ns", "nt", "nr", "num", "z", "d", "m", "ne", "g"], "a": ["or", "ar", "aa", "f", "at", "t", "A", "ak", "i", "o", "ab", "r", "act", "an", "ba", "ap", "ia", "l", "ta", "p", "ca", "as", "d", "m", "ac"], "b": ["bp", "nb", "f", "bb", "t", "u", "bc", "base", "bf", "i", "ab", "o", "B", "r", "sb", "fb", "ba", "eb", "ib", "y", "v", "bs", "ob", "cb", "j", "l", "rb", "e", "p", "db", "be", "bi", "z", "d", "m", "g"], "c": ["ci", "f", "C", "ct", "t", "u", "bc", "k", "count", "i", "x", "cd", "r", "ce", "cc", "v", "w", "cb", "l", "e", "p", "ca", "cf", "dc", "cs", "z", "d", "m", "tc", "g", "ac"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\nimport java.lang.*;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        int c = sc.nextInt();\\n\\n        int[] arr = {a, b, c};\\n        Arrays.sort(arr);\\n        if (arr[0] == 5 && arr[1] == 5 && arr[2] == 7) {\\n            System.out.println(\"YES\");\\n        }else{\\n            System.out.println(\"NO\");\\n        }\\n\\n    }\\n}\\n", "target": "16", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "scope", "anc", "fc", "sec", "sp", "cc", "esc", "isc", "cl", "ko", "lc", "desc", "ctrl", "mc", "inc", "acc", "scl", "cr", " scr", "ch", "system", "capt", "ck", "conv", "cle", "cs", "tc", "Sc", "scan"], "a": ["aa", "era", "ax", "t", "ai", "A", "au", "i", "na", "ab", "oa", "r", "ao", "ba", "an", "app", "ea", "ga", "ia", "sta", "l", "ta", "admin", "aj", "ae", "aaa", "aff", "af", "apa", "aka", "ca", "as", "la", "alpha", "sa", "ma", "ac"], "b": ["mb", "nb", "bb", "bc", "bis", "bl", "bf", "ab", "B", "r", "fb", "g", "ba", "wb", "rob", "h", "eb", "ib", "by", "y", "beta", "bs", "ob", "cb", "rb", "gb", "br", "db", "be", "erb", "bi", "reb", "sb"], "c": ["ci", "ct", "C", "div", "com", "rc", "bc", "gc", "cv", "cond", "fc", "cd", "cont", "ce", "cc", "cur", "con", "lc", "cb", "co", "crit", "e", "cr", "chain", "etc", "cm", "ca", "cf", "dc", "cp", "cs", "cache", "ec", "d", "tc", "ac"], "arr": ["alg", "iq", "ARR", "ar", "ray", "ack", "div", "img", "ear", "asc", "Array", "dr", "stock", "Ar", "bl", "au", "ord", "expr", "ab", "gr", "alph", "r", "msg", "rep", "n", "tr", "ev", "ix", "pl", "good", "hash", "av", "elt", "ars", "enc", "aaa", "req", "warn", "gb", "br", "compl", "coll", "dict", "agg", "dat", "bar", "ret", "nt", "frac", "db", "array", "conv", "rel", "buf", "list", "val", "attr", "ell", "fr"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int w = sc.nextInt();\\n    int h = sc.nextInt();\\n    int x = sc.nextInt();\\n    int y = sc.nextInt();\\n    int half = 0;\\n    double s = 0;\\n    if((w==2*x)&&(h==2*y)){\\n      half=1;\\n    }\\n    s=0.5*w*h;\\n    System.out.println(s+\" \"+half);\\n  }\\n}", "target": "182", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "uc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "esc", "isc", "cl", "ko", "lc", "irc", "ctl", "ctrl", "desc", "mc", "jp", "inc", "scl", "cr", "capt", "ch", "system", "ck", "st", "cgi", "ss", "conv", "dc", "cle", "cs", "tc", "Sc", "scan"], "w": ["aw", "sw", "word", "wd", "window", "iw", "wal", "wa", "wp", "hw", "ww", "wt", "r", "ew", "weight", "wb", "n", "W", "wi", "ws", "kw", "wh", "we", "l", "wx", "fw", "wid", "win", "nw", "words", "width", "wl", "rw", "d", "work", "wo", "wr"], "h": ["hi", "hh", "hs", "kh", "hw", "k", "height", "ha", "i", "o", "him", "c", "n", "v", "ah", "html", "ht", "rh", "wh", "high", "hash", "hl", "l", "hang", "oh", "he", "hp", "ph", "ih", "H", "hd", "ch", "p", "hal", "b", "hm", "uh", "hr", "hz", "z", "ho", "m", "zh"], "x": ["ux", "fx", "px", "xp", "xd", "ax", "xt", "xx", "xi", "lex", "xf", "ww", "dx", "ox", "i", "n", "xc", "ix", "yx", "wh", "l", "wx", "rx", "p", "xy", "ex", "tx", "X", "width", "z", "act", "m", "el", "xs"], "y": ["ye", "cy", "yl", "py", "sys", "hot", "Y", "ies", "i", "gy", "sy", "z", "ys", "ym", "n", "iy", "yt", "v", "ty", "yx", "j", "ey", "sky", "ly", "my", "ya", "ch", "p", "ny", "xy", "b", "yy", "ry", "m", "ay"], "half": ["broad", "hat", "itch", "slave", "length", "pair", "div", "off", "window", "both", "shift", "dim", "fac", "part", "butt", "side", "tie", "padding", "round", "almost", "mostly", "ael", "alone", "less", "len", "partial", "turned", "PART", "tw", "wh", "sam", "dec", "Half", "kl", "dash", "wid", "quarter", "shake", "bar", "pad", "ff", "sign", "star", "alf", "split", "shared", "cast", "percent"], "s": ["its", "hs", "f", "sl", "t", "js", "eds", "sd", "sh", "is", "sq", "i", "single", "S", "ps", "simple", "r", "sp", "less", "c", "n", "os", "ws", "l", "a", "gs", "e", "p", "b", "rs", "ls", "ds", "cs", "str", "z", "d", "m", "ss", "g", "ts"]}}
{"code": "import java.io.IOException;\\nimport java.io.InputStream;\\nimport java.math.BigDecimal;\\nimport java.util.*;\\nimport java.util.function.IntFunction;\\nimport java.util.function.Supplier;\\nimport java.util.stream.Collectors;\\nimport java.util.stream.IntStream;\\nimport java.util.stream.Stream;\\n\\n\\npublic class Main {\\n    static int[] waru;\\n    static long nn;\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner();\\n        long n=scanner.nextLong();\\n        nn=n;\\n        waru=new int[100_000];\\n        for(int i=0;i<waru.length&&n>1;i++){\\n            //put(i+2);\\n            while(n%(i+2)==0){\\n                //put(format(\"%d\u306f%d\u3067\u5272\u308a\u5207\u308c\u305f\",n,i+2));\\n                waru[i]++;\\n                n/=(i+2);\\n            }\\n        }\\n        //put(Arrays.toString(waru));\\n        put(min(1,0));\\n\\n\\n\\n\\n\\n    }\\n    public static int keta(long a){\\n        int result=0;\\n        while(a>0){\\n            a/=10;\\n            result++;\\n        }\\n        return result;\\n    }\\n    public static long min(long val,int index){\\n        while(index<waru.length&&waru[index]==0){\\n            index++;\\n        }\\n        if(index>=waru.length){\\n            //put(\"val=\"+val);\\n            //put(String.format(\"%d %d\",keta(val),keta(nn/val)));\\n            return Math.max(keta(val),keta(nn/val));\\n        }\\n        //put(format(\"val=%d,index=%d,waru[%d]=%d\",val,index,index,waru[index]));\\n        long min=Long.MAX_VALUE;\\n        long a=1;\\n        for(int i=0;i<=waru[index];i++){\\n            min=Math.min(min(val*a,index+1),min);\\n            a*=index+2;\\n        }\\n        return min;\\n    }\\n\\n    public static int upper_bound(int[] a,int val){\\n        return upper_bound(a,0,a.length,val);\\n    }\\n    public static int upper_bound(int[] a,int l,int r,int val){\\n        if(r-l==1){\\n            if(a[l]>val) return l;\\n            return r;\\n        }\\n        int mid=(l+r)/2;\\n        if(a[mid]>val){\\n            return upper_bound(a,l,mid,val);\\n        }else{\\n            return upper_bound(a,mid,r,val);\\n        }\\n    }\\n    public static int lower_bound(int[] a,int val){\\n        return lower_bound(a,0,a.length,val);\\n    }\\n    public static int lower_bound(int[] a,int l,int r,int val){\\n        if(r-l==1){\\n            if(a[l]<val) return r;\\n            return l;\\n        }\\n        int mid=(l+r)/2;\\n        if(a[mid]<val){\\n            return lower_bound(a,mid,r,val);\\n        }else{\\n            return lower_bound(a,l,mid,val);\\n        }\\n\\n    }\\n\\n\\n    public static int max(int a,int b){\\n        return Math.max(a,b);\\n    }\\n    public static long max(long a,long b){\\n        return Math.max(a,b);\\n    }\\n    public static int abs(int a){\\n        return Math.abs(a);\\n    }\\n    public static long abs(long a){\\n        return Math.abs(a);\\n    }\\n    public static void print(Object object){\\n        System.out.print(object);\\n    }\\n    public static void put(Object object) {\\n        System.out.println(object);\\n    }\\n    public static void put(){\\n        System.out.println();\\n    }\\n    public static String format(String string, Object... args) {\\n        return String.format(string, args);\\n    }\\n}\\n\\nfinal class Scanner {\\n    private final InputStream in = System.in;\\n    private final byte[] buffer = new byte[1024];\\n    private int ptr = 0;\\n    private int buflen = 0;\\n\\n    private boolean hasNextByte() {\\n        if (ptr < buflen) {\\n            return true;\\n        } else {\\n            ptr = 0;\\n            try {\\n                buflen = in.read(buffer);\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            if (buflen <= 0) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    private int readByte() {\\n        if (hasNextByte())\\n            return buffer[ptr++];\\n        else\\n            return -1;\\n    }\\n\\n    private boolean isPrintableChar(int c) {\\n        return 33 <= c && c <= 126;\\n    }\\n\\n    public boolean hasNext() {\\n        while (hasNextByte() && !isPrintableChar(buffer[ptr]))\\n            ptr++;\\n        return hasNextByte();\\n    }\\n\\n    public String next() {\\n        if (!hasNext())\\n            throw new NoSuchElementException();\\n        StringBuilder sb = new StringBuilder();\\n        int b = readByte();\\n        while (isPrintableChar(b)) {\\n            sb.appendCodePoint(b);\\n            b = readByte();\\n        }\\n        return sb.toString();\\n    }\\n\\n    public long nextLong() {\\n        if (!hasNext())\\n            throw new NoSuchElementException();\\n        long n = 0;\\n        boolean minus = false;\\n        int b = readByte();\\n        if (b == '-') {\\n            minus = true;\\n            b = readByte();\\n        }\\n        if (b < '0' || '9' < b) {\\n            throw new NumberFormatException();\\n        }\\n        while (true) {\\n            if ('0' <= b && b <= '9') {\\n                n *= 10;\\n                n += b - '0';\\n            } else if (b == -1 || !isPrintableChar(b)) {\\n                return minus ? -n : n;\\n            } else {\\n                throw new NumberFormatException();\\n            }\\n            b = readByte();\\n        }\\n    }\\n\\n    public int nextInt() {\\n        long nl = nextLong();\\n        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)\\n            throw new NumberFormatException();\\n        return (int) nl;\\n    }\\n\\n    public double nextDouble() {\\n        return Double.parseDouble(next());\\n    }\\n}", "target": "61", "substitutes": {"waru": ["starnu", "WarU", "tarui", "warui", "walU", "warU", "taru", "Warnu", "warnu", " warui", "staru", "warmcu", "tarnu", "warcu", "tarus", "warus", "warmU", " warcu", "starui", "walu", "walus", "warmus", "warmu", "Waru", "tarcu", "Warui", " warus", "starcu", "Warus", "walcu", "Warcu"], "nn": ["nat", "nv", "kn", "NN", "nm", "nb", "wn", "nz", "inn", "nc", "ll", "mn", "nan", "na", " inn", " kn", "pn", "fn", "tn", "CNN", "oln", "dn", "non", " np", "nu", "nl", "enn", "cn", "sn", "ny", "ns", "nt", "nw", "nr", "ln", "nit", "rn"], "scanner": ["Scanner", "canning", " scanning", "Scaner", "serer", "scanning", "scaner", "scannel", "signner", " scanter", "canter", "Scannel", "serner", "signnel", " scaner", "serning", " scannel", "Scanter", "signer", "serter", "caner", "scanter", "canner", "signter"], "n": ["nat", "nv", "nm", "nb", "nz", "t", "network", "nc", "k", "nan", "mn", "na", "ng", "conn", "r", "fn", "h", "pn", "nor", "v", "gn", "dn", "non", "N", "j", "l", "nu", "nl", "np", "cn", "p", "sn", "ny", "ns", "nt", "ni", "number", "num", "nr", "un", "z", "ln", "m", "ne", "rn"], "i": ["zi", "iter", "I", "hi", "ci", "io", "si", "t", "ic", "sim", "ai", "xi", "ei", "is", "ind", "x", "mi", "cli", "key", "index", "im", "y", "init", "gi", "q", "ix", "ui", "MI", "ki", "j", "qi", "pi", "multi", "it", "ii", "gu", "ini", "di", "ni", "id", "li", "ti", "bi", "ims", "m", "iu", "phi", "ip", "asi"]}}
{"code": "import java.util.*;\\n\\nclass Main{\\n\tpublic static void main(String[] $){\\n\t\tSystem.err.println();\\n\t\tScanner s=new Scanner(System.in);\\n\t\tint n=s.nextInt(),m=s.nextInt();\\n\t\tSystem.out.println(n*m==2?3:n*m==6?1:2);\\n\t}\\n}", "target": "236", "substitutes": {"s": ["sc", "sw", "qs", "utils", "sys", "sl", "ats", "sts", "sv", "gets", "aws", "sol", "comm", "bis", "is", "abs", "sq", "i", "ses", "ins", "S", "ms", "ps", "r", "less", "south", "ws", "l", "sam", "gs", "fps", "search", "ns", "rs", "ls", "stats", "xs", "conv", "sa", "cs", "ss", "sb", "se"], "n": ["nm", "nb", "f", "t", "nc", "ll", "mn", "nan", "i", "na", "o", "ng", "r", "c", "nn", "h", "tn", "v", "y", "en", "q", "w", "N", "j", "l", "a", "nu", "nl", "np", "cn", "p", "sn", "b", "ns", "nt", "ni", "num", "z", "d", "g"], "m": ["sm", "mmm", "mt", "f", "t", "u", "mo", "mm", "M", "mn", "k", "i", "o", "ms", "r", "mi", "c", "dm", "h", "mu", "v", "q", "gm", "j", "perm", "l", "mr", "mc", "mx", "p", "tm", "b", "mis", "fm", "z", "d", "g"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tvoid solve() {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint a = scan.nextInt();\\n\t\tint b = scan.nextInt();\\n\t\tfor(int i = 1; i <= 100000; i++) {\\n\t\t\tif((int)(i * 0.08) == a && (int)(i * 0.1) == b) {\\n\t\t\t\tSystem.out.println(i);\\n\t\t\t\treturn;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(-1);\\n\t\tscan.close();\\n\t}\\n\t\\n\tpublic static void main(String[] args) {\\n\t\tnew Main().solve();\\n\t}\\n}\\n", "target": "121", "substitutes": {"scan": ["report", "auto", "sys", "syn", "black", "san", "sim", "Scan", "sv", "se", "re", "scale", "ann", "sync", "send", "reach", "k", "out", "gate", "stat", "na", "find", "skip", "save", "parse", "sum", "gc", "r", "sur", "check", "an", "n", "read", "ser", "filter", "info", "query", "ner", "plan", "char", "clean", "gen", "sin", "store", "system", "can", "run", "search", "spin", "seek", "proc", "row", "in", "set", "m", "sc", "get", "scroll"], "a": ["ar", "aa", "ax", "ra", "al", "at", "ai", "A", "da", "au", "na", "ab", "o", "oa", "ach", "ao", "an", "ba", "am", "s", "ea", "ga", "ia", "sta", "ta", "ae", "aaa", "ca", "ata", "alpha", "la", "sa", "act", "ma", "ama", "ac"], "b": ["mb", "nb", "f", "back", "bb", "t", "u", "bc", "bis", "base", "ab", "o", "B", "r", "body", "fb", "ba", "blue", "c", "n", "wb", "eb", "ib", "lb", "y", "v", "beta", "ob", "l", "rb", "gb", "e", "br", "db", "be", "bi", "d", "g"], "i": ["zi", "iter", "I", "hi", "ci", "io", "si", "ic", "sim", "u", "oi", "ai", "xi", "us", "ei", "iri", "is", "point", "o", "ms", "client", "mi", "err", "n", "cli", "key", "index", "im", "init", "y", "v", "q", "gi", "ui", "ix", "info", "json", "ri", "ki", "j", "batch", "l", "uri", "ik", "qi", "pi", "multi", "ji", "ij", "it", "print", "ii", "my", "ex", "ini", "di", "id", "li", "ti", "bi", "z", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    String s = sc.next();\\n\\n    if (s.equals(\"Sunny\")) {\\n      System.out.println(\"Cloudy\");\\n    } else if (s.equals(\"Cloudy\")) {\\n      System.out.println(\"Rainy\");\\n    } else if (s.equals(\"Rainy\")) {\\n      System.out.println(\"Sunny\");\\n    }\\n  }\\n}", "target": "60", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "sub", "uc", "anc", "sec", "sp", "c", "cc", "ser", "isc", "esc", "cl", "ko", "lc", "desc", "dec", "mc", "enc", "scl", "cr", "capt", "ch", "system", "sel", "conv", "cle", "cs", "ec", "tc", "Sc", "scan"], "s": ["qs", "status", "hs", "sql", "sys", "f", "sl", "t", "ats", "js", "sts", "sv", "gets", "aws", "comm", "bis", "abs", "sq", "i", "S", "simple", "ps", "ms", "r", "sb", "sp", "c", "n", "source", "h", "south", "y", "v", "src", "ends", "ws", "j", "space", "sam", "a", "string", "su", "gs", "b", "ns", "rs", "ls", "stats", "ds", "xs", "str", "ims", "m", "ss", "g", "ts"]}}
{"code": "import java.util.Scanner;\\nclass Main{\\n    public static void main(String[] args) {\\n        \\n        Scanner scan = new Scanner(System.in);\\n        int num = scan.nextInt();\\n        int height = scan.nextInt();\\n        int count = 0;\\n        int i = 0;\\n        for (i = 0; i < num; i++){\\n            int heightI = scan.nextInt();\\n            if(heightI >= height){\\n                count++;\\n            }\\n        }\\n        System.out.println(count);\\n    }\\n}", "target": "145", "substitutes": {"scan": ["report", "sort", "connect", "auto", "sql", "sys", "walk", " scanner", "san", "get", "pass", "Scan", "sv", "se", "re", "ann", "sync", "send", "reach", "gate", "out", "look", "stat", "find", "gc", "save", "parse", "r", "sur", "an", "n", "read", "nn", "by", "scroll", "info", "ner", "cat", "sr", "clean", "char", "store", "sin", "ch", "can", "system", "search", "seek", "cgi", "util", "proc", "conv", "see", "in", "row", "set", "query", "sc", "g"], "num": ["nm", "mon", "nb", "dim", "all", "Num", "mn", "sum", "na", "no", "alph", "n", "cum", "index", "NUM", "cal", "en", "conf", "con", "Number", "orig", "np", "total", "um", "width", "number", "nom", "m"], "height": ["length", "history", "hs", "volume", "div", "window", "style", "radius", "capacity", "th", "hold", "max", "padding", "buffer", "type", "size", "rank", "h", "index", "y", "head", "html", "ht", "Height", "above", "kw", "high", "hash", "hang", "hung", "he", "build", "density", "total", "width", "depth", "row", "bottom", "block"], "count": ["found", "report", "reported", "iter", "length", "flag", "status", "trust", "counter", "Count", "nb", "const", "t", "display", "hold", "ind", "sum", "find", "add", "ctr", "size", "must", "score", "check", "c", "n", "code", "index", "ount", "conf", "state", "summary", "hash", "process", "amount", "acc", "coll", "total", "result", "nt", "id", "number", "depth", "cs", "trace", "list", "cache", "d"], "i": ["zi", "iter", "I", "ie", "ci", "span", "hi", "si", "ic", "t", "sim", "u", "ai", "xi", "ei", "us", "is", "ind", "client", "mi", "c", "n", "index", "v", "y", "im", "gi", "ix", "s", "ui", "q", "ki", "j", "l", "qi", "pi", "multi", "it", "e", "ii", "p", "chain", "b", "ini", "di", "id", "li", "ti", "bi", "m", "iu", "phi", "ip"], "heightI": [" heighti", " heightIII", "heightII", "bottomI", "volumeIII", "bottomU", "HeightU", "depthII", "heightL", " heightU", " heightII", " heightL", "heighti", "heightU", "volumeII", "depthIII", "HeightL", "heightIII", "volumeI", "depthi", "Heighti", "volumei", "HeightI", "bottomL", "bottomi", "depthI"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        \\n        Scanner sc = new Scanner(System.in);\\n        \\n        long a = Long.parseLong(sc.next()) -1;\\n        long b = Long.parseLong(sc.next());\\n        int c = Integer.parseInt(sc.next());\\n        int d = Integer.parseInt(sc.next());\\n        \\n        long a2 = a -(a/c) -(a/d) +(a / lcm(c, d));\\n        long b2 = b -(b/c) -(b/d) +(b / lcm(c, d));\\n        System.out.println(b2-a2);\\n    }\\n    \\n    private static long gcd(long a, long b){\\n        \\n        if(b == 0){\\n            return a;\\n        }else{\\n            return gcd(b, a % b);\\n        }\\n    }\\n    \\n    private static long lcm(long a, long b){\\n        \\n        return (a / gcd(a, b)) * b;\\n    }\\n}", "target": "9", "substitutes": {"sc": ["SC", " SC", "osc", "pc", "sys", "pb", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", " unsc", "asc", "sync", "gc", "sch", "sq", "anc", "fc", "sec", "sp", "cont", "cc", "isc", "esc", "cl", "ko", "lc", "ner", " Sc", "ctl", "desc", "cons", "mc", "inc", "scl", "cr", " scr", "ch", "sel", "ck", "cgi", "ss", "sci", "conv", "cs", "tc", "Sc", "scan"], "a": ["aux", "ar", "aa", "f", "era", "t", "at", "al", "aq", "area", "ad", "all", "A", "va", "ak", "da", "au", "i", "na", "o", "ab", "add", "oa", "x", "r", "ach", "ao", "err", "act", "ba", "n", "an", "am", "h", "ap", "y", "v", "ast", "app", "s", "m", "ea", "w", "ga", "ia", "l", "ta", "ae", "aj", "aaa", "e", "p", "ca", "ata", "alpha", "la", "as", "att", "sa", "ma", "val", "g", "ac"], "b": ["mb", "bp", "nb", "f", "back", "bb", "t", "u", "bc", "bh", "bin", "bis", "base", "bg", "bl", "i", "bound", "o", "ab", "buffer", "B", "r", "sb", "body", "fb", "ba", "n", "wb", "h", "eb", "ib", "beta", "by", "y", "v", "bs", "ob", "lib", "w", "bo", "cb", "j", "l", "rb", "it", "e", "br", "gb", "p", "big", "bar", "db", "to", "be", "bi", "z", "m", "g"], "c": ["ci", "ar", "f", "C", "ct", "cu", "ic", "ctx", "com", "rc", "nc", "k", "i", "uc", "cd", "fc", "r", "col", "err", "n", "cc", "ce", "cur", "v", "ec", "cl", "con", "lc", "cb", "l", "ced", "co", "enc", "e", "cr", "p", "ch", "chain", "etc", "cm", "ca", "cf", "vc", "id", "dc", "cp", "cs", "cache", "z", "m", "tc", "g", "ac"], "d": ["done", "def", "ed", "f", "dd", "ct", "de", "t", "div", "u", "dim", "ad", "sd", "D", "da", "i", "ind", "x", "o", "cd", "dev", "r", "n", "dm", "y", "v", "dn", "del", "w", "l", "dec", "diff", "e", "bd", "delay", "p", "dat", "td", "di", "dL", "dt", "ds", "db", "dist", "dc", "ld", "rd", "z", "m", "default", "g"], "a2": ["ca2", "caTwo", " a1", "an2", "anTwo", " aTwo", "ba1", "baTwo", "aTwo", "a1", "cTwo", "n2", "nTwo", "ba2", "ca102", "n102", "c1", "a102", "c2", "an102"], "b2": ["c0", "bb2", "b0", " b02", "ctwo", " bTwo", "bb0", "jtwo", "cTwo", " b0", "btwo", "c02", "j02", "jTwo", "j2", " btwo", "b02", "bb02", "c2", "bTwo"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        // Your code here!\\n        Scanner sc=new Scanner(System.in);\\n        int n=sc.nextInt();\\n      String po=sc.next();\\n      String po2=po.substring(0,n/2);\\n      String po3=po.substring(n/2);\\n        System.out.println((po2.equals(po3))?\"Yes\":\"No\");\\n    }\\n}\\n", "target": "161", "substitutes": {}}
{"code": "\\n\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.ArrayList;\\nimport java.util.HashMap;\\nimport java.util.InputMismatchException;\\nimport java.util.List;\\nimport java.util.Map;\\n\\npublic class Main {\\n    FastScanner in = new FastScanner(System.in);\\n    PrintWriter out = new PrintWriter(System.out);\\n\\n    public static void main(String[] args) {\\n        new Main().calc();\\n    }\\n    \\n    public void calc() {\\n        int N = in.nextInt();\\n        int ans = 0;\\n        \\n        for (int i = 1; i <= N; i = i * 2) {\\n            ans = i;\\n        }\\n\\n        out.println(ans);\\n        out.close();\\n    }\\n    \\n    class FastScanner {\\n        private InputStream stream;\\n        private byte[] buf = new byte[1024];\\n        private int curChar;\\n        private int numChars;\\n\\n        public FastScanner(InputStream stream) {\\n            this.stream = stream;\\n        }\\n\\n        int read() {\\n            if (numChars == -1)\\n                throw new InputMismatchException();\\n            if (curChar >= numChars) {\\n                curChar = 0;\\n                try {\\n                    numChars = stream.read(buf);\\n                } catch (IOException e) {\\n                    throw new InputMismatchException();\\n                }\\n                if (numChars <= 0)\\n                    return -1;\\n            }\\n            return buf[curChar++];\\n        }\\n\\n        boolean isSpaceChar(int c) {\\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\\n        }\\n\\n        boolean isEndline(int c) {\\n            return c == '\\n' || c == '\\r' || c == -1;\\n        }\\n\\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n        int[] nextIntArray(int n) {\\n            int[] array = new int[n];\\n            for (int i = 0; i < n; i++)\\n                array[i] = nextInt();\\n\\n            return array;\\n        }\\n\\n        int[][] nextIntMap(int n, int m) {\\n            int[][] map = new int[n][m];\\n            for (int i = 0; i < n; i++) {\\n                map[i] = in.nextIntArray(m);\\n            }\\n            return map;\\n        }\\n\\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n\\n        long[] nextLongArray(int n) {\\n            long[] array = new long[n];\\n            for (int i = 0; i < n; i++)\\n                array[i] = nextLong();\\n\\n            return array;\\n        }\\n\\n        long[][] nextLongMap(int n, int m) {\\n            long[][] map = new long[n][m];\\n            for (int i = 0; i < n; i++) {\\n                map[i] = in.nextLongArray(m);\\n            }\\n            return map;\\n        }\\n\\n        double nextDouble() {\\n            return Double.parseDouble(next());\\n        }\\n\\n        double[] nextDoubleArray(int n) {\\n            double[] array = new double[n];\\n            for (int i = 0; i < n; i++)\\n                array[i] = nextDouble();\\n\\n            return array;\\n        }\\n\\n        double[][] nextDoubleMap(int n, int m) {\\n            double[][] map = new double[n][m];\\n            for (int i = 0; i < n; i++) {\\n                map[i] = in.nextDoubleArray(m);\\n            }\\n            return map;\\n        }\\n\\n        String next() {\\n            int c = read();\\n            while (isSpaceChar(c))\\n                c = read();\\n            StringBuilder res = new StringBuilder();\\n            do {\\n                res.appendCodePoint(c);\\n                c = read();\\n            } while (!isSpaceChar(c));\\n            return res.toString();\\n        }\\n\\n        String[] nextStringArray(int n) {\\n            String[] array = new String[n];\\n            for (int i = 0; i < n; i++)\\n                array[i] = next();\\n\\n            return array;\\n        }\\n\\n        String nextLine() {\\n            int c = read();\\n            while (isEndline(c))\\n                c = read();\\n            StringBuilder res = new StringBuilder();\\n            do {\\n                res.appendCodePoint(c);\\n                c = read();\\n            } while (!isEndline(c));\\n            return res.toString();\\n        }\\n    }\\n}\\n", "target": "225", "substitutes": {"in": ["ar", "din", "io", "serv", "IN", "t", "inn", "inner", "raw", "mm", "bin", "net", "ind", "ins", "o", "conn", "r", "rin", "err", "thin", "isin", "init", "en", "info", "con", "ner", "gin", "l", "cin", "In", "sin", "inc", "il", "input", "run", "file", "ini", "rt", "null", "win", "dir", "inf", "reader", "str", "get"], "out": ["writer", "error", "sys", "OUT", "io", "t", "at", "net", "write", "console", "ins", "o", "outs", "client", "conn", "r", "err", "os", "OU", "info", "con", "aos", "output", "w", "Out", "put", "outer", "table", "screen", "co", "it", "print", "p", "ch", "pool", "ex", "file", "nt", "to", "ou", "log", "str", "list", "ln", "cache"], "N": ["I", "NN", "NM", "NC", "C", "AN", "L", "ND", "Na", "NO", "Z", "Num", "NT", "M", "D", "Net", "S", "P", "V", "NR", "Ni", "Number", "NB", "NP", "TN", "NI", "NA", "K", "NH", "NS", "Len", "SN", "No", "Ns", "Sn", "T"], "ans": ["nets", "cas", "ANS", "span", "anks", "offs", "AN", "lines", "anes", "ats", "aps", "faces", "ai", "ann", "ints", "is", "ants", "ports", "ins", " means", "names", "outs", "ms", "ks", "an", "lan", "amps", "acts", "aos", " spans", "lets", "ends", "ons", "ens", "cons", "ars", "ros", "ates", "ids", "can", "NS", "ns", "vals", "Ns", "caps", "pan", "actions", "arts", "ents"], "i": ["io", "us", "o", "pa", "ms", "index", "y", "ix", "l", "pi", "ii", "yi", "id", "ti", "bi", "phi", "ie", "hi", "ci", "ei", "xi", "cli", "init", "s", "ui", "j", "qi", "multi", "my", "ini", "ni", "iter", "si", "ic", "sim", "oi", "inner", "ind", "x", "mi", "gi", "ji", "it", "p", "di", "ims", "zi", "I", "ami", "\u0438", "u", "ai", "me", "ful", "iy", "im", "v", "info", "q", "wi", "ri", "ki", "batch", "a", "ity", "ij", "PI", "li", " I", "iu", "ip"], "stream": ["or", "sw", "open", "path", "status", "Stream", "socket", "speed", "feed", "io", "sl", "network", "dd", "window", "iterator", "collection", "view", "ream", "sync", "console", "loop", "data", "buffer", "client", "link", "size", "cont", "context", "source", "REAM", "h", "read", "wrapper", "resource", "state", "output", "parser", "each", "table", "thread", "sample", "input", "impl", "pool", "form", "chain", "st", "pipe", "engine", "driver", "http", "stack", "ssl", "reader", "log", "cache", "channel", "line", "message"], "buf": ["mb", "Buffer", "uf", "cap", "seq", "img", "fac", "bin", "ref", "cam", "cv", "vec", "data", "abet", "buffer", "tmp", "emb", "pkg", "cur", "wb", "mu", "bytes", "arr", "bs", "box", "cb", "batch", "cat", "rb", "buff", "mem", "br", "norm", "cmd", "queue", "b", "txt", "bar", "db", "conv", "Buff", "temp", "log", "str", "bag"], "curChar": ["CurColor", "priChar", "crByte", "CurCor", " curCharacter", "curColor", "ptrChar", "CurChar", "CurCh", "priColor", " curColor", " curByte", "currentchar", "currentCh", "priCounter", " curCounter", "curByte", " curCor", " curchar", "crChar", "curCh", "curCharacter", "crCharacter", "CurByte", "ptrCharacter", "curCor", "Curchar", "CurCounter", "crCh", "currentCor", " curCh", "curchar", "curCounter", "priByte", "currentChar", "ptrByte", "ptrCh", "CurCharacter"], "numChars": ["NUMChARS", "numCompords", "numChairs", "numCARS", "numCompats", " numchaps", " numchARS", "numCompars", "numStrars", "enumCHators", " numChARS", "numCHats", "NumChARS", "numScats", "numchairs", "numBuffars", "numCharts", "numTrairs", "NUMChars", "numCHators", "numchars", " numChairs", "numCompARS", " numchars", "numClarters", "NumChats", "numScries", "numchats", "numStraps", "numBuffARS", "numChries", "numStrARS", "NUMScats", " numchats", "numScars", "numCars", "numTrARS", "numChaps", "numClators", "numBuffats", " numchords", "numTrarts", "numTrators", "numChators", "enumChators", "NumChars", "enumCharts", "NUMScries", " numChats", "numClars", "NUMScars", " numchairs", "numTrars", "numStrairs", "numchries", "NUMChats", "numChats", "NUMScARS", "numchords", "numCharters", "numCHars", "numCHarts", "numCHarters", "enumCHars", "enumCharters", "NUMChries", "numCords", " numChaps", "NumChords", "enumCHarts", "numCats", "numTraps", "numchARS", "numChARS", "numBuffords", "enumCHarters", "numScARS", "numchaps", " numChords", "numClarts", "numTrarters", "numCHARS", "numChords", "enumChars", "numCHries"], "c": ["cmp", "ci", "pc", "func", "C", "ct", "cu", "t", "ic", "u", "content", "rc", "bc", "abc", "gc", "car", "cond", "anc", "col", "cd", "r", "fc", "z", "cont", "cod", "code", "cc", "ce", "cur", "h", "name", "y", "v", "cl", "con", "tc", "lc", "cat", "l", "arc", "dec", "comment", "char", "mc", "enc", "co", "orc", "cr", "p", "ch", "etc", "b", "ca", "vc", "cf", "conv", "cp", "dc", "cache", "ec", "d", "unc", "cell", "g", "ac"], "nextIntArray": ["nextFloatArray", "nextFloatTable", "nextIntegerTable", "nextLongSet", " nextIntegerArray", " nextIntegerSet", "nextIntTable", "nextIntegerMap", " nextIntSet", "nextIntegerArray", "nextLongTable", "nextFloatSet", " nextIntegerTable", "nextFloatMap", " nextIntegerMap", "nextIntSet", "nextIntegerSet", " nextIntTable"], "n": ["nm", "nb", "t", "network", "ren", "ln", "nc", "net", "mn", "nan", "k", "na", "no", "o", "names", "x", "ng", "size", "r", "on", "len", "an", "nn", "h", "name", "y", "v", "en", "dn", "w", "j", "l", "a", "nu", "nl", "np", "p", "sn", "ny", "ns", "nt", "nw", "nr", "num", "number", "un", "z", "d", "ne", "g"], "array": ["aux", "sort", "archive", "sequence", "length", "record", "pair", "ar", "auto", "section", "ray", "air", "instance", "range", "collection", "ary", "area", "our", "integer", "Array", "sh", "ash", "au", "tmp", "arr", "ape", "object", "ap", "index", "value", "batch", "hash", "a", "table", "force", "store", "chain", "vector", "bar", "audio", "stack", "angle", "export", "result", "row", "trace", "list", "set", "message"], "nextIntMap": ["newIntmap", "nextFloatArray", "newIntArray", "newIntMap", "nextFloatmap", "nextLongIndex", "nextintIndex", "newFloatIndex", "nextintMap", "newFloatmap", "nextintArray", "nextintmap", "nextIntIndex", "nextFloatIndex", "nextFloatMap", "newFloatMap", "newIntIndex", "nextIntmap", "nextLongmap", "newFloatArray"], "m": ["mt", "nm", "mon", "f", "t", "mm", "M", "k", "mn", "o", "ms", "r", "mi", "an", "h", "mu", "y", "v", "im", "man", "w", "j", "rm", "l", "mod", "mc", "mx", "p", "tm", "b", "cm", "mk", "num", "d", "ma", "g"], "map": ["menu", "maps", "window", "tool", "mp", "link", "module", "manager", "ape", "index", "ap", "mat", "app", "master", "MAP", "set", "batch", "allow", "hash", "table", "lock", "mask", "pool", "form", "dict", "file", "apper", "result", "angle", "cp", "row", "list", "cache", "tree"], "next": ["draw", "sequence", "first", "seq", "iterator", "front", "last", "count", "ind", "sec", "code", "cur", "read", "key", "name", "info", "valid", "unique", "prev", "Next", "current", "rand", "chain", "nd", "self", "frame", "get"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tStringBuilder sb = new StringBuilder();\\n\\n\t\tint x;\\n\t\tint i = 0;\\n\\n\t\twhile ( 0 !=  ( x = sc.nextInt() ) ) {\\n\t\t\ti++;\\n\t\t\tsb.append(\"Case \" + i + \": \" + x + \"\\n\");\\n\t\t}\\n\\n\t\tSystem.out.print(sb);\\n\t}\\n\\n}", "target": "97", "substitutes": {}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.io.PrintWriter;\\nimport java.util.StringTokenizer;\\n\\nclass Main {\\n\t\\n    public static void main(String[] args) {\\n\t\tOriginScanner os = new OriginScanner();\\n\t\tPrintWriter pw = new PrintWriter(System.out);\\n\t\t\\n\t\tString s = os.next();\\n\t\tboolean isNo = false;\\n\t\tfor (int i = 0; i < s.length(); i++) {\\n\t\t\tchar c = s.charAt(i);\\n\t\t\tif ((i + 1) % 2 == 0) {\\n\t\t\t\tif (c == 'R') {\\n\t\t\t\t\tisNo = true;\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\telse {\\n\t\t\t\tif (c == 'L') {\\n\t\t\t\t\tisNo = true;\\n\t\t\t\t\tbreak;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tif (isNo) pw.println(\"No\");\\n\t\telse pw.println(\"Yes\");\\n\t\tpw.close();\\n\t}\\n    \\n\tstatic class OriginScanner {\\n\t\tStringTokenizer token;\\n\t\tBufferedReader br;\\n\t\t\\n\t\tpublic OriginScanner() {\\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\\n\t\t}\\n\t\t\\n\t\tString nextLine() {\\n\t\t\tString str = null;\\n\t\t\ttry {\\n\t\t\t\tstr = br.readLine();\\n\t\t\t}\\n\t\t\tcatch (IOException e) {\\n\t\t\t\tSystem.out.println(e);\\n\t\t\t}\\n\t\t\treturn str;\\n\t\t}\\n\t\t\\n\t\tString next() {\\n\t\t\twhile (token == null || !token.hasMoreElements()) { \\n\t\t\t\ttoken = new StringTokenizer(nextLine());\\n\t\t\t}\\n\t\t\treturn token.nextToken();\\n\t\t}\\n\t\t\\n\t\tint nextInt() {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n\t\t\\n\t\tlong nextLong() {\\n\t\t\treturn Long.parseLong(next());\\n\t\t}\\n\t}\\n}", "target": "205", "substitutes": {"os": ["oid", "cos", "fs", "sys", "js", "pos", "obs", "ols", "oss", "OS", "Os", "is", "out", "mos", "o", "ps", "ms", "oS", "osa", "ks", "vs", "bos", "los", "bs", "aos", "oses", "oids", "ots", "ros", "osi", "ot", "ops", "ns", "oos", "ls", "so", "ds", "ios", "dos", "ts"], "pw": ["tpwb", "prews", "presw", " psw", "ppwd", "npwt", " pwt", "prew", "tpwd", "pwt", "pewd", "jpwd", "pwb", "pwl", "ppwa", "jpw", " pwr", "Pwd", "ppw", "pwa", "tpwa", "lpW", "pew", " pwd", "jpW", "Pws", " pwb", "lpwt", "peW", "Pw", "lpwr", "npw", " pW", "ppwb", " pwl", "pwr", "pW", "npW", "tpw", "pws", "Psw", " pws", "jpwl", "prewd", "psw", "pwd", "lpw", "npwr", " pwa", "pewl"], "s": ["its", "sw", "qs", "ashes", "sl", "t", "ats", "js", "sts", "sv", "u", "strings", "is", "sq", "S", "ps", "ms", "r", "sp", "less", "n", "h", "v", "bs", "w", "l", "a", "string", "gs", "p", "b", "ns", "rs", "ls", "cs", "m", "ss", "sb", "ts"], "i": ["iter", "I", "span", "ci", "ie", "si", "ic", "sim", "u", "oi", "ai", "us", "ei", "me", "xi", "ims", "is", "ind", "point", "o", "x", "ms", "client", "mi", "n", "cli", "key", "index", "im", "y", "init", "ix", "q", "ui", "gi", "info", "load", "j", "batch", "uri", "a", "qi", "pi", "multi", "ji", "ij", "it", "e", "my", "ii", "p", "b", "ex", "ini", "di", "id", "li", "in", "ti", "bi", "set", "m", "iu", "ip"], "c": ["cmp", "cap", "cos", "cu", "ct", "C", "t", "ic", "com", "rc", "bc", "k", "cod", "fc", "r", "cont", "ce", "cc", "cur", "cor", "con", "tc", "lc", "cat", "l", "arc", "co", "char", "e", "cr", "ch", "coll", "chain", "ca", "vc", "comp", "conv", "dc", "cp", "cs", "unc", "sc", "ac"], "isNo": ["isN", "ISno", "IsOnly", " isN", "hideNo", "hasNo", "isaYes", "IsNo", "isaNo", "isno", "hasNO", " isYes", "iYes", "hideNO", "isYes", " isNO", "ISNO", "ISNo", "iNo", "isNO", "isOnly", "ino", "IsYes", "iNO", "IsNO", "isaN", "hasYes", "isaNO", "ISN", "hasno", " isno", "Isno", "hideOnly", " isOnly", "hideYes", "ISYes"], "token": ["format", "writer", "error", "iter", "kn", "span", "word", "builder", "t", "at", "trigger", "csv", "tool", "KEN", "node", "wt", "stat", "reset", "no", "buffer", "type", "prototype", "typ", "mbol", "rule", "color", "context", "Token", "key", "label", "name", "tn", "kt", "value", "function", "ser", "operator", "prefix", "local", "parser", "json", "variable", "serial", "processor", "header", "table", "next", "oken", "pattern", "string", "TO", "zer", "char", "normal", "p", "piece", "vector", "txt", "util", "template", "field", "event", "number", "list", "ln", "channel", "block", "tree", "tk"], "br": ["bp", "bre", "bn", "bm", "bc", "bh", "bridge", "dr", "bro", "bl", "bf", "ctr", "gr", "r", "tr", "rus", "shr", "bs", "lr", "bo", "bt", "roller", "wr", "mr", "Br", "pr", "rb", "jp", "brace", "cr", "bd", "kr", "b", "BR", "rel", "nr", "hr", "vr", "buf", "ber", "sr", "fr"], "str": ["stable", "rec", "mt", "ent", "t", "div", "inner", "exp", "dr", "out", "msg", "gr", "r", "sp", "cont", "tr", "cur", "n", "arr", "shr", "v", "del", "Str", "output", "STR", "pr", "string", "char", "enc", "res", "text", "ocr", "print", "cr", "coll", "chain", "st", "ns", "txt", "ret", "conv", "temp", "fr", "g"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\n/**\\n * http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ITP1_5_A\\n * \\n * @author eitatsuro\\n * \\n */\\npublic class Main {\\n    static final String HASHMARK = \"#\";\\n    static final String DOTMARK  = \".\";\\n    \\n    public static void main(String[] args) {\\n        try {\\n            BufferedReader stdReader = new BufferedReader(\\n                    new InputStreamReader(System.in));\\n            \\n            String sStr;\\n            while ((sStr = stdReader.readLine()) != null) {\\n                String[] inputs = sStr.split(\" \");\\n                \\n                int h = Integer.valueOf(inputs[0]);\\n                int w = Integer.valueOf(inputs[1]);\\n                \\n                if (h == 0 && w == 0) {\\n                    break;\\n                    // nothing to do.\\n                }\\n                \\n                for (int i = 0; i < h; i++) {\\n                    for (int j = 0; j < w; j++) {\\n                        if (i < h - 1 && j < w - 1 && 0 <i && 0 < j) {\\n                            System.out.print(DOTMARK);\\n                        } else {\\n                            System.out.print(HASHMARK);\\n                        }\\n                    }\\n                    System.out.println();\\n                }\\n                System.out.println();\\n            }\\n            stdReader.close();\\n        } catch (Exception e) {\\n            System.exit(-1);\\n        }\\n    }\\n}", "target": "19", "substitutes": {"HASHMARK": ["HASHSMAST", "HASHMAST", "HATSMarks", "HATMARK", "HASHDAST", "HASHDarks", "HATMarks", "HASHMarks", "HASHMATCH", "HATSMATCH", "HASHSMATCH", "HATSMAST", "HASHDATCH", "HASHSMarks", "HASHREMarks", "HASHSMARK", "HASHDARK", "HASHREMARK", "HATMAST", "HATSMARK", "HASHREMATCH", "HASHREMAST", "HATMATCH"], "DOTMARK": ["DOTEMMark", "DOTEMarks", "DOTMMark", "DOTEMARK", "DOTMarks", "DOTCMMark", "DOTSMARK", "DOTCMARK", "DOTSMarks", "DOTSMMark", "DOTCMark", "DOTSMark", "DOTMark", "DOTEMark", "DOTCMarks"], "stdReader": ["standardReader", "stdParser", "STDReader", " stdRead", "dReader", "standardParser", "stdWriter", " stdBuilder", "stdBuilder", "dParser", "stdRead", "standardRead", " stdParser", "dBuilder", "standardWriter", " stdWriter", "dWriter", "STDParser", "STDBuilder", "STDRead", "STDWriter"], "sStr": [" sText", "tsString", "fStr", "slRel", "sqRel", " sSt", "sTr", "sRes", "sString", "sqStr", " sTr", "fText", "sSt", " sString", "slStr", "sqTr", "fSt", "lString", " sRel", "slString", "tsStr", "tsSt", "slTr", "sText", "fString", "sqString", "lSt", "tsRes", "lText", " sRes", "lStr", "sRel"], "inputs": ["PUTses", "inputses", "quants", "recognt", "structes", "inputt", "recognes", "quantes", "structs", "PUTents", "recogns", " inputves", "inputes", "PUTS", " inputses", "inputents", "suppses", " inputes", "outputt", " inputents", "outputes", "inputves", "outputs", "recognves", "Inputs", " inputt", "structents", "inputS", "suppents", "PUTs", "quantents", "suppS", "supps", "Inputents", "outputves", "Inputes", " inputS"], "h": ["hi", "history", "hh", "hs", "hex", "change", "bh", "kh", "hw", "ho", "height", "ha", "ish", "ah", "enh", "html", "ht", "rh", "high", "dh", "hl", "hash", "he", "oh", "H", "hd", "hal", "uh", "b", "hm", "hr", "hz", "d", "m", "zh"], "w": ["wine", "sw", "word", "wd", "f", "t", "window", "wal", "wa", "wt", " W", "x", "r", "n", "weight", "v", "W", "s", "q", "widget", "kw", "wh", "l", "we", "fw", "wid", "p", "ch", "b", "win", "ow", "width", "wl", "wall", "z", "d", "m", "ne"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        int K = sc.nextInt();\\n        String S = sc.next();\\n        sc.close();\\n        if (K == 1) {\\n            System.out.println(S.substring(K-1, K).toLowerCase() + S.substring(K));\\n        } else if (K == N) {\\n            System.out.println(S.substring(0, K-1) + S.substring(K-1, K).toLowerCase());\\n        } else {\\n            System.out.println(S.substring(0, K-1) + S.substring(K-1, K).toLowerCase() + S.substring(K, N));\\n        }\\n    }\\n}\\n", "target": "71", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "Sync", "sch", "sq", "gc", "uc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "esc", "isc", "cl", "ko", "lc", "arc", "ctl", "ctrl", "desc", "cons", "screen", "mc", "RC", "inc", "scl", "cr", "capt", "ch", "ck", "ss", "sci", "conv", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "N": ["E", "I", "NN", "R", "NC", "C", "AN", "L", "ND", "Y", "Q", "Z", "A", "NT", "O", "Num", "M", "D", "Node", "F", "P", "V", "n", "NG", "NR", "W", "NL", "NB", "NP", "NI", "NA", "G", "J", "H", "NS", "X", "SN", "T", "Ns", "No", "NE"], "K": ["I", "KING", "Zero", "KC", "R", "C", "PK", "FK", "KE", "VK", "L", "Y", "Q", "NO", "Z", "Sk", "Max", "ID", "O", "M", "k", "D", "CS", "UK", "IND", "IT", "B", "DEC", "UN", "P", "V", "NK", "Kind", "KK", "HK", "Sch", "OK", "SK", "TN", "KR", "AC", "U", "GO", "Key", "NA", "Power", "G", "J", "CL", "Context", "H", "KI", "IC", "IK", "KB", "KA", "CP", "X", "T", "KEY", "KT", "KS", "KN"], "S": ["SSL", "JSON", "R", "FS", "C", "RS", "L", "SH", "SL", "TS", "SS", "SU", "SR", "Z", "OS", "M", "SER", "CS", "SA", "PS", "B", "US", "JS", "VS", "F", "P", "V", "DS", "SB", "s", "IS", "STR", "CSS", "SF", "SI", "GS", "G", "SE", "MS", "H", "LS", "SP", "NS", "ST", "BS", "T", "SQL"]}}
{"code": "import java.util.*;\\nimport javax.lang.model.util.ElementScanner6;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n\\n        // \u5165\u529b\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n\\n        long out = a;\\n        long a1 = a;\\n        long b1 = b;\\n        while (!(out % a == 0 && out % b == 0)) {\\n            out = a1 > b1 ? a1 : b1;\\n            if (a1 < out) {\\n                a1 += a;\\n            }\\n            if (b1 < out) {\\n                b1 += b;\\n            }\\n        }\\n\\n        // \u51fa\u529b\\n        System.out.println(out);\\n    }\\n}", "target": "67", "substitutes": {"sc": ["SC", " SC", " sp", "sys", "se", "sv", "rc", "nc", " sh", "na", "uc", "sk", " scorer", "sp", "c", " rc", " Sc", " enc", "nl", "sel", " scr", "ch", "ss", "cs", "Sc", "ne", " sk", "scan"]}}
{"code": "import java.io.FileNotFoundException;\\nimport java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws FileNotFoundException {\\n\\n\t\t//    \tFile file = new File(\"src/in.txt\");\\n\t\t//    \tScanner sc = new Scanner(file);\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint N = sc.nextInt();\\n\t\tint K = sc.nextInt();\\n\t\tint Q = sc.nextInt();\\n\t\tint[] p = new int[N+1];\\n\t\tArrays.fill(p, K);\\n\t\tint border = 0;\\n\t\tfor(int i=0;i<Q;i++) {\\n\t\t\tint x = sc.nextInt();\\n\t\t\tp[x]++;\\n\t\t\tborder++;\\n\t\t}\\n\t\tfor(int i=1;i<=N;i++) {\\n\t\t\tif(p[i]>border) {\\n\t\t\t\tSystem.out.println(\"Yes\");\\n\t\t\t} else {\\n\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t}\\n\t\t}\\n\t}\\n}", "target": "102", "substitutes": {}}
{"code": "/*\\n *  author : Atul Anand   \\n *  created on : Wed Apr 01 2020\\n */\\n\\nimport java.io.*;\\nimport java.util.*;\\n\\npublic class Main{\\n\\n    public static void main(String[] args) throws IOException {\\n        int a = in.nextInt();\\n        int b = in.nextInt();\\n        String A = \"\";\\n        String B = \"\";\\n        for(int i = 0; i < b; i++){\\n            A += a;\\n        }\\n\\n        for(int i = 0; i < a; i++){\\n            B += b;\\n        }\\n\\n        if(A.compareTo(B) <= 0){\\n            println(A);\\n        }\\n        else{\\n            println(B);\\n        }\\n\\n        in.close();\\n        out.close();\\n    }\\n\\n    static int MIN = Integer.MIN_VALUE;\\n    static int MAX = Integer.MAX_VALUE;\\n    static Reader in = new Reader();\\n    static PrintWriter out = new PrintWriter(System.out);\\n\\n    static void read(int arr[], int N) throws IOException { \\n    \tfor(int i = 0; i < N; i++){ \\n    \t\tarr[i] = in.nextInt(); \\n    \t} \\n    }\\n    \\n    static void read(long arr[], int N) throws IOException { \\n    \tfor(int i = 0; i < N; i++){ \\n    \t\tarr[i] = in.nextLong(); \\n    \t} \\n    }\\n    \\n    static void read(String arr[], int N) throws IOException { \\n    \tfor(int i = 0; i < N; i++){ \\n    \t\tarr[i] = in.next(); \\n    \t} \\n    }\\n    \\n    static void print(Object O) {  \\n    \tout.print(O); \\n    }\\n    \\n    static void println(Object O) { \\n    \tout.println(O); \\n    }\\n    \\n    static void println(int arr[]) { \\n    \tfor(int i = 0; i < arr.length; i++){ \\n    \t\tprint(arr[i]+\" \"); \\n    \t} \\n    \tprintln(\"\"); \\n    }\\n\\n    static void println(int arr[][]) { \\n    \tfor(int i = 0; i < arr.length; i++){ \\n    \t\tprintln(arr[i]); \\n    \t}\\n    }\\n    \\n    static void debug(Object O) { \\n    \tSystem.out.println(O); \\n    }\\n}\\n\\nclass Reader {\\n    BufferedReader reader;\\n    StringTokenizer tokenizer;\\n\\n    Reader() {\\n        reader = new BufferedReader(new InputStreamReader(System.in));\\n        tokenizer = new StringTokenizer(\"\");\\n    }\\n\\n    String next() throws IOException {\\n        while (!tokenizer.hasMoreTokens() ) { \\n            tokenizer = new StringTokenizer(reader.readLine()); \\n        }\\n        return tokenizer.nextToken();\\n    }\\n\\n    int nextInt() throws IOException { \\n        return Integer.parseInt(next()); \\n    }\\n    \\n    double nextDouble() throws IOException { \\n        return Double.parseDouble(next());\\n    }\\n    \\n    long nextLong() throws IOException { \\n        return Long.parseLong(next()); \\n    }\\n    \\n    String nextLine() throws IOException { \\n        return reader.readLine(); \\n    }\\n    \\n    void close() throws IOException { \\n        reader.close(); \\n    }\\n}", "target": "24", "substitutes": {"a": ["ar", "aa", "f", "ax", "t", "at", "al", "area", "va", "au", "AA", "ab", "x", "pa", "r", "ba", "n", "c", "an", "am", "h", "by", "y", "s", "m", "AB", "ia", "l", "ta", "BA", "ae", "aaa", "p", "bar", "ca", "as", "alpha", "sa", "z", "ma", "ac"], "b": ["mb", "bp", "nb", "bb", "t", "base", "bf", "ab", "sb", "ba", "n", "c", "eb", "ib", "by", "beta", "y", "v", "bs", "ob", "cb", "j", "l", "rb", "BA", "br", "p", "bar", "db", "be", "bi", "z", "d", "g"], "A": ["MA", "Alpha", "AS", "I", "PUT", "ATA", "AF", "R", "GA", "AL", "RA", "AN", "AE", "C", "AI", "L", "AV", "Array", "TA", " AA", "M", "AA", "AP", "SA", "S", "HA", "P", "V", "IA", "AU", "AB", "U", "Java", "AC", "AM", "BA", "G", "PA", "AR", "H", "As", "Bar", "This", "T", "AT", "LA", "CA"], "B": ["I", "TB", "R", "GB", "C", "L", "RB", "BM", "Y", "BL", "D", "PB", "BU", "S", "BO", "USB", "BI", "EB", "BB", "BG", "V", "DB", "BT", "BE", "SB", "IB", "AB", "BA", "J", "Bern", "WB", "BR", "Bar", "BC", "BS", "T", "LB", "VB", "Bs", "BER"], "i": ["io", "us", "ice", "ski", "o", "n", "php", "y", "MI", "ix", "you", "pi", "ii", "id", "fi", "ti", "bi", "fire", "phi", "ie", "hi", "ci", "ei", "xi", "cli", "init", "ui", "remote", "j", "uri", "qi", "multi", "my", "ex", "ini", "ni", "set", "m", "iter", "si", "ic", "sim", "oi", "inner", "is", "ind", "x", "mi", "err", "gi", "ji", "it", "e", "di", "ims", "zi", "I", "ami", "\u0438", "ai", "me", "ies", "ful", "c", "iy", "im", "v", "info", "q", "ri", "ki", "ia", "batch", "this", "ity", "ij", "ios", "li", "iu", "ip"], "MIN": ["VERSION", "AN", "SIZE", "IN", "ID", "BL", "NO", "M", "Minimum", "MO", "FAULT", "Min", "MODE", "V", "NR", "NUM", "min", "Mini", "NI", "STAT", "BA", "VALUE", "BY", "KEY", "VAL", "LE"], "MAX": ["MA", "MOD", "VERSION", "Maximum", "SIZE", "Max", "max", "M", "MED", "AX", "MH", "LOCK", "FAULT", "NUM", "MAP", "AGE", "VALUE", "MX", "PA", " max", "X", "FFFF", "KEY", "ALL", "AST", "DD", "EST"], "in": ["or", "iter", "din", "io", "serv", "IN", "ic", "t", "at", "inn", "inner", "re", "mm", "bin", "all", "ro", "from", "is", "ind", "ins", "o", "arg", "buffer", "sum", "client", "add", "r", "up", "n", "lin", "read", "h", "im", "init", "conf", "info", "con", "q", "en", "local", "ri", "l", " din", "doc", "lock", "cin", "In", "inc", "it", "input", "form", "stream", "file", "ini", "ex", "null", "inf", "log", "d", "m", "line", "get", "scan"], "out": ["format", "writer", "error", "report", "exit", "auto", "sys", "OUT", "io", "at", "t", "obj", "inner", "ln", "all", "net", "write", "console", "sum", "o", "outs", "buffer", "client", "conn", "r", "err", "c", "n", "os", "OU", "v", "server", "info", "con", "aos", "output", "w", "Out", "outer", "table", "lock", "screen", "co", "it", "print", "input", "pool", "p", "file", "txt", "ex", "nt", "null", "user", "to", "end", "ou", "log", "list", "cache", "pretty"], "arr": ["repl", "mb", "Array", "Ar", "bl", "expr", "alph", "n", "ix", "rest", "enc", "resp", "dat", "ele", "conv", "num", "row", "def", "hist", "map", "dr", "au", "inst", "vec", "gr", " str", "var", "pl", "j", "hash", "ars", "ag", "vol", "br", "db", "rel", "ptr", "list", "buf", "str", "ARR", "addr", "aa", "obj", "exp", "ll", "x", "par", "save", "arg", "tmp", "r", "rr", "err", "arb", "tr", "ev", "Str", "buff", "aaa", "req", "p", "frac", "nt", "vals", "fr", "z", "val", "attr", "iq", "ar", "ray", "ax", "img", "stock", "data", "ab", "rep", "v", "batch", "pr", "av", "aj", "res", "coll", "dict", "ang", "att", "array"], "N": ["I", "NM", "NN", "R", "NC", "C", "AN", "L", "ND", "Body", "Y", "NO", "Z", "Num", "NT", "M", "D", "S", "Node", "F", "P", "n", "V", "NR", "NG", "Ni", "NL", "Number", "NB", "NP", "TN", "NI", "GN", "NA", "K", "G", "J", "NH", "H", "New", "Note", "NS", "SN", "Length", "T", "Ns", "No"], "O": ["OO", "E", "I", "VO", "R", "RO", "OB", "OUT", "L", "C", "Y", "OS", "Os", "M", "o", "MO", "BO", "DO", "Obj", "F", "OL", "V", "P", "OX", "OU", "OH", "OTO", "OC", "OK", "OG", "Out", "oo", "OE", "U", "GO", "IO", "OR", "SO", "J", "H", " o", "T", "OT", "TO", "OD", "PO"], "reader": ["writer", "iter", "builder", "iterator", "inner", "rc", " parser", "er", "ro", "dr", "linger", "data", "buffer", "r", "rr", "redo", " read", "read", "wrapper", "parser", "holder", "reading", "ner", "rer", "mr", "rx", "rar", "oder", "input", "handler", "driver", "stream", "Reader", "runner", "row", "rl", "loader"], "tokenizer": ["Tokenizer", "tokenger", "Tokenize", "tokenize", " tokenner", " tokenifier", "okenization", "tokenifier", "templateizen", "tokenner", "okenifier", "tokenization", "normalization", " tokenization", "Tokenger", "tokenizen", "normalner", "normalifier", " tokenizen", "templateize", "normalizer", " tokenize", "okenner", "okenizer", " tokenger", "Tokenizen", "templateizer", "templateger"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.io.OutputStream;\\nimport java.io.PrintWriter;\\nimport java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.Collections;\\nimport java.util.StringTokenizer;\\n\\n\\npublic class Main{\\n\t\\n\tstatic class FastReader \\n    { \\n        BufferedReader br; \\n        StringTokenizer st; \\n  \\n        public FastReader() \\n        { \\n            br = new BufferedReader(new\\n                     InputStreamReader(System.in)); \\n        } \\n  \\n        String next() \\n        { \\n            while (st == null || !st.hasMoreElements()) \\n            { \\n                try\\n                { \\n                    st = new StringTokenizer(br.readLine()); \\n                } \\n                catch (IOException  e) \\n                { \\n                    e.printStackTrace(); \\n                } \\n            } \\n            return st.nextToken(); \\n        } \\n  \\n        int nextInt() \\n        { \\n            return Integer.parseInt(next()); \\n        } \\n  \\n        long nextLong() \\n        { \\n            return Long.parseLong(next()); \\n        } \\n  \\n        double nextDouble() \\n        { \\n            return Double.parseDouble(next()); \\n        } \\n  \\n        String nextLine() \\n        { \\n            String str = \"\"; \\n            try\\n            { \\n                str = br.readLine(); \\n            } \\n            catch (IOException e) \\n            { \\n                e.printStackTrace(); \\n            } \\n            return str; \\n        } \\n    }\\n\t\\n\tstatic class Pair\\n    {\\n\t\tint x;\\n\t\tint y;\\n    Pair(int x,int y)\\n    {\\n        this.x = x;\\n        this.y = y;\\n    }\\n    \\n}\\n\tstatic class SegmentTree {\\n        public int[] seg;\\n        public int N;\\n        public int size;\\n\\n        public SegmentTree(int n) {\\n            \\n        \tint h = (int)Math.ceil((double)Math.log(n)/Math.log(2));\\n        \t\\n        \tthis.size = (int)Math.pow(2,h)*2-1;\\n        \tseg = new int[size];\\n        }\\n\\n\\n\\n        public int update(int l, int r, int i, int val) {\\n        \t\\n        \t\\n        \tif(l == r && l == val)\\n        \t{\\n        \t\tseg[i]++;\\n        \t\treturn seg[i];\\n        \t}\\n        \tif(l > r || l == r || val > r || val < l) return seg[i];\\n            int m = (l+r) >>> 1;\\n            \\n            int left = update(l,m,2*i+1,val);\\n            \\n            int right = update(m+1,r,2*i+2,val);\\n            \\n            seg[i] = left+right;\\n            return seg[i];\\n        }\\n\\n        \\n\\n        public int getValue(int l, int r, int i, int ql, int qr) {\\n        \t\\n            if (l > r || ql > qr || l > qr || r < ql) return 0;\\n            if (l == r) {\\n                return seg[i];\\n            }\\n            if (l >= ql && r <= qr) {\\n                return seg[i];\\n            }\\n            int m = (l + r) >>> 1;\\n            return getValue(l, m, 2 * i + 1, ql, qr) + getValue(m + 1, r, 2 * i + 2, ql, qr);\\n        }\\n\\n    }\\n\t\\n\tpublic static int gcd(int a,int b)\\n\t{\\n\t\tif(a == 0) return b;\\n\t\tif(b == 0) return a;\\n\t\t\\n\t\treturn gcd(b, a%b);\\n\t}\\n\t\\n\t\\n\t\\n\tpublic static void main(String[] args) \\n\t{\\n\t\tOutputStream outputStream = System.out;\\n        FastReader sc = new FastReader();\\n        PrintWriter out = new PrintWriter(outputStream);\\n        \\n        int n = sc.nextInt();\\n        int k = sc.nextInt();\\n        \\n        Integer h[] = new Integer[n];\\n        \\n        for(int i = 0; i < n; i++)\\n        {\\n        \th[i] = sc.nextInt();\\n        }\\n        Arrays.sort(h,Collections.reverseOrder());\\n        \\n        long ans = 0L;\\n        for(int i = k; i < n; i++)\\n        {\\n        \tans += h[i];\\n        }\\n        out.println(ans);\\n        out.close();\\n\t}\\n\\n}\\n", "target": "230", "substitutes": {"br": ["bp", "bb", "bre", "bn", "bm", "bc", "bh", "bridge", "ger", "dr", "bro", "bl", "ctr", "gr", "tr", "shr", "pt", "bs", "bsp", "lr", "bt", "wr", "mr", "Br", "pr", "next", "rx", "rb", "jp", "brace", "cr", "bd", "adr", "kr", "ch", "BR", "browser", "nr", "ptr", "rel", "hr", "fr", "buf", "Tr", "ber", "sr", "vr"], "st": ["stable", "sm", "mt", "ist", "sw", "est", "ft", "sth", "sty", "const", "ct", "sl", "t", "th", "sts", "sv", "dr", "sh", "fr", "stat", "inst", "ste", "stri", "tmp", "std", "sp", "stage", "ust", "ut", "pt", "cl", "s", "St", "bt", "sta", "rest", "start", "lt", "cr", "p", "sn", "ST", "rt", "nd", "nt", "stack", "set", "et", "ss", "sb", "se", "ost"], "str": ["stable", "ent", "sw", "hex", "sl", "t", "obj", "dr", "inst", "data", "spr", "ctr", "gr", "msg", "sp", "cont", "tr", "cur", "arr", "shr", "s", "del", "Str", "STR", "j", "comment", "pr", "next", "string", "char", "enc", "vol", "res", "text", "print", "cr", "p", "ns", "txt", "fr", "line", "g"], "x": ["ux", "px", "xp", "xd", "ax", "t", "xx", "xt", "at", " cx", "xi", "lex", " xx", "xa", "dx", "ox", "z", "on", "c", "zx", "index", "key", "v", "value", "xc", "ix", "w", "xe", "rx", "lat", "e", "p", "xy", "tx", "ex", "X", "width", "ry", "d", "el", "xs"], "y": ["ye", "cy", "vy", "py", "t", "Y", "oy", "fy", "gy", "o", "col", "z", "sy", "c", "ery", "key", "iy", "yt", "by", "v", "ty", "yz", "j", "ey", "sky", "ly", "iny", "ot", "e", "p", "xy", "ny", "ch", "my", "yi", "yy", "ry", "ay"], "seg": [" segen", "pege", "Sege", "negs", "parsego", "segm", "peg", "pegs", "parseg", "Seg", " sego", "negen", " segment", "megn", " sege", " seG", "segment", "sego", "sem", "neg", "pego", "psegs", "pegm", "seG", " segm", "segen", "segs", "SeG", "Segs", " segn", "pegn", "cegen", "pseG", "parsegs", "megs", " sem", "psegn", "sege", "pem", "meg", "megm", "cegment", "cegs", "pseg", "negment", "ceg", "segn", " segs", "parsem", "psege"], "N": ["I", "R", "Count", "C", "L", "Z", "Num", "Max", "M", "D", "S", "Node", "F", "P", "V", "NR", "j", "G", "J", "Size", "H", "Name", "X", "Length", "T", "Index"], "size": ["sw", "length", "speed", "storage", "SIZE", "t", "position", "window", "shape", "capacity", "shift", "dim", "scale", "sh", "count", "height", "sum", "data", "z", "timeout", "len", "body", "c", "index", "name", "v", "value", "s", "small", "w", "space", "hash", "pi", "Size", "e", "p", "sn", "total", "offset", "ize", "empty", "id", "width", "number", "num", "set", "g"], "n": ["nm", "nb", "t", "count", "na", "no", "o", "len", "c", "nn", "nor", "v", "dn", "w", "j", "nu", "np", "cn", "p", "sn", "ns", "nt", "number", "num", "nr", "z", "d", "ne", "g"], "h": ["hh", "hs", "t", "bh", "kh", "ho", "sh", "height", "ha", "o", "c", "v", "ht", "w", "high", "hash", "oh", "he", "ih", "H", "hd", "ch", "p", "hz", "z", "d", "g"], "l": [" L", "f", "L", "sl", "t", "u", "ul", "al", "ln", "ll", "len", "ml", "c", "lo", "v", "lr", "pl", "lit", "lc", "j", "dl", "lp", "nl", "lt", "il", "e", "p", "tl", "ol", "le", "ls", "la", "li", "fl", "rl", "d", "el", "g", "ell"], "r": ["or", "ar", "R", "ru", "t", "u", "rc", "re", "er", "ro", "dr", "ur", "rr", "c", "v", "q", "lr", "w", "ri", "j", "mr", "rn", "rx", "rb", "e", "p", "run", "rs", "rt", "rel", "rl", "rd", "ry", "d", "g", "sr", "fr"], "i": ["zi", "iter", "I", "ci", "f", "si", "t", "ic", "at", "sim", "ai", "u", "is", "ind", "mi", "c", "key", "index", "v", "im", "gi", "ix", "init", "ui", "info", "w", "ri", "j", "batch", "pi", "multi", "ij", "it", "e", "ii", "p", "ini", "di", "id", "li", "in", "ti", "bi", "iu", "phi", "g", "ip"], "val": ["Val", "reg", "rol", "f", "sl", "t", "al", "u", "ul", "lv", "L", "ref", "test", "z", "err", "lo", "v", "value", "q", "lr", "valid", "pl", "update", "j", "pr", "kl", "vol", "lt", "it", "e", "sel", "il", "p", "ol", "eval", "le", "tx", "ret", "alpha", "vals", "VAL", "rel", "li", "rl", "nil", "ry", "line", "el", "g", "fr"], "m": ["mt", "em", "f", "t", "pos", "u", "mm", "M", "mn", "ma", "o", "ms", "mi", "mid", "c", "mu", "am", "im", "v", "gm", "w", "j", "mr", "mx", "p", "tm", "cm", "z", "d", "g"], "left": ["or", "L", "pos", "max", "col", "rem", "len", "lo", "down", "min", "low", "w", "ner", "start", "nl", "lt", "p", "le", "top", "rel", "Left", "el", "loc"], "right": ["reg", "success", "back", "ax", "range", "before", "middle", "rc", "max", "cross", "rem", "and", "mid", "down", "correct", "w", "rx", "rest", "Right", "top", "end", "rel", "ight", "row", "self"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint A = sc.nextInt();\\n\t\tint B = sc.nextInt();\\n\t\tint C = sc.nextInt();\\n\\n\t\tSystem.out.print(C + \" \" + A + \" \" + B);\\n\t\t\t\\n\treturn;\\n\\n\t}\\n}", "target": "149", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "syn", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "ko", "lc", "ctl", "ctrl", "mc", "jp", "inc", "scl", "cr", "ch", "system", "ck", "ss", "cle", "cs", "tc", "Sc", "g", "scan"], "A": ["Alpha", "I", "AD", "AF", "AL", "RA", "AN", "AE", "AV", "Array", "AA", "AP", "Abs", "ACT", "SA", "You", "AY", "ACC", "ACE", "The", "ABC", "AU", "IA", "AB", "AH", "AC", "AGE", "ESS", "AR", "H", "An", "Av", "As", "This", "Ant", "CA", "AT", "LA", "AST", "Ax"], "B": ["UB", "E", "FB", "I", "R", "TB", "GB", "OB", "L", "RB", "Y", "BL", "O", "D", "BU", "USB", "BI", "EB", "BB", "P", "V", "DB", "BE", "BF", "IB", "NB", "AB", "N", "Blue", "BA", "G", "J", "b", "BR", "BY", "BC", "T", "MB", "LB", "VB"], "C": ["E", "I", "YC", "R", "CT", "L", "EC", "CE", "Q", "Car", "O", "Cow", "M", "D", "CS", "S", "F", "P", "V", "c", "CB", "CW", "JC", "N", "U", "CD", "G", "CM", "H", "CC", "CON", "BC", "CV", "T", "LC", "CO"]}}
{"code": "import java.util.Scanner;\\npublic class Main{\\n    public static void main(String[]args){\\n        Scanner scan = new Scanner(System.in);\\n        int h,n,sum;\\n        sum=0;\\n        h=scan.nextInt();\\n        n=scan.nextInt();\\n        if(h%n!=0){\\n            sum=1;\\n        }\\n        System.out.println(h/n+sum);\\n    }\\n}", "target": "147", "substitutes": {"scan": ["report", "connect", "auto", "sql", "sys", "walk", "get", "san", "range", "sim", "Scan", "sv", "se", "re", "ann", "sync", "send", "reach", "gate", "out", "gc", "stat", "find", "skip", "parse", "sur", "an", "read", "nn", "ser", "by", "scroll", "ner", "cat", "char", "gen", "sin", "store", "ch", " Scan", "can", "system", "search", "seek", "util", "proc", "row", "in", "set", "query", "sc", "g"], "h": ["hi", "history", "hs", "hh", "pp", "hex", "change", "t", "th", "bh", "kh", "dr", "hw", "sh", "ha", "height", "o", "his", "d", "r", "hu", "y", "v", "ah", "head", "html", "ht", "rh", "w", "l", "hl", "hash", "he", "oh", "ph", "ih", "H", "hd", "uh", "hm", "ow", "hr", "hz", "ho", "m"], "n": ["nm", "nb", "t", "nc", "ll", "net", "mn", "nan", "out", "i", "na", "o", "d", "len", "c", "nn", "nor", "v", "gn", "en", "dn", "w", "N", "j", "l", "nu", "nl", "np", "ot", "cn", "p", "ny", "sn", "b", "ns", "nt", "ni", "nw", "number", "num", "un", "ln", "m", "ne"], "sum": ["sort", "zero", "hist", "si", "sim", "se", "us", "scale", "fac", "match", "max", "sh", "count", "out", "sub", "add", "size", "sat", "weight", "tail", "cum", "index", "mu", "v", "med", "cal", "tu", "set", "asm", "average", "summary", "hash", "sam", "Sum", "mod", "mask", "mem", "vol", "diff", "system", "other", "mean", "total", "result", "hum", "um", "alpha", "sa", "num", "cache", "comment", "m", "ne", "cast"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Arrays;\\nimport java.util.Random;\\nimport java.util.StringTokenizer;\\nimport java.io.IOException;\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.InputStream;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader in = new InputReader(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        TaskA solver = new TaskA();\\n\\n        solver.call(in,out);\\n        out.close();\\n    }\\n\\n    static class TaskA {\\n        public void call(InputReader in, PrintWriter out) {\\n            int x ,y ;\\n            x =in.nextInt();\\n            y =in.nextInt();\\n            if(y>4*x || y%2!=0 || y<2*x)\\n                out.println(\"No\");\\n            else {\\n                out.println(\"Yes\");\\n            }\\n\\n        }\\n    }\\n\\n    static class InputReader {\\n        public BufferedReader reader;\\n        public StringTokenizer tokenizer;\\n\\n        public InputReader(InputStream stream) {\\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\\n            tokenizer = null;\\n        }\\n\\n        public String next() {\\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n                try {\\n                    tokenizer = new StringTokenizer(reader.readLine());\\n                } catch (IOException e) {\\n                    throw new RuntimeException(e);\\n                }\\n            }\\n            return tokenizer.nextToken();\\n        }\\n\\n        public int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n        public long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n\\n\\n    }\\n}", "target": "62", "substitutes": {"inputStream": ["InputSource", "audioStream", " inputSteam", "helloSteam", "outputView", "InputSteam", "audioSocket", "outputSource", "sourceSteam", " inputReader", "inputView", "audioReader", "helloStream", " inputSocket", "inputSource", "sourceReader", "inputReader", "sourceSocket", "inputSocket", "outputSteam", "sourceStream", "InputStream", "audioSteam", "InputView", "inputSteam", "helloView", "helloSource"], "outputStream": ["OutputSteam", "responseSteam", "outputForm", "outputWriter", "connectionstream", "inputStreamer", "connectionStream", "OutputForm", "responseWriter", "writeStreamer", "outputstream", "connectionSteam", " outputForm", "writestream", "writeSteam", "outputSteam", "OutputStream", "OutputWriter", " outputSteam", "connectionStreamer", " outputWriter", "responseStream", "inputstream", "responseForm", "writeStream", "inputSteam", "outputStreamer"], "in": ["or", "iter", "sql", "din", "io", "IN", "ic", "inner", "inn", "from", "mm", "bin", "all", "net", "ro", "er", "raw", "is", "ind", "i", "ins", "add", "r", "config", "on", "rin", "err", "up", "mi", "and", "context", "source", "thin", "by", "init", "conf", "play", "en", "con", "per", "local", "gin", "doc", "l", "cin", "current", "In", "sin", "inc", "mc", "it", "input", "form", "run", "file", "ini", "rt", "null", "win", "id", "ex", "inf", "vin", "log", "el", "get"], "out": ["or", "writer", "report", "sys", "OUT", "io", "t", "at", "flush", "inner", "obj", "all", "net", "write", "gc", "sum", "outs", "o", "client", "conn", "gr", "msg", "r", "err", "up", "n", "name", "os", "v", "OU", "s", "con", "aos", "output", "w", "Out", "this", "j", "pas", "l", "outer", "table", "co", "current", "screen", "res", "it", "print", "p", "can", "pool", "ch", "b", "ex", "rt", "group", "null", "nt", "to", "user", "conv", "ou", "log", "temp", "set", "list", "cache"], "solver": ["Solution", "sol", "ssolve", "soster", " soster", "ssolver", " solution", "Sol", "sololver", "soloster", "ssolution", "ssol", "Solve", "Soster", "solution", "solve", "sololve", " solve", "sololution", "Solver", " sol"], "x": ["fx", "px", "xp", "xml", "f", "ax", "xx", "xt", "xi", "lex", "xf", "xa", "xxxx", "dx", "ox", "i", "act", "c", "n", "h", "index", "xc", "v", "ix", "yx", "q", "w", "l", "wx", "rx", "mx", "my", "e", "p", "xy", "ex", "tx", "X", "z", "d", "m", "ux", "xs"], "y": ["ye", "cy", "yl", "vy", "py", "xx", "Y", "wy", "ies", "oy", "fy", "yer", "i", "gy", "uy", "ym", "sy", "z", "c", "n", "key", "iy", "yt", "dy", "ty", "yx", "ay", "j", "ey", "sky", "ya", "my", "p", "xy", "ny", "axy", "b", "ch", "yn", "yi", "yy", "row", "hy", "yo"], "reader": ["writer", "iter", "builder", "window", "iterator", "inner", "re", "rier", "ro", "er", "dr", "linger", "buffer", "r", "rr", "context", "read", "wrapper", "timer", "river", "parser", "ner", "rer", "mr", "rx", "rar", "oder", "finder", "keeper", "input", "handler", "driver", "worker", "file", "Reader", "runner", "user", "row", "rl", "fr", "query", "loader"], "tokenizer": ["okeniser", "wordifier", "Tokenizer", "serialifier", "tempator", "Tokenoser", "serialzer", "tokenize", "tokenoser", "okeniter", " tokenifier", "serializer", "wordoser", " tokenoser", "okenization", "tempifier", "wordizer", "okenator", "tokenifier", " tokenzer", "okenifier", "tempization", "wordization", "tokenization", " tokenener", "Tokenization", " tokeniser", " tokenization", "Tokenzer", "tokeniter", "wordize", "wordener", " tokenize", "tokeniser", "okenizer", "Tokenifier", "serialer", "tokenator", "Tokenator", "Tokenener", "okenener", "tokener", "okenize", " tokeniter", "worditer", "wordiser", " tokener", "tokenener", "tempizer", "tokenzer", "Tokener"], "stream": ["length", "path", "history", "Stream", "socket", "io", "view", "window", "collection", "iterator", "inner", "console", "data", "parent", "buffer", "message", "body", "progress", "context", "source", "wrapper", "resource", "loader", "peer", "output", "this", "thread", "sample", "input", "pipe", "form", "pool", "file", "stack", "null", "ssl", "row", "channel", "test", "handle"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint n = sc.nextInt();\\n\t\tlong sum = 0;\\n\\n\t\tfor (int i = 1; i <= n; i++) {\\n\t\t\tif (i % 3 != 0 && i % 5 != 0) {\\n\\n\t\t\t\tsum += i;\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(sum);\\n\\n\t\tsc.close();\\n\\n\t}\\n}", "target": "55", "substitutes": {"sc": ["SC", "sm", "osc", "pc", "sys", "syn", "pb", "cu", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "gc", "sq", "sch", "scrib", "uc", "anc", "sec", "sp", "c", "cc", "esc", "isc", "src", "cl", "lc", "arc", "sr", "ctrl", "mc", "nl", "inc", "cr", "capt", "ch", "system", "ok", "ck", "txt", "ss", "cle", "cs", "ec", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "network", "ln", "nc", "net", "mn", "count", "k", "nan", "na", "no", "ng", "size", "c", "nn", "gn", "en", "w", "N", "j", "l", "nu", " N", "np", "nl", "cn", "p", "sn", "ns", "total", "nt", "nw", "number", "num", "d", "m", "ne"], "sum": ["zero", "hist", "square", "mass", "cost", "t", "sim", "ums", "us", "fac", "max", "count", "out", " summed", "lam", "size", "must", "alph", "score", "sat", "full", "cum", "med", "cal", "tu", "average", "summary", "sam", "hash", "good", "Sum", "ram", "su", "mem", "vol", "ass", "ot", "mean", "total", "hum", "um", "gram", "sa", "num", "temp", "mod", "black"], "i": ["zi", "iq", "iter", "I", "sequence", "ci", "hi", "span", "sql", "si", "io", "ic", "sim", "u", "oi", "ai", "ei", "us", "xi", "t", "integer", "base", "is", "ind", "x", "ms", "z", "mi", "h", "mu", "index", "im", "init", "gi", "info", "ix", "q", "ui", "s", "v", "ki", "j", "l", "qi", "pi", "multi", "ji", "it", "ii", "p", "chain", "b", "di", "id", " ii", "li", " I", "bi", "ti", "m", "iu", "phi", "ip"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\n\\npublic class Main {\\n    public static void main (String[]args)throws IOException {\\n        Scanner scanner = new Scanner(System.in);\\n        long x = scanner.nextLong();\\n        long answer=0;\\n        long bigYen=(x-(x%500))/500;\\n        answer+=bigYen*1000;\\n        long extra=x%500;\\n        extra-=extra%5;\\n        answer+=extra;\\n        System.out.println(answer);\\n    }\\n}\\n", "target": "180", "substitutes": {"scanner": ["Scanner", " Scanner", "Scaner", "scaner", " Scaninner", " Scanener", " scanNER", "scanener", "ScanNER", "caninner", "scanrunner", "scanNER", "Scanener", " scanener", "canrunner", " Scanrunner", " scaner", " scanrunner", "caner", "canNER", "canener", " scaninner", "canner", "scaninner"], "x": ["fx", "length", "px", "xp", "f", "ctx", "ax", "t", "xx", "xt", "xi", "xa", "xf", "dx", "ox", "i", "size", "c", "n", "h", "key", "xxxxxxxx", "y", "xc", "v", "ix", "w", "xe", "l", "wx", "rx", "mx", "e", "p", "xy", "ex", "tx", "X", "number", "z", "xxx", "xs"], "answer": ["answered", "remember", "fill", "archive", "sequence", "translation", "aq", "reply", "offer", "turn", "about", "add", "response", "say", "ask", "vote", " answered", "notice", "eni", "just", "approximately", "request", "echo", "value", "uno", "q", "ve", "consider", "term", "question", "asm", "example", "oe", "adj", "Answer", "sample", "energy", "qa", "take", "search", "option", "result", "wer", "array", "number", "support", "see", "poll", " unanswered", "cache", "query", "address", "message"], "bigYen": ["bigyen", "bigyeh", "BigXens", "bigNYen", "bigNYeh", "BigXen", "bigTYens", "bigTYhen", "bigYeh", "bigYeng", "bigTYeng", " bigYeng", "bigTYen", "BigYens", "BigYen", "BigYeng", "bigYhen", " bigYeh", "bigyEN", "BigXeng", " bigYEN", "BigYhen", " bigXEN", "bigXens", "bigXen", "bigNYeng", "bigXEN", "bigYEN", "bigXeng", "BigXhen", "bigXeh", "bigYens", " bigXeh", "bigNYEN", "bigXhen", " bigXeng", " bigXen", "bigyeng"], "extra": ["ras", "error", "exc", "optional", "aux", "important", "t", "div", "added", "alt", "inner", "area", "exp", "max", "offer", "fa", "minus", "i", "data", "ori", "add", "type", "tmp", "size", "err", "context", "entry", "key", "beta", "index", "info", "second", "small", "external", "description", "term", "example", "a", "next", "ta", "meta", "diff", "mx", "secondary", "e", "Extra", "another", "ex", "total", "offset", "empty", "alpha", "detail", "none", "ext", "trace", "missing"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = Integer.parseInt(sc.next());\\n        int x = Integer.parseInt(sc.next());\\n        int t = Integer.parseInt(sc.next());\\n        int answer = 0;\\n        int takoyaki = 0;\\n        while (takoyaki < n) {\\n            takoyaki += x;\\n            answer += t;\\n        }\\n        System.out.println(answer);\\n        sc.close();\\n    }\\n}", "target": "34", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "cu", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "comm", "gc", "sq", "sch", "disc", "scrib", "sub", "uc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "irc", "arc", "ctl", "desc", "mc", "nl", "inc", "scl", "cr", "capt", "ch", "system", "sel", "ck", "cgi", "comp", "dc", "cle", "cs", "tc", "Sc", "scan"], "n": ["nb", "network", "k", "nan", "i", "na", "o", "d", "len", "c", "nn", "h", "y", "v", "en", "w", "N", "j", "l", "nu", "nl", "np", "cn", "p", "sn", "ns", "nt", "nw", "nr", "num", "number", "ln", "m", "g"], "x": ["fx", "px", "xp", "f", "xd", "ax", "xx", "xt", "xi", "xf", "dx", "ox", "i", "c", "y", "v", "xc", "q", "ix", "w", "xe", "j", "l", "wx", "rx", "mx", "p", "xy", "xes", "tx", "ex", "X", "inx", "z", "m", "xs"], "t": ["te", "fort", "at", "u", "wt", "i", "o", "type", "r", "c", "tr", "h", "vt", "pt", "y", "v", "ty", "tw", "s", "tc", "w", "j", "l", "ta", "it", "tt", "ot", "e", "p", "tm", "gt", "b", "st", "txt", "rt", "T", "z", "m", "tf", "ts"], "answer": ["answered", "remember", "archive", "sequence", "onse", "zero", "translation", "aq", "equ", "window", "install", "version", "our", "sense", "reply", "offer", "swers", "response", "know", "say", "ask", "vote", "request", "eni", "approximately", "echo", "value", "uno", "ve", "consider", "ace", "question", "next", "string", "Answer", "energy", "interpret", "search", "accept", "result", "wer", "array", "support", "sole", "poll", "see", "query", "message", "uration"], "takoyaki": ["takoyemi", "takuyaki", "takoriaki", "takoroasi", "takauyake", "takoyasaki", "takontoemi", "takyaii", "takaoyaii", "takuyakis", "takontoasi", "takyake", "takyasaki", "takaoyiki", "takaoyakis", "takauyiki", "takoroaii", "takoroiki", "takoriasaki", "takoriaii", "takoyasi", "takaoyasi", "takaoyaki", "takaoyake", "takuyasi", "takauyasi", "takoroaki", "takuyake", "takauyakis", "takoroake", "takontoiki", "takauyasaki", "takoyake", "takuyasaki", "takontoaki", "takuyemi", "takoroemi", "takyaki", "takauyaki", "takaoyasaki", "takoyaii", "takaoyemi", "takuyaii", "takauyaii", "takoroakis", "takoroasaki", "takoriakis", "takuyiki", "takauyemi", "takoyakis", "takoyiki"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner scan = new Scanner(System.in);\\n    int H = scan.nextInt();\\n    int N = scan.nextInt();\\n    int[] A = new int[N];\\n    for(int i=0; i<N; i++) {\\n      A[i] = scan.nextInt();\\n    }\\n    scan.close();\\n\\n    int sum = 0;\\n    for(int i=0; i<N; i++) {\\n      sum += A[i];\\n    }\\n\\n    System.out.println(H > sum ? \"No\" : \"Yes\");\\n  }\\n}", "target": "95", "substitutes": {"scan": ["sm", "report", "connect", "sys", " scanner", "san", "pass", "sim", "Scan", "sv", "se", "re", "ann", "scale", "sync", "send", "reach", "gate", "out", "gc", "stat", "find", "skip", "save", "parse", "link", "na", "r", "sur", "sp", "check", "an", "n", "read", "nn", "pixel", "scroll", "con", "ner", "cat", "sr", "clean", "start", "store", "sin", "ch", " Scan", "can", "system", "p", "search", "run", "cgi", "util", "proc", "seek", "sche", "row", "in", "see", "query", "sc", "g"], "H": ["I", "HO", "His", "He", "C", "L", "HI", "HE", " h", "Y", "Q", "M", "D", "S", "MH", "HA", "B", "ASH", "F", "P", "V", "h", "OH", "AH", "U", "CH", "K", "TH", "G", "HS", "HD", "NH", "X", "T", "HT", "HC"], "N": ["I", "NM", "NN", "R", "NC", "C", "ND", "L", "AN", "OUT", "NO", "Z", "Num", "NT", "M", "D", "S", "B", "F", "P", "V", "n", "NG", "NR", "W", "NL", "Ni", "NB", "NP", "TN", "NI", "GN", "NA", "K", "G", "J", "NS", "SN", "T", "Ns", "NE"], "A": ["Alpha", "MA", "I", "ATA", "GA", "AN", "C", "AI", "AV", "Array", "M", "Ar", "AA", "AP", "The", "ACT", "SA", "S", "B", "HA", "What", "V", "P", "IA", "AU", "AB", "U", "AC", "AM", "a", "JA", "NA", "BA", "AR", "Ass", "An", "Av", "As", "Args", "AT", "LA", "CA"], "i": ["zi", "ie", "hi", "ci", "I", "history", "iso", "\u0438", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "ei", "us", "ies", "me", "eu", "is", "point", "client", "mi", "err", "cli", "iy", "php", "im", "init", "y", "gi", "q", "ix", "ui", "info", "ri", "ki", "j", "uri", "batch", "this", "a", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "PI", "chain", "ex", "di", "ini", "id", "li", "in", "ti", "bi", "ims", "iu", "phi", "g", "ip"], "sum": ["success", "zero", " SUM", "mass", "si", "sim", "SU", "sh", "base", "count", "ash", "out", "hess", "add", "tmp", "US", "size", "up", "n", "h", "cum", "index", "mu", "v", "average", "summary", "hash", "sam", "a", "good", "Sum", "SI", "su", "mem", "acc", "st", "mean", "total", "result", "hum", "um", "alpha", "sa", "num", "comment", "ho", "UM"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n  public static void main(String args[]) {\\n    Scanner input = new Scanner(System.in);\\n    Integer N = Integer.valueOf(input.nextLine());\\n    if (N % 1000 == 0) {\\n      System.out.println(0);\\n    }\\n    else {\\n      System.out.println(1000 - N % 1000);\\n    }\\n  }\\n}", "target": "184", "substitutes": {"input": [" Input", "inside", "socket", "select", "iterator", "inner", " inputs", "out", "sq", "initial", "focus", "sum", "Input", " inside", "analysis", "parse", "buffer", "source", "SOURCE", "ser", "submit", "upload", "output", "parser", "this", "cin", "start", "current", "sin", "service", "text", "sample", "search", "command", "active", "accept", "proc", "in", "reader", "list"], "N": ["CN", "I", "NN", "NM", "R", "C", "ND", "L", "IN", "AN", "NOTE", "NO", "Z", "NT", "M", "D", "S", "B", "V", "n", "NR", "NUM", "Number", "NB", "NP", "NV", "TN", "NI", "GN", "NA", "K", "J", "Size", "NS", "X", "SN", "FN", "T", "NPR", "NE"]}}
{"code": "import java.util.*;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        for (int i = 1; i < 7; i++) {\\n            int pow = (int) Math.pow(2, i);\\n            if (N == pow) {\\n                int ans = (int) Math.pow(2, i);\\n                System.out.println(ans);\\n                return;\\n            } else if (N < pow) {\\n                int ans = (int) Math.pow(2, i - 1);\\n                System.out.println(ans);\\n                return;\\n            }\\n        }\\n\\n        System.out.println(64);\\n    }\\n}", "target": "225", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "sub", "uc", "sec", "sk", "sp", "c", "cc", "ser", "esc", "isc", "src", "cl", "ner", "desc", "screen", "mc", "nl", "scl", "cr", "sel", "ch", "system", "ss", "cs", "tc", "Sc", "sb", "scan"], "N": ["CN", "I", "NN", "NM", "R", "NC", "C", "L", "Y", "Na", "Z", "Num", "NT", "O", "M", "D", "S", "B", "F", "P", "V", "n", "NG", "NR", "CNN", "Ni", "W", "NB", "NP", "NV", "TN", "NW", "NI", "NA", "K", "G", "Not", "J", "NS", "Ne", "X", "PN", "FN", "T", "Ns", "No", "NE"], "i": ["zi", "iq", "iter", "I", "hi", "ci", "ie", "sql", "si", "io", "ic", "sim", "oi", "ai", "xi", "us", "me", "inner", "is", "ind", "o", "z", "mi", "n", "index", "y", "init", "im", "gi", "ix", "info", "ui", "v", "s", "ri", "ki", "j", "l", "qi", "pi", "multi", "it", "ii", "p", "gu", "di", "ini", "ex", "id", "to", "li", "in", "ti", "bi", "set", "m", "iu", "phi", "ip", "asi"], "pow": ["Pox", "cow", " poy", "Poy", " piv", "pegowe", "cpow", "cowe", "pox", "piv", "peowe", "Pew", "ppowe", "tpow", "POW", " pox", "prew", " prew", "pporial", "reprew", "pegrouch", "repow", "tpiv", "civ", " prouch", "peow", "ppOW", "cpoy", "ppower", "tporial", "pegror", "Pow", "peoy", "ppow", "ppoy", " pew", "peower", "crew", "pew", "power", " powe", "cpowe", "cpror", "cprouch", "cpew", "porial", "Power", "pegow", "repiv", "repowe", "tpowe", "poy", " porial", "Powe", " pOW", "ppiv", "powe", "pror", "ppox", "pOW", "prouch", " pror"], "ans": ["nets", "ANS", "anks", "anners", "offs", "anes", "lines", "ats", "ads", "aps", "eds", "ann", "ols", "idents", "ints", "ants", "ins", "outs", "ms", "orders", "mails", "aus", "an", "ians", "ks", "angs", "lan", "os", "amps", "s", "aos", " spans", "books", "posts", "lets", "olds", "ons", "ens", "cons", "ars", "ates", "can", "ids", "ns", "ls", "ds", "ips", "pan", "arts", "ents"]}}
{"code": "\\nimport java.util.Arrays;\\nimport java.util.Collections;\\nimport java.util.PriorityQueue;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tint[] v = new int[n];\\n\t\tfor (int i = 0; i < v.length; i++) {\\n\t\t\tv[i] = sc.nextInt();\\n\t\t}\\n\t\t\\n\t\tArrays.sort(v);\\n\t\tdouble ans = v[0];\\n\t\tfor (int i = 1; i < v.length; i++) {\\n\t\t\tans = (v[i] + ans) / 2;\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(ans);\\n\t}\\n}", "target": "232", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sac", "sync", "sh", "sch", "gc", "sq", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "ctl", "mc", "enc", "nl", "scl", "cr", "capt", "ch", "ss", "sci", "conv", "cle", "cs", "tc", "Sc", "scan"], "n": ["nv", "nb", "t", "ln", "nc", "net", "mn", "nan", "out", "na", "no", "o", "ng", "c", "nn", "N", "j", "l", "nu", "np", "nl", "cn", "p", "sn", "ns", "nt", "nw", "number", "num", "nr", "z", "d", "m", "ne"], "v": ["ver", "nv", "rev", "env", "f", "tv", "lv", "view", "t", "sv", "csv", "ov", "vi", "inv", "cv", "vp", "o", "r", "uv", "V", "var", "ev", "vs", "c", "qu", "vt", "h", "q", "wire", "where", "w", "ve", "j", "l", "av", "iv", "current", "vv", "pi", "it", "br", "p", "vector", "b", "vm", "vc", "qv", "conv", "m", "val", "g"], "i": ["zi", "iter", "ie", "sequence", "ci", "hi", "I", "ami", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "us", "ei", "inner", "used", "me", "umi", "base", "is", "ind", "point", "ori", "client", "mi", "err", "cli", "im", "y", "info", "ix", "init", "ui", "gi", "s", "ri", "ki", "j", "uri", "batch", "qi", "pi", "multi", "ji", "it", "e", "ii", "PI", "chain", "ini", "inx", "di", "ni", "id", "li", "fi", "ti", "bi", "set", "m", "iu", "phi", "g", "ip"], "ans": ["nets", "ANS", "orts", "anks", "ats", "ads", "aps", "eps", "ann", "sd", "is", "ants", "ins", "outs", "uns", "ms", "als", "anc", "aus", "acs", "ks", "an", "ians", "ups", "vs", "lan", "ones", "os", "s", "amps", "ends", "posts", "asks", "olds", "ons", "ens", "cons", "ars", "ros", "gs", "ows", "can", "ns", "rs", "ls", "as", "nt", "ds", "wan", "cs", "mas", "pan", "arts", "xs", "ents"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n         Scanner sc = new Scanner(System.in);\\n         int n  = sc.nextInt();\\n         int a[] = new int[n];\\n         for(int i= 0; i<n ; i++){\\n                 a[i] = sc.nextInt();\\n         }\\n         double j = 0.0;\\n         for(int i= 0 ; i<n ; i++){\\n             j += (double)1/a[i];\\n         }\\n         System.out.println(1/j);\\n         \\n    }\\n}\\n", "target": "120", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "uc", "ng", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "ctl", "mc", "nl", "scl", "cr", "sel", "ch", "system", "ck", "capt", "ss", "conv", "cle", "cs", "tc", "Sc", "scan"], "n": ["nm", "nb", "ct", "t", "network", "nc", "all", "net", "ll", "mn", "count", "out", "k", "na", "no", "o", "nan", "ng", "names", "on", "len", "c", "an", "nn", "fn", "name", "v", "m", "N", "l", "nu", " N", "np", "nl", "cn", "p", "sn", "ns", "nt", "number", "num", "un", "ln", "ne", "g"], "a": ["aux", "aa", "ai", "area", "wa", "xa", "va", "A", "all", "fa", "da", "au", "sha", "na", "ab", "o", "oa", "ao", "ba", "an", "c", "am", "s", "ea", "ga", "ia", "ta", "ae", "aaa", "apa", "qa", "p", "aka", "b", "ca", "ata", "as", "alpha", "la", "att", "sa", "ma", "ac"], "i": ["io", "iu", "source", "y", "ix", "pi", "ii", "gu", "id", "ti", "bi", "phi", "ie", "hi", "ci", "xi", "ei", "used", "base", "ori", "client", "cli", "init", "ui", "uri", "qi", "multi", "chain", "ini", "set", "m", "iter", "iso", "si", "ic", "sim", "oi", "inner", "eu", "is", "ind", "mi", "err", "gi", "ji", "it", "di", "ims", "zi", "iti", "I", "\u0438", "u", "ai", "me", "ies", "iy", "im", "info", "q", "ri", "ki", "batch", "this", "ity", "ij", "PI", "inx", "li", "point", "ip"], "j": ["jac", "f", "t", "jl", "js", "sd", "k", "out", "kj", "fr", "x", "r", "uj", "c", "h", "jc", "y", "v", "q", "dj", "json", "adj", "l", "aj", "jp", "jo", "jit", "ji", "ij", "J", "jump", "p", "b", "jj", "bar", "db", "dist", "z", "d", "m", "jas", "g", "ja"]}}
{"code": "import java.util.*;\\npublic class Main{\\n\tstatic String SweetsJudge(int k){\\n\t\tfor(int i=0; i<=k/4; i++){\\n\t\t\tif((k-4*i)%7==0)return \"Yes\";\\n\t\t}\\n\t\treturn \"No\";\\n\t}\\n\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tSystem.out.println(SweetsJudge(n));\\n\t}\\n}", "target": "172", "substitutes": {"k": ["f", "t", "kh", "max", "dk", "kk", "ak", "ka", "x", "o", "z", "sk", "ks", "c", "ke", "h", "key", "kid", "y", "v", "kind", "q", "ko", "kw", "j", "ik", "ku", "kl", "K", "mc", "ok", "ck", "p", "kr", "mk", "work", "num", "kj", "m", "km", "g"], "i": ["iq", "iter", "I", "hi", "ci", "ie", "ql", "si", "io", "ic", "sim", "u", "oi", "ai", "us", " j", "is", "ind", "x", "mi", "mu", "index", "im", "init", "gi", "q", "ix", "ui", "ki", "j", "l", "qi", "pi", "multi", "ij", "it", "ii", "gu", "ini", "di", "uu", "id", " ii", "li", "fi", "ionic", "in", "ti", "bi", "m", "iu", "phi", "ip"], "sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sch", "sq", "sub", "uc", "sec", "sp", "c", "soc", "esc", "spec", "isc", "cl", "lc", "desc", "screen", "mc", "acc", "scl", "cr", "capt", "sel", "ch", "sa", "cle", "cs", "ec", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "ln", "nc", "mn", "nan", "na", "no", "ng", "c", "nn", "index", "nor", "gn", "dn", "N", "j", "nu", "nl", "np", "cn", "p", "sn", "ns", "nt", "nw", "ni", "number", "num", "nr", "d", "m", "ne"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int[] a = new int[n];\\n        for (int i = 1; i < n; i++) {\\n            int x = sc.nextInt()-1;\\n            a[x]++;\\n        }\\n        StringBuilder sb = new StringBuilder();\\n        for (int i = 0; i < n; i++) {\\n            sb.append(a[i]).append(\"\\n\");\\n        }\\n        System.out.print(sb.toString());\\n        sc.close();\\n\\n    }\\n\\n}\\n", "target": "12", "substitutes": {"sc": ["SC", "sm", "sw", "ci", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "scrib", "anc", "fc", "sec", "sp", "c", "cc", "cur", "esc", "isc", "cl", "pl", "lc", "arc", "ctl", "ctrl", "co", "mc", "scl", "cr", "sel", "ch", "ck", "capt", "cle", "cs", "ec", "tc", "Sc", "scan"], "n": ["length", "nm", "nb", "f", "t", "network", "ln", "nc", "all", "net", "ll", "mn", "count", "nan", "na", "o", "no", "ng", "len", "c", "nn", "nor", "name", "v", "en", "m", "q", "N", "j", "l", "nu", " N", "np", "nl", "cn", "p", "sn", "norm", "ns", "nt", "nw", "number", "num", "none", "un", "d", "ne", "g"], "a": ["aux", "ar", "auto", "aa", "ack", "ai", "wa", "area", "va", "A", "fa", "da", "au", "sha", "na", "ab", "oa", "ao", "ba", "an", "am", "ap", "ea", "ia", "sta", "isa", "ta", "ae", "aaa", "pi", "b", "ca", "ata", "as", "alpha", "att", "la", "array", "sa", "ee", "act", "ma", "ac"], "i": ["zi", "iter", "ie", "hi", "ci", "I", "\u0438", "si", "io", "ic", "sim", "u", "ai", "xi", "me", "ei", "ims", "is", "ind", "point", "o", "mi", "err", "cli", "iy", "im", "y", "init", "gi", "q", "ix", "ui", "info", "ri", "ki", "j", "uri", "batch", "this", "ity", "qi", "pi", "multi", "ji", "it", "ii", "PI", "ex", "di", "ini", "yi", "id", "li", "ti", "bi", " I", "m", "iu", "phi", "ip"], "x": ["fx", "px", "xp", "ax", "xx", "xt", " xx", " cx", "xi", "xf", "xa", "xxxx", "dx", "ox", "expr", "check", "zx", " ax", "xxxxxxxx", "xc", "y", "v", "ix", "yx", "xe", "wx", "rx", "mx", "xy", "xes", "tx", "ex", "X", "z", "xxx", "ux", "xs"], "sb": ["mb", "sg", "nb", "pb", "bj", "si", "sl", "bb", "bash", "sf", "sv", "bc", "bh", "sd", "sh", "bg", "bf", "sq", "ub", "BB", "rob", "fb", "wb", "abb", "eb", "zb", "lb", "kb", "ib", "SB", "bs", "bsp", "cb", "bt", "sam", "sbm", "rb", "gb", "b", "sa", "erb", "gob", "ssl", "stab", "lp", "rub"]}}
{"code": "import java.util.Scanner;\\n\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int n = scanner.nextInt();\\n        int[] a = new int[n];\\n        for (int i = 0; i < n; i++) {\\n            a[i] = scanner.nextInt();\\n        }\\n        printArray(n, a);\\n        for (int i = 1; i < n; i++) {\\n            int key = a[i];\\n            int j = i - 1;\\n            while (j >= 0 && a[j] > key) {\\n                a[j + 1] = a[j];\\n                j--;\\n            }\\n            a[j + 1] = key;\\n            printArray(n, a);\\n        }\\n    }\\n\\n    private static void printArray(int n, int[] a) {\\n        for (int k = 0; k < n; k++) {\\n            if (k != 0) {\\n                System.out.print(\" \");\\n            }\\n            System.out.print(a[k]);\\n        }\\n        System.out.println();\\n    }\\n\\n}", "target": "69", "substitutes": {"scanner": ["Scanner", "Scaner", "scaner", "statner", "scanisher", "scanener", " scanter", "canter", "Scanisher", "Scanener", " scanener", " scanisher", "statener", "statisher", "statter", " scaner", "Scanter", "caner", "canener", "scanter", "canner"], "n": ["nm", "nb", "t", "network", "ln", "nc", "all", "net", "ll", "mn", "count", "nan", "na", "no", "o", "x", "ng", "size", "r", "on", "len", "g", "c", "an", "out", "nn", "h", "name", "y", "v", "en", "q", "N", "l", "nu", " N", "nl", "np", "cn", "p", "sn", "b", "ns", "nt", "number", "num", "in", "un", "z", "d", "m", "ne"], "a": ["aux", "history", "ar", "auto", "aa", "f", "era", "at", "t", "u", "window", "ai", "wa", "area", "va", "all", "A", "changes", "xa", "fa", "da", "au", "ava", "na", "ab", "o", "oa", "ao", "act", "ba", "an", "am", "c", "h", "v", "app", "s", "m", "ea", "ga", "ace", "ia", "l", "sta", "ae", "aaa", "e", "qa", "p", "another", "aka", "b", "ca", "le", "ata", "as", "alpha", "att", "parts", "array", "sa", "la", "z", "d", "ma", "g", "ac"], "i": ["io", "us", "o", "iu", "ir", "index", "y", "ix", "l", "pi", "ii", "id", "ti", "bi", "phi", "ie", "hi", "ci", "f", "t", "xi", "ori", "progress", "init", "ui", "uri", "ik", "qi", "multi", "ini", "iter", "iso", "si", "ic", "sim", "inner", "is", "ind", "x", "mi", "err", "gi", "it", "di", "in", "ims", "zi", "iq", "I", "ami", "\u0438", "u", "ai", "me", "im", "v", "info", "q", "ri", "ki", "ij", "PI", "li", "point", "ip"], "key": ["ie", "length", "obj", "max", "base", "ole", "sum", "parent", "x", "o", "ek", "size", "ke", "index", "by", "name", "y", "v", "value", "min", "prime", "here", "leader", "pri", "Key", "lock", "next", "char", "start", "keys", "my", "p", "null", "id", "val", "KEY", "row", "str", "ry", "list", "item"], "j": ["jac", "si", "jl", "js", "obj", "ind", "kj", "fr", "x", "o", "oj", "job", "je", "sp", "uj", "h", "jc", "pt", "y", "v", "prime", "s", "ix", "q", "dj", "json", "l", "pr", "ju", "lock", "next", "aj", "jp", "jump", "ji", "J", "ij", "it", "br", "jit", "b", "jj", "row", "bi", "z", "d", "m", "g", "ja"], "k": ["kn", "wk", "ak", "kh", "ka", "dk", "kk", "kj", "unk", "x", "ek", "sk", "ask", "ks", "ijk", "kar", "ke", "kt", "kid", "kind", "q", "ko", "kw", "ik", "tek", "ark", "ku", "kl", "K", "ikk", "uk", "ok", "ck", "kr", "mk", "z", "m", "km", "g", "tk"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void PrintChess(int H,int W){\\n\t\tfor(int i=1;i<H+1;i++){\\n\t\t\tPrintLine(i, W);\\n\t\t}\\n\t}\\n\t//\u4e00\u884c\u51fa\u529b\u30e1\u30bd\u30c3\u30c9\\n\tpublic static void PrintLine(int lineCounter,int W){\\n\t\t//\u5f15\u6570\u306f\u30e9\u30a4\u30f3\u30ab\u30a6\u30f3\u30bf\u3068\u9ad8\u3055\\n\t\tif(lineCounter%2==0){\\n\t\t\tfor(int i=1;i<W+1;i++){\\n\t\t\t\tif(i%2==0){\\n\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t}else{\\n\t\t\t\t\tSystem.out.print(\".\");\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}else{\\n\t\t\tfor(int i=1;i<W+1;i++){\\n\t\t\t\tif(i%2==0){\\n\t\t\t\t\tSystem.out.print(\".\");\\n\t\t\t\t}else{\\n\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\t\\n\t\t}\\n\t\tSystem.out.println(\"\");\\n\t}\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner scanner=new Scanner(System.in);\\n\t\tint H;\\n\t\tint W;\\n\t\t//\u6700\u521d\u306e\u5024\u3092\u683c\u7d0d\\n\t\tH=scanner.nextInt();\\n\t\tW=scanner.nextInt();\\n\t\twhile(H!=0&&W!=0){\\n\t\t\tPrintChess(H, W);\\n\t\t\t\\n\t\t\tSystem.out.println(\"\");\\n\t\t\tH=scanner.nextInt();\\n\t\t\tW=scanner.nextInt();\\n\t\t}\\n\t\tscanner.close();\\n\t\t//System.out.println(\"exit\");\\n\t}\\n\\n}", "target": "131", "substitutes": {"H": ["HO", "High", "R", "RH", "He", "C", "SH", "HH", "L", "HI", "HE", " h", "M", "D", "Host", "MH", "HA", "B", "V", "Head", "h", "OH", "HTML", "HL", "HB", "N", "AH", "Height", "WH", "CH", "TH", "G", "HS", "NH", "X", "HT", "HC", "HQ"], "W": ["I", "Width", "WT", "R", "VW", "L", "DW", "Wh", "EW", "Y", "Win", "M", "S", "B", "WP", "F", "P", "V", "WS", "CW", " w", "SW", "Ws", "Writer", "WA", "MW", "w", "N", "NW", "WH", "WR", "G", "Weight", "X", "BW", "WD", "We", "WC"], "i": ["zi", "iter", "I", "hi", "ci", "ie", "ql", "si", "ic", "sim", "u", "oi", "ai", "us", "me", "iri", "xi", "port", "ind", "ori", "x", "client", "mi", "index", "y", "init", "im", "gi", "ix", "v", "ui", "ri", "ki", "batch", "j", "uri", "qi", "pi", "multi", "it", "my", "ii", " di", "chain", "b", "gu", "ini", "di", "yi", "id", "li", " I", "bi", "ti", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\t\t\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tString W = scan.next();\\n\t\tString w = W.toLowerCase();\\n\t\t\\n\t\tint i = 0;\\n\t\twhile(true){\\n\t\t\tString Ti = scan.next();\\n\t\t\tif (Ti.equals(\"END_OF_TEXT\")) break;\\n\t\t\tString ti = Ti.toLowerCase();\\n\t\t\tif (ti.equals(w)) i++;\\n\t\t}\\n\t\tSystem.out.println(i);\\n\t\t\\n\\n\t}\\n\\n}", "target": "46", "substitutes": {}}
{"code": "import java.util.*;\\npublic class Main {\\n\tstatic Scanner sc = new Scanner(System.in);\\n\tpublic static void main(String[] args) {\\n\t\tint a = sc.nextInt();\\n\t\tint b = sc.nextInt();\\n\t\tint c = sc.nextInt();\\n\t\tint k = sc.nextInt();\\n\t\tSystem.out.println(Math.min(a, k) - Math.max(k - a - b, 0));\\n\t}\\n}", "target": "56", "substitutes": {"sc": ["SC", "cmp", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "uc", "fc", "sec", "sk", "sp", "cc", "esc", "isc", "cl", "lc", "irc", "ctl", "ctrl", "desc", "mc", "inc", "scl", "cr", " scr", "ch", "system", "ck", "cgi", "conv", "sa", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "a": ["aa", "at", "al", "t", "u", "area", "va", "all", "A", "da", "au", "i", "abs", "na", "ab", "x", "pa", "oa", "r", "ao", "ba", "an", "n", "index", "v", "app", "m", "ea", "ia", "sta", "l", "ta", "aj", "ae", "aaa", "p", "ca", "alpha", "la", "as", "sa", "in", "z", "d", "ma", "val", "ac"], "b": ["nb", "f", "bb", "bc", "bf", "ub", "i", "ab", "o", "x", "B", "r", "fb", "g", "ba", "abb", "n", "h", "eb", "ib", "beta", "y", "v", "ob", "cb", "j", "l", "bot", "rb", "e", "p", "db", "be", "bi", "z", "d", "m", "sb"], "c": ["ci", "f", "C", "ct", "ic", "u", "bc", "cd", "z", "r", "n", "cc", "h", "v", "lc", "cb", "l", "e", "p", "cm", "ca", "cp", "ec", "d", "m", "g", "ac"], "k": ["ka", "ak", "max", "dk", "kk", "kj", "kh", "i", "unk", "sk", "ks", "n", "ke", "kar", "cc", "kid", "v", "q", "tc", "ko", "w", "ki", "j", "kw", "l", "ik", "ku", "kl", "K", "mc", "ck", "p", "kr", "mk", "z", "d", "m", "km", "g", "tk", "ac"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint N = sc.nextInt();\\n\t\tint K = sc.nextInt();\\n\\n\t\tdouble dice=1/(double)N;\\n\t\tdouble ans=0;\\n\\n\t\tfor(int i=1;i<=N;i++) {\\n\t\t\tint n=i;\\n\t\t\tdouble m=dice;\\n\t\t\twhile(n<K) {\\n\t\t\t\tn *= 2;\\n\t\t\t\tm /= 2.0;\\n\t\t\t}\\n\t\t\tans += m;\\n\t\t}\\n\\n\t\tSystem.out.println(ans);\\n\\n\t}\\n\\n\\n}", "target": "20", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "out", "gc", "sq", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "lc", " Sc", "ctl", "ctrl", "mc", "nl", "inc", "scl", "cr", "ch", "system", "ck", "ss", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["I", "NN", "NM", "R", "NC", "AN", "C", "L", "Na", "Num", "NT", "M", "D", "S", "P", "V", "NG", "NR", "CNN", "NB", "TN", "NW", "NI", "GN", "NA", "J", "NH", "H", "NS", "X", "SN", "T", "Ns", "No", "KN", "NE"], "K": ["E", "I", "KC", "R", "C", "L", "PK", "KE", "FK", "Q", "Z", "O", "M", "k", "UK", "S", "B", "F", "P", "V", "KK", "SK", "KR", "G", "J", "KI", "KB", "KA", "T", "KS", "KN"], "dice": ["tICE", "disson", "Die", "ddie", "Dice", "ddice", "dICE", " duce", "sdrice", "die", "sdice", "Disson", " dICE", "sdICE", "lice", "duce", "tice", " drice", "Drice", "trice", "sduce", "drice", "lie", "lrice", "tuce", "ddisson", "ddrice", "lisson"], "ans": ["nets", "ANS", "anks", "offs", "checks", "ats", "ads", "aps", "ums", "eds", "ann", "mn", "ants", "ins", "outs", " means", "ms", "uns", "marks", "orders", "an", " scans", "ks", "ians", "vs", "ups", "os", "s", "amps", "ends", "lets", "ons", "ens", "ars", "ams", "ros", "gs", "ows", "ns", "rs", "ls", "as", "ds", "cs", "alls", "arts", "xs", "ents"], "i": ["zi", "iter", "I", "hi", "ci", "ie", "\u0438", "si", "io", "ic", "sim", "u", "ai", "xi", "us", "integer", "is", "ish", "ind", "k", "ori", "x", "mi", "index", "y", "im", "init", "v", "ix", "ui", "ri", "ki", "j", "batch", "l", "ik", "qi", "pi", "multi", "ji", "ij", "it", "ii", "p", "ini", "di", "id", "li", "ti", "bi", "iu", "phi", "ip"], "n": ["nb", "t", "ln", "nc", "net", "k", "nan", "mn", "out", "na", "no", "names", "size", "an", "c", "nn", "name", "gn", "en", "w", "j", "a", "nu", "np", "pi", "nl", "cn", "sn", "b", "ns", "ni", "nw", "nt", "nr", "num", "z", "d", "ne", "g"], "m": ["sm", "mmm", "met", "mt", "om", "em", "nm", "t", "mo", "mm", "M", "mn", "k", "ma", "ms", "pm", "r", "md", "mi", "c", "dm", "arm", "an", "med", "mat", "im", "v", "y", "s", "man", "gm", "rm", "perm", "l", "mr", "mc", "mem", "lem", "mx", "p", "tm", "cm", "um", "d", "km", "g"]}}
{"code": "import java.util.*;\\npublic class Main{\\n    public static void main(String [] args){\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        int[] A = new int[N];\\n        for(int i = 0; i < N; i++){\\n            A[i] = 0;\\n        }\\n            for(int i = 1; i <= N; i++){\\n                int a = sc.nextInt();\\n                A[a-1] = i;\\n            }\\nfor(int i =0;i<N;i++){\\nSystem.out.print(A[i] + \" \");\\n\\n    }\\n}\\n}\\n", "target": "227", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", " Sc", "ctl", "desc", "dec", "mc", "scl", "cr", "capt", "ch", "sel", "ck", "ss", "sci", "dc", "cle", "cs", "tc", "Sc", "scan"], "N": ["I", "NM", "NN", "NC", "C", "ND", "L", "AN", "Y", "Q", "NO", "Na", "Num", "NT", "Z", "M", "D", "Net", "S", "B", "F", "NG", "V", "n", "P", "NR", "Ni", "NL", "NB", "NP", "ANY", "TN", "NI", "GN", "NA", "K", "G", "J", "H", "NS", "Ne", "X", "SN", "T", "Ns", "No", "NE"], "A": ["Alpha", "E", "I", "R", "AF", "GA", "C", "L", "Y", "AV", "Array", "M", "D", "AA", "AP", "The", "ACT", "SA", "S", "B", "HA", "What", "P", "V", "AU", "AB", "U", "AC", "EA", "AM", "JA", "NA", "K", "BA", "G", "Answer", "AR", "H", "VA", "An", "As", "X", "This", "RAM", "All", "AT", "LA", "CA"], "i": ["io", "o", "iu", "n", "index", "php", "y", "ix", "iii", "pi", "ii", "yi", "id", "fi", "ti", "bi", "phi", "ie", "hi", "ci", "f", "t", "xi", "ei", "client", "cli", "init", "ui", "j", "uri", "qi", "multi", "ini", "ni", "m", "iter", "span", "si", "ic", "sim", "oi", "is", "ind", "x", "mi", "gi", "ji", "it", "p", "di", "to", "in", "zi", "I", "ami", "u", "ai", "c", "iy", "im", "v", "info", "q", "ri", "ki", "ia", "ity", "ij", "PI", "li", "point", "ip"], "a": ["ita", "zi", "ami", "aa", "si", "t", "at", "ai", "area", "wa", "xa", "va", "ka", "fa", "da", "au", "ma", "sha", "na", "o", "x", "ab", "ao", "c", "ba", "ia", "j", "l", "sta", "isa", "ta", "aj", "aaa", "e", "ac", "b", "ja", "as", "la", "alpha", "sa", "bi", "z", "d", "m", "g", "asi"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.LinkedList;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t    LinkedList<String> stack = new LinkedList<String>();\\n\t\t\\n\t\ttry {\\n\t\t\tString[] param = in.readLine().split(\" \");\\n\t\t\t\\n\t\t\tint i = 0;\\n\t\t\twhile (i < param.length) {\\n\t\t\t\twhile ((param[i].equals(\"+\") == false)\\n\t\t\t\t\t\t&& (param[i].equals(\"-\") == false) && (param[i].equals(\"*\") == false)) {\\n\t\t\t\t\tstack.push(param[i]);\\n\t\t\t\t\ti++;\\n\t\t\t\t}\\n\t\t\t\tint b = Integer.parseInt(stack.pop());\\n\t\t\t\tint a = Integer.parseInt(stack.pop());\\n\t\t\t\t\\n\t\t\t\tif (param[i].equals(\"+\")) {\\n\t\t\t\t\tstack.push(String.valueOf(a + b));\\n\t\t\t\t} else if (param[i].equals(\"-\")) {\\n\t\t\t\t\tstack.push(String.valueOf(a - b));\\n\t\t\t\t} else {\\n\t\t\t\t\tstack.push(String.valueOf(a * b));\\n\t\t\t\t}\\n\t\t\t\ti++;\\n\t\t\t}\\n\t\t\t\\n\t\t\tSystem.out.println(stack.pop());\\n\t\t} catch (NumberFormatException e) {\\n\t\t\t// TODO Auto-generated catch block\\n\t\t\te.printStackTrace();\\n\t\t} catch (IOException e) {\\n\t\t\t// TODO Auto-generated catch block\\n\t\t\te.printStackTrace();\\n\t\t}\\n\t}\\n}", "target": "114", "substitutes": {"in": ["f", "din", "serv", "OUT", "IN", "inn", "inner", "from", "bin", "is", "out", "ins", "add", "std", "r", "on", "rin", "err", "up", "check", "n", "source", "thin", "isin", "name", "init", "conf", "en", "info", "con", "nin", "gin", "l", " din", "doc", "cin", "In", "world", "input", "stream", "file", "ini", "proc", "as", "user", "inf", "reader", "log", "get"], "stack": ["ack", "storage", "back", "collection", "scale", "parse", "pins", "config", "function", "load", "summary", "thread", "sample", "st", "conv", "acks", "white", "view", "console", "base", "loop", "runtime", "cli", "var", "layer", "table", "string", "store", "via", "pop", "push", "ops", "chain", "stream", "list", "cache", "str", "reported", "sequence", "history", "upper", "fake", "func", "hex", "style", "shape", "exp", "params", "struct", "scope", "options", "state", "local", "pack", "queue", "frac", "proc", "top", "trace", "wait", "tree", "slice", "window", "data", "buffer", "stage", "check", "context", "Stack", "info", "this", "batch", "track", "space", "array"], "param": ["prom", "met", "pai", "attribute", "view", "range", "tag", "recomm", "project", "mm", "model", "params", "member", "par", "arg", "parse", "col", "config", "pm", "rem", "sp", "rank", "check", "request", "Parameter", "prop", "key", "index", "dm", "pixel", "im", "cal", "argument", "info", "prefix", "pri", "query", "batch", "Param", "process", "method", "char", "ram", "mem", "jp", "property", "req", "tem", "input", "p", "form", "command", "comp", "proc", "template", "detail", "cp", "num", "aram", "row", "meter", "channel", "block"], "i": ["zi", "I", "menu", "ci", "history", "hi", "status", "ami", "\u0438", "si", "io", "ic", "sim", "u", "ai", "ei", "xi", "me", "exp", "is", "ori", "x", "o", "client", "copy", "mi", "cli", "mu", "index", "im", "init", "gi", "info", "ix", "y", "ui", "remote", "s", "json", "ri", "this", "j", "uri", "qi", "pi", "multi", "ji", "it", "ij", "ii", "print", "p", "chain", "ini", "di", "id", "li", "conv", "fi", "ti", "bi", "m", "iu", "phi", "g", "ip"], "b": ["bp", "nb", "pb", "bb", "t", "u", "bc", "bg", "bound", "o", "ab", "B", "r", "g", "fb", "ba", "n", "c", "wb", "h", "beta", "ib", "y", "v", "bs", "ob", "cb", "bt", "j", "l", "rb", "e", "gb", "p", "bar", "db", "be", "erb", "bi", "z", "d", "m", "sb"], "a": ["aux", "ar", "aa", "f", "at", "t", "ai", "area", "wa", "xa", "va", "A", "da", "au", "ma", "sha", "na", "o", "pa", "data", "oa", "ao", "ba", "an", "am", "c", "h", "ea", "w", "ga", "ia", "j", "sta", "ta", "aj", "aaa", "e", "apa", "p", "ca", "alpha", "la", "to", "as", "sa", "d", "m", "ac"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        final Scanner sc = new Scanner(System.in);\\n\\n        int N = Integer.parseInt(sc.next());\\n        int[] H = new int[N];\\n        int highest = 0;\\n        int count = 0;\\n\\n        for (int i = 0; i < N; i++) {\\n            H[i] = Integer.parseInt(sc.next());\\n            if (i == 0) {\\n                highest = H[i];\\n                count++;\\n            } else {\\n                if (H[i] >= highest) {\\n                    count++;\\n                    if (H[i] > highest) {\\n                        highest = H[i];\\n                    } else {\\n\\n                    }\\n                } else {\\n\\n                }\\n            }\\n        }\\n        System.out.print(count);\\n    }\\n}", "target": "7", "substitutes": {"sc": ["SC", " SC", "osc", "pc", "sys", "usc", "sv", "rc", "nc", " unsc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "src", "cl", "lc", "irc", " Sc", "arc", "ctl", "desc", "dec", "mc", "scl", "cr", " scr", "ch", "sel", "capt", "ss", "sci", "dc", "cle", "cs", "tc", "Sc", "scan"], "N": ["I", "NN", "NM", "NC", "C", "ND", "L", "Y", "Na", "NO", "Num", "NT", "M", "D", "S", "Node", "F", "P", "V", "n", "NR", "Ni", "NB", "NP", "TN", "NI", "GN", "NA", "K", "NH", "NS", "Len", "SN", "Length", "T", "Ns", "Sn", "No", "NE"], "H": ["I", "High", "RH", "His", "Handler", "He", "HH", "HI", "HE", "AV", "Hash", "HTTP", "O", "M", "D", "Host", "The", "MH", "HA", "Hz", "B", "F", "P", "V", "Th", "Head", "h", "Help", "HTML", "OH", "W", "HP", "HL", "MI", "HB", "U", "History", "Where", "DH", "GO", "CH", "TH", "K", "G", "HS", "J", "HD", "NH", "Hi", "X", "Length", "Header", "T", "HT", "HC", "HQ"], "highest": ["actual", "MAX", "history", "upper", "hist", "best", "volume", "tails", "hs", "Maximum", "Latest", "view", "HI", " strongest", "latest", "largest", "hold", "base", "height", "last", "Higher", "worst", "single", "stretched", "FINEST", "maximum", "h", "wrapper", "historic", "popular", "higher", "increasing", "las", "above", "peak", "high", "prev", "strong", "via", "hest", "that", " Highest", "most", "meet", "older", "target", "alpha", "graph", "Hig", "HER", "sofar", "major", "lift", "reverse", "handle"], "count": ["found", "close", "report", "length", "history", "success", "flag", "status", "counter", "Count", "nb", "ct", "C", "t", "match", "stat", "sum", "find", "add", "ctr", "cond", "message", "size", "score", "cont", "code", "c", "n", "index", "ount", "conf", "scroll", "info", "state", "summary", "hash", "force", "contact", "amount", "print", "continue", "coll", "child", "mount", "total", "result", "nt", "number", "num", "depth", "trace", "list", "frequency", "follow", "draw", "test", "cast", "call"], "i": ["zi", "I", "ie", "ci", "f", "\u0438", "si", "io", "ic", "sim", "u", "us", "xi", "ai", "ei", "is", "ind", "point", "ori", "x", "o", "z", "mi", "err", "cli", "key", "index", "name", "init", "im", "y", "v", "ix", "gi", "ui", "info", "q", "s", "ri", "ki", "j", "batch", "l", "uri", "a", "qi", "pi", "multi", "ji", "ij", "it", "ii", "p", "chain", "b", "gu", "di", "ini", "id", "to", "li", "fi", "ti", "bi", "set", "list", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint A = scan.nextInt();\\n\t\tint B = scan.nextInt();\\n\t\tint T = scan.nextInt();\\n\\n\t\tint times = T /A;\\n\t\tint ans = times * B;\\n\\n\t\tSystem.out.println(ans);\\n\t}\\n}", "target": "4", "substitutes": {"scan": ["report", "auto", "sql", "sys", "black", "san", "sim", "watch", "Scan", "sv", "se", "re", "ann", "bin", "sync", "send", "reach", "is", "out", "gate", "find", "sum", "save", "skip", "parse", "r", "sur", "check", "an", "n", "read", "nn", "scroll", "info", "set", "ner", "cat", "clean", "char", "gen", "sin", "ch", "can", "system", "search", "seek", "cgi", "util", "row", "in", "see", "list", "z", "query", "sc", "g"], "A": ["E", "AS", "I", "R", "AF", "AL", "C", "AN", "L", "Y", "Z", "M", "D", "AA", "AP", "The", "SA", "S", "F", "P", "V", "IA", "AB", "N", "AC", "a", "K", "G", "AR", "H", "An", "As", "X", "CA", "AT", "Ax"], "B": ["I", "R", "TB", "C", "L", "Y", "O", "M", "D", "BU", "S", "BI", "EB", "BB", "P", "V", "CB", "DB", "BT", "BF", "IB", "NB", "AB", "N", "Blue", "Reb", "BA", "G", "J", "WB", "b", "BC", "BS", "LB", "VB", "Bs"], "T": ["E", "I", "TV", "R", "TB", "C", "L", "t", "TS", "Y", "TT", "Q", "Z", "O", "TA", "M", "D", "S", "F", "P", "V", "TF", "TC", "W", "AB", "N", "TN", "U", "K", "G", "J", "H", "GT", "TR", "X", "AT", "TP", "TM"], "times": ["time", "values", "events", "Times", "checks", "jobs", "maps", "tim", "TS", "types", "aps", "t", "cases", "reports", "casts", "tests", "names", "outs", "versions", "seconds", "ups", "options", "ones", "sets", "amps", "terms", "books", "ations", "cars", "places", "errors", "imes", " Times", "things", "caps", "actions", "arts", "rates", "ts"], "ans": ["ran", "nets", "trans", "ANS", "ions", "Times", "AN", "anes", "ats", "services", "types", "aps", "eps", "ann", "ants", "ins", "marks", "outs", "ks", "an", "os", "sets", "s", "amps", "rans", "asks", "ens", "ots", "ars", "ros", "cars", "ns", "ls", "stats", "ents", "caps", "actions", "reads", "arts", "rates", "xs", "ts"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.Stack;\\nimport java.util.regex.Matcher;\\nimport java.util.regex.Pattern;\\nimport java.util.Queue;\\nimport java.util.ArrayDeque;\\nimport java.util.Map;\\nimport java.util.LinkedList;\\n\\npublic class Main{\\n  public static void main(String[] args) throws IOException {\\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n    String[] line = br.readLine().split(\" \");\\n    int n = Integer.parseInt(line[0]);\\n    int q = Integer.parseInt(line[1]);\\n    LinkedList<String> queue = new LinkedList<String>();\\n    int time = 0;\\n    int cnt = n;\\n    Map<String, Integer> map = new HashMap<>();\\n\\n    for(int i = 0; i < n; i++){\\n      line = br.readLine().split(\" \");\\n      map.put(line[0], Integer.parseInt(line[1]));\\n      queue.add(line[0]);\\n    }\\n\\n    while(true){\\n      String x = queue.poll();\\n      if(map.get(x) > q){\\n        time += q;\\n        map.put(x, map.get(x) - q);\\n        queue.add(x);\\n      }else{\\n        time += map.get(x);\\n        map.put(x, time);\\n        System.out.println(x + \" \" + map.get(x));\\n        n--;\\n      }\\n      if(n == 0)  break;\\n    }\\n  }\\n}", "target": "231", "substitutes": {"br": ["bp", "div", "bn", "bm", "bh", "bridge", "dr", "bro", "bg", "bl", "bf", "ctr", "gr", "r", "err", "tr", "shr", "bs", "bsp", "lr", "yr", "bt", "mr", "Br", "pr", "rb", "cr", "bd", "driver", "kr", "b", "BR", "pre", "browser", "rel", "nr", "hr", "buf", "fr", "block", "ber", "sb", "wr", "vr"], "line": ["note", "iter", "fill", "record", "liner", "word", "LINE", "section", "ine", "zone", "dd", "email", "profile", "range", "lines", "style", "se", "inline", "part", "node", "port", "side", "phrase", "online", "Line", "link", "parse", "ne", "train", "rule", "lin", "lo", "page", "device", "shell", "eline", "entity", "ve", "column", "l", "lock", "frame", "co", "char", "string", "piece", "pipe", "chain", "stroke", "le", "detail", "ide", "user", "row", "log", "comment", "ln", "query", "block", "point", "cell", "ip", "call"], "n": ["nb", "f", "t", "u", "ln", "nc", "count", "out", "k", "nan", "na", "o", "no", "size", "r", "on", "len", "c", "nn", "h", "name", "nor", "v", "en", "s", "w", "N", "j", "l", "a", "nu", " N", "nl", "np", "cn", "p", "norm", "sn", "ns", "nt", "ni", "number", "num", "nr", "z", "d", "m", "ne", "g"], "q": ["iq", "qs", "ql", "f", "qt", "seq", "ime", "t", "u", "dq", "Q", "eq", "k", "sq", "r", "quote", "que", "len", "g", "pkg", "qq", "c", "qu", "h", "v", "m", "w", "l", "lock", "ue", "qi", "req", "qa", "p", "requ", "qv", "quit", "z", "query", "quant"], "queue": ["menu", "sequence", "archive", "priority", "pause", "flush", "collection", "dq", "Q", "all", "console", "test", "loop", "buffer", "UE", "quote", "que", "rue", "layer", "ued", "batch", "next", "ue", "process", "thread", "store", "force", "grid", "pool", "pipe", "register", "stack", "qv", "tube", "block", "ques", "quit", "required", "Que", "poll", "wait", "list", "cache", "channel", "buf", "library", "message"], "time": ["mt", "sequence", "length", "history", "counter", "date", "frequency", "ime", "tim", "t", "rate", "max", "port", "count", "estamp", "now", "runtime", "type", "times", "size", "usage", "timeout", "TIME", "duration", "c", "weight", "context", "money", "etime", "timer", "value", "ty", "memory", "start", "tt", "delay", "p", "tm", "offset", "clock", "id", "end", "depth", "temp", "trace", "z", "Time", "tc", "message"], "cnt": ["count", " count", "fcount", "cnc", " ccount", "fcnc", "Count", "Cnt", "ccount", "Ccount", "fccount", " cnc", "fcnt", "Cnc"], "map": ["sm", "mb", "mt", "cap", "addr", "snap", "tab", "maps", "view", "ip", "shape", "scale", "mm", "bridge", "part", "max", "mp", "mn", "policy", "add", "save", "link", "parse", "gr", "module", "pm", "mg", "manager", "use", "key", "ape", "ap", "app", "man", "per", "master", "place", "MAP", "one", "load", "rm", "hash", "lock", "make", "mask", "mod", "process", "mem", "meta", "print", "form", "pack", "dict", "collect", "pre", "apper", "group", "mean", "mk", "cp", "cache", "set", "m", "block", "metadata", "cast"], "i": ["zi", "I", "ie", "ci", "sql", "si", "ic", "sim", "u", "us", "xi", "me", "ai", "is", "ind", "o", "pa", "ms", "r", "mi", "cli", "index", "y", "im", "init", "ix", "ui", "ki", "j", "a", "pi", "multi", "my", "it", "ii", "print", "p", "ini", "di", "id", "li", "in", "ti", "bi", "d", "m", "phi", "ip", "asi"], "x": ["fx", "px", "xp", "xml", "f", "hex", "ctx", "ax", "t", "xx", "xt", " xx", "xi", "lex", "exp", "xf", "xa", "xxxx", "abc", "dx", "ox", "test", "full", "h", "php", "y", "v", "xc", "s", "ix", "cl", "w", "xe", "el", "wx", "rx", "nex", "lat", "plex", "mx", "xy", "xes", "tx", "ex", "X", "ext", "z", "xxx", "ux", "xs"]}}
{"code": "\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n    private static final int MOD = (int)1e9 + 7;//(int)Math.pow(10, 9) + 7;\\n    private static final long EIGHT = (long) 1e18;\\n    private static final int[][] DIRS = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\\n\\n    public static void main(String[] args) {\\n        FastReader sc = new FastReader();\\n        int s = sc.nextInt();\\n\\n\\n        print(\"\" + (s + s*s + s*s*s));\\n    }\\n\\n    /*\\n     * Check if a * b is overflow or not\\n     */\\n    static Boolean isOverflowByMul(long a, long b) {\\n        if (a == 0 || b == 0) {\\n            return false;\\n        }\\n\\n        long result = a * b;\\n        if (a == result / b) {\\n            return false;\\n        }\\n        return true;\\n    }\\n\\n    static private long powMod(long a, long n, long mod) {\\n        long res = 1;\\n        while (n > 0) {\\n            if ((n & 1) == 1) {\\n                res = res * a % mod;\\n            }\\n            n >>= 1;\\n            a = a * a % mod;\\n        }\\n        return res;\\n    }\\n\\n    static private void swap(int[] nums, int x, int y) {\\n        int tmp = nums[x];\\n        nums[x] = nums[y];\\n        nums[y] = tmp;\\n    }\\n\\n    static  private void reverse(int[] nums, int left, int right) {\\n        while (left < right) {\\n            swap(nums, left, right);\\n            left++;\\n            right--;\\n        }\\n    }\\n\\n    static private boolean findNextPermutation(int[] nums) {\\n        if (nums.length <= 1) {\\n            return false;\\n        }\\n\\n        int last = nums.length - 2;\\n\\n        while (last >= 0) {\\n            if (nums[last] < nums[last + 1]){\\n                break;\\n            }\\n            last--;\\n        }\\n\\n        if (last < 0) { return false; }\\n        int nextGenerater = nums.length - 1;\\n\\n        for (int i = nums.length - 1; i > last; i--) {\\n            if (nums[i] > nums[last]) {\\n                nextGenerater = i;\\n                break;\\n            }\\n        }\\n\\n        swap(nums, nextGenerater, last);\\n        reverse(nums, last + 1, nums.length - 1);\\n        return true;\\n    }\\n\\n    static private int[] generateNArray(int n) {\\n        int[] res = new int[n];\\n\\n        for (int i = 0; i < n; i++) {\\n            res[i] = i + 1;\\n        }\\n\\n        return res;\\n    }\\n\\n    static  private void print(String s) {\\n        System.out.println(s);\\n    }\\n\\n    static private void printArray(int[] e) {\\n        for (int s: e) {\\n            System.out.print(s + \" \");\\n        }\\n        print(\"\");\\n    }\\n\\n    static private int log2(int x) {\\n        return (int)(Math.log(x) / Math.log(2));\\n    }\\n\\n    static private long gcd(long m, long n) {\\n        if (m < n) { return gcd(n, m); }\\n        if (m % n == 0) { return n; }\\n        return gcd(n, m%n);\\n    }\\n\\n    static class FastReader {\\n        BufferedReader br;\\n        StringTokenizer st;\\n\\n        public FastReader() {\\n            br = new BufferedReader(new InputStreamReader(System.in));\\n        }\\n\\n        String next() {\\n            while (st == null || !st.hasMoreElements()) {\\n                try {\\n                    st = new StringTokenizer(br.readLine());\\n                } catch (IOException  e) {\\n                    e.printStackTrace();\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n\\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n\\n        double nextDouble() {\\n            return Double.parseDouble(next());\\n        }\\n\\n        String nextLine() {\\n            String str = \"\";\\n            try{\\n                str = br.readLine();\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            return str;\\n        }\\n    }\\n}\\n", "target": "162", "substitutes": {"MOD": [" exp", " L", " pow", "MAX", " MIN", " EXP", " MAG", " h", " D", " base", " exponent", " M", " B", " scale", " beta", " Z", " factor", " magnitude", " EPS", " multiplier", " power", " tmp", " alpha", " MAX", " log", " mod", " E", " BASE", " H", " LOG"]}}
{"code": "\\nimport java.util.*;\\nimport java.io.*;\\nimport java.math.BigInteger;\\npublic class Main {\\n\\n\tprivate static final int mod =(int)1e9+7;\\n\tpublic static void main(String[] args) throws Exception  {\\n\t      Scanner  sc=new Scanner(System.in);\\n\t      PrintWriter out=new PrintWriter(System.out);\\n\t      int x=sc.nextInt();\\n\t    if(x==0) {\\n\t      out.println(1);\\n\t    }else {\\n\t      out.println(0);\\n\t    }\\n\t      out.flush();\\n\t    }\\n//\t    static int binarySearch(int i,int j,int a[]) {\\n//\t      \\n//\t    }\\n\t\\n\tstatic boolean vis[]=new boolean[10001];\\n\t      static int gcd(int a, int b) \\n\t      { \\n\t          if (a == 0) \\n\t              return b; \\n\t          return gcd(b % a, a); \\n\t      } \\n\t    static  void dfs(int n,boolean flag,ArrayList<ArrayList<Integer>> adj,int src,boolean vis[],ArrayList<Integer> centroid,int size[]) {\\n\t        vis[src]=true;\\n\t        size[src]=1;\\n\t        for(int i:adj.get(src)) {\\n\t          if(vis[i]==false){\\n\t            dfs(n,flag,adj,i,vis,centroid,size);\\n\t            size[src]+=size[i];\\n\t            if(size[i]>n/2) {\\n\t              flag=false;\\n\t            }\\n\t          }\\n\t        }\\n\t        if(n-size[src]>n/2) {\\n\t          flag=false;\\n\t        }\\n\t        if(flag==true) {\\n\t          centroid.add(src);\\n\t        }\\n\t    }\\n\t\\n\t     \\n\t      \\n}", "target": "148", "substitutes": {"mod": [" pow", "ver", "MOD", "zero", " Mod", "off", "lex", "scale", "exp", "fac", "max", "base", "add", " scale", "prime", "min", "m", "grow", "Mod", "dec", "step", "log", "d"], "sc": ["SC", "osc", "pc", "sys", "syn", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sq", "sch", "sub", "uc", "sp", "c", "cc", "soc", "isc", "esc", "cl", "lc", "desc", "mc", "scl", "cr", "sel", "tch", "sci", "conv", "sa", "cle", "cs", "tc", "Sc", "scan"], "out": ["writer", "error", "exit", "ent", "sys", "OUT", "io", "at", "t", "flush", "obj", "all", "net", "write", "sum", "outs", "o", "client", "gr", "r", "err", "up", "check", "c", "n", "ut", "os", "name", "OU", "v", "en", "info", "conf", "aos", "output", "w", "Out", "put", "screen", "co", "res", "it", "print", "pool", "p", "cmd", "gt", "st", "ex", "file", "txt", "null", "nt", "to", "news", "conv", "end", "ou", "in", "log", "str", "set", "ln", "g"], "x": ["fx", "px", "xp", "f", "ct", "xd", "ax", "xx", "xt", "xi", "xa", "xf", "xxxx", "dx", "k", "ox", "i", "n", "xxxxxxxx", "xc", "v", "y", "m", "ix", "yx", "w", "wx", "rx", "lat", "mx", "xy", "ex", "inx", "X", "tx", "xs", "z", "xxx", "ux", "g"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n  static int gcd(int a ,int b){return b>0? gcd(b,a%b):a;}\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int a = sc.nextInt();\\n    int b = sc.nextInt();\\n    int k = sc.nextInt();\\n    int count = 0;\\n    int max_gcd = gcd(a,b);\\n    int ans=0;\\n\\n    for(int i= max_gcd; i>0; i--){\\n      if(a%i==0 && b%i==0){\\n        count += 1;\\n      }\\n      if(count == k){\\n        ans = i;\\n        break;\\n      }\\n    }\\n    System.out.println(ans);\\n\\n  }\\n}", "target": "134", "substitutes": {"a": ["ar", "aa", "f", "at", "t", "aq", "al", "ai", "area", "va", "A", "da", "au", " A", "sha", "na", "ab", "x", "oa", "eta", "r", "ach", "ao", "c", "an", "ba", "am", "h", "n", "index", "ap", "v", "app", "s", "m", "ea", "ga", "ia", "l", "sta", "isa", "ta", "ae", "aj", "aaa", "e", "apa", "p", "ca", "as", "la", "alpha", "att", "sa", "d", "ma", "el", "g", "ac"], "b": ["mb", "bp", "nb", "f", "bb", "t", "u", "bc", "bin", "A", "base", "bf", "bg", "bis", " B", "ab", "x", "o", "B", "r", "sb", "fb", "ba", "c", "n", "wb", "h", "eb", "ib", "y", "v", "value", "bs", "ob", "s", "cb", "j", "l", "bot", "rb", "gb", "e", "br", "p", "db", "be", "bi", "z", "d", "m", "g"], "sc": ["SC", "sw", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "spec", "cl", "ko", "lc", " Sc", "ctl", "mc", "inc", "acc", "scl", "cr", "ch", "system", "ck", "ss", "scan", "conv", "cs", "ec", "tc", "Sc", "g", "se"], "k": ["kn", "ak", "ka", "max", "dk", "kk", "ek", "size", "sk", "ks", "n", "c", "ke", "kb", "kid", "v", "kind", "q", "ko", "w", "ki", "j", "kw", "ik", "ku", "kl", "K", "ok", "ck", "p", "kr", "ch", "mk", "num", "z", "m", "g", "tk"], "count": ["found", "span", "flag", "length", "ci", "counter", "Count", "nb", "ct", "ctx", "t", "th", "max", "ind", "sum", "find", "x", "ctr", "add", "cond", "conn", "cd", "size", "cont", "check", "c", "n", "code", "cc", "cum", "index", "ount", "v", "conf", "state", "process", "start", "p", "CC", "total", "nt", "id", "li", "number", "num", "cs", "cache", "set", "act", "core"], "max_gcd": ["max_gdd", "max_dCD", "max_acpd", "max_mdd", "max_accd", "max_gcpd", "max_gpd", "max_GCD", "max_gCD", "max_mCD", "max_acCD", "max_Gcd", "max_gld", "max_gsld", "max_gcdd", "max_mcd", "max_acdd", "max_gnd", "max_dcd", "max_gccd", "max_gscd", "max_mpd", "max_gcCD", "max_gsnd", "max_Gld", "max_dnd", "max_Gnd", "max_gsCD", "max_dld"], "ans": ["views", "groups", "ANS", "span", "anks", "offs", "anes", "ats", "aps", "eds", "ann", "nan", "ants", "ins", "uns", "outs", "ms", "orders", "times", "aus", "an", "ks", " scans", "ians", "n", "nn", "os", "flags", "amps", "ends", "books", "posts", "results", "olds", "ts", "asks", "ens", "ars", "ations", "gs", "ows", "ids", "ns", "ls", "nt", "vals", "cs", "arts", "xs", "ents", "unks"], "i": ["zi", "I", "hi", "ci", "si", "ic", "t", "oi", "ai", "ei", "xi", "is", "ind", "x", "mi", "c", "n", "cli", "isi", "mu", "index", "gi", "v", "y", "ix", "ui", "ri", "ki", "j", "l", "ity", "qi", "pi", "multi", "ij", "it", "ii", "p", "chain", "ini", "di", "ni", "id", "li", "conv", "fi", "ti", "bi", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = Integer.parseInt(sc.next());\\n        Map<String,Long> map = new HashMap<>();\\n        long ans = 0;\\n        for(int i = 0;i<n;i++){\\n            char[] tmp = sc.next().toCharArray();\\n            Arrays.sort(tmp);\\n            String key = String.valueOf(tmp);\\n            if(map.get(key) != null){\\n                ans += map.get(key);\\n                map.put(key,map.get(key) + 1);\\n            }else{\\n                map.put(key,1L);\\n            }\\n        }\\n        System.out.println(ans);\\n    }\\n}", "target": "32", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "ic", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "irc", " Sc", "arc", "ctl", "desc", "mc", "scl", "cr", "sel", "ch", "ss", "sci", "dc", "cle", "cs", "tc", "Sc", "scan"], "n": ["nb", "t", "network", "nc", "net", "mn", "nan", "na", "no", "ng", "d", "on", "and", "c", "nn", "nor", "gn", "en", "Ni", "non", "N", "j", "l", "nu", "nl", "np", "cn", "norm", "sn", "ns", "nd", "ni", "nt", "num", "z", "ln", "m", "ne"], "map": ["mb", "mt", "cap", "open", "forge", "addr", "snap", "ack", "maps", "view", "wrap", "pe", "shape", "scale", "mm", "complete", "match", "max", "mp", "sh", "scope", "find", "add", "save", "link", "parse", "pm", "mg", "use", "check", "ape", "cast", "ap", "man", "where", "place", "one", "pl", "master", "load", "MAP", "rm", "update", "hash", "lock", "table", "mask", "make", "create", "store", "pose", "form", "pack", "dict", "mean", "apper", "cp", "see", "cache", "set", "m", "block", "get", "handle"], "ans": ["abilities", "ANS", "orts", "ions", "anks", "offs", "nz", " beans", "ats", "ums", "ads", "aps", "eds", "ann", "ols", " opens", "ants", "ports", "ins", " means", "uns", "ms", "outs", "times", "aus", "acs", "an", " scans", "ks", "ians", "lan", "os", "flags", "amps", "rans", " spans", "lets", "posts", "asks", "olds", "ons", " Ans", "ens", "anas", "ars", "ros", "ows", "ates", "ids", "ns", "rs", " olds", "ls", " orphans", "ds", "cs", "arts", "xs", "ents"], "i": ["iq", "iter", "I", "hi", "ci", "ie", "mill", "sql", "si", "ic", "t", "u", "sim", "ai", " ie", "ei", "us", " x", "is", "ind", "x", "ms", "mi", "y", "im", "init", "gi", "q", "ix", "ui", "ki", "j", "batch", "qi", "pi", "multi", "it", "ii", "gu", "ini", "di", "uu", "id", "li", " ii", " I", "bi", "ti", "m", "iu", "phi", "ip"], "tmp": ["cmp", "nb", "fake", "pp", "ctx", "t", "img", "js", "obj", "mp", "sup", "abs", "test", "sp", "pkg", "cont", "cur", "bytes", "v", "src", "emp", "bt", "perm", "sam", "rb", "buff", "np", "acc", "tt", "p", "xy", "tm", "etc", "txt", "td", "nt", "mk", "pet", "yy", "cp", "temp", "buf", "cache", "tf", "stuff", "tk"], "key": ["ver", "cell", "path", "pair", "important", "hex", "tag", "obj", "net", "node", "kk", "base", "k", "phrase", "primary", "port", "member", "parent", "client", "cond", "type", "link", "col", "pkg", "code", "check", "var", "prop", "mac", "entry", "name", "kid", "y", "v", "by", "host", "index", "leader", "where", "prefix", "json", "set", "kw", "label", "Key", "hash", "lock", "sky", "mask", "char", "title", "req", "step", "my", "tt", "owner", "chain", "search", "txt", "mk", "id", "KEY", "row", "temp", "list", "sym", "str", "item", "tree", "ip"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.IOException;\\nimport java.util.ArrayList;\\npublic class Main {\\n  public static void main(String[] args) throws IOException {\\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n    int n = Integer.parseInt(br.readLine());\\n    String[] strArray = br.readLine().split(\" \");\\n    String[] strArray2 = new String[n];\\n    for(int i = 0;i < n;i++) {\\n      strArray2[i] = strArray[n-i-1];\\n    }\\n    for(int i = 0;i < (n-1);i++) {\\n      System.out.print(strArray2[i] + \" \");\\n    }\\n    System.out.println(strArray2[n-1]);\\n  }\\n}", "target": "79", "substitutes": {"br": ["bp", "bb", "div", "bn", "bm", "bc", "bh", "bridge", "ger", "dr", "bro", "bl", "bg", "ctr", "gr", "r", "rem", "tr", "obo", "shr", "bs", "lr", "yr", "bt", "mr", "Br", "pr", "next", "rb", "cr", "bd", "ch", "kr", "b", "BR", "db", "browser", "rel", "nr", "hr", "buf", "vr", "ber", "sb", "wr", "fr"], "n": ["nb", "f", "t", "network", "u", "ren", "inn", "ln", "nc", "all", "net", "ll", "mn", "count", "k", "out", "na", "no", "o", "nan", "ng", "x", "names", "r", "on", "len", "c", "nn", "name", "v", "gn", "en", "dn", "N", "j", "l", "nu", "np", "nl", "pi", "cn", "p", "sn", "norm", "ns", "total", "nt", "nw", "ni", "number", "num", "none", "un", "z", "d", "m", "ne", "g"], "strArray": ["arrString", "strarray", "arrArea", "strArea", " strAnswer", "arrarray", " strarray", "txtArray", "intAnswer", " strString", "intarray", " strArea", "arrArray", "strString", "txtArea", "intString", "arrAnswer", "txtString", "intArray", "strAnswer"], "strArray2": [" strInstance4", "txtArray2", "strRAY12", "strInstance12", "stringRAY1", " strInstanceTwo", "strInstance4", "stringRAY2", "strCollectionTwo", " strInstance2", "strList3", "strChain02", " strArray12", "strArray4", "strInstance2", "strRAY1", "strChain2", "strarray12", "strInstanceTwo", "strList6", "strList12", "strCollection1", "strRAYTwo", "txtChain2", "stringArray6", "strCollection2", "strarray1", "strList1", "strRAY4", "strArraySL", " strArrayTwo", "strArray02", "strArray1", "strList2", " strInstance12", "strArray3", "stringArrayTwo", "stringRAY12", "stringRAY3", "txtArray02", "stringArray2", "stringArray1", "stringArray3", "strRange2", "strArray6", "strRange02", "txtChain02", "txtChainSL", "stringArray12", "strChainSL", "strArrayTwo", " strArray4", "strArray12", "strCollection6", "strarray2", "strarray3", "strRAY2", "strListTwo", "strRAY3", "txtArraySL", "strRangeSL"], "i": ["zi", "iq", "ie", "I", "ci", "hi", "ed", "ami", "\u0438", "si", "io", "ic", "sim", "u", "ai", "ei", "us", "me", "xi", "base", "is", "eu", "ind", "point", "o", "x", "client", "mi", "err", "cli", "mac", "init", "im", "y", "gi", "q", "info", "ui", "ix", "v", "this", "ri", "batch", "j", "uri", "ki", "ity", "qi", "pi", "multi", "ji", "ij", "it", "e", "ii", "chain", "gu", "ini", "di", "uu", "yi", "li", "ti", "bi", "m", "iu", "phi", "g", "ip", "asi"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tlong L = sc.nextLong();\\n\t\tlong R = sc.nextLong();\\n\\n\t\tfinal int divide = 2019;\\n\t\tlong ans =1000000000;\\n\\n\t\tif(R - L >= 2019)System.out.println(0);\\n\t\telse {\\n\t\t\tfor(long i=L; i<R; i++) {\\n\t\t\t\tfor(long j =i+1; j<=R; j++) {\\n\t\t\t\t\tans = Math.min(ans, (i*j)%divide);\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tSystem.out.println(ans);\\n\t\t}\\n\t}\\n\\n}\\n", "target": "193", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "ctx", "usc", "se", "sv", "rc", "nc", "bc", "asc", "Scan", "sh", "sch", "gc", "sq", "sec", "sb", "sp", "c", "cc", "isc", "esc", "ser", "cl", "lc", "ner", " Sc", "ctl", "mc", "nl", "scl", "cr", "ch", "system", "ck", "ss", "dc", "cs", "tc", "Sc", "g", "scan"], "L": ["LR", "I", "DL", "EL", "LI", "Lu", "SL", "LD", "LIN", "BL", "LO", "M", "D", "Li", "GL", "S", "B", "P", "V", "LL", "LG", "LU", "NL", "N", "ML", "l", "LT", "LP", "G", "J", "CL", "H", "LS", "IL", "X", "LM", "LC", "LE", "T", "LA", "LB", "LOC"], "R": ["RES", "RG", "I", "RO", "RA", "RS", "C", "Res", "SR", "RT", "Q", "M", "D", "VR", "RP", "S", "B", "RL", "r", "RI", "P", "V", "NR", "CR", "RE", "RR", "N", "K", "RC", "G", "J", "AR", "Right", "MR", "BR", "RM", "DR", "GR", "T", "RF"], "divide": [" divimate", "decie", "divimate", "divgrade", "divie", "deride", "decide", "divride", "derimate", "dergrade", "derider", "Divie", "divider", "Divide", "Divimate", "Divider", "Divride", " divie", "Divgrade", "decride", " divgrade", " divride", " divider", "decider"], "ans": ["ras", "nets", "ANS", "es", "orts", "offs", "AN", "anes", "ats", "aps", "eps", "eds", "ann", "oss", "ants", "ins", "names", "outs", "ms", "uns", "aus", "acs", "ks", "an", " scans", "ians", "vs", "lan", "os", "flags", "s", "amps", "rans", "ends", "ons", "ens", "cons", "ars", "vers", "ros", "ations", "ows", "gs", "ids", "can", "ns", "rs", "ls", "as", "vals", "mas", "cs", "ims", "arts", "xs", "ents"], "i": ["zi", "I", "hi", "ci", "ie", "ami", "si", "ic", "u", "iri", "ai", "xi", "ei", "ims", "is", "ind", "ori", "o", "x", "mi", "im", "init", "gi", "ix", "ui", "ri", "ki", "ia", "l", "ik", "pi", "multi", "ji", "ij", "ii", "di", "ini", "ni", "yi", "li", " Xi", "bi", "ti", "iu", "phi", "ip", "asi"], "j": ["ie", "cell", "jac", "bj", "jl", "js", "obj", "bc", "kh", "k", "ind", "oj", "o", "job", "z", "je", "uj", "h", "jc", "pt", "im", "v", "bs", "q", "dj", "json", "pr", "aj", "jp", "jo", "jump", "ji", "ij", "J", "ph", "br", "it", "jit", "meg", "jj", "ja", "other", "bi", "kj", "m", "jas", "ne", "g", "fr"]}}
{"code": "import java.util.*;\\npublic class Main{\\npublic static void main(String[] args){\\nScanner sc = new Scanner(System.in);\\n  int N = sc.nextInt();\\n  int M = sc.nextInt();\\n  int[] a = new int[2*M];\\n  for(int i = 0;i < 2*M;i++){\\n    a[i] = sc.nextInt();\\n  }\\n  for(int i = 0;i < N;i++){\\n    int ans = 0;\\n    for(int j = 0;j < 2*M;j++){\\n      if(a[j] == i+1)ans++;\\n    }\\n    System.out.println(ans);\\n  }\\n}}\\n", "target": "57", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "lc", "irc", "ctl", "desc", "mc", "inc", "scl", "cr", "sel", "ch", "system", "ck", "capt", "cgi", "ss", "sci", "conv", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["I", "NN", "NM", "R", "NC", "C", "ND", "L", "Y", "NO", "A", "Num", "NT", "D", "S", "MN", "P", "V", "n", "NR", "Ni", "NB", "NP", "TN", "NI", "NA", "K", "J", "NH", "H", "NS", "X", "SN", "T", "Ns"], "M": ["MA", "I", "NM", "R", "MD", "C", "L", "MAT", "D", "S", "MO", "B", "MC", "MN", "IM", "MP", "F", "P", "V", "MODE", "SM", "DM", "MI", "MU", "U", "MAN", "MM", "AM", "K", "G", "MX", "J", "CM", "MS", "MT", "RM", "LM", "T", "MB", "Mi", "m", "TM"], "a": ["aw", "ar", "aa", "ack", "ai", "wa", "area", "A", "fa", "da", "au", "na", "ab", "pa", "oa", "ao", "ba", "n", "am", "an", "c", "m", "ea", "ga", "ia", "sta", "ta", "ae", "aaa", "pi", "apa", "p", "aka", "b", "ca", "ata", "alpha", "la", "as", "att", "array", "sa", "ma", "ac"], "i": ["zi", "iter", "ie", "hi", "ci", "I", "iti", "ami", "iso", "f", "si", "ic", "sim", "u", "oi", "ai", "xi", "us", "me", "ei", "inner", "is", "ind", "ori", "client", "mi", "ir", "index", "im", "y", "init", "v", "ix", "q", "ui", "gi", "ri", "ki", "ia", "uri", "ity", "qi", "pi", "multi", "ji", "ij", "it", "print", "ii", "p", "chain", "PI", "ini", "di", "ret", "id", "li", "in", "ti", "bi", "ims", "m", "iu", "phi", "ip", "asi"], "ans": ["nets", "ANS", "es", "ions", "span", "anks", "offs", "checks", "lines", "ats", "ads", "ai", "eds", "rows", "ann", "is", "ants", "ins", "outs", "names", "ms", "ps", "uns", "times", "orders", "aus", "ks", "an", " scans", "ones", "lan", "os", "flags", "s", "amps", " spans", "posts", "ons", "ens", "cons", "ros", "ows", "can", "ids", "ns", "rs", "ls", "as", "ds", "vals", "cs", "pan", "reads", "arts", "xs", "ents"], "j": ["note", "jac", "bj", "jl", "js", "obj", "kj", "k", "out", "oj", "job", "je", "uj", "tr", "ge", "key", "jc", "pt", "y", "q", "dj", "json", "bo", "pr", "aj", "jp", "jo", "jump", "ji", "J", "ij", "ph", "br", "b", "jj", "ja", "other", "bi", "z", "jas", "ne", "g", "fr"]}}
{"code": "\\nimport java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.HashMap;\\nimport java.util.List;\\nimport java.util.Map;\\nimport java.util.Scanner;\\n \\npublic class Main {    \\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        long n = Long.parseLong(sc.next());\\n        String[] list = new String[26];\\n        char temp = 'a';\\n        for(int i=0;i<26;i++){\\n            list[i] = String.valueOf(temp++);\\n        }\\n\\n        String ans = \"\";\\n        while(n>0){\\n            n--;\\n            int mod = (int) (n%26);\\n            ans +=list[mod];\\n            n/=26;\\n        }\\n        \\n        StringBuffer str =  new StringBuffer(ans);\\n        String s = str.reverse().toString();\\n        System.out.println(s);\\n    }\\n}", "target": "191", "substitutes": {"sc": ["SC", "sw", "pc", "sys", "rc", "nc", "bc", "sync", "sac", "sh", "sch", "gc", "sq", "anc", "sec", "sp", "c", "cc", "cur", "esc", "soc", "isc", "src", "cl", "lc", " Sc", "desc", "mc", "nl", "acc", "scl", "cr", "capt", "ch", "st", "ss", "sci", "conv", "cle", "cs", "ec", "asc", "Sc", "sb", "scan"], "n": ["note", "nm", "nb", "f", "t", "network", "ren", "ln", "nc", "all", "ll", "net", "node", "k", "mn", "nan", "count", "na", "names", "ng", "size", "r", "len", "c", "nn", "h", "nor", "y", "v", "gn", "en", "dn", "w", "N", "non", "j", "l", "nu", "nl", "np", "cn", "p", "norm", "sn", "ns", "nt", "nw", "number", "num", "un", "z", "d", "m", "ne", "g"], "list": ["ist", "sequence", "def", "pair", "view", "t", "L", "collection", "obj", "all", "map", "part", "out", "names", "add", "link", "arr", "index", "LIST", "v", "cl", "pl", "local", "batch", "l", "table", "string", "print", "pool", "chain", "form", "dict", "listed", "st", "pre", "template", "val", "array", "li", "lists", "set", "line", "block", "tree", "test"], "temp": ["zero", "perature", "level", "counter", "fake", "const", "cu", "t", "tim", "porary", "stem", "unt", "max", "base", " Temp", "tmp", "unc", "c", "pt", "v", "Temp", "orig", "prefix", "random", "w", "local", "variable", "kw", "current", "tem", "tt", "tm", "pre", "txt", "offset", "td", "null", "template", "ptr", "tc", "cell", "test"], "i": ["zi", "iq", "iter", "I", "ie", "ci", "f", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "me", "us", "inner", "is", "ish", "ind", "ori", "x", "ms", "client", "mi", "index", "y", "init", "im", "v", "ix", "gi", "ui", "ri", "j", "uri", "batch", "a", "qi", "pi", "multi", "it", "my", "ii", "chain", "ini", "di", "id", "li", "in", "ti", "bi", "m", "iu", "phi", "ip"], "ans": ["ras", "ANS", "ces", "AN", "san", "ats", "aps", "ads", "ann", "ols", "strings", "ants", "ins", "uns", " means", "ms", "ys", "aus", "ks", "an", "ians", "os", "amps", "posts", "ons", "ens", "sam", "cons", "ars", "ams", "vers", "ros", "gs", "users", "ids", "can", "ns", "rs", "ls", "vals", "ents", "cs", "actions", "arms", "arts", "xs", "ts"], "mod": ["reg", "MOD", "fun", "dig", " Mod", "tab", "mode", "div", "sim", "max", "mut", "base", "ind", "loop", "sub", "add", "ms", "cond", "module", "ade", "cont", "im", "min", "mods", "set", "term", "perm", "Mod", "dec", "rand", "step", "ident", "cm", "comp", "id", "pad", "mun", "m", "post", "modified", "od"], "str": ["stable", "sys", "io", "t", "div", "sts", "er", "dr", "out", "spr", "ctr", "gr", "r", "sp", "tr", "arr", "shr", "Str", "STR", "pr", "sr", "string", "char", "enc", "vol", "ocr", "cr", "oct", "kr", "st", "ns", "rs", "txt", "cs", "fr", "wr"], "s": ["its", "qs", "sg", "fs", "hs", "t", "ats", "js", "gets", "sv", "ies", "changes", "is", "out", "S", "ps", "r", "ys", "h", "y", "v", "bs", "des", "w", "ws", "l", "gs", "p", "b", "ns", "rs", "ls", "stats", "ds", "cs", "ss", "g", "ts"]}}
{"code": "\\nimport java.util.InputMismatchException;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\ttry {\\n\t\t\tScanner scanner = new Scanner(System.in);\\n\\n\t\t\tint n = scanner.nextInt();\\n\\n\t\t\tlong[] a = new long[n+1];\\n\t\t\tfor (int i = 0; i < a.length; i++) {\\n\t\t\t\ta[i] = scanner.nextInt();\\n\t\t\t}\\n\\n\t\t\tlong[] b = new long[n];\\n\t\t\tfor (int i = 0; i < b.length; i++) {\\n\t\t\t\tb[i] = scanner.nextInt();\\n\t\t\t}\\n\\n\t\t\tMain citySavers = new Main();\\n\t\t\tSystem.out.println(citySavers.citySavers(a, b));\\n\\n\t\t\tscanner.close();\\n\\n\t\t} catch (InputMismatchException e) {\\n\t\t\t// TODO: handle exception\\n\t\t\tSystem.out.println(\"\u6574\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\");\\n\t\t}\\n\t}\\n\\n\\n\tpublic long citySavers(long[] a, long[] b) {\\n\t\tlong count = 0;\\n\\n\t\tfor (int i = 0; i < b.length; i++) {\\n\t\t\tif (a[i] >= b[i]) {\t\t\t\t\t//1\u3064\u76ee\u306e\u8857\u306e\u6575>\u5012\u305b\u308b\u6570\\n\t\t\t\tcount = count + b[i];\\n\t\t\t}else if (a[i+1] >= b[i] - a[i]){\t//1\u3064\u76ee\u306e\u8857\u306e\u6575+2\u3064\u76ee\u306e\u8857\u306e\u6575>\u5012\u305b\u308b\u6570\\n\t\t\t\tcount = count + b[i];\\n\t\t\t\ta[i+1] = a[i+1] + a[i] - b[i];\\n\t\t\t}else {\t\t\t\t\t\t\t\t//1\u3064\u76ee\u306e\u8857\u306e\u6575+2\u3064\u76ee\u306e\u8857\u306e\u6575<\u5012\u305b\u308b\u6570\\n\t\t\t\tcount = count + a[i] + a[i+1];\\n\t\t\t\ta[i+1] = 0;\\n\t\t\t}\\n\t\t}\\n\\n\t\treturn count;\\n\t}\\n\\n}\\n\\n", "target": "159", "substitutes": {"scanner": ["Scanner", "Scaner", "scaner", "caniner", "linkiner", "scanener", " scanter", " scaniner", "canter", "scaniner", "Scanener", " scanener", " scaner", "Scanter", "caner", "linker", "canener", "linkter", "scanter", "canner", "linkner"], "n": ["nb", "ct", "t", "ln", "nc", "net", "max", "mn", "count", "nan", "out", "na", "o", "x", "ng", "size", "r", "and", "len", "g", "c", "nn", "h", "v", "en", "w", "N", "j", "l", "nu", " N", "nl", "np", "pi", "cn", "norm", "p", "sn", "ns", "nt", "nr", "num", "number", "z", "d", "m", "ne"], "a": ["aux", "ar", "auto", "aa", "era", "at", "al", "aq", "ai", "area", "va", "A", "fa", "da", "au", "na", "ab", "oa", "d", "ao", "ba", "an", "am", "c", "ap", "ast", "s", "ea", "ga", "eas", "ia", "sta", "l", "isa", "ae", "aj", "aaa", "aff", "apa", "p", "ac", "aka", "ca", "ata", "alpha", "la", "att", "parts", "array", "sa", "as", "act", "ma", "\u00e4"], "i": ["zi", "ie", "hi", "ci", "I", "ami", "\u0438", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "ei", "me", "ies", "used", "port", "is", "ful", "ori", "client", "mi", "err", "cli", "uli", "mu", "iy", "im", "y", "init", "gi", "q", "ix", "ui", "info", "remote", "ri", "ki", "j", "uri", "batch", "ity", "qi", "pi", "multi", "ji", "it", "ii", "PI", "chain", "details", "ini", "di", "gu", "ni", "id", "li", "fi", "ti", "bi", "ims", "m", "iu", "phi", "ip"], "b": ["mb", "bool", "bp", "nb", "back", "bb", "u", "bc", "bis", "bg", "bl", "ab", "o", "B", "z", "body", "fb", "blue", "ba", "h", "eb", "beta", "ib", "v", "bs", "lib", "ob", "s", "cb", "j", "l", "good", "rb", "buff", "gb", "br", "e", "p", "bar", "db", "be", "bi", "other", "d", "sb"], "citySavers": ["citySneeds", "CityAssaft", "citysets", "cityAssaves", "cityseeds", "citySleeds", "Citysvers", "Citysaver", "cityAssavers", "CityAssaves", "citySets", "citysvers", "citySlvers", "citySeeds", "citySlavers", "cityVaver", "cityCleets", "citySnaver", "citySnaft", "CitySvers", "CitySaves", "cityCleavers", "CitySets", "citySlaver", "citysavers", "Citysets", "citysaves", "CitySaft", "CitySeeds", "citysaver", "citySnavers", "CitySavers", "citysaft", "citySnaves", "CitySaver", "citySaver", "cityClevers", "citySnvers", "cityAssaver", "CityAssavers", "cityAssaft", "CityAssaver", "cityVavers", "cityVets", "cityVvers", "Cityseeds", "citySaft", "Citysavers", "cityCleaver", "citySvers", "citySaves"]}}
{"code": "\\n\\nimport java.io.*;\\nimport java.math.BigInteger;\\nimport java.util.*;\\nimport java.util.Stack;\\n\\npublic class Main{\\n\tpublic static class FastReader {\\n\t\tBufferedReader br;\\n\t\tStringTokenizer root;\\n\t\t\\n \\n\t\tpublic FastReader() {\\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\\n\t\t}\\n \\n\t\tString next() {\\n\t\t\twhile (root == null || !root.hasMoreTokens()) {\\n\t\t\t\ttry {\\n\t\t\t\t\troot = new StringTokenizer(br.readLine());\\n\t\t\t\t} catch (Exception r) {\\n\t\t\t\t\tr.printStackTrace();\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn root.nextToken();\\n\t\t}\\n \\n\t\tint nextInt() {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n \\n\t\tdouble nextDouble() {\\n\t\t\treturn Double.parseDouble(next());\\n\t\t}\\n \\n\t\tlong nextLong() {\\n\t\t\treturn Long.parseLong(next());\\n\t\t}\\n \\n\t\tString nextLine() {\\n\t\t\tString str = \"\";\\n\t\t\ttry {\\n\t\t\t\tstr = br.readLine();\\n\t\t\t} catch (Exception r) {\\n\t\t\t\tr.printStackTrace();\\n\t\t\t}\\n\t\t\treturn str;\\n\t\t}\\n\t}\\n\t\\n\tpublic static PrintWriter out = new PrintWriter (new BufferedOutputStream(System.out));\\n\tstatic int mod = (int) (1e9+7),n;\\n\tstatic long cf = 998244353;\\n    static final int MAX = (int) 1e6;\\n    public static List<Integer>[] edges;\\n    public static int[][] parent;\\n    public static int col = 20;\\n    public static long[] Bit;\\n    public static long[] fac,inv;\\n    public  static int[] prime; \\n    public static long[] dp;\\n\tpublic static FastReader sc = new FastReader();\\n\tpublic static void main(String[] args) {\\n\t//\tScanner sc = new Scanner(System.in);\\n \\n\t\tString s = sc.next();\\n\t\tswitch(s){\\n\t\t\tcase \"Sunny\" : out.print(\"Cloudy\"); break;\\n\t\t\tcase \"Cloudy\" : out.print(\"Rainy\"); break;\\n\t\t\tcase \"Rainy\" : out.print(\"Sunny\");\\n\t\t}\\n\t\tout.close();\\n\t}\\n\t\\n\t\\n}", "target": "60", "substitutes": {"br": ["bp", "boot", "bb", "bc", "bh", "bridge", "ro", "dr", "bro", "bl", "bf", "raf", "ctr", "gr", "r", "err", "rob", "tr", "bern", "shr", "bs", "bsp", "lr", "yr", "bt", "mr", "Br", "pr", "next", "rx", "rb", "rys", "jp", "res", "brace", "ocr", "cr", "kr", "BR", "browser", "nr", "ptr", "rel", "hr", "reader", "buf", "vr", "ber", "wr", "fr"], "root": ["or", "ver", "roots", "zero", "usr", "snap", "sys", "first", " roots", "div", "rc", "obj", "roid", "oot", "ro", "ger", " Root", "node", "bh", "right", "ree", "console", "base", "scope", "tmp", "dev", "r", "rator", "err", "cur", "h", "rus", "head", "prefix", "gro", "peer", "box", "parser", "this", "mr", "pr", "table", "res", "ocr", "owner", "ok", "p", "chain", "cr", "b", "child", "rt", "result", "null", "oots", "empty", "util", "nt", "Root", "ptr", "reader", "buf", "rap", "tree", "loc"], "str": ["rec", "iter", "ent", "sequence", "sw", "sys", "sl", "t", "div", "sts", "obj", "dr", "inst", "ctr", "gr", "msg", "r", "sp", "err", "tr", "cur", "arr", "shr", "s", "del", "Str", "STR", "pr", "next", "string", "char", "enc", "res", "text", "print", "cr", "p", "coll", "st", "ns", "txt", "result", "url", "cs", "fr"], "out": ["writer", "error", "sys", "OUT", "io", "t", "obj", "inner", "er", "write", "ins", "outs", "o", "tmp", "conn", "msg", "no", "std", "on", "err", "os", "output", "w", "Out", "j", "res", "print", "ch", "p", "pool", "st", "txt", "ex", "file", "nt", "null", "result", "in", "log", "m"], "mod": ["cmp", "MOD", "fun", "tab", "div", "scale", "floor", "exp", "ref", "base", "add", "ctr", "module", "tr", "min", "grow", "perm", "Mod", "dec", "ctrl", "aj", "pop", "form", "pre", "cm", "ptr", "log", "tree"], "n": ["nm", "nb", "f", "t", "mn", "k", "na", "o", "x", "c", "nn", "h", "v", "N", "j", "l", "nu", "np", "e", "cn", "p", "sn", "ns", "num", "z", "d", "m", "g"], "cf": [" df", "ct", " cx", "xf", "lf", "CF", " mc", "bf", "sq", "cv", "ctr", " ce", "cd", "fc", " cr", "ce", "cc", "tr", "fn", "cal", "ef", "cb", " cc", "cr", "Ct", "dc", "cs", "rn"], "MAX": ["cmp", "cap", "level", "const", "ax", "scale", "map", "Max", "max", "base", "INC", "height", "Prime", "rr", "CR", "conf", "tax", "cl", "grow", "power", "mask", "gen", "pop", "step", "mx", " max", "default"], "edges": ["pedgest", "ledges", "pedger", " edgel", "pedges", " edgest", " edger", "edger", "ledger", "pedgel", "ledgel", "ledgest", "edgest", "edgel"], "parent": ["path", "family", "shape", "seed", "shared", "node", "base", "tmp", "unit", "pid", "prop", "name", "tax", "master", "peer", "grow", "prev", "table", "Parent", "pool", "child", "dist", "rel", "depth", "parents", "block", "tip", "tree"], "col": ["cmp", "level", "div", "pos", "rc", "COL", "count", "par", "cond", "Col", "var", "key", "min", "con", "column", "lock", "res", "pool", "ol", "pol", "dir", "val", "cp", "num", "row", "rel", "line", "loc"], "Bit": ["default", "iter", "scale", "node", "base", "au", "data", "tmp", "rank", "weight", "prop", "mu", "factor", "prev", "lock", "nu", "step", "lt", "norm", "pre", "offset", "total", "dc", "row", "ld", "log", "d", "m", "tree", "ip"], "fac": ["aux", "fx", "ran", "cas", "fun", "eff", "cap", "uf", "ul", "sim", "prof", "fact", "fam", "cur", "var", "cum", "mu", "con", "factor", "perm", "ctrl", "acc", "frac", "gu", "sav", "gam", "mult", "unc", "ac"], "inv": ["rev", "eff", "mix", "verse", "grad", "scale", "mag", "dev", "vs", "mu", "v", "Inv", "random", "av", "iv", "rand", "sin", "vol", "ij", "tri", "norm", "dir", "conv", "rel", "log", "ln", "reverse", " inverse"], "prime": ["ties", "poly", "profile", "div", "prof", "max", "primary", "tie", "plus", "Prime", "tmp", "pd", "fine", "index", "random", "factor", "ve", "pri", "power", "perm", "pr", "rand", "tri", "pre", "ptr", "temp", "real"], "dp": ["pp", "dep", "dq", "ep", "dx", "gp", "DP", "pa", "vp", "ps", "tp", "pd", "d", "pkg", "df", "dm", "dl", "dh", "jp", "np", "p", "fp", "di", "dt", "db", "dc", "cp", "lp", "tap"], "sc": ["SC", "sw", "osc", "pc", "sys", "rc", "sv", "bc", "dr", "sh", "sch", "gc", "uc", "sp", "ser", "cl", "lc", "mc", "scl", "cr", "ch", "dc", "sa", "cs", "ec", "tc", "Sc", "sr"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tint n = Integer.parseInt(sc.next());\\n\t\tlong d = Integer.parseInt(sc.next());\\n\t\tlong[] x = new long[n];\\n\t\tlong[] y = new long[n];\\n\t\tfor(int i = 0; i < n; i++) {\\n\t\t\tx[i]  = Integer.parseInt(sc.next());\\n\t\t\ty[i]  = Integer.parseInt(sc.next());\\n\t\t}\\n\t\tint sum = 0;\\n\t\tfor(int i =  0; i < n; i++) {\\n\t\t\tif(d*d >= x[i]*x[i] + y[i]*y[i]) {\\n\t\t\t\tsum++;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(sum);\\n\t}\\n\\n\t\\n\t\\n}\\n\\n", "target": "42", "substitutes": {"sc": ["SC", " SC", "osc", "pc", "sys", "func", "usc", "sv", "rc", "nc", " unsc", "bc", "asc", "sync", "sch", "gc", "sq", "uc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "lc", " Sc", "ctl", "desc", "cons", "mc", "inc", "acc", "scl", "cr", " scr", "ch", "sel", "ck", "cgi", "ss", "sci", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["span", "nm", "nb", "t", "network", "ren", "ln", "nc", "all", "net", "mn", "nan", "count", "out", "na", "no", "names", "ng", "o", "on", "len", "g", "c", "nn", "fn", "nor", "v", "init", "en", "name", "q", "N", "j", "l", "nu", " N", "nl", "np", "cn", "p", "sn", "ns", "nt", "number", "num", "none", "un", "z", "m", "ne"], "d": ["def", "dd", "f", "de", "div", "t", "dra", "ad", "sd", "dr", "dx", "D", "da", "fd", "pd", "cd", "r", "dom", "df", "c", "dm", "h", "v", "des", "w", "l", "dh", "a", "diff", "density", "e", "p", "b", "dat", "td", "di", "dL", "dt", "ds", "dist", "dot", "z", "m", "draw", "g"], "x": ["fx", "px", "xml", "xp", "xd", "ctx", "ax", "xx", "xt", "u", "xi", "lex", "xf", "xa", "xxxx", "dx", "ox", "ml", "c", "xc", "v", "ix", "xe", "l", "wx", "rx", "mx", "tt", "e", "p", "xy", "xes", "ex", "tx", "X", "z", "act", "xxx", "ux", "xs"], "y": ["ye", "cy", "yl", "vy", "py", "t", "xx", "Y", "ies", "fy", "out", "yer", "o", "z", "ys", "ym", "sy", "uy", "iz", "c", "iy", "yt", "v", "s", "yx", "yr", "ay", "j", "l", "sky", "ey", "yd", "my", "ya", "ly", "xy", "ny", "axy", "b", "yi", "yy", "ry", "hy", "yo"], "i": ["zi", "iter", "ie", "hi", "ci", "I", "status", "ami", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "xi", "ei", "me", "ger", "is", "ind", "ori", "client", "mi", "err", "cli", "iy", "im", "init", "info", "q", "ix", "ui", "gi", "iii", "this", "ri", "j", "batch", "uri", "ki", "ity", "qi", "pi", "multi", "ji", "ij", "it", "print", "ii", "chain", "gu", "ini", "di", "details", "ni", "cgi", "li", "fire", "fi", "ti", "bi", "set", "list", "m", "iu", "phi", "slice", "ip", "asi"], "sum": ["report", "zero", " SUM", "cost", "sim", "ums", "prof", "us", "fac", "match", "all", "max", "count", "out", "union", "add", "size", "must", "score", "subject", "unit", "body", "cum", "index", "med", "cal", "tu", "average", "summary", "hash", "sam", "Sum", "su", "mem", "vol", "acc", "diff", "ass", "sample", "system", "mean", "total", "result", "hum", "um", "num", "cache", "set", "post"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tstatic long[][] A ;\\n\tstatic int N;\\n\tpublic static void main(String[] args) throws Exception {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString W = in.readLine();\\n\t\tN = Integer.parseInt(W);\\n\\n\\n\t\tA = new long[2][N];\\n\\n\t\tfor(int k=0;k<2;k++){\\n\t\t\tW = in.readLine();\\n\t\t\tString[] Ws = W.split(\" \");\\n\\n\t\t\tfor (int i = 0; i < Ws.length; i++) {\\n\\n\t\t\t\tA[k][i] = Long.parseLong(Ws[i]);\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(calc(0,0,0));\\n\\n\t}\\n\\n\tpublic static long calc(int i,int j,long sum){\\n\t\tif(i==1 && j==N-1){\\n\t\t\treturn sum+A[i][j];\\n\t\t}\\n\t\tif(i==1){\\n\t\t\treturn calc(i,j+1,sum+A[i][j]);\\n\t\t}else if(j==N-1){\\n\t\t\treturn calc(i+1,j,sum+A[i][j]);\\n\t\t}else{\\n\t\t\treturn Math.max(calc(i+1,j,sum+A[i][j]), calc(i,j+1,sum+A[i][j]));\\n\t\t}\\n\t}\\n\\n}\\n", "target": "140", "substitutes": {"A": ["E", "I", "R", "GA", "C", "L", "Y", "Z", "M", "D", "SA", "S", "B", "P", "V", "NUM", "AB", "U", "a", "K", "BA", "G", "H", "X", "mA", "T", "CA"], "N": ["E", "I", "NN", " C", "C", "L", "Y", "Z", "M", "D", " B", "S", "B", "F", "P", "V", "n", "NR", "NB", " n", "NA", "K", "J", " S", "NS", "X", "T", "Ns"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        int Y = sc.nextInt();\\n        int res10000 = -1, res5000 = -1, res1000 = -1;\\n        for(int i = 0; i <= N; i++) {\\n            for(int j = 0; j + i <= N; j++) {\\n                int k = N - i - j;\\n                int total = 10000*i + 5000*j + 1000*k;\\n                if(total == Y) {\\n                    res10000 = i;\\n                    res5000 = j;\\n                    res1000 = k;\\n                }\\n            }\\n        }\\n        System.out.println(res10000 + \" \" + res5000 + \" \" + res1000);\\n    }\\n}\\n", "target": "133", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "Sync", "sch", "sq", "gc", "out", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "ser", "cl", "lc", "ctl", "ctrl", "mc", "nl", "res", "inc", "scl", "cr", "ch", "system", "ck", "cgi", "ss", "conv", "dc", "cs", "tc", "Sc", "sb", "scan"], "N": ["E", "I", "NN", "R", "NC", "C", "AN", "L", "Q", "A", "Num", "NT", "Z", "O", "M", "D", "S", "EN", "F", "P", "V", "n", "NR", "CNN", "Ni", "NL", "W", "NB", "TN", "NI", "GN", "NA", "K", "G", "J", "H", "NS", "X", "SN", "Total", "T"], "Y": ["E", "I", "YC", "R", "C", "L", "TY", "Q", "Z", "M", "AY", "S", "B", "P", "V", "YY", "SY", "y", "W", "YS", "NY", "CH", "K", "TH", "G", "J", "H", "MY", "X", "Total", "T", "YN"], "res10000": [" res3000", "ret1000", "Res8000", "res8000", " res000", "resources10000", "Res2000", "resources1000", "pres5000", "Res1000", "ret10000", "res000", "res2000", "resp000", "resp1000", "res4000", "resources4000", " res4000", " res2000", "Res000", "Res3000", "Res5000", "resp10000", "ret5000", "res3000", "resp2000", "Res10000", "pres8000", "pres1000", "ret8000", "resources3000", "pres10000", "Res4000"], "res5000": ["res1500", "gr1500", " res3000", "resolution1000", "re4000", "res8000", "re2500", "reset1000", "res6000", "pres5000", "pres2500", "re3000", " res6000", "re5000", "res4000", "resolution5000", " res4000", " res1500", "reset5000", "re8000", "resolution6000", "gr1000", "pres4000", "res3000", "gr6000", "pres8000", " res8000", "re1000", "resolution1500", "reset8000", "gr5000", "reset3000", "res2500", " res2500"], "res1000": [" res3000", "Res8000", "res8000", "ress1000", " res000", "re1968", "RES1000", "Res600", "ress5000", "RES8000", "Res1000", "re3000", " res1968", "ress600", "res000", "res1968", "ress3000", "res600", " res600", "Res000", "Res3000", "Res5000", "re8000", "res3000", "RES5000", " res8000", "re1000", "RES000", "Res1968"], "i": ["zi", "iq", "ie", "hi", "ci", "I", "ami", "ql", "\u0438", "si", "io", "at", "sim", "u", "ic", "ai", "xi", "us", "t", "ei", "is", "ind", "ori", "x", "o", "ani", "mi", "n", "ir", "y", "im", "v", "info", "ix", "gi", "ui", "ri", "ki", "ia", "ik", "qi", "pi", "ji", "ij", "it", "e", "ii", "p", "ini", "di", "ni", "li", "fi", "in", "ti", "bi", "ims", "m", "iu", "phi", "ip"], "j": ["note", "f", "bj", "zone", "si", "jl", "js", "obj", "out", "fr", "ion", "oj", "job", "o", "ne", "z", "je", "son", "uj", "n", "ijk", "ge", "tr", "jc", "pt", "y", "v", "im", "q", "dj", "json", "l", "pr", "ju", "aj", "jp", "jo", "let", "ji", "ij", "J", "jump", "br", "it", "e", "p", "ch", "b", "jj", "jit", "db", "li", "fi", "bi", "kj", "m", "el", "g", "ja"], "k": ["wk", "kan", "ka", "kh", "ak", "dk", "kk", "kj", "sk", "ks", "n", "ijk", "ke", "kar", "key", "kid", "y", "kt", "kind", "q", "ko", "ki", "kw", "kok", "ik", "ku", "kl", "K", "uk", "ok", "ck", "kr", "kil", "mk", "z", "m", "km", "tk"], "total": ["stable", "known", "note", "done", "important", "otal", "raw", "complete", "all", " TOTAL", "human", "base", "count", " Total", "sum", "global", "parent", "type", "eta", "successful", "full", "n", "needed", "info", "valid", "this", "serial", "unique", "ready", "available", "table", "current", "meta", "normal", "result", "Total", "number", "finished", "OTAL", "percent"]}}
{"code": "import java.util.Scanner;\\n\\npublic final class Main {\\n    public static void main(String[] args){\\n        Scanner stdIn = new Scanner(System.in);\\n        \\n        int n = stdIn.nextInt();\\n        int[] d = new int[n];\\n        for(int i=0; i<n; i++){\\n            d[i] = stdIn.nextInt();\\n        }\\n\\n        quick_sort(d, 0, d.length-1);\\n\\n        if(n%2 == 1){\\n            System.out.println(0);\\n        }else{\\n            System.out.println(d[n/2] - d[n/2-1]);\\n        }\\n    }\\n\\n    static void quick_sort(int[] d, int left, int right) {\\n        if (left>=right) {\\n            return;\\n        }\\n        int p = d[(left+right)/2];\\n        int l = left, r = right, tmp;\\n        while(l<=r) {\\n            while(d[l] < p) { l++; }\\n            while(d[r] > p) { r--; }\\n            if (l<=r) {\\n                tmp = d[l]; d[l] = d[r]; d[r] = tmp;\\n                l++; r--;\\n            }\\n        }\\n        quick_sort(d, left, r);  // \u30d4\u30dc\u30c3\u30c8\u3088\u308a\u5de6\u5074\u3092\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\\n        quick_sort(d, l, right); // \u30d4\u30dc\u30c3\u30c8\u3088\u308a\u53f3\u5074\u3092\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\\n    }\\n}", "target": "119", "substitutes": {"stdIn": ["stdin", "stOut", "standardin", "stInput", " stdin", "standardInit", "sysOut", "standardIns", "ndIn", "sysIn", "stin", "sysInit", " STDOut", "sysIns", " stdRec", " stdOut", "stIn", " stdInit", "standardInput", " stdIns", "stdInput", "standardIn", "stdIns", "stdInit", " STDIns", " STDRec", "standardOut", " stdInput", "ndIns", "stdOut", "stdRec", "ndOut", " STDIn", "ndRec"], "n": ["nm", "nb", "ct", "t", "ren", "ln", "nc", "all", "net", "ll", "count", "k", "nan", "na", "o", "no", "x", "ng", "names", "size", "len", "c", "out", "nn", "v", "en", "dn", "m", "q", "w", "N", "j", "nu", " N", "nl", "np", "cn", "norm", "sn", "ns", "nd", "nt", "number", "num", "missing", "un", "z", "ne", "g"], "d": ["done", "dd", "de", "dra", "da", "o", "debug", "df", "y", "w", "dh", "dat", "result", "dc", "g", "def", "ed", "f", "ct", "t", "ad", "du", "send", "dr", "D", "add", "dump", "fd", "md", "s", "del", "j", "b", "nd", "gd", "dates", "db", "ld", "rd", "list", "dos", "m", "sd", "ind", "days", "dec", "diff", "e", "td", "di", "ds", "z", "did", "dim", "dp", "dx", "data", "pd", "c", "h", "v", "dn", "q", "update", "dl", "dict", "dt"], "i": ["iter", "ie", "hi", "ci", "I", "io", "si", "t", "sim", "ic", "oi", "us", "me", "ai", "u", "base", "is", "ori", "o", "x", "ms", "client", "mi", "err", "im", "y", "init", "gi", "q", "ix", "ui", "j", "uri", "batch", "qi", "pi", "multi", "my", "e", "ii", "it", "ex", "di", "ini", "id", "li", "ti", "bi", "set", " I", "m", "iu", "phi", "g", "ip"], "left": ["root", "length", "level", "first", "L", "t", "al", "ul", "both", "inner", "ln", "from", "ll", "net", "node", "last", "out", "x", "sp", "ml", "center", "lo", "min", "low", "lower", "pl", "local", "w", "lit", "lc", "small", "j", "lr", "kl", "start", "nl", "lt", "old", "st", "le", "offset", "ls", "to", "field", "top", "rel", "li", "list", "lp", "m", "Left", "el", "ell", "loc"], "right": ["root", "rac", "over", "success", "record", "upper", "R", "back", "ru", "range", "before", "th", "rc", "re", "radius", "ren", "all", "ro", "max", "round", "rew", "rem", "rank", "tr", "head", "reverse", "only", "correct", "remote", "third", "mr", "rx", "rest", "red", "start", "recent", "after", "west", "res", "through", "Right", "rt", "result", "end", "rel", "row", "then", "rw", "rd", "ry", "hr", "self", "block"], "p": ["pc", "pp", "pb", "t", "pe", "at", "wp", "part", "pro", "mp", "op", "pa", "par", "vp", "tp", "ps", "pm", "sp", "pkg", "P", "c", "rep", "h", "php", "ap", "v", "pg", "q", "per", "pl", "j", "perm", "jp", "np", "pi", "ph", "fp", "b", "pre", "pat", "proc", "pad", "cp", "lp", "m", "g", "ip"], "l": ["L", "t", "sl", "ul", "al", "lu", "ll", "lay", "len", "ml", "h", "lo", "lb", "v", "cl", "low", "lr", "pl", "lit", "lc", "del", "local", "j", "dl", "hl", "lock", "kl", "lp", "nl", "lt", "tl", "b", "le", "ls", "la", "li", "fl", "ld", "rl", "ln", "line", "el", "g", "ell", "loc"], "r": ["rec", "ar", "R", "ru", "range", "t", "u", "ren", "re", "rc", "inner", "er", "ro", "dr", "fr", "ur", "rem", "rr", "err", "c", "tr", "v", "ry", "q", "lr", "rh", "rid", "ri", "rm", "mr", "pr", "j", "rf", "rb", "rest", "rar", "res", "it", "e", "cr", "br", "rs", "rt", "rel", "nr", "row", "hr", "rd", "rw", "vr", "m", "g", "sr", "rn"], "tmp": ["mb", "cmp", "repl", "clip", "py", "pp", "ctx", "t", "obj", "amp", "mm", "mp", "mut", "op", "tp", "sp", "pkg", "MP", "qq", "partial", "trap", "prop", "prime", "emp", "orig", "pl", "term", "perm", "rm", "jp", "np", "tt", "tm", "etc", "vm", "txt", "td", "ret", "nt", "mk", "comp", "cp", "ptr", "temp", "pretty", "tc", "attr", "ip"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.ArrayDeque;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t\tArrayDeque<Task> q = new ArrayDeque<Task>();\\n\t\tArrayDeque<Task> ans = new ArrayDeque<Task>();\\n\t\t\\n\t\ttry {\\n\t\t\tString[] param = in.readLine().split(\" \");\\n\t\t\tint lim = Integer.parseInt(param[0]);\\n\t\t\tint time = Integer.parseInt(param[1]);\\n\t\t\t\\n\t\t\tfor (int i = 0; i < lim; i++) {\\n\t\t\t\tparam = in.readLine().split(\" \");\\n\t\t\t\t\\n\t\t\t\tTask t = new Task(Integer.parseInt(param[1]), param[0]);\\n\t\t\t\tq.add(t);\\n\t\t\t}\\n\t\t\t\\n\t\t\tint past = 0;\\n\t\t\twhile (q.isEmpty() == false) {\\n\t\t\t\tTask tmp = q.remove();\\n\t\t\t\tboolean flag = tmp.minusTime(time);\\n\t\t\t\t\\n\t\t\t\tif (flag == true) {\\n\t\t\t\t\tpast = past + tmp.getTIme() + time;\\n\t\t\t\t\tans.add(new Task(past, tmp.getName()));\\n\t\t\t\t} else {\\n\t\t\t\t\tpast = past + time;\\n\t\t\t\t\tq.add(tmp);\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\t\\n\t\t\twhile (ans.isEmpty() == false) {\\n\t\t\t\tTask tmp = ans.remove();\\n\t\t\t\tSystem.out.println(tmp.getName() + \" \" + tmp.getTIme());\\n\t\t\t}\\n\t\t} catch (NumberFormatException e) {\\n\t\t\t// TODO Auto-generated catch block\\n\t\t\te.printStackTrace();\\n\t\t} catch (IOException e) {\\n\t\t\t// TODO Auto-generated catch block\\n\t\t\te.printStackTrace();\\n\t\t}\\n\t}\\n}\\n\\nclass Task {\\n\tprivate int time;\\n\tprivate String name;\\n\t\\n\tpublic Task(int t, String n) {\\n\t\ttime = t;\\n\t\tname = n;\\n\t}\\n\t\\n\tpublic int getTIme() {\\n\t\treturn time;\\n\t}\\n\t\\n\tpublic String getName() {\\n\t\treturn name;\\n\t}\\n\t\\n\tpublic boolean minusTime(int t) {\\n\t\ttime = time - t;\\n\t\tif (time <= 0) return true;\\n\t\treturn false;\\n\t}\\n}", "target": "231", "substitutes": {"in": ["sql", "din", "OUT", "serv", "IN", "at", "inn", "inner", "from", "mm", "bin", "re", "er", "is", "out", "ins", "add", "std", "r", "on", "rin", "err", "n", "source", "thin", "isin", "init", "conf", "info", "con", "per", "ri", "nin", "this", "gin", " din", "l", "doc", "asin", "cin", "In", "inc", "e", "input", "world", "session", "stream", "b", "old", "file", "ini", "rt", "user", "inf", "reader", "log", "get"], "q": ["iq", "quest", "qs", "ues", "ql", "pp", "qt", "aq", "pe", "dq", "Q", "eq", "sh", "ox", "sq", "x", "ps", "r", "que", "qq", "n", "qu", "h", "os", "s", "cl", "asks", "ue", "gs", "req", "e", "qa", "p", "ck", "ch", "queue", "quer", "requ", "as", "ques", "qv", "z", "query", "g"], "ans": ["ras", "nets", "es", "ANS", "qs", "anks", "anes", "ats", "ums", "aps", "ann", "ies", "oss", "ants", "ins", "uns", "ms", "ps", "times", "aus", "acs", "an", "ians", "ags", "angs", "ones", "os", "amps", "s", "rans", "aos", "ons", "ens", "anas", "ares", "ars", "ams", "ations", "gs", "ates", "ns", "ls", "as", "ques", "works", "ips", "actions", "arms", "arts", "xs", "ts"], "param": ["prom", "pai", "pair", "attribute", "view", "tag", "mm", "dim", "part", "params", "sum", "arg", "par", "col", "config", "pm", "rem", "sp", "request", "arm", "dm", "prop", "Parameter", "label", "resource", "pixel", "init", "cal", "argument", "info", "second", "prefix", "pri", "term", "perm", "comment", "Param", "process", "method", "string", "mem", "service", "property", "req", "tem", "sample", "input", "p", "form", "dem", "command", "option", "proc", "template", "detail", "cp", "aram", "minute", "begin", "meter", "query", "block"], "lim": ["mill", "iter", "view", "range", "pos", "scale", "mm", "max", "loop", "bound", "lam", "imm", "IM", "Lim", "len", "mid", "lo", "med", "im", "cl", "orig", "where", "pl", "lit", "limit", "lon", "perm", "l", "sam", "lock", "marg", "mem", "lif", "mind", "limits", "Limit", "li", "log", "limited", "slice", "loc"], "time": ["mt", "length", "history", "sequence", "join", "xml", "speed", "date", "change", "frequency", "ime", "tim", "mode", "version", "port", "count", "now", "height", "x", "runtime", "type", "message", "size", "century", "period", "timeout", "TIME", "duration", "code", "context", "check", "money", "etime", "name", "im", "timer", "value", "string", "start", "step", "text", "tt", "delay", "tm", "clock", "template", "id", "event", "Time", "m", "tc", "test"], "i": ["I", "ie", "ci", "status", "sql", "si", "sim", "u", "ic", "ai", "us", "is", "ind", "o", "x", "mi", "c", "n", "cli", "index", "y", "v", "init", "gi", "im", "ui", "ix", "j", "batch", "qi", "pi", "multi", "it", "e", "ii", "print", "p", "ex", "di", "li", "bi", "m", "g", "ip"], "t": ["te", "tg", "qt", "ct", "tab", "at", "obj", "k", "o", "tf", "kat", "tp", "task", "et", "vt", "pt", "y", "tn", "this", "ts", "j", "a", "tt", "ot", "it", "p", "txt", "rt", "dt", "template", "to", "T", "temp", "tc", "tip", "tree", "g", "tk"], "past": ["root", "quest", "cas", "length", "history", "existing", "great", "vest", "made", "pause", "before", "shape", "wp", "hold", "max", "now", "birth", "x", "almost", "period", "full", "faced", "ape", "ap", "historic", "ast", "today", "ago", "fed", "this", "holder", "present", "aste", "ced", "rest", "future", "lat", "start", "recent", "after", "delay", "Present", "p", "noon", "old", "pre", "form", "paste", "Past", " Past", "older", "top", "poll", "ady", "missing", "cess", "pres", "post", "held", "draw", "test", "cast"], "tmp": ["mmm", "repl", "cmp", "aux", "tg", "fake", "nb", "dd", "ctx", "tv", "img", "obj", "amp", "mm", "net", "part", "pro", "mp", "out", "vp", "tf", "dump", "tp", "msg", "tar", "pm", "cmd", "md", "sp", "pkg", "vt", "tn", "v", "emp", "Temp", "cop", "perm", "good", "st", "sam", "elt", "rb", "unknown", "jp", "np", "aaa", "tt", "p", "tm", "etc", "resp", "jj", "txt", "td", "nd", "old", "mk", "trip", "nt", "rt", "yy", "cp", "proc", "temp", "stuff", "nom", "m", "task", "attr"], "flag": ["mail", "bool", "status", "func", "dep", "al", "tag", "agged", "card", "count", "ord", "age", "save", "car", "cond", "job", "bit", "band", "Flag", "stage", "flags", "valid", "bird", "good", "lag", "mask", "ag", "bug", "deg", "char", "plan", "compl", "ground", " Flag", "cmd", "agg", "sun", "ret", "qual", "sav", "cloud", "field", "ld", "pic"]}}
{"code": "\\n//implement the sieve of eratos\\nimport java.util.Scanner;\\n\\n\\n//we will use the filter method to construct the prime table from 1 to n\\n\\n\\npublic class Main {\\n\t//we can thus use binary search to check whether i is in the table\\n\tstatic final int N = 100000000;\\n\t\\n\t\\n\t\\n\t// this is no good for java, so slow\\n\tpublic static boolean[] eratos(int n){\\n\t\t// the original value should be false\\n\t\tboolean [] table = new boolean[n+1];\\n\t\t\\n\t\ttable[0] = table[1] = true;\\n\t\t\\n\t\tint k = (int)Math.sqrt(n);\\n\t\tfor(int i = 2; i <= k; i++) {\\n\t\t\tif(!table[i]) {\\n\t\t\t\tfor(int j = 2*i; j <= n; j+=i) {\\n\t\t\t\t\ttable[j] = true;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\treturn table;\\n\t}\\n\t\\n\t\\n\tpublic static void main(String[] args) {\\n\t\tScanner cin = new Scanner(System.in);\\n\t\tboolean[] table = eratos(N);\\n\t\t\\n\t\tint len = cin.nextInt();\\n\t\tint count = 0;\\n\\n\t\t\\n\t\twhile(len > 0) {\\n\t\t\tcount += (!table[cin.nextInt()])? 1:0;\\n\t\t\tlen--;\\n\t\t}\\n\t\tSystem.out.println(count);\\n\t}\\n\\n\\n}", "target": "226", "substitutes": {}}
{"code": "import java.io.BufferedReader;\\nimport java.io.*;\\nimport java.util.*;\\nimport java.util.ArrayList;\\nimport java.util.Iterator;\\nimport java.util.List;\\nimport java.util.Collections;\\nimport java.util.Arrays;\\n\\npublic class Main {\\n\tpublic static void main(final String[] args){\\n    \\n    Scanner sc = new Scanner(System.in);\\n    int a = sc.nextInt();\\n    int b = sc.nextInt();\\n    int c = sc.nextInt();\\n    //int x = sc.nextInt();\\n    List<String> list = new ArrayList<>();\\n    int count = 0;\\n\\n    if(b + c - a <= 0){\\n        System.out.println(0);\\n    }else{\\n        System.out.println(b + c - a);\\n    }\\n  \\n\\n    \\n\\n\\n    \\n\\n\\n    \\n\\n    \\n    \\n    \\n\\n\\n\\n    \\n\\n\\n\\n\\n\\n}\\n}", "target": "45", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "psc", "ctx", "usc", "sv", "nc", "bc", "asc", "sync", "sh", "comm", "sch", "gc", "sq", "disc", "fc", "sec", "sk", "sp", "isc", "esc", "spec", "cl", "ko", "lc", "irc", "Sc", "ctl", "desc", "mc", "inc", "acc", "scl", "cr", "capt", "ch", "tch", "txt", "ss", "sic", "conv", "dc", "cle", "cs", "tc", "scan"], "a": ["ar", "aa", "f", "ra", "al", "ai", "area", "va", "A", "o", "ab", "x", "oa", "r", "ao", "ba", "an", "n", "ap", "e", "p", "ca", "ata", "as", "sa"], "b": ["nb", "f", "bb", "bc", "bf", "ub", "i", "ab", "o", "B", "r", "ba", "n", "eb", "y", "v", "ob", "cb", "j", "rb", "e", "br", "p", "be", "bi", "d", "g"], "c": ["f", "C", "ct", "t", "u", "count", "cd", "fc", "ce", "n", "cc", "h", "v", "lc", "cb", "e", "cr", "cm", "ca", "cf", "cp", "cs", "ec", "d", "m", "tc", "ac"]}}
{"code": "import java.util.Scanner;\\nclass Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int N = sc.nextInt(); //\u53c2\u52a0\u8005N\u4eba\\n    int K = sc.nextInt(); //\u521d\u671f\u30dd\u30a4\u30f3\u30c8K\u70b9\\n    int Q = sc.nextInt(); //Q\u56de\u306e\u30dd\u30a4\u30f3\u30c8\u5909\u52d5\\n    int[] a = new int[Q];\\n    int[] b = new int[N];\\n    \\n    for(int i=0;i<Q;i++){\\n      a[i] = sc.nextInt();\\n      b[a[i]-1] += 1;\\n    }\\n    for(int j=0;j<N;j++){\\n      if(b[j]>Q-K){\\n        System.out.println(\"Yes\");\\n      }else{\\n        System.out.println(\"No\");\\n      }\\n    }\\n  }\\n}", "target": "102", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "usc", "tk", "sv", "rc", "nc", "bc", "cam", "sch", "gc", "sq", "uc", "sec", "sp", "c", "cc", "esc", "ser", "isc", "cl", "lc", "ctrl", "mc", "scl", "cr", "ok", "ch", "system", "ss", "cle", "cs", "ec", "Sc", "scan"], "N": ["E", "I", "NN", "R", "nb", "C", "L", "ID", "Z", "A", "NT", "M", "D", "S", "B", "F", "P", "V", "n", "NR", " n", "K", "J", "H", "NS", "X", "T", "Ns"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n    public static void main(String args[]) {\\n        Scanner s=new Scanner(System.in);\\n        int n=s.nextInt();\\n        long ans=0;\\n        int prev=s.nextInt();\\n        for(int i=1;i<n;i++){\\n            int ele=s.nextInt();\\n            if(ele<prev){\\n                ans+=prev-ele;\\n            }\\n            else{\\n                prev=ele;\\n            }\\n        }\\n\\n        System.out.print(ans);\\n    }\\n}", "target": "202", "substitutes": {"s": ["sm", "sort", "es", "qs", "hs", "fs", "utils", "sys", "serv", "sl", "ats", "js", "sts", "sv", "gets", "sh", "comm", "is", "abs", "sq", "ses", "ins", "S", "ms", "ps", "less", "h", "south", "ws", "ts", "l", "sam", "gs", "search", "ns", "rs", "ls", "so", "xs", "ds", "stats", "conv", "ssl", "sa", "as", "cs", "self", "ss", "sb", "se"], "n": ["nb", "f", "t", "network", "ln", "nc", "net", "mn", "nan", "na", "x", "no", "o", "ng", "c", "nn", "name", "v", "en", "N", "j", "l", "nu", "nl", "np", "sn", "ns", "nt", "ni", "nr", "num", "un", "z", "d", "m", "ne"], "ans": ["nets", "ANS", "orts", "es", "ions", "anks", "offs", "anes", "ats", "ums", "aps", "ads", "eds", "ann", "ants", "ins", "outs", "uns", "ms", "aus", "an", "ians", "ks", "ups", "vs", "ags", "os", "amps", "rans", "books", "lets", "aces", "posts", "olds", "asks", "ons", "ens", "ars", "vers", "gs", "ns", "rs", " olds", "ers", "ls", "as", "ds", "vals", "mas", "pan", "arts", "xs", "ents"], "prev": ["rec", "cmp", "rev", "history", "Previous", "zero", "upper", "env", "pp", "snap", "before", "eps", "ren", "PRE", "map", "mp", "ref", "sup", "last", "inv", "ps", "tmp", "rem", "rep", "cur", "var", "ev", "vs", "prime", "ap", "head", "v", "orig", "pri", "adj", "vious", "el", "next", "av", "kl", "jp", "jump", "res", "Prev", "p", "pre", "le", "nav", "val", "rel", "ptr", "then", "temp", "buf", "pres", "gov", "ne", "pred"], "i": ["zi", "iq", "iter", "I", "ie", "ci", "mill", "hi", "\u0438", "si", "ic", "sim", "ai", "xi", "ei", "us", "is", "ish", "ind", "x", "mi", "cli", "y", "im", "gi", "v", "ix", "init", "ui", "ki", "j", "qi", "pi", "multi", "it", "ii", "gu", "di", "ini", "id", "li", " ii", "ti", "bi", "m", "iu", "phi", "ip", "asi"], "ele": ["iter", "Ele", "ie", "tile", "tle", "ple", "seq", "pe", "lu", "ger", "sol", "eu", "ole", "vec", "elo", "ne", "tiny", "euro", "vet", "mid", "ev", "entry", "eb", "fe", "letter", "ale", "del", "ea", "elta", "entity", "oe", "elt", "ffe", "deg", "char", "aret", "ige", "lem", "e", "sel", "eval", "le", "element", "pet", "flake", "vals", "ee", "li", "LE", "val", "el"]}}
{"code": "import java.util.Scanner;\\npublic class Main{\\n  public static void main(String[] args){\\n\t  Scanner scan = new Scanner(System.in);\\n\t  int ac = 0;\\n\t  int wa = 0;\\n\t  int tle = 0;\\n\t  int re = 0;\\n\t  int num = scan.nextInt();\\n\t   String test = \"\";\\n\t  for(int i=0;i<num+1;i++) {\\n\t\t  test = scan.nextLine();\\n\t\t  if (test.equals(\"AC\")) {\\n\t\t\t  ac++; \\n\t\t  }\\n\t\t  if (test.equals(\"WA\")) {\\n\t\t\t  wa++;\\n\t\t  }\\n\t\t  if (test.equals(\"TLE\")) {\\n\t\t\t  tle++;\\n\t\t  }\\n\t\t  if (test.equals(\"RE\")) {\\n\t\t\t  re++;\\n\t\t  }\\n\t  }\\n\t  \\n\t  System.out.println(\\n\t\t\t  \"AC x \" + ac+\\n\t\t\t  \"\\nWA x \" + wa+\\n\t\t\t  \"\\nTLE x \"+ tle+\\n\t\t\t  \"\\nRE x \" + re);\\n  }\\n}", "target": "160", "substitutes": {"scan": ["report", "connect", "sys", "show", "get", " scanner", "san", "Scan", "sv", "se", "ann", "scale", "sync", "send", "reach", "gate", "out", "gc", "stat", "find", "sum", "save", "skip", "parse", "r", "sb", "sur", "check", "an", "n", "read", "nn", "ser", "v", "scroll", "conf", "ner", "store", "sin", "gen", "ch", " Scan", "can", "system", "search", "sn", "run", "util", "proc", "row", "in", "set", "query", "sc", "g"], "ac": ["iac", "rac", "aw", "cas", "pc", "jac", "ack", "aic", "cu", "ax", "ic", "at", "pac", "auc", "aut", "ad", "sac", "asc", "ain", "ox", "au", "ab", "anc", "fc", "ach", "aus", "acs", "c", "cc", "mac", "ap", "acon", "mic", "ace", "AC", "Ac", " cac", "ag", "co", "mc", "acl", "acc", "ex", "ca", "alpha", "aca", "att", "dc", "cs", "act", "ma", "unc"], "wa": ["aw", "sw", "wd", "ax", "wm", "dra", "wal", "wy", "lambda", "aws", "awa", "war", "ww", "wt", "ha", "da", "wat", "na", "oa", "WA", "tw", "ty", "w", "ws", "wh", "we", "wx", "fw", "nw", "sa", "wl", "rw", "wait", "Wa", "wo", "ja"], "tle": ["tile", "olt", "te", "lu", "pe", "ul", "tto", "tool", "sett", "tz", "sal", "au", "tie", "ble", "tor", "bolt", "gre", "sat", "ty", "fle", "ale", "tu", "tc", "yle", "tele", "ta", "kl", "lif", "ly", "tt", "sel", "lem", "tl", "le", "tif", "ele", "sle", "ssl", "ule", "ti", "tf", "sr"], "re": ["reg", "rec", "arre", "ru", "pe", "bre", "ro", "war", "ref", "ree", "ile", "spe", "reat", "r", "gre", "rem", "are", "rep", "ce", "ge", "RE", "ere", "ale", "Re", "one", "cre", "ri", "ore", "we", "ue", "co", "mem", "res", "e", "pre", "le", "rex", "ret", "mor", "be", "rel", "genre", "ry", "ber", "ne", "fr"], "num": ["om", "nm", "mon", "nb", "al", "dim", "net", "Num", "max", "sum", "na", "no", "umen", "nam", "n", "cum", "name", "NUM", "cal", "en", "con", "non", "nu", "phone", "su", "np", "multi", "current", "total", "mis", "um", "to", "number", "un", "nom", "mult", "m", "ne"], "test": ["ver", "iter", "est", "pred", "zero", "te", "py", "show", "t", "pe", "tag", "style", "match", "pret", "item", "the", "tests", "type", "dev", "unit", "train", "err", "rule", "rep", "check", "tr", "var", "prop", "label", "spec", "testing", "info", "where", "valid", "lower", "good", "desc", "rest", "title", "tested", "store", "tt", "Test", "print", "feature", "p", "it", "old", "st", "pre", "txt", "fail", "user", "then", "temp", "trace", "str", "set", "query", "val", " Test"], "i": ["iq", "iter", "I", "mill", "ci", "hi", "ie", "inter", "\u0438", "si", "ic", "sim", "u", "ai", "xi", "us", "ish", "ind", "x", "o", "mi", "n", "index", "gi", "init", "info", "ix", "q", "ui", "j", "batch", "qi", "pi", "multi", "it", "ii", "uu", "ini", "di", "gu", "ex", "id", "li", " ii", "ti", "bi", "set", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\\n        \\n        String[] input = br.readLine().split(\" \");\\n        int n = Integer.parseInt(input[0]);\\n        int a = Integer.parseInt(input[1]);\\n        int b = Integer.parseInt(input[2]);\\n        \\n        out.println(Math.min(a * n, b));\\n        out.close();\\n        \\n    }\\n}", "target": "213", "substitutes": {"br": ["bp", "bh", "bridge", "er", "dr", "bro", "bf", "bl", "gr", "r", "tr", "shr", "bs", "lr", "yr", "bt", "mr", "Br", "pr", "rb", "bd", "cr", "vr", "kr", "ch", "BR", "browser", "be", "hr", "buf", "fr", "str", "bi", "ber", "wr", "bn"], "out": ["or", "writer", "error", "exit", "ver", "report", "sys", "OUT", "io", "serv", "at", "t", "flush", "obj", "all", "net", "write", "exec", "sum", "outs", "o", "no", "client", "msg", "r", "on", "err", "up", "by", "name", "os", "v", "info", "con", "output", "w", "Out", "outer", "put", "screen", "co", "res", "crit", "it", "print", "pool", "can", "ch", "gt", "file", "ex", "result", "nt", "null", "to", "ou", "in", "log", "str", "set", "list"], "input": ["format", "PUT", "history", "hello", "attribute", "xml", "feed", "view", "select", "raw", "hidden", "focus", "Input", "add", "parse", "config", "check", "request", "pull", "image", "spec", "init", "info", "where", "prefix", "output", "json", "batch", "unknown", "pattern", "lat", "char", "step", "sample", "it", "qa", "print", "form", "supp", "cmd", "command", "search", "active", "att", "in", "list", "set", "str", "query", "point", "get", "ip"], "n": ["nv", "nb", "t", "bn", "nc", "net", "mn", "i", "na", "x", "d", "r", "on", "c", "nn", "tn", "en", "dn", "m", "N", "j", "l", "nu", "np", "cn", "p", "sn", "ns", "nt", "number", "num", "ln"], "a": ["aux", "ed", "aa", "f", "ax", "t", "al", "at", "area", "xa", "va", "A", "fa", "au", "i", "ab", "pa", "oa", "ao", "ba", "c", "m", "ea", "j", "sta", "ity", "aj", "ae", "acc", "aff", "af", "p", "alpha", "la", "sa", "ma", "ac"], "b": ["nb", "f", "bb", "t", "u", "bc", "bis", "i", "o", "ab", "B", "body", "fb", "c", "ba", "blue", "eb", "ib", "y", "v", "bs", "j", "l", "bot", "rb", "e", "p", "db", "bi", "z", "d", "m", "g"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.List;\\nimport java.util.Scanner;\\nimport java.util.stream.IntStream;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString S = sc.next();\\n\t\tString T = sc.next();\\n\t\tint A = sc.nextInt();\\n\t\tint B = sc.nextInt();\\n\t\tString U = sc.next();\\n\\n\t\tif (S.equals(U)) {\\n\t\t\tSystem.out.print(A - 1 + \" \" + B);\\n\t\t} else {\\n\t\t\tSystem.out.print(A + \" \" + (B - 1));\\n\t\t}\\n\t}\\n}", "target": "155", "substitutes": {"sc": ["SC", "cmp", " SC", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "nc", "bc", " unsc", "asc", "sync", "exp", "sh", "sch", "sq", "gc", "disc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "ko", "lc", "irc", " Sc", "ctl", "cons", "mc", "nl", "inc", "acc", "scl", "cr", " scr", "p", "ch", "ck", "tch", "cgi", "ss", "sci", "conv", "dc", "cle", "cs", "tc", "Sc"], "S": ["SC", "E", "I", "R", "C", "L", "TS", "Y", "SS", "SU", "Q", "O", "M", "D", "SA", "F", "P", "V", "SB", "s", "N", "STR", "SI", "G", "H", "SP", "ST", "X"], "T": ["E", "I", "TB", "R", "WT", "C", "L", "t", "TS", "Y", "TT", "Q", "Z", "TA", "O", "M", "D", "F", "P", "V", "W", "Tu", "N", "K", "G", "Type", "TR", "X"], "A": ["Alpha", "AS", "AD", "R", "AF", "GA", "AL", "AN", "RA", "AE", "L", "AI", "Area", "AV", "TA", "M", "AA", "AP", "SA", "HA", "ACC", "P", "IA", "AU", "AB", "AH", "EA", "a", "NA", "BA", "AR", "H", "PA", "An", "As", "AT", "LA", "AST", "CA"], "B": ["I", "R", "TB", "GB", "OB", "C", "L", "RB", "Y", "BL", "Z", "M", "D", "BU", "BO", "BI", "BB", "P", "V", "DB", "BE", "SB", "IB", "AB", "N", "BA", "G", "J", "WB", "b", "BR", "BC", "BS", "LB", "VB", "Bs", "BER"], "U": ["EU", "E", "UT", "I", "Su", "UID", "UD", "L", "u", " u", "SU", "Q", "UC", "UU", "O", "M", "D", "UF", "US", "UE", "F", "P", "V", "UR", "UP", "OU", "LU", "MU", "Ut", "UV", "G", "UI", "UX", "UL", "UM", "CU"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(String [] commandLineArgument){\\n\\n        Scanner input = new Scanner(System.in);\\n        int n = input.nextInt() , m = input.nextInt();\\n        int answer = (m * (m - 1))/2;\\n        answer += (n * (n - 1))/2;\\n        System.out.println(answer);\\n        input.close();\\n\\n    }\\n\\n}\\n\\n", "target": "49", "substitutes": {"commandLineArgument": ["commandlineArgment", "commandLineParument", "commandLineArguments", "commandLineParLine", "commandLineArgLine", "commandLineAgument", "commandLine_ment", "commandlineArguments", "commandlineArgument", "commandlineParLine", "commandlineParuments", "commandLine_uments", "commandLine_ument", "commandlineParment", "commandLineParuments", "commandLineAguments", "commandlineParument", "commandLineParment", "commandlineArgLine", "commandLineArgment", "commandLineAgLine", "commandLine_Line", "commandLineAgment"], "input": [" Input", "open", "xml", "socket", "feed", "storage", "view", "select", "iterator", "inner", "raw", "all", "out", "sq", "sub", "focus", "sum", "Input", "add", "client", "parse", "conn", "skip", "save", "subject", "request", "cur", "source", "image", "read", "upload", "submit", "unsigned", "init", "q", "output", "next", "pattern", "start", "char", "acl", "inc", "qa", "form", "quick", "search", "accept", "active", "http", "enter", "inf", "ssl", "in", "reader", "self", "query", "get"], "n": ["nm", "nb", "network", "t", "ln", "nc", "M", "mn", "k", "out", "i", "na", "o", "ms", "r", "on", "c", "an", "nn", "name", "v", "en", "dn", "q", "N", "j", "l", "a", "nu", "nl", "np", "cn", "p", "sn", "ns", "num", "z", "d", "g"], "m": ["sm", "mt", "om", "f", "t", "mo", "bm", "mm", "me", "all", "M", "mn", "k", "ma", "i", "o", "ms", "r", "mi", "c", "dm", "h", "mu", "im", "v", "q", "man", "gm", "j", "perm", "l", "mr", "mc", "mx", "p", "tm", "b", "cm", "mk", "um", "mis", "d"], "answer": ["answered", "remember", "mate", "onse", "translation", "aq", "area", "reply", "offer", "item", "swers", "response", "say", "ask", "vote", " answered", "rep", "approximately", "entry", "echo", "v", "value", "q", "ve", "question", "query", "average", "next", "Answer", "energy", "interpret", "command", "uzzle", "search", "option", "result", "accept", "wer", "adder", "array", "support", "poll", " unanswered", "line", "address", "message"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint X = sc.nextInt();\\n\t\tint Y = sc.nextInt();\\n\t\tint Z = sc.nextInt();\\n\\n\t\tif(X>=Y) {\\n\t\t\tif(X>=Z) {\\n\t\t\t\tSystem.out.println(Y+Z);\\n\t\t\t}else {\\n\t\t\t\tSystem.out.println(X+Y);\\n\t\t\t}\\n\t\t}else {\\n\t\t\tif(Y>=Z) {\\n\t\t\t\tSystem.out.println(X+Z);\\n\t\t\t}else {\\n\t\t\t\tSystem.out.println(X+Y);\\n\t\t\t}\\n\t\t}\\n\t}\\n}\\n", "target": "89", "substitutes": {"sc": ["SC", "cmp", "osc", "pc", "sys", "syn", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sch", "out", "gc", "sq", "uc", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "ko", "lc", "ctl", "ctrl", "mc", "nl", "inc", "scl", "cr", "ch", "system", "ck", "cgi", "ss", "cle", "cs", "tc", "Sc", "scan"], "X": ["E", "XX", "I", "TX", "R", "L", "IN", "TY", "CE", "Q", "XXXX", "A", "Xi", "XXX", "HTTP", "M", "Win", "IE", "XT", "AX", "XM", "x", "S", "F", "P", "V", "YY", "INT", "XY", "OX", "W", "N", "U", "XL", "XP", "CH", "K", "G", "MX", "J", "H", "DX", "ZX", "UX", "T", "VAL", "IX", "RY", "EX", "FX"], "Y": ["E", "XX", "I", "JSON", "YC", "IP", "Yo", "C", "L", "OW", "Py", "HY", "TY", "Q", "A", "HTTP", "EY", "D", "IE", "My", "AY", "S", "B", "V", "YY", "SY", "IA", "XY", "y", "YD", "W", "Story", "YS", "N", "YA", "IO", "CH", "TH", "G", "MX", "J", "H", "Toy", "Ty", "MY", "BY", "OY", "T", "Year", "RY", "TO", "LY", "YES"], "Z": ["XX", "TX", "Zero", "R", "ZZ", "OUT", "C", "L", "TS", "IN", "SS", "AZ", "ZI", "Q", "ID", "UST", "OS", "M", "Az", "D", "FF", "S", "US", "F", "V", "YY", "NZ", "Zip", "W", "DD", "N", "Zone", "WH", "K", "TH", "G", "J", "Size", "H", "MS", "Ze", "ZX", "UX", "T", "ZE", "z", "ZA"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n  public static void main(String args[]){\\n    Scanner sc = new Scanner(System.in);\\n    \\n    int n = sc.nextInt();\\n    int m = sc.nextInt();\\n    \\n    int[] arr = new int[n];\\n    int cntAC = 0;\\n    int cntWA = 0;\\n    int[] cntWAs = new int[n];\\n    \\n    for(int i = 0; i < m; i++){\\n      int num = sc.nextInt();\\n      String res = sc.nextLine();\\n      //System.out.println(res);\\n      \\n      if(arr[num - 1] == 0){\\n        if(res.equals(\" AC\")){\\n          cntAC++;\\n          cntWA += cntWAs[num - 1];\\n          arr[num - 1] = 1;\\n        }else{\\n          cntWAs[num - 1]++;\\n        }\\n      }\\n    }\\n    \\n    System.out.println(cntAC + \" \" + cntWA);\\n  }\\n}", "target": "48", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "sl", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "sub", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "irc", "ctl", "desc", "dec", "mc", "inc", "scl", "cr", "sel", "ch", "ck", "sci", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["length", "nm", "nb", "t", "nc", "net", "mn", "k", "nan", "na", "x", "no", "o", "ng", "size", "r", "on", "c", "nn", "h", "v", "en", "N", "j", "l", "nu", "np", "pi", "cn", "p", "sn", "b", "ns", "nt", "ni", "number", "z", "d", "ne"], "m": ["sm", "mt", "nm", "f", "t", "bm", "mm", "M", "mn", "k", "ma", "o", "ms", "r", "mi", "c", "dm", "h", "im", "v", "gm", "j", "l", "mc", "p", "tm", "b", "cm", "z", "d", "km", "g"], "arr": ["ARR", "ar", "ray", "aa", "ax", "img", "aps", "obj", "map", "dr", "Ar", "bl", "arn", "gr", "rr", "err", "app", "av", "ars", "aaa", "br", "coll", "array", "str", "fr", "rays", "attr"], "cntAC": ["cnumSA", " ccountSA", "crtAL", "ccountGC", "cnumAC", " ccountAL", "ccountAL", "crtGC", "crtSA", "cnumGC", " ccountAC", "cnumAL", " cntSA", "ccountAC", "cntAL", "crtAC", "cntSA", " cntAL", "cntGC", "ccountSA", " ccountGC", " cntGC"], "cntWA": ["CntWC", "cNTWM", "cncSA", "countWM", "cncWC", "cNTWA", "cncWM", "CountWA", "CntWA", "CntSA", "CountSA", "cntWM", "cNTSA", "countSA", "countWC", "cncWA", "cntSA", "cntWC", "CntWM", "CountWC", "CountWM", "countWA", "cNTWC"], "cntWAs": ["cctSWAs", "cntWPAs", "cntWPSA", "cntWAA", "cntSWAs", "cctWAS", "cctWAs", "cctSWAA", "cntSWSA", "cntWAS", "cntWPAS", "cntSAS", "cntSSA", "cctWSA", "cntWPAA", "cntSWAA", "cctSWAS", "cntSAs", "cctWAA", "cntSAA", "cntSWAS", "cctSWSA", "cntWSA"], "i": ["zi", "iq", "iter", "I", "hi", "ci", "si", "io", "sim", "u", "ai", "xi", "us", "is", "ind", "x", "mi", "cli", "index", "im", "gi", "y", "init", "v", "ix", "ui", "q", "ki", "j", "a", "qi", "pi", "multi", "it", "ii", "chain", "gu", "ini", "di", "uu", "ex", "id", "li", "in", "ti", "bi", "iu", "phi", "ip"], "num": ["ver", "nm", "mon", "nb", "umi", "coord", "Num", "ref", "sum", "no", "on", "nam", "index", "name", "NUM", " number", "info", "con", "Number", "set", "nu", "um", "number", "nr", "umber", "row", "nom"], "res": ["RES", "def", "ress", "Res", "js", " ret", "re", " result", "rc", "obj", "reset", " out", "err", "rep", " str", "ser", "des", "results", " r", "rest", "buff", "req", "resp", "rs", "ret", "result", "vals", "val"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint n = sc.nextInt() - 1;\\n\t\tint m = sc.nextInt() - 1;\\n\\n\t\tint pattern = 0;\\n\\n\t\tfor(int i = n; i > 0; i--)\\n\t\t{\\n\t\t\tpattern += i;\\n\t\t}\\n\\n\t\tfor(int i = m; i > 0; i--)\\n\t\t{\\n\t\t\tpattern += i;\\n\t\t}\\n\\n\t\tSystem.out.println(pattern);\\n\\n\t}\\n}\\n", "target": "49", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "gc", "sq", "sub", "cv", "ng", "anc", "fc", "sec", "sb", "sp", "c", "cc", "isc", "esc", "cl", "lc", "ctl", "ctrl", "mc", "nl", "inc", "scl", "cr", "ok", "ch", "system", "ck", "ss", "conv", "dc", "cs", "tc", "Sc", "g", "scan"], "n": ["nv", "nb", "wn", "network", "t", "ren", "ln", "nc", "net", "mn", "nan", "na", "o", "x", "ng", "conn", "r", "c", "an", "nn", "fn", "gn", "en", "dn", "N", "l", "nu", "np", "nl", "cn", "sn", "ns", "ni", "nt", "nw", "nr", "num", "un", "d", "ne"], "m": ["sm", "mt", "f", "t", "bm", "mm", "mp", "M", "mn", "ma", "ms", "r", "pm", "mi", "c", "dm", "arm", "mu", "y", "v", "gm", "perm", "rm", "l", "mr", "mc", "pi", "p", "tm", "b", "cm", "um", "fm", "in", "mun", "d"], "pattern": ["format", "sequence", "path", "view", "window", "style", "ment", "shape", "lambda", "operation", "integer", "match", "model", "condition", "struct", "debug", "client", "response", "entry", "index", "password", "value", "prefix", "term", "column", "batch", "comment", "variable", "question", "mask", "Pattern", "bug", "string", "plan", "printf", "step", "method", "print", "feature", "p", "system", "form", "command", "like", "append", "search", "pat", "group", "ant", "template", "att", "field", "event", "trace", "pretty", "rint", "policy", "patch"], "i": ["zi", "iq", "iter", "I", "hi", "ci", "status", "f", "\u0438", "si", "io", "ic", "t", "sim", "iri", "ai", "xi", "ei", "oi", "integer", "is", "ind", "ori", "client", "mi", "cli", "index", "php", "gi", "im", "init", "y", "ix", "q", "ui", "info", "ri", "ki", "j", "uri", "ik", "qi", "pi", "multi", "ji", "ij", "it", "ii", "p", "chain", "ini", "di", "ni", "yi", "id", "li", "ti", "bi", "z", "iu", "phi", "ip", "asi"]}}
{"code": "import java.util.Arrays;\\nimport java.util.HashSet;\\nimport java.util.Scanner;\\nimport java.util.Set;\\n\\nclass Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int a = sc.nextInt();\\n    int b = sc.nextInt();\\n    int c = sc.nextInt();\\n    int k = sc.nextInt();\\n\\n    int[] num = new int[3];\\n    num[0] = a;\\n    num[1] = b;\\n    num[2] = c;\\n    Arrays.sort(num);\\n\\n    for (int i = 0; i < k; i++) {\\n      num[2] = num[2] * 2;\\n    }\\n\\n    System.out.println(num[0] + num[1] + num[2]);\\n  }\\n}", "target": "201", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "gc", "sq", "anc", "fc", "sec", "sp", "cc", "esc", "isc", "spec", "cl", "lc", "ctl", "mc", "inc", "scl", "cr", " scr", "ch", "system", "st", "ss", "sci", "conv", "dc", "cs", "tc", "Sc", "scan"], "a": ["ar", "aa", "t", "at", "ai", "area", "va", "A", "au", "ab", "oa", "r", "ao", "an", "ba", "am", "aaaa", "app", "ea", "ga", "ia", "sta", "l", "isa", "ta", "aj", "ae", "aaa", "\u00e1", "apa", "ca", "alpha", "la", "as", "sa", "act", "ma", "ac"], "b": ["mb", "nb", "bb", "u", "bc", "bis", "bl", "bf", "ab", "B", "fb", "g", "n", "ba", "blue", "eb", "ib", "by", "beta", "bs", "ob", "cb", "rb", "gb", "br", "db", "be", "bi", "d", "sb"], "c": ["ci", "cos", "C", "ct", "cu", "u", "com", "bc", "gc", "uc", "fc", "cod", "r", "ce", "n", "cc", "con", "lc", "cb", "co", "enc", "e", "cr", "cn", "ch", "cm", "ca", "cf", "dc", "cp", "cs", "ec", "d", "tc", "g", "ac"], "k": ["kn", "f", "u", "ka", "ak", "dk", "kk", "kj", "x", "r", "sk", "ks", "n", "ke", "v", "q", "ko", "w", "ki", "j", "kw", "l", "ik", "ku", "kl", "K", "p", "ck", "kr", "mk", "z", "d", "m", "g", "tk"], "num": ["note", "ver", "om", "nm", "zero", "mon", "nb", "date", "prim", "hex", "tim", "div", "th", "tag", "img", "dim", "bin", "coord", "net", "Num", "max", "node", "ord", "sum", "na", "no", "save", "add", "mom", "msg", "alph", "dev", "unit", "nam", "n", "nn", "pn", "cum", "mat", "NUM", "cal", "tu", "info", "con", "sam", "dec", "nu", "su", "mem", "np", "multi", "norm", "form", "dat", "txt", "total", "um", "conv", "number", "temp", "trace", "cache", "nom", "mult", "mod", "log", "draw", "test", "rub"], "i": ["zi", "iter", "I", "hi", "ci", "ie", "\u0438", "si", "io", "sim", "u", "us", "ai", "ms", "mi", "n", "cli", "im", "gi", "y", "init", "q", "ix", "ui", "ki", "j", "qi", "pi", "multi", "it", "ii", "gu", "ini", "di", "id", "li", "ti", "bi", "z", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\n/**\\n *\\n * @author yoshkur\\n */\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\ttry {\\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\t\tInputData inputData = new InputData(br);\\n\t\t\tStringBuilder sb = new StringBuilder();\\n\t\t\tsb.append(getArea(inputData));\\n\t\t\tsb.append(\" \");\\n\t\t\tsb.append(getLength(inputData));\\n\t\t\tSystem.out.println(sb.toString());\\n\\n\t\t} catch (IOException | NumberFormatException e) {\\n\t\t\tSystem.err.println(e.getLocalizedMessage());\\n\t\t}\\n\t}\\n\\n\tpublic static Integer getArea(InputData inputData) {\\n\t\treturn inputData.getHeight() * inputData.getWidth();\\n\t}\\n\\n\tpublic static Integer getLength(InputData inputData) {\\n\t\treturn (inputData.getHeight() + inputData.getWidth()) * 2;\\n\t}\\n\\n}\\n\\nclass InputData {\\n\\n\tprivate Integer height;\\n\tprivate Integer width;\\n\\n\tpublic InputData(BufferedReader br) throws IOException {\\n\t\tString line = br.readLine().trim();\\n\t\tString[] values = line.split(\" \");\\n\t\tthis.height = Integer.valueOf(values[0]);\\n\t\tthis.width = Integer.valueOf(values[1]);\\n\t}\\n\\n\tpublic Integer getHeight() {\\n\t\treturn height;\\n\t}\\n\\n\tpublic void setHeight(Integer height) {\\n\t\tthis.height = height;\\n\t}\\n\\n\tpublic Integer getWidth() {\\n\t\treturn width;\\n\t}\\n\\n\tpublic void setWidth(Integer width) {\\n\t\tthis.width = width;\\n\t}\\n}", "target": "92", "substitutes": {"br": ["bp", "bc", "bh", "bridge", "dr", "bro", "bl", "bg", "ctr", "r", "sp", "err", "tr", "obo", "shr", "bs", "bsp", "yr", "lr", "cb", "bt", "mr", "Br", "sr", "pr", "rb", "jp", "brace", "cr", "bd", "vr", "kr", "b", "BR", "rs", "db", "rel", "hr", "reader", "buf", "fr", "brush", "ber", "wr", "bn"], "inputData": ["editData", "activeQuery", "acceptDATA", "inputHas", "indexHas", "commandDef", "formDat", "uploadDat", "outputData", "loadData", "parentData", "editDATA", "infoDo", "outputMap", " inputDat", "inHas", "commandData", " InputDATA", "uploadDef", "currentDATA", " inputDef", "inputQuery", "inputdata", "clientDo", "acceptData", " inputQuery", " inputHas", " inputTag", " inputDATA", "authDat", "configDat", "commandDo", "configdata", "formType", "sourceData", "infodata", " inputInfo", "editQuery", "outputDATA", "initDATA", "clientLog", "parentDATA", "loaddata", "sourcedata", "initDone", "formdata", "inputDef", "currentMap", "acceptDat", "configData", " InputData", "uploadTag", "InputDATA", " inputDone", "loadDo", "inputDATA", "indexDat", "inputLog", " InputDone", "clientDef", "InputType", "infoDat", "InputDef", "sourceDat", "authData", "commandLog", "outputInfo", "InputDo", "inputTag", "currentInfo", "formData", "InputInfo", "acceptInfo", " inputMap", "InputDat", "infoData", "uploadData", "Inputdata", "loadDat", "activeData", "inInfo", "parentInfo", "parentDat", "inData", "InputData", "currentData", "authDef", "inDat", "inputInfo", "clientData", "inputType", "inputMap", "sourceType", "inputDo", "inputDat", "indexInfo", "configDo", "inputDone", "initData", "authTag", "InputLog", "indexData", "activeDATA"], "sb": ["sm", "mb", "bps", "sg", "sth", "addr", "nb", "sql", "storage", "pb", "sl", "bb", "sf", "bh", "sh", "ssh", "bg", "gc", "bf", "sq", "abs", "ab", "sub", "rob", "wb", "eb", "zb", "lb", "kb", "soc", "ib", "SB", "bs", " SB", "bsp", "shell", "cb", "bt", "sbm", "rb", "xb", "gb", "bd", "b", "ls", "lbs", "db", "ssl", "erb", "sa", "gob", "orb", "stuff", "stab", "lp", "bn"], "height": ["length", "history", "volume", "huge", "div", "window", "style", "capacity", "shape", "rows", "area", "radius", "all", "shift", "holes", "hold", "base", "padding", "data", "buffer", "type", "size", "arch", "rank", "dimension", "h", "host", "yt", "currency", "y", "confidence", "value", "ty", "html", "head", "ht", "above", "grow", "distance", "Height", "gravity", "power", "high", "hash", "kw", "hang", "header", "sky", "ity", "he", "ows", "density", "stroke", "resolution", "alpha", "id", "angle", "layout", "depth", "cache", "bottom", "frame"], "width": ["format", "fill", "Width", "length", "path", "span", "status", "weights", "section", "orth", "crop", "idth", "position", "window", "content", "radius", "shape", "version", "wp", "left", "style", "hold", "all", "write", "scale", "port", "padding", "data", "x", "size", "body", "duration", "weight", "page", "currency", "value", "only", "widget", "w", "output", "term", "description", "lon", "batch", "flow", "update", "strength", "memory", "fw", "method", "title", "step", "text", "wid", "print", "render", "search", "offset", "dist", "layout", "depth", "display", "draw"], "line": ["cell", "sequence", "word", "LINE", "ine", "lines", "raw", "inline", "phrase", "out", "data", "Line", "link", "body", "rule", "lin", "entry", "key", "page", "name", "value", "column", "l", "header", "next", "lock", "string", "force", "char", "nl", "text", "slice", "input", "chain", "stroke", "result", "detail", "block", "row", "log", "str", "comment", "ln", "point", "frame", "message"], "values": ["views", "ples", "Values", "groups", "bes", "weights", "modules", "maps", "lines", "stores", "services", "gets", "rows", "changes", "styles", "models", "ports", "tests", "names", "als", "pins", "versions", "boxes", "times", "seconds", "ves", "days", "vs", "bytes", "codes", "flows", "results", "blocks", "states", "files", "points", "fixes", "actions", "forms", "users", "objects", "verts", "places", "years", "vals", "lists", "items", "measures"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        int x,h,m,s;\\n        Scanner sc = new Scanner(System.in);\\n        x=sc.nextInt();\\n        h=x/3600;\\n        m=(x-3600*h)/60;\\n        s=x-3600*h-60*m;\\n        System.out.printf(\"%d:%d:%d%n\",h,m,s);\\n    }\\n}", "target": "84", "substitutes": {"x": ["fx", "px", "xp", "xml", "f", "xd", "ax", "t", "xx", "xt", "u", "xi", "xf", "max", "dx", "ox", "i", "r", "on", "c", "n", "y", "v", "xc", "ix", "w", "xe", "l", "wx", "rx", "mx", "e", "p", "xy", "ch", "ex", "tx", "X", "to", "z", "d", "xs"], "h": ["hi", "history", "hs", "hh", "His", "hex", "HH", "t", "bh", "kh", "dr", "ho", "sh", "hw", "ha", "height", "i", "hour", "his", "hid", "c", "host", "im", "en", "html", "ht", "w", "high", "hl", "dh", "hash", "l", "he", "oh", "ih", "ph", "it", "H", "hd", "hal", "hm", "http", "hr", "hz", "d", "zh"], "m": ["met", "sm", "mt", "om", "em", "nm", "mo", "me", "mm", "dim", "M", "mn", "i", "ms", "md", "mi", "ml", "arm", "n", "dm", "mu", "am", "c", "mat", "im", "v", "min", "gm", "w", "rm", "perm", "l", "mr", "mod", "mc", "mx", "p", "tm", "vm", "hm", "cm", "mk", "um", "fm", "d", "km", "g"], "s": ["es", "sw", "fs", "si", "sl", "t", "ats", "js", "se", "sv", "sd", "bis", "is", "sq", "i", "S", "ms", "ps", "sy", "sec", "sp", "c", "n", "south", "os", "tes", "bs", "des", "set", "ws", "space", "su", "gs", "p", "ns", "rs", "ss", "as", "ls", "sa", "cs", "z", "d", "sb", "ts"], "sc": ["SC", "osc", "pc", "sys", "pb", "sv", "rc", "nc", "bc", "asc", "sync", "exp", "sh", "sch", "sq", "out", "gc", "sub", "uc", "r", "sb", "sp", "cc", "c", "esc", "cl", "lc", "Sc", "desc", "dec", "mc", "acc", "inc", "scl", "cr", "ch", "system", "p", "txt", "conv", "row", "cs", "tc", "ss", "g", "scan"]}}
{"code": "import java.io.BufferedReader; \\nimport java.io.InputStreamReader; \\nimport java.io.IOException; \\nimport java.util.StringTokenizer; \\nimport java.util.Arrays;\\npublic class Main {\\n    static class FastReader{\\n        BufferedReader br;\\n        StringTokenizer st;\\n       public  FastReader()\\n       {\\n           br=new BufferedReader(new InputStreamReader(System.in));\\n       }\\n       String next()\\n       {\\n           while(st==null ||!st.hasMoreElements())\\n           {\\n               try\\n               {\\n                   st= new StringTokenizer(br.readLine());\\n               }\\n               catch(IOException e)\\n               {\\n                   e.printStackTrace();\\n               }\\n           }\\n           return st.nextToken();\\n       }\\n      \\n       int nextInt()\\n       {\\n           return Integer.parseInt(next());\\n       }\\n       long nextLong()\\n       {\\n           return Long.parseLong(next());\\n       }\\n    }\\n    public static void main(String args[]) throws IOException\\n    {\\n        FastReader fs= new FastReader();\\n        long A= fs.nextLong();\\n        String B=fs.next();\\n        long res= (A* (((B.charAt(0)-'0')*100) +((B.charAt(2)-'0')*10) + (B.charAt(3)-'0')))/100;\\n        System.out.println(res);\\n    }\\n\\n}", "target": "15", "substitutes": {"br": ["bp", "bb", "bre", "bm", "bc", "bh", "bridge", "dr", "bro", "bl", "bf", "ctr", "r", "rob", "tr", "bern", "shr", "pt", "abl", "bs", "bsp", "lr", "bt", "mr", "Br", "pr", "rb", "brace", "cr", "bd", "vr", "kr", "BR", "b", "hr", "buf", "fr", "Tr", "ber", "sb", "sr", "bn"], "st": ["stable", "sm", "mt", "ist", "sw", "est", "ft", "sty", "const", "ct", "sl", "t", "th", "sts", "sv", "sol", "sh", "bl", "stat", "inst", "spe", "ste", "stri", "tmp", "std", "z", "r", "sp", "ust", " superst", "tr", "ut", "lo", "pt", "cl", "s", "St", "bt", "ts", "l", "sta", "rest", "start", "step", "lt", "cr", "p", "sn", "ST", "rt", "nd", "so", "nt", "stack", "str", "set", "ss", "sb", "se", "ost"], "fs": ["its", "eks", "qs", "FS", "hs", "f", "fits", "ats", "sf", "obs", "irs", "bf", "ms", "ps", "fc", "ys", "Fs", "ils", "fb", "ks", "vs", "fts", "bs", "s", "mr", "fw", "rys", "gs", "ics", "fps", "gb", "rs", "cf", "ls", "ss", "ds", "ios", "cs", "hz", "fr", "alf", "jas", "xs", "ts"], "A": ["Al", "Alpha", "AS", "AF", "R", "GA", "AL", "RA", "L", "AI", "Am", "M", "Va", "AA", "AP", "AX", "ACT", "SA", "S", "HA", "P", "V", "At", "AU", "IA", "AB", "N", "AC", "a", " a", "NA", "BA", "K", "G", "Ax", "AR", "VA", "An", "Av", "As", "mA", "alpha", "AT", "CA"], "B": ["FB", "E", "R", "TB", "GB", "OB", "L", "RB", "BM", "Y", "Body", "BL", "Z", "URL", "PB", "S", "BO", "JS", "USB", "BI", "EB", "BB", "P", "V", "CB", "DB", "BT", "BE", "SB", "Base", "IB", "NB", "AB", "N", " b", "Builder", "BA", "G", "J", "VB", "Bytes", "WB", "Big", "b", "BR", "BY", "Bar", "BC", "BS", "T", "MB", "BG", "Bs"], "res": ["aux", "reg", "RES", "rev", "def", "ress", " Res", "zero", "Res", "re", "exp", "stock", "rss", "out", "inv", "vec", "sum", "reset", "ps", "cond", "rem", "rep", "prime", "des", "results", "red", "rest", "cons", "rand", "req", "vol", "resp", "comp", "result", "ret", "resolution", "VAL", "rel", "pres"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int a[] = new int[3];\\n    for(int i = 0;i<3;i++){\\n      a[i] = sc.nextInt();\\n    }\\n    int ans = 0;\\n    if(a[0] == a[1] && !(a[0] == a[2])){\\n      ans = 1;\\n    }\\n    if(a[1] == a[2] && !(a[1] == a[0])){\\n      ans = 1;\\n    }\\n    if(a[2] == a[0] && !(a[2] == a[1])){\\n      ans = 1;\\n    }\\n    if(ans == 1){\\n      System.out.println(\"Yes\");\\n    }else{\\n      System.out.println(\"No\");\\n    }\\n  }\\n}\\n", "target": "117", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sq", "sch", "sub", "uc", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "lc", "desc", "screen", "mc", "co", "nl", "res", "scl", "cr", "capt", "ch", "sel", "conv", "cs", "tc", "Sc", "scan"], "a": ["aux", "go", "aw", "es", "history", "ed", "ar", "zero", "aa", "f", "era", "at", "t", "window", "ai", "obj", "area", "wa", "all", "A", "action", "fa", "da", "au", "out", "na", "x", "ab", "data", "oa", "pa", "ach", "ao", "act", "err", "ba", "an", "am", "c", "h", "index", "app", "ea", "w", "ga", "j", "ia", "sta", "ta", "ae", "aaa", "p", "b", "aka", "ca", "alpha", "as", "att", "val", "array", "sa", "to", "la", "set", "eas", "ma", "ama", "ac"], "i": ["iter", "ie", "hi", "ci", "I", "io", "si", "t", "ic", "u", "sim", "ai", "me", "us", "is", "ind", "x", "o", "ms", "client", "mi", "n", "cli", "key", "y", "init", "v", "im", "q", "ix", "ui", "gi", "j", "batch", "l", "uri", "qi", "pi", "multi", "my", "it", "ii", "chain", "b", "gu", "ex", "di", "ini", "id", "li", "in", "ti", "bi", "set", "m", "phi", "ip"], "ans": ["nets", "abilities", "ras", "ANS", "orts", "anks", "offs", "ces", "checks", "AN", "lines", "ats", "ums", "aps", "ads", "eds", "ann", "ants", "ins", "uns", "outs", "ms", "ys", "aus", "helps", "ks", "an", " scans", "ians", "vs", "angs", "ups", "ags", "flags", "amps", "books", "posts", "aults", "olds", "asks", "yes", "ons", "ens", "cons", "ars", "gs", "uploads", "ops", "ids", "ns", "oos", "ls", "ds", "utters", "irms", "vals", "ents", "cs", "mas", "arms", "pres", "arts", "xs", "ts"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(final String[] args) throws Exception {\\n        final Scanner sc = new Scanner(System.in);\\n        long N;\\n        N = sc.nextLong();\\n\\n        final Solver solver = new Solver();\\n        solver.solve(N);\\n    }\\n}\\n\\nclass Solver {\\n    public void solve(long N) {\\n        long odd = N % 2 == 0 ? N / 2 : N / 2 + 1;\\n        System.out.println(String.format(\"%f\", odd / (double) N));\\n    }\\n}\\n\\n", "target": "64", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "syn", "pb", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "uc", "anc", "sec", "sk", "sp", "c", "cc", "esc", "isc", "soc", "ser", "cl", "lc", "Sc", " Sc", "desc", "mc", "acc", "scl", "cr", "sel", "ch", "cs", "ec", "tc", "ss", "sb", "scan"], "N": ["CN", "I", "NN", "NM", "R", "NC", "C", "OUT", "L", "AN", "ND", "Y", "NO", "Z", "Num", "NT", "M", "D", "S", "US", "MN", "EN", "UN", "F", "NG", "V", "n", "NR", "P", "NUM", "CNN", "NL", "Ni", "Number", "NB", "NP", "NV", "TN", "NI", "GN", "NA", "K", "G", "J", "ON", "NH", "H", "NS", "NOR", "SN", "FN", "No", "Ns", "T", "NPR", "NE"], "solver": ["Solution", "resolver", "resorter", "sol", "Solver", " solution", "Solve", "Sorter", "solution", "solve", "resolution", "resol", " solve", "sorter", "resolve", " sol"], "odd": ["stable", "defined", "Even", "colored", "important", "dd", "dds", "div", " even", "pick", "iott", "rolled", "sometimes", "sudo", "butt", "opp", "based", " Odd", "owe", "bow", "kick", " odds", "rowd", "ucky", "itt", "onent", "inal", "needed", "KK", "background", " sloppy", "OTHER", "power", "even", "bot", "uff", "neutral", "diff", "night", "nd", "ow", "wise", "od"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        // \u6574\u6570\u306e\u5165\u529b\\n        int k = sc.nextInt();\\n        // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\\n        int x = sc.nextInt();\\n        // \u7d50\u679c\u306e\u51fa\u529b\\n        int min = x - (k - 1);\\n        int max = x + (k - 1);\\n\\n        for(int i = min; i <= max; i++){\\n            System.out.print(i);\\n            if(i != max) {\\n                System.out.print(\" \");\\n            }\\n        }\\n    }\\n}\\n", "target": "207", "substitutes": {"sc": ["SC", " SC", " sp", "sys", "sv", "rc", " sa", " sh", "sq", " cr", "sb", " scorer", "sp", "c", " ss", " sw", " Sc", "cr", " scr", "ch", "system", "ss", "proc", "sa", "cs", "Sc", " sk", "scan"]}}
{"code": "\\nimport java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n\tstatic FastReader in = new FastReader();\\n\\n\tpublic static void main(String[] args) {\\n\t\tsolve();\\n\t}\\n\\n\tstatic void solve() {\\n\t\tint n = in.nextInt();\\n\t\tint[] arr = in.readarr(n);\\n\t\t\\n\t\tint[] dp = new int[n];\\n\t\tArrays.fill(dp, Integer.MAX_VALUE);\\n\t\tdp[0] = 0;\\n\t\t\\n\t\tfor(int i = 0; i < n; i++)\\n\t\t{\\n\t\t\tif(i + 1 < n)dp[i + 1] = Math.min(dp[i] + (Math.abs(arr[i] - arr[i + 1])), dp[i + 1]);\\n\t\t\tif(i + 2 < n)dp[i + 2] = Math.min(dp[i] + Math.abs(arr[i] - arr[i + 2]), dp[i + 2]);\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(dp[n - 1]);\\n\t}\\n\\n\tstatic class FastReader {\\n\t\tBufferedReader br;\\n\t\tStringTokenizer st;\\n\\n\t\tpublic FastReader() {\\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\\n\t\t}\\n\\n\t\tString next() {\\n\t\t\twhile (st == null || !st.hasMoreElements()) {\\n\t\t\t\ttry {\\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\\n\t\t\t\t} catch (IOException e) {\\n\t\t\t\t\te.printStackTrace();\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn st.nextToken();\\n\t\t}\\n\\n\t\tint nextInt() {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n\\n\t\tlong nextLong() {\\n\t\t\treturn Long.parseLong(next());\\n\t\t}\\n\\n\t\tdouble nextDouble() {\\n\t\t\treturn Double.parseDouble(next());\\n\t\t}\\n\\n\t\tString nextLine() {\\n\t\t\tString str = \"\";\\n\t\t\ttry {\\n\t\t\t\tstr = br.readLine();\\n\t\t\t} catch (IOException e) {\\n\t\t\t\te.printStackTrace();\\n\t\t\t}\\n\t\t\treturn str;\\n\t\t}\\n\\n\t\tint[] readarr(int abc) {\\n\t\t\tint[] temp = new int[abc];\\n\t\t\tfor (int i = 0; i < abc; i++)\\n\t\t\t\ttemp[i] = nextInt();\\n\t\t\treturn temp;\\n\t\t}\\n\t}\\n}\\n", "target": "1", "substitutes": {"in": ["ill", "f", "din", "io", "lines", "IN", "ic", "t", "inn", "inner", "mm", "bin", "sol", "dr", "is", "out", "ind", "ins", "o", "std", "r", "rin", "mi", "err", "source", "thin", "init", "conf", "q", "con", "local", "ri", " din", "mr", "l", "cin", "mc", "In", "sin", "inc", "readable", "input", "p", "stream", "win", "file", "ini", "rt", "inf", "ssl", "reader", "log", "d", "m", "line"], "n": ["nm", "nb", "wn", "t", "network", "ln", "nc", "net", "ll", "mn", "count", "nan", "k", "na", "o", "no", "x", "ng", "size", "r", "len", "c", "nn", "fn", "name", "y", "v", "gn", "conf", "en", "init", "dn", "w", "N", "j", "l", "a", "nu", "np", "nl", "cn", "p", "sn", "ns", "nt", "ni", "nr", "number", "num", "un", "z", "d", "m", "ne", "g"], "arr": ["def", "ar", "addr", "hist", "aa", "ax", "img", "obj", "ll", "Array", "dr", "rad", "bl", "au", "now", "inst", "data", "ab", "expr", "par", "tmp", "gr", "emb", "r", "arb", "err", "rep", "ev", "vs", "mat", "conf", "app", "pl", "adj", "av", "arp", "elt", "enc", "aaa", "np", "vol", "ij", "p", "resp", "dict", "dat", "agg", "db", "att", "array", "row", "buf", "fr", "list", "val", "attr"], "dp": ["imp", "def", "bp", "wd", "bps", "px", "dd", "pb", "pp", "dep", "dq", "csv", "wp", "dim", "drop", "mm", "dr", "dk", "DP", "deb", "gp", "vp", "ps", "fd", "pd", "tp", "cd", "pm", "dial", "pkg", "df", "dm", "isp", "vs", "bsp", "dj", "pas", "dl", "dh", "lp", "jp", "hp", "np", "ph", "adr", "delay", "p", "pipe", "fp", "resp", "di", "dt", "ds", "db", "mk", "dc", "cp", "ptr", "d"], "i": ["zi", "iq", "I", "ie", "ci", "hi", "status", "ami", "f", "\u0438", "si", "io", "ic", "sim", "u", "oi", "ai", "ei", "me", "us", "xi", "exp", "eu", "is", "ind", "o", "x", "mi", "cli", "name", "im", "y", "gi", "info", "ix", "q", "ui", "init", "v", "ri", "ki", "j", "uri", "this", "ity", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "p", "PI", "chain", "ini", "di", "id", "li", "fi", "ti", "bi", "ims", "m", "item", "iu", "phi", "g", "ip"], "br": ["bp", "bre", "bn", "bm", "bc", "bh", "bridge", "bra", "dr", "bro", "bl", "gr", "r", "sp", "err", "tr", "shr", "pt", "bs", "bsp", "lr", "bt", "j", "mr", "Br", "pr", "next", "rb", "rain", "itter", "cr", "ch", "kr", "BR", "b", "rel", "ptr", "hr", "fr", "buf", "ber", "wr", "vr"], "st": ["stable", "mt", "ist", "sw", "est", "ft", "sth", "sty", "const", "first", "ct", "sl", "t", "th", "sts", "dr", "sh", "bl", "stat", "inst", "ste", "stri", "std", "z", "r", "sp", "stage", "ust", "tr", "ut", "pt", "cl", "s", "St", "bt", "l", "rest", "start", "lt", "it", "cr", "p", "ST", "nd", "nt", "rt", "be", "fr", "et", "sb", "se", "ost"], "str": ["stable", "rec", "sw", "sys", "hex", "sl", "t", "div", "exp", "dr", "inst", "stri", "ctr", "msg", "gr", "r", "sp", "cont", "tr", "shr", "spec", "s", "Str", "STR", "j", "dec", "next", "string", "char", "enc", "vol", "res", "text", "ocr", "print", "cr", "coll", "txt", "ret", "fr", "list"], "abc": ["aux", "rec", "ci", "aa", "const", "tab", "ct", "ic", "rc", "nc", "bc", "area", "circ", "ref", "ox", "abs", "au", "gc", "ab", "icc", "oc", "fc", "emb", "typ", "err", "ABC", "c", "ib", "xc", "init", "conf", "ob", "lc", "cb", "lab", "arc", "rb", "co", "ij", "af", "frac", "ca", "alpha", "db", "dc", "cs", "ec", "ac"], "temp": ["iter", "em", "fake", "t", "tim", "alt", "obj", "mm", "porary", "stem", "unt", "mp", "tmp", "mint", "partial", "tr", "pt", "emp", "Temp", "orig", "current", "mem", "pi", "tem", "tt", "ij", "it", "p", "pool", "tm", "pre", "dat", "txt", "total", "result", "ret", "template", "ptr", "wait", "set", "mod", "tc", "test"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.IOException;\\n\\n/**\\n *\\n * @author Y\\n */\\npublic class Main {\\n    public static void main(String[]args) throws IOException{\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        int N = Integer.parseInt(br.readLine());\\n        int[] a = new int[N];\\n        String[] s = br.readLine().split(\" \");\\n        for(int i = 0;i<N;i++){\\n            a[i] = Integer.parseInt(s[i]);\\n        }\\n        \\n        int Nswap = 0;\\n        for(int i=0;i<N;i++){\\n            for(int j = N-1;j>=i+1;j--){\\n                if(a[j]<a[j-1]){\\n                    int tmp = a[j];\\n                    a[j]=a[j-1];\\n                    a[j-1]=tmp;\\n                    \\n                    Nswap++;\\n                }\\n            }\\n        }\\n        \\n        for(int i=0;i<N-1;i++){\\n            System.out.print(a[i] + \" \");\\n        }\\n        System.out.println(a[N-1]);\\n        System.out.println(Nswap);\\n        \\n    }\\n}", "target": "170", "substitutes": {"br": ["bp", "bm", "bc", "bh", "bridge", "ger", "dr", "bro", "bl", "ctr", "gr", "r", "rem", "n", "tr", "shr", "bs", "lr", "yr", "bt", "mr", "Br", "pr", "rb", "rys", "jp", "gb", "cr", "bd", "ch", "kr", "b", "BR", "db", "browser", "rel", "nr", "hr", "buf", "fr", "bi", "ber", "wr", "vr"], "N": ["I", "NM", "NN", "R", "NC", "AN", "ND", "L", "OUT", "C", "REM", "NOTE", "NO", "Z", "Num", "NT", "O", "M", "D", "Net", "S", "B", "MN", "F", "NG", "P", "n", "V", "NR", "Ni", "NL", "NB", "NP", "NV", "TN", "NI", "NA", "K", "G", "J", "Size", "NH", "H", "NS", "Len", "SN", "FN", "T", "Ns", "Sn", "No", "ALL", "NE"], "a": ["aux", "history", "ar", "aa", "ack", "f", "era", "at", "u", "ai", "wa", "area", "va", "all", "A", "changes", "xa", "fa", "da", "au", "ava", "data", "ab", "o", "na", "oa", "button", "ao", "ba", "an", "am", "c", "n", "ap", "y", "app", "ea", "one", "ga", "eas", "ace", "power", "l", "sta", "ae", "aaa", "e", "apa", "p", "b", "ca", "ata", "as", "alpha", "att", "la", "array", "sa", "ee", "trace", "cache", "act", "ma", "g", "ac"], "s": ["its", "es", "qs", "fs", "ats", "t", "js", "gets", "sts", "sv", "se", "strings", "bis", "is", "sq", "ses", "ins", "S", "ms", "ps", "als", "c", "fts", "os", "bs", "ws", "l", "string", "gs", "p", "b", "rs", "ls", "so", "ds", "parts", "cs", "str", "ss", "sb", "ts"], "i": ["status", "io", "at", "us", "o", "iu", "n", "index", "php", "y", "ix", "l", "pi", "ii", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "ei", "xi", "II", "ori", "client", "cli", "init", "ui", "qi", "multi", "chain", "ini", "ni", "m", "ion", "iter", "ist", "si", "ic", "sim", "inner", "is", "ind", "x", "mi", "err", "gi", "ji", "it", "e", "p", "di", "Index", "ims", "It", "zi", "iq", "iti", "I", "IJ", "ami", "\u0438", "ai", "me", "ish", "IT", "c", "im", "v", "info", "q", "this", "ri", "batch", "ki", "ity", "ij", "PI", "li", "point", "ip"], "Nswap": ["nswap", "Nspap", "Nscp", "Nsnapping", "nwape", "Nsweapping", "Nssweapping", "Nswapping", "nwav", "Nsweaps", "Nswav", "Vswap", "Nswape", "NscAP", "Nswaps", "Nssweape", "Nslav", "VswAP", "Nspapping", "VnowAP", "Nsnp", "Vnowrap", "nswapping", "Nsnape", "Nwapping", "Nwav", "Nsweape", "Nsswaps", "Nssweaps", "Nswrap", "Nsswape", "Nsnap", "Nslapping", "Nnowap", "Nswp", "Nspape", "Nwape", "Nwap", "Nsnav", "Nnowrap", "Nslap", "Nsswapping", "nswav", "Nslape", "Nsnrap", "nwap", "Nsweap", "Vnowap", "NsnAP", "Nspaps", "Nscrap", "Nwaps", "NnowAP", "Vswp", "Nnowp", "NswAP", "nswape", "Vnowp", "Nssweap", "Nsswap", "nwapping", "Vswrap", "Nscap"], "j": ["note", "jac", "zone", "bj", "Ja", "at", "jl", "js", "sim", "obj", "er", "k", "kj", "fr", "x", "oj", "job", "o", "je", "rem", "uj", "n", "tr", "key", "beta", "jc", "pt", "y", "v", "bs", "q", "dj", "json", "bo", "adj", "l", "pr", "aj", "jp", "jo", "jump", "ji", "J", "ij", "jit", "it", "jack", "my", "old", "b", "jj", "other", "jet", "rel", "row", "bi", "z", "g", "ja"], "tmp": ["cmp", "nb", "py", "ctx", "t", "obj", "amp", "net", "same", "xxxx", "mp", "mut", "sp", "MP", "up", "pkg", "qq", "attr", "prime", "lib", "emp", "orig", "prefix", "perm", "prev", "buff", "jp", "np", "stop", "acc", "tt", "xy", "etc", "pre", "jj", "txt", "td", "ret", "comp", "nd", "mk", "db", "yy", "cp", "temp", "cache", "test"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.IOException;\\n\\npublic class Main {\\n  public static void main(String[] args) throws IOException {\\n    BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n    String[] str = in.readLine().split(\" \");\\n    int a = Integer.parseInt(str[0]);\\n    int b = Integer.parseInt(str[1]);\\n    System.out.println((int)Math.ceil((double)(b-1)/(double)(a-1)));\\n  }\\n}", "target": "101", "substitutes": {"in": ["ill", "din", "io", "OUT", "IN", "t", "serv", "inner", "inn", "from", "bin", "ad", "is", "out", "i", "ins", "add", "std", "r", "on", "rin", "err", "and", "check", "n", "thin", "read", "isin", "init", "conf", "en", "info", "con", "nin", "this", "gin", " din", "doc", "cin", "mc", "In", "inc", "readable", "world", "input", "stream", "txt", "ini", "file", "user", "reader", "log", "d", "get"], "str": ["hex", "sl", "div", "sts", "raw", "exp", "part", "dr", "comm", "rip", "bl", "data", "stri", "ctr", "gr", "r", "sec", "sp", "len", "uts", "tr", "n", "arr", "s", "del", "Str", "STR", "doc", "desc", "char", "string", "enc", "vol", "it", "print", "br", "oct", "coll", "form", "chain", "st", "dat", "ns", "txt", "url", "att", "ld", "fr", "split", "wr"], "a": ["ar", "aa", "f", "t", "al", "at", "u", "ai", "area", "mm", "va", "all", "A", "from", "au", "ma", "i", "o", "ab", "oa", "r", "ao", "act", "ba", "n", "an", "am", "s", "ea", "ga", "j", "ia", "l", "sta", "ta", "aj", "ae", "p", "ca", "as", "la", "alpha", "sa", "d", "m", "ac"], "b": ["mb", "bp", "nb", "f", "back", "bb", "t", "bc", "bis", "base", "i", "ab", "B", "r", "sb", "body", "fb", "c", "ba", "n", "wb", "h", "eb", "ib", "y", "v", "bs", "ob", "cb", "j", "bot", "rb", "gb", "br", "p", "db", "be", "bi", "d", "m", "g"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner scanner = new Scanner(System.in);\\n    int N = scanner.nextInt();\\n    long sum = 0;\\n    for(long i = 1;i < N + 1;i++){\\n      if(!(i % 3 == 0 || i % 5 == 0)){\\n        sum = sum + i;\\n      }\\n    }\\n    System.out.println(sum);\\n  }\\n}", "target": "55", "substitutes": {"scanner": ["Scanner", "canning", "Scaner", "serer", "scanning", "Scanning", "scaner", " scanator", " scanter", "canter", "scanator", "canator", "serner", " scaner", "serning", "Scanter", "caner", "serter", "Scanator", "scanter", "canner"], "N": ["I", "NN", "NM", "NC", "C", "ND", "L", "NO", "Num", "NT", "O", "M", "D", "S", "NG", "V", "n", "NR", "Ni", "NL", "NB", "NP", "NV", "TN", "NI", " n", "GN", "NA", "K", "J", "Size", "NH", "NS", "SN", "FN", "Ns", "Sn", "NE"], "sum": ["sort", "report", "zero", "hist", " SUM", "mass", "square", "si", "cost", "ums", "sim", "ul", "us", "scale", "all", "share", "max", "base", "count", "out", "now", " summed", "add", "union", "commit", "size", "must", "score", "sat", "up", "full", "n", "cum", "med", "index", "mu", "min", "cal", "prefix", "average", "summary", "sam", "hash", "good", "Sum", "su", "vol", "acc", "diff", "sample", "mean", "total", "empty", "result", "um", "hum", "sa", "num", "temp", "cache", "set", "black", "se"], "i": ["zi", "iter", "I", "hi", "ci", "f", "io", "si", "ic", "t", "u", "oi", "ai", "xi", "us", "ei", "integer", " j", "is", "o", "mi", "cli", "n", "mu", "v", "im", "init", "gi", "ix", "q", "ui", "s", "ki", "j", "l", "qi", "pi", "multi", "ji", "it", "ii", "p", "chain", "gu", "di", "yi", "to", "li", "ti", "bi", "z", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.StringTokenizer;\\nimport java.io.IOException;\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader in = new InputReader(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        TaskA solver = new TaskA();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class TaskA {\\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\\n            final int n = 5;\\n            int[] ar = new int[n];\\n            for (int i = 0; i < n; i++)\\n                ar[i] = in.nextInt();\\n            int k = in.nextInt();\\n            for (int i = 0; i < n - 1; i++)\\n                for (int j = i + 1; j < n; j++)\\n                    if (Math.abs(ar[i] - ar[j]) > k) {\\n                        out.println(\":(\");\\n                        return;\\n                    }\\n            out.println(\"Yay!\");\\n        }\\n\\n    }\\n\\n    static class InputReader {\\n        public BufferedReader reader;\\n        public StringTokenizer tokenizer;\\n\\n        public InputReader(InputStream stream) {\\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\\n            tokenizer = null;\\n        }\\n\\n        public String next() {\\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n                try {\\n                    tokenizer = new StringTokenizer(reader.readLine());\\n                } catch (IOException e) {\\n                    throw new RuntimeException(e);\\n                }\\n            }\\n            return tokenizer.nextToken();\\n        }\\n\\n        public int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n    }\\n}", "target": "66", "substitutes": {"inputStream": ["dataStream", "helloSteam", " inputSteam", "dataLoop", "viewSteam", "dataSocket", "inputStreamer", "dataSteam", "viewStream", "viewstream", " inputLoop", "helloSocket", "outputstream", "helloStream", " inputSocket", "helloLoop", "viewStreamer", "inputLoop", "inputSocket", "outputSteam", " inputstream", " inputStreamer", "inputstream", "inputSteam", "outputStreamer"], "outputStream": ["putForm", "displayStream", "outputForm", "outputWriter", "inputStreamer", "displayPort", "inputForm", "writeForm", "languageSteam", "languageStream", "outputPort", "putStreamer", "putStream", "writeStreamer", "writeSteam", "displaySteam", "putSteam", "outputSteam", "inputSteam", " outputSteam", " outputWriter", " outputPort", "writeStream", "languageWriter", "outputStreamer", "displayWriter", "languagePort"], "in": ["or", "iter", "inside", "din", "io", "IN", "al", "ic", "inner", "inn", "from", "mm", "bin", "er", "is", "ind", "ins", "add", "r", "on", "rin", "err", "mi", "up", "context", "source", "read", "isin", "h", "by", "lo", "init", "conf", "en", "s", "con", "info", "per", "output", "local", " din", "gin", "l", "doc", "cin", "current", "In", "sin", "inc", "mc", "it", "input", "form", "run", "file", "ini", "rt", "null", "inf", "log", "kin", "ma", "get"], "out": ["or", "writer", "report", "over", "sys", "OUT", "io", " OUT", "t", "at", "flush", "obj", "inner", "all", "net", "er", "write", "gc", "o", "outs", "tmp", "client", "gr", "r", "err", "check", "c", "name", "os", "OU", "v", "s", "aos", "output", "w", "json", "Out", "l", "outer", "table", "lock", "co", "screen", "res", "it", "print", "p", "ch", "cmd", "txt", "ex", "result", "null", "nt", "user", "to", " Out", "group", "end", "ou", "log", "list", "set", "cache"], "solver": [" sorter", "resolver", "resorter", "Sistor", "sol", "unsolution", "unsumer", "unsorter", " Solver", "Sol", " solution", " Sistor", "Solve", " sumer", " Sol", "sistor", "resumer", " sol", " sistor", "sumer", "solve", "resolution", " Solve", "unsolver", " solve", "sorter", "Solver", "solution"], "testNumber": ["testNumbers", " scenarioNumbers", " scenarioCounter", " scenarioNo", " attemptCounter", "testNo", " attemptNumber", " testNumbers", " testCounter", " attemptNo", "testCounter", " attemptNumbers", " testNo", " scenarioNumber"], "n": ["nm", "nb", "t", "network", "ln", "nc", "all", "net", "mn", "nan", "na", "o", "no", "size", "r", "on", "len", "c", "nn", "h", "fn", "name", "v", "en", "q", "w", "N", "l", "nu", " N", "nl", "np", "cn", "p", "sn", "b", "ns", "nt", "ni", "un", "z", "d", "m", "ne", "g"], "ar": ["art", "inter", "air", "ra", "ear", "er", "iar", "dr", "war", "Ar", "car", "parse", "ari", "tar", "r", "arry", "are", "arm", "var", "ir", "kar", "arr", "lar", "mar", "aer", "nar", "arc", "mr", "arp", "ars", "rar", "AR", "adr", "har", "dar", "aro", "array", "ard", "far", "ara", "star"], "i": ["zi", "iq", "ie", "hi", "ci", "I", "ami", "iso", "f", "si", "io", "ic", "sim", "u", "oi", "ai", "ei", "xi", "me", "from", "base", "is", "ind", "o", "mi", "iy", "im", "init", "gi", "s", "ix", "info", "ui", "ri", "ki", "ia", "this", "qi", "pi", "multi", "jp", "ij", "it", "my", "ii", "print", "p", "PI", "ex", "ini", "di", "to", "li", "ti", "bi", "ims", "iu", "phi", "ip", "ion"], "k": ["kn", "wk", "ka", "kh", "ak", "kk", "kat", "ek", "z", "sk", "ks", "ke", "kar", "key", "v", "q", "kw", "ik", "kl", "K", "ok", "ck", "p", "kr", "mk", "kj", "m", "km", "g", "tk"], "j": ["f", "bj", "at", "jl", "js", "u", "obj", "kj", "ind", "o", "oj", "z", "on", "uj", "ge", "key", "jc", "pt", "y", "v", "q", "ix", "dj", "json", "l", "pr", "aj", "jp", "jump", "ji", "ij", "ph", "J", "br", "it", "p", "jj", "other", "nd", "ni", "li", "bi", "fr", "m", "ne", "g", "ja"], "reader": ["writer", "iter", "liner", "builder", "upper", " recorder", "iterator", "inner", "er", "ro", "dr", "linger", " waiter", "data", "buffer", "r", "rr", "context", "read", " ruler", "wrapper", "timer", " writer", "server", "parser", " viewer", "ner", "rer", "mr", "rar", "oder", "keeper", " subscriber", "handler", "input", "driver", "worker", "file", "Reader", "older", "runner", "user", "proc", "row", "rl", "loader", "handle"], "tokenizer": ["operatorization", "Tokenizer", "serialifier", "okenger", "serialzer", "tokenger", "nameger", "tokenizing", "Tokenize", "recognizer", "tokenize", "recognzer", " tokenizing", "operatorger", "nameizer", " tokenner", "operatorifier", " tokenifier", "serializer", "okenization", "nameizing", "recognener", "nameener", "tokenifier", "serialize", " tokenzer", "tokenner", "okenifier", "tokenization", " tokenener", "Tokenization", "normalization", " tokenization", "normalger", "recogniter", "normalner", "serialization", "normaliter", "normalifier", "tokeniter", "recognifier", "normalizer", "operatorizer", "okenizer", "Tokenifier", "okenener", "okenizing", "normalener", " tokenger", " tokeniter", "recognner", "recognization", "tokenener", "tokenzer", "recognize"], "stream": ["length", "history", "path", "level", "open", "Stream", "io", "view", "window", "iterator", "inner", "ream", "console", "phrase", "loop", "data", "check", "context", "source", "down", "wrapper", "resource", "v", "output", "this", "sample", "input", "pipe", "form", "pool", "driver", "zip", "file", "null", "stack", "row", "log", "channel", "message", "handle"]}}
{"code": "import java.io.*;\\nimport java.lang.*;\\nimport java.util.*;\\n\\npublic class Main\\n{\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        \\n        int n = sc.nextInt();\\n        int m = sc.nextInt();\\n        System.out.println(n * m);\\n    }\\n}\\n", "target": "35", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "sub", "sec", "sk", "sp", "c", "cc", "esc", "isc", "cl", "lc", "irc", "ctl", "ctrl", "desc", "mc", "nl", "scl", "cr", "capt", "ch", "ck", "tch", "ss", "sa", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["nm", "nb", "wn", "t", "ln", "nc", "ll", "mn", "nan", "k", "i", "na", "x", "c", "an", "nn", "h", "tn", "en", "dn", "N", "j", "l", "nu", "nl", "cn", "p", "sn", "b", "ns", "yn", "nt", "number", "num", "z", "d", "ne"], "m": ["sm", "mt", "nm", "f", "t", "bm", "mm", "M", "mn", "i", "ms", "r", "mi", "c", "dm", "h", "mu", "v", "gm", "j", "perm", "l", "mr", "mc", "mx", "p", "tm", "b", "vm", "cm", "d"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scan = new Scanner(System.in);\\n        int s = scan.nextInt();\\n        List<Integer> list = new ArrayList<>();\\n        list.add(s);\\n        int index = 0;\\n        int ans = 0;\\n        while(true) {\\n        \tint temp = list.get(index);\\n        \tif(temp % 2 == 0) {\\n        \t\ttemp = even(temp);\\n        \t}else {\\n        \t\ttemp = odd(temp);\\n        \t}\\n\\n        \tif(list.contains(temp)) {\\n        \t\tSystem.out.println(list.size() + 1);\\n        \t\treturn;\\n        \t}\\n        \tlist.add(temp);\\n        \tindex++;\\n        }\\n    }\\n    public static int odd (int n) {\\n    \treturn 3 * n + 1;\\n    }\\n    public static int even(int n) {\\n    \treturn n / 2;\\n    }\\n}", "target": "166", "substitutes": {"scan": ["sm", "report", "connect", "sys", "get", " scanner", "san", "walk", "range", "Scan", "sv", "se", "ann", "sync", "send", "reach", "is", "out", "gate", "stat", "find", "parse", "r", "sp", "check", "an", "nn", "read", "ser", "scroll", "ner", "store", "nl", "sin", "can", "system", " Scan", "run", "spin", "seek", "conv", "row", "in", "query", "sc", "g"], "s": ["ties", "its", "es", "ar", "fs", "sys", "ashes", "t", "services", "js", "ats", "eds", "ies", "ols", "strings", "sd", "is", "i", "ins", "S", "ps", "ms", "less", "os", "y", "set", "actions", "gs", "ids", "ns", "rs", "ls", "stats", "ds", "id", "in", "ims", "m", "ss", "xs", "ts"], "list": ["sort", "word", "xml", "collection", "sync", "net", "single", "copy", "and", "read", "LIST", "load", "l", "not", "pool", "form", "old", "st", "file", "detail", "none", "test", "def", "t", "map", "write", "out", "add", "parent", "spec", "table", "print", "chain", "group", "ls", "log", "set", "cache", "format", "ist", "sequence", "record", "history", "level", "shape", "left", "ll", "type", "tmp", "name", "lat", "queue", "listed", "lists", "block", "tree", "L", "all", "buffer", "code", "this", "true", "batch", "dl", "pre", "null", "li", "array", "get"], "index": ["iter", "open", "length", "path", "level", "zero", "location", "si", "position", "pos", "seed", "match", "max", "count", "out", "ind", "i", "loop", "initial", "x", "find", "size", "cycle", "check", "image", "key", "page", "address", "init", "head", "value", "ix", "state", "each", "j", "lock", "start", "current", "thread", "loc", "offset", "id", "Index", "num", "number", "row", "set", "point", "handle", "ion"], "ans": ["es", " threads", "otal", "t", "al", "itions", "rees", "all", "ation", "ach", "act", "an", " iterations", "ens", "a", " a", "ations", "total", "active", " orphans", "onents", " total", "actions", "reads", "arts", "ents", "ries"], "temp": ["alt", "porary", "i", "copy", "rem", "cur", "prefix", "thread", "pool", "tm", "dat", "result", "pretty", "tc", "test", "termin", "tim", "t", "max", "mp", "vi", "condition", "mag", "sum", "mint", "cum", "med", "pt", "timer", "Temp", "make", "method", "current", "txt", "uu", "ptr", "mod", "cell", "sequence", "perature", "fake", "hex", "cu", "sim", "mm", "fac", "tmp", "type", "unit", "mi", "tr", "prime", "value", "mem", "diff", "total", "trace", "stem", "unt", "phrase", "buffer", "partial", "key", "emp", "orig", "trade", "term", "this", "perm", "deg", "tem", "pre", "null", "template"], "n": ["note", "nm", "nb", "f", "t", "u", "nc", "all", "net", "mn", "count", "nan", "i", "na", "no", "x", "names", "ng", "d", "r", "on", "c", "nn", "fn", "nor", "v", "en", "dn", "w", "N", "j", "l", "a", "nu", "np", "cn", "norm", "p", "sn", "ns", "nt", "nw", "number", "num", "nr", "z", "ln", "m", "ne", "g"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\\n        \\n        int n = Integer.parseInt(br.readLine());\\n        String[] input = br.readLine().split(\" \");\\n        String s = input[0];\\n        String t = input[1];\\n        StringBuilder ans = new StringBuilder();\\n        \\n        for(int i = 0; i < n; i++){\\n            ans.append(s.charAt(i));\\n            ans.append(t.charAt(i));\\n        }\\n        \\n        out.println(ans);\\n        out.close();\\n        \\n    }\\n}", "target": "200", "substitutes": {"br": ["bp", "bc", "bh", "bridge", "er", "dr", "bro", "bf", "bl", "bg", "ctr", "gr", "r", "rob", "tr", "shr", "bs", "lr", "yr", "cb", "bt", "mr", "Br", "pr", "rb", "cr", "bd", "vr", "kr", "ch", "b", "BR", "pre", "db", "browser", "be", "rel", "hr", "bi", "fr", "ber", "wr", "bn"], "out": ["or", "exit", "error", "writer", "ent", "report", "sys", "OUT", "io", "at", "flush", "obj", "all", "net", "write", "exec", "sum", "o", "outs", "no", "x", "msg", "gr", "r", "on", "err", "up", "check", "by", "os", "name", "v", "en", "info", "aos", "output", "w", "Out", "put", "a", "screen", "co", "res", "it", "print", "ot", "pool", "gt", "b", "file", "ex", "null", "nt", "to", "ou", "in", "log", "list", "set", "g"], "n": ["nm", "nb", "nc", "net", "mn", "nan", "count", "na", "no", "d", "nn", "nor", "name", "gn", "en", "N", "j", "l", "nu", "nl", "np", "cn", "norm", "sn", "ns", "nt", "nw", "number", "num", "un", "z", "ln", "m", "ne"], "input": ["PUT", "history", "hello", "attribute", "feed", "view", "select", "inner", "raw", "base", "initial", "focus", "data", "Input", "add", "parse", "config", "check", "request", "source", "image", "index", "init", "q", "where", "info", "output", "prefix", "this", "batch", "unknown", "current", "start", "it", "sample", "qa", "p", "form", "api", "active", "att", "in", "list", "query", "point", "details", "ip"], "s": ["es", "sql", "sys", "sl", "js", "sts", "sv", "sd", "sh", "is", "sq", "ins", "S", "ps", "ms", "ys", "sp", "source", "os", "spec", "bs", "ts", "space", "a", "gs", "st", "ns", "rs", "ls", "so", "ds", "cs", "str", "ss", "se"], "t": ["te", "tab", "at", "tk", "o", "tf", "tr", "pt", "ty", "tc", "term", "j", "title", "tt", "it", "ot", "p", "tm", "gt", "st", "total", "rt", "txt", "tif", "dt", "template", "nt", "to", "T", "et", "tip", "test", "ts"], "ans": ["ras", "ANS", "anks", "ces", "AN", "anes", "san", "ads", "ats", "aps", "ums", "ann", "ants", "ins", " means", "uns", "ys", "aus", "acs", "cks", "an", "ks", "ags", "vs", "angs", "os", "amps", "aos", "aces", "olds", "yes", "ons", "anas", " Ans", "ens", "ars", "vers", "ams", "ations", "can", "ns", "rs", "ls", "as", "aned", "leans", "works", "cs", "pan", "arms", "arts", "ents"], "i": ["zi", "I", "hi", "ci", "ie", "ami", "sql", "\u0438", "si", "io", "ic", "sim", "u", "ai", "ei", "me", "xi", "is", "ind", "point", "o", "x", "ms", "mi", "cli", "key", "im", "gi", "y", "init", "ix", "q", "ui", "remote", "info", "ki", "j", "uri", "batch", "a", "qi", "pi", "multi", "ji", "it", "my", "ii", "chain", "gu", "ini", "di", "li", "in", "ti", "bi", "m", "iu", "phi", "slice", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        int a = Integer.parseInt(sc.next());\\n        int b = Integer.parseInt(sc.next());\\n        int c = Integer.parseInt(sc.next());\\n        int n = Integer.parseInt(sc.next());\\n        int[] nums = {a,b,c};\\n        Arrays.sort(nums);\\n        int n_times = 0;\\n        for (int i = 0; i < n; i++) {\\n            nums[2] = nums[2] * 2;\\n        }\\n        System.out.println(nums[0] + nums[1] + nums[2]);\\n    }\\n}\\n", "target": "201", "substitutes": {"sc": ["SC", " SC", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "cc", "isc", "esc", "ser", "cl", "ko", "lc", " Sc", "ctl", "screen", "mc", "inc", "cer", "acc", "scl", "cr", " scr", "ch", "ck", "cgi", "sci", "conv", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "a": ["ar", "aa", "ax", "t", "at", "u", "al", "from", "A", "au", "ab", "oa", "r", "ao", "act", "ba", "an", "h", "ea", "ga", "eas", "l", "ta", "admin", "ae", "aj", "aaa", "aff", "p", "aka", "ca", "as", "la", "sa", "d", "ma", "ac"], "b": ["mb", "bb", "u", "bc", "bis", "bl", "bf", "ub", "ab", "B", "r", "sb", "fb", "ba", "wb", "h", "eb", "ib", "y", "v", "bs", "ob", "cb", "l", "bot", "rb", "gb", "br", "db", "be", "erb", "bi", "g"], "c": ["ci", "f", "C", "ct", "u", "rc", "bc", "cv", "cd", "fc", "r", "ce", "cc", "cut", "lc", "cb", "l", "e", "cr", "ch", "cm", "ca", "cf", "cp", "dc", "cs", "ec", "d", "tc", "g", "ac"], "n": ["nm", "nb", "f", "t", "network", "u", "nc", "net", "mn", "out", "nan", "na", "x", "o", "no", "r", "h", "fn", "name", "y", "v", "nor", "en", "m", "N", "j", "l", "nu", "np", "nl", "e", "cn", "p", "ns", "nt", "ni", "num", "z", "d", "ne", "g"], "nums": [" namps", "Nolds", "nals", " nals", "cals", "Naves", " nolds", "Nals", "cumbers", "mnumbers", "anuers", " numers", " numbers", "names", "namps", "camps", "naves", "noms", "numers", "enumers", "anumers", " nims", "anumbers", "Namps", "nuers", "anums", "anaves", "enums", "enals", " names", "colds", "nims", " nuers", "numbers", "anals", "enumbers", " naves", "Names", "Numbers", "Numers", "Nuers", "coms", "Nums", "mnoms", "nolds", "Nims", "cims", "mnums", "cums", "Noms", "mnamps", "cames"], "n_times": ["n2times", "n2tests", "N2ts", "N2time", "n2time", "N_ts", "N2times", "N_tests", "N_time", "N_times", "n2ts", "N2tests", "n_ts", "n_time", "n_tests"], "i": ["zi", "I", "sequence", "ci", "hi", "ie", "sql", "\u0438", "si", "io", "ic", "sim", "ai", "xi", "us", "me", "base", "ind", "x", "mi", "cli", "index", "gi", "y", "init", "v", "q", "ix", "ui", "j", "qi", "pi", "multi", "it", "ii", "gu", "ini", "di", "id", "li", "ti", "bi", "z", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner s = new Scanner(System.in);\\n    int k = s.nextInt();\\n    int x = s.nextInt();\\n    int a=x-k+1,b=x+k;\\n    for(int i=a;i<b;i++)\\n      System.out.print(i+\" \");\\n  }\\n}", "target": "207", "substitutes": {"s": ["sm", "sc", "es", "qs", "hs", "utils", "sys", "sl", "ats", "js", "sts", "sv", "gets", "aws", "is", "abs", "sq", "ses", "ins", "S", "ms", "ps", "ys", "sb", "less", "h", "y", "ws", "ts", "l", "sam", "gs", "search", "rs", "ns", "ers", "ls", "as", "ds", "stats", "conv", "sa", "cs", "in", "self", "ss", "xs", "se"], "k": ["kn", "wk", "t", "kh", "ak", "ka", "dk", "kk", "unk", "ek", "z", "sk", "ks", "n", "ijk", "ke", "kb", "kid", "v", "q", "ko", "w", "ki", "j", "kw", "ik", "yk", "ku", "kl", "K", "ok", "ck", "p", "mk", "kj", "d", "m", "km", "g", "tk"], "x": ["px", "f", "xd", "ax", "t", "xt", "xx", "xi", "xf", "xa", "dx", "ox", "o", "r", "on", "c", "n", "h", "y", "v", "xc", "ix", "w", "xe", "j", "l", "rx", "mx", "e", "p", "ex", "tx", "X", "xs", "z", "d", "m", "g"], "a": ["ar", "aa", "f", "ax", "t", "at", "ai", "va", "A", "ak", "fa", "da", "au", "o", "ab", "oa", "pa", "ach", "r", "ao", "ba", "n", "an", "ap", "ea", "ada", "ia", "sta", "ta", "aj", "ae", "aaa", "ca", "alpha", "la", "as", "sa", "ma", "ac"], "b": ["mb", "nb", "back", "bb", "bc", "base", "bl", "bis", "ab", "ble", "B", "r", "fb", "ba", "n", "c", "eb", "ib", "beta", "y", "v", "bs", "j", "l", "rb", "e", "br", "bar", "db", "be", "bi", "z", "d", "m"], "i": ["zi", "iter", "I", "hi", "ci", "uni", "si", "io", "ic", "sim", "u", "iri", "ai", "xi", "ei", "us", "integer", "oi", "is", "ind", "ms", "client", "mi", "cli", "index", "im", "gi", "v", "init", "q", "wi", "ui", "info", "ki", "j", "qi", "pi", "multi", "ji", "ij", "it", "ii", "ini", "di", "ni", "li", "conv", "ti", "bi", "ims", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tString S;\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tS = sc.next();\\n\t\tint minIndex = 0;\\n\t\tint maxIndex = S.length() - 1;\\n\t\twhile (minIndex < maxIndex) {\\n\t\t\tif (S.charAt(minIndex++) != S.charAt(maxIndex--)) {\\n\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t\tSystem.exit(0);\\n\t\t\t}\\n\t\t}\\n\t\tminIndex = 0;\\n\t\tmaxIndex = (S.length() - 1) / 2 - 1;\\n\t\twhile (minIndex < maxIndex) {\\n\t\t\tif (S.charAt(minIndex++) != S.charAt(maxIndex--)) {\\n\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t\tSystem.exit(0);\\n\t\t\t}\\n\t\t}\\n\t\tminIndex = (S.length() + 3) / 2 - 1;\\n\t\tmaxIndex = S.length() - 1;\\n\t\twhile (minIndex < maxIndex) {\\n\t\t\tif (S.charAt(minIndex++) != S.charAt(maxIndex--)) {\\n\t\t\t\tSystem.out.println(\"No\");\\n\t\t\t\tSystem.exit(0);\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(\"Yes\");\\n\t\tsc.close();\\n\t}\\n\\n}", "target": "123", "substitutes": {"S": ["SC", " s", "AS", "SSL", "JSON", "R", "FS", "C", "RS", "L", "TS", "SL", "IN", "SS", "SH", "SU", "SR", "SIM", "OS", "M", "SER", "CS", "LESS", "SA", "JS", "US", "SEC", "PS", "VS", "RAW", "INS", "P", "V", "SM", "DS", "SOURCE", "SB", "s", "IS", "N", "STR", "NEW", "CSS", "SF", "Sample", "SI", "GS", "SO", "G", "Si", "SE", "H", "MS", "LS", "NS", "SP", "BY", "ST", "SN", "SAM", "BS", "T", "ITS", " IS", "SQL"], "sc": ["SC", "osc", "pc", "sys", "syn", "cu", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "Sync", "sch", "gc", "out", "sq", "anc", "sec", "sp", "c", "cc", "esc", "isc", "s", "cl", "lc", "arc", "desc", "mc", "RC", "nl", "cr", "capt", "ch", "system", "ss", "so", "cle", "cs", "ec", "tc", "Sc", "scan"], "minIndex": ["maxInd", "beginIf", "maxOff", "MINIndex", "innerPos", " minPos", "minimumIndex", "MINindex", "minsIf", "beginEx", "partInfo", " minOff", "munRef", " minValue", "minEX", "maxValue", "Minindex", "MINDim", "relInfo", "netindex", "relExp", " minExp", "MinInd", "beginInfo", "relIndex", "maxEx", "imPos", "maxInfo", "maxDim", "MINPoint", "maxExp", "beginIndex", "maxPos", "minPos", " minEx", "minimumInfo", "MinEx", "minInd", "beginInd", " minDim", "minDim", "minindex", "MinOff", "munInfo", "minValue", "maxPoint", "innerIndex", "beginindex", "munIndex", "imIndex", "MINInd", "minimumIf", "MINValue", "netIf", "minRef", "maxEX", "partEx", "munExp", "minPoint", "netInfo", "MINEx", "minIf", "minOff", "MINPos", "minZone", "MINExp", "MinIf", "partIndex", "MinIndex", "maxRef", "MINIf", "minsInfo", "minsindex", "minExp", "minsIndex", "maxZone", "innerEX", "partZone", "netIndex", "MINRef", "imEX", "minEx", "beginZone", "minInfo", "minimumindex", " minInd", "munPoint", "relEx", "munInd", "munEx"], "maxIndex": ["maxInd", " maxInt", "maxCons", "maxInt", "randResponse", "rightInt", "rightOffset", "confSeries", "maxindex", " maxOffset", "maxPort", "modIndex", "boundCons", " maxExp", "MAXEx", "recentIter", "actIndex", "maxValue", "recentPos", "randLength", " maxConnect", "recentIndex", "axPort", "recentEx", "axLength", "MAXindex", "modPort", " maxLength", "maxEx", "maximumInt", " maxPos", "boundIndex", "recentindex", "maxExp", "maxPos", "minPos", "maximumLoop", "verPort", " maxindex", "rightIter", "minInd", "rightIndex", "verIndex", "minindex", " maxResponse", " maxEx", "randPoint", "maximumIndex", "maxSeries", "actInd", "randEx", " maxLoop", "verEx", "maxPoint", "axExp", "rightindex", "finalValue", "finalPos", "maxResponse", "MAXIndex", "medResponse", " maxValue", " maxInd", "medPoint", "MAXPos", " maxPoint", "maxOffset", "finalIndex", "finalSeries", "actCons", "maxLength", "finalConnect", "finalInd", "maximumOffset", "randIndex", " maxPort", "randExp", "axIndex", "confValue", "maxConnect", "minCons", "minEx", "medEx", "medIndex", "rightLoop", "finalindex", "modEx", "confConnect", " maxSeries", "rightPos", "boundInd", "maxIter", "verPoint", "maxLoop", "randPort", "modPoint", "MAXIter", "confIndex"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args){\\n    \\n    Scanner sc = new Scanner(System.in);\\n    int a = sc.nextInt();\\n    int b = sc.nextInt();\\n\\n    int ans = (b-1)/(a-1);\\n    if((b-1)%(a-1)==0) {\\n    \tSystem.out.println(ans);\\n    }else {\\n    \tSystem.out.println(ans+1);\\n    }\\n    }\\n}", "target": "101", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sh", "exec", "sch", "out", "gc", "sq", "sub", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "ctl", "desc", "ctrl", "mc", "nl", "inc", "scl", "cr", "ok", "ch", "system", "ck", "conv", "cs", "tc", "Sc", "sb", "scan"], "a": ["ar", "aa", "era", "ax", "at", "window", "ai", "area", "all", "A", "ma", "i", "na", "ab", "o", "oa", "ach", "ao", "ba", "an", "am", "n", "app", "s", "ea", "ga", "ia", "sta", "isa", "ta", "aj", "ae", "e", "p", "ca", "as", "la", "alpha", "sa", "m", "ama", "ac"], "b": ["bp", "nb", "pb", "bb", "t", "bc", "bis", "i", "ab", "B", "r", "sb", "body", "fb", "c", "ba", "n", "wb", "h", "eb", "ib", "y", "v", "bs", "ob", "s", "cb", "j", "l", "rb", "gb", "br", "p", "db", "to", "be", "bi", "z", "d", "m", "g"], "ans": ["ANS", "orts", "ions", "anks", "offs", "anes", "lines", "ats", "ads", "aps", "eds", "ann", "ants", "ins", "outs", "names", "ms", "uns", "aus", "acs", "ks", "an", "ians", "vs", "angs", "lan", "amps", "rans", "aos", " spans", "posts", "asks", "ons", "anas", "ens", "ars", "vers", "ros", "ates", "ids", "ns", "ls", "as", "ds", "vals", "cs", "arts", "xs", "ents"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\nclass Main {\\n    public static void main(String[] args) throws IOException{\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        StringTokenizer st = new StringTokenizer(br.readLine());\\n        \\n        int N = Integer.parseInt(st.nextToken());\\n        int n=N;\\n        int L = Integer.parseInt(st.nextToken());\\n        String[] arr = new String[N];\\n        int k=0;\\n        while(N--!=0){\\n            arr[k++] = br.readLine();\\n        }\\n        Arrays.sort(arr);\\n        String ans=\"\";\\n        for(int i=0; i<n; i++){\\n            ans+=arr[i];\\n        }\\n\\n        System.out.println(ans);\\n\\n    }\\n}", "target": "224", "substitutes": {"br": ["bp", "bb", "bn", "bm", "bc", "bh", "bridge", "dr", "bro", "bl", "bf", "ab", "ctr", "gr", "r", "sp", "err", "tr", "bs", "lr", "pl", "yr", "bt", "mr", "Br", "pr", "sr", "rb", "cr", "bd", "ch", "kr", "BR", "b", "browser", "rel", "hr", "buf", "vr", "bi", "ber", "sb", "wr", "fr"], "st": ["mt", "ist", "est", "ft", "sty", "ct", "sl", "t", "th", "sts", "sv", "se", "sd", "irst", "stat", "stri", "ste", "std", "sy", "sp", "ust", "tr", "pt", "ast", "s", "St", "set", "bt", "l", "rest", "start", "tt", "ch", "sn", "td", "ST", "rt", "nd", "nt", "str", "fr", "et", "sc", "sb", "ts", "ost"], "N": ["E", "I", "NN", "R", "NC", "C", "SIZE", "AN", "Y", "Q", "A", "Num", "NT", "O", "Z", "M", "D", "S", "B", "MN", "F", "P", "V", "NR", "NUM", "Ni", "NL", "NB", "NV", "U", "TN", "NI", "NA", "K", "G", "J", "Size", "H", "NS", "X", "SN", "Length", "T", "Ns"], "n": ["f", "t", "u", "ln", "Na", "NT", "na", "x", "o", "r", "len", "nn", "Ni", "en", "s", "NL", "j", "l", "nu", "NA", "nl", "np", "p", "sn", "b", "ns", "NS", "nt", "Ns", "num", "z", "d", "m", "g"], "L": ["E", "I", "length", "C", "Z", "M", "D", "Line", "S", "B", "len", "P", "V", "NL", "l", "K", "nl", "G", "J", "le", "Len", "Length", "T", "LE", "ln"], "arr": ["reg", "iq", "ARR", "art", "ar", "ray", "ax", "img", "ear", "obj", "our", "ll", "Array", "dr", "pret", "Ar", "bl", "ind", "au", "inst", "ab", "alph", "gr", "r", "arch", "arry", "arb", "stage", "train", "tr", "var", "ev", "cur", "play", "pl", "ears", "batch", "pr", "av", "elt", "ars", "buff", "rar", "aaa", "vol", "gb", "coll", "dict", "dat", "rs", "agg", "ang", "nt", "att", "db", "array", "rel", "vals", "val", "str", "fr", "list", "align", "asc", "buf", "attr", "ell"], "k": ["kn", "kan", "ak", "ka", "kk", "unk", "ek", "ask", "sk", "ks", "kick", "ke", "key", "kid", "kt", "kind", "q", "ko", "w", "kw", "j", "ik", "isk", "ark", "ku", "kl", "K", "ikk", "ok", "ck", "mk", "id", "m", "km", "g"], "ans": ["ras", "ANS", "anks", "AN", "san", "ats", "ums", "ads", "us", "ann", "oss", "ants", "ins", " means", "uns", "ms", "anc", "ys", "aus", "acs", "an", "ks", "vs", "angs", "rus", "fts", "s", "amps", "rans", "aos", "posts", "yes", "ons", " Ans", "ens", "ars", "ros", "res", "An", "ns", "rs", "anon", "Ann", "ls", "as", "ds", "aned", "ean", "cs", "pan", "arts", "ents"], "i": ["zi", "I", "hi", "ci", "ie", "ami", "\u0438", "si", "io", "ic", "sim", "ai", "ei", "xi", "us", "me", "is", "ish", "point", "x", "ms", "mi", "cli", "mu", "index", "gi", "im", "MI", "init", "q", "ix", "ui", "ri", "ki", "j", "uri", "qi", "pi", "multi", "ji", "it", "ii", "gu", "ini", "di", "id", "li", "ti", "bi", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n class Main{\\npublic static void main(String[] args){\\n  \\n  Scanner stdIn = new Scanner(System.in);\\n  \\n  int a = stdIn.nextInt();\\n  int b = stdIn.nextInt();\\n  \tif ( a < 10 && b < 10){\\n      System.out.println(a*b);\\n    }else{\\n      System.out.println(-1);\\n      \\n    }\\n}\\n }", "target": "58", "substitutes": {"stdIn": ["dOut", "stdin", "din", "stdIN", " stdin", "standardIN", " stdAnd", "STDIns", " STDAnd", "ndIn", "STDin", "stdAnd", "dIn", "ndin", " STDOut", "dIns", " stdOut", "STDIn", " STDIN", " stdIns", "procIns", "standardIn", "stdIns", " stdIN", "procIn", "standardOut", "ndIns", "stdOut", "procin", "ndOut", " STDIn", "standardAnd"], "a": ["ar", "aa", "t", "at", "aq", "al", "ai", "area", "wa", "va", "xa", "A", "fa", "da", "au", "na", "x", "ab", "oa", "r", "ach", "ao", "ba", "n", "an", "ea", "ga", "ia", "ta", "aj", "ae", "aaa", "aff", "amount", "aka", "ca", "as", "la", "alpha", "sa", "act", "ma", "ama", "el", "ac"], "b": ["mb", "bool", "bp", "nb", "f", "back", "bb", "t", "u", "bc", "bis", "base", "i", "ab", "x", "B", "r", "fb", "c", "n", "ba", "wb", "h", "eb", "ib", "beta", "y", "v", "ob", "cb", "j", "l", "rb", "gb", "br", "bar", "db", "be", "z", "d", "reb", "sb"]}}
{"code": "//package code;\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\n/**\\n *\\n * @author Milo\\n */\\npublic class Main {\\n    \\n    static FastReader in = new FastReader();\\n    public static void main(String[] args) {\\n        int t = 1; //in.nextInt();\\n        while (t-- > 0)\\n            solve();\\n    }\\n \\n    public static void solve() {\\n        int a = in.nextInt();\\n        int b = in.nextInt();\\n        System.out.println((a*b));\\n    }\\n\\n    static class FastReader {\\n        BufferedReader br;\\n        StringTokenizer st;\\n \\n        public FastReader() {\\n            br = new BufferedReader(new InputStreamReader(System.in));\\n        }\\n \\n        String next() {\\n            while (st == null || !st.hasMoreElements()) {\\n                try {\\n                    st = new StringTokenizer(br.readLine());\\n                } catch (IOException e) {\\n                    e.printStackTrace();\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n \\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n \\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n \\n        double nextDouble() {\\n            return Double.parseDouble(next());\\n        }\\n \\n        String nextLine() {\\n            String str = \"\";\\n            try {\\n                str = br.readLine();\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            return str;\\n        }\\n    }\\n \\n    public static int max(int a, int b) {\\n        return a > b ? a : b;\\n    }\\n \\n    public static int min(int a, int b) {\\n        return a < b ? a : b;\\n    }\\n \\n    public static int gcd(int a, int b) {\\n        return b == 0 ? a : gcd(b, (a % b));\\n    }\\n}\\n", "target": "35", "substitutes": {}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main\\n{\\n  static long t[];\\n  static long l[];\\n  static long h[];\\n\\n  public static void main(String[] args) throws IOException\\n  {\\n    BufferedReader r = new BufferedReader(new InputStreamReader(System.in), 1);\\n\\n    String s;\\n    String sl[];\\n\\n    s = r.readLine();\\n    sl = s.split(\" \");\\n    int n = Integer.parseInt(sl[0]);\\n    int m = Integer.parseInt(sl[1]);\\n\\n    int a[] = new int[m];\\n    for(int i = 0; i < n; i++)\\n    {\\n      s = r.readLine();\\n      sl = s.split(\" \");\\n      int v = Integer.parseInt(sl[0]);\\n      for(int j = 1; j <= v; j++)\\n      {\\n        int t = Integer.parseInt(sl[j]) - 1;\\n        a[t]++;\\n      }\\n    }\\n\\n    int sum = 0;\\n    for(int i = 0; i < m; i++)\\n    {\\n      //System.out.println(a[i]);\\n      if(a[i] == n)\\n      {\\n        sum++;\\n      }\\n    }\\n    System.out.println(sum);\\n  }\\n\\n}", "target": "169", "substitutes": {"t": ["te", "f", "qt", "ct", "at", "u", "wt", "o", "tf", "type", "tp", "on", "c", "tr", "et", "vt", "pt", "tn", "ty", "y", "tu", "q", "ta", "tt", "ot", "it", "p", "b", "td", "rt", "dt", "T", "ti", "z", "d", "tc", "tip", "tree", "ts"], "l": ["L", "lv", "ul", "ll", "o", "len", "lo", "en", "q", "lt", "ly", "p", "b", "le", "ls", "li", "z", "lp", "el", "g"], "h": ["hi", "hh", "hs", "bh", "kh", "sh", "ha", "o", "x", "c", "ah", "q", "w", "hl", "hash", "he", "oh", "ih", "ph", "H", "p", "ch", "b", "z", "ho", "phi", "g"], "r": ["rec", "usr", "ar", "R", "f", "ren", "rc", "re", "er", "ro", "dr", "rr", "c", "w", "mr", "rx", "rb", "rar", "res", "cr", "br", "p", "b", "rs", "rt", "rg", "rel", "nr", "rl", "rd", "reader", "fr", "hr", "rw", "sr", "vr"], "s": ["its", "es", "qs", "hs", "fs", "sql", "ashes", "ats", "js", "se", "sv", "sts", "gets", "re", "ies", "csv", "sh", "bis", "is", "abs", "sq", "ins", "S", "ms", "als", "ps", "sb", "sp", "less", "os", "south", "spec", "y", "bs", "ws", "space", "states", "gs", "bits", "e", "p", "b", "ns", "rs", "ls", "stats", "ds", "xs", "as", "cs", "str", "ss", "g", "ts"], "sl": ["sil", "sw", "sql", "syn", "spl", "si", "serv", "Sl", "SL", "sf", "sv", "js", "services", "sts", "ll", "sd", "sol", "sh", "bl", "sp", "ml", "els", "owl", "shr", "isl", "les", "bs", "del", "where", "pl", "sels", "shell", "decl", "dl", "ell", "sr", "kl", "acl", "nl", "gs", "slice", "scl", "sel", "cel", "sn", "tl", "eval", "pol", "pse", "ls", "so", "settings", "fl", "ssl", "sa", "rel", "sche", "sing", "str", "sle", "li", "rl", "split", "gl", "el", "sb", "se"], "n": ["nm", "u", "nc", "net", "mn", "nan", "na", "x", "o", "no", "on", "c", "an", "nn", "fn", "Ni", "en", "N", "nu", "nl", "np", "p", "sn", "ns", "nt", "ni", "num", "un", "z", "d", "ne"], "m": ["mb", "mt", "length", "nm", "f", "bm", "mm", "M", "mn", "k", "ma", "o", "x", "size", "md", "mi", "c", "dm", "y", "im", "w", "mc", "pi", "e", "p", "tm", "b", "cm", "num", "z", "d", "g"], "a": ["aa", "f", "u", "area", "wa", "xa", "va", "A", "da", "data", "o", "x", "pa", "na", "ao", "c", "ba", "an", "w", "sta", "ta", "e", "p", "b", "ata", "alpha", "att", "sa", "z", "d", "ma", "ac"], "i": ["zi", "iq", "iter", "I", "ie", "ci", "ami", "f", "si", "sim", "u", "us", "xi", "ei", "me", "ai", "eu", "is", "ind", "o", "x", "mi", "err", "cli", "index", "name", "im", "init", "y", "ix", "q", "ui", "gi", "ri", "ki", "ity", "pi", "multi", "ji", "qi", "it", "ii", "p", "gu", "ini", "di", "uu", "id", "li", "in", " I", "bi", "ims", "ti", "iu", "phi", "g", "ip", "ion"], "v": ["ver", "nv", "f", "si", "lv", "tv", "u", "sv", "va", "k", "o", "x", "uv", "V", "c", "ev", "vs", "vt", "vert", "y", "q", "w", "vis", "av", "p", "qv", "li", "conv", "z", "g"], "j": ["bj", "off", "js", "jl", "obj", "u", "k", "ion", "oj", "job", "z", "je", "err", "uj", "ge", "key", "jc", "pt", "y", "q", "dj", "json", "bo", "pr", "aj", "jp", "jo", "jump", "ji", "J", "ij", "jit", "br", "b", "jj", " J", "kj", "jas", "g", "ja"], "sum": ["cap", "si", "sim", "all", "max", "count", "out", "add", "size", "sp", "mu", "index", "cal", "hash", "sam", "av", "Sum", "mem", "mean", "total", "result", "um", "num", "ptr", "set", "ho", "g"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\t  \\n\tpublic static void main(String args[]) {\\n\t\t    Scanner scanner = new Scanner(System.in);\\n\t\t    \\n\t\t   int count = 0;\\n\t\t   String  s = scanner.nextLine();\\n\t\t   \\n\t\t   for(int i = 0; i < s.length();) \\n\t\t   {\\n\t\t\t   if(s.substring(i, i + 1 ).equals(\"+\"))\\n\t\t\t   {\\n\t\t\t\t   count = count + 1;\\n\t\t\t   }\\n\t\t\t   else \\n\t\t\t   {\\n\t\t\t\t   count = count - 1;\\n\t\t\t   }\\n\t\t\t\ti = i + 1;   \\n\t\t\t\t   \\n\t\t   }\\n\t\t    \\n\t\t   System.out.println(count);\\n\t\t   \\n\t\t    scanner.close(); }\\n\t\t  }", "target": "54", "substitutes": {"scanner": ["Scanner", " scanning", "Scaner", "scanning", "Scanning", "scaner", " scanator", "specner", "scanener", " scanter", "scanator", "specning", "canator", "Scanener", " scanener", " scaner", "caner", "Scanter", "specter", "canener", "Scanator", "specener", "scanter", "canner"], "count": ["found", "report", "length", "flag", "zero", "status", "nb", "Count", "const", "first", "ct", "counter", "latest", "match", "hold", "all", "max", "now", "stat", "sum", "find", "ctr", "cond", "type", "size", "score", "check", "c", "n", "code", "index", "ount", "label", "currency", "value", "info", "batch", "summary", "next", "process", "current", "force", "amount", "print", "child", "search", "total", "mean", "group", "nt", "result", "number", "num", "trace", "cache", "list", "core", "test", "cast", "percent"], "s": ["its", "es", "qs", "fs", "sys", "ats", "t", "js", "sts", "sv", "csv", "gets", "aws", "strings", "is", "sq", "S", "ps", "ms", "r", "sb", "less", "c", "n", "source", "h", "v", "bs", "w", "ws", "l", "gs", "bits", "p", "b", "ns", "rs", "ls", "xs", "str", "ss", "g", "ts"], "i": ["zi", "iq", "iter", "I", "hi", "ci", "si", "io", "ic", "u", "oi", "ai", "ei", "xi", "me", "is", "ind", "ori", "x", "mi", "c", "cli", "n", "index", "im", "init", "gi", "y", "ix", "q", "ui", "v", "j", "uri", "l", "qi", "pi", "multi", "slice", "it", "ii", "ini", "di", "yi", "li", "in", "ti", "bi", "z", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\\n\t\tScanner scanner = new Scanner(System.in);\\n\\n\t\tint N = scanner.nextInt();\\n\t\tlong ans = 0;\\n\\n\t\tfor (int i = 1; i <= N; i++) {\\n\\n\t\t\t//3\u306e\u500d\u6570\u3067\u3082\u3042\u308a5\u306e\u500d\u6570\u3067\u3082\u3042\u308b\u5834\u5408\\n\t\t\tif (i % 3 == 0 && i % 5 == 0) {\\n\t\t\t\\n\t\t\t}\\n\\n\t\t\t//3\u306e\u500d\u6570\u306e\u5834\u5408\\n\t\t\telse if (i % 3 == 0) {\\n\t\t\t\t\\n\t\t\t}\\n\t\t\t//5\u306e\u500d\u6570\u306e\u5834\u5408\\n\t\t\telse if (i % 5 == 0) {\\n\t\t\t\t\\n\t\t\t//3\u30685\u306e\u500d\u6570\u4ee5\u5916\u306e\u5834\u5408\\n\t\t\t} else {\\n\t\t\t\t\\n\t\t\t\tans += i;\\n\\n\t\t\t}\\n\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\\n\t\tscanner.close();\\n\t}\\n}\\n", "target": "55", "substitutes": {}}
{"code": "import java.util.*;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tif(N<=111)System.out.println(111);\\n\t\telse if(112<=N && N <=222)System.out.println(222);\\n\t\telse if(223<=N && N <=333)System.out.println(333);\\n\t\telse if(334<=N && N <=444)System.out.println(444);\\n\t\telse if(445<=N && N <=555)System.out.println(555);\\n\t\telse if(556<=N && N <=666)System.out.println(666);\\n\t\telse if(667<=N && N <=777)System.out.println(777);\\n\t\telse if(778<=N && N <=888)System.out.println(888);\\n\t\telse if(889<=N && N <=999)System.out.println(999);\\n\t\tsc.close();\\n\t}\\n\\n}", "target": "106", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "pb", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "gc", "sq", "sp", "c", "cc", "esc", "ser", "isc", "src", "cl", "lc", " Sc", "sr", "ctrl", "screen", "mc", "RC", "scl", "cr", "capt", "ch", "system", "ck", "proc", "so", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "N": ["None", "CN", "I", "NN", "NM", "NC", "AN", "ND", "L", "OUT", "NO", "POS", "Num", "NT", "O", "M", "D", "S", "MN", "Node", "EN", "RN", "UN", "BN", "NG", "V", "n", "NR", "NUM", "CNN", "NL", "Number", "NB", "NP", "NV", "TN", "ANY", "MAN", "DN", "NI", " n", "NEW", "GN", "WH", "Key", "NA", "K", "NAME", "J", "Size", "NH", "Names", "Name", "New", "Note", "NS", "Ne", "NOR", "SN", "FN", "No", "Ren", "Sn", "All", "NPR", "NOT", "NE"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main(String args[]) throws Exception{\\n\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString[] line = br.readLine().split(\" \");\\n\\n\t\tint d = Integer.parseInt(line[0]);\\n\t\tint n = Integer.parseInt(line[1]);\\n\\n\t\tint n1 = 0;\\n\t\tint n2 = 0;\\n\\n\t\tif(n>=(100^2)){\\n\t\t\tn2 = n/((int)Math.pow(100,2));\\n//\t\t\tSystem.out.println(n2);\\n\t\t}\\n\t\tif(n>=100){\\n\t\t\tn1 = n/100 ;\\n//\t\t\tSystem.out.println(n2);\\n\t\t}\\n\t\tn = n+n1+n2;\\n\\n\t\tSystem.out.println((int)Math.pow(100,d)*n);\\n\\n\\n\t}\\n}\\n", "target": "245", "substitutes": {"br": ["bp", "div", "bm", "bc", "bh", "bridge", "er", "dr", "bro", "bl", "gr", "r", "sp", "tr", "bsp", "lr", "yr", "bt", "mr", "Br", "pr", "next", "sr", "rb", "bd", "cr", "vr", "kr", "ch", "b", "BR", "be", "rel", "hr", "buf", "fr", "str", "ber", "wr", "bn"], "line": ["iter", "liner", "word", "tile", "LINE", "section", "ine", "tab", "zone", "lines", "date", "range", "se", "net", "node", "Line", "link", "nice", "parse", "rule", "lin", "entry", "lo", "page", "pixel", "shell", "eline", "cat", "comment", "l", "frame", "nl", "piece", "cmd", "le", "day", "user", "row", "log", "cle", "list", "ln", "query", "block", "cell", "ip"], "d": ["f", "de", "t", "sd", "dx", "D", "data", "fd", "pd", "cd", "c", "dm", "dh", "e", "p", "b", "dat", "di", "dt", "ds", "id", "db", "dir", "z", "m", "od"], "n": ["note", "nm", "t", "u", "ln", "nc", "k", "mn", "nan", "i", "na", "x", "r", "on", "c", "nn", "h", "fn", "v", "en", "w", "N", "j", "l", "a", "nu", "np", "nl", "cn", "p", "norm", "sn", "b", "ns", "nt", "ni", "number", "num", "m", "ne"], "n1": ["N3", "None", "n3", "l3", "l0", " n0", " none", "l1", "none", "n0", "N0", "lone", "N1", " n3"], "n2": ["j4", "n3", "c4", " n3", "ctwo", "N3", "n4", "ns3", "N1", "c3", " ntwo", "N2", "ns1", "ns2", "ntwo", "j2", "c1", "Ntwo", "c2", "j1", "ns4", "j3"]}}
{"code": "\\n\\nimport java.io.BufferedOutputStream;\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.PrintWriter;\\nimport java.math.BigInteger;\\nimport java.util.*;\\n\\n\\npublic class Main {\\n\t\\n\tpublic static class FastReader {\\n\t\tBufferedReader br;\\n\t\tStringTokenizer st;\\n\t\\n\\n\t\tpublic FastReader() {\\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\\n\t\t}\\n\\n\t\tString next() {\\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\\n\t\t\t\ttry {\\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\\n\t\t\t\t} catch (Exception r) {\\n\t\t\t\t\tr.printStackTrace();\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn st.nextToken();\\n\t\t}\\n\\n\t\tint nextInt() {\\n\t\t\treturn Integer.parseInt(next());//converts string to integer\\n\t\t}\\n\\n\t\tdouble nextDouble() {\\n\t\t\treturn Double.parseDouble(next());\\n\t\t}\\n\\n\t\tlong nextLong() {\\n\t\t\treturn Long.parseLong(next());\\n\t\t}\\n\\n\t\tString nextLine() {\\n\t\t\tString str = \"\";\\n\t\t\ttry {\\n\t\t\t\tstr = br.readLine();\\n\t\t\t} catch (Exception r) {\\n\t\t\t\tr.printStackTrace();\\n\t\t\t}\\n\t\t\treturn str;\\n\t\t}\\n\t}\\n\t\\n\tpublic static PrintWriter out = new PrintWriter (new BufferedOutputStream(System.out));\\n    public static long mod = (long) (1e9+7);\\n    public final static int MAX = (int)1e5;\\n  // static Scanner sc = new Scanner(System.in);\\n   static List<Integer>[] edge;\\n\tpublic static void main(String[] args) {\\n\t   \\n\t FastReader sc = new FastReader();\\n\tint n = sc.nextInt();\\n\tdouble[] r = new double[n];\\n\tfor(int i=0;i<n;++i) r[i] = sc.nextDouble();\\n\tdouble ans = 0.0;\\n\tfor(int i=0;i<n;++i) {\\n\t\tans += 1/r[i];\\n\t}\\n\tout.print(1/ans);\\n\t\tout.close();\\n\t}\\n\t\\n\t\\n}\\n", "target": "120", "substitutes": {"br": ["bp", "bb", "bre", "bn", "bc", "bh", "bridge", "dr", "bro", "bl", "bf", "ab", "ctr", "gr", "r", "rob", "tr", "bern", "shr", "abl", "bs", "bsp", "lr", "bt", "wr", "mr", "Br", "pr", "rb", "jp", "brace", "cr", "kr", "BR", "b", "nr", "rel", "hr", "buf", "vr", "ber", "sr", "fr"], "st": ["stable", "sm", "mt", "ist", "sw", "est", "sth", "sty", "const", "storage", "ct", "sl", "t", "th", "sts", "se", "sv", "ped", "sh", "stat", "inst", "ste", "tmp", "std", "z", "r", "sp", "stage", "ust", " superst", "tr", "pt", "cl", "s", "St", "bt", "l", "rest", "start", "step", "lt", "stan", "cr", "p", "sn", "ST", "rt", "nt", "nd", "so", "stack", "str", "set", "ss", "sb", "ts", "ost"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tList<Integer> cards = new ArrayList<Integer>();\\n\t\tfor(int i = 0;i < n ;i++) {\\n\t\t\tcards.add(sc.nextInt());\\n\t\t}\\n\t\tCollections.sort(cards);\\n\t\tCollections.reverse(cards);\\n\t\tint ans = 0;\\n\t\tfor(int i = 0;i < n;i++) {\\n\t\t\tif(i % 2 == 0) ans += cards.get(i);\\n\t\t\telse ans -= cards.get(i);\\n\t\t}\\n\t\tSystem.out.println(ans);\\n        sc.close();\\n\t}\\n}", "target": "132", "substitutes": {"sc": ["SC", "rec", "sw", "osc", "pc", "sys", "pb", "ctx", "syn", "cu", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "cam", "gc", "sq", "cv", "scrib", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "arc", "ctl", "mc", "nl", "inc", "scl", "cr", "capt", "ch", "system", "ck", "st", "rs", "ca", "conv", "cle", "cs", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "network", "ln", "nc", "net", "mn", "nan", "count", "now", "na", "no", "o", "ng", "len", "c", " ng", "nn", "fn", "nor", "v", "gn", "en", "N", "j", "l", "nu", "nl", "np", "cn", "p", "sn", "ns", "nt", "ni", "number", "num", "z", "d", "m", "ne"], "cards": ["Card", "groups", "cas", "photos", "offs", "weights", "checks", "guards", "hands", "dds", "sticks", "services", "packs", "ards", "ways", "cases", "styles", "ims", "card", "tracks", "ps", "pins", "times", "boxes", "phones", "houses", "games", "days", "vs", "balls", "ands", "holders", "sets", "codes", "amps", "ends", "lets", "posts", "cuts", "olds", "lights", "cats", "points", "tags", "gs", "fields", "lands", "pointers", "cf", "ls", "ds", "clips", "ips", "cs", "caps", "windows", "lists", "comments"], "i": ["io", "us", "o", "iu", "index", "y", "ix", "l", "pi", "ii", "gu", "id", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "base", "ori", "client", "cli", "init", "ui", "j", "qi", "multi", "my", "print", "chain", "ini", "m", "iter", "si", "ic", "sim", "er", "is", "ind", "x", "mi", "err", "gi", "ji", "it", "e", "p", "di", "to", "in", "ims", "slice", "zi", "iti", "I", "ami", "\u0438", "u", "ai", "me", "full", "im", "v", "info", "q", "ri", "ki", "batch", "ity", "PI", "li", "point", "ip"], "ans": ["ANS", "orts", "ions", "es", "anks", "offs", "AN", "lines", "anes", "ats", "ums", "aps", "ads", "eds", "ann", "ants", "ins", " means", "outs", "uns", "ms", "aus", "ks", "an", " scans", "ians", "ups", "angs", "ones", "lan", "sets", "amps", "rans", "lets", "ends", "posts", "asks", "olds", "ons", "ens", "cons", "ars", "vers", "gs", "ows", "ids", "ns", "ls", "as", "ds", "vals", "cs", "actions", "arts", "xs", "ents"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n\tpublic static void main(String arga[]){\\n\t\t\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString a = sc.next(); \\n\t\tString b = \"ABC\";\\n\t\tString c = \"ARC\";\\n\t\t\\n\t\tif(a.equals(b)){\\n\t\t\tSystem.out.println(\"ARC\");\\n\t\t}\\n\t\telse if(a.equals(c)){\\n\t\t\tSystem.out.println(\"ABC\");\\n\t\t}\\n\t\t\\n\t}\\n}\\n", "target": "153", "substitutes": {"arga": ["argla", "Argla", "argsca", "argca", "argsa", " argsla", "argss", "argsla", "Args", " argss", " argsca", "Argca", " argsa", "Arga"], "sc": ["SC", "sw", "osc", "pc", "sys", "syn", "sv", "nc", "bc", "asc", "sync", "sac", "sch", "gc", "sq", "sub", "uc", "anc", "sec", "sp", "cc", "isc", "esc", "soc", "spec", "cl", "ko", "lc", "desc", "screen", "mc", "scl", "cr", "sel", "ch", "system", "ss", "conv", "cle", "cs", "ec", "tc", "Sc", "scan"], "a": [" ba", "pai", "access", "ar", "aa", "era", "at", "al", "t", " sa", "area", "wa", "A", "er", "au", "data", "ab", "oa", "ao", "act", "an", "ba", "am", " af", "name", "app", " at", "ia", "l", "isa", "ta", "ae", "aj", "aaa", "aff", "apa", "aka", "ca", "ata", "as", "alpha", "att", "to", "sa", "eas", "ma", "g", "ac"], "b": ["or", "mb", "nb", "pb", "bb", "bc", "abc", "bis", "bf", "abs", "ub", "ab", "B", "r", "fb", "g", "ba", "wb", "blue", "eb", "ib", "beta", "v", "bs", "ob", "cb", "l", "rb", "xb", "gb", "br", "bar", "db", "be", "erb", "bi", "d", "sb"], "c": ["ct", "C", "cu", "rc", "bc", "abc", "icc", "fc", "cd", "cc", "ce", "cur", "n", "con", "tc", "lc", "cb", "arc", "co", "crit", "e", "cr", "etc", "cm", "ca", "cf", "vc", "dc", "cs", "ec", "d", "unc", "ac"]}}
{"code": "import java.util.HashMap;\\nimport java.util.Scanner;\\n\\n// https://atcoder.jp/contests/abc163/tasks/abc163_c\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tHashMap<Integer, Integer> map = new HashMap<>();\\n\t\tfor (int i = 1; i < n; i++) {\\n\t\t\tint str = sc.nextInt();\\n\t\t\tif (map.containsKey(str)) {\\n\t\t\t\tmap.put(str, map.get(str)+1);\\n\t\t\t} else {\\n\t\t\t\tmap.put(str, 1);\\n\t\t\t}\\n\t\t}\\n\t\tsc.close();\\n\\n\\n\t\tfor(int i=1;i<=n;i++) {\\n\t\t\tif(map.get(i)==null) {\\n\t\t\t\tSystem.out.println(0);\\n\t\t\t}else {\\n\t\t\t\tSystem.out.println(map.get(i));\\n\t\t\t}\\n\\n\t\t}\\n\t}\\n}\\n", "target": "12", "substitutes": {}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main (String[] args) {\\n\t\tScanner in = new Scanner(System.in);\\n\t\t\\n\t\tint n = in.nextInt();\\n        int nam[] = new int[n];\\n        int flag = 0;\\n      \\n      for(int i = 0; i < n ;i++){\\n      \tnam[i] = in.nextInt();\\n      }\\n      \\n      int bh = -999;\\n      for(int i = 0;i < n ; i++){\\n      if(bh<=nam[i]-1){\\n       \tnam[i] -= 1 ;\\n      }else if(bh<=nam[i]){\\n       \tnam[i] = nam[i];\\n      }else{\\n      \tflag = 1;\\n        break;\\n      }\\n        bh = nam[i];\\n    }\\n\\n\tif(flag==1){\\n     \tSystem.out.print(\"No\"); \\n    }else{\\n     \tSystem.out.print(\"Yes\"); \\n    }\\n      \\n\t}\\n}\\n", "target": "74", "substitutes": {"in": ["din", "io", "serv", "IN", "at", "inn", "inner", "from", "bin", "all", "is", "out", "ind", "ins", "sum", "add", "std", "r", "on", "rin", "err", "thin", "isin", "by", "init", "conf", "en", "info", "con", "gin", " din", "l", "doc", "asin", "cin", "In", "sin", "inc", "readable", "input", "run", "file", "ini", "null", "inf", "reader", "ln", "line", "get", "scan"], "n": ["nm", "nb", "t", "network", "ln", "nc", "all", "net", "mn", "count", "nan", "na", "no", "o", "ng", "on", "len", "c", "an", "nn", "fn", "nor", "name", "v", "en", "dn", "N", "j", "l", "nu", " N", "np", "nl", "cn", "p", "sn", "ns", "nd", "nt", "ni", "nw", "nia", "nr", "num", "d", "m", "ne"], "nam": ["canon", "nm", " Nam", "mon", "leen", "snap", "won", "san", "tim", "ren", "sim", "von", "wal", "dim", "du", "cam", "mn", "filename", "iam", "na", "names", "lam", "spe", "arn", "tha", "must", "fam", "typ", "amin", " nem", "burn", "am", "dies", "nn", "fn", "cum", "name", "named", "ty", "dn", "man", "decl", "non", "rm", "sam", "sbm", "ram", "ten", "mem", "tem", "amen", "stan", "cn", "oct", "ny", "sn", "ns", "aum", "ames", "nob", "mun", "wife", "nil", "num", "sit", "nom", "don", "val", "ne", "ame", "rn"], "flag": ["fun", "level", "status", "const", "f", "off", "FLAG", "tag", "sync", "hold", "member", "ord", "ind", "age", "button", "kill", "cond", "fd", "save", "bit", "stage", "Flag", "weight", "prop", "flags", "state", "bird", "set", "limit", "lag", "bug", "store", "nl", " Flag", "ground", "cmd", "command", "sun", "day", "group", "offset", "ret", "id", "cloud", "field", "fl", "sav", "leaf", "ld", "log", "list", "sign", "wait", "line"], "i": ["status", "io", "pa", "iu", "index", "y", "ix", "pi", "ii", "gu", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "internal", "f", "xi", "ei", "vi", "base", "ori", "client", "progress", "cli", "init", "s", "ui", "j", "uri", "qi", "multi", "chain", "ini", "ret", "list", "set", "m", "ion", "iter", "si", "ic", "sim", "oi", "exp", "is", "ind", "mi", "err", "name", "gi", "ji", "it", "di", "to", "zi", "go", "iti", "I", "\u0438", "ai", "me", "c", "iy", "im", "v", "info", "q", "ri", "this", "batch", "ity", "ij", "inx", "li", "point", "ip"], "bh": ["hn", "hi", "bol", "bp", "hh", "hs", "nb", "orth", "bj", "bang", "eth", "bb", "bul", "bm", "bc", "kh", "hold", "sh", "bis", "bone", "bf", "bl", "han", "hid", "hirt", "phy", "h", "lb", "biz", "bs", "ht", "pl", "rh", "bt", "high", "hl", "hang", "hun", "rb", "buff", "ih", "oth", "bd", "br", "bat", "hal", "uh", "b", "hub", "ith", "hr", "hz", "hop", "bi", "phi", "sb", "zh", "bn"]}}
{"code": "// ABC152\u306eB\u554f\u984c\\nimport java.util.*;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int a = Integer.parseInt(sc.next());\\n        int b = Integer.parseInt(sc.next());\\n\\n        if(a >= b) {\\n            for(int i = 0; i < a; ++i) {\\n                System.out.printf(\"%d\", b);\\n            }\\n        }\\n        else {\\n            for(int i = 0; i < b; ++i) {\\n                System.out.printf(\"%d\", a);\\n            }\\n        }\\n\\n    }\\n}\\n", "target": "24", "substitutes": {}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString w = sc.next();\\n\t\tchar[] c = w.toCharArray();\\n\t\tchar[] moji = new char[26];\\n\t\tchar a = 'a';\\n\t\tint count = 0;\\n\\n\t\t for (int i = 0; i < moji.length; i++){\\n\t\t        moji[i] = a++;\\n\t\t    }\\n\\n\t\tfor (int j = 0; j < moji.length; j++) {\\n\t\t\tfor (int i = 0; i < c.length; i++) {\\n\t\t\t\tif(c[i] == moji[j]) {\\n\t\t\t\t\tcount++;\\n\t\t\t\t}\\n\t\t\t}\\n\\n\t\t\tif(count % 2 != 0) {\\n\t\t\t\tSystem.out.print(\"No\");\\n\t\t\t\tSystem.exit(0);\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.print(\"Yes\");\\n\t}\\n}\\n", "target": "103", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sq", "sch", "sub", "anc", "sec", "sp", "cc", "ser", "esc", "isc", "cl", "lc", "desc", "screen", "mc", "RC", "inc", "scl", "cr", "sel", "ch", "system", "ss", "cle", "cs", "tc", "Sc", "sb", "scan"], "w": ["writer", "aw", "sw", "word", "f", "t", "wal", "wa", "wp", "wt", "rew", "x", "r", "ew", "n", "wb", "h", "v", "W", "widget", "ws", "kw", "wh", "wx", "p", "wcs", "win", "nw", "wl", "rw", "d", "wr"], "c": ["cos", "f", "C", "cu", "ct", "t", "u", "com", "rc", "csv", "gc", "col", "fc", "r", "cont", "n", "cc", "cur", "ce", "y", "v", "s", "lc", "cb", "cat", "l", "arc", "co", "mc", "cr", "ch", "p", "chain", "etc", "b", "cm", "vc", "cf", "cp", "dc", "cs", "m", "tc", "g", "ac"], "moji": ["poj", "looji", "poi", " moij", "koji", "loji", "moi", "noj", "mooji", "miji", "goi", "poja", "nooji", "mie", "pojo", "noiji", " mooji", "moij", "moiji", "gooji", "noji", "goji", "choja", "lojo", "moie", "moj", "poiji", "poij", "gojo", " moiji", "noie", "noja", "mojo", "koj", "koij", "poji", "mji", "loi", " moja", "chooji", "kooji", "pooji", " moie", "choji", "moja", "choiji", "koja"], "a": ["aa", "f", "t", "at", "u", "xa", "A", "ka", "fa", "base", "na", "pa", "o", "x", "eta", "ao", "am", "v", "s", "m", "ea", "ia", "ae", "aaa", "e", "apa", "b", "ca", "alpha", "as", "sa", "z", "ma", "ama", "ana", "g", "ac"], "count": ["found", "close", "report", "length", "flag", "counter", "Count", "const", "nb", "ct", "t", "th", "match", "base", "ind", "stat", "sum", "find", "add", "ctr", "reset", "cond", "size", "cycle", "err", "cont", "code", "check", "n", "index", "ount", "conf", "comment", "current", "force", "amount", "coll", "child", "search", "total", "result", "nt", "number", "num", "trace", "cache", "z", "list", "test", "call"], "i": ["zi", "iter", "ie", "hi", "ci", "I", "iti", "ami", "\u0438", "si", "io", "ic", "oi", "iri", "xi", "ei", "inner", "ai", "is", "ish", "ind", "ori", "ati", "mi", "iy", "im", "init", "v", "uci", "ix", "info", "ui", "gi", "ri", "ki", "uri", "ia", "ik", "ity", "qi", "pi", "ij", "it", "ii", "chain", "ini", "di", "inx", "yi", "id", "ni", "asi", "li", "fi", "ti", "bi", "ims", "iu", "phi", "ip", "ion"], "j": ["note", "jac", "bj", "jl", "js", "obj", "kj", "k", "ion", "ind", "oj", "o", "x", "ne", "je", "on", "err", "uj", "n", "key", "jc", "pt", "y", "v", "bs", "q", "ix", "dj", "json", "bo", "pr", "aj", "jp", "jump", "ji", "ij", "it", "J", "br", "p", "jj", "ja", "nd", "other", "str", "z", "bi", "m", "el", "g", "fr"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n\\n        int A = sc.nextInt();\\n        int B = sc.nextInt();\\n        int C = sc.nextInt();\\n        int D = sc.nextInt();\\n\\n        System.out.println(solve(A, B, C, D));\\n\\n        sc.close();\\n    }\\n\\n    static int solve(int A, int B, int C, int D) {\\n        return Math.max(0, Math.min(B, D) - Math.max(A, C));\\n    }\\n}", "target": "47", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "syn", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "cam", "sch", "gc", "sq", "sub", "uc", "ng", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "ko", "lc", " Sc", "hl", "ctl", "desc", "ctrl", "arc", "mc", "jp", "inc", "scl", "cr", "ch", "system", "ck", "ss", "conv", "cs", "ec", "tc", "Sc", "scan"], "A": ["Al", "E", "I", "R", "AF", "GA", "AL", "RA", "L", "AE", "AV", "Array", "App", "O", "M", "Ar", "AA", "AP", "ACT", "SA", "S", "P", "V", "At", "AU", "IA", "Ag", "AB", "U", "Java", "AC", "AH", "a", "BA", "In", "G", "AR", "H", "An", "Av", "As", "X", "mA", "This", "Ant", "T", "AT", "LA", "CA"], "B": ["Ber", "E", "TB", "R", "GB", "OB", "RB", "L", "BL", "Back", "S", "BO", "Bi", "BI", "BG", "BB", "V", "CB", "DB", "BE", "SB", "BF", "IB", "NB", "AB", "Blue", " b", "Reb", "BA", "G", "H", "WB", "b", "BR", "BC", "BS", "T", "Be", "BD", "LB", "VB", "Bs"], "C": ["SC", "E", "YC", "CT", "R", "L", "GC", "EC", "Y", "CE", "CF", "Car", "O", "Cond", "M", "CS", "Ch", "Cu", "S", "F", "V", "c", "CW", "Co", "CB", "JC", "CR", "CBS", "CNN", "VC", "DC", "N", "U", "Con", "AC", "CCC", " c", "CD", "G", "CM", "IC", "CC", "BC", "T", "CG", "Cos", "Cons", "CA", "Cs"], "D": ["E", "R", "L", "DI", "Ds", "Body", "Q", "Z", "Red", "O", "M", "Do", "DP", "The", "S", "Dr", "Def", "F", "P", "V", "DB", "DS", " d", "DF", "YD", "W", "DD", "N", "U", "PD", "G", "H", "Daniel", "Details", "DR", "DE", "DA", "T", "Date", "Del", "d", "Dec", "Det"]}}
{"code": "import java.util.*;\\nclass Main{\\n    public static void main(String[]args){\\n        Scanner scanner = new Scanner(System.in);\\n        int K = scanner.nextInt();\\n        String S = scanner.next();\\n        char[] split_S = new char [S.length()];\\n        for(int i=0;i<S.length();i++){\\n            split_S[i] = S.charAt(i);\\n        }\\n        if(S.length() <= K){\\n            for(int i=0;i<S.length();i++){\\n                if(i != i-1){\\n                    System.out.print(split_S[i]);\\n                }\\n                else{\\n                    System.out.println(split_S[i]);\\n                }\\n            }\\n        }\\n        else{\\n            for(int i=0;i<S.length();i++){\\n                if(i != K-1){\\n                    System.out.print(split_S[i]);\\n                }\\n                else{\\n                    System.out.println(split_S[i]+\"...\");\\n                    break;\\n                }\\n            }\\n        }\\n\\n        scanner.close();\\n    }\\n}", "target": "248", "substitutes": {"scanner": ["Scanner", "Scaner", "scaner", "findener", "scannel", "scanener", " scanter", "canter", "findner", "Scanener", " scanener", "Scannel", "findnel", "cannel", " scaner", "Scanter", "caner", "canener", "scanter", "canner", "findter"], "K": ["I", "KING", "KC", "R", "C", "PK", "FK", "KE", "VK", "L", "Q", "Z", "A", "max", "Max", "M", "k", "UK", "F", "P", "V", "AK", "Ni", "Kind", "KK", "HK", "OK", "N", "SK", "U", "KR", "Key", "Mask", "G", "J", "Size", "H", "KI", "Disk", "KA", "Length", "KEY", "T", "KS"], "S": ["I", "SSL", "R", "RS", "L", "SH", "SL", "TS", "SS", "SU", "SR", "M", "SER", "CS", "SA", "JS", "US", "B", "P", "V", "SM", "DS", "SOURCE", "SB", "s", "IS", "STR", "Source", "Sample", "SF", "CSS", "SI", "GS", "SO", "G", "Si", "SE", "H", "SP", "NS", "ST", "SN", "SAM", "BS", "T", "RAW", "SQL"], "split_S": ["complete_SR", "split_SER", "complete_L", "cut_CS", " split_L", "split_SU", "split_BS", "split__S", "split_US", "split__L", "split__J", "spl_S", "split_L", "split__US", "batch_G", "spl_H", "split_SR", " split_US", "batch_SU", "case_US", "batch_S", "cut_G", "complete_E", "batch_BS", "split_DS", "split_H", "case_S", "split___S", "split_J", "cut_S", " split_J", "split___D", "cut_Y", "split___SER", "spl_SER", "split_Y", "case_L", "case_DS", "split_E", "split___H", "split_G", "split_D", "complete_S", "spl_D", "split_CS"], "i": [" k", "io", "us", "ski", "o", "parse", "iu", "n", "index", "php", "y", "ix", "l", "SI", "pi", "ii", "yi", "id", "fi", "ti", "bi", "phi", "ie", "hi", "ci", "t", "ei", "xi", "base", "ori", "client", "cli", "init", "Ni", "s", "ui", "j", "uri", "ik", "qi", "multi", "KI", "chain", "ini", "ni", "m", "ion", "iter", "length", "history", "Ti", "si", "ic", "sim", "oi", "inner", "M", "is", "k", "ind", "x", "mi", "err", "P", "mu", "gi", "json", "Key", "ji", "it", "p", "di", "to", "Mi", "slice", "zi", "I", "ami", "\u0438", "u", "ai", "me", "c", "iy", "im", "v", "kid", "info", "q", "wi", "ri", "ki", "batch", "ity", "ij", "ios", "li", "point", "ip"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    private static final String YES = \"Yes\";\\n    private static final String NO = \"No\";\\n\\n    public static void main(String[] args) {\\n        TestCase testCase = readFromInput();\\n\\n        final String result = process(testCase);\\n\\n        output(result);\\n    }\\n\\n    private static TestCase readFromInput() {\\n        Scanner sc = new Scanner(System.in);\\n\\n        int N = sc.nextInt();\\n        List<Integer> L = new ArrayList<>();\\n        for (int i = 0; i < N; ++i) {\\n            L.add(sc.nextInt());\\n        }\\n\\n        sc.close();\\n        return new TestCase(N, L);\\n    }\\n\\n    public static String process(TestCase testCase) {\\n        List<Integer> L = testCase.L;\\n\\n        int largest = 0;\\n        int sum = 0;\\n\\n        for (int side : L) {\\n            largest = Math.max(largest, side);\\n            sum += side;\\n        }\\n\\n        return (largest < (sum - largest)) ? YES : NO;\\n    }\\n\\n    private static void output(String result) {\\n        System.out.println(result);\\n    }\\n\\n    public static class TestCase {\\n        final int N;\\n        final List<Integer> L;\\n\\n        public TestCase(int N, List<Integer> L) {\\n            this.N = N;\\n            this.L = L;\\n        }\\n    }\\n}\\n", "target": "25", "substitutes": {"YES": ["RES", "CAN", "ULT", "OUT", "AN", "Yes", "Y", "SU", "TY", "NULL", "GREEN", "KNOWN", "US", "ONE", "USE", "MAL", "FAULT", "Success", "NR", "STDOUT", "NUM", "NRS", "PRES", "OK", " yes", "ANY", " Yes", "yes", "USER", "NEW", "THIS", "NA", "ESS", "NAME", "SO", "UL", "True", "ULL", "NOT", "Sure", "NOW"], "NO": ["None", "NN", "VO", "RO", "FREE", "OUT", "NOTE", "O", "LO", "KNOWN", "no", "Unknown", "MO", "DO", "ONE", "FAULT", "MAL", "NR", "NUM", "NL", "OK", "ANY", "OTHER", "GO", "NA", "SO", "ALSE", "ME", "NS", "BY", "NOR", "No", "KO", "NOT", "NE", "NOW", "ERO"], "testCase": ["TestCell", "TestInstance", " testcase", "caseInstance", "testBlock", "testingInstance", "testingBlock", "caseCase", "testingClass", "testingcase", " testInstance", "caseCell", "testClass", "trainCase", " testBlock", "traincase", "testCell", "testInstance", "trainClass", "trainInstance", "TestCase", "testcase", "testingCase", " testClass", "TestClass", "TestBlock", " testCell", "Testcase"], "result": ["root", "error", "report", "RES", "success", "def", "join", "status", "first", "RESULTS", "successfully", "re", "product", "complete", "match", "out", "data", "message", "response", "msg", "r", "err", "successful", "relation", "results", "output", "correct", "valid", "description", "summary", "string", "su", "res", "answer", "sample", "continue", "command", "ret", "reason", "Result", "row", "list", "comment", "draw", "test"], "sc": ["SC", "sw", "osc", "pc", "sys", "pb", "psc", "usc", "sv", "rc", "nc", "bc", "asc", "sac", "sync", "sh", "cam", "sch", "gc", "sq", "uc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "ser", "cl", "lc", " Sc", "arc", "ctl", "sr", "mc", "nl", "inc", "scl", "cr", "capt", "ch", "st", "ss", "sci", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["CN", "I", "NN", "NM", "R", "NC", "Count", "C", "ND", "A", "Num", "NT", "M", "D", "NAT", "NF", "S", "B", "Node", "MN", "F", "NG", "V", "n", "P", "NR", "NUM", "Ni", "NL", "CNN", "Number", "NB", "NP", "TN", "MAN", "NI", "GN", "NA", "K", "G", "J", "Size", "NH", "H", "NS", "Len", "X", "SN", "FN", "T", "Ns", "Sn", "KN", "NE", "NOW"], "L": ["E", "LR", "I", "LV", "DL", "PL", "FL", "R", "EL", "LI", "AL", "Lu", "C", "SL", "LD", "LIN", "BL", "TL", "LAN", "O", "Li", "M", "D", "VL", "GL", "S", "B", "RL", "F", "P", "V", "LL", "LIST", "LG", "LU", "W", "NL", "ML", "l", "LT", "XL", "LP", "G", "CL", "J", "H", "LS", "IL", "LM", "UL", "dL", "LC", "LE", "T", "ALL", "LB", "list", "LA", "LOC"], "i": ["I", "ie", "ci", "f", "si", "io", "ic", "sim", "u", "ai", "us", "me", "ind", "x", "ms", "mi", "n", "y", "im", "v", "init", "q", "ix", "ui", "gi", "info", "j", "l", "qi", "pi", "multi", "it", "my", "ii", "p", "ini", "di", "id", "li", "ti", "bi", "set", "m", "phi", "ip"], "largest": ["large", "MAX", "est", "length", "best", "centered", "huge", "great", "Maximum", "first", "LCS", "capacity", "latest", "majority", "max", "last", "primary", "union", "worst", " biggest", "single", "size", "successful", "full", "maximum", "las", "small", "multiple", "highest", "average", " greatest", "recent", "hest", "grand", "seen", "wide", "most", "gest", "mean", "total", "tall", "massive", "significant", "ule", "peak", "big", "EST"], "sum": ["mix", " SUM", "si", "sim", "ul", "latest", "SU", "scale", "match", "max", "count", "out", "union", "ful", " summed", "add", "size", "must", "n", "mess", "cum", "med", "tail", "cal", "min", "UM", "average", "summary", "sam", "hash", "Sum", "su", "mem", "sample", "can", "gest", "mean", "total", "most", "um", "alpha", "num", "see", "missing", "set", "mod", "ss", "test"], "side": ["length", "mate", "pair", "join", "section", "back", "der", "pe", "window", "style", "both", "me", "left", "sid", "part", "ice", "member", "tool", "half", "round", "bor", "tie", "size", " Side", "since", "sp", "center", "partial", "context", "just", "south", "reverse", "second", "sided", "small", "Side", "distance", "column", "store", "sample", "stroke", "edge", "day", "group", "le", "rel", "depth", "begin", "ide", "block", "slice", "handle"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint a = sc.nextInt();\\n\t\tint b = sc.nextInt();\\n\t\tSystem.out.println(a >= 13 ? b : 12 >= a && a >= 6 ? b/2: 0);\\n\t}\\n}", "target": "249", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "psc", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sh", "cam", "sch", "sq", "gc", "sub", "anc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "ko", "lc", "ctl", "desc", "ctrl", "mc", "nl", "inc", "acc", "scl", "cr", "ok", "ch", "system", "ck", "sel", "ss", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "a": ["aa", "f", "ax", "t", "aq", "al", "u", "ai", "A", "au", "i", "ab", "o", "x", "oa", "r", "ao", "ba", "c", "an", "n", "h", "v", "s", "m", "ea", "w", "j", "l", "ta", "ae", "aj", "aaa", "aff", "af", "\u00e1", "e", "p", "aka", "ca", "as", "sa", "z", "d", "ma", "g", "ac"], "b": ["mb", "bp", "nb", "f", "bb", "t", "u", "bc", "bis", "base", "i", "ab", "B", "r", "sb", "fb", "c", "ba", "n", "wb", "h", "eb", "ib", "v", "bs", "ob", "cb", "j", "rb", "xb", "e", "bd", "gb", "p", "db", "be", "bi", "z", "d", "m", "g"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        long n = sc.nextLong();\\n        long a = sc.nextLong();\\n        long b = sc.nextLong();\\n    \\n        long answer = n / (a + b) * a;\\n        answer += Math.min(a, n % (a + b));\\n    \\n        System.out.println(answer);\\n    }\\n\\n}", "target": "217", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "psc", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "comm", "sch", "gc", "sq", "disc", "ng", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "ko", "lc", "irc", "ctl", "ctrl", "desc", "mc", "nl", "scl", "cr", "ch", "system", "ck", "cgi", "conv", "sa", "dc", "cs", "tc", "Sc", "scan"], "n": ["nm", "nb", "f", "t", "ln", "nc", "mn", "i", "na", "o", "ng", "r", "c", "an", "nn", "fn", "h", "v", "en", "dn", "q", "N", "j", "l", "nu", "nl", "np", "cn", "p", "sn", "ns", "nt", "number", "num", "d", "m", "ne", "g"], "a": ["ar", "aa", "f", "era", "ax", "aq", "al", "t", "ai", "area", "ak", "A", "au", "i", "na", "ab", "o", "x", "oa", "pa", "r", "ao", "an", "ba", "am", "c", "ap", "v", "m", "ea", "ga", "ia", "j", "sta", "l", "ta", "aj", "ae", "aaa", "e", "apa", "p", "aka", "ca", "ata", "as", "la", "att", "alpha", "to", "sa", "z", "act", "ma", "ac"], "b": ["nb", "f", "t", "bb", "u", "bc", "bis", "bg", "i", "o", "ab", "B", "r", "fb", "c", "ba", "blue", "h", "eb", "ib", "by", "y", "v", "bs", "ob", "bo", "cb", "j", "l", "rb", "e", "br", "p", "db", "be", "erb", "bi", "z", "d", "m", "g"], "answer": ["answered", "exit", "remember", "sequence", "open", " Answer", "translation", "aq", "equ", "version", "reply", "offer", "swers", "response", "say", "ask", "vote", "notice", "rep", "approximately", "entry", "echo", "value", "q", "output", "ve", "consider", "term", "question", "asm", "efficiency", "description", "blank", "next", "Answer", "energy", "interpret", "search", "accept", "result", "option", "wer", "qv", "support", "number", "see", "poll", " unanswered", "query", "line", "message", "uration"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main{\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\\n\t\tint str1 = scan.nextInt();\\n\t\tint str2 = scan.nextInt();\\n\t\tSystem.out.println(str1 * str2 + \" \" + (str1 * 2 + str2 * 2));\\n\t}\\n}", "target": "92", "substitutes": {"scan": ["report", "sql", "sys", "black", " scanner", "san", "Scan", "sv", "re", "scale", "ann", "sync", "send", "reach", "gate", "out", "gc", "find", "sum", "save", "skip", "parse", "r", "sur", "check", "an", "n", "read", "nn", "ser", "scroll", "en", "ner", "clean", "gen", "sin", "store", "ch", "system", " Scan", "can", "run", "search", "seek", "cgi", "util", "proc", "conv", "row", "in", "set", "query", "sc", "get", "se"], "str1": ["Str0", "StrOnce", "seqaj", " strOnce", "straj", "intOne", "strOne", "stable1", "int1", "int01", " strOne", "seq01", " str01", "StrOne", "seqOne", "seq1", "strOnce", "seq0", "stable0", "str0", "str01", "Str1", "Straj", "Str2", "STR0", " str0", "stableOnce", "STRaj", "STROne", "int0", "stable2", "STR1"], "str2": ["string02", "stringtwo", "Str0", " str02", "stringTwo", "intSecond", "strTwo", " strtwo", "int1", "dr02", "STR02", "strSecond", "STR42", "txt2", "drTwo", " str42", " strTwo", "int02", "str0", "str42", "dr2", "strtwo", "Str1", "StrSecond", "STR2", "Str2", "txt0", "int2", "txt1", "string2", "int42", "drtwo", "int0", "txtSecond", "str02", "STR1"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        // Your code here!\\n        \\n        Scanner in = new Scanner(System.in);\\n        int square = in.nextInt();\\n        int[] height = new int[square];\\n                \\n        int tmpmove = 0;\\n        int maxmove = 0;\\n        for (int i = 0;i < square;i++) {\\n            height[i] = in.nextInt();\\n            \\n            if (i == 0){\\n                continue;\\n            } \\n            //System.out.println(height[i] + \" \" + tmpmove);\\n            if (height[i-1] >= height[i]){\\n                tmpmove++;\\n                if (maxmove < tmpmove){\\n                    maxmove = tmpmove;\\n                }\\n            }else{\\n               tmpmove = 0;\\n            }\\n           \\n        }\\n\\n        System.out.println(maxmove);\\n\\n    }\\n}\\n", "target": "187", "substitutes": {}}
{"code": "import java.util.*; \\nclass Main \\n{\\npublic static void main(String args[]) \\n{\\nScanner sc = new Scanner(System.in); \\nint n = sc.nextInt(); \\nint value = 1000;\\n\\n\\nwhile(value<n)\\n{\\nvalue=value+1000;\\n}  \\n\\nSystem.out.print(value-n);\\n} \\n}", "target": "184", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "usc", "Scan", "sv", "nc", "bc", "asc", "sync", "sac", "sh", "sch", "sq", "out", "gc", "cv", "anc", "sec", "sp", "c", "cc", "ser", "esc", "isc", "spec", "cl", "lc", "desc", "mc", "acc", "scl", "cr", "ch", "system", "ss", "conv", "sa", "cs", "tc", "Sc", "scan"], "n": ["nm", "nb", "network", "t", "inn", "ln", "nc", "mn", "k", "count", "i", "nan", "na", "o", "ng", "size", "len", "c", "nn", "tn", "v", "en", "s", "dn", "q", "w", "N", "j", "l", "nu", "np", "nl", "norm", "p", "sn", "ns", "nt", "nw", "number", "num", "z", "d", "m", "ne", "g"], "value": ["format", "sequence", "length", "hello", "level", "values", "counter", "position", "range", "window", "widget", "capacity", "raw", "version", "scale", "integer", "max", "count", "now", "initial", "test", "data", "save", "type", "message", "unit", "code", "maximum", "entry", "key", "index", "label", "name", "v", "function", "q", "state", "remote", "output", "local", "json", "variable", "update", "place", "limit", "power", "serial", "ue", "unknown", "current", "start", "VALUE", "property", "sample", "print", "Value", "total", "result", "field", "number", "trace", "set", "val", "address", "default", "get"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        int A = sc.nextInt();\\n        int B = sc.nextInt();\\n        int[] num = new int[5]; \\n        int sum = 0;\\n        int ans = 0;\\n\\n        for(int i = 1; i <= N; i++){\\n            //\u6570\u5b57i\u306e\u5404\u6841\u306e\u548c\u3092\u7b97\u51fa\\n            int tmp = i;\\n            for(int j = 0; j < 5; j++){\\n                num[j] = tmp % 10;\\n                tmp /= 10;\\n            }\\n            sum = num[0] + num[1] + num[2] + num[3] + num[4];\\n            \\n          \t//\u6570\u5b57i\u306e\u5404\u6841\u306e\u548c\u304cA\u4ee5\u4e0aB\u4ee5\u4e0b\u306a\u3089\u3070\u52a0\u7b97\\n            if(sum >= A && sum <= B) ans += i;\\n        }\\n        System.out.println(ans);\\n    }\\n}\\n", "target": "212", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "ko", "lc", "ctl", "desc", "dec", "ctrl", "mc", "inc", "acc", "scl", "cr", "sel", "ch", "system", "ck", "ss", "conv", "sa", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["E", "I", "NN", "R", "NC", "C", "L", "Q", "Z", "Num", "NT", "O", "M", "D", "S", "F", "P", "V", "n", "NR", "Ni", "NB", "NI", "NA", "K", "G", "J", "H", "NS", "X", "SN", "T", "Ns"], "A": ["I", "C", "AN", "L", "Area", "AI", "Array", "M", "Ar", "D", "AA", "AP", "S", "P", "At", "V", "AB", "AC", "AM", " a", "a", "G", "AR", "An", "As", "Address"], "B": ["E", "I", "R", "C", "L", "Y", "Z", "O", "M", "D", "S", "Bi", "BI", "BB", "P", "V", "DB", "NB", "AB", " b", "BA", "G", "J", "b", "BC", "T", "Bs"], "num": ["ver", "mon", "nb", "dim", "bin", "Num", "node", "no", "nom", "dev", "index", "name", "NUM", "cal", "info", "con", "mem", "np", "total", "um", "id", "conv", "number", "row", "set", "block", "test"], "sum": ["cap", "usr", "si", "ums", "sim", "us", "SU", "add", "size", "score", "sp", "up", "cum", "cal", "set", "cat", "summary", "Sum", "su", "acc", "mean", "total", "um", "alpha", "sa", "un", "sym"], "ans": ["nos", "span", "AN", "ats", "ums", "types", "ai", "ann", "ies", "nan", "ants", "names", "uns", "ms", "an", "os", "amps", "ons", "ens", "ots", "ars", "ns", "ls", "ds", "vals", "ents", "un", "ss", "scan"], "i": ["zi", "I", "hi", "ci", "sql", "si", "sim", "u", "us", "xi", "me", "ai", "is", "ind", "x", "o", "mi", "n", "cli", "mu", "gi", "y", "im", "ix", "ui", "ki", "j", "batch", "a", "qi", "pi", "multi", "it", "ii", "gu", "ini", "di", "ni", "id", "li", "in", "bi", "m", "iu", "phi", "ip"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.StringTokenizer;\\nimport java.io.IOException;\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.util.TreeSet;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n *\\n * @author Tarek\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader in = new InputReader(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        CGacha solver = new CGacha();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class CGacha {\\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\\n            int n = in.nextInt();\\n            TreeSet<String> h = new TreeSet<>();\\n            while (n-- > 0) {\\n                h.add(in.next());\\n            }\\n            out.println(h.size());\\n        }\\n\\n    }\\n\\n    static class InputReader {\\n        public BufferedReader reader;\\n        public StringTokenizer tokenizer;\\n\\n        public InputReader(InputStream stream) {\\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\\n            tokenizer = null;\\n        }\\n\\n        public String next() {\\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n                try {\\n                    tokenizer = new StringTokenizer(reader.readLine());\\n                } catch (IOException e) {\\n                    throw new RuntimeException(e);\\n                }\\n            }\\n            return tokenizer.nextToken();\\n        }\\n\\n        public int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n    }\\n}\\n\\n", "target": "98", "substitutes": {"inputStream": ["contextStreamer", " inputSteam", "inputStreamer", "inputFile", "sourceSteam", "outputSocket", "outputstream", " inputSocket", "contextSteam", "sourceSocket", "inputSocket", "outputSteam", " inputstream", "contextstream", "contextStream", " inputStreamer", "sourceStream", "inputstream", "sourceFile", "outputFile", "inputSteam", "outputStreamer", " inputFile"], "outputStream": ["printStreamer", "outputWriter", "resultWriter", "inputStreamer", "connectionStream", "sourceSteam", "printSteam", "sourcePort", "outputPort", "sourceWriter", "printWriter", "connectionSteam", "resultStreamer", "resultStream", "outputSteam", " outputSteam", "connectionPort", " outputWriter", " outputPort", "printStream", "sourceStream", "resultSteam", "inputWriter", "connectionWriter", "inputSteam", "outputStreamer"], "in": ["or", "iter", "inside", "din", "io", "IN", "ic", "inner", "inn", "from", "mm", "bin", "ai", "net", "er", "is", "ind", "i", "ins", "add", "config", "r", "on", "rin", "err", "up", "mi", "c", "context", "source", "by", "init", "en", "con", "per", "local", "w", " din", "doc", "gin", "l", "cin", "current", "In", "sin", "inc", "it", "input", "form", "run", "file", "ini", "win", "null", "inf", "vin", "log", "el", "get"], "out": ["or", "writer", "report", "sys", "OUT", "io", "t", "at", "flush", "window", "inner", "all", "net", "write", "last", "o", "outs", "client", "tmp", "gr", "r", "timeout", "err", "up", "name", "os", "v", "OU", "server", "s", "aos", "output", "w", "Out", "this", "l", "outer", "table", "co", "current", "screen", "res", "it", "print", "pool", "p", "b", "ex", "null", "nt", "user", "to", " Out", "end", "ou", "log", "list"], "solver": ["esolver", "esolution", "Solution", "getsolved", "resolver", "getsorter", "resorter", "getsolver", "solved", "getsolution", "solving", "ssolve", "esorter", "unsolution", "ssolver", "ssolution", "Solving", "resolved", "Solve", "unsolve", "esolved", "unsolving", "ssolving", "solve", "unsolver", "resolution", "sorter", "Solver", "solution"], "testNumber": ["testnr", "testNumbers", " iterationNumber", " testnr", "testNo", " proofNumbers", " testNumbers", " iterationnr", " proofNo", " iterationNumbers", " proofnr", " testNo", " proofNumber", " iterationNo"], "n": ["nb", "f", "t", "ren", "nc", "ll", "mn", "nan", "k", "i", "count", "na", "d", "len", "c", "nn", "nor", "name", "s", "w", "N", "non", "j", "l", "nu", "nl", "cn", "p", "sn", "ns", "nt", "nw", "number", "num", "nr", "un", "z", "ln", "m", "ne", "g"], "h": ["eh", "history", "hs", "hh", "hex", "t", "bh", "kh", "hw", "sh", "o", "host", "v", "ah", "ht", "rh", "j", "hl", "hash", "dh", "he", "oh", "hp", "ih", "H", "hd", "p", "ch", "hal", "dict", "hm", "uh", "hr", "hz", "ho", "m", "zh"], "reader": ["writer", "iter", "builder", "window", "iterator", "re", "inner", "ro", "er", "dr", "linger", "buffer", "client", "r", "rr", "context", " read", "read", "resource", "timer", " writer", "wrapper", "parser", "ner", "rer", "mr", "rx", "rar", "finder", "keeper", "input", "handler", "driver", "worker", "file", "Reader", "older", "runner", "user", "row", "fr", "loader"], "tokenizer": ["Tokenizer", "zeroizer", "serialifier", "wordifier", "serialzer", "Tokenize", "tokenize", "zeroizable", " tokenifier", " tokenizers", "serializer", "Tokenizable", "okenzer", "okenator", "wordizer", "tokenifier", " tokenzer", "okenifier", " tokenener", "tokenizers", "zeroener", "tokenizable", " tokenator", "zeroator", "Tokenzer", "wordener", "wordize", "serialator", " tokenize", "okenizer", "Tokenifier", "serialer", "okenener", "tokenator", "Tokenator", "Tokenener", "tokener", "okenizers", "okenize", "serialener", " tokener", " tokenizable", "Tokenizers", "tokenener", "tokenzer", "Tokener"], "stream": ["sw", "length", "path", "history", "open", "Stream", "socket", "io", "view", "window", "iterator", "inner", "console", "phrase", "data", "parent", "buffer", "cont", "body", "progress", "context", "source", "wrapper", "loader", "peer", "present", "store", "sample", "input", "pool", "form", "pipe", "file", "stack", "null", "event", "row", "log", "channel", "message"]}}
{"code": "\\nimport java.util.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tMain main = new Main();\\n\t\tmain.run();\\n\t}\\n\\n\tpublic void run() {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tint k = sc.nextInt();\\n\t\tk--;\\n\t\tStringBuilder sb = new StringBuilder(sc.next());\\n\t\tchar c = sb.charAt(k);\\n\t\tif(c=='A') sb.setCharAt(k, 'a');\\n\t\tif(c=='B') sb.setCharAt(k, 'b');\\n\t\tif(c=='C') sb.setCharAt(k, 'c');\\n\t\tSystem.out.println(sb.toString());\\n\t\tsc.close();\\n\t}\\n\\n}\\n", "target": "71", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "syn", "pb", "ct", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "exp", "sh", "exec", "sch", "sq", "gc", "sub", "scrib", "anc", "fc", "sec", "sp", "cont", "cc", "soc", "isc", "esc", "cl", "lc", "irc", " Sc", "ctl", "desc", "mc", "scl", "cr", "ch", "ck", "st", "cgi", "ca", "so", "sci", "sa", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "mn", "na", "ng", "on", "an", "nn", "fn", "name", "v", "en", "N", "j", "nl", "np", "cn", "sn", "ns", "nt", "nw", "num", "ln", "m", "ne", "rn"], "k": ["kn", "f", "wk", "t", "th", "kan", "ka", "ak", "kh", "dk", "kk", "max", "kj", "unk", "i", "x", "o", "ek", "sk", "ask", "ks", "ke", "h", "key", "ijk", "kick", "kid", "v", "y", "kind", "q", "ko", "w", "j", "kw", "l", "kok", "ik", "ikk", "tek", "ku", "kl", "K", "them", "yk", "uk", "it", "ok", "p", "ck", "kr", "b", "aka", "mk", "id", "num", "z", "d", "m", "km", "g", "tk"], "sb": ["mb", "bp", "sg", "sth", "nb", "pb", "si", "bash", "bb", "sl", "sf", "sv", "bc", "bh", "sh", "bis", "ssh", "bg", "sq", "ub", "bf", "gc", "ha", "sp", "rob", "fb", "wb", "eb", "zb", "lb", "ib", "kb", "SB", "bs", "s", "ob", "bsp", "shell", "web", "cb", "bt", "lab", "sam", "dl", "sbm", "rb", "buff", "su", "xb", "gb", "bd", "sn", "b", "sa", "ssl", "gob", "erb", "stab", "sit", "orb", "lp"], "c": ["cmp", "ci", "pc", "C", "cu", "ct", "t", "com", "rc", "bc", "gc", "cod", "fc", "unc", "cd", "col", "cont", "err", "ce", "cc", "cur", "cl", "con", "lc", "cb", "arc", "dec", "co", "cr", "chain", "b", "cm", "ca", "cf", "vc", "dc", "cp", "cs", "ec", "d", "tc", "ac"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\t// practice contest\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint a = sc.nextInt();\\n\t\tint b = sc.nextInt();\\n\\n\t\tint answer = 0;\\n\\n\t\tif ((a >= 1 && a <= 9) && (b >= 1 && b <= 9)) {\\n\t\t\tanswer = a * b;\\n\t\t\tSystem.out.println(answer);\\n\t\t} else {\\n\t\t\tSystem.out.println(-1);\\n\t\t}\\n\t}\\n}\\n", "target": "58", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main (String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint k = scan.nextInt(), s = scan.nextInt();\\n\t\tint result=0;\\n\t\tfor(int x=0; x<=k; x++) {\\n\t\t\tfor(int y=0; y<=k; y++) {\\n\t\t\t\tint z = s-(x+y);\\n\t\t\t\tif(z<=k && 0<=z)result++;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(result);\\n\t}\\n\\n}", "target": "29", "substitutes": {"scan": ["sm", "report", "sort", "connect", "auto", "sql", "sys", "black", "san", "range", "Scan", "sv", "se", "ann", "sync", "send", "reach", "out", "gate", "gc", "find", "na", "skip", "sum", "parse", "r", "sk", "sur", "check", "an", "n", "nn", "read", "v", "scroll", "info", "set", "query", "ner", "sr", "store", "ch", "can", "system", "run", "search", "spin", "seek", "nav", "util", "proc", "row", "in", "m", "sc", "g"], "k": ["kn", "f", "kh", "ka", "ak", "dk", "kk", "i", "ek", "sk", "ks", "n", "c", "ke", "kar", "kid", "v", "q", "ko", "ki", "j", "kw", "kok", "ik", "ikk", "ku", "kl", "K", "ok", "ck", "p", "kr", "mk", "kj", "m", "km", "sc", "g", "tk"], "s": ["sc", "sys", "si", "t", "sd", "is", "i", "S", "ps", "r", "sp", "g", "c", "n", "h", "south", "v", "os", "j", "l", "a", "sin", "gs", "p", "b", "sa", "d", "m", "ss", "sb", "ts"], "result": ["division", "report", "sequence", "length", "success", "def", "status", "counter", "date", "folder", "direction", "product", "integer", "match", "operation", "count", "sum", "debug", "message", "score", "r", "successful", "progress", "duration", "currency", "value", "goal", "expression", "results", "output", "json", "term", "power", "true", "valid", "table", "process", "su", "mark", "answer", "res", "diff", "feature", "created", "system", "vector", "search", "command", "total", "ret", "Result", "number", "trace", "comb", "point", "draw", "test"], "x": ["fx", "px", "xp", "xml", "ick", "xd", "ct", "ax", "at", "xx", "xt", " xx", "xi", "exp", "xf", "xa", "dx", "ox", "i", "n", "zx", "xc", "im", "ix", "yx", "m", "w", "ace", "j", "batch", "el", "wx", "rx", "lat", "mx", "ect", "xy", "Ex", "axy", "ross", "inx", "ex", "tx", "X", "act", "xxx", "ux", "xs", "Ax"], "y": ["ye", "cy", "yl", "vy", "py", "sys", "xx", "Y", "ies", "oy", "year", "i", "gy", "sy", "uy", "ym", "ys", "ery", "iy", "by", "yt", "ty", "ry", "zy", "yr", "j", "ey", "sky", "asy", "ly", "ya", "my", "ot", "xy", "ny", "axy", "b", "yi", "yy", "ay"], "z": ["zi", "sc", "zero", "nz", "zone", "zo", "window", "uz", "obj", "Z", "sh", "tz", "i", "size", "iz", "ez", "zz", "oz", "v", "zy", "info", "q", "ix", "yz", "set", "j", "l", "zer", "xy", "zip", "ze", "cz", "ld", "d", "hz", "az", "zh"]}}
{"code": "import java.io.BufferedInputStream;\\nimport java.io.BufferedOutputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws Exception {\\n        try (BufferedInputStream in = new BufferedInputStream(System.in);\\n             PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out))) {\\n\\n            Scanner sc = new Scanner(in);\\n\\n            // 10:16-\\n\\n            int n = sc.nextInt();\\n            int d = sc.nextInt();\\n            int[][] vs = new int[n][d];\\n\\n            for (int i = 0; i < n; i++) {\\n                for (int j = 0; j < d; j++) {\\n                    vs[i][j] = sc.nextInt();\\n                }\\n            }\\n\\n            int pairs = 0;\\n            for (int i = 0; i < n; i++) {\\n                for (int j = i + 1; j < n; j++) {\\n                    if (iseven(dist(vs[i], vs[j]))) {\\n                        pairs++;\\n                    }\\n                }\\n            }\\n\\n            out.println(pairs);\\n        }\\n    }\\n\\n    private static boolean iseven(double val) {\\n        return val - (int) val == 0;\\n    }\\n\\n    private static double dist(int[] a, int[] b) {\\n        double sum = 0.0;\\n        for (int i = 0; i < a.length; i++) {\\n            int t = a[i] - b[i];\\n            sum += t * t;\\n        }\\n        return Math.sqrt(sum);\\n    }\\n}\\n", "target": "59", "substitutes": {"sc": [" SC", "sw", " sp", "pc", "syn", "sys", "si", "rc", "sv", "nc", "bc", "gc", "sq", "uc", "sp", "c", "cl", "lc", " Sc", "cr", "ch", "dc", "sa", "cs", "ec", "tc", "Sc", "scan"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Collections;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String []args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tList<Integer> arrays = new ArrayList<Integer>();\\n\t\tfor(int i=0; i<10; i++) {\\n             int a = sc.nextInt();\\n             arrays.add(a);\\n\t\t}\\n\\n\t\tCollections.sort(arrays);\\n\\n\t\tfor(int j = arrays.size(); j >arrays.size()-3; j--) {\\n\t\t\tSystem.out.println(arrays.get(j - 1));\\n\t\t}\\n\t}\\n\\n}", "target": "164", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "sync", "sch", "gc", "sq", "uc", "anc", "sec", "sp", "c", "cc", "esc", "isc", "ser", "src", "cl", "lc", "desc", "mc", "enc", "nl", "acc", "scl", "cr", "sel", "ch", "system", "ss", "sci", "conv", "dc", "cle", "cs", "asc", "Sc"], "arrays": ["grows", "arrayaps", "araps", "arays", "arranes", "aggables", "arsays", "arables", "arrayays", "arruments", "grrays", "arrayams", "plrices", "araces", "collrices", "arsaps", "collables", "arraps", "collaves", " arraves", "strays", "arrices", "arances", "aggances", "instables", "aruments", "allaces", "arrows", "allables", "collanges", "straves", "grances", "allrays", "instays", "grays", "arrams", "arrables", "aranes", "plays", "collanes", "grables", "arrrays", "arrances", "arrayrays", "allays", "araves", "plrays", "graces", "arranges", "aggays", "arows", "struments", "instanes", "aggows", " arruments", "arrrices", "strrays", "arsams", " arrrays", "arams", "plaves", "instanges", "aranges", "arraces", "arraves", "collrays", "collays", "arsrays"], "i": ["zi", "iq", "I", "hi", "ci", "ie", "si", "t", "ic", "u", "sim", "ai", "us", "me", "is", "ind", "x", "mi", "n", "cli", "mu", "y", "im", "v", "init", "q", "ix", "ui", "info", "ki", "qi", "pi", "multi", "my", "it", "ii", "b", "ex", "ini", "di", "id", "li", "ti", "m", "iu", "phi", "ip"], "a": [" ba", "pai", "aa", "f", "anta", "t", "area", "va", "A", "ka", "fa", "ava", "sha", "x", "pa", "oa", "za", " p", "c", "ba", "n", "m", "ea", " da", "ga", "ia", "l", "sta", "isa", "ta", "aaa", "ya", "p", "b", "aka", "ca", "alpha", "la", "sa", "z", "ma", "address", "ana", "ac"], "j": ["jac", "f", "bj", "ct", "jl", "js", "obj", "k", "oj", "job", "o", "z", "uj", "n", "h", "org", "key", "jc", "y", "v", "kid", "q", "dj", "json", "l", " n", "pr", "aj", "jp", "jo", "jump", "ji", "J", "ij", "it", "jit", "jack", "old", "b", "jj", "other", "jet", " J", "kj", "m", "gov", "jas", "g", "ja"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\t\t\\n\t\tScanner scan = new Scanner(System.in);\\n\t\t// ?????\u00b0??????????????\u00b0???\\n\t\tint n = scan.nextInt();\\n\t\t// ???????????????????\u00b4????????????\u00b0\\n\t\tint taro = 0;\\n\t\tint hanako = 0;\\n\t\t// ?????????????????????????????\u00a7??\u00b0?????????\\n\t\tfor(int i = 0; i<n; i++) {\\n\t\t\t// ??????????????????\\n\t\t\tString taroCard = scan.next();\\n\t\t\tString hanakoCard = scan.next();\\n\t\t\t// ?????????????????????????????????\\n\t\t\tint tl = taroCard.length();\\n\t\t\tint hl = hanakoCard.length();\\n\t\t\tint l = 0;\\n\t\t\tif(tl < hl) l = tl;\\n\t\t\telse l = hl;\\n\t\t\t// ??????????????????1????????\\???char??????????\u00b4?\\n\t\t\tchar[] tcC = taroCard.toCharArray();\\n\t\t\tchar[] hcC = hanakoCard.toCharArray();\\n\t\t\t// 1????????\\????????????\\n\t\t\t\tint count = 0;\\n\t\t\t\tfor(int i2 = 0; i2 < l; i2++){\\n\t\t\t\t\tif (tcC[i2] > hcC[i2]) {\\n\t\t\t\t\t\ttaro = taro + 3;\\n\t\t\t\t\t\tcount = 1;\\n\t\t\t\t\t\tbreak;\\n\t\t\t\t\t}\\n\t\t\t\t\telse if (tcC[i2] < hcC[i2]) {\\n\t\t\t\t\t\thanako = hanako + 3;\\n\t\t\t\t\t\tcount = 1;\\n\t\t\t\t\t\tbreak;\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t\tif(count == 0) {\\n\t\t\t\t\tif (tl > hl) taro = taro +3;\\n\t\t\t\t\telse if (tl < hl) hanako = hanako +3;\\n\t\t\t\t\telse{\\n\t\t\t\t\t\ttaro = taro + 1;\\n\t\t\t\t\t\thanako = hanako +1;\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t}\\n\t\t// ??????\\n\t\tSystem.out.println(taro + \" \" + hanako);\\n\\n\t}\\n\\n}", "target": "206", "substitutes": {}}
{"code": "import java.util.ArrayList;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        long n = sc.nextLong();\\n        long num = 0;\\n        int count=0;\\n        while (num<n){\\n            count++;\\n            num+=(long)Math.pow(26,count);\\n        }\\n        long instance = n-num+(long)Math.pow(26,count)-1;\\n        ArrayList<Character> array = new ArrayList<>();\\n        for (int i=0;i<count;i++){\\n            int mod = (int) (instance%26);\\n            array.add((char)mod);\\n            instance /= 26;\\n        }\\n        String s = \"\";\\n        for (int i=0;i<array.size();i++){\\n            s = (char) (array.get(i) + 'a') +s;\\n        }\\n        System.out.println(s);\\n    }\\n}\\n", "target": "191", "substitutes": {"sc": ["SC", "sw", "osc", "sys", "se", "sv", "rc", "nc", "bc", "Scan", "sync", "Sync", "sac", "sh", "sch", "sq", "out", "gc", "ng", "sec", "sp", "cc", "c", "ser", "isc", "esc", "src", "cl", "ner", "Sc", " Sc", "desc", "mc", "scl", "cr", "ch", "system", "cs", "ec", "asc", "ss", "sb", "scan"], "n": ["nm", "nb", "t", "ln", "nc", "net", "k", "na", "o", "ng", "r", "len", "c", "nn", "fn", "h", "en", "w", "N", "j", "l", "a", "nu", "np", "cn", "norm", "p", "sn", "ns", "total", "nt", "nw", "number", "z", "d", "m", "ne"], "num": ["nm", "zero", "mon", "nb", "al", "th", "obj", "gener", "net", "Num", "coord", "node", "max", "mn", "sum", "na", "no", "x", "msg", "up", "check", "nam", " numer", "mu", "index", "name", "NUM", "init", "en", "con", "orig", "valid", "local", "non", "nu", "np", "old", "total", "result", "nt", "um", "id", "number", "nr", "umber", "common", "nom", "temp", "m", "test"], "count": ["found", "length", "counter", "Count", "nb", "const", "ct", "ctx", "th", "all", "hold", "max", "children", "now", "ind", "sum", "find", "ctr", "loop", "cond", "size", "must", "score", "cycle", "cont", "check", "c", "cc", "code", "nn", "ount", "index", "name", "conf", "con", "consider", "each", "process", "co", "current", "start", "amount", "acc", "continue", "coll", "child", "mount", "total", "result", "nt", "number", "cache", "list", "common", "core", "test", "cast", "call"], "instance": ["division", "cmp", "zero", "ami", "counter", "iso", "si", "INST", "capacity", "amp", "scale", "integer", "share", "ka", "part", "max", "node", "sup", "k", "now", "inst", "unk", "x", "type", "size", "once", "usage", "rank", "stage", "index", "upload", "conf", "iat", "second", "power", "example", "cpu", "step", "ances", "sample", "performance", "offset", "component", "result", "Instance", "ance", "id", "val", "shared", "test"], "array": ["error", "sort", "archive", "aw", "RAY", "record", "ar", "attribute", "auto", "ray", "storage", "range", "angular", "window", "collection", "area", "integer", "all", "Array", "equality", "sh", "ash", "now", "save", "buffer", "tmp", " Array", "var", "order", "arr", "object", "index", "echo", "function", "random", "batch", "a", "memory", "table", "av", "amount", "system", "search", "audio", "element", "angle", "number", "atomic", "row", "trace", "list", "library", "gallery"], "i": ["iq", "iti", "ie", "hi", "ci", "I", "ami", "f", "\u0438", "io", "si", "ic", "sim", "u", "oi", "ai", "me", "ei", "xi", "us", "ogi", "ind", "point", "ori", "o", "mi", "err", "progress", "cli", "iy", "y", "im", "v", "gi", "q", "iii", "ui", "info", "ix", "this", "load", "j", "uri", "ki", "ity", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "print", "chain", "gu", "ini", "di", "yi", "id", "li", "ti", "bi", "z", "m", "iu", "phi", "g", "ip"], "mod": ["MOD", "dig", "mix", "mon", " Mod", "mode", "div", "lex", "floor", "max", "sub", "add", "ms", "cond", "module", "ade", "mac", "min", "mods", "term", "perm", "Mod", "deg", "step", "ident", "oct", "cm", "component", "major", "id", "pad", "temp", "ld", "mun", "m", "modified", "od"], "s": ["hat", "its", "sw", "es", "qs", "sg", "hs", "f", "t", "ats", "js", "gets", "us", "sv", "csv", "is", "out", "ins", "o", "x", "S", "ps", "prints", "ms", "r", "sp", "less", "c", "h", "os", "y", "v", "tes", "des", "w", "output", "ws", "a", "gs", "e", "p", "b", "ns", "rs", "ls", "ds", "xs", "conv", "str", "ims", "m", "ss", "g", "ts"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tint n=sc.nextInt();\\n\t\t\\n\t\tint a;\\n\t\tint max=sc.nextInt();\\n\t\tint min=max;\\n\t\tlong g=max;\\n\t\t\\n\t\tfor (int i=1;i<n;i++){\\n\t\t\ta=sc.nextInt();\\n\t\t\tg=g+a;\\n\t\t\tif(max<a) max=a;\\n\t\t\tif(min>a) min=a;\\n\t\t}\\n\t\tSystem.out.println(min+\" \"+max+\" \"+g);\\n\t}\\n\\n}", "target": "21", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sch", "sq", "ng", "anc", "fc", "sec", "sp", "cont", "c", "cc", "esc", "isc", "cl", "ko", "pl", "lc", " Sc", "ctl", "desc", "ctrl", "co", "mc", "nl", "inc", "scl", "cr", "ch", "ck", "cgi", "ss", "sci", "dc", "cle", "cs", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "network", "nc", "net", "mn", "nan", "na", "x", "no", "ng", "c", "nn", "gn", "en", "N", "j", "l", "nu", " N", "nl", "np", "cn", "norm", "sn", "ns", "nd", "nt", "nw", "ni", "num", "un", "ln", "m", "ne"], "a": ["go", "span", "ar", "aa", "f", "era", "at", "t", "u", "div", "ai", "area", "wa", "va", "A", "ka", "er", "eu", "ha", "au", "sha", "o", "pa", "x", "oa", "ao", "act", "ba", "an", "am", "c", "ce", "ap", "y", "s", "m", "ea", "ga", "eas", "ia", "sta", "l", "ta", "ae", "aj", "aaa", "acc", "e", "apa", "qa", "b", "ca", "element", "ata", "as", "la", "to", "alpha", "sa", "z", "d", "ma", "val", "ac"], "max": ["MAX", "length", "upper", "best", "huge", "show", "ax", "range", "t", "view", "window", "scale", "exp", "Max", "right", "k", "last", "ma", "out", "sum", "x", "na", "ms", "inv", "size", "r", "c", "full", "maximum", "h", "med", "prime", "v", "master", "w", "grow", "mod", "rest", "co", "start", "rand", "np", "recent", "res", "mx", "grand", "p", "can", "gt", "total", "tx", "mad", "to", "end", "z", "act", "m", "fr"], "min": ["sort", "lim", "clip", "aug", "span", "first", "mit", "range", "sim", "left", "part", "sol", "mn", "ind", "sub", "sum", "r", "amin", "mi", "Min", "partial", "mid", "just", "index", "south", "MIN", "low", "small", "lower", "master", "local", "pl", "j", "l", "sam", "mr", "mel", "mod", "start", "rand", "sin", "lt", "my", "p", "minimum", "st", "b", "le", "pre", "mins", "mean", "id", "rel", "minute", "temp", "un", "begin", "in", "d", "m", "val"], "g": ["sg", "tg", "f", "t", "u", "ger", "ig", "gp", "bg", "gc", "gz", "msg", "gr", "mg", "gre", "gain", "c", "ge", "h", "gi", "gn", "gg", "v", "m", "q", "gm", "s", "pg", "ga", "j", "l", "game", "gray", "fg", "gen", "G", "gs", "gb", "p", "cfg", "gt", "b", "gu", "gd", "gas", "gam", "z", "ma", "gl"], "i": ["zi", "I", "ie", "ci", "hi", "si", "ic", "sim", "ai", "us", "me", " j", "is", "ind", "loop", "x", "o", "ms", "mi", "index", "init", "y", "gi", "q", "ix", "ui", "j", "batch", "qi", "pi", "multi", "it", "print", "ii", "di", "ini", "id", "li", " ii", "ti", "bi", "z", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\npublic class Main{\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint maxday = sc.nextInt();\\n\t\tint task = sc.nextInt();\\n\t\tint days = 0;\\n\t\tfor(int i = 0; i < task; i++){\\n\t\t\tdays += sc.nextInt();\\n\t\t}\\n\t\tmaxday -= days;\\n\t\tif(maxday < 0){\\n\t\t\tmaxday = -1;\\n\t\t}\\n\t\tSystem.out.println(maxday);\\n\t\t\\n\t}\\n}", "target": "108", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "comm", "sch", "gc", "sq", "sub", "anc", "fc", "sp", "c", "cc", "esc", "isc", "cl", "pl", "lc", "dec", "ctl", "desc", "ctrl", "screen", "mc", "inc", "scl", "cr", "sel", "ch", "system", "ck", "tch", "comp", "ss", "conv", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "maxday": ["Maxdate", "MAXDay", " maxDay", "axDAY", "axday", "MAXdate", "MAXmin", "maxweek", " maxweek", "Maxdays", "maxdate", "Maxmin", "MAXweek", " maxmin", "maxDAY", " maxDAY", "axdays", "MaxDAY", "Maxweek", "axDay", "axweek", " maxdays", "maxDay", "MaxDay", "maxdays", "maxmin", "Maxday", "MAXday", " maxdate", "axdate"], "task": ["level", "section", "purpose", "t", "network", "project", "unt", "net", "node", "last", "job", "type", "Task", "ask", "unit", "course", "app", "needed", "asks", "unique", "table", "process", "thread", "piece", "session", "run", "worker", "total", "day", "component", "target", "proc", "user", "result", "event", "problem", "work", "block"], "days": ["views", "opens", "workers", "runs", "values", "weights", "checks", "events", "lines", "stores", "yrs", "sections", "daily", "shows", "rows", "products", "cases", "changes", "hours", "marks", "loads", "months", "members", "games", "today", "storms", "results", "plays", "Days", "posts", "blocks", "asks", "downs", "fields", "years", "day", "planes", "mins", "dates", "ds", "pages", "steps", "assets", "works", "cycles", "windows", "items", "units", "ays"], "i": ["I", "hi", "ci", "ie", "io", "si", "ic", "sim", "t", "ai", "me", "us", "is", "ind", "ms", "client", "mi", "err", "cli", "index", "by", "gi", "im", "y", "init", "q", "ix", "ui", "j", "batch", "uri", "qi", "pi", "multi", "it", "my", "ii", "gu", "ini", "di", "li", "ti", "bi", "m", "phi", "g", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        String s = sc.next();\\n        if (s.equals(\"Sunny\"))System.out.println(\"Cloudy\");\\n        else if (s.equals(\"Cloudy\"))System.out.println(\"Rainy\");\\n        else System.out.println(\"Sunny\");\\n    }\\n}\\n", "target": "60", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "sv", "nc", "bc", "asc", "sac", "sync", "sch", "sq", "sub", "anc", "sec", "sp", "c", "cc", "esc", "isc", "soc", "ser", "cl", "lc", "desc", "dec", "mc", "scl", "cr", "capt", "sel", "system", "rs", "ss", "sa", "cle", "cs", "ec", "tc", "Sc", "scan"], "s": ["qs", "hs", "sql", "sys", "sl", "t", "ats", "js", "sf", "sv", "gets", "sts", "abs", "sq", "i", "S", "simple", "ps", "r", "sp", "g", "less", "c", "n", "h", "south", "y", "v", "src", "spec", "ws", "j", "space", "sam", "a", "string", "su", "gs", "st", "ns", "rs", "ls", "stats", "ds", "str", "ims", "m", "ss", "sb", "ts"]}}
{"code": "import java.util.*;\\n\\nclass Main{\\n\tpublic static void main(String args[]){\\n    Scanner sc = new Scanner(System.in);\\n    int five=0,seven=0;\\n    for(int i=0;i<3;i++){\\n    int n = Integer.parseInt(sc.next());\\n    if(n==5)five++;\\n    else if(n==7)seven++;\\n  }\\n  if(five==2 && seven==1)System.out.println(\"YES\");\\n  else System.out.println(\"NO\");\\n}\\n}\\n", "target": "16", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "sync", "sch", "gc", "sq", "scrib", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", " Sc", "desc", "screen", "mc", "scl", "cr", "sel", "ch", "capt", "ss", "cle", "cs", "ec", "asc", "Sc", "sb", "scan"], "five": ["hello", "zero", "little", "Five", "three", "fold", "lex", "integer", "half", "fifth", "tie", "four", "inches", " fifty", "odd", "few", "son", "enty", "silver", "two", " twenty", "teen", "low", "shit", "one", "fif", "six", "power", "Eight", "nine", "rice", "ten", "fish", "le", "healthy", "fruit", "eight", "number", "knife", "pocket", "flake", "pie", "sharp", "life"], "seven": ["broad", "rose", "rown", "mill", "iron", "aug", "hello", "great", "square", "cape", "tight", "rows", "possibly", "alse", "four", "inches", "gre", "ipper", "rue", "two", "imil", "many", "higher", "water", "necessary", "six", "Seven", "safe", "forth", "each", "smith", "nine", "ten", "ghost", "mother", "may", "series", "meg", "meet", "eight", "female", "fire", "sharp"], "i": ["iq", "iter", "I", "hi", "ci", "ie", "sql", "si", "io", "ic", "t", "sim", "ai", "us", "is", "ind", "x", "mi", "err", "cli", "im", "y", "init", "gi", "q", "ix", "ui", "ki", "j", "batch", "qi", "pi", "multi", "it", "ii", "gu", "ini", "di", "ex", "id", "li", "ti", "bi", "wait", "m", "iu", "phi", "ip"], "n": ["note", "nm", "nb", "t", "ln", "net", "mn", "nan", "na", "no", "ng", "on", "len", "an", "c", "nn", "nie", "nor", "name", "v", "dn", "non", "N", "j", "l", "nu", "next", "nl", "not", "cn", "norm", "sn", "ns", "ni", "nw", "nt", "number", "num", "un", "z", "d", "m", "ne", "g"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint x = sc.nextInt();\\n\t\tint ans = (x + 1) % 2;\\n\t\tSystem.out.println(ans);\\n\t}\\n\\n}\\n", "target": "148", "substitutes": {}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint kaisu = 5;\\n\t\tint[] num = new int[kaisu];\\n\\n\t\tfor(int i = 0; i < kaisu ; i++) {\\n\t\t\tnum[i] = scan.nextInt();\\n\t\t}\\n\\n\t\tint wp = num[2]+num[4];\\n\t\tint wm = num[2]-num[4];\\n\t\tint hp = num[3]+num[4];\\n\t\tint hm = num[3]-num[4];\\n\\n\t\tif(num[0] < wp | 0 > wm ) {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}else if(num[1] < hp | 0 > hm) {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}else System.out.println(\"Yes\");\\n\t}\\n}", "target": "171", "substitutes": {"scan": ["sm", "connect", "sys", " scanner", "san", "Scan", "sv", "re", "scale", "ann", "sync", "send", "reach", "k", "out", "gate", "stat", "sum", "find", "skip", "parse", "r", "sp", "check", "an", "n", "read", "ser", "scroll", "info", "ner", "store", "sin", "ch", " Scan", "can", "system", "st", "run", "seek", "spin", "in", "sc", "get", "se"], "kaisu": ["kasuto", "kaici", "akaiman", " kaiman", "kiizu", "koisa", "koisu", " kais", "akauti", "kais", "koiku", "kiisu", "akais", "akaici", "kaiman", "kouto", "kuis", "kaisa", "akauto", "koizu", "kasisa", "akaisa", " kauto", "kauti", "akaiku", "kouti", "kiici", "koici", "kasisu", "kuisu", "kuiman", "kiuti", "akaizu", "kaizu", "kaiku", "kasiku", "kuuto", "akaisu", "kauto"], "num": ["note", "zero", "node", "comm", "alph", "msg", "n", "index", "mat", "con", "mont", "form", "dat", "conv", "test", "loc", "ver", "nm", "mon", "nb", "tim", "out", "sum", "no", "add", "col", "cal", "man", "nu", "np", "mark", "um", "number", "str", "set", "nom", "cache", "rat", "mod", "draw", "rub", "hex", "tag", "obj", "ord", "stat", "find", "save", "dev", "unit", "rank", "nam", "tu", "dec", "gen", "total", "nt", "val", "go", "prim", "div", "img", "dim", "Num", "count", "na", "data", "check", "eng", "NUM", "info", "orig", "desc", "get"], "i": ["iter", "I", "hi", "ci", "ie", "f", "si", "io", "ic", "sim", "u", "oi", "ai", "us", "is", "ind", "o", "x", "ms", "client", "mi", "n", "cli", "key", "y", "im", "v", "gi", "ix", "q", "ui", "j", "uri", "batch", "l", "qi", "pi", "multi", "it", "ii", "chain", "gu", "di", "ini", "id", "li", "in", "ti", "bi", "set", "m", "iu", "phi", "g", "ip"], "wp": ["px", "bp", "wd", "xp", "BP", "wn", "pp", "pb", "iw", "hw", "dp", "wt", "mp", "gp", "hip", "vp", "tp", "pread", "WP", "pkg", "php", "bsp", "w", "kw", "wx", "fw", "arp", "jp", "np", "ph", "p", "fp", "zip", "yp", "nw", "cp", "wl", "hop", "wordpress", "work", "wr"], "wm": ["mmm", "sm", "aw", "wd", "wn", "wk", "iw", "bm", "mm", "wy", "hw", "wt", "mn", "ms", "tp", "pm", "mg", "mi", "ml", "wb", "dm", "WM", "mmmm", "wi", "gm", "ws", "kw", "wx", "fw", "wu", "mem", "mx", "wid", "wcs", "wav", "wl", "rw", "fm", "m", "km", "wr"], "hp": ["bp", "hs", "pp", "hw", "dp", "phys", "hip", "gp", "ha", "vp", "ps", "tp", "hap", "phy", "pkg", "ump", "htm", "hog", "h", "pn", "php", "ulp", "html", "HP", "ht", "rh", "dh", "hl", "arp", "jp", "ph", "ih", "p", "htt", "hd", "cp", "ptr", "hr", "hop", "phi", "ip"], "hm": ["hh", "hs", "bm", "mph", "hw", "ha", "ham", "MH", "tp", "him", "pm", "phy", "mi", "hu", "htm", "hog", "rpm", "dm", "h", "HM", "ht", "gm", "rh", "hem", "hl", "dh", "mr", "oh", "ph", "mx", "hd", "tm", "uh", "hum", "helm", "hr", "hz", "fm", "zh"]}}
{"code": "import java.io.IOException;\\nimport java.io.PrintWriter;\\nimport java.io.FileNotFoundException;\\nimport java.util.InputMismatchException;\\nimport java.io.InputStream;\\nimport java.io.FileInputStream;\\n\\npublic class Main {\\n    InputStream is;\\n\\n    int __t__ = 1;\\n    int __f__ = 0;\\n    int __FILE_DEBUG_FLAG__ = __f__;\\n    String __DEBUG_FILE_NAME__ = \"src/O1\";\\n\\n    FastScanner in;\\n    PrintWriter out;\\n\\n    public void solve() {\\n        int[] a = in.nextIntArray(5);\\n        for (int i = 0; i < 5; i++) {\\n            if (a[i] == 0) {\\n                System.out.println(i + 1);\\n                return;\\n            }\\n        }\\n    }\\n\\n    public void run() {\\n        if (__FILE_DEBUG_FLAG__ == __t__) {\\n            try {\\n                is = new FileInputStream(__DEBUG_FILE_NAME__);\\n            } catch (FileNotFoundException e) {\\n                e.printStackTrace();\\n            }\\n            System.out.println(\"FILE_INPUT!\");\\n        } else {\\n            is = System.in;\\n        }\\n        in = new FastScanner(is);\\n        out = new PrintWriter(System.out);\\n\\n        solve();\\n    }\\n\\n    public static void main(final String[] args) {\\n        new Main().run();\\n    }\\n}\\n\\n\\nclass FastScanner {\\n    private InputStream stream;\\n    private byte[] buf = new byte[1024];\\n    private int curChar;\\n    private int numChars;\\n\\n    public FastScanner(InputStream stream) {\\n        this.stream = stream;\\n        // stream = new FileInputStream(new File(\"dec.in\"));\\n    }\\n\\n    int read() {\\n        if (numChars == -1)\\n            throw new InputMismatchException();\\n        if (curChar >= numChars) {\\n            curChar = 0;\\n            try {\\n                numChars = stream.read(buf);\\n            } catch (IOException e) {\\n                throw new InputMismatchException();\\n            }\\n            if (numChars <= 0)\\n                return -1;\\n        }\\n        return buf[curChar++];\\n    }\\n\\n    public boolean isSpaceChar(int c) {\\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\\n    }\\n\\n    public boolean isEndline(int c) {\\n        return c == '\\n' || c == '\\r' || c == -1;\\n    }\\n\\n    public int nextInt() {\\n        return Integer.parseInt(next());\\n    }\\n\\n    public int[] nextIntArray(int n) {\\n        int[] array = new int[n];\\n        for (int i = 0; i < n; i++)\\n            array[i] = nextInt();\\n\\n        return array;\\n    }\\n\\n    public int[][] nextIntMap(int n, int m) {\\n        int[][] map = new int[n][m];\\n        for (int i = 0; i < n; i++) {\\n            map[i] = nextIntArray(m);\\n        }\\n        return map;\\n    }\\n\\n    public long nextLong() {\\n        return Long.parseLong(next());\\n    }\\n\\n    public long[] nextLongArray(int n) {\\n        long[] array = new long[n];\\n        for (int i = 0; i < n; i++)\\n            array[i] = nextLong();\\n\\n        return array;\\n    }\\n\\n    public long[][] nextLongMap(int n, int m) {\\n        long[][] map = new long[n][m];\\n        for (int i = 0; i < n; i++) {\\n            map[i] = nextLongArray(m);\\n        }\\n        return map;\\n    }\\n\\n    public double nextDouble() {\\n        return Double.parseDouble(next());\\n    }\\n\\n    public double[] nextDoubleArray(int n) {\\n        double[] array = new double[n];\\n        for (int i = 0; i < n; i++)\\n            array[i] = nextDouble();\\n\\n        return array;\\n    }\\n\\n    public double[][] nextDoubleMap(int n, int m) {\\n        double[][] map = new double[n][m];\\n        for (int i = 0; i < n; i++) {\\n            map[i] = nextDoubleArray(m);\\n        }\\n        return map;\\n    }\\n\\n    public String next() {\\n        int c = read();\\n        while (isSpaceChar(c))\\n            c = read();\\n        StringBuilder res = new StringBuilder();\\n        do {\\n            res.appendCodePoint(c);\\n            c = read();\\n        } while (!isSpaceChar(c));\\n        return res.toString();\\n    }\\n\\n    public String[] nextStringArray(int n) {\\n        String[] array = new String[n];\\n        for (int i = 0; i < n; i++)\\n            array[i] = next();\\n\\n        return array;\\n    }\\n\\n    public String nextLine() {\\n        int c = read();\\n        while (isEndline(c))\\n            c = read();\\n        StringBuilder res = new StringBuilder();\\n        do {\\n            res.appendCodePoint(c);\\n            c = read();\\n        } while (!isEndline(c));\\n        return res.toString();\\n    }\\n\\n    public int[][] nextPackedIntArrays(int packN, int size) {\\n        int[][] res = new int[packN][size];\\n        for (int i = 0; i < size; i++) {\\n            for (int j = 0; j < packN; j++) {\\n                res[j][i] = nextInt();\\n            }\\n        }\\n        return res;\\n    }\\n}\\n", "target": "222", "substitutes": {"is": ["its", "iter", "ist", "ir", "es", "fs", "sys", "serv", "si", "js", "se", "ris", "obs", "from", "has", "iss", "Is", "bis", "ins", "ms", "ps", "are", "iris", "isi", "isin", "ib", "index", "by", "os", "im", "isc", "isl", "info", "s", "bs", "IS", "vis", "isa", "was", "sis", "bits", "it", "input", "ais", "lis", "ists", "rs", "as", "id", "ios", "cs", "get", "ip"], "__t__": ["__t_", " __t___", "__t_______", "__t___", "__f___", "__f_", "__e__", "__iive", "__f_______", " __t_", "__i__", "__e___", "__i___", " __f_", "__tive", "__e_______", "__eive", "__n__", " __f___", "__p___", " __f_______", "__five", "__n_", " __t_______", "__p_", "__i_______", "__p__", " __five", "__n___", " __tive"], "__f__": ["____f_______", "____f____", "__t_______", "___f__", "__t___", "__v___", "__v____", "__f___", "__e__", "___f____", "__f_______", "__v__", "___t___", "__F____", "__e___", "____c__", "__t____", "____c____", "__c__", "____f___", "___t____", "__c_______", "___t__", "__c____", "___f___", "__F__", "__c___", "__e____", "__F___", "____c___", "__f____", "__F_______", "____f__", "____c_______"], "__FILE_DEBUG_FLAG__": ["__FILE_DEBUG_FLAG___", "__FILE_DEBUG_FLAG____", "__FILE_DEBUG_TAG____", "__FILE_DEBUG__FLAG__", "__FILE_DEBUG_METHOD_", "__FILE_DEBUG_AG___", "__FILE_DEBUG_FILE__", "__FILE_DEBUG_DIR____", "__FILE_DEBUG_FLAG_", "__FILE_DEBUGINGMETHOD_", "__FILE_DEBUG_METHOD__", "__FILE_DEBUG_TAG__", "__FILE_DEBUG__AG___", "__FILE_DEBUG__AG____", "__FILE_DEBUG_DIR__", "__FILE_DEBUG__FLAG___", "__FILE_DEBUG_FILE_", "__FILE_DEBUG__AG__", "__FILE_DEBUG__FLAG____", "__FILE_DEBUG_flag_", "__FILE_DEBUG_DIR___", "__FILE_DEBUG_AG__", "__FILE_DEBUG_TAG___", "__FILE_DEBUGINGFLAG_", "__FILE_DEBUGINGMETHOD__", "__FILE_DEBUG_flag__", "__FILE_DEBUG_AG____", "__FILE_DEBUGINGFLAG__"], "__DEBUG_FILE_NAME__": ["__DEBUG_FILE_NAME___", "__DEBUG_FILENAMENAME__", "__DEBUG_FILE_NAME_______", "__DEBUG_FILE_VALUE__", "__DEBUG_FILE_FILE__", "__DEBUG_FILE_PATH____", "__DEBUG_FILE_NAME____", "__DEBUG_FILE_Name_______", "__DEBUG_FILE_PATH___", "__DEBUG_FILENAMEVALUE_______", "__DEBUG_FILENAMENAME_______", "__DEBUG_FILE_PATH__", "__DEBUG_FILE_Name___", "__DEBUG_FILE_VALUE_______", "__DEBUG_FILENAMEVALUE__", "__DEBUG_FILE_Name____", "__DEBUG_FILENAMENAME___", "__DEBUG_FILE_FILE_______", "__DEBUG_FILENAMEVALUE___", "__DEBUG_FILE_VALUE___", "__DEBUG_FILE_Name__", "__DEBUG_FILE_FILE____", "__DEBUG_FILE_FILE___"], "in": ["or", "iter", "ar", "internal", "fs", "socket", "f", "din", "io", "serv", "IN", "ic", "al", "inn", "inner", "from", "ai", "bin", "mm", "er", "ind", "ins", "conn", "std", "r", "mi", "rin", "and", "n", "lin", "h", "isin", "index", "im", "min", "init", "info", "s", "con", "en", "ri", "nin", "gin", "doc", "cin", "In", "pi", "inc", "it", "input", "ais", "session", "file", "rs", "ini", "as", "id", "inf", "vin", "log"], "out": ["stable", "writer", "or", "exit", "report", "error", "status", "sys", "OUT", "io", "at", "t", "inner", "obj", "net", "last", "gc", "ins", "sum", "outs", "o", "client", "conn", "msg", "gr", "err", "up", "n", "by", "os", "OU", "s", "con", "aos", "one", "output", "w", "Out", "outer", "lock", "screen", "res", "it", "print", "p", "gt", "ex", "txt", "result", "null", "nt", "end", "ou", "log", "list", "set", "cache", "str"], "a": ["aux", "auto", "aa", "t", "wa", "area", "va", "A", "da", "au", "ava", "sha", "na", "pa", "o", "ao", "ba", "an", "c", "ea", "ga", "ia", "j", "sta", "ta", "aaa", "ya", "e", "apa", "p", "aka", "b", "ca", "ata", "alpha", "as", "la", "sa", "ma"], "i": ["iter", "I", "hi", "ci", "io", "si", "ic", "sim", "u", "ai", "me", "ei", "xi", "k", "ind", "x", "ms", "mi", "cli", "key", "index", "y", "im", "v", "init", "ix", "gi", "ui", "info", "q", "load", "ki", "j", "uri", "l", "qi", "pi", "multi", "ji", "it", "my", "ii", "p", "chain", "di", "ini", "id", "li", "fi", "ti", "bi", "z", "m", "point", "phi", "ip"], "stream": ["or", "iter", "sw", "path", "status", "Stream", "socket", "speed", "feed", "dd", "view", "instance", "network", "window", "iterator", "flush", "our", "ream", "transform", "console", "port", "loop", "data", "buffer", "type", "context", "REAM", "host", "upload", "wrapper", "output", "each", "table", "clean", "sample", "input", "handler", "pipe", "pool", "chain", "queue", "form", "file", "engine", "empty", "stack", "row", "reader", "log", "trace", "impl", "channel", "message", "handle"], "buf": ["Buffer", "uf", "cap", "seq", "fac", "vec", "cv", "buffer", "tmp", "msg", "pkg", "err", "cur", "arr", "orig", "cb", "batch", "rb", "buff", "mem", "pipe", "alloc", "pool", "cmd", "queue", "b", "proc", "conv"], "curChar": [" curByte", "Curchar", "crByte", "curchar", "curCharacter", "CurByte", "crCharacter", " curchar", " curCharacter", "curByte", "crchar", "CurChar", "crChar", "CurCharacter"], "numChars": ["numCharars", "numchats", "numchARS", " numChats", " numChARS", "numCharats", "numCharARS", "numChats", "numChARS", "numchars"]}}
{"code": "\\nimport java.io.*;\\nimport java.util.*;\\nimport static java.lang.System.*;\\nimport static java.lang.Math.*;\\n\\npublic class Main\\n{\\n\tpublic static void main(String []args)throws IOException\\n\t{\\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\\n\t\tint n = Integer.parseInt(br.readLine());\\n\t\tString []s=br.readLine().split(\" \");\\n\t\tint a[]=new int[n];\\n\t\tint min[]=new int[n];\\n\t\t//boolean flag=true;\\n\t\tint c=0,minval=Integer.MAX_VALUE;\\n\t\t\\n\t\tfor(int i=0;i<n;i++)\\n\t\t\ta[i]=Integer.parseInt(s[i]);\\n\t\t\t\\n\t\tmin[0]=a[0];\\n\t\tminval=a[0];\\n\t\tfor(int i=1;i<n;i++)\\n\t\t{\\n\t\t\tif(a[i]<minval)\\n\t\t\t{\\n\t\t\t\tminval=a[i];\\n\t\t\t\tmin[i]=minval;\\n\t\t\t}\t\\n\t\t}\\n\t\t\\n\t\tfor(int i=0;i<n;i++)\\n\t\t{\\n\t\t\tif(a[i]<=min[i])\\n\t\t\t\tc++;\\n\t\t\t\\n\t\t}\\n\t\tout.println(c);\\n\t}\\n}\\n\\n\\n", "target": "229", "substitutes": {"br": ["repl", "bp", "bj", "bb", "div", "bn", "bm", "bc", "bh", "bridge", "dr", "bro", "bl", "bf", "bg", "ctr", "gr", "r", "rem", "tr", "eb", "bs", "lr", "yr", "cb", "bt", "mr", "Br", "pr", "next", "rb", "cr", "bd", "driver", "kr", "b", "BR", "db", "browser", "rel", "nr", "hr", "buf", "fr", "ber", "sb", "wr", "vr"], "n": ["note", "nb", "wn", "t", "ren", "ln", "nc", "net", "mn", "count", "nan", "i", "na", "x", "no", "size", "on", "len", "c", "nn", "v", "en", "dn", "N", "j", "l", "nu", "nl", "pi", "cn", "p", "sn", "b", "ns", "nt", "ni", "null", "nr", "num", "number", "d", "m", "ne"], "s": ["fs", "t", "js", "i", "S", "ps", "ms", "c", "h", "v", "bs", "ws", "gs", "p", "b", "ns", "rs", "ls", "stats", "ds", "xs", "str", "m", "ss", "sb", "ts"], "a": ["f", "ra", "pos", "area", "A", "na", "o", "ab", "x", "data", "r", "ao", "up", "ap", "v", "l", "e", "p", "b", "ata", "as", "alpha", "act", "m", "val"], "min": ["close", "range", "version", "max", "mp", "Minimum", "Min", "err", "lo", "beta", "lib", "low", "small", "lower", "m", "dec", "mod", "mem", "meta", "diff", "lt", "minimum", "mins", "rel", "list", "ma", "ss"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n\\n\\n        String temp = sc.nextLine();\\n        String[] tempArr = temp.split(\"\");\\n        int cnt1 = 0,cnt2 = 0;\\n        for(String str : tempArr) {\\n            if (str.equals(\"0\")) {\\n                cnt1++;\\n            }else {\\n                cnt2++;\\n            }\\n        }\\n\\n        System.out.println(Math.min(cnt1,cnt2) * 2);\\n\\n\\n    }\\n\\n}\\n", "target": "14", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "tk", "sv", "rc", "nc", "bc", "asc", "sync", "sac", "sh", "sch", "gc", "sq", "anc", "sec", "sp", "cc", "c", "esc", "isc", "spec", "cl", "lc", " Sc", "desc", "mc", "nl", "scl", "cr", "ch", "system", "st", "ss", "conv", "cle", "cs", "ec", "tc", "Sc", "scan"], "temp": ["time", "fake", "t", "tim", "raw", "stem", "mp", "base", "now", "out", "buffer", "tmp", "config", "pt", "v", "emp", "Temp", "orig", "prefix", "volt", "output", "json", "term", "set", "current", "mem", "tem", "input", "tm", "pre", "dat", "txt", "result", "null", "template", "empty", "pretty", "tc", "test"], "tempArr": ["tempArrb", "tempArl", "tempCurrb", "tempArv", "temArrayR", "temArR", "tempARR", "tempARrb", "tempArrayR", "TempArl", "tempArrs", "tempAttl", "temArrayv", "temArrayrb", "tempArrayrb", "temArrayr", "tempErr", "tempCurrs", "TempArb", "tempCurr", "tempAttr", "temArrb", "tempArrayv", "TempArr", "tempCurv", "tempCurb", "TempErb", "tempAttb", "tempErb", "tempArb", "tempArR", "tempErl", "TempErr", "tempARv", "tempCurR", "TempErl", "tempAttrs", "tempArrayr", "temArv", "TempErrs", "temArr", "TempArrs", "tempCurl", "tempErrs", "tempARr"], "cnt1": ["cred0", "cnt0", "count11", " cnt0", "cct0", "Cnt0", "CntOne", "ccount2", "Cnt11", "crt0", "cred1", "Cnt1", "Cct1", "cct1", "cred2", "cnt11", " cntOne", "cct11", " ccount1", "Count2", " ccountOne", "ccountOne", "Count0", "cntOne", "cctOne", " ccount2", "crt2", "cct2", "ccount1", " ccount0", "cred11", "Count11", "crtOne", "Cnt2", "count2", "Count1", "ccount0", "count1", "CctOne", "Cct2", "count0", "crt1"], "cnt2": ["cgt1", " cnt4", "cnt0", " cnt0", "cct0", "cct02", "cctTwo", " cgt4", "cnc02", "cnc2", "Cnt1", " cgt2", "Cct1", "cct1", "cncTwo", "CncTwo", "crt4", "cct4", "cgt2", "cgtTwo", "cnc1", "cnc0", "Cnt02", "crt2", "cnt02", "cntTwo", "cct2", " cgt1", "Cnc2", "cgt0", "crt02", "cnc4", " cgt0", "Cct4", "Cnc1", "Cnt2", "Cct02", "Cct2", "CntTwo", "cnt4", "crt1", "cgt4", "Cnt4"], "str": ["stable", "iter", "bool", "usr", "hex", "t", "obj", "me", "from", "re", "dr", "gr", "r", "sp", "err", "progress", "n", "tr", "ev", "arr", "key", "name", "spec", "s", "Str", "STR", "next", "string", "char", "enc", "step", "req", "print", "cr", "br", "coll", "st", "group", "url", "fr"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\nimport java.math.*;\\npublic class Main {\\n    public static void main(String[]args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tPrintWriter ou = new PrintWriter(System.out);\\n\t\tint n = Integer.parseInt(sc.next());\\n\t\tint yono = 0;\\n\t\tfor(int i = 0 ; i < n ; i++){\\n\t\t\tif(i + 1 != Integer.parseInt(sc.next())) yono++;\\n\t\t}\\n\t\tif(yono <= 2) ou.println(\"YES\");\\n\t\telse ou.println(\"NO\");\\n\t\tou.flush();\\n\t}\\n}", "target": "82", "substitutes": {"sc": ["SC", "osc", "pc", "cu", "si", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sch", "sq", "uc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "irc", " Sc", "desc", "ctl", "sr", "mc", "inc", "scl", "cr", "capt", "ch", "sel", "sic", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "ou": ["ci", "open", "auto", "cu", "io", "lu", "u", "our", "du", "cro", "ro", "war", "eu", "au", "out", "o", "oc", "uo", "iet", "ao", "yout", "utt", "ous", "ut", "cho", "OU", "os", "tu", "ui", "aos", "zu", "bo", "oo", "we", "put", "you", "po", "ue", "ku", "co", "oud", "ot", "gu", "uu", "di", "oul", "ow", "um", "ont", "iu", "wo", "ost"], "n": ["nb", "t", "network", "ln", "nc", "net", "mn", "nan", "na", "o", "ng", "on", "c", "nn", "name", "gn", "en", "non", "N", "l", "nu", "np", "nl", "cn", "norm", "sn", "ns", "total", "nt", "nw", "nia", "number", "num", "nr", "un", "d", "m", "ne"], "yono": ["yonoin", "yonno", "yonio", "ogunio", "ysoo", "virtos", "yonoing", "yonoa", "irto", "yonro", "ytos", "ailyos", "ynos", "ailyo", "ailyoa", "ytno", "virtoin", "ynoa", "ynoo", "yonos", "iero", "ailyoo", "ysos", "yonoo", "ytoin", "yno", "virto", "ogunoin", "ytoing", "oguno", "ierro", "yto", "ysoa", "irtoing", "yso", "ieroing", "irtro", "ogunos", "ierno", "ytro", "irtno", "virtio", "ytio"], "i": ["zi", "iq", "iter", "I", "hi", "ci", "\u0438", "si", "sim", "u", "ai", "xi", "is", "ind", "point", "o", "x", "mi", "err", "cli", "index", "im", "y", "init", "gi", "ix", "q", "ui", "j", "qi", "pi", "multi", "ji", "ij", "my", "it", "ii", "chain", "gu", "ini", "di", "ex", "id", "li", "ti", "bi", "z", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n *\\n * @author Kenji\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        Scanner in = new Scanner(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        ABC096B solver = new ABC096B();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class ABC096B {\\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\\n            int A = in.nextInt();\\n            int B = in.nextInt();\\n            int C = in.nextInt();\\n            int K = in.nextInt();\\n            int m = Math.max(A, Math.max(B, C));\\n            int n = A + B + C - m;\\n            for (int i = 0; i < K; i++) {\\n                m = m * 2;\\n            }\\n            out.println(m + n);\\n        }\\n\\n    }\\n}\\n\\n", "target": "201", "substitutes": {"inputStream": [" inputPath", " inputSteam", "sourceStreamer", "controlStream", " inputSource", "sequenceSteam", "inputStreamer", "controlStreamer", "outputSource", "sourceSteam", "controlSteam", "inputSource", "sourceSocket", "sequenceSource", "sequencePath", "inputSocket", "outputSteam", "inStream", "controlSocket", "sequenceStream", "inSteam", "inStreamer", "sourceStream", "inputPath", "inSocket", "inputSteam", "outputPath"], "outputStream": ["successForm", "OutputSteam", "displayStream", "outputForm", "outputWriter", "inputStreamer", "languageForm", "inputForm", "languageSteam", "successStream", "languageStream", "OutputForm", " outputForm", "displaySteam", "outputSteam", "OutputStream", "OutputWriter", "inputSteam", " outputSteam", " outputWriter", "successSteam", "displayForm", "displayStreamer", "languageWriter", "outputStreamer", "successStreamer"], "in": ["io", "serv", "raw", "sol", "o", "source", "ir", "en", "con", "l", "doc", "cin", "In", "form", "file", "id", "din", "t", "add", "thin", "isin", "init", "s", "current", "ch", "stream", "run", "ini", "log", "reader", "set", "ma", "scan", "iter", "ic", "inner", "mm", "bin", "er", "is", "ind", "ins", "r", "on", "mi", "err", "local", "char", "sin", "it", "p", "can", "rt", "dir", "user", "inf", "end", "inside", "IN", "inn", "rin", "lin", "h", "im", "info", "gin", "inc", "input", "cm", "cgi", "null", "kin", "get", "call"], "out": ["writer", "report", "sys", "OUT", "io", " OUT", "t", "at", "flush", "window", "inner", "obj", "net", "write", "gc", "ins", "sum", "outs", "o", "no", "client", "err", "up", "check", "c", "by", "name", "os", "v", "server", "OU", "s", "con", "aos", "output", "w", "Out", "this", "comment", "l", "outer", "table", "co", "current", "screen", "res", "it", "print", "e", "p", "can", "run", "pool", "ch", "ex", "cmd", "group", "null", "nt", "user", "to", "end", "ou", "log", "temp", "set"], "solver": ["esolver", "esolution", "Solution", "psolving", "resolver", "resorter", "solving", "psolve", "esorter", "unsolution", "unsorter", " solving", "psolution", " solution", "resolving", "esolving", "Solving", "Solve", "psolver", "unsolving", "solve", "resolution", "unsolver", " solve", "sorter", "Solver", "solution"], "testNumber": [" testNum", "testnumber", " epochnum", " solutionNumber", " testnum", "testnum", "testNum", " epochnumber", " solutionnum", " testnumber", " solutionNum", " solutionnumber", " epochNum", " epochNumber"], "A": ["Al", "AS", "AD", "AF", "GA", "AL", "AN", "RA", "AE", "AV", "App", "M", "Ar", "AA", "AP", "SA", "HA", "ACC", "P", "At", "AU", "IA", "AB", "AH", "AC", "EA", "AM", "a", "BA", "G", "Ax", "AR", "An", "Av", "As", "This", "Ant", "AT", "LA", "ALL", "CA"], "B": ["FB", "TB", "GB", "OB", "RB", "Y", "BL", "M", "PB", "BU", "BO", "BI", "EB", "BB", "V", "CB", "DB", "BE", "SB", "BF", "IB", "NB", "AB", "N", "Reb", "BA", "G", "J", "VB", "WB", "b", "BR", "BY", "Bar", "BC", "BS", "BD", "LB", "BG", "Bs", "BER"], "C": ["E", "CI", "I", "YC", "R", "CT", "L", "EC", "Y", "Q", "CE", "Z", "Car", "M", "D", "CS", "Ch", "Cu", "S", "Cl", "F", "P", "c", "V", "CB", "Co", "CR", "CW", "JC", "W", "N", "DC", "U", "CD", "G", "CM", "CL", "H", "CC", "BC", "CV", "LC", "T", "CO", "CA", "Cs"], "K": ["E", "I", "KC", "R", "L", "FK", "KE", "Y", "Q", "Z", "O", "M", "k", "D", "S", "F", "P", "V", "W", "KK", "N", "SK", "KR", "G", "J", "H", "KI", "KA", "X", "BC", "T", "KS"], "m": ["sm", "mt", "em", "f", "t", "bm", "mm", "mp", "M", "k", "mn", "ma", "x", "ms", "r", "pm", "md", "mi", "c", "am", "h", "dm", "arm", "y", "v", "min", "im", "gm", "w", "j", "perm", "l", "mr", "a", "mod", "mc", "mem", "mx", "p", "tm", "b", "mean", "cm", "um", "fm", "z", "d", "km", "g"], "n": ["nm", "t", "network", "u", "inn", "ln", "nc", "k", "mn", "nan", "na", "o", "r", "c", "an", "h", "fn", "nn", "pn", "name", "v", "gn", "s", "dn", "w", "N", "j", "l", "nu", "np", "nl", "cn", "p", "sn", "b", "ns", "z", "d", "ne", "g"], "i": ["zi", "iter", "I", "hi", "ci", "ie", "\u0438", "si", "io", "ic", "sim", "u", "ai", "xi", "us", "me", "is", "ind", "x", "mi", "cli", "gi", "init", "y", "MI", "q", "ix", "ui", "ki", "j", "batch", "a", "qi", "pi", "multi", "it", "ii", "PI", "ex", "ini", "di", "gu", "li", "ti", "bi", "set", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main{\\n  public static void main(String[] args) {\\n    Scanner scanner = new Scanner(System.in);\\n    String[] STRINGS = new String[3];\\n    for(int i=0; i<3; i++){\\n      STRINGS[i] = scanner.next();\\n    }\\n    scanner.close();\\n\\n    int[] index = new int[3];\\n    int turn = 0;\\n    char[] ans = {'A', 'B', 'C'};\\n    boolean isEnd = false;\\n    while(!isEnd){\\n      index[turn]++;\\n      for(int i=0; i<3; i++){\\n        if(index[i] == STRINGS[i].length()+1){\\n          System.out.println(ans[i]);\\n          isEnd = true;\\n          break;\\n        }\\n      }\\n      if(isEnd){\\n        break;\\n      }\\n      switch(STRINGS[turn].charAt(index[turn]-1)){\\n        case 'a':\\n          turn = 0;\\n          break;\\n        case 'b':\\n          turn = 1;\\n          break;\\n        case 'c':\\n          turn = 2;\\n          break;\\n      }\\n    }\\n  }\\n}\\n", "target": "11", "substitutes": {"scanner": ["Scanner", " scanning", "Scaner", "scanning", "Scanning", "scaner", " scanNER", "scanener", " scanter", "canter", "ScanNER", "caninner", "checkner", "scanNER", "Scaninner", "Scanener", " scanener", "checkener", "checkning", " scaner", " scaninner", "Scanter", "caner", "canNER", "canener", "checkter", "scanter", "canner", "scaninner"], "STRINGS": ["STATES", "TRUES", "STUES", "READINGS", "TRings", " STRING", "USING", "USings", "USINGS", "STING", "StrINGS", "READings", "READENS", "USrings", "STRUES", "TRINGS", "StrING", "STRrings", "STENS", "NAMEings", "NAMErings", "STings", "STRING", "STRENS", "NAMEING", "Strings", " STRings", "READING", "TRrings", "STRATES", " STRUES", "TRING", "USATES", "USENS", "STRings", "STINGS", "NAMEINGS", "StrATES"], "i": ["io", "us", "point", "php", "y", "ix", "l", "pi", "ii", "gu", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "xi", "ei", "ger", "out", "ori", "client", "cli", "init", "ui", "j", "uri", "qi", "multi", "my", "print", "ex", "ini", "list", "m", "history", "si", "ic", "sim", "is", "x", "mi", "err", "name", "gi", "json", "ji", "it", "di", "in", "ims", "slice", "go", "iq", "zi", "I", "ami", "\u0438", "u", "ai", "me", "entry", "key", "by", "im", "v", "info", "q", "ri", "ki", "batch", "ity", "ico", "cgi", "li", "iu", "ip"], "index": ["go", "error", "sort", "dig", "connect", "length", "open", "path", "success", "zero", "date", "instance", "position", "pos", "shape", "capacity", "height", "max", "count", "is", "ind", "forward", "pointer", "x", "find", "buffer", "point", "loop", "link", "subject", "rank", "n", "order", "context", "read", "column", "update", "start", "store", "loc", "input", "can", "run", "search", "connection", "seek", "offset", "engine", "Index", "array", "row", "num", "trace", "list", "set", "number", "line", "address", "slice", "scan", "ion"], "turn": ["root", "urn", "mix", "verse", "back", "thing", "sol", "ash", "cycle", "head", "ix", "con", "form", "row", "tip", "what", "snap", "shift", "circ", "keep", "round", "out", "loop", "sum", "think", "an", "lock", "make", "co", "chain", "run", "foot", "don", "draw", "connect", "span", "length", "change", "coin", "ann", "fac", "transform", "sh", "gate", "focus", "rank", "turned", "stick", "rand", "can", "Turn", "depth", "trace", "act", "val", "go", "wind", "div", "vel", "count", "key", "box", "this", "forth", "rain", "roll", "aft", "point", "call"], "ans": ["ANS", "es", "values", "lines", "san", "ats", "types", "ENS", "ann", "ings", "strings", "ants", "ins", "ses", "names", "uns", "ms", "aus", "an", "ians", "ks", "annot", "vs", "flags", "s", "aos", "icons", "ens", "cons", "ars", "ids", "ns", "ls", "vals", "ents", "cs", "caps", "actions", "arts", "xs", "ts"], "isEnd": ["nowEnd", "isStart", "hasEnd", "areEND", "ISStart", "nowStart", "ISEnd", "setend", "bisStart", "isiStart", "setEND", " isEND", "setEnd", "areStart", "IsStart", "areEnd", "isTerm", "isEND", "nowEND", "areTerm", "hasEND", " isTerm", " isend", "isiEnd", "isend", " isStart", "isiEND", "hasStart", "IsEnd", "isiTerm", "ISEND", "hasend", "IsEND", "bisEND", "bisEnd", "bisend", "setStart", "ISend"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main{\\n    public static void main(String args[]){\\n        Scanner sc = new Scanner(System.in);\\n        \\n        int n = sc.nextInt();\\n        int m = sc.nextInt();\\n        \\n        int A[][] = new int[n][m];\\n        int b[] = new int[m];\\n        \\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<m;j++){\\n                A[i][j] = sc.nextInt();\\n            }\\n            sc.nextLine();\\n        }\\n        \\n        for(int i=0;i<m;i++){\\n            b[i] = sc.nextInt();\\n        }\\n        \\n        int c[] = productVector(A,b);\\n        \\n        for(int i=0;i<n;i++){\\n            System.out.println(c[i]);\\n        }\\n        \\n    \\n    }\\n    static int[] productVector(int a[][], int b[]){\\n        int c[] = new int[a.length];\\n        for(int i=0;i<a.length;i++){\\n            for(int j=0;j<a[0].length;j++){\\n                c[i] += (a[i][j]*b[j]);\\n            }\\n        }\\n        return c;\\n    }\\n}\\n", "target": "185", "substitutes": {"sc": ["SC", " SC", "osc", "pc", "sys", "syn", "psc", "ctx", "usc", "sv", "rc", "nc", "bc", " unsc", "sync", "asc", "sh", "exec", "gc", "sch", "sq", "sub", "anc", "fc", "sec", "sem", "sp", "cc", "isc", "esc", "ser", "cl", "lc", "irc", " Sc", "arc", "ctl", "dec", "desc", "co", "mc", "screen", "inc", "scl", "capt", " scr", "ch", "ck", "st", "txt", "ss", "sci", "conv", "cs", "tc", "Sc", "sb", "scan"], "n": ["nm", "nb", "t", "network", "nc", "net", "M", "mn", "nan", "k", "na", "x", "o", "no", "r", "on", "an", "nn", "fn", "y", "v", "en", "N", "l", "nu", "np", "nl", "pi", "p", "sn", "ns", "nt", "number", "num", "un", "z", "ne", "g"], "m": ["sm", "mt", "om", "span", "em", "nm", "f", "mode", "t", "me", "bm", "mm", "mo", "all", "M", "mn", "ma", "o", "x", "ms", "r", "rem", "mi", "dm", "h", "med", "mat", "y", "v", "im", "man", "gm", "perm", "l", "mr", "mod", "mc", "mem", "pi", "p", "tm", "cm", "mk", "mis", "mun", "z", "d", "g"], "A": ["I", "R", "C", "L", "AE", "AI", "Array", "App", "Am", "M", "Ar", "au", "AA", "AP", "D", "SA", "S", "B", "P", "At", "V", "AB", "N", "U", "AC", "BA", "G", "H", "An", "As", "CA", "T", "Ca", "ma", "Ax", "ac"], "b": ["mb", "bp", "nb", "f", "back", "bb", "t", "u", "bc", "bis", "base", "ub", "ab", "o", "B", "r", "fb", "ba", "wb", "h", "eb", "ib", "by", "y", "v", "bs", "ob", "lib", "cb", "l", "rb", "it", "e", "br", "gb", "p", "bar", "db", "be", "bi", "z", "d", "sb"], "i": ["status", "io", "at", "ice", "o", "iu", "index", "y", "ix", "iii", "pi", "ii", "yi", "id", "fi", "ti", "phi", "ie", "hi", "ci", "xi", "ei", "ori", "cli", "init", "ui", "uri", "ik", "qi", "multi", "ini", "um", "rel", "list", "ion", "iter", "si", "ic", "sim", "oi", "inner", "is", "ind", "ins", "x", "mi", "gi", "json", "ji", "it", "e", "di", "in", "ims", "zi", "iq", "I", "ami", "\u0438", "ai", "me", "ish", "iy", "im", "info", "q", "ri", "ki", "ia", "this", "ity", "ij", "li", "point", "ip"], "j": ["note", "ie", "jac", "bj", "si", "ax", "off", "jl", "js", "u", "obj", "us", "er", "k", "kj", "ind", "oj", "o", "job", "ng", "je", "r", "sp", "uj", "jc", "pt", "y", "v", "by", "gi", "s", "q", "ix", "dj", "json", "l", "pr", "ju", "aj", "jp", "jo", "jump", "ji", "ij", "it", "ot", "br", "e", "J", "xy", "ph", "p", "jj", "ja", "di", "jit", "att", "li", "rel", "bi", "z", "d", "og", "jas", "ne", "g", "fr"], "c": ["ci", "ar", "f", "C", "cu", "ct", "t", "u", "com", "rc", "content", "nc", "count", "gc", "cv", "data", "o", "x", "unc", "fc", "r", "config", "cd", "cont", "cc", "ce", "h", "cur", "v", "conf", "cal", "con", "lc", "cat", "l", "arc", "ctrl", "co", "enc", "e", "cr", "ch", "p", "chain", "etc", "cm", "ca", "cf", "result", "comp", "dc", "cp", "cs", "cache", "d", "tc", "ac"], "a": ["aux", "ar", "aa", "f", "ack", "anta", "t", "at", "u", "ai", "area", "va", "all", "au", "o", "ab", "oa", "r", "ao", "acs", "an", "am", "h", "ba", "ap", "v", "app", "s", "ea", "w", "ace", "ia", "l", "isa", "ity", "pi", "aaa", "p", "aka", "ca", "ata", "alpha", "la", "as", "parts", "array", "sa", "att", "ma", "ac"]}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n\tpublic static void main(String[] args) throws Exception{\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString s1 = sc.next();\\n        String s2 = sc.next();\\n        int min = s2.length();\\n        for(int i = 0; i <= s1.length() - s2.length(); i++){\\n        \tString s3 = s1.substring(i, i + s2.length());\\n            int count = 0;\\n            for(int j = 0; j < s2.length(); j++){\\n            \tif(s2.charAt(j) != s3.charAt(j)){\\n                \tcount++;\\n                }\\n            }\\n            min = Math.min(min, count);\\n        }\\n        System.out.println(min);\\n\t}\\n}", "target": "158", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sac", "sh", "sch", "sq", "gc", "scope", "uc", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "ko", "lc", "arc", "ctl", "mc", "inc", "scl", "cr", "ch", "tch", "ss", "sci", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "s1": ["tib", "s0", "t3", "sc3", "S1", "sts256", "sib", "scib", " sib", "S256", "S0", "sc1", "p1", "S2", "S3", "sc0", "s256", " s0", "sts2", "p3", " s256", "sts0", "sts1", "t1", "t0", "p2"], "s2": ["ws256", "ws1", "ps22", "sb3", "e3", "S12", "e1", "e4", "sb12", "s22", " s12", "ws22", "ps1", "S02", "t3", "stwo", " s02", "e2", "s02", "ps2", "S1", "str4", "ws2", "sbtwo", "S2", "s12", "Stwo", "S3", "t2", "s4", "s256", "sb2", " s256", "ps256", "str3", " s22", " stwo", "t1", "str2", "S4", " s4", "str1"], "min": ["imp", "sort", "cmp", "best", "const", "div", "range", "shift", "scale", "max", "mn", "minus", "stat", "find", "sum", "last", "initial", "Minimum", "nom", "reset", "mint", "amin", "mi", "Min", "mid", "med", "MIN", "conf", "low", "small", "lower", "local", "emin", "average", "mini", "lock", "mod", "rest", "next", "start", "diff", "lt", "dem", "minimum", "search", "mean", "mins", "width", "dist", "rel", "margin", "none", "temp", "common", "minute", "dot", "in", "m", "mine", "default", "test"], "i": ["zi", "iq", "ie", "hi", "ci", "I", "ami", "si", "ic", "sim", "u", "ai", "xi", "ei", "us", "ski", "is", "ish", "ind", "ori", "x", "mi", "index", "im", "y", "init", "v", "ix", "gi", "ui", "ri", "ki", "ia", "uri", "qi", "pi", "multi", "ji", "ij", "it", "ii", "ex", "ini", "di", "ni", "li", "in", "ti", "bi", "ims", "iu", "phi", "ip", "asi"], "s3": ["s15", "s03", "sv15", "sv23", "gs03", "gs15", "sv3", "sv03", "s23", "S15", "gs3", "S2", " s03", "S03", "S3", " s23", "gs2", " s15"], "count": ["found", "report", "flag", "length", "counter", "Count", "const", "nb", "ct", "all", "max", "ind", "sum", "find", "add", "ctr", "cond", "size", "must", "z", "cont", "check", "c", "cc", "n", "index", "ount", "conf", "q", "consider", "set", "current", "amount", "req", "coll", "child", "total", "nt", "number", "num", "cache", "list", "call"], "j": ["note", "jac", "bj", "ax", "jl", "js", "obj", "kj", "k", "fr", "oj", "job", "je", "on", "err", "uj", "prop", "key", "jc", "pt", "y", "kid", "q", "ix", "dj", "json", "cat", "pr", "bot", "aj", "jp", "jo", "jump", "ph", "ji", "ij", "ot", "br", "it", "req", "J", "b", "jj", "ja", "other", "att", "z", "jas", "g", "ion"]}}
{"code": "import java.util.Scanner;\\nimport java.nio.*;\\n\\nclass Queue{\\n    private String name;\\n    private int time;\\n\\n    public Queue(String name, int time){\\n        this.name = name;\\n        this.time = time;\\n    }\\n\\n    public String getName(){\\n        return name;\\n    }\\n\\n    public int getTime(){\\n        return time;\\n    }\\n}\\n\\nclass MyQueue{\\n    private Queue[] queue;\\n    private int head = 0;\\n    private int tail = 0;\\n    \\n    public MyQueue(int size){\\n        queue = new Queue[size + 1];\\n    }\\n\\n    public boolean isEmpty(){\\n        return head == tail;\\n    }\\n\\n    public boolean isFull(){\\n        return head == (tail + 1) % queue.length;\\n    }\\n\\n    public void enqueue(String name, int time) throws Exception{\\n        if(isFull()){\\n            throw new Exception();\\n        }\\n\\n        queue[tail] = new Queue(name, time);\\n\\n        if(tail + 1 == queue.length){\\n            tail = 0;\\n        }else{\\n            tail++;\\n        }\\n    }\\n\\n    public Queue dequeue() throws Exception{\\n        if(isEmpty()){\\n            throw new Exception();\\n        }\\n        Queue x = queue[head];\\n        if(head + 1 == queue.length){\\n            head = 0;\\n        }else{\\n            head++;\\n        }\\n        return x;\\n    }\\n\\n    public int min(int a, int b){\\n        return a < b ? a : b;\\n    }\\n}\\n\\npublic class Main{\\n        public static void main(String[] args) throws Exception{\\n        Scanner sc = new Scanner(System.in);\\n\\n        int n = sc.nextInt();\\n        int q = sc.nextInt();\\n\\n        MyQueue queue = new MyQueue(n);\\n\\n        String name;\\n        int time;\\n        for(int i = 0; i < n; i++){\\n            name = sc.next();\\n            time = sc.nextInt();\\n            queue.enqueue(name, time);\\n        }\\n        \\n        int sum = 0;\\n        while(!queue.isEmpty()){\\n            Queue q1 = queue.dequeue();\\n            if(q1.getTime() > q){\\n                sum += q;\\n                queue.enqueue(q1.getName(), q1.getTime() - q);\\n            }else{\\n                sum += q1.getTime();\\n                System.out.println(q1.getName() + \" \" + sum);\\n            }\\n        }\\n    }\\n}\\n\\n\\n", "target": "231", "substitutes": {"name": ["word", "ment", "filename", "object", "min", "prefix", "w", "l", "admin", "game", "title", "text", "Name", "old", "file", "id", "num", "line", "default", "test", "ame", "path", "hello", "def", "zone", "base", "names", "parent", "no", "am", "named", "init", "table", "string", "cmd", "group", "number", "str", "ma", "common", "address", "alias", "m", "format", "sequence", "length", "type", "on", "order", "image", "class", "value", "local", "description", "mem", "NAME", "event", "comment", "message", "window", "part", "data", "key", "label", "v", "info", "lower", "term", "this", "search", "command"], "time": ["watch", "port", "estamp", "sec", "TIME", "duration", "thread", "form", "tm", "file", "id", "work", "tc", "test", "mt", "path", "inter", "zone", "tim", "t", "max", "runtime", "timer", "string", "tt", "delay", "then", "minute", "set", "Time", "m", "ts", "sequence", "length", "history", "ime", "style", "rate", "version", "transform", "type", "etime", "value", "second", "total", "event", "depth", "trace", "comment", "tree", "message", "error", "est", "date", "window", "now", "age", "hour", "times", "timeout", "when", "check", "code", "weight", "context", "ty", "info", "start", "template", "frequency"], "queue": ["sort", "pen", "profile", "collection", "foo", "sync", "port", "config", "quote", "index", "processor", "next", "process", "force", "pool", "file", "result", "see", "display", "register", "line", "test", "priority", "view", "network", "pause", "complete", "console", "enabled", "client", "layer", "remote", "table", "ue", "store", "delay", "worker", "log", "poll", "cache", "grid", "buf", "list", "delete", "sequence", "history", "email", "pe", "latest", "match", "order", "server", "widget", "oe", "pipe", "stack", "event", "quit", "required", "trace", "wait", "channel", "block", "library", "tree", "message", "menu", "archive", "jobs", "select", "dq", "me", "job", "buffer", "que", "code", "entry", "database", "league", "journal", "limit", "batch", "space", "command", "search", "array", "query"], "head": ["root", "zero", "back", "off", "before", "front", "port", "commit", "skip", "cycle", "index", "min", "next", "thread", "offset", "id", "heads", "row", "loc", "HEAD", "shift", "max", "keep", "link", "host", "lock", "pop", "push", "cmd", "stream", "mean", "foot", "ptr", "then", "set", "post", "draw", "iter", "length", "tag", "must", "master", "stick", "seek", "top", "end", "depth", "block", "go", "wind", "ax", "pos", "th", "window", "count", "height", "check", "Head", "h", "headed", "key", "limit", "header", "start", "stop", "origin", "ck"], "tail": ["iter", "length", "tails", "zero", "speed", "t", "position", "flush", "tag", "capacity", "latest", "left", "max", "port", "count", "last", "out", "loop", "tie", "parent", "buffer", "type", "timeout", "len", "body", "bill", "weight", "pull", "index", "fat", "tailed", "shell", "term", "limit", "next", "lock", "table", "mem", "thread", "start", "stop", "lt", "nl", "lead", "jump", "pool", "chain", "offset", "total", "empty", "ket", "foot", "to", "top", "wife", "end", "number", "then", "leaf", "lift", "list", "poll", "tip", "tree", "slice", "scroll", "ail"], "size": ["fill", "length", "speed", "SIZE", "t", "window", "capacity", "shape", "scale", "max", "member", "count", "height", "city", "age", "timeout", "dimension", "c", "index", "fee", "set", "limit", "table", "start", "Size", "sn", "total", "offset", "ize", "empty", "number", "num", "ze", "z", "g"], "x": ["fx", "px", "xp", "ax", "xx", "xt", " xx", "xi", "lex", "obj", "xa", "xf", "ox", "xc", "y", "v", "ix", "xe", "wx", "rx", "ue", "xb", "mx", "e", "xy", "ex", "tx", "X", "inx", "ret", "in", "ext", "item", "ux", "xs"], "a": ["ar", "aa", "ax", "t", "at", "al", "area", "va", "xa", "A", "fa", "au", "na", "ab", "pa", "oa", "ao", "c", "ba", "an", "am", "y", "ea", "ia", "ta", "ae", "aaa", "p", "ca", "ata", "as", "la", "alpha", "sa", "d", "ma", "ac"], "b": ["bp", "nb", "f", "t", "bb", "bc", "bis", "bf", "ab", "o", "B", "r", "fb", "c", "ba", "h", "eb", "ib", "beta", "y", "v", "bs", "ob", "cb", "j", "l", "rb", "e", "bd", "p", "bar", "be", "bi", "z", "d", "m"], "sc": ["SC", "osc", "pc", "sys", "ctx", "usc", "ic", "sv", "rc", "nc", "bc", "asc", "exp", "sync", "sd", "sh", "sch", "sq", "gc", "disc", "uc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "spec", "cl", "mic", "lc", "irc", "arc", "desc", "dec", "ctl", "mc", "inc", "scl", "ch", "ss", "sci", "dc", "ssl", "cs", "ec", "tc", "Sc"], "n": ["nb", "t", "ln", "nc", "net", "mn", "out", "k", "count", "na", "o", "nan", "ng", "r", "c", "an", "nn", "h", "y", "v", "en", "N", "j", "l", "nu", " N", "nl", "p", "sn", "ns", "nt", "nw", "nr", "num", "z", "d", "m", "ne"], "q": ["iq", "qs", "f", "qt", "ime", "t", "u", "dq", "Q", "eq", "k", "sq", "ms", "quant", "r", "que", "pkg", "qq", "c", "qu", "h", "mu", "y", "v", "s", "gm", "w", "query", "j", "l", "lock", "ue", "qi", "it", "e", "tt", "qa", "p", "ch", "total", "z", "d", "m", "g"], "i": ["iter", "I", "hi", "ci", "ie", "f", "si", "io", "ic", "sim", "us", "ai", "is", "out", "ma", "ind", "o", "ms", "mi", "c", "cli", "y", "im", "init", "info", "gi", "ix", "ui", "j", "qi", "pi", "multi", "it", "my", "ii", "print", "ini", "di", "id", "li", "in", "ti", "bi", "m", "phi", "ip"], "sum": ["success", " SUM", "cost", "si", "sim", "us", "scale", "dim", "fac", "match", "max", "count", "out", "au", " summed", "save", "dev", "weight", "mu", "cum", "fee", "cal", "min", "tu", "average", "summary", "hash", "doc", "sam", "good", "Sum", "ram", "su", "mem", "vol", "ass", "hd", "mean", "total", "hum", "um", "gam", "alpha", "sa", "num", "mary", "m", "g"], "q1": ["iqOne", "qOne", "iq2", "dq0", "qq0", "ueone", "ue2", "qu1", " qOne", " q7", "ue7", "aqone", "ue1", "dq7", " q2", "dq3", "aq1", "qOnce", "quOnce", "iqone", "ueOne", " q3", "dq1", "qqOne", "qq2", "dqOnce", "iq1", "aqOne", " q0", "aq2", "q7", "q2", "q0", "qu2", "dqone", "ue3", " qOnce", "q3", "qu0", "iq0", "qq1", " qone", "qone", "dq2", "dqOne"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int d = sc.nextInt();\\n        int n = sc.nextInt();\\n\\n        int answer = 0;\\n        int d2 = 1;\\n        for(int i = 0;i<d;i++){\\n            d2 *= 100;\\n        }\\n        for(int i = 1;i<=n;i++){\\n                answer = i*d2;\\n        }\\n        if(n == 100){\\n            if(d == 0){\\n                answer+= 1;\\n            }else if(d == 1){\\n                answer+= 100;\\n            }else{\\n                answer+= 10000;\\n            }\\n        }\\n        System.out.println(answer);\\n    }\\n}", "target": "245", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "gc", "sq", "anc", "sec", "sp", "cc", "c", "esc", "isc", "cl", "lc", "ctl", "desc", "screen", "mc", "inc", "scl", "cr", "sel", "ch", "ck", "cgi", "ss", "scan", "conv", "sa", "cs", "tc", "Sc", "sb", "sr"], "d": ["dig", "done", "dd", "f", "did", "div", "dq", "dim", "ad", "du", "sd", "dr", "dk", "dp", "dx", "D", "da", "ord", "data", "debug", "fd", "pd", "cd", "dom", "days", "dm", "dn", "del", "q", "j", "l", "dh", "dec", "den", "dl", "dos", "mind", "p", "dict", "dat", "b", "di", "td", "dt", "ds", "db", "dir", "dist", "dc", "m", "draw", "od"], "n": ["nb", "t", "network", "ln", "nc", "net", "mn", "nan", "na", "o", "x", "no", "size", "r", "on", "len", "c", "an", "nn", "nor", "v", "en", "dn", "non", "N", "j", "l", "nu", "nl", "np", "cn", "p", "sn", "b", "ns", "nd", "nt", "ni", "nr", "num", "z", "m", "ne", "rn"], "answer": ["exit", "answered", "remember", "archive", "sequence", "mate", "zero", "translation", "aq", "position", "equ", "install", "ei", "version", "our", "area", "match", "offer", "turn", "about", "swers", "oa", "response", "know", "ask", "say", "vote", "notice", "ce", "eni", "approximately", "entry", "index", "advert", "address", "echo", "support", "value", "ah", "q", "man", "place", "ve", "distance", "consider", "question", "asm", "description", "ta", "su", "ae", "Answer", "energy", "form", "interpret", "search", "option", "result", "wer", "array", "number", "ee", "see", "be", "cache", " unanswered", "don", "query", "poll", "core", "message"], "d2": ["n3", "d3", "done52", "sd4", " d4", "d52", "D3", "dTwo", "sd02", "sdTwo", "donetwo", "done2", "D4", " d3", "n2", " dtwo", "n02", "sd2", " d52", "d02", "D2", "d4", " d02", "dtwo", "D02", " dTwo", "DTwo", "done02"], "i": ["zi", "iti", "iter", "ie", "ci", "hi", "I", "itime", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "ei", "xi", "us", "inner", "integer", "ski", "is", "ind", "point", "ori", "o", "x", "client", "mi", "cli", "iy", "index", "gi", "im", "init", "ix", "ui", "ri", "ki", "j", "uri", "ik", "qi", "pi", "multi", "ji", "ij", "it", "ii", "ini", "di", "li", "in", "ti", "bi", "m", "iu", "phi", "ip", "asi"]}}
{"code": "import java.io.IOException;\\nimport java.util.Scanner;\\npublic class Main {\\n\tstatic int count;\\n\tpublic static void main(String[] args) throws IOException{\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint x = sc.nextInt();\\n\t\tint[] a = new int[x];\\n\\n\t\tfor(int i=0;i<x;i++) {\\n\t\t\ta[i] = sc.nextInt();\\n\t\t}\\n\\n\t\tbubbleSort(a, x);\\n\t\tshow(a, x, count);\\n\t\tsc.close();\\n\t}\\n\\n\tpublic static void bubbleSort(int[] a, int x) {\\n\t\tboolean flag = true;\\n\t\tcount = 0;\\n\t\twhile(flag) {\\n\t\t\tflag = false;\\n\t\t\tfor(int i=x-1;i>0;i--) {\\n\t\t\t\tif(a[i]<a[i-1]) {\\n\t\t\t\t\tint tmp = a[i];\\n\t\t\t\t\ta[i] = a[i-1];\\n\t\t\t\t\ta[i-1] = tmp;\\n\t\t\t\t\tflag = true;\\n\t\t\t\t\tcount++;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t}\\n\\n\tpublic static void show(int[] a, int x, int count2) {\\n\t\tfor(int i=0;i<x;i++) {\\n\t\t\tSystem.out.print(a[i]);\\n\t\t\tif(i!=x-1) {\\n\t\t\t\tSystem.out.print(\" \");\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println();\\n\t\tSystem.out.println(count);\\n\t}\\n}\\n", "target": "170", "substitutes": {"count": ["found", "report", "sequence", "length", "history", "status", "counter", "Count", "ct", "ctx", "t", "window", "th", " counter", "hold", "max", "gc", "ind", "stat", "sum", "find", "add", "type", "cond", "size", "score", "cont", "code", "c", "n", "check", "h", "page", "index", "ount", " number", " Count", "v", "info", "state", "set", " c", "batch", "process", "current", "print", "pool", "p", "cmd", " counts", "total", "result", "nt", "number", "num", "log", "trace", "cache", "z", "list", "common", "cast", "call"], "sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "Sync", "sh", "gc", "sq", "sch", "sub", "scrib", "uc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "ner", "Sc", "arc", "ctl", "mc", "nl", "scl", "cr", "capt", "ch", "system", "st", "scan", "conv", "cs", "ec", "tc", "ss", "sb", "se"], "x": ["fx", "length", "px", "xp", "xml", "f", "ctx", "ct", "ax", "t", "xt", "xx", "at", " cx", "xi", "lex", "xf", "max", "dx", "ox", "k", "o", "size", "r", "on", "c", "n", "h", "index", "y", "v", "xc", "s", "ix", "w", "xe", "j", "l", "wx", "rx", "mx", "e", "p", "xy", "xes", "ex", "tx", "X", "inx", "id", "width", "number", "xxx", "z", "act", "m", "xs"], "a": ["aux", "go", "aw", "ed", "ar", "aa", "ack", "f", "era", "at", "t", "u", "ai", "foo", "area", "va", "all", "A", "fa", "da", "au", "na", "ab", "o", "oa", "d", "ao", "an", "ba", "am", "c", "h", "arr", "ap", "v", "app", "s", "m", "ea", "w", "ga", "eas", "ace", "ia", "j", "sta", "l", "ae", "aaa", "e", "p", "b", "ca", "ata", "as", "la", "att", "parts", "array", "sa", "alpha", "act", "ma", "g", "ac"], "i": ["io", "us", "o", "iu", "php", "index", "y", "ix", "l", "you", "pi", "ii", "gu", "id", "fi", "ti", "bi", "fire", "phi", "g", "asi", "ie", "hi", "ci", "f", "xi", "ei", "ori", "client", "cli", "init", "s", "ui", "j", "uri", "qi", "multi", "my", "chain", "jj", "ini", "ni", "set", "m", "iter", "span", "iso", "si", "ic", "sim", "is", "ind", "mi", "err", "gi", "ji", "it", "di", "ims", "zi", "iq", "I", "ami", "\u0438", "u", "ai", "me", "iy", "im", "v", "info", "q", "ri", "ki", "batch", "this", "ity", "ij", "cgi", "li", "point", "ip"], "flag": ["bool", "level", "status", "f", "func", "lv", "FLAG", "tag", "alt", "sync", "hold", "match", "card", "button", "link", "cond", "buffer", "bit", "stage", "Flag", "check", "len", "prop", "tail", "flags", "state", "load", "true", "lag", "lock", "ag", "mask", "bug", "store", " Flag", "print", "cmd", "option", "ret", "fail", "cloud", "field", "event", "leaf", "ld", "log", "wait", "set", "list", "fire", "bag"], "tmp": ["mb", "cmp", "clip", "nb", "cookie", "ctx", "t", "img", "obj", "amp", "mp", "mut", "ind", "nom", "timeout", "sp", "pkg", "attr", "lib", "emp", "orig", "gm", "prefix", "term", "j", "perm", "prev", "buff", "np", "acc", "tt", "etc", "pre", "txt", "td", "ret", "mk", "db", "yy", "cp", "temp", "cache", "stuff", "m", "tc", "test"], "count2": ["Counts", "c3", "c1", " count1", " counts", "Count1", "count1", "c2", " count3", "count3", "counts", "Count3", "cs", "Count2"]}}
{"code": "import java.io.*;\\n \\npublic class Main{\\n    public static void main(String[] args){\\n        BufferedReader reader=new BufferedReader(new InputStreamReader(System.in));\\n        String s,t,u;\\n        int a,b,hako;\\n        hako=0;\\n        String[] abc=new String[2];\\n        int[] xyz=new int[2];\\n        try{\\n                s=reader.readLine();\\n                t=reader.readLine();\\n                a=Integer.parseInt(s);\\n                b=Integer.parseInt(t);\\n                int[] x=new int[a+1];\\n                x[0]=0;\\n                for(int j=1;j<(a+1);j++){\\n                    x[j]=j;\\n                }\\n                for(int i=0;i<b;i++){\\n                    u=reader.readLine();\\n                    abc=u.split(\",\");\\n                    for(int k=0;k<2;k++){\\n                        xyz[k]=Integer.parseInt(abc[k]);\\n                    }\\n                    hako=x[xyz[0]];;\\n                    x[xyz[0]]=x[xyz[1]];\\n                    x[xyz[1]]=hako;\\n                }\\n                for(int l=1;l<(a+1);l++){\\n                    System.out.println(x[l]);\\n                }\\n        }catch(IOException e){\\n            System.out.println(e);\\n        }\\n    }\\n}", "target": "156", "substitutes": {"reader": ["ocker", "writer", "iter", "open", "length", "history", "upper", "iterator", "rc", "inner", "anger", "ro", "er", "linger", "client", "buffer", "r", "RW", "rr", "redo", "read", "entry", "per", "parser", "ri", "ner", "uri", "rer", "reading", "rar", "handler", "driver", "stream", "rt", "Reader", "url", "runner", "older", "row", "rl", "rot", "rd", "address", "loader"], "s": ["sw", "qs", "hs", "sql", "f", "ats", "js", "sts", "sv", "is", "sq", "S", "ms", "ps", "r", "sb", "less", "c", "n", "h", "y", "v", "bs", "w", "su", "gs", "e", "p", "ns", "rs", "st", "ls", "as", "sa", "cs", "m", "ss", "g", "ts"], "t": ["te", "tg", "f", "at", "tk", "tz", "o", "tp", "c", "tr", "h", "ut", "pt", "y", "tw", "ty", "tu", "tc", "ta", "tt", "e", "it", "ot", "p", "tm", "st", "td", "rt", "dt", "T", "temp", "z", "tf", "g", "ts"], "u": ["uf", "cu", "ru", "ul", "lu", "us", "au", "o", "uc", "ur", "uv", "up", "pu", "hu", "uj", "h", "ut", "mu", "v", "tu", "q", "ui", "bo", "U", "ua", "uri", "nu", "ue", "ud", "su", "e", "uid", "uu", "util", "um", "ou", "un", "bu", "fu", "iu", "ux"], "a": [" ba", "span", "aa", "f", "ax", "at", "al", "ai", "area", "wa", "va", "all", "A", "au", "na", "pa", "ab", "o", "oa", "ao", "ba", "an", "am", "n", "c", "index", "y", " at", "ga", "ia", "ta", "aj", "ae", "aaa", "pi", "e", "p", "aka", "ca", "as", "alpha", "la", "sa", "act", "ma", "g", "ac"], "b": ["nb", "f", "bb", "bc", "base", "bis", "ab", "B", "r", "fb", "ba", "n", "c", "eb", "ib", "y", "v", "bs", "ob", "m", "bo", "cb", "rb", "e", "br", "db", "be", "bi", "z", "bu", "sb"], "hako": [" hko", "chako", "ohbo", " hzo", "hiako", "hanta", "pako", "ohambo", "mzo", "hibo", "Hpo", "mbo", "mako", " hanta", "mko", "hiko", "chbo", " hazo", "mazo", "ohpo", "hpo", "hko", "hzo", "hizo", "Hbo", "ohazo", "pambo", "manta", " hbo", "pazo", "ohanta", "hambo", "hazo", " hpo", " hambo", "Hako", "pbo", "ohako", "hbo", "chazo", "chanta", "Hanta"], "abc": ["exc", "aux", "canon", "pb", "tab", "auc", "obs", "nc", "ox", "au", "abs", "fab", "ab", "icc", "oc", "fc", "anc", "aus", "acs", "fb", "c", "ABC", "abb", "xc", "conf", "bs", "ob", "prefix", "lc", "cb", "lab", "arc", "rb", "enc", "acc", "apa", "coll", "etc", "frac", "bank", "util", "hab", "dc", "erb", "abi", "cs", "hz", "roc", "unc", "ac"], "xyz": ["oxyzi", "yyiz", "pyz", "wyz", "pxzi", "fyZ", "axyz", "myz", "XYZ", "XYzi", "wyiz", "xyZ", "yxiz", "xyj", "xyzes", "xycz", "oxycz", "axyzo", "yyy", "yyz", "wyzi", "xyy", "pyj", "oxyiz", "pyzi", "foiz", "skyl", "fyz", "eyzes", "myl", "eyzo", "pyiz", "axyl", "fycz", "skyz", "XYcz", "yxz", "xyzi", "pxz", "XYy", "xyiz", "myiz", "oxyl", "axyzes", "wyj", "yyzi", "XYz", "oxyzes", "oxyzo", "yxzi", "pxiz", "foz", "XYiz", "myzi", "xyl", "xyzo", "yxj", "eyl", "oxyz", "eyz", "skyiz", "oxyZ", "fyzi", "oxyy", "fozi", "skyzi"], "x": ["fx", "px", "xml", "xp", "f", "xd", "ctx", "ax", "xx", "xt", "xi", "xf", "xa", "dx", "ox", "data", "o", "g", "c", "n", "h", "zx", "index", "php", "xc", "y", "v", "ix", "q", "w", "xe", "wx", "rx", "mx", "e", "p", "xy", "xes", "ex", "tx", "X", "z", "m", "ux", "xs"], "j": ["bj", "Ja", "off", "jl", "js", "obj", "us", "fr", "oj", "job", "o", "z", "son", "uj", "n", "jc", "pt", "y", "im", "kid", "by", "v", "q", "dj", "json", "pr", "next", "aj", "jp", "jo", "jump", "ji", "ij", "ph", "it", "br", "J", "p", "jj", "ja", "kj", "m", "og", "jas", "g", "ion"], "i": ["I", "ie", "ci", "f", "si", "ic", "ai", "xi", "is", "ind", "o", "mi", "n", "y", "im", "gi", "v", "ix", "q", "ui", "iii", "info", "init", "ri", "ki", "ia", "qi", "pi", "ji", "ij", "it", "ii", "p", "di", "id", "li", "ti", "z", "m", "iu", "phi", "g", "ip"], "k": ["kn", "ick", "wk", "kan", "kh", "ak", "ka", "dk", "kk", "unk", "UK", "ek", "sk", "ask", "ks", "ijk", "ke", "key", "kt", "kid", "kind", "q", "ko", "ki", "kw", "ik", "isk", "ark", "ku", "kl", "K", "uk", "ok", "ck", "kr", "mk", "kj", "km", "g", "tk"], "l": ["yl", "f", "sl", "vl", "ul", "lv", "jl", "ln", "lu", "L", "al", "lf", "ll", "lay", "o", "len", "ml", "lin", "h", "lo", "lb", "pl", "lc", "dl", "kl", "nl", "lt", "ly", "il", "le", "ls", "fl", "li", "ld", "log", "list", "z", "lp", "line", "gl", "el", "ell"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tString[] info = new Scanner(System.in).nextLine().split(\" \");\\n\t\tInteger min=Integer.valueOf(info[0]);\\n\t\tInteger max=Integer.valueOf(info[1]);\\n\t\tint count=0;\\n\t\tfor(Integer i=min;i<=max;i++) {\\n\t\t\tchar[] numlist=i.toString().toCharArray();\\n\t\t\tif(numlist[0]==numlist[4]&&numlist[1]==numlist[3])\\n\t\t\t\tcount++;\\n\t\t}\\n\t\tSystem.out.println(count);\\n\t}\\n}", "target": "104", "substitutes": {"info": ["report", "sort", "iter", "isu", "def", "success", "history", "status", "join", "show", "version", "ro", "now", "about", "stat", "information", "sum", "fo", "data", "parse", "check", "index", "os", "init", "conf", "where", "det", "json", "Info", "good", "INFO", "recent", "print", "hand", "total", "rt", "http", "id", "inf", "news", "work", "list", "help", "follow", "details"], "min": ["sort", "first", "little", "range", "window", "from", "net", "model", "sol", "initial", "stat", "sum", "parent", "mi", "body", "Min", "spec", "init", "MIN", "low", "man", "small", "lower", "m", "value", "local", "bot", "mel", "start", "req", "lt", "minimum", "st", "pre", "mean", "mins", "rel", "minute", "in", "begin", "mod", "default"], "max": ["MAX", "upper", "auto", "ax", "range", "view", "window", "scale", "exp", "ro", "Max", "with", "last", "now", "ma", "sum", "parent", "x", "up", "full", "maximum", "med", "prime", "box", "flow", "mod", "rest", "force", "res", "mx", "can", "gt", "ex", "ca", "bar", "end", "act", "work"], "count": ["found", "report", "length", "flag", "status", "counter", "Count", "nb", "const", "ct", "ind", "sum", "find", "ctr", "add", "size", "must", "z", "check", "c", "n", "code", "index", "ount", "summary", "current", "amount", "print", "coll", "total", "result", "nt", "number", "num", "trace", "list", "set", "cache", "val", "cell", "test", "scroll", "call"], "i": ["iq", "I", "ie", "ci", "f", "si", "ic", "sim", "u", "oi", "ai", "xi", "t", "is", "ind", "x", "o", "ms", "client", "mi", "c", "n", "v", "init", "y", "im", "ix", "q", "ui", "ki", "j", "l", "a", "char", "qi", "pi", "multi", "ij", "it", "ii", "p", "di", "ni", "id", "to", "li", "in", "ti", "bi", "m", "iu", "phi", "ip"], "numlist": ["temlat", "NUMlisted", "uml", "umList", "notelist", "namlists", "numelist", "strarray", "numarray", "umname", "namlist", "drawlat", "umlist", "Numstr", "umstr", "tempair", "Numlists", "numList", " numlat", " numl", "numstr", "numlists", " numlists", "nampair", "sumlat", "temlists", "numberList", "notelat", "numl", "noteelist", "umlists", "Numlist", "sumstr", "NUMlist", "temlist", " numlisted", "umarray", "numpair", "notestr", "numberlist", "NUMarray", "namlat", "sumelist", " numname", " numarray", "Numarray", "sumlist", "numlisted", " numelist", " numstr", "numlat", "drawpair", "numname", " numList", "strlisted", "numberl", "NUMelist", "strelist", "drawlist", "drawlists", "numbername", "strlist"]}}
{"code": "import java.util.Scanner;\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int a1[] = new int[n+2];\\n        int a2[] = new int[n+1];\\n        a1[0] = 0;\\n        a2[0] = 0;\\n        int sum = 0;\\n        int subsum = 0;\\n        int sum1 = 0;\\n        int sum2 = 0;\\n        for(int i=1;i<=n;i++){\\n            a1[i] = sc.nextInt();\\n        }\\n        sum1 = a1[1];\\n        a1[n+1] = 0;\\n        for(int i=1;i<=n;i++){\\n            a2[i] = sc.nextInt();\\n            sum2 += a2[i];\\n        }\\n        for(int i=1;i<=n;i++){\\n            subsum = sum1+sum2;\\n            if(subsum>sum){\\n                sum = subsum;\\n            }\\n            sum1 += a1[i+1];\\n            sum2 -= a2[i];\\n        }\\n        System.out.println(sum);\\n    }\\n}\\n", "target": "140", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "psc", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sch", "sq", "ng", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "irc", "Sc", "desc", "ctl", "mc", "inc", "scl", "cr", "ch", "ck", "sci", "conv", "dc", "cle", "cs", "tc", "ss", "sb", "scan"], "n": ["nm", "nb", "network", "t", "u", "ln", "nc", "all", "net", "ll", "comm", "mn", "count", "nan", "na", "x", "o", "names", "ng", "no", "r", "on", "and", "len", "g", "c", "an", "nn", "name", "y", "v", "en", "local", "N", "j", "yes", "l", "a", "nu", " N", "np", "nl", "after", "br", "cn", "norm", "sn", "p", "b", "ns", "nt", "number", "num", "none", "z", "d", "m", "ne"], "a1": ["A0", " a_", "A1", "a0", "sa8", "A3", "go9", "go11", "alphaOne", "ga3", " a001", "aOne", "a11", "aa1", "a_", "go1", "ga11", "ga2", "A_", "a3", " a4", "sa2", "go2", "sa9", "a001", "A2", "aa001", "aa4", "AOne", "alpha2", "aa0", "sa0", "a9", "A8", "sa1", "alpha0", "ga9", " a3", "sa11", "va001", " a8", " aOne", "ga1", "a8", "a4", " a0", "aa2", "aa8", "alpha1", "va2", "va1", "va4", "ga_"], "a2": ["ao2", "matwo", "sha1", "shatwo", "ma1", "sha2", "o2", "a5", "atwo", "v7", "e1", "e4", "aa1", "o1", " a4", "ga2", "a3", "otwo", "ma8", "ma256", "sa2", "a7", "e2", " a5", " a256", "aa256", "satwo", "vtwo", "sa1", "a256", " a3", "etwo", "gatwo", "sha3", "ma2", "v2", " a8", "ao1", "ao4", "ga5", "a8", "ga7", "a4", " a7", "aotwo", "ma4", "aa2", "sa3", " atwo", "aa8", "v5", "o4"], "sum": ["cmp", "sort", "report", "mix", "zero", "hist", "cos", " SUM", "mass", "si", "div", "sim", "ul", "us", "shift", "scale", "fac", "match", "max", "count", "ash", "out", "size", "score", "unit", "h", "cum", "med", "tail", "mu", "index", "v", "min", "cal", "conf", "umm", "average", "summary", "hash", "sam", "doc", "Sum", "su", "mem", "vol", "acc", "ass", "density", "mean", "total", "result", "um", "sa", "num", "cache", "set", "sign", "scan"], "subsum": [" subcal", "relum", "subsim", "diffum", "ubnum", "condnum", " subsummary", "relsum", "modsum", "subcount", "subcal", "subscan", "subum", "ubcal", "modnum", "subout", "condsim", "ubcount", " subout", "ubsummary", "ubsim", "precount", "condcount", " subscan", "diffout", "relsummary", "subnum", "presum", "subsummary", "ubout", " subsim", "condsum", " subcount", "prenum", "ubum", "ubscan", " subum", "diffsum", "diffcal", "modcal", "modcount", "relscan", " subnum", "precal", "ubsum"], "sum1": ["sam1", "samone", "summary7", " sum10", "sumone", "um2", "sumOne", "mean2", " sum001", "norm10", "sum01", "umOne", "aOne", " sumOne", "um001", " sumone", "sum001", " sum7", "norm1", "meanOne", "sum10", "um1", "summary2", "a01", "um01", "sum7", "mean1", "summary1", "sam2", "summaryone", "sam7", "um10", " sum01", "norm001", "norm2", "mean01"], "sum2": ["sam1", "status2", "sum22", "sum6", "um2", " sum0", " sum6", "sum4", "sumtwo", " sum02", "um22", "sam6", "Sum02", "status5", "um02", "mem02", "mem6", "um5", "statustwo", "mem2", "status4", " sumtwo", " sum22", "um1", "a22", " sum4", " sum5", "sum5", "a02", "sam2", "sam02", "sum0", "um0", "Sum0", "mem1", "Sum2", "sum02", "um4", "umtwo"], "i": ["io", "us", "iu", "y", "ix", "l", "pi", "ii", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "ei", "xi", "ger", "dr", "base", "ori", "client", "cli", "init", "ui", "j", "uri", "qi", "multi", "chain", "ini", "ni", "set", "iter", "si", "ic", "sim", "oi", "is", "ind", "mi", "err", "gi", "ji", "it", "di", "to", "ims", "slice", "zi", "go", "I", "ami", "\u0438", "ai", "me", "mac", "iy", "key", "im", "info", "q", "this", "ri", "batch", "ki", "ity", "mc", "ij", "PI", "li", "point", "ip"]}}
{"code": "import java.io.*;\\n\\npublic class Main{\\n    public static void main(String[]args)throws IOException{\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        StringBuilder sb = new StringBuilder();\\n\\n        int count = Integer.parseInt(br.readLine());\\n        String[] str = br.readLine().split(\" \");\\n        int[] num = new int[count];\\n        for(int i=0; i<count; i++){\\n            num[i] = Integer.parseInt(str[i]);\\n        }\\n\\n        for(int i=0; i < count/2; i++){\\n            int k = count - (i+1);\\n            int swp = num[i];\\n            num[i] = num[k];\\n            num[k] = swp;\\n        }\\n        for(int i=0; i<count-1; i++){\\n            sb.append(num[i]).append(\" \");\\n        }\\n        sb.append(num[count-1]);\\n        System.out.println(sb);\\n\\n    }\\n}", "target": "79", "substitutes": {"br": ["bp", "bj", "bb", "bn", "bm", "bc", "bh", "bridge", "dr", "bro", "bl", "bf", "bg", "ctr", "gr", "r", "rem", "tr", "shr", "bs", "lr", "yr", "cb", "bt", "mr", "Br", "pr", "rb", "cr", "bd", "ch", "kr", "b", "BR", "db", "browser", "hr", "fr", "bi", "ber", "wr", "vr"], "sb": ["sth", "sg", "bps", "nb", "sql", "pb", "bj", "si", "bash", "bb", "sf", "sv", "bh", "bis", "bg", "gc", "sq", "ub", "sp", "rob", "wb", "umb", "zb", "lb", "eb", "kb", "ib", "SB", "bs", " SB", "bsp", "usb", "cb", "bt", "sbm", "rb", "xb", "jp", "gb", "sn", "b", "gob", "erb", "sa", "ssl", "stab", "orb", "buf", "lp", "rub"], "count": ["OUNT", "found", "span", "length", "history", "level", "counter", "nb", "const", "Count", "ct", "ctx", "C", "range", "all", "hold", "max", "base", "gc", "ind", "now", "sum", "find", "height", "ctr", "type", "cond", "size", "col", "cycle", "len", "code", "c", "n", "check", "h", "index", "ount", "name", "cast", "q", "batch", "process", "current", "handle", "amount", "ch", "p", "chain", "total", "cm", "empty", "nt", "more", "cloud", "width", "top", "result", "number", "country", "list", "z", "cache", "common", "cell", "mount"], "str": ["sys", "sl", "div", "sts", "re", "exp", "dr", "rip", "out", "inst", "stri", "gr", "r", "sec", "tr", "cur", "arr", "spec", "s", "del", "Str", "STR", "char", "string", "enc", "vol", "text", "cr", "chain", "form", "st", "dat", "txt", "stack", "att", "fr", "split", "sc", "ts"], "num": ["note", "ver", "om", "nm", "zero", "mon", "nb", "snap", "prim", "div", "img", "th", "bn", "dim", "coord", "net", "Num", "node", "comm", "mn", "stat", "sum", "na", "no", "add", "find", "buffer", "save", "alph", "col", "rem", "nam", "code", "n", "pn", "mu", "index", "nn", "mat", "im", "NUM", "cal", "tu", "con", "info", "set", "rm", "sam", "dec", "nu", "mem", "np", "multi", "mark", "form", "result", "nt", "um", "number", "cache", "nom", "buf", "val", "rub"], "i": ["status", "io", "umi", "ski", "o", "iu", "n", "ir", "y", "ix", "iii", "l", "pi", "ii", "id", "ti", "bi", "phi", "g", "ie", "hi", "ci", "ed", "ei", "xi", "ori", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "chain", "ini", "ion", "si", "ic", "sim", "oi", "inner", "mm", "is", "ind", "mi", "gi", "ji", "it", "p", "di", "to", "ims", "zi", "iq", "I", "ami", "\u0438", "ai", "me", "iy", "im", "v", "info", "q", "wi", "this", "ri", "batch", "ia", "ki", "ity", "ij", "li", " I", "point", "ip"], "k": ["kn", "wk", "kan", "kh", "ak", "ka", "dk", "kk", "unk", "kj", "ek", "sk", "ks", "ke", "key", "kid", "kt", "kind", "q", "ko", "ki", "j", "kw", "ik", "isk", "ku", "kl", "K", "uk", "ok", "ck", "p", "kr", "mk", "z", "km", "tk"], "swp": ["hwip", "Swop", "SWop", "swP", "SWd", "Swd", "Swp", " swd", "swop", "swd", "Swpa", " swpa", "SWp", " swop", "Swip", " swP", " swip", "swpa", "swip", "hwp", "SwP", "SWpa", "hwP", "hwpa"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.lang.reflect.Array;\\nimport java.util.Arrays;\\nimport java.util.StringTokenizer;\\nimport java.io.IOException;\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream    inputStream    = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader    in                      = new InputReader(inputStream);\\n        PrintWriter      out                    = new PrintWriter(outputStream);\\n        Task                 solver               = new Task();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class Task {\\n    \tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\\n    \t\tint[] A = new int[3];\\n    \t\tA[0] = in.nextInt();\\n    \t\tA[1] = in.nextInt();\\n    \t\tA[2] = in.nextInt();\\n    \t\tArrays.sort(A);\\n    \t\tint total = Math.abs(A[0] - A[1]);\\n    \t\ttotal += Math.abs(A[1] - A[2]);\\n    \t\tout.println(total);\\n    \t}\\n    }\\n\\n    static class InputReader {\\n        public BufferedReader reader;\\n        public StringTokenizer tokenizer;\\n\\n        public InputReader(InputStream stream) {\\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\\n            tokenizer = null;\\n        }\\n\\n        public String next() {\\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n                try {\\n                    tokenizer = new StringTokenizer(reader.readLine());\\n                } catch (IOException e) {\\n                    throw new RuntimeException(e);\\n                }\\n            }\\n            return tokenizer.nextToken();\\n        }\\n\\n        public int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n    }\\n}\\n\\n", "target": "247", "substitutes": {"inputStream": ["helloSteam", " inputSteam", "activeSocket", "inputStreamer", "inputFile", "sourceSteam", "outputSocket", "activeSteam", "helloSocket", "helloStream", " inputSocket", "helloStreamer", "activeStream", "activeStreamer", "sourceSocket", "inputSocket", "outputSteam", "sourceStream", "sourceFile", "outputFile", "inputSteam", "outputStreamer", " inputFile"], "outputStream": ["OutputSteam", "outStream", "OutputSet", "outputForm", "displayStream", "connectionstream", "connectionStream", "outstream", "OutputForm", "writeStreamer", "outputstream", "connectionSteam", " outputSet", " outputForm", "writestream", "displaySteam", "writeSteam", "outputSteam", "OutputStream", " outputSteam", "connectionStreamer", "outputSet", "outSteam", "displayForm", "outStreamer", "displaySet", "writeStream", "outputStreamer"], "in": ["iter", "inside", "env", "socket", "din", "io", "serv", "IN", "ic", "inner", "inn", "from", "bin", "net", "er", "is", "ind", "i", "ins", "add", "conn", "r", "config", "on", "rin", "err", "up", "mi", "context", "source", "h", "isin", "by", "init", "conf", "info", "con", "per", "local", "gin", "doc", "l", "cin", "current", "In", "sin", "inc", "mc", "it", "input", "form", "run", "st", "file", "ini", "rt", "null", "win", "cm", "to", "inf", "vin", "log", "ze", "kin", "el", "get", "scan"], "out": ["writer", "report", "sys", "OUT", "io", "t", "at", "window", "flush", "inner", "obj", "net", "er", "write", "gc", "outs", "o", "client", "conn", "r", "err", "up", "n", "name", "os", "server", "OU", "s", "aos", "output", "w", "set", "Out", "this", "l", "outer", "table", "co", "current", "screen", "res", "it", "print", "pool", "p", "run", "ch", "ex", "result", "null", "nt", "user", "to", "ou", "log", "temp", "list", "cache"], "solver": ["Solution", "csolution", "resolver", "resorter", "sol", "ssolve", "csorter", "csolver", "csolve", "ssolver", " solution", "Sol", "ssolution", "ssol", "Solve", "Sorter", "solution", "solve", "resolution", " solve", "sorter", "Solver", "resolve", " sol"], "testNumber": ["testNumbers", "TestCounter", "TestNumbers", "testNo", "caseNo", "testCounter", "caseNumbers", " testNumbers", " testCounter", "TestNumber", "caseCounter", " testNo", "TestNo", "caseNumber"], "A": ["Alpha", "MA", "I", "R", "AF", "GA", "AN", "C", "AE", "Area", "Action", "Y", "Some", "AV", "Array", "ARC", "TA", "M", "Ar", "AA", "AP", "The", "ACT", "SA", "S", "B", "ACC", "HA", "ACE", "ONE", "V", "P", "At", "AU", "IA", "WA", "And", "One", "AB", "AC", "EA", "AM", "JA", "NA", "BA", "G", "Answer", "AR", "PA", "These", "New", "H", "An", "Other", "Bar", "As", "This", "T", "Args", "All", "RAM", "AT", "LA", "Address", "CA"], "total": ["stable", "trans", "note", "sequence", "length", "done", "relative", "otal", "translation", "t", "scale", "complete", "all", "net", " TOTAL", "human", "TA", "max", "count", "last", " Total", "sum", "no", "buffer", "eta", "full", "database", "equal", "value", "goal", "tax", "info", "valid", "this", "serial", "unique", "summary", "ta", "table", "current", "meta", "system", "balance", "null", "template", "result", "Total", "to", "number", "shared", "OTAL", "quant", "percent"], "reader": ["writer", "iter", "builder", "upper", "window", "iterator", "rc", "inner", " parser", "er", "dr", "linger", "data", "buffer", "client", "r", "rr", "context", "read", "wrapper", "timer", " writer", "river", "parser", " viewer", "ner", "rer", "rx", "rar", "oder", "keeper", "input", "handler", "driver", "worker", "file", "controller", "Reader", "older", "runner", "user", "browser", "row", "rl", " readers", "loader", "handle"], "tokenizer": ["terminener", "Tokenizer", "okenifer", "serialifier", "serialzer", "Tokenize", "tokenifer", "tokenize", "callizer", "callize", " tokenifier", " tokenizers", "serializer", "okener", "okenization", "okenzer", "okenator", "tokenifier", "serialize", " tokenzer", "okenifier", "tokenization", " tokenener", "tokenizers", "callifier", "Tokenization", " tokenization", "terminizer", "terminifier", "serializers", "nullerer", " tokenifer", " tokenator", "nullize", "Tokenzer", "nullizer", "callerer", "serialator", " tokenize", "nullifier", "okenizer", "Tokenifier", "serialer", "okenerer", "tokenator", "Tokenator", "okenener", "tokener", "okenize", "tokenerer", "terminifer", " tokener", "Tokenizers", "tokenener", "tokenzer", "Tokener"], "stream": ["closure", "length", "history", "path", "Stream", "socket", "io", "network", "window", "iterator", "ream", "console", "phrase", "test", "data", "buffer", "client", "body", "progress", "context", "source", "read", "down", "resource", "wrapper", "output", "sample", "input", "continue", "pipe", "system", "form", "pool", "zip", "file", "null", "stack", "row", "log", "channel", "message", "handle"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main (String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint nam = sc.nextInt();\\n\t\tint nam2 = sc.nextInt();\\n\t\t\\n\t\tint ans = -1;\\n\t\tif(nam>=1 && nam<=9){\\n\t\t    if(nam2>=1 && nam2<=9){\\n\t\t        ans = nam * nam2;\\n\t\t    }\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(ans);\\n\t}\\n}\\n", "target": "58", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "sub", "scrib", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "ctl", "desc", "screen", "mc", "inc", "acc", "scl", "cr", " scr", "ch", "capt", "cgi", "conv", "cle", "cs", "tc", "Sc", "scan"], "nam": ["ran", "hn", "sama", "nm", " Nam", "mon", "wn", "snap", "won", "san", "tim", "sim", "pac", "inn", "wal", "al", "ann", "dim", "mn", "cam", "filename", "nan", "na", "sum", "names", "hom", "tha", "asha", "fam", "typ", "amin", " nem", "n", "am", "mal", "nn", "index", "nick", "name", "NUM", "dn", "man", "asm", "rm", "wh", "sam", "nu", "ku", "ram", "mem", "acc", "wid", "cn", "ny", "aka", "anon", "win", "ns", "nav", "nt", "num", "sit", "nom", "una"], "nam2": ["sam1", "lam2", "lam256", "nan256", "nm3", "tha12", "lam3", "iam2", "namTwo", "iam6", "nm12", "num02", "numalt", "nam3", "num3", "nam1", "ramalt", "tha02", "tha2", "nm1", "nam02", "nm6", "iam3", "iam256", "nm256", "num256", "tha1", "nm2", "nan2", "ram2", "nm02", "sam12", "nam256", "nmalt", "nan02", "sam2", "sam02", "nam6", "num2", "nam12", "ram02", "nmTwo", "lam6", "numTwo", "nanTwo", "namalt", "ram3"], "ans": ["ANS", "orts", "anks", "offs", "AN", "ats", "ums", "eps", "ads", "eds", "aps", "ann", "urs", "ants", "ins", " means", "uns", "outs", "ms", "aus", "an", "ians", "ks", "unes", "ups", "angs", "lan", "flags", "s", "amps", "rans", "posts", "olds", "asks", "sam", "anas", "ens", "cons", "ars", "uploads", "can", "missions", "ids", "ns", "anon", "as", "cs", "pan", "arms", "arts", "ents"]}}
{"code": "import java.io.*;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws IOException {\\n\t// write your code here\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        PrintWriter pw =new PrintWriter(new OutputStreamWriter(System.out));\\n        char n = br.readLine().charAt(0);\\n        pw.println((char)(((int)n)+1));pw.flush();\\n    }\\n}\\n", "target": "150", "substitutes": {}}
{"code": "import java.util.*;\\n \\nclass Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n      \tint t = 0;\\n      \tint x = 0;\\n      \tint y = 0;\\n \\n      for (int i=0; i<N; i++) {\\n        int T = sc.nextInt();\\n        int X = sc.nextInt();\\n        int Y = sc.nextInt();\\n        \\n        int dt = T - t;\\n        int dist = Math.abs(X - x) + Math.abs(Y - y);\\n        if ((dist > dt) || ((dist - dt) % 2 != 0)) {\\n          System.out.println(\"No\");\\n          return;\\n        }\\n        //\u79fb\u52d5\u3057\u305f\u5834\u6240\u3092\u8a2d\u5b9a\\n        t = T;\\n        x = X;\\n        y = Y;\\n      }\\n      System.out.println(\"Yes\");\\n    }\\n}", "target": "221", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "pb", "ctx", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "uc", "anc", "fc", "sec", "sp", "cc", "c", "esc", "isc", "cl", "ko", "lc", "irc", " Sc", "ctl", "desc", "ctrl", "mc", "inc", "scl", "cr", "ch", "system", "ck", "st", "cgi", "ss", "sci", "conv", "dc", "cle", "cs", "tc", "Sc", "scan"], "N": ["I", "NN", "NM", "R", "NC", "C", "ND", "L", "NO", "Num", "NT", "M", "D", "S", "NG", "V", "n", "NR", "Ni", "NL", "Number", "NB", "NP", "TN", "NI", "GN", "NA", "NH", "NS", "SN", "Ns", "No", "NE"], "t": ["te", "f", "ct", "at", "TS", "TA", "test", "o", "type", "tp", "r", "typ", "P", "c", "n", "tr", "v", "ty", "j", "l", "ta", "table", "tt", "ot", "Type", "p", "txt", "total", "d", "m", "tc", "TM", "g", "ts"], "x": ["fx", "px", "path", "xml", "xp", "ctx", "ax", "at", "xt", "xx", "xi", "xf", "left", "dx", "ox", "client", "ix", "w", "l", "XP", "wx", "rx", "lat", "mx", "p", "xy", "tx", "ex", "z", "m", "ux", "xs"], "y": ["ye", "cy", "py", "sys", "hot", "umpy", "content", "ies", "year", "gy", "client", "sy", "ym", "z", "ys", "n", "key", "yt", "v", "ty", "ry", "yr", "ey", "my", "ot", "p", "xy", "ny", "axy", "b", "ch", "yy", "yo", "ip"], "i": ["iq", "I", "hi", "ci", "ie", "si", "io", "ic", "sim", "ai", "xi", "us", "me", "is", "out", "ind", "o", "mi", "sp", "n", "index", "im", "init", "v", "gi", "q", "info", "ui", "ix", "j", "batch", "qi", "pi", "multi", "it", "ii", "chain", "gu", "ini", "di", "id", "li", "ti", "bi", "set", "m", "phi", "g", "ip"], "T": ["E", "I", "TX", "PT", "R", "CT", "C", "L", "TS", "TY", "TT", "Q", "Z", "TA", "M", "D", "S", "B", "F", "P", "V", "TC", "W", "VT", "TN", "U", "K", "G", "J", "H", "TI", "TP"], "X": ["E", "XX", "I", "TX", "R", "CT", "L", "TY", "Q", "Z", "A", "M", "XT", "Tx", "S", "P", "V", "XY", "W", "ix", "U", "XL", "XP", "rx", "CH", "H", "DX", "Ex", "UX", "IX", "RY", "EX", "FX"], "Y": ["E", "I", "YC", "R", "L", "Py", "HY", "KY", "TY", "Q", "Z", "EY", "M", "My", "B", "P", "V", "YY", "SY", "XY", "W", "NY", "Height", "YA", "CH", "TH", "G", "MX", "J", "H", "MY", "Year", "RY"], "dt": ["mt", "DT", "dd", "qt", "ct", "dq", "sd", "dp", "dx", "D", "deb", "tz", "tf", "pd", "tp", "cd", "md", "df", "dm", "mat", "kt", "DM", "dy", "dn", "det", "distance", "dl", "dh", "ta", "elt", "diff", "tt", "lt", "tm", "MT", "gt", "dat", "td", "rt", "tif", "ds", "db", "d", "tc", "tk"], "dist": ["def", "dd", "range", "radius", "shift", "exp", "sd", "dr", "dp", "D", "height", "dev", "md", "df", "dis", "dm", "dy", "Dist", "dn", "del", "des", "dj", "det", "dest", "distance", "adj", "j", "dl", "desc", "red", "deg", "diff", "density", "delay", "driver", "rt", "di", "nt", " distance", "dir", "ds", "rel", "dc", "Distance", "d"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint a = sc.nextInt();\\n\t\tint b = sc.nextInt();\\n\t\tint c = sc.nextInt();\\n\t\tint cnt = 0;\\n\t\tif (a == b) {\\n\t\t\tcnt++;\\n\t\t}\\n\t\tif (b == c) {\\n\t\t\tcnt++;\\n\t\t}\\n\t\tif (c == a) {\\n\t\t\tcnt++;\\n\t\t}\\n\t\tif (cnt == 1) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t} else {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t}\\n}", "target": "117", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "out", "sch", "gc", "sq", "uc", "anc", "fc", "sec", "sp", "cc", "isc", "esc", "cl", "ko", "lc", "ctl", "ctrl", "mc", "nl", "inc", "acc", "scl", "cr", "ch", "system", "tch", "ck", "ss", "conv", "cs", "tc", "Sc", "g", "scan"], "a": ["ar", "aa", "f", "at", "al", "t", "ai", "area", "A", "da", "au", "na", "ab", "pa", "o", "ach", "r", "ao", "ba", "am", "an", "h", "n", "ap", "v", "ea", "w", "ga", "ia", "sta", "ta", "admin", "aj", "ae", "aaa", "e", "p", "ca", "ata", "as", "la", "alpha", "sa", "act", "ma", "g", "ac"], "b": ["mb", "nb", "f", "back", "bb", "bc", "bl", "ub", "ab", "o", "ble", "B", "r", "fb", "g", "ba", "n", "wb", "h", "eb", "ib", "y", "v", "bs", "ob", "cb", "j", "l", "bot", "rb", "gb", "br", "e", "db", "be", "erb", "bi", "z", "sb"], "c": ["ci", "pc", "f", "ct", "C", "cu", "t", "div", "com", "bc", "o", "fc", "r", "ce", "n", "cc", "h", "cor", "v", "con", "tc", "lc", "l", "co", "mc", "crit", "e", "cr", "ch", "p", "chain", "etc", "cm", "ca", "vc", "dc", "cp", "cs", "z", "d", "m", "unc", "g", "ac"], "cnt": [" cannot", "cNT", "scnc", "cnc", "cuounter", "counter", " ctr", " cct", "cunt", "Cnt", "bnt", "Ccount", "conNT", "pcld", "cno", "cuant", " counter", "cant", "Cannot", "cortr", "acld", "CNT", " cNT", "ctr", "cornt", "cld", "pcnt", "bant", "cornc", "Cct", "scct", "acNT", "acnt", " cno", " cnc", "contr", "bno", "cct", " cant", "pcct", "bounter", "ccount", "conant", "acct", "scnt", "connc", "concount", "cannot", "conct", "cuno", "pcNT", " ccount", "scannot", "corant", "connt", " cld", "Cnc"]}}
{"code": "import java.util.*;\\nimport java.util.Collections;\\npublic class Main {\\n\tpublic static void main(String[] args){\\n \\n      Scanner sc = null;\\n      sc = new Scanner(System.in);\\n      int N = sc.nextInt();\\n      int K = sc.nextInt();\\n      long sumPrice = 0;\\n      ArrayList<Integer> pList = new ArrayList<Integer>();\\n      while(sc.hasNextInt()){\\n        pList.add(sc.nextInt());\\n      }\\n      Collections.sort(pList);\\n      for(int i=0; i < K; i++){\\n        sumPrice += pList.get(i);\\n      }\\n      System.out.println(sumPrice);\\n    }\\n}", "target": "41", "substitutes": {"sc": ["SC", "cmp", " SC", " sp", " cle", "pc", "osc", "sys", "syn", "pb", "sl", "usc", "rc", "nc", "bc", " unsc", "asc", " mc", "sync", "sh", "comm", "exec", "gc", "sch", "sq", "disc", "uc", "anc", "fc", "sec", "sp", "c", "cc", "esc", " rc", "isc", "src", "cl", "lc", " Sc", "ctl", "ctrl", "desc", "cons", "mc", "inc", "cer", "acc", "scl", "capt", " scr", "p", "tch", " resc", "ch", "cr", "sel", "sci", "conv", "dc", "cle", "cs", "tc", "Sc", "scan"], "N": ["E", "I", "NN", "R", "C", "L", "Q", "Z", "NT", "O", "M", "D", "S", "B", "F", "P", "V", "n", "Ni", "NL", "G", "J", "H", "NS", "X", "T", "Ns"], "K": ["E", "I", "KING", "R", "C", "L", "PK", "KE", "VK", "Q", "Z", "M", "k", "D", "UK", "S", "B", "F", "P", "V", "W", "KK", "SK", "U", "KR", "Key", "G", "J", "Size", "H", "KI", "KA", "T", "KT", "KS", "KN"], "sumPrice": ["costPrice", " sumProduct", "simMoney", "simprice", "SumMoney", "totalPr", "Sumprice", "sumTotal", "SumPrice", "costPr", "totalMoney", "totalProduct", "sumProduct", "totalprice", "sumMoney", " sumTotal", "sumPr", "sumprice", " sumPr", " sumprice", "totalPrice", "totalTotal", "SumTotal", "costprice", "simPr", "costProduct", "SumPr", "simPrice"], "pList": [" pLeft", "ppSet", "spL", "pplist", "PL", "pMap", "prList", "PSet", "pLeft", " plist", "preList", "ppLIST", "Plist", " pGroup", " pL", "pdLIST", "hLeft", "PList", " pMap", "pLIST", "pL", "hLIST", " pLIST", "hList", "pdList", "prlist", "plist", "ppL", "spList", "pSet", "preMap", "pGroup", " pSet", "spGroup", "ppLeft", "prMap", "pdGroup", "prelist", "pdL", "preLIST", "hSet", "ppList", "spLIST", "prLIST"], "i": ["iq", "I", "hi", "ci", "ie", "\u0438", "si", "ic", "sim", "u", "ai", "ei", "us", "me", "xi", "is", "k", "ind", "point", "o", "mi", "cli", "h", "index", "y", "v", "gi", "ix", "q", "ui", "ri", "j", "uri", "a", "qi", "pi", "multi", "ji", "it", "ii", "p", "chain", "gu", "ini", "di", "yi", "li", "in", "ti", "bi", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tint N = sc.nextInt();//\u4eba\u6570\\n\t\tint K = sc.nextInt();//\u8eab\u9577\\n\t\tint d[] = new int[N]; //\u914d\u5217\u6570\u3092\u6c7a\u5b9a\\n\t\t\\n\t\tfor(int i = 0; i<N; i++) {\\n\t\t\td[i] = sc.nextInt(); //\u914d\u5217\u306e\u4e2d\u8eab\u3092\u633f\u5165\\n\t\t\t//System.out.println(d[i]);//\u914d\u5217\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\\n\t\t}\\n\t\tint count = 0;\\n\t\tfor(int i = 0; i<N; i++) {\\n\t\t\tif(d[i]>=K) {\\n\t\t\t\tcount += 1;\\n\t\t\t}else {\\n\t\t\t\tcount += 0;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(count);\\n\t}\\n\t\\n}\\n", "target": "145", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "usc", "tk", "sv", "rc", "nc", "bc", "cam", "sch", "sq", "gc", "sub", "uc", "anc", "sec", "sp", "c", "cc", "esc", "ser", "isc", "cl", "lc", "mc", "inc", "scl", "cr", "capt", "ch", "system", "ok", "ss", "cs", "ec", "Sc", "scan"], "N": ["E", "I", "NN", "R", "C", "L", "ID", "Z", "A", "NT", "M", "D", "S", "B", "F", "P", "V", "n", "NR", " n", "K", "J", "H", "NS", "X", "nt", "T", "Ns"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n//\t\tlong ans2 = 0;\\n\t\tint ans = 0;\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint  n = sc.nextInt();\\n\t\tint  k = sc.nextInt();\\n\\n//\t\tint  k = sc.nextInt();\\n//\t\tlong d = sc.nextLong();\\n\\n//\t\tString string = sc.next();\\n//\t\tStringBuilder s = new StringBuilder(string);\\n\\n//\t\tboolean f = true;\\n//\\n\t\tint[] a = new int[n];\\n\t\tint[] b = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\ta[i] = sc.nextInt();\\n\t\t}\\n//\t\tfor (int i = 0; i < k; i++) {\\n//\t\t\tb[i] = sc.nextInt();\\n//\t\t}\\n//\t\tfor (int i = 1; i <n; i++) {\\n//\t\t\tb[i] = sc.nextInt();\\n//\t\t}\\n//\t\tint[][] c = new int[h][w];\\n//\t\tfor (int i = 0; i < h; i++) {\\n//\t\t\tfor(int j = 0; j < w; j++) {\\n//\t\t\t\tc[i][j] = 0;\\n//\t\t\t}\\n//\t\t}\\n\\n//\t\tint tmp_a = 0;\\n//\t\tint tmp_b = 0;\\n\\n\t\tfor(int i:a) {\\n\t\t\tif(i>=k) {\\n\t\t\t\tans++;\\n\t\t\t}\\n\t\t}\\n\\n\\n\t\tSystem.out.println(ans);\\n\\n\t\tsc.close();\\n\t}\\n}", "target": "145", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n\\n        int lsn = 65;\\n        int ssn = 97;\\n\\n        char large[] = new char[26];\\n        char small[] = new char[26];\\n        char sign[] = {' ', ',', '.'};\\n\\n        for (int i = 0; i < 26; i++) {\\n            large[i] = (char) lsn++;\\n            small[i] = (char) ssn++;\\n        }\\n\\n        String str = sc.nextLine();\\n        StringBuilder ans = new StringBuilder();\\n\\n        for (int i = 0; i < str.length(); i++) {\\n            String s = String.valueOf(str.charAt(i));\\n            if (s.matches(\"[A-Z]\")) {\\n                ans.append(s.toLowerCase());\\n            } else if (s.matches(\"[a-z]\")) {\\n                ans.append(s.toUpperCase());\\n            } else {\\n                ans.append(str.charAt(i));\\n            }\\n        }\\n        System.out.println(ans);\\n    }\\n}", "target": "192", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "sync", "sh", "sch", "gc", "sq", "ng", "anc", "sec", "sp", "c", "cc", "isc", "esc", "spec", "cl", "lc", "ner", " Sc", "desc", "dec", "mc", "RC", "scl", "cr", "capt", "ch", "system", "sci", "conv", "cle", "cs", "ec", "asc", "Sc", "sb", "scan"], "lsn": ["lespan", "lssn", "lsan", "rsn", "selsn", "olsn", "lbsne", "rssn", "lesns", "linesn", "linesns", "rspan", "olsan", "lbscan", "olsne", "selscan", "olscan", "lesn", "rsns", "lessn", "linespan", "lbsan", "lscan", "selsan", "lsns", "linessn", "lspan", "lsne", "lbsn", "selsne"], "ssn": ["csyn", "essn", "ussn", "cssgn", "fssn", "fsn", "csn", "ssyn", "msyn", "ssgn", "cssn", "msin", "esgn", "msn", "ussyn", "fsi", "ssi", "csssn", "cssi", "ussl", "esn", "ussin", "csl", "msl", "ssl", "fsgn", "ssin", "csin", "sssn", "esi"], "large": ["known", "length", "light", "huge", "little", "mega", "largest", "esome", "medium", "max", "sh", "live", "primary", "size", "full", "many", "las", "pl", "load", "high", "photo", "some", "ly", "gb", "wide", "Large", "old", "larg", "tall", "cloud", "ls", "more", "slow", "big"], "small": ["sm", "own", "special", "little", "sl", "medium", "sh", "side", "sized", "sub", "simple", "tiny", "size", "less", "full", "south", "min", "low", "lower", "local", "Small", "mini", "normal", "old", "empty", "slow", "big"], "sign": ["reg", "ign", "close", "pen", "ver", "open", "const", "re", "scale", "fix", "base", "round", "save", "link", "ps", "Sign", "ser", "fat", "spec", "space", "mask", "rest", "pack", "bar", "null", "mod", "big", "se"], "i": ["status", "io", "ogi", "o", "index", "y", "ix", "pi", "ii", "gu", "yi", "id", "fi", "ti", "bi", "phi", "ie", "hi", "ci", "ei", "xi", "ori", "cli", "init", "ui", "j", "uri", "qi", "multi", "my", "print", "chain", "ex", "ini", "ni", "set", "m", "iter", "si", "ic", "sim", "oi", "is", "ind", "x", "mi", "gi", "ji", "it", "e", "di", "to", "zi", "iq", "I", "ami", "\u0438", "u", "ai", "me", "c", "iy", "im", "v", "info", "q", "this", "ri", "batch", "ki", "a", "ij", "cgi", "li", "iu", "ip"], "str": ["mt", "ent", "status", "hex", "sl", "t", "sts", "obj", "raw", "exp", "comm", "out", "data", "stri", "ctr", "gr", "r", "sp", "cont", "err", "c", "n", "tr", "cur", "arr", "pt", "Str", "STR", "j", "ts", "l", "pr", "desc", "sta", "stick", "string", "char", "res", "vol", "text", "it", "print", "br", "p", "ch", "form", "st", "dat", "txt", "rs", "nt", "stack", "cs", "log", "z", "list", "m", "line", "tree", "g", "wr", "fr"], "ans": ["nets", "ras", "ran", "ANS", "orts", "anks", "ces", "AN", "anes", "san", "ats", "eps", "ums", "eds", "aps", "ads", "ann", "ols", "ants", "ins", "uns", "outs", "ms", "aus", "ks", "an", "ups", "ians", "vs", "angs", "unes", "ands", "os", "amps", "rans", "aos", "aces", "posts", "olds", "asms", "ons", "anas", "ens", "ars", "ams", "uploads", "gs", "ows", "ates", "ns", "rs", "anon", "aints", "as", "works", "cs", "arms", "arts", "xs", "ents"], "s": ["sort", "es", "qs", "hs", "sql", "f", "sys", "sl", "ats", "js", "sf", "sv", "se", "sts", "sd", "sol", "ims", "comm", "is", "sq", "S", "ps", "ms", "r", "sb", "less", "c", "n", "h", "os", "v", "sym", "des", "w", "ws", "j", "l", "sam", "string", "gs", "st", "ns", "rs", "txt", "ls", "ds", "xs", "cs", "z", "ss", "g", "ts"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n\tpublic static void main(String[] args){\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tint n=sc.nextInt();\\n\t\tint max=-1000000,min=1000000;\\n\t\tdouble sum=0;\\n\t\tfor(int i=0;i<n;i++){\\n\t\t\tint a=sc.nextInt();\\n\t\t\tif(a>max){\\n\t\t\t\tmax=a;\\n\t\t\t}\\n\t\t\tif(a<min){\\n\t\t\t\tmin=a;\\n\t\t\t}\\n\t\t\tsum+=a;\\n\t\t}\\n\t\tSystem.out.printf(\"%d %d %.0f\\n\",min,max,sum);\\n\t}\\n}", "target": "21", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "cv", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "pl", "lc", "ctl", "desc", "mc", "nl", "inc", "scl", "cr", "sel", "ch", "system", "ck", "ss", "dc", "cle", "cs", "tc", "Sc", "scan"], "n": ["nos", "nm", "nb", "t", "network", "ln", "nc", "net", "mn", "nan", "na", "no", "ng", "nn", "nor", "name", "en", "N", "j", "l", "nu", " N", "np", "nl", "cn", "norm", "sn", "ns", "nd", "nt", "nw", "ni", "nia", "num", "d", "m", "ne"], "max": ["root", "MAX", "upper", "cos", "trust", "huge", "ax", "range", "t", "window", "Max", "right", "k", "last", "out", "x", "tmp", "size", "r", "up", "full", "maximum", "h", "med", "prime", "v", "head", "m", "master", "w", "grow", "mod", "rest", "co", "res", "mx", "grand", "can", "chain", "gt", "st", "total", "end", "act", "ma"], "min": ["first", "mit", "middle", "inner", "me", "mm", "left", "mp", "mn", "ma", "amin", "mi", "Min", "partial", "mid", "thin", "lo", "index", "spec", "im", "init", "MIN", "south", "m", "small", "lower", "low", "local", "pl", "man", "master", "mini", "l", "mel", "start", "lt", "minimum", "st", "pre", "mean", "mins", "rel", "minute", "temp", "mus", "mod", "mer"], "sum": ["sys", " SUM", "si", "sim", "us", "SU", "prof", "scale", "count", "out", " summed", "na", "size", "dev", "sat", "cum", "med", "mu", "tu", "average", "summary", "hash", "sam", "Sum", "su", "mem", "vol", "ass", "norm", "frac", "mean", "total", "hum", "um", "sa", "num", "dot", "d", "m"], "i": ["zi", "iter", "I", "ie", "ci", "sql", "si", "io", "ic", "sim", "u", "ai", "us", "is", "ind", "x", "o", "ms", "mi", "index", "init", "y", "v", "gi", "q", "ix", "ui", "ki", "j", "qi", "pi", "multi", "it", "ii", "gu", "di", "ini", "id", "li", "ti", "bi", "z", "m", "iu", "phi", "ip"], "a": ["aa", "f", "t", "at", "area", "va", "all", "A", "ka", "xa", "fa", "ha", "au", "sha", "na", "pa", "oa", "eta", "ao", "ba", "an", "am", "v", "app", "ea", "ga", "j", "ia", "sta", "ta", "ae", "aaa", "acc", "ya", "apa", "p", "b", "le", "ca", "ata", "alpha", "la", "to", "as", "sa", "z", "d", "ma", "ac"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner input = new Scanner(System.in);\\n\t\tString S = input.nextLine();\\n\t\tString T = input.nextLine();\\n\t\tString[] SList = S.split(\"\");\\n\\n\t\tString tmpS = \"\";\\n\t\tboolean flag = false;\\n\t\tfor (int i = 0; i < SList.length; i++) {\\n\t\t\t// \u6587\u5b57\u3092\u672b\u5c3e\u3092\u9664\u5916\u3057\u3066\u9023\u7d50\\n\t\t\tfor (int j = 0; j < SList.length - 1; j++) {\\n\t\t\t\ttmpS += SList[j];\\n\t\t\t}\\n\t\t\t// \u672b\u5c3e\u3092\u5148\u982d\u306b\u79fb\u52d5\\n\t\t\ttmpS = SList[SList.length - 1] + tmpS;\\n\\n\t\t\tif (tmpS.equals(T)) {\\n\t\t\t\tSystem.out.println(\"Yes\");\\n\t\t\t\tflag = true;\\n\t\t\t\tbreak;\\n\t\t\t} else {\\n\t\t\t\t// \u4e00\u81f4\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u914d\u5217\u306b\u5165\u308c\u66ff\u3048\u305f\u30c7\u30fc\u30bf\u3092\u8a2d\u5b9a\\n\t\t\t\tSList = tmpS.split(\"\");\\n\t\t\t\ttmpS = \"\";\\n\t\t\t}\\n\t\t}\\n\t\tif (!flag) {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t\tinput.close();\\n\t}\\n}\\n", "target": "220", "substitutes": {"input": [" Input", "inside", "history", "usr", "utils", "first", "socket", "io", "sys", "select", "inner", "exec", "sq", "sum", "focus", "Input", "add", "client", "analysis", "conn", "cur", "source", "image", "ser", "submit", "init", "info", "q", "output", "parser", "kernel", "this", "process", "cin", "pattern", "start", "sin", "inc", "system", "search", "nav", "inf", "in", "reader", "self", "get", "scan"], "S": ["E", "I", "R", "C", "L", "TS", "SL", "SH", "SS", "SU", "SR", "Q", "A", "M", "SER", "SA", "B", "P", "V", "SM", "SB", "s", "IS", "N", "SI", "G", "SE", "H", "SP", "NS", "ST", "X", "SN", "SAM", "SQL"], "T": ["E", "PT", "WT", "TB", "L", "t", "TS", "Y", "TY", "TT", "Z", "TA", "M", "B", " t", "F", "P", "V", "TG", "W", "VT", "N", "TN", "J", "GT", "TR", "ST", "TM"], "SList": ["STable", "SNames", "SAMList", "MLIST", "SBTable", "SAMLIST", "VList", "VArray", "MArray", "SLIST", " SNames", "SAMNames", "MList", "Vlist", "SArray", "VNames", " Slist", "SBList", "Slist", "SBLIST", "SAMlist", "VTable", " SLIST", "VLIST", "MTable", "SBArray"], "tmpS": ["tempI", "tempSI", " tmpSI", "tempString", "realS", "tmpI", "tmpString", "realSI", " tmpString", "realI", " tmpI", "tempS", "realString", "tmpSI"], "i": ["I", "ci", "counter", "si", "t", "ic", "u", "sim", "ai", "xi", "us", "me", "k", "is", "ind", "x", "z", "mi", "c", "n", "cli", "index", "im", "y", "gi", "q", "ix", "ui", "ki", "j", "qi", "pi", "multi", "ij", "it", "ii", "b", "gu", "ini", "di", "id", "li", "in", "bi", "ims", "m", "iu", "phi", "asi"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main {\\n    \\n    public static void main(String[] args){\\n        Scanner scanner = new Scanner(System.in);\\n        double l = scanner.nextDouble();\\n        scanner.close();\\n        double per = l/3.0;\\n        double result = per*per*per;\\n        System.out.println(result);\\n    }\\n}", "target": "53", "substitutes": {"scanner": ["Scanner", "scanener", " scanter", " scanener", "Scanter", "canter", "caner", "Scaner", "Scanener", "canener", "scaner", " scaner", "scanter", "canner"], "l": ["f", "L", "sl", "t", "ln", "ll", "lam", "r", "ml", "c", "lin", "n", "h", "lo", "v", "s", "lr", "pl", "lit", "lc", "dl", "hl", "kl", "lp", "nl", "p", "tl", "le", "ls", "li", "ld", "z", "d", "m", "el", "g"], "per": ["repl", "pen", "asper", "pp", "f", "pe", "th", "ul", "prof", "integer", "er", "pro", "PER", "spe", "pa", "par", "ps", "x", "ping", "r", "sp", "pu", "P", "Per", "tr", "pn", "h", "php", "pixel", "v", "pl", "lr", "pers", "power", "perm", "pr", "char", "pi", "ph", "compl", "performance", "p", "pol", "proc", "lp", "m", "phi", "hel"], "result": ["report", "success", "pair", "profile", "RESULTS", "direction", "product", "complete", "integer", "transform", "ful", "tmp", "score", "r", "gre", "different", "successful", "df", "cur", "money", "currency", "cup", "relation", "value", "function", "results", "correct", "valid", "this", "true", "power", "summary", "red", "res", "performance", "continue", "vector", "ret", "Result", "number"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String... args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int K = scanner.nextInt();\\n\\n        // K * K\u306e\u6700\u5927\u516c\u7d04\u6570\u3092\u51fa\u3057\u3066\u304a\u304f\u30de\u30c3\u30d7\\n        int[][] gmap = new int[K][K];\\n\\n        for (int i = 0; i < K; i++) {\\n            for (int j = 0; j < K; j++) {\\n                gmap[i][j] = gcd(i + 1, j + 1);\\n            }\\n        }\\n\\n        // GCD, \u500b\u6570\\n        int[] rightGcdMap = new int[K];\\n\\n        for (int i = 1; i <= K; i++) {\\n            for (int j = 1; j <= K; j++) {\\n                int gcd = gcd(i, j);\\n\\n                rightGcdMap[gcd - 1]++;\\n            }\\n        }\\n\\n        int[] leftGcdMap = new int[K];\\n        for (int i = 1; i <= K; i++) {\\n            for (int j = 1; j <= K; j++) {\\n                int gcd = gcd(i, j);\\n\\n                leftGcdMap[gcd - 1] += gcd(i, j) * rightGcdMap[j - 1];\\n            }\\n        }\\n\\n\\n        System.out.println(Arrays.stream(leftGcdMap).sum());\\n    }\\n\\n    private static int gcd(int m, int n) {\\n        if(m < n) return gcd(n, m);\\n        if(n == 0) return m;\\n        return gcd(n, m % n);\\n    }\\n}\\n", "target": "6", "substitutes": {"scanner": ["Scanner", "Scaner", "scaner", "scanener", " scanter", "scer", "canter", "caninner", "scinner", "anner", "Scanener", " scanener", "aner", " scaner", "scner", " scaninner", "Scanter", "caner", "scanter", "scter", "anener", "anter", "canner", "scaninner"], "K": ["I", " k", "R", "PK", "Q", "ID", "Z", "Max", "M", "k", "D", "S", "B", "P", "V", "key", "kind", "Kind", "OK", "N", "kernel", "Key", " N", "Mask", "mask", "J", "ket", "T"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scan = new Scanner(System.in);\\n        int input = scan.nextInt();\\n        int A, B, C, D;\\n        D = input % 10;\\n        input /= 10;\\n        C = input % 10;\\n        input /= 10;\\n        B = input % 10;\\n        input /= 10;\\n        A = input;//\\n\\n        if(A+B+C+D==7){\\n            System.out.println(A+\"+\"+B+\"+\"+C+\"+\"+D+\"=7\");\\n        }\\n        else if(A-B+C+D==7){\\n            System.out.println(A+\"-\"+B+\"+\"+C+\"+\"+D+\"=7\");\\n        }\\n        else if(A+B-C+D==7){\\n            System.out.println(A+\"+\"+B+\"-\"+C+\"+\"+D+\"=7\");\\n        }\\n        else if(A+B+C-D==7){\\n            System.out.println(A+\"+\"+B+\"+\"+C+\"-\"+D+\"=7\");\\n        }\\n        else if(A-B-C+D==7){\\n            System.out.println(A+\"-\"+B+\"-\"+C+\"+\"+D+\"=7\");\\n        }\\n        else if(A-B+C-D==7){\\n            System.out.println(A+\"-\"+B+\"+\"+C+\"-\"+D+\"=7\");\\n        }\\n        else if(A+B-C-D==7){\\n            System.out.println(A+\"+\"+B+\"-\"+C+\"-\"+D+\"=7\");\\n        }\\n        else if(A-B-C-D==7){\\n            System.out.println(A+\"-\"+B+\"-\"+C+\"-\"+D+\"=7\");\\n        }\\n    }\\n}\\n", "target": "152", "substitutes": {"scan": ["trans", "report", "connect", "sys", "san", "watch", "Scan", "re", "se", "scale", "ann", "send", "reach", "gate", "out", "stat", "find", "sum", "save", "skip", "parse", "r", "check", "an", "n", "read", "nn", "ser", "conf", "scroll", "con", "ner", "clean", "start", "gen", "sin", "can", "system", " Scan", "search", "seek", "util", "proc", "row", "in", "set", "query", "sc", "get"], "input": ["raw", "integer", "config", "request", "source", "read", "index", "output", "next", "mask", "text", "result", "PUT", "hello", "internal", "view", "Q", "out", "add", "client", "init", "table", "current", "print", "qa", "b", "active", "list", "d", "address", "length", "history", "inner", "up", "image", "submit", "value", "local", "lat", "diff", "it", "p", "total", "event", "end", "in", "error", "window", "all", "count", "height", "hidden", "data", "Input", "buffer", "c", "entry", "q", "a", "unknown", "start", "command", "missing", "get"], "A": ["E", "AS", "I", "AD", "AF", "R", "AL", "AN", "Y", "Array", "M", "AA", "AP", "AY", "SA", "S", "P", "V", "At", "AU", "And", "AB", "N", "AC", "AM", "a", " a", "BA", "G", "AR", "H", "An", "As", "T", "CA"], "B": ["E", "I", "R", "OB", "RB", "L", "Y", "BL", "M", "BU", "S", "BO", "Bi", "BI", "BB", "V", "DB", "BT", "BE", "IB", "AB", "N", "BA", "G", "J", "VB", "Bern", "b", "BR", "BY", "Bar", "BC", "T", "BD", "LB", "BG", "Bs"], "C": ["SC", "E", "I", "YC", "CT", "R", "L", "EC", "Car", "M", "CS", "Cu", "S", "V", "c", "CB", "Co", "CR", "JC", "CNN", "DC", "N", "CD", "Cr", "G", "CM", "CC", "CON", "BC", "CP", "CG", "T", "CU", "CO", "CA", "Cs"], "D": ["E", "I", "DL", "R", "MD", "L", "DI", "Y", "Q", "Z", "O", "M", "S", "DO", "F", "P", "V", "DB", "DS", "DF", "DM", "DC", "N", "G", "J", "H", "DE", "X", "DA", "T", "d", "DD"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t    Scanner scanner = new Scanner(System.in);\\n\\n\t    int N = Integer.parseInt(scanner.next());\\n\t    int[] B = new int[N];\\n\t    \\n\t    for (int i = 0; i < N - 1; i++) {\\n\t    \tB[i] = Integer.parseInt(scanner.next());\\n\t    }\\n\t    \\n\t    int sum = 0;\\n\t    \\n\t    for (int i = 0; i < N; i++) {\\n\t    \tif (i == 0) {\\n\t    \t\tsum += B[i];\\n\t    \t} else if (i == N-1) {\\n\t    \t\tsum += B[N-2];\\n\t    \t} else {\\n\t    \t\tsum += Math.min(B[i], B[i-1]);\\n\t    \t}\\n\t    }\\n\\n        System.out.print(sum);\\n\t}\\n}\\n", "target": "240", "substitutes": {"scanner": ["Scanner", "canning", " scanning", "Scaner", "gatener", "scanning", "scaner", "scanener", " scanter", "canter", "caninner", "gatening", "gateter", "Scanener", " scanener", " scaner", " scaninner", "Scanter", "caner", "gateinner", "canener", "scanter", "canner", "scaninner"], "N": ["CN", "I", "NN", "R", "NC", "C", "ND", "L", "AN", "OUT", "NOTE", "NO", "Z", "Num", "NT", "O", "M", "D", "Net", "NE", "S", "Node", "F", "P", "V", "n", "NR", "Ni", "NL", "Number", "NB", "NP", "TN", "NI", "GN", "NA", "K", "G", "J", "Size", "NH", "H", "New", "Note", "NS", "Ne", "NOR", "SN", "Length", "FN", "T", "Ns", "Sn"], "B": ["FB", "Buffer", "I", "TB", "R", "GB", "RB", "L", "Body", "BM", "BL", "A", "M", "PB", "USB", "BI", "Message", "BB", "F", "P", "V", "CB", "DB", "EB", "BT", "BE", "SB", "IB", "NB", "AB", "Blue", "Two", "BA", "J", "VB", "H", "WB", "b", "BR", "BY", "Bar", "BC", "Box", "Other", "BS", "T", "MB", "BW", "LB", "BG", "Bs"], "i": ["io", "o", "iu", "n", "index", "y", "ix", "l", "pi", "ii", "id", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "ori", "client", "cli", "init", "ui", "j", "uri", "qi", "multi", "chain", "ini", "list", "set", "m", "si", "ic", "sim", "oi", "inner", "is", "x", "mi", "err", "gi", "ji", "it", "e", "di", "to", "in", "ims", "slice", "zi", "iti", "I", "\u0438", "u", "ai", "me", "c", "entry", "key", "iy", "im", "v", "info", "q", "ri", "ki", "batch", "ity", "ij", "li", "point", "ip"], "sum": ["sort", "report", "success", "zero", "hist", " SUM", "cost", "si", "view", "sim", "us", "scale", "fac", "match", "share", "all", "max", "base", "count", "out", "sup", "union", " summed", "add", "global", "save", "tmp", "size", "unit", "sat", "n", "cum", "index", "cal", "tu", "prefix", "set", "average", "cat", "summary", "hash", "sam", "Sum", "process", "su", "mem", "vol", "diff", "sample", "pool", "frac", "other", "mean", "total", "result", "hum", "um", "stack", "num", "see", "temp", "missing", "cache", "comment", "trace", "loss", "se"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n\t\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tInputReader in = new InputReader(System.in);\\n\\n\t\twhile (true) {\\n\t\t\tint a =in.readInt();\\n\t\t\tString op =in.read();\\n\t\t\tif (op.equals(\"?\")) break;\\n\t\t\tint b =in.readInt();\\n\t\t\t\\n\t\t\tint ans = 0;\\n\t\t\tswitch (op) {\\n\t\t\tcase \"+\":\\n\t\t\t\tans = a + b ;\\n\t\t\t\tbreak;\\n\t\t\tcase \"-\":\\n\t\t\t\tans = a - b ;\\n\t\t\t\tbreak;\t\t\\n\t\t\tcase \"*\":\\n\t\t\t\tans = a * b ;\\n\t\t\t\tbreak;\t\\n\t\t\tcase \"/\":\\n\t\t\t\tans = a / b ;\\n\t\t\t\tbreak;\t\\n\t\t\t}\\n\t\t\tSystem.out.println(ans);\\n\t\t}\\n\t}\t\\n}\\n\\nclass InputReader{\\n\tprivate BufferedReader br;\\n\tprivate StringTokenizer buffer;\\n\t\\n\tpublic InputReader(InputStream in) {\\n\t\tbr = new BufferedReader(new InputStreamReader(in));\\n\t}\\n\t\\n\tpublic String read() throws IOException {\\n\t\twhile (buffer == null || !buffer.hasMoreTokens()) {\\n\t\t\tbuffer = new StringTokenizer(br.readLine());\\n\t\t}\\n\t\treturn buffer.nextToken();\\n\t}\\n\t\\n\tpublic int readInt() throws IOException {\\n\t\twhile (buffer == null || !buffer.hasMoreTokens()) {\\n\t\t\tbuffer = new StringTokenizer(br.readLine());\\n\t\t}\\n\t\treturn Integer.parseInt(buffer.nextToken());\\n\t}\\n\t\\n\tpublic double readDouble() throws IOException {\\n\t\twhile (buffer == null || !buffer.hasMoreTokens()) {\\n\t\t\tbuffer = new StringTokenizer(br.readLine());\\n\t\t}\\n\t\treturn Double.parseDouble(buffer.nextToken());\\n\t}\t\\n}\\n", "target": "139", "substitutes": {"in": ["io", "raw", "i", "n", "source", "read", "en", "con", "l", "doc", "cin", "In", "readable", "form", "file", "id", "line", "el", "sql", "din", "t", "al", "out", "sum", "add", "isin", "init", "world", "stream", "run", "win", "ini", "reader", "log", "m", "ma", "ac", "iter", "ic", "inner", "from", "mm", "bin", "er", "is", "ind", "ins", "r", "on", "cont", "err", "local", "it", "p", "rt", "inf", "end", "ar", "IN", "inn", "ain", "std", "h", "by", "conf", "q", "gin", "mc", "inc", "input", "cm", "null", "get"], "a": ["aux", "ar", "aa", "era", "t", "aq", "ai", "area", "va", "xa", "A", "fa", "da", "au", "na", "pa", "ab", "oa", "dev", "ao", "ba", "an", "am", "app", "ea", "w", "ga", "ia", "sta", "ta", "ae", "aj", "aaa", "apa", "aka", "ca", "as", "la", "alpha", "to", "sa", "eas", "ma", "val", "ana", "ac"], "op": ["or", "cmp", "OP", "oper", "pp", "pos", "operation", "oop", "exp", "ep", "iop", "mp", "o", "type", "opp", "typ", "bit", "sp", "opt", "ap", "ob", "info", "bsp", "operator", "cop", "perm", "pr", "jp", "np", "pop", "it", "ot", "p", "ops", "cmd", "comp", "mop", "top", "Op", "omp", "hop", "ip"], "b": ["mb", "bool", "nb", "f", "pb", "bb", "t", "bc", "i", "ab", "B", "r", "g", "fb", "ba", "n", "c", "an", "wb", "eb", "ib", "beta", "y", "v", "bs", "ob", "bo", "cb", "j", "l", "rb", "gb", "e", "p", "bar", "db", "to", "be", "erb", "bi", "z", "d", "m", "sb"], "ans": ["ras", "nets", "cas", "ANS", "span", "anks", "offs", "AN", "anes", "ats", "ums", "ads", "aps", "eds", "ann", "ants", "ins", "uns", "outs", "ms", "ps", "aus", "ks", "an", "ians", "ups", "angs", "lan", "ones", "amps", "terms", "rans", "aos", " spans", "posts", "ana", "asks", "beans", "ons", "anas", "ens", "cons", "ars", "ams", "vers", "ations", "gs", "ns", "ls", "nas", "ds", "vals", "leans", "cs", "pan", "caps", "arms", "mas", "arts", "anned", "ents"], "br": ["bp", "bre", "obj", "bm", "bc", "bh", "bridge", "ger", "dr", "bro", "bl", "bf", "ctr", "gr", "r", "bolt", "ba", "tr", "rus", "shr", "bs", "bsp", "lr", "bo", "bt", "wr", "roller", "mr", "Br", "pr", "rb", "jp", "bal", "bd", "vr", "adr", "kr", "cr", "BR", "browser", "rel", "hr", "buf", "fr", "bi", "str", "ber", "sb", "sr", "bn"], "buffer": ["uf", "builder", "storage", "profile", "commit", "parse", "duration", "read", "function", "processor", "screen", "thread", "service", "text", "pool", "append", "flush", "iterator", "complete", "console", "bf", "loop", "button", "timer", "device", "background", "table", "binary", "store", "itter", "print", "document", "txt", "db", "uffer", "callback", "ptr", "reader", "buf", "cache", "tf", "cell", "format", "iter", "sequence", "length", "history", "bridge", "fb", "tr", "filter", "password", "buff", "secondary", "queue", "stack", "url", "proc", "browser", "temp", "comment", "fr", "block", "scroll", "writer", "Buffer", "pb", "bb", "window", "phrase", "timeout", "entry", "database", "journal", "bo", "term", "batch", "header", "memory", "command", "template", "loader"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tprivate static Scanner scan;\\n\tpublic static void main(String[] args) {\\n\t\tscan = new Scanner(System.in);\\n\t\tString str = scan.next();\\n\t\tint l = str.length();\\n\t\tString rts =\"\";\\n\t\tfor(int i = l -1;i >= 0 ;i--){\\n\t\t\trts = rts + str.charAt(i);\\n\t\t}\\n\t\tSystem.out.println(rts);\\n\t\tSystem.exit(0);\\n\t}\\n}", "target": "237", "substitutes": {"scan": ["connect", "auto", "sql", "sys", "syn", "san", "Scan", "re", "sv", "ann", "sync", "reach", "gate", "gc", "out", "stat", "sum", "na", "find", "spe", "parse", "save", "r", "sb", "sur", "check", "an", "c", "n", "read", "nn", "scroll", "con", "vis", "ner", "cat", "sr", "store", "sin", "can", "system", "run", "st", "search", "spin", "sche", "row", "in", "sign", "set", "ln", "query", "sc", "get", "se"], "str": ["trans", "iter", "f", "seq", "sl", "t", "div", "obj", "exp", "comm", "out", "data", "stri", "ctr", "gr", "z", "r", "msg", "sp", "rep", "n", "tr", "cur", "arr", "name", "v", "s", "Str", "STR", "pr", "string", "char", "enc", "vol", "res", "text", "ocr", "print", "input", "br", "p", "coll", "st", "dat", "txt", "list", "m", "sc", "tree", "fr"], "l": ["length", "f", "sl", "t", "L", "al", "ln", "ll", "lay", "lang", "r", "len", "c", "n", "v", "las", "lit", "lc", "j", "hl", "dl", "kl", "lp", "nl", "lt", "ly", "e", "p", "le", "ls", "li", "list", "z", "d", "m", "el", "g"], "rts": ["rtes", "crst", "mrpt", "rty", "rcts", "rtn", "restn", "rstes", " rpt", "crts", "rtts", "rspt", "qtt", "qst", "rtt", "rrs", "rte", "rsts", " rte", "rctes", " rtes", "rcuts", "mrtn", "rpt", " rtn", "qts", "rstn", "restr", "mrtr", "crtt", "rtr", "rsuts", "ruts", "mrty", " rt", "resty", "mrt", " rrs", "mrte", " rtt", " ruts", "rt", "rtty", "rst", "rste", "crrs", "qrs", " rst", "rctn", "rests", "rttn", "mrts", "rttr"], "i": ["zi", "I", "hi", "ci", "\u0438", "si", "ic", "sim", "u", "oi", "ai", "xi", "ei", "is", "ori", "o", "x", "ms", "mi", "n", "cli", "y", "gi", "v", "s", "ix", "ui", "ri", "ki", "j", "uri", "qi", "pi", "multi", "ji", "it", "my", "ii", "PI", "ini", "di", "ni", "li", "in", "ti", "bi", "ims", "m", "iu", "phi", "asi"]}}
{"code": "import java.util.ArrayDeque;\\nimport java.util.ArrayList;\\nimport java.util.Collections;\\nimport java.util.HashMap;\\nimport java.util.Map;\\nimport java.util.Queue;\\nimport java.util.Scanner;\\n \\n\\n\\npublic class Main {\\n\tprivate static Scanner sc = new Scanner(System.in);\\n\t//result = Math.pow(num1, num3)\\n\t//StringBuffer str = new StringBuffer(hoge1);\\n\t//String hoge2 = str.reverse().toString();\\n\t//map.containsKey(A)\\n\\n\t//Map<String, Integer> map = new HashMap<String, Integer>(n);\\n\t/*for ( \u30ad\u30fc\u306e\u30c7\u30fc\u30bf\u578b key : \u30de\u30c3\u30d7\u306e\u540d\u524d.keySet() ) {\\n\t\t\u30c7\u30fc\u30bf\u306e\u30c7\u30fc\u30bf\u578b data = \u30de\u30c3\u30d7\u306e\u540d\u524d.get( key );\\n\t\t\\n\t\t// key\u3084data\u3092\u4f7f\u3063\u305f\u51e6\u7406;\\n\t}*/\\n\t//int i = Integer.parseInt(s);\\n\t//Queue<String> qq=new ArrayDeque<>(); //add,poll,peek\\n\t//Deque<String> qq=new ArrayDeque<>();//push,pop,peek\\n\t//ArrayList<String> cc = new ArrayList<>(n);\\n\t//Collections.sort(list);\\n\t//Array.sort(list);   cc.contains(tmp)\\n\t//Arrays.asList(c).contains(\"a\")\\n\t//list.set(1,\"walk\");//1 1 2 3 5\\n\t//static long mod =1000000007;\\n\t//static \tArrayList<Integer> cc = new ArrayList<>(100);\\n\t\\n\t\\n\t\\n\t\\n\t//for(int i=0;i<N;i++) {}\\n\tpublic static void main(String[] args) {\\n\t\t//int N=sc.nextInt();for(int i=0;i<N;i++) {}\\n\t\tString S=sc.next();\\n\t\t\\n\t\tint a=0;\\n\t\tboolean x=true;\\n\t\tfor(int i=0;i<4;i++) {\\n\t\t\tint t=S.charAt(i);\\n\t\t\tif(a==t)x=false;\\n\t\t\ta=t;\\n\t\t}\\n\t\tif(x)p(\"Good\");\\n\t\telse p(\"Bad\");\\n\t\t\\n\t}\\n\t\\n\\n\t\\n\t\\n\t\\n\t\\n\\n\t\\n\\n\\n\t\\n\tstatic void p(String ans) {System.out.println(ans);};\\n\tstatic void p(int ans) {System.out.println(ans);};\\n\tstatic void p() {System.out.println();};\\n\tstatic void p(long ans) {System.out.println(ans);};\\n\tstatic void p(double ans) {System.out.println(ans);};\\n\tstatic String nextPermutation(String s) {\\n\t\tArrayList<Character> list=new ArrayList<>();\\n\t\tfor(int i=0;i<s.length();i++) {\\n\t\t\tlist.add(s.charAt(i));\\n\t\t}\\n\t\tint pivotPos=-1;\\n\t\tchar pivot=0;\\n\t\tfor(int i=list.size()-2;i>=0;i--) {\\n\t\t\tif(list.get(i)<list.get(i+1)) {\\n\t\t\t\tpivotPos=i;\\n\t\t\t\tpivot=list.get(i);\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t}\\n\t\tif(pivotPos==-1&&pivot==0) {\\n\t\t\treturn \"Final\";\\n\t\t}\\n\t\tint L=pivotPos+1,R=list.size()-1;\\n\t\t\\n\t\t\\n\t\t\\n\t\tint minPos=-1;\\n\t\tchar min =Character.MAX_VALUE;\\n\t\t\\n\t\tfor(int i=R;i>=L;i--) {\\n\t\t\tif(pivot<list.get(i)) {\\n\t\t\t\tif(list.get(i)<min) {\\n\t\t\t\t\tmin=list.get(i);\\n\t\t\t\t\tminPos=i;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tCollections.swap(list, pivotPos, minPos);\\n\t\tCollections.sort(list.subList(L, R+1));\\n\t\t\\n\t\t\\n\t\tStringBuilder sb=new StringBuilder();\\n\t\tfor(int i=0;i<list.size();i++) {\\n\t\t\tsb.append(list.get(i));\\n\t\t}\\n\t\treturn sb.toString();\\n\t}\\n}\\n\t\\n", "target": "73", "substitutes": {"sc": ["SC", " SC", " sp", " cle", " subsc", "sys", " sched", "Scan", "sv", "rc", " ec", "sk", " scorer", "c", "ser", " rc", " pc", " sw", " Sc", " enc", " cons", " scr", "ch", " ser", "cs", "Sc", " sk", "scan"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan=new Scanner(System.in);\\n\t\tint n=scan.nextInt();\\n\t\tint a[][][] = new int[4][3][10];\\n\t\tint i;\\n\t\tfor(i=0;i<n;i++) {\\n\t\t\tint b=scan.nextInt();\\n\t\t\tint f=scan.nextInt();\\n\t\t\tint r=scan.nextInt();\\n\t\t\tint v=scan.nextInt();\\n\t\t\ta[b-1][f-1][r-1] +=v;\\n\t\t}\\n\t\tfor(int b=0;b<4;b++) {\\n\t\t\tfor(int f=0;f<3;f++) {\\n\t\t\t\tfor(int r=0;r<10;r++) {\\n\t\t\t\t\tSystem.out.print(\" \"+ a[b][f][r]);\\n\t\t\t\t}\\n\t\t\t\tSystem.out.println();\\n\t\t\t}\\n\t\t\tif(b<3)\\n\t\t\t\tSystem.out.println(\"####################\");\\n\t\t\t}\\n\t\tscan.close();\\n}\\n}\\n", "target": "211", "substitutes": {"scan": ["report", "connect", "sql", "sys", "syn", "get", "san", "sim", "Scan", "sv", "re", "ann", "sync", "send", "reach", "gate", "out", "gc", "stat", "na", "find", "skip", "link", "parse", "sur", "check", "an", "read", "nn", "by", "scroll", "info", "query", "ner", "cat", "plan", "clean", "start", "ch", "can", "system", "run", "st", "search", "spin", "cgi", "util", "proc", "pack", "row", "in", "see", "log", "set", "trace", "m", "sc", "g", "se"], "n": ["nb", "t", "ln", "nc", "net", "count", "k", "na", "x", "no", "o", "ng", "on", "c", "nn", "name", "y", "w", "N", "j", "l", "nu", "nl", "np", "p", "sn", "ns", "nt", "ni", "num", "z", "d", "m", "ne", "g"], "a": ["ar", "aa", "t", "u", "area", "A", "action", "cha", "au", "ava", "x", "o", "ab", "oa", "eta", "ao", "ba", "an", "am", "c", "h", "y", "app", "s", "m", "w", "ia", "ta", "ae", "aaa", "e", "apa", "p", "ja", "ca", "att", "array", "sa", "set", "d", "ma", "ac"], "i": ["I", "ie", "ci", "io", "si", "t", "sim", "u", "ai", "xi", "us", "is", "ind", "x", "o", "mi", "c", "index", "y", "im", "info", "ix", "q", "ui", "ki", "j", "l", "pi", "multi", "it", "e", "ii", "p", "chain", "ex", "di", "ini", "ret", "id", "li", "ti", "bi", "z", "m", "iu", "phi", "g", "ip"], "b": ["or", "mb", "bp", "nb", "back", "boot", "bb", "bc", "bh", "base", "bis", "bl", "bf", "bound", "bg", "ab", "ble", "B", "body", "fb", "g", "ba", "c", "blue", "h", "eb", "ib", "beta", "y", "bs", "ob", "bo", "cb", "bt", "j", "batch", "l", "rb", "gb", "br", "bal", "bar", "db", "to", "be", "bi", "m", "sb"], "f": ["fx", "uf", "ft", "def", "fs", "func", "t", "al", "u", "sf", "family", "fort", "from", "exp", "fac", "lf", "er", "part", "xf", "fa", "k", "bf", "x", "o", "fd", "fc", "of", "F", "fb", "face", "c", "full", "h", "fe", "q", "fre", "w", "alf", "j", "l", "rf", "fg", "aff", "af", "through", "e", "feature", "p", "form", "file", "cf", "um", "field", "fl", "fi", "fm", "ff", "fr", "d", "m", "tf", "el", "g", "ac"], "r": ["or", "rec", "usr", "ar", "R", "t", "range", "u", "rc", "re", "obj", "er", "dr", "right", "rad", "o", "gr", "ur", "rr", "err", "c", "tr", "ir", "h", "attr", "cor", "q", "w", "ri", "j", "l", "mr", "pr", "rf", "rar", "res", "e", "cr", "p", "kr", "rs", "rt", "rel", "nr", "row", "hr", "rd", "str", "fr", "d", "m", "rw", "g", "sr", "vr"], "v": ["ver", "nv", "tv", "lv", "t", "u", "sv", "ov", "k", "o", "x", "uv", "V", "c", "var", "ev", "vt", "h", "vs", "y", "value", "w", "ve", "j", "l", "av", "p", "z", "m", "val"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.math.BigDecimal;\\n\\n\\npublic class Main {\\n\\n    public static void main(String[] args) throws IOException {\\n        //Input ??\u00b4??\u00b0?????\\?????????\\n        BufferedReader br =\\n                new BufferedReader(new InputStreamReader(System.in));\\n        String str = br.readLine();\\n        int n = Integer.parseInt(str);\\n        //??????\\n        double loan = 100000;\\n\\n        //??\\???????????\u00b4??\u00b0?????????????????????????\u00b1???????\\n        //1??\u00b1?????\u00a8???????????????????????????????????????????????\\??????\\n        for(int i=1; i<=n; i++){\\n           //?????????5%?????????????????????\\n           loan = loan * 1.05;\\n           //?????????1000???????????????????????????\\n           BigDecimal bd = new BigDecimal(String.valueOf(loan));\\n           //?\u00ac\u00ac1?????\u00b0???0?????\u00b4???????\u00b0???\u00b0?\u00ac\u00ac?????????????????????(??????)\\n           //1000??????????????????????????????????\u00ac\u00ac1?????\u00b0???-3??\u00a8????????????????????????????????????\\n           loan = bd.setScale(-3, BigDecimal.ROUND_UP).doubleValue();\\n        }\\n        //??\u00a8???????????????????\u00b0???\u00b0??????????????\u00a2??\u00a7????????????????????????????????????int??????result???????\u00b4???????\\n        int result = (int) loan;\\n        System.out.println(result);\\n    }\\n}", "target": "173", "substitutes": {}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        FastScanner sc = new FastScanner();\\n        PrintWriter out = new PrintWriter(System.out);\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        StringBuffer sb = new StringBuffer();\\n        if (a < b) {\\n            String add = String.valueOf(a);\\n            for (int i = 0; i < b; i++) {\\n                sb.append(add);\\n            }\\n        }\\n        else {\\n            String add = String.valueOf(b);\\n            for (int i = 0; i < a; i++) {\\n                sb.append(add);\\n            }\\n        }\\n\\n        out.printf(\"%s\\n\", sb.toString());\\n        out.flush();\\n    }\\n}\\n\\nclass FastScanner {\\n    private final InputStream in = System.in;\\n    private final byte[] buffer = new byte[1024];\\n    private int ptr = 0;\\n    private int buflen = 0;\\n\\n    private boolean hasNextByte() {\\n        if (ptr < buflen) {\\n            return true;\\n        } else {\\n            ptr = 0;\\n            try {\\n                buflen = in.read(buffer);\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            if (buflen <= 0) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    private int readByte() {\\n        if (hasNextByte()) {\\n            return buffer[ptr++];\\n        }\\n        else {\\n            return -1;\\n        }\\n    }\\n\\n    private static boolean isPrintableChar(int c) {\\n        return 33 <= c && c <= 126;\\n    }\\n\\n    private void skipUnprintable() {\\n        while (hasNextByte() && !isPrintableChar(buffer[ptr])) {\\n            ptr++;\\n        }\\n    }\\n\\n    public boolean hasNext() {\\n        skipUnprintable();\\n        return hasNextByte();\\n    }\\n\\n    public String next() {\\n        if (!hasNext()) {\\n            throw new NoSuchElementException();\\n        }\\n        StringBuilder sb = new StringBuilder();\\n        int b = readByte();\\n        while (isPrintableChar(b)) {\\n            sb.appendCodePoint(b);\\n            b = readByte();\\n        }\\n        return sb.toString();\\n    }\\n\\n    public int nextInt() {\\n        if (!hasNext()) {\\n            throw new NoSuchElementException();\\n        }\\n        int n = 0;\\n        boolean minus = false;\\n        int b = readByte();\\n        if (b == '-') {\\n            minus = true;\\n            b = readByte();\\n        }\\n        if (b < '0' || '9' < b) {\\n            throw new NumberFormatException();\\n        }\\n        while (true) {\\n            if ('0' <= b && b <= '9') {\\n                n *= 10;\\n                n += b - '0';\\n            } else if (b == -1 || !isPrintableChar(b)) {\\n                return minus ? -n : n;\\n            } else {\\n                throw new NumberFormatException();\\n            }\\n            b = readByte();\\n        }\\n    }\\n\\n    public long nextLong() {\\n        if (!hasNext()) {\\n            throw new NoSuchElementException();\\n        }\\n        long n = 0;\\n        boolean minus = false;\\n        int b = readByte();\\n        if (b == '-') {\\n            minus = true;\\n            b = readByte();\\n        }\\n        if (b < '0' || '9' < b) {\\n            throw new NumberFormatException();\\n        }\\n        while (true) {\\n            if ('0' <= b && b <= '9') {\\n                n *= 10;\\n                n += b - '0';\\n            } else if (b == -1 || !isPrintableChar(b)) {\\n                return minus ? -n : n;\\n            } else {\\n                throw new NumberFormatException();\\n            }\\n            b = readByte();\\n        }\\n    }\\n}", "target": "24", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "ctx", "si", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "sch", "sec", "sp", "cc", "isc", "esc", "ser", "cl", "lc", "ctl", "ctrl", "desc", "mc", "nl", "scl", "cr", "ch", "ss", "conv", "cs", "ec", "tc", "Sc", "scan"], "out": ["writer", "error", "sys", "OUT", "io", "t", "at", "flush", "window", "obj", "net", "write", "console", "gc", "o", "outs", "conn", "client", "r", "err", "fn", "os", "OU", "v", "bs", "s", "aos", "output", "w", "Out", "this", "outer", "screen", "println", "res", "print", "ot", "input", "ch", "p", "system", "st", "file", "ex", "result", "nt", "null", "so", "to", "ou", "log", "cache", "list"], "a": ["ar", "aa", "ax", "t", "al", "at", "ai", "area", "va", "all", "A", "au", "ab", "pa", "oa", "ach", "r", "ao", "act", "an", "ba", "am", "app", "s", "ea", "ada", "ia", "sta", "ta", "aj", "ae", "aaa", "e", "apa", "p", "aka", "ca", "ata", "as", "la", "alpha", "att", "sa", "ma", "ac"], "b": ["mb", "bol", "bp", "nb", "f", "back", "pb", "bb", "t", "bc", "bis", "base", "bl", "bg", "bound", "ab", "ble", "B", "emb", "bit", "fb", "g", "blue", "ba", "wb", "eb", "ib", "beta", "by", "y", "v", "bs", "ob", "cb", "bt", "j", "l", "rb", "binary", "xb", "e", "br", "bd", "p", "gb", "bar", "ca", "db", "to", "be", "bi", "z", "d", "reb"], "sb": ["bp", "sg", "bps", "nb", "pb", "bj", "si", "kB", "bb", "sf", "sv", "bh", "bis", "ssh", "bf", "bg", "sq", "ub", "ab", "sp", "rob", "wb", "eb", "lb", "zb", "kb", "ib", "SB", "bs", "ob", " SB", "bsp", "s", "cb", "bt", "sam", "sbm", "rb", "buff", "gb", "scl", "sn", "sa", "gob", "ssl", "erb", "stab", "orb", "buf", "lp", "obb"], "add": ["fill", "join", "AD", "ADD", "wd", "feed", "dd", "attach", "t", "added", "pos", "ad", "fix", "ify", "sum", "find", "save", "cond", "d", "bind", "edit", "grow", "load", "update", "pend", "good", "create", "strong", "build", "start", "diff", "input", "insert", "hd", "append", "mk", "remove", "adder", "pad", "att", "end", "ld", "ext", "list", "set", "Add", "mod", "post"], "i": ["zi", "iter", "ie", "hi", "ci", "\u0438", "si", "io", "sim", "oi", "ai", "xi", "us", "ei", "me", "ful", "point", "o", "ori", "ms", "mi", "cli", "mu", "iy", "im", "gi", "y", "init", "q", "ix", "ui", "v", "info", "MI", "ki", "j", "batch", "uri", "you", "qi", "pi", "multi", "it", "ii", "PI", "pre", "ini", "di", "id", "li", "fi", "ti", "m", "iu", "phi", "ip"], "in": ["or", "ar", "f", "din", "io", "ic", "IN", "inn", "inner", "from", "us", "bin", "all", "mm", "is", "ind", "ins", "data", "r", "on", "rin", "err", "init", "conf", "en", "info", "con", "ri", "nin", "cin", "In", "pi", "inc", "it", "input", "run", "stream", "win", "ini", "file", "null", "ex", "to", "inf", "log", "reader", "m", "get"], "buffer": ["Buffer", "iter", "sequence", "length", "view", "window", "bone", "phrase", "data", "pointer", "button", "size", "reference", "source", "read", "database", "index", "bytes", "page", "resource", "password", "value", "device", "output", "limit", "batch", "header", "memory", "table", "buff", "screen", "frame", "binary", "mem", "store", "document", "p", "queue", "command", "file", "bank", "bar", "detail", "template", "paste", "db", "append", "number", "row", "buf", "cache", "list", "block", "address", "library", "message", "scroll"], "ptr": ["Ptr", "iter", "pert", "bp", "pc", "addr", "inter", "dep", "ctx", "pos", "ped", "exp", "coord", "dr", "ref", "ind", "point", "pointer", "expr", "ctr", "ps", "tp", "tip", "sp", "rob", "tr", "index", "prime", "pt", "pl", "pers", "pend", "perm", "pr", "ta", "next", "jp", "pi", "np", "req", "push", "br", "p", "fp", "cmd", "seek", "td", "pointers", "offset", "inters", "proc", "pad", "rel", "buf", "post", "address", "ts", "loc"], "buflen": [" buglend", "bucollen", " buflenc", "buflEN", "burflen", "burblist", "buplen", "buflength", "burkllen", "buglength", "bugleng", "buplis", "burflener", "buglens", "bulfEN", "buknen", "bufilist", "bufllen", "bufilen", " bullength", "bucollis", "buflend", "buflon", "bulfend", "burklis", "buklis", "bulleng", " bullen", "burklength", "buflener", "bublon", " bulleng", "bufilener", "bufren", " buglEN", "bulfen", "burflist", "burblon", "burflon", "buglend", "buflenc", "burfllen", "buknener", "buflist", " buflEN", "bufileng", "buglenc", "buflis", "buklen", " buglens", "burblener", "burblen", "bucolllen", " buglen", "bublener", "bublist", "bufrEN", "buflens", "bufilenc", "bublen", "burflength", "buglen", "bufrend", "bullenc", "buknist", " buflens", " bufleng", "buglEN", "bucollength", "burklen", "bulfens", " buflength", "bukllen", "bufilon", "buknon", " bullenc", "bufleng", "bullen", "bullength", " buflend", "bufrens", "bufilength", "buplength", "buklength", "bupllen", "burflis"], "c": ["ci", "pc", "f", "ct", "C", "cu", "t", "u", "rc", "bc", "fac", "abc", "count", "k", "pointer", "x", "type", "fc", "cod", "col", "category", "code", "cc", "ce", "cur", "h", "v", "s", "con", "w", "lc", "cb", "l", "dec", "enc", "e", "p", "ca", "cf", "dc", "cs", "ec", "d", "m", "unc", "g", "ac"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner stdIn = new Scanner(System.in);\\n\t\tint N = stdIn.nextInt();\\n\t\tint[] H = new int[N];\\n\t\tArrayList <Integer> point = new ArrayList<Integer>();\\n\t\t\\n\t\tH[0] = stdIn.nextInt();\\n\t\tfor(int i = 1; i < N; i++) {\\n\t\t\tH[i] = stdIn.nextInt();\\n\t\t\tif(H[i-1] < H[i]) {\\n\t\t\t\tpoint.add(i-1);\\n\t\t\t}\\n\t\t}\\n\t\tpoint.add(N-1);\\n\t\t\\n\t\tint max = 0;\\n\t\tif(point.get(0) > max) {\\n\t\t\tmax = point.get(0);\\n\t\t}\\n\t\tfor(int i = 0; i < point.size()-1; i++) {\\n\t\t\tif(point.get(i+1)-point.get(i)-1 > max) {\\n\t\t\t\tmax = point.get(i+1)-point.get(i)-1;\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(max);\\n\\n\t}\\n\\n}", "target": "187", "substitutes": {"stdIn": ["rdOn", "stdIng", "stdin", "stOut", "randin", "standardin", "rdin", "stdIN", " stdin", " stdOn", "stdWith", "astin", "STDIns", "ndIN", " stdIng", "ndIn", "STDin", "astIn", "stin", "ndin", "rdIn", "randOut", " stdWith", " stdOut", "stIn", "standardWith", "STDIn", "astOn", "rdIng", " stdIns", "randIN", "standardIn", "stdIns", "STDOut", "stIns", "randWith", " stdIN", "stdOn", "randIns", "standardOut", "ndIns", "stdOut", "randIn", "astIng"], "N": ["I", "NN", "R", "NC", "C", "ND", "L", "AN", "Y", "Q", "NO", "Z", "Num", "NT", "O", "M", "D", "S", "B", "Node", "F", "P", "V", "n", "NR", "Ni", "Number", "NB", "TN", "NI", "GN", "NA", "K", "J", "Size", "NH", "NS", "Len", "X", "SN", "Length", "T", "Ns", "Sn", "No", "NE"], "H": ["E", "I", "High", "His", "Handler", "He", "C", "SH", "HH", "HI", "Y", "Hash", "HTTP", "M", "D", "Host", "MH", "HA", "B", "F", "P", "V", "HR", "h", "W", "OH", "HK", "HP", "HL", "HB", "high", "CH", "TH", "K", "G", "HS", "J", "HD", "NH", "Eh", "HHHH", "Hi", "CP", "X", "Header", "T", "HT", "HC", "HQ"], "point": ["close", "error", "patch", "draw", "sequence", "open", "success", "word", "art", "post", "zero", "zone", "back", "position", "exclusive", "window", "shape", "part", "base", "adjusted", "op", "condition", "bound", "pointer", "parent", "reset", "client", "tmp", "button", "size", "Point", "sp", "bit", "check", "request", "page", "index", "pt", "address", "function", "prefix", "valid", "local", "box", "set", "state", "points", "table", "pattern", "start", "mark", "stop", "step", "p", "pool", "stroke", "pre", "offset", "command", "group", "chain", "to", "event", "pad", "number", "end", "line", "list", "block", "frame", "message"], "i": ["or", "io", "us", "o", "iu", "n", "index", "y", "ix", "l", "pi", "ii", "yi", "id", "fi", "ti", "bi", "phi", "ie", "hi", "ci", "f", "xi", "ei", "ori", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "my", "print", "chain", "ini", "list", "m", "iter", "si", "ic", "sim", "oi", "eu", "is", "ind", "x", "mi", "err", "sp", "gi", "ji", "it", "e", "p", "di", "user", "in", "z", "zi", "I", "ami", "\u0438", "u", "ai", "me", "c", "h", "key", "by", "im", "v", "info", "q", "ri", "ki", "ity", "li", "ip"], "max": ["zero", "Max", "right", "global", "debug", "cur", "n", "head", "min", "rest", "old", "gt", "tx", "mad", "result", "default", "MAX", "best", "huge", "view", "used", "map", "base", "out", "sum", "pointer", "maximum", "med", "high", "hash", "lock", "step", "chain", "mean", "ex", "number", "ma", "mod", "m", "length", "range", "exp", "fixed", "k", "x", "tmp", "size", "prime", "master", "grow", "rand", "p", "can", "total", "to", "top", "end", "temp", "act", "error", "ax", "window", "all", "height", "last", "now", "opt", "full", "h", "key", "v", "conf", "box", "limit", "pr", "res", "mx", "null", "checked"]}}
{"code": "import java.util.*;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        int X = sc.nextInt();\\n        int T = sc.nextInt();\\n\\n        int ans = 0;\\n        int times = 0 ;\\n        times = (int) Math.ceil((double) N / X);\\n\\n        ans = times * T;\\n\\n        System.out.println(ans);\\n\\n    }\\n}", "target": "34", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "sq", "gc", "scope", "mom", "sp", "cont", "c", "cc", "isc", "esc", "ser", "cl", "ko", "lc", "ctl", "ctrl", "desc", "mc", "inc", "scl", "cr", "capt", "ch", "system", "ck", "cgi", "ss", "dc", "cs", "tc", "Sc", "scan"], "N": ["I", "NN", "NM", "R", "NC", "C", "L", "Y", "A", "Num", "NT", "M", "D", "S", "P", "V", "n", "NR", "CNN", "W", "NUM", "NB", "TN", "U", "GN", "NA", "NH", "H", "NS", "SN", "Ns"], "X": ["E", "XX", "I", "TX", "R", "C", "ax", "L", "Y", "Q", "Z", "XXX", "M", "D", "AX", "Tx", "x", "XM", "S", "F", "P", "V", "OX", "W", "CPU", "U", "XL", "XP", "TH", "J", "H", "DX", "NS", "UX", "IX", "EX"], "T": ["E", "I", "TV", "PT", "R", "C", "L", "t", "TS", "Y", "TT", "Q", "Z", "TL", "NT", "TA", "O", "M", "D", "S", "B", "F", "TIME", "P", "V", "TC", "W", "TN", "K", "TH", "G", "J", "H", "TR", "Time", "TM"], "ans": ["ANS", "anks", "offs", "ces", "AN", "lines", "reads", "ats", "ads", "types", "aps", "eds", "ann", "ants", "ins", " means", "outs", "prints", "ms", "uns", "orders", "aus", "ks", "an", "ians", "ands", "s", "amps", "rans", "books", "posts", "olds", "ons", "ens", "ars", "ams", "ids", "missions", "ns", "rs", "stats", "ls", "vals", "cs", "mas", "actions", "arms", "caps", "arts", "ents"], "times": ["trans", "arts", "cas", "time", "runs", "values", "events", "Times", "ces", "checks", "maps", "TS", "ats", "types", "t", "aps", "cases", "ints", "ins", "tests", "outs", "names", "ms", "ps", "versions", "seconds", "ups", "ones", "sets", "flags", "amps", "terms", "ens", "rices", "forms", "series", "places", "etimes", "xes", "tx", "imes", "stats", " Times", "cs", "caps", "cycles", "actions", "reads", "tc", "rates", "ts"]}}
{"code": "import java.io.*;\\nimport java.math.*;\\nimport java.security.*;\\nimport java.text.*;\\nimport java.util.*;\\nimport java.util.concurrent.*;\\nimport java.util.regex.*;\\n\\n\\n    \\n    public class Main{\\n        public static int function(int[] Arr,int K)\\n        {\\n            int N=Arr.length;\\n            int count=0;\\n            for(int i=0;i<N;i++)\\n            {\\n                if(Arr[i]>=K)\\n                    count++;\\n            }\\n            return count;\\n        }\\n        \\n\\n   public static void main (String[] args)  throws IOException{\\n\\n      Scanner sc=new Scanner(System.in);\\n      int N=0;\\n      int K=0;\\n      if(sc.hasNextInt())\\n      {\\n          N=sc.nextInt();\\n          K=sc.nextInt();\\n      }\\n      \\n          int[] Arr=new int[N];\\n          for(int i=0;i<N;i++)\\n          {\\n              Arr[i]=sc.nextInt();\\n          }\\n          \\n      \\n      System.out.println(function(Arr,K));\\n     \\n      \\n   \\n   }\\n   \\n}\\n", "target": "145", "substitutes": {"Arr": ["arrc", "Earrm", "Arrc", "Alrs", "Alb", "earrs", "ARrb", "arrs", "Shrc", "Erry", "Earn", "Arfr", "Burp", "Attp", "earrb", "ARb", " Arrs", "Attrm", "Burr", " Arb", " Arrm", " Arp", " Arn", "arrrs", "Arb", "ArStr", "arn", "Ern", "Burrc", "ARn", "arry", "Attrc", "ARrs", "Arrs", "earStr", "arr", "Alfr", "ARStr", "ARfr", "ARrm", "arrr", "Arp", "earr", "arrStr", "Shn", "Errs", " Arry", "arp", "Burrm", " Arrc", "Shr", "ARr", "Earp", "Err", "Earr", "Arry", "Arrm", "Attr", " Arfr", "Shrs", "arrm", "ARp", "Alr", "Arrb", "Errc", "Arn", "arrrb"], "K": ["ANK", "I", "KING", " k", "R", "KC", "Count", "C", "PK", "FK", "L", "VK", "KE", "Q", "Z", "Sk", "M", "k", "UK", "B", "MC", "MN", "P", "V", "DK", "AK", "NK", "W", "Kind", "KK", "HK", "MK", "OK", "NB", "SK", "TN", "KR", "AC", "Key", "Mask", "TH", "G", "J", "H", "Family", "KI", "KB", "KA", "T", "KEY", "KT", "KS"], "N": ["CN", "I", "NN", "NM", "R", "NC", "Count", "OUT", "ND", "L", "AN", "C", "Y", "NO", "NT", "M", "D", "NAT", "NF", "S", "Node", "MN", "EN", "UN", "NG", "V", "n", "P", "NR", "CNN", "NL", "NY", "NB", "NP", "ANY", "TN", "NW", "NI", "GN", "NA", "J", "ON", "NH", "Size", "NS", "Len", "NOR", "SN", "Length", "Total", "No", "Ns", "Now", "FN", "NE", "NOW"], "count": ["OUNT", "found", "length", "flag", "status", "counter", "Count", "nb", "const", "ct", "C", "th", "ind", "sum", "ctr", "type", "cond", "size", "d", "cont", "code", "c", "n", "entry", "nn", "index", "ount", "state", "set", "current", "amount", "total", "result", "nt", "number", "num", "list", "z", "frequency", "core"], "i": ["zi", "iter", "ie", "hi", "ci", "I", "ami", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "ei", "us", "xi", "me", "is", "ind", "ori", "o", "ms", "r", "mi", "err", "cli", "mu", "iy", "im", "gi", "init", "info", "ix", "y", "ui", "wi", "ri", "ki", "j", "uri", "batch", "ity", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "chain", "ini", "di", "id", "li", "fi", "in", "ti", "bi", "ims", "m", "iu", "phi", "ip"], "sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "sub", "sec", "sk", "sp", "c", "cc", "isc", "esc", "cl", "lc", "ctl", "ctrl", "cons", "mc", "inc", "scl", "cr", "capt", "ch", "system", "tch", "st", "ss", "sci", "ssl", "dc", "cle", "cs", "tc", "Sc", "sb", "sr"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n\\n        int x = sc.nextInt();\\n\\n        if (x == 0) {\\n            System.out.println(1);\\n        }else{\\n            System.out.println(0);\\n        }\\n        sc.close();\\n    }\\n}\\n", "target": "148", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "syn", "cu", "usc", "se", "sv", "rc", "nc", "bc", "asc", "cam", "sch", "sq", "gc", "sub", "fc", "sec", "sp", "c", "cc", "cur", "esc", "ser", "isc", "cl", "lc", "screen", "mc", "nl", "scl", "cr", "sel", "ch", "system", "capt", "ck", "ss", "sa", "cle", "cs", "tc", "Sc", "sb", "scan"], "x": ["xp", "f", "xd", "ax", "t", "xx", "xt", " xx", "xi", "xf", "dx", "k", "ox", "i", "g", "n", "xxxxxxxx", "xc", "y", "v", "ix", "m", "j", "wx", "rx", "xb", "mx", "p", "xy", "ex", "inx", "X", "tx", "z", "xxx", "ux", "xs"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        String s = sc.nextLine();\\n        System.out.println(problem160a(s));\\n    }\\n\\n    private static String problem160a(String s) {\\n        return (equal(s, 2, 3) && equal(s, 4, 5)) ? \"Yes\" : \"No\";\\n    }\\n\\n    private static boolean equal(String s, int at1, int at2) {\\n        return s.charAt(at1) == s.charAt(at2);\\n    }\\n}", "target": "30", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "se", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "sub", "anc", "sec", "sp", "c", "cc", "ser", "esc", "isc", "cl", "ko", "lc", "Sc", "desc", "mc", "scl", "cr", "ch", "cle", "cs", "ec", "tc", "ss", "scan"], "s": ["its", "hs", "aws", "erences", "comm", "abs", "sq", "ms", "n", "os", "y", "w", "ws", "l", "st", "ers", "stats", "cs", "ss", "g", "es", "fs", "sql", "sl", "t", "ings", "ps", "ys", "ags", "bs", "ences", "string", "b", "ls", "str", "ts", "ats", "gets", "sv", "is", "S", "sp", "p", "ns", "ds", "sing", "ims", "z", "xs", "sw", "qs", "sys", "lines", "js", "sts", "eps", "ies", "strings", "ses", "data", "c", "h", "v", "resses", "conf", "a", "gs", "rs", "sb", "se", "ries"], "at1": ["AtFirst", "iat0", "intFirst", "At0", "intOne", "rat0", "at0", "ratFirst", "int1", "iat1", "ratOne", "atOne", "At1", "AtOne", "atFirst", "iatOne", "rat1", "int0"], "at2": ["cat2", "atSecond", "ittwo", "iattwo", "attwo", "At02", "at02", "gat4", "atan4", "iat4", "gat2", "atantwo", "cat1", "At2", "cattwo", "atan2", "iatSecond", "iat2", "Attwo", "At1", "it2", "gatSecond", "gattwo", "atanSecond", "it1", "cat02", "at4", "it02"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        Scanner in = new Scanner(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        CTypicalStairs solver = new CTypicalStairs();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class CTypicalStairs {\\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\\n            int mod = 1_000_000_007;\\n            int n = in.nextInt();\\n            int m = in.nextInt();\\n            int[] arr = new int[n];\\n            for (int i = 0; i < m; i++)\\n                arr[i] = in.nextInt();\\n            //dp[k] : nb of steps to get to get to the N-1th from the kth step\\n            //dp[k] = if arr[k]==0 => 0 else dp[k+1] + dp[k+2]\\n            //dp[n-1] = 1\\n            long[] dp = new long[n + 2];\\n            dp[n + 1] = 0;\\n            dp[n] = 1;\\n            int cur = m == 0 ? -1 : arr[m - 1];\\n            int indM = m - 1;\\n            for (int i = n - 1; i >= 0; i--) {\\n                if (i == cur) {\\n                    indM--;\\n                    if (indM >= 0)\\n                        cur = arr[indM];\\n                    dp[i] = 0;\\n                } else {\\n                    dp[i] = dp[i + 1] + dp[i + 2];\\n                    dp[i] %= mod;\\n                }\\n            }\\n            out.println(dp[0]);\\n        }\\n\\n    }\\n}\\n\\n", "target": "174", "substitutes": {"inputStream": ["currentStream", " inputSteam", " inputSource", "currentSteam", "thisStream", "outputWindow", "outputSource", "currentstream", "outputSocket", " inputWindow", "thisSocket", "outputstream", " inputSocket", "thisSource", "inputSource", "inputSocket", "outputSteam", " inputstream", "inputstream", "inputWindow", "currentWindow", "inputSteam", "thisSteam"], "outputStream": ["OutputSteam", "connectionForm", "outStream", "outputForm", "connectionFile", "outForm", "inputForm", "connectionStream", "writeForm", "outstream", "OutputForm", "outputstream", "connectionSteam", " outputFile", "OutputFile", " outputForm", "writestream", "writeSteam", "outputSteam", "OutputStream", " outputSteam", "outSteam", "inputstream", "outputFile", "writeStream", "inputSteam"], "in": ["or", "iter", "inside", "xml", "pp", "din", "io", "serv", "IN", "t", "window", "inn", "inner", "raw", "bin", "er", "exec", "is", "ind", "ins", "o", "add", "r", "on", "rin", "err", "source", "thin", "h", "isin", "init", "im", "en", "info", "con", "s", "conf", "per", "output", "local", "this", "gin", "l", "doc", "cin", "current", "In", "sin", "inc", "it", "input", "can", "stream", "run", "form", "file", "ini", "rt", "null", "dir", "inf", "log", "reader", "get", "scan"], "out": ["stable", "writer", "report", "sys", "OUT", "io", " OUT", "t", "at", "inner", "all", "net", "write", "gc", "sum", "ins", "outs", "o", "x", "client", "gr", "msg", "r", "err", "c", "name", "os", "v", "OU", "s", "aos", "output", "w", "Out", "this", "j", "outer", "table", "co", "res", "it", "print", "p", "ch", "run", "gt", "b", "ex", "null", "nt", "user", "to", " Out", "end", "ou", "log", "temp", "cache", "list"], "solver": ["esolver", "esolution", "Solution", " sorter", " solar", "resolver", "esolar", "solving", "esorter", "solar", " solving", " solution", "resolving", "esolving", "esolve", "Solve", "Sorter", "solve", "resolution", "resolar", " solve", "sorter", "Solver", "solution"], "testNumber": [" testNum", "testNumbers", "caseNum", "testNum", "TestNumbers", "testNo", "caseNo", "caseNumbers", "TestNum", " testNumbers", "TestNumber", " testNo", "TestNo", "caseNumber"], "mod": ["reg", "ver", "MOD", "mix", " Mod", "mode", "t", "fac", "max", "ref", "base", "inv", "z", "err", "tr", "key", "min", "j", "Mod", "start", "mem", "step", "null", "row", "log", "mult", "set"], "n": ["nm", "nb", "t", "nc", "mn", "nan", "k", "na", "x", "o", "r", "c", "an", "nn", "h", "v", "en", "w", "N", "j", "l", "nu", "np", "p", "sn", "ns", "nt", "nw", "ni", "nr", "num", "d", "ne"], "m": ["sm", "mb", "mt", "nm", "f", "t", "u", "bm", "mm", "mp", "M", "mn", "k", "ma", "o", "ms", "r", "mi", "c", "dm", "h", "med", "y", "v", "gm", "j", "perm", "l", "mc", "mx", "p", "tm", "b", "cm", "d"], "arr": ["iq", "ARR", "aug", "ar", "ray", "aa", "ax", "img", "our", "Array", "Ar", "au", "bl", "expr", "ab", "par", "add", "alph", "gr", "err", "shr", "conf", "adj", "hash", "ars", "aj", "aaa", "warn", "br", "coll", "dict", "dat", "frac", "bar", "array", "fr", "act", "attr"], "i": ["zi", "iter", "I", "sequence", "ci", "hi", "f", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "xi", "ei", "us", "eu", "is", "x", "mi", "maybe", "cli", "gi", "init", "MI", "info", "q", "ix", "ui", "set", "ki", "j", "qi", "pi", "multi", "ji", "ij", "it", "ii", "PI", "b", "gu", "ini", "di", "id", "li", "ti", "bi", "ims", "iu", "phi", "ip"]}}
{"code": "/* package whatever; // don't place package name! */\\n \\nimport java.util.*;\\nimport java.lang.*;\\nimport java.io.*;\\n \\npublic class Main\\n{\\n\tpublic static void main (String[] args) throws java.lang.Exception\\n\t{\\n\t\tScanner in = new Scanner(System.in);\\n\t\tString s = in.next();\\n\t\tSystem.out.println(\"2018\"+ s.substring(4));\\n\t}\\n}", "target": "18", "substitutes": {"in": ["iter", "sys", "f", "din", "lines", "io", "IN", "inn", "inner", "from", "bin", "all", "er", "sol", "is", "out", "ind", "k", "ins", "i", "r", "rin", "err", "n", "thin", "isin", "conf", "en", "info", "con", "this", "gin", "doc", "cin", "In", "sin", "inc", "it", "world", "input", "stream", "b", "run", "file", "ini", "proc", "user", "inf", "reader", "log", "ln", "line", "scan"], "s": ["qs", "what", "sys", "f", "ats", "t", "sts", "sv", "csv", "has", "gets", "aws", "strings", "sq", "i", "S", "simple", "c", "n", "source", "h", "v", "src", "w", "ws", "space", "string", "su", "sample", "p", "b", "ns", "rs", "ls", "stats", "still", "str", "m", "ss", "details", "g", "ts"]}}
{"code": "import java.math.BigInteger;\\nimport java.util.*;\\npublic class Main{\\n\tpublic static void main(String[] args){\\n        Scanner sc= new Scanner(System.in);\\n        BigInteger n = sc.nextBigInteger();\\n        String s = String.valueOf(n);\\n        int sum =0;\\n        for(char c:s.toCharArray())\\n            sum += Integer.parseInt(String.valueOf(c));\\n        if(sum%9==0)\\n         \tSystem.out.println(\"Yes\");\\n         else\\n         \tSystem.out.println(\"No\");\\n  \t}\\n}\\n\\n", "target": "93", "substitutes": {"sc": ["SC", "sm", "osc", "pc", "sys", "syn", "se", "sv", "rc", "nc", "bc", "asc", "sync", "k", "sch", "sq", "gc", "anc", "sec", "sp", "cc", "ser", "esc", "isc", "cl", "lc", "desc", "mc", "acc", "scl", "cr", "ch", "system", "ss", "cs", "ec", "tc", "Sc", "scan"], "n": [" nu", "nv", "nb", "net", "max", "mn", "i", "na", "ng", "nn", "nor", "tn", "gn", "N", "j", "sam", "nu", " N", "np", "nl", "cn", "norm", "p", "sn", "ns", "nd", "nt", "nw", "nr", "num", "z", "ln", "ne"], "s": ["qs", "sg", "fs", "sql", "sys", "f", "sl", "t", "ats", "js", "se", "sv", "strings", "sq", "S", "ms", "ps", "sp", "g", "source", "h", "ess", "v", "w", "l", "a", "string", "gs", "p", "st", "ns", "rs", "b", "ls", "sa", "cs", "str", "set", "m", "ss", "sb", "ts"], "sum": ["zero", "cos", " SUM", "mass", "cost", "sim", "SU", "scale", "fac", "match", "share", "max", "sup", "count", "union", "add", "size", "must", "cum", "tail", "cal", "tu", "average", "summary", "hash", "sam", "Sum", "su", "acc", "amount", "vol", "ass", "st", "mean", "total", "result", "sun", "um", "gam", "alpha", "gram", "sa", "num", "temp", "comment", "black"], "c": ["cap", "pc", "f", "C", "cu", "ct", "ic", "t", "u", "character", "bc", "k", "uc", "fc", "cd", "category", "col", "cc", "v", "tc", "lc", "cat", "l", "arc", "co", "mc", "char", "cr", "chain", "etc", "b", "vc", "cf", "cp", "dc", "cs", "unc", "cell", "ac"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = Integer.parseInt(sc.next());\\n        int k = Integer.parseInt(sc.next());\\n        String s = sc.next();\\n\\n        StringBuilder result = new StringBuilder(n);\\n        result.append(s.substring(0, k - 1));\\n        result.append(String.valueOf(s.charAt(k - 1)).toLowerCase());\\n        result.append(s.substring(k));\\n        System.out.println(result.toString());\\n    }\\n}\\n", "target": "71", "substitutes": {"sc": ["SC", "osc", "pc", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "ko", "lc", " Sc", "ctl", "desc", "ctrl", "cons", "mc", "inc", "scl", "cr", "ch", "ck", "ss", "sci", "conv", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "ln", "nc", "net", "ll", "mn", "out", "i", "na", "x", "ng", "c", "nn", "v", "en", "N", "j", "l", "nu", "np", "nl", "pi", "cn", "p", "sn", "ns", "nt", "number", "num", "nr", "un", "d", "m", "g"], "k": ["kn", "t", "kan", "ak", "kh", "ka", "dk", "kk", "kj", "unk", "i", "kat", "ek", "r", "sk", "ks", "ke", "key", "kid", "v", "q", "ko", "w", "j", "kw", "ik", "ku", "kl", "K", "mc", "ok", "p", "ck", "ch", "kr", "cm", "mk", "num", "z", "m", "km", "g", "tk"], "s": ["its", "sort", "qs", "sql", "sys", "sl", "ats", "js", "sf", "sv", "se", "sts", "is", "abs", "sq", "S", "ms", "ps", "r", "sp", "g", "less", "source", "src", "tes", "bs", "w", "ws", "space", "string", "res", "gs", "sample", "st", "ns", "rs", "b", "search", "ls", "so", "ds", "cs", "str", "m", "ss", "sb", "ts"], "result": ["region", "root", "report", "closure", "success", "pair", "join", "section", "date", "profile", "folder", "csv", "product", "complete", "match", "part", "out", "primary", "test", "debug", "r", "either", "use", "relation", "wrapper", "currency", "function", "prefix", "results", "output", "replace", "description", "power", "true", "summary", "memory", "make", "create", "mask", "res", "answer", "feature", "created", "continue", "command", "search", "total", "ret", "reason", "group", "user", "Result", "url", "trace", "cache", "comment", "message"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint X = Integer.parseInt(sc.next());\\n\t\tsc.close();\\n\\n\\n\t\tint ans = Integer.MIN_VALUE;\\n\t\tif(X < 4) {\\n\t\t\tSystem.out.println(1);\\n\t\t\treturn;\\n\t\t}else {\\n\t\t\tfor(int i = 2; i <= X; i++) {\\n\t\t\t\tint j = 2;\\n\t\t\t\tint tmp = (int) Math.pow(i, j);\\n\t\t\t\twhile(tmp <= X) {\\n\t\t\t\t\tj++;\\n\t\t\t\t\ttmp = (int) Math.pow(i, j);\\n\t\t\t\t}\\n\t\t\t\ttmp = (int) Math.pow(i, j - 1);\\n\t\t\t\tif(ans < tmp && j > 2) {\\n\t\t\t\t\tans = tmp;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tSystem.out.println(ans);\\n\t\t}\\n\\n\t}\\n\\n}", "target": "143", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "Scan", "Sync", "gc", "sq", "sch", "uc", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "lc", " Sc", "arc", "dec", "mc", "RC", "res", "cer", "scl", "cr", "ch", "system", "cle", "cs", "ec", "tc", "Sc", "scan"], "X": ["XX", "I", "MAX", "TX", "IP", "R", "C", "L", "Y", "TY", "Q", "Z", "A", "max", "XXX", "M", "D", "AX", "Tx", "x", "XM", "XT", "FF", "S", "F", "P", "V", "OX", "N", "U", "AC", "XL", "XP", "K", "G", "MX", "J", "H", "DX", "UX", "T", "IX", "EX", "xs"], "ans": ["nets", "ANS", "orts", "offs", "ces", "nz", "AN", "lines", "ats", "ads", "types", "aps", "eps", "eds", "ann", "ants", "ins", " means", "outs", "names", "ms", "x", "ps", "times", "uns", "aus", "ks", "an", "annot", "vs", "lan", "ones", "os", "tn", "flags", "s", "terms", "rans", "amps", "ends", "ons", "ens", "ars", "vers", "ids", "can", "ns", "rs", "oos", "ls", "ds", "vals", "ents", "cs", "reads", "arts", "xs", "ts"], "i": ["zi", "I", "hi", "ci", "ie", "ami", "inter", "si", "io", "t", "sim", "ic", "ai", "ei", "xi", "is", "ind", "ori", "x", "mi", "index", "y", "im", "v", "info", "ix", "init", "ui", "gi", "ri", "ki", "ia", "l", "a", "pi", "ij", "it", "ii", "p", "di", "ini", "id", "li", "in", "ti", "bi", "m", "iu", "phi", "ip", "asi"], "j": ["f", "bj", "t", "js", "u", "obj", "kj", "k", "ind", "oj", "x", "o", "r", "sp", "uj", "c", "n", "key", "jc", "y", "v", "q", "dj", "json", "adj", "l", "aj", "jp", "jump", "ji", "ij", "J", "it", "br", "jit", "p", "xy", "b", "jj", "other", "to", "z", "m", "tree", "g", "ja"], "tmp": ["cmp", "mb", "comp", "nb", "snap", "ctx", "tv", "t", "obj", "mm", "max", "mp", "mut", "ind", "cv", "x", "copy", "tp", "tar", "sp", "qq", "cur", "index", "prime", "attr", "tn", "v", "emp", "m", "cb", "perm", "sam", "mod", "wx", "buff", "elt", "jp", "np", "ji", "acc", "tt", "etc", "p", "xy", "tm", "zip", "pre", "jj", "td", "offset", "ret", "nt", "mk", "xs", "txt", "rt", "yy", "cp", "ptr", "temp", "cache", "z", "xxx", "tf", "test"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.OutputStream;\\nimport java.io.PrintWriter;\\nimport java.io.BufferedWriter;\\nimport java.io.Writer;\\nimport java.io.OutputStreamWriter;\\nimport java.util.InputMismatchException;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader in = new InputReader(inputStream);\\n        OutputWriter out = new OutputWriter(outputStream);\\n        B3CardGameForThreeABCEdit solver = new B3CardGameForThreeABCEdit();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class B3CardGameForThreeABCEdit {\\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\\n            String Sa = in.nextString();\\n            String Sb = in.nextString();\\n            String Sc = in.nextString();\\n\\n            int a = 0, b = 0, c = 0;\\n            char next = 'a';\\n            while (true) {\\n                if (next == 'a') {\\n                    if (a == Sa.length()) {\\n                        out.println(\"A\");\\n                        break;\\n                    } else {\\n                        next = Sa.charAt(a);\\n                        a++;\\n                    }\\n                } else if (next == 'b') {\\n                    if (b == Sb.length()) {\\n                        out.println(\"B\");\\n                        break;\\n                    } else {\\n                        next = Sb.charAt(b);\\n                        b++;\\n                    }\\n                } else if (next == 'c') {\\n                    if (c == Sc.length()) {\\n                        out.println(\"C\");\\n                        break;\\n                    } else {\\n                        next = Sc.charAt(c);\\n                        c++;\\n                    }\\n                }\\n            }\\n        }\\n\\n    }\\n\\n    static class InputReader {\\n        private InputStream stream;\\n        private byte[] buf = new byte[1024];\\n        private int curChar;\\n        private int numChars;\\n        private InputReader.SpaceCharFilter filter;\\n\\n        public InputReader(InputStream stream) {\\n            this.stream = stream;\\n        }\\n\\n        public int read() {\\n            if (numChars == -1) {\\n                throw new InputMismatchException();\\n            }\\n            if (curChar >= numChars) {\\n                curChar = 0;\\n                try {\\n                    numChars = stream.read(buf);\\n                } catch (IOException e) {\\n                    throw new InputMismatchException();\\n                }\\n                if (numChars <= 0) {\\n                    return -1;\\n                }\\n            }\\n            return buf[curChar++];\\n        }\\n\\n        public String nextString() {\\n            int c = read();\\n            while (isSpaceChar(c)) {\\n                c = read();\\n            }\\n            StringBuilder res = new StringBuilder();\\n            do {\\n                if (Character.isValidCodePoint(c)) {\\n                    res.appendCodePoint(c);\\n                }\\n                c = read();\\n            } while (!isSpaceChar(c));\\n            return res.toString();\\n        }\\n\\n        public boolean isSpaceChar(int c) {\\n            if (filter != null) {\\n                return filter.isSpaceChar(c);\\n            }\\n            return isWhitespace(c);\\n        }\\n\\n        public static boolean isWhitespace(int c) {\\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\\n        }\\n\\n        public interface SpaceCharFilter {\\n            public boolean isSpaceChar(int ch);\\n\\n        }\\n\\n    }\\n\\n    static class OutputWriter {\\n        private final PrintWriter writer;\\n\\n        public OutputWriter(OutputStream outputStream) {\\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\\n        }\\n\\n        public OutputWriter(Writer writer) {\\n            this.writer = new PrintWriter(writer);\\n        }\\n\\n        public void print(Object... objects) {\\n            for (int i = 0; i < objects.length; i++) {\\n                if (i != 0) {\\n                    writer.print(' ');\\n                }\\n                writer.print(objects[i]);\\n            }\\n        }\\n\\n        public void println(Object... objects) {\\n            print(objects);\\n            writer.println();\\n        }\\n\\n        public void close() {\\n            writer.close();\\n        }\\n\\n    }\\n}\\n\\n", "target": "11", "substitutes": {"inputStream": ["currentStream", " inputSteam", "inputStreamer", "inputPort", "inputFile", "outputSource", "sourceSteam", "sourcePort", "currentSource", "outputPort", "mySteam", "currentStreamer", "myStreamer", "mySource", "inputSource", " inputPort", "outputSteam", "inputSteam", "sourceStream", "sourceFile", "outputFile", "currentSteam", "outputStreamer", "myStream", " inputFile"], "outputStream": ["iconWriter", "iconNow", "responseSteam", "outputWriter", "connectionstream", "connectionStream", "responseWriter", "writeStreamer", "outputstream", "outputNow", "connectionSteam", " outputNow", "writestream", "writeSteam", "iconStream", "outputSteam", "iconSteam", " outputSteam", "connectionStreamer", " outputWriter", "responseNow", "responseStream", "responsestream", "responseStreamer", "writeStream", "outputStreamer"], "in": ["or", "io", "serv", "re", "net", "o", "conn", "config", "and", "source", "en", "con", "l", "doc", "cin", "In", "form", "file", "id", "ze", "din", "t", "al", "add", "isin", "init", "s", " din", "pin", "run", "win", "ini", "log", "reader", "m", "ma", "iter", "ic", "inner", "from", "mm", "bin", "er", "is", "ind", "ins", "r", "on", "mi", "err", "lo", "local", "nin", "it", "rt", "inf", "IN", "inn", "rin", "context", "conf", "info", "this", "gin", "inc", "input", "null", "vin", "kin", "query", "get"], "out": ["format", "report", "sys", "OUT", "io", "t", "at", "flush", "obj", "inner", "all", "net", "write", "last", "gc", "sum", "o", "outs", "client", "tmp", "conn", "msg", "err", "n", "fn", "os", "OU", "v", "conf", "s", "aos", "output", "w", "json", "Out", "this", "pas", "hit", "summary", "outer", "table", "co", "screen", "it", "print", "p", "pool", "can", "ex", "cmd", "result", "nt", "null", "user", "to", "conv", "end", "ou", "log", "cache", "set", "list"], "solver": ["esolver", "esolution", "Solution", "resolver", "resoln", "solved", "solving", "ssolve", "persolved", "persolver", "ssolver", "esoln", "resolving", "esolving", "ssolved", "soln", "ssolution", "persolve", "Solve", "persolution", "ssoln", "ssolving", "solve", "resolution", "Solver", "Solved", "solution"], "testNumber": [" testNUM", "testNumbers", " testingNumbers", " scenarioNo", " scenarioNumbers", " testingNumber", "testNo", " testingNo", " testingNUM", " testNumbers", "testNUM", " scenarioNUM", " testNo", " scenarioNumber"], "Sa": ["So", "Su", "Rh", "Cla", "Ja", "Sl", "Sax", "Na", "South", "Las", "Sal", "Va", "Sah", "Luc", "SA", "S", "Sad", "Sche", "She", "San", "Har", "Ba", "Crit", "Capt", "St", "Tu", "Sus", "Isa", "Sac", "Cass", "La", "Ro", "Si", "Sam", "Bra", "Dar", "Jr", "Sim", "sa", "Lat", "Sea", "Pa", "Ca", "Ta", "Ru", "Sav", "ZA"], "Sb": ["Bbb", "Sbl", "SEbl", "Sp", "Sbb", "Stf", " Sbl", "Stb", "Sib", "Cib", "SEB", "Stbl", "Cbb", "SEp", "Stp", "SEc", "SB", "SEf", " SB", " Sbb", "Cb", "SEb", "Bbi", " Sbi", " Sp", " Sib", "Sbi", " Sf", "Cbi", "Sf", "Bb", "Bib"], "Sc": ["SC", "Score", "So", "Cle", "C", "Soc", "Sp", "Sax", "Sk", "Cow", "Ga", "Ch", "Scroll", "Luc", "Ser", "Cl", "S", "Che", "Sys", "Sche", "Desc", "Th", "Te", "Crit", "Sat", "Sch", "Capt", "St", "Sec", "Corp", "Sw", "Cr", "Cong", "Gy", "Cro", "Ty", "Se", "Ns", "Sn", "Snap", "Ca", "Kit", "cs", "Ops", "sc", "Sh", "Cons", "Cs"], "a": ["ar", "aa", "ax", "t", "at", "al", "ai", "area", "va", "A", "fa", "da", "au", "na", "pa", "x", "ab", "oa", "r", "ao", "ba", "n", "am", "an", "ea", "ga", "ia", "l", "sta", "isa", "ta", "ae", "aj", "aaa", "e", "apa", "p", "qa", "ca", "ata", "alpha", "la", "to", "as", "sa", "ma", "ac"], "b": ["mb", "business", "bp", "nb", "back", "bb", "bc", "bis", "base", "bf", "bound", "ab", "no", "B", "emb", "fb", "g", "ba", "wb", "n", "eb", "ib", "by", "beta", "lb", "v", "bs", "ob", "bo", "cb", "batch", "j", "l", "rb", "e", "gb", "br", "p", "db", "be", "erb", "bi", "sb"], "c": ["cmp", "cos", "f", "C", "cu", "ct", "t", "com", "rc", "bc", "uc", "fc", "z", "r", "cd", "category", "cont", "err", "unc", "col", "ce", "n", "cc", "cur", "v", "conf", "cor", "con", "lc", "cb", "l", "co", "mc", "crit", "e", "cr", "cn", "p", "chain", "coll", "cm", "cf", "conv", "cp", "dc", "cs", "ec", "d", "tc", "sc", "g", "ac"], "next": ["close", "scale", "net", "global", "page", "prefix", "valid", "good", "future", "Next", " NEXT", "append", "result", "any", "sche", "see", "policy", "default", "path", "network", "shift", "complete", "send", "add", "button", "link", "remote", "non", "j", "escape", "current", "after", "normal", "chain", "draw", "want", "sequence", "success", "version", "dev", "err", "ev", "ner", "vious", "prev", "extra", "req", "secondary", "total", "top", "end", "ext", "trace", "fr", "scroll", " Next", "magic", "first", "reply", "last", "inv", "entry", "key", "label", "info", "this", "desc", "start", "jp", "continue", "fail", "missing", "gov", "ne"], "stream": ["or", "iter", "sw", "path", "pair", "pod", "Stream", "socket", "speed", "inter", "serv", "dd", "window", "content", "iterator", "our", "ream", "console", "port", "hook", "loop", "parent", "buffer", "context", "REAM", "read", "host", "down", "spec", "resource", "con", "output", "each", "Steam", "table", "sample", "input", "pipe", "form", "pool", "chain", "file", "accept", "result", "stack", "proc", "user", "engine", "row", "reader", " upstream", "channel", "message"], "buf": ["Buffer", "uf", "cap", "seq", "bin", "bl", "vec", "cv", "buffer", "tmp", "msg", "pkg", "err", "cur", "arr", "bytes", "orig", "cb", "rb", "buff", "mem", "br", "pool", "pipe", "queue", "txt", "proc", "conv"], "curChar": ["crCh", "Curchar", "curCh", " curCh", "curchar", "curCharacter", "crCharacter", " curchar", " curCharacter", "crchar", "CurChar", "crChar", "CurCh", "CurCharacter"], "numChars": ["numClases", "numCharars", " numChaps", "numClARS", "numEntARS", "numEntaps", " numChards", " numCharARS", " numchaps", " numchARS", "numBuffARS", " numCharases", "numchARS", "numEntards", "numChards", "numBuffaps", "numClars", "numEntars", " numChARS", "numChases", " numchards", "numBuffards", "numCharARS", " numChases", "numChaps", "numChARS", "numchaps", "numBuffars", "numchases", "numCharases", "numchars", "numchards", " numchars", " numCharars"], "filter": [" filtered", "const", "f", "match", " filters", "map", "ref", "Filter", "buffer", "check", "entry", " filtering", "name", "term", "batch", " Filter", "processor", "table", "fil", "handler", "pool", "accept", "result", "conv", "channel", "policy", "test"]}}
{"code": "import java.util.Scanner;\\nclass Main{\\n\tScanner sc = new Scanner(System.in);\\n\tint n;\\n\tint[] S;\\n\tint q;\\n\tint[] T;\\n\tint C;\\n\tint left;\\n\tint right;\\n\tint mid;\\n\tvoid n(){\\n\t\tn=sc.nextInt();\\n\t\tS=new int[n];\\n\t\tfor(int i=0; i<n; i++){\\n\t\t\tS[i]=sc.nextInt();\\n\t\t}\\n\t\tq=sc.nextInt();\\n\t\tT=new int[q];\\n\t\tfor(int j=0; j<q; j++){\\n\t\t\tT[j]=sc.nextInt();\\n\t\t}\\n\t\t\\n\t\tfor(int j=0; j<q; j++){\\n\t\t\tleft=0;\\n\t\t\tright=n;\\n\t\t\twhile(left<right){\\n\t\t\t\tmid=(left+right)/2;\\n\t\t\t\t\\n\t\t\t\tif(T[j]==S[mid]){\\n\t\t\t\t\tC++;\\n\t\t\t\t\tbreak;\\n\t\t\t\t}else if(T[j]<S[mid]){\\n\t\t\t\t\tright=mid;\\n\t\t\t\t}else if(T[j]>S[mid]){\\n\t\t\t\t\tleft=mid+1;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(C);\\n\t}\\n\tpublic static void main(String[]agrs){\\n\t\tnew Main().n();\\n\t}\\n}", "target": "138", "substitutes": {"sc": ["SC", " SC", "osc", "pc", "sys", "pb", "ctx", "usc", "se", "rc", "nc", "bc", "asc", "sync", "sh", "exec", "gc", "sq", "sch", "anc", "fc", "r", "sec", "sp", "c", "ser", "esc", "isc", "cl", "lc", "irc", " Sc", "arc", "desc", "ctl", "mc", "inc", "scl", "capt", "ch", "system", "st", "cgi", "ss", "sci", "dc", "cle", "cs", "tc", "Sc", "g", "scan"], "n": ["nm", "nb", "syn", "t", "network", "u", "ln", "nc", "net", " fn", "k", "nan", "out", "na", "x", "o", "no", "ng", "size", "r", "on", "len", "c", "nn", "fn", "index", "nor", "y", "v", "gn", "en", "s", "name", "dn", "N", "l", "nu", " N", "nl", "np", "cn", "norm", "p", "sn", "ns", "total", "nd", "nt", "nw", "id", "number", "num", "nil", "in", "z", "d", "m", "ne", "g", "rn"], "S": ["SC", "I", "R", "RS", "L", "TS", "SL", "SH", "SS", "Y", "SU", "SR", "Q", "Sl", "A", "Z", "M", "D", "CS", "SER", "PS", "INS", "B", "SEC", "SA", "US", "P", "V", "SM", "DS", "SB", "NRS", "s", "N", "U", "SI", "G", "Si", "SE", "H", "SP", "NS", "ST", "X", "BS", "Services"], "q": ["iq", "qs", "qt", "t", "aq", "u", "dq", "Q", "eq", "k", "sq", "x", "r", "quote", "que", "g", "P", "c", "qq", "qu", "h", "v", "query", "l", "ue", "qi", "req", "it", "qa", "p", "ch", "qual", "requ", "qv", " Q", "quit", "z", "m", "quant", "ip"], "T": ["I", "TV", "PT", "R", "CT", "WT", "L", "t", "TS", "Y", "TY", "TT", "Q", "Z", "TL", "NT", "TA", "M", "XT", "B", "P", "V", "TG", "TC", "BT", "VT", "Tu", "N", "TN", "LT", "TH", "G", "J", "Test", "H", "MT", "GT", "TR", "TE", "AT", "TD", "TI", "TP", "TM"], "C": ["SC", "E", "CN", "I", "R", "CT", "Count", "L", "middle", "Y", "Q", "A", "Z", "Car", "O", "max", "M", "D", "count", "Cl", "B", "F", "P", "V", "c", "JC", "W", "N", "DC", "this", " c", "CD", "K", "start", "G", "CM", "J", "Size", "CL", "Right", "CC", "CP", "CV", "LC", "Left", "CA"], "left": [" L", "open", "path", "length", "level", "first", "back", "L", "off", "position", "middle", "both", "inner", "raw", "from", "shift", "all", "net", "last", "out", "ind", "half", "x", "no", "sp", "len", "check", "full", "center", "lo", "index", "min", "low", " l", "only", "lower", "local", "small", "pl", "expected", "set", "l", "lock", "start", "current", "nl", "lt", "my", "p", "minimum", "old", "st", "offset", "le", "top", "li", "end", "none", "list", "bottom", "line", "m", "Left", "el", "loc"], "right": ["close", "root", "over", "open", "success", "upper", "R", "first", "back", "ax", "range", "before", "middle", "radius", "inner", "re", "raw", "all", "ro", "max", "cross", "last", "rew", "r", "rem", "and", "full", "tr", "false", "med", "head", "random", "correct", "remote", "w", "rights", "third", "outer", "rx", "rest", "co", "red", "roll", "west", "after", "res", "through", "Right", "wrong", "top", "end", "row", "then", "rw", "rd", "fr", "reverse", "central"], "mid": ["Mid", "mt", "hi", "lim", "nm", "mit", "middle", "shift", "dim", "mm", "medium", "pard", "max", "part", "M", "mn", "cam", "half", "member", "ms", "nom", "module", "client", "md", "mi", "Middle", "partial", "med", "prime", "mat", "min", "mobile", "rid", "mini", "mr", "mod", "mask", "start", "rand", "meta", "multi", "wid", "my", "tri", "origin", "uid", "cm", "nd", "mad", "mouse", "mk", "id", "alpha", "le", "pad", "late", "offset", "minute", "end", "grid", "m", "mer", "fr"], "i": ["zi", "iq", "iter", "ie", "hi", "ci", "I", "f", "si", "io", "t", "sim", "ai", "xi", "us", "ei", "is", "ish", "ind", "ori", "o", "x", "mi", "init", "im", "y", "info", "ix", "gi", "ui", "this", "ki", "ri", "qi", "pi", "it", "e", "ii", "my", "p", "ini", "di", "li", "ti", "bi", "m", "iu", "phi", "ip"], "j": ["note", "ie", "jac", "bj", "Ja", "t", "jl", "js", "obj", "k", "ion", "ind", "fr", "oj", "job", "x", "msg", "z", "je", "uj", "key", "by", "pt", "y", "jc", "kid", "v", "ix", "dj", "json", "bo", "l", "pr", "bot", "aj", "jp", "jo", "jit", "ji", "ij", "it", "my", "br", "jump", "let", "J", "ot", "b", "jj", "att", "kj", "m", "og", "jas", "g", "ja"], "agrs": ["acrt", "flagns", "acris", "agns", "acns", "agris", "lagris", "acrs", "flagris", "flagrs", "agrt", "lagrs", "lagrt", "flagrt", "lagns"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int a1 = Integer.parseInt(sc.next());\\n        int a2 = Integer.parseInt(sc.next());\\n        int a3 = Integer.parseInt(sc.next());\\n        if ((a1 + a2 + a3) >= 22) {\\n            System.out.println(\"bust\");\\n        } else {\\n            System.out.println(\"win\");\\n        }\\n        sc.close();\\n    }\\n}\\n", "target": "129", "substitutes": {"sc": ["SC", "osc", "pc", "syn", "sys", "pb", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "mp", "gc", "sq", "sub", "disc", "scrib", "uc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "esc", "isc", "cl", "ko", "lc", "irc", "arc", "ctl", "desc", "ctrl", "mc", "nl", "inc", "scl", "cr", "capt", "ch", "sel", "ck", "cgi", "comp", "dc", "cle", "cs", "tc", "Sc", "scan"], "a1": ["a0", " a11", " aaj", "aaj", "aa", " a001", "a11", "alpha001", "actionaj", "a001", "key11", "action11", "data0", "action1", "alpha0", "data001", "keyaj", "data1", "keya", " a0", "key1", " aa", "actiona", "alpha1"], "a2": ["aaTwo", "aB", " a02", "dataly", "area2", "areaTwo", " aTwo", "Aly", "aa1", "A02", "aTwo", "A2", "data02", "area1", "data2", "area3", "AB", "aa3", " aly", "a02", "aa2", " aB", "dataB", "aly"], "a3": ["la15", "area43", "sha43", "areaThree", "a5", "a15", " aiii", "la3", "sha5", "oa3", "alpha3", "oa5", "aiii", "area5", "alpha15", "area3", "alphaiii", "sha3", "laiii", "oaThree", " athree", "lathree", "aThree", "alphathree", "athree", "a43", "oa43", " a15", "shaThree"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\\n\t\t\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tint a=sc.nextInt();\\n\t\tint b=sc.nextInt();\\n\t\tint n=a*b;\\n\t\t\\n\t\tSystem.out.println(n);\\n\t\tsc.close();\\n\t}\\n\\n}\\n", "target": "35", "substitutes": {}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args) {\\n    Scanner sc=new Scanner(System.in);\\n    int a,b;\\n    a=sc.nextInt();\\n    b=sc.nextInt();\\n    int n=0;\\n    if(a<b){\\n      for(int i=0;i<b;i++){\\n        if(i-a==b-i){\\n          n=i;\\n          break;\\n        }\\n      }\\n    }else{\\n      for(int i=0;i<a;i++){\\n        if(a-i==i-b){\\n          n=i;\\n          break;\\n        }\\n      }\\n    }\\n    if(n!=0){\\n      System.out.println(n);\\n    }else{\\n      System.out.println(\"IMPOSSIBLE\");\\n    }\\n  }\\n}\\n", "target": "31", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "si", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "out", "sch", "gc", "sq", "sub", "ng", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "desc", "mc", "nl", "inc", "scl", "cr", "sel", "ch", "system", "tch", "ck", "ss", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "a": ["ar", "aa", "f", "si", "ax", "t", "at", "u", "al", "ai", "area", "va", "all", "A", "au", "o", "x", "ab", "pa", "r", "ach", "ao", "act", "c", "an", "am", "ba", "ast", "app", "ea", "ga", "ace", "ada", "ia", "isa", "ta", "admin", "aj", "ae", "aaa", "pi", "e", "p", "abe", "ca", "as", "la", "alpha", "to", "sa", "z", "d", "ma", "g", "ac"], "b": ["mb", "nb", "f", "back", "pb", "bb", "t", "u", "bc", "bin", "bis", "base", "bf", "ab", "x", "o", "B", "r", "body", "fb", "g", "ba", "c", "blue", "h", "eb", "ib", "v", "bs", "ob", "m", "bo", "bt", "j", "l", "rb", "BA", "gb", "br", "e", "p", "ca", "db", "be", "end", "bi", "z", "d", "bu", "sb"], "n": ["note", "nb", "t", "ren", "ln", "nc", "ann", "mn", "nan", "out", "na", "o", "names", "no", "ng", "conn", "r", "on", "c", "an", "nn", "fn", "index", "nor", "v", "gn", "en", "conf", "dn", "w", "N", "j", "l", "nu", " N", "nl", "np", "cn", "p", "sn", "ns", "nd", "ni", "nt", "number", "num", "d", "m", "ne", "g"], "i": ["status", "io", "us", "o", "iu", "index", "y", "ix", "l", "pi", "ii", "id", "fi", "ti", "bi", "phi", "hi", "ci", "t", "xi", "ei", "ori", "client", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "print", "ini", "ion", "iter", "si", "ic", "sim", "oi", "is", "k", "ind", "x", "mi", "err", "gi", "it", "e", "p", "di", "in", "z", "zi", "I", "u", "ai", "c", "h", "key", "im", "v", "info", "q", "ri", "ki", "ia", "ity", "ij", "li", "point", "ip"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String args[]){\\n\t\t\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tint[] nums  = new int[n];\\n\t\tfor(int i=0;i<n;i++){\\n\t\t\tnums[i] = sc.nextInt();\\n\t\t}\\n\t\tint count = 0;\\n\t\tfor(int x:nums){\\n\t\t\tif(isPrime(x)){\\n\t\t\t\tcount++;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(count);\\n\t}\\n\tpublic static  boolean isPrime(int number){\\n\t\tfor(int i=2;i*i<=number;i++){\\n\t\t\tif(number%i==0) return false;\\n\t\t}\\n\t\treturn true;\\n\t}\\n}", "target": "226", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "cv", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "ctl", "mc", "nl", "scl", "cr", "sel", "ch", "ck", "ss", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["nb", "t", "window", "ln", "nc", "all", "net", "k", "nan", "na", "no", "o", "ng", "size", "on", "len", "c", "an", "nn", "y", "v", "en", "w", "N", "j", "l", " N", "nl", "np", "cn", "p", "sn", "ns", "total", "nt", "nil", "num", "un", "z", "d", "m", "ne", "g"], "nums": ["gnats", " news", "cumbers", "Num", " numbers", "names", "cews", " noms", "noms", "gnumbers", "cum", " nims", "gnums", "snims", " nats", "cats", " names", "nats", "nims", " num", "numbers", "snumbers", "Numbers", "Names", "gnews", "snames", "coms", "Nums", "news", "Nims", "num", "cums", "Noms", "snums"], "i": ["io", "us", "o", "index", "php", "y", "ix", "iii", "l", "pi", "ii", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "t", "xi", "ei", "client", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "print", "chain", "b", "uu", "ini", "set", "d", "m", "iter", "iso", "si", "ic", "sim", "is", "ind", "mi", "gi", "it", "di", "zi", "I", "u", "ai", "h", "uli", "by", "im", "v", "info", "q", "ri", "ki", "batch", "a", "li", "iu", "ip"], "count": ["found", "report", "span", "length", "flag", "counter", "nb", "Count", "ct", "collection", "hold", "max", "gc", "now", "stat", "sum", "find", "add", "ctr", "size", "score", "cont", "check", "c", "index", "ount", "scroll", "consider", "batch", "hash", "current", "amount", "coll", "total", "result", "nt", "num", "trace", "cache", "frequency", "draw", "test", "cast", "call"], "x": ["ux", "fx", "px", "xp", "ax", "xx", "xt", " xx", "xi", "lex", "xf", "xa", "xxxx", "dx", "k", "ox", "c", "y", "xc", "v", "ix", "xe", "l", "wx", "rx", "mx", "e", "xy", "ex", "tx", "X", "z", "xxx", "el", "xs"], "number": ["note", "length", "record", "zero", "nb", "volume", "range", "network", "version", "integer", "node", "no", "type", "size", "unit", "dimension", "duration", "maximum", "money", "nn", "page", "currency", "name", "value", "function", "uno", "Number", "power", "nu", "population", "string", "pi", "amount", "normal", "print", "density", "document", "b", "total", "result", "news", "num", "nr", "umber", "frequency", "ne", "message"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n\tfinal static long MOD = 1000000007;\\n\tpublic static String[] Ws = null;\\n\tpublic static int wsIndx = 0;\\n\tpublic static BufferedReader in = null;\\n\tpublic static void main(String[] args) throws Exception {\\n\\n\t\tint N=nextInt();\\n\t\tint M=nextInt();\\n\\n\t\tint[] G = new int[N+1];\\n\t\tArrays.fill(G, 0);\\n\t\tfor(int i=0;i<M;i++){\\n\t\t\tint[] p = nextInts();\\n\t\t\tG[p[0]-1]++;\\n\t\t\tG[p[1]]--;\\n\t\t}\\n\\n\t\tfor(int i=0;i<N;i++){\\n\t\t\tG[i+1]+=G[i];\\n\t\t}\\n\t\tlong ans = 0;\\n\t\tfor(int i=0;i<N;i++){\\n\t\t\tif(G[i]==M)\\n\t\t\t\tans++;\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n\\n\\n\tpublic static void check() throws Exception{\\n\t\tif(in == null){\\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\\n\t\t}\\n\t\tif(Ws==null || Ws.length<=wsIndx){\\n\t\t\tWs = in.readLine().split(\" \");\\n\t\t\twsIndx=0;\\n\t\t}\\n\t}\\n\tpublic static int nextInt()throws Exception{\\n\t\tcheck();\\n\t\treturn Integer.parseInt(Ws[wsIndx++]);\\n\t}\\n\\n\tpublic static long nextLong()throws Exception{\\n\t\tcheck();\\n\t\treturn Long.parseLong(Ws[wsIndx++]);\\n\t}\\n\\n\tpublic static String nextString()throws Exception{\\n\t\tcheck();\\n\t\treturn Ws[wsIndx++];\\n\t}\\n\\n\tpublic static int[] nextInts()throws Exception{\\n\t\tcheck();\\n\t\tint[] tmp = new int[Ws.length];\\n\t\tfor(int i=0;i<tmp.length;i++){\\n\t\t\ttmp[i]=Integer.parseInt(Ws[i]);\\n\t\t}\\n\t\twsIndx=Ws.length;\\n\t\treturn tmp;\\n\t}\\n\\n\tpublic static long[] nextLongs()throws Exception{\\n\t\tcheck();\\n\t\tlong[] tmp = new long[Ws.length];\\n\t\tfor(int i=0;i<tmp.length;i++){\\n\t\t\ttmp[i]=Long.parseLong(Ws[i]);\\n\t\t}\\n\t\twsIndx=Ws.length;\\n\t\treturn tmp;\\n\t}\\n\\n\tpublic static String[] nextStrings()throws Exception{\\n\t\tcheck();\\n\t\twsIndx=Ws.length;\\n\t\treturn Ws;\\n\t}\\n\\n\\n}\\n", "target": "124", "substitutes": {"MOD": [" MS", "MAX", "AD", "UID", "AN", " Max", "NO", " pars", "max", " mean", "ONES", " means", "ms", "times", " mu", "NUM", "serial", "mem", "rand", "MS", " MAX", "mean", " mod", " CAS", "mod"], "Ws": ["Vers", " WS", "Pages", "Has", "West", "WT", "Tips", "FS", "Socket", "Wo", "Us", "Wh", "Parts", "Sax", "Ins", "Works", "Wars", "aws", "There", "Windows", "Win", "wt", "Vs", "Os", "Wed", "Tx", "Lens", "Sys", "Ms", "RW", "Fs", "Hundreds", "Js", "WS", "CW", "fts", "Dest", "Wire", "W", "Posts", "Witness", "Inv", "War", "Str", "Sec", "ws", "Ring", "NW", "GS", "In", "gs", "Bytes", "LS", "WB", "NS", "ns", "News", "Rs", "xs", "Ts", "Es", "Wr", "Ns", "Args", "Wa", "We", "Its", "Bs", "WC", "Cs"], "wsIndx": ["wsPredX", "wsINDxes", "wsPtrxt", "WSIndx", "nsIndex", "Wsindex", "wsIdy", "WSIdx", "hsINDnz", "wsPredx", "dsIndxt", "wsINDX", "psIndy", "hsINDy", "WsIndx", "hsINDxf", "nsPtrx", "WsIndw", "nsPtry", "hsIndxf", "wsIdx", "WsIndix", "wsRadx", "wsIndX", "psINDy", "hsIndnz", "wsIDx", "wsRadxes", "Wsindix", "Wsindw", "wsindxf", "wsRadX", "wsINDix", "wsIDnz", "wsPtrx", "wsIndex", "dsINDy", "psINDxes", "wsINDx", "wsIDxf", "wsIndy", "wsINDxf", "wsDx", "wsIndnz", "dsIndy", "WSIndex", "wsindex", "dsIndX", "dsINDxt", "hsINDX", "WSIndX", "wsindy", "wsIndxt", "WsIndex", "psIndxes", "hsINDx", "dsINDx", "psINDx", "psIndx", "wsRady", "hsIndy", "nsIndy", "wsIdex", "wsPtrex", "psINDX", "dsINDX", "nsPtrex", "dsIndx", "hsIndX", "hsIndx", "wsIndxf", "wsPtrix", "wsPtrxes", "Wsindx", "wsindix", "wsIndw", "wsINDxt", "wsIdX", "wsIdix", "hsINDix", "wsindX", "WSIdex", "wsPtrX", "wsindx", "wsDw", "wsDix", "wsDex", "nsPtrix", "WSIdix", "wsINDex", "wsIndix", "wsIndxes", "wsindnz", "nsIndx", "wsPredxt", "wsIdw", "wsPredy", "wsPtry", "wsindw", "psIndX", "WSIndix", "hsIndix", "WSIdX", "nsIndix", "wsIDix", "wsINDnz", "wsINDy"], "in": ["or", "inside", "din", "serv", "IN", "t", "ic", "inn", "inner", "from", "ai", "bin", "is", "out", "inv", "ins", "o", "std", "r", "on", "rin", "err", "c", "n", "thin", "h", "isin", "read", "lo", "init", "conf", "s", "con", "w", "nin", "ws", "gin", "mr", "l", "asin", "cin", "mc", "In", "pi", "inc", "it", "input", "stream", "b", "txt", "win", "file", "ini", "null", "rt", "inf", "reader", "log", "ln", "m", "again"], "N": ["I", "NM", "NN", "R", "NC", "AN", "C", "L", "ND", "Y", "NO", "Z", "Num", "NT", "Net", "S", "MN", "Node", "P", "V", "n", "NR", "Ni", "NL", "NB", "NP", "MAN", "NI", "NA", "Mon", "J", "NH", "H", "NS", "SN", "T", "Ns", "NE"], "M": ["I", "NM", "R", "MD", "PM", "C", "L", "D", "JM", "S", "MH", "B", "MO", "MC", "MN", "MAL", "MP", "F", "P", "V", "Me", "DM", "MI", "MAN", "MM", "AM", "MX", "J", "CM", "MS", "VM", "MT", "ME", "LM", "T", "Mi", "m", "TM", "MF"], "G": ["GPU", "MG", "I", "R", "Gr", "GA", "GB", "C", "GV", "L", "GC", "GP", "Gar", "Q", "Gi", "My", "GF", "S", "B", "PG", "GH", "Gs", "GOP", "F", "GRE", "P", "V", "TG", "LG", "W", "AG", "Gate", "Guard", "GG", "GU", "FG", "GE", "Gu", "GS", "J", "H", "GT", "GR", "Graphics", "Graph", "T", "BG", "GMT", "Group", "GI", "g"], "i": ["io", "us", "ice", "o", "iu", "y", "MI", "ix", "pi", "ii", "id", "any", "fi", "ti", "bi", "phi", "ie", "ci", "f", "ei", "xi", "ori", "progress", "cli", "init", "ui", "remote", "j", "uri", "qi", "multi", "my", "print", "chain", "ex", "ini", "lie", "list", "m", "et", "si", "ic", "sim", "oi", "is", "x", "mi", "gi", "ji", "it", "e", "di", "to", "ims", "zi", "I", "menu", "ami", "\u0438", "u", "ai", "me", "ies", "c", "iy", "im", "v", "info", "q", "wi", "ri", "ki", "ia", "batch", "ity", "ij", "PI", "ios", "li", "point", "ip"], "p": ["span", "bp", "pc", "pp", "pb", "pe", " P", "pos", "wp", "exp", "dp", "pa", "vp", "ps", "parent", "tp", "ping", "sp", "pkg", "P", "c", "pid", "pn", "php", "pt", "ap", "app", "pl", "pers", "jp", "pi", "np", "fp", "pre", "cp", "lp", "m", "post", "point", "g", "ip"], "ans": ["ANS", "offs", "nz", "AN", "lines", "anes", "ats", "ads", "aps", "eps", "us", "has", "ann", "ols", "oss", "is", "nan", "ants", "ins", "outs", "uns", "ms", "ps", "times", "aus", "an", "ks", "lan", "os", "flags", "amps", "aos", " Ans", "ens", "cons", "ros", "gs", "can", "ops", "ns", "ls", "as", "vals", "cs", "reads", "arts", "xs", "ents"], "tmp": ["aux", "mb", "cmp", "mmm", "nm", "auto", "nb", "fake", "important", "tab", "img", "obj", "amp", "mm", "wp", "mp", "abs", "ind", "appy", "dump", "nom", "tp", "sp", "pkg", "MP", "partial", "qq", "attr", "tn", "src", "emp", "Temp", "bsp", "prefix", "amps", "cb", "bt", "rm", "perm", "sam", "table", "them", "buff", "uff", "np", "aaa", "tem", "tt", "tm", "etc", "resp", "zip", "txt", "rt", "result", "nt", "mk", "xs", "yy", "cp", "temp", "buf", "cache", "stuff", "pretty", "tf", "test", "pot"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        long n = sc.nextLong();\\n\\n        long digits = Long.MAX_VALUE;\\n        double sqrt = Math.sqrt(n);\\n        for (long i = 1; i <= sqrt; i++) {\\n            if (n % i == 0) {\\n                long a = n / i;\\n                digits = Math.min(digits, f(a, i));\\n            }\\n        }\\n\\n        System.out.print(digits);\\n    }\\n\\n    static long f(long a, long b) {\\n        return Math.max(Long.toString(a).length(), Long.toString(b).length());\\n    }\\n}", "target": "61", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "Sync", "sch", "sq", "gc", "ng", "r", "sec", "sp", "Desc", "c", "cc", "esc", "isc", "ser", "cl", "Sc", "desc", "mc", "RC", "nl", "acc", "scl", "cr", "ch", "system", "rs", "sa", "cs", "tc", "ss", "sb", "scan"], "n": ["nm", "nb", "t", "ln", "nc", "net", "ll", "mn", "nan", "na", "ng", "len", "an", "c", "nn", "fn", "h", "nor", "name", "v", "gn", "en", "dn", "w", "N", "j", "l", "nu", "np", "nl", "cn", "p", "sn", "ns", "total", "nt", "nw", "ni", "nr", "num", "z", "d", "m", "ne"], "digits": ["divals", "divITS", "dimits", "dimests", " digbits", "digals", " digITS", " Digals", "digitests", " DigITS", "Digients", "ddals", "divits", "Digals", "descents", "digients", "digents", "digitions", " Digbits", "diments", "digests", " Digits", "descits", "digitits", "ddits", "Digit", "dimions", " digit", "digITS", " digients", "ddbits", "Digits", "ddients", "digions", "descions", "Digbits", " digals", "digbits", "digitents", "descests", "divit", "DigITS", "digit"], "sqrt": [" sqRT", "sqrd", "qRT", "sqRT", " sqr", "qrt", "csrt", " sqrd", "squrt", "squr", "qrd", "sqr", "squRT", "csr", " sqrs", "squrd", "csRT", "qr", "csrs", "qrs", "sqrs"], "i": ["zi", "I", "hi", "ci", "ie", "f", "si", "io", "ic", "sim", "u", "oi", "ai", "ei", "xi", "t", "is", "o", "x", "mi", "c", "cli", "uli", "index", "im", "v", "gi", "s", "ix", "ui", "ri", "ki", "ia", "j", "l", "ik", "qi", "pi", "multi", "it", "ii", "p", "ini", "di", "li", "fi", "ti", "bi", "z", "m", "iu", "phi", "ip", "asi"], "a": ["ar", "aa", "f", "ack", "si", "t", "al", "u", "at", "ai", "area", "xa", "A", "da", "au", "sha", "na", "o", "ab", "x", "oa", "eta", "ao", "acs", "c", "an", "am", "ba", "name", "y", "s", "m", "ea", "eas", "ia", "j", "sta", "l", "ua", "ta", "ae", "aaa", "pi", "aff", "it", "e", "apa", "p", "ac", "ca", "ata", "alpha", "la", "as", "sa", "d", "ma"], "b": ["mb", "nb", "f", "back", "pb", "bb", "t", "u", "bis", "x", "o", "ab", "B", "r", "body", "fb", "c", "h", "eb", "ib", "beta", "y", "v", "bs", "ob", "w", "j", "l", "rb", "e", "p", "be", "bi", "z", "d", "m", "g"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    long[] p = new long[n];\\n    for(int i = 0;i<n;i++){\\n      p[i] = sc.nextLong();\\n    }\\n    int count = 0;\\n    for(int i=1;i<n-1;i++){\\n      if(p[i-1]<p[i]&&p[i]<p[i+1]||p[i-1]>p[i]&&p[i]>p[i+1])count++;\\n    }\\n    System.out.println(count);\\n  }\\n}\\n", "target": "96", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "si", "sl", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "uc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "irc", "desc", "ctl", "mc", "nl", "inc", "scl", "cr", "sel", "ch", "capt", "ck", "ss", "conv", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["nm", "nb", "ct", "t", "network", "ln", "nc", "all", "net", "ll", "mn", "out", "k", "na", "o", "x", "no", "ng", "nan", "names", "r", "and", "len", "c", "nn", "fn", "name", "v", "en", "w", "N", "non", "j", "l", "nu", " N", "nl", "np", "after", "cn", "sn", "ns", "nt", "number", "num", "un", "z", "d", "m", "ne", "g"], "p": ["ist", "bp", "pc", "pp", "pb", "pe", "press", "exp", "wp", "mp", "dp", "op", "vp", "pa", "ps", "tp", "ping", "pm", "sp", "pkg", "up", "P", "c", "rep", "pn", "php", "ap", "pt", "v", "pg", "app", "q", "per", "pl", "pers", "j", "l", "jp", "np", "pi", "it", "br", "fp", "pre", "cp", "cache", "lp", "post", "point", "g", "ip"], "i": ["status", "io", "us", "iu", "index", "y", "ix", "pi", "ii", "id", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "base", "ori", "client", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "print", "chain", "ini", "ni", "list", "set", "m", "iter", "si", "ic", "sim", "oi", "eu", "is", "ind", "mi", "err", "gi", "ji", "it", "di", "to", "in", "ims", "zi", "go", "I", "ami", "\u0438", "u", "ai", "me", "entry", "iy", "im", "v", "info", "q", "ri", "ki", "batch", "a", "ity", "ij", "li", "item", "point", "ip"], "count": ["found", "report", "length", "flag", "status", "counter", "nb", "Count", "ct", "frequency", "t", "gc", "ind", "out", "sum", "find", "add", "ctr", "stat", "size", "score", "cont", "code", "c", "index", "ount", "summary", "quiet", "current", "amount", "acc", "coll", "resp", "b", "total", "result", "nt", "number", "num", "cache", "z", "d", "list", "call"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n        char[] s = sc.next().toCharArray();\\n        boolean Judge = false;\\n        for (int i = 1; i < s.length; i++) {\\n            if (s[i-1] == s[i]) {\\n                Judge = !Judge;\\n                break;\\n            }\\n        }\\n\\n        if (Judge) {\\n            System.out.println(\"Bad\");\\n        }else{\\n            System.out.println(\"Good\");\\n        }\\n    }\\n}\\n", "target": "73", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sac", "sch", "gc", "sq", "scrib", "uc", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "desc", "dec", "screen", "mc", "RC", "scl", "cr", "sel", "ch", "system", "ok", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "s": ["its", "hs", "f", "t", "services", "js", "sts", "sv", "ats", "eps", "aws", "strings", "bis", "is", "abs", "sq", "ins", "S", "ms", "ps", "r", "sp", "c", "n", "h", "v", "tes", "bs", "ws", "j", "l", "a", "gs", "p", "b", "rs", "ls", "ss", "xs", "ds", "words", "parts", "cs", "str", "ims", "d", "m", "g", "ts"], "i": ["zi", "I", "hi", "ci", "span", "ami", "f", "si", "io", "ic", "sim", "u", "t", "ai", "ei", "xi", "oi", "is", "ind", "x", "ms", "mi", "n", "cli", "key", "index", "y", "im", "gi", "ix", "v", "ui", "q", "init", "ri", "j", "uri", "batch", "l", "a", "qi", "pi", "multi", "ji", "it", "ii", "di", "ini", "major", "id", "li", "ti", "bi", "z", "m", "point", "phi", "slice", "ip"], "Judge": ["Private", "Check", "Strange", "Die", "Compare", "Govern", "Has", "Were", "Different", "Gear", "Lord", "Super", "Good", "Before", "Stay", "Develop", "Remote", "Override", "Provider", "Do", "Better", "Bench", "Finally", "Professor", "Have", "Tell", "Sad", "Know", "Behind", "British", "Again", "Player", "Very", "Remember", "Witness", "Why", "Already", "Div", "Battle", "Ready", "Debug", " judge", "jud", "Hung", "Doctor", "Test", "Present", "Bern", "Known", "Service", "Business", "Poor", "Bad", "Driver", "Box", "Russian", "Maybe", "Stand", "Evil", "Now", "Guest", "Whether", "East", "Root", "Vote"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        String s = sc.next();\\n\\n        if (n%2 != 0) {\\n            System.out.println(\"No\");\\n            return;\\n        }\\n        \\n        int half = n / 2;\\n        String t1 = s.substring(0, half);\\n        String t2 = s.substring(half, n);\\n        \\n        if(t1.equals(t2)){\\n            System.out.println(\"Yes\");\\n        }\\n        else{\\n            System.out.println(\"No\");\\n        }\\n    }\\n}\\n", "target": "161", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "uc", "anc", "sec", "sp", "cc", "c", "isc", "esc", "ser", "cl", "ko", "lc", "ctl", "desc", "mc", "nl", "inc", "scl", "cr", "capt", "ch", "sel", "txt", "sci", "cle", "cs", "tc", "Sc", "scan"], "n": ["nm", "nb", "f", "t", "nc", "mn", "nan", "k", "i", "na", "no", "o", "ng", "r", "len", "c", "an", "nn", "h", "nor", "v", "gn", "en", "dn", "non", "N", "w", "j", "l", "a", "nu", "nl", "np", "cn", "norm", "p", "sn", "b", "ns", "nt", "nw", "ni", "number", "num", "z", "d", "m", "ne"], "s": ["its", "sql", "sl", "t", "ats", "js", "sf", "sv", "sts", "raw", "strings", "abs", "sq", "i", "out", "S", "ps", "r", "sp", "g", "less", "c", "source", "h", "os", "spec", "v", "bs", "w", "ws", "j", "space", "l", "string", "gs", "p", "b", "ns", "rs", "ls", "conv", "self", "str", "ss", "sb", "ts"], "half": ["hat", "length", "pair", "relative", "orth", "div", "t", "middle", "window", "split", "shift", "both", "dim", "left", "fac", "stem", "part", "inner", "raw", "side", "round", "padding", "loop", "i", "sub", "size", "len", "partial", "mid", "full", "min", "small", "lower", "off", "Half", "start", "step", "ph", "quarter", "p", "shake", "le", "alpha", "parts", "pad", "rel", "near", "z", "m", " halves", "shared"], "t1": ["ta1", " t01", "tt0", " tFirst", "ttFirst", "T001", "pt1", "ta001", "t001", " t4", "ta2", " t0", "t01", "T1", "T4", "tFirst", "ta4", " t001", "pt0", "tt01", "T2", "pt01", "t0", "tt1", "t4", "ptFirst"], "t2": ["tTwo", "at2", "e0", "wt3", "e1", " t102", "t102", "wtTwo", "t3", "te1", "at42", "te0", "e2", " tTwo", "at3", "wt42", " t0", " t3", "te2", "atTwo", "t42", "wt2", "te102", " t42", "t0", "e102"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n\\n        Scanner input = new Scanner(System.in);\\n\\n        int n = input.nextInt();\\n        int X = input.nextInt();\\n\\n        int[] L = new int[n];\\n\\n        for (int i = 0; i < L.length; i++) {\\n            L[i] = input.nextInt();;\\n        }\\n        int[] D = new int[n + 1];\\n        D[0] = 0;\\n        for (int j = 1; j < D.length; j++) {\\n            D[j] = D[j - 1] + L[j - 1];\\n        }\\n        int count = 0;\\n        for (int k = 0; k < D.length; k++) {\\n            if (D[k] <= X) {\\n                count += 1;\\n            }\\n\\n        }\\n        System.out.println(count);\\n    }\\n}", "target": "130", "substitutes": {"input": [" Input", "open", "history", "usr", "feed", "socket", "first", "utils", "view", "select", "iterator", "inner", "raw", "from", "exec", "initial", "sq", "sum", "focus", "Input", "agent", "add", "parse", "client", "conn", "skip", "buffer", "subject", "source", "image", "unsigned", "init", "q", "output", "kernel", "table", "process", "pattern", "start", "service", "inc", "system", "stream", "search", "quick", "cmd", "accept", "util", "inf", "in", "reader", "list", "self", "get", "scan"], "n": ["nb", "t", "network", "nc", "net", "out", "nan", "na", "x", "o", "no", "ng", "size", "r", "on", "c", "nn", "h", "y", "v", "en", "N", "l", "nu", " N", "np", "nl", "pi", "cn", "p", "sn", "ns", "nt", "number", "num", "nr", "z", "d", "m", "ne", "g"], "X": ["E", "XX", "I", "TX", "R", "C", "ax", "Y", "Q", "Z", "Xi", "XXX", "M", "XT", "Tx", "x", "XM", "F", "P", "V", "OX", "N", "U", "XL", "XP", "K", "MX", "J", "H", "DX", "Ex", "UX", "T", "IX", "EX"], "L": ["LR", "I", "LV", "DL", "PL", "Lock", "EL", "LI", "AL", "Lu", "SL", "LD", "LIN", "BL", "TL", "M", "S", "B", "P", "V", "LL", "LG", "LU", "NL", "N", "ML", "LT", "XL", "l", "LP", "J", "LS", "LM", "dL", "LC", "LE", "ALL", "LB"], "i": ["zi", "ie", "hi", "ci", "I", "ami", "iso", "si", "io", "sim", "u", "ai", "xi", "us", "me", "inner", "is", "ind", "ori", "mi", "cli", "im", "init", "y", "info", "q", "ix", "ui", "gi", "ri", "ki", "uri", "l", "qi", "pi", "multi", "it", "my", "ii", "ini", "di", "li", "ti", "bi", "ims", "et", "iu", "phi", "ip"], "D": ["I", "DL", "DIR", "R", "DOS", "MD", "AD", "Both", "C", "ND", "DI", "FD", "Ds", "Y", "LD", "Q", "JD", "Z", "O", "M", "Do", "DP", "B", "DO", "F", "P", "V", "DB", "DEV", "DS", "DF", "DM", "DN", "N", "DC", "GO", "PD", "K", "J", "DX", "DR", "DE", "dL", "DA", "T", "All", "DOM", "TD", "d", "DD"], "j": ["jac", "bj", "off", "jl", "js", "obj", "ind", "oj", "o", "job", "z", "on", "err", "uj", "h", "key", "by", "pt", "y", "im", "jc", "v", "s", "q", "dj", "json", "pr", "aj", "jp", "jo", "jump", "ji", "ij", "J", "it", "br", "jit", "b", "jj", "other", "jet", "att", "li", "str", "kj", "bi", "m", "g", "ja"], "count": ["found", "report", "length", "flag", "counter", "nb", "Count", "const", "ct", "C", "th", "max", "now", "ind", "sum", "add", "ctr", "type", "cd", "size", "code", "c", "check", "entry", "index", "ount", "page", "currency", "conf", "consider", "comment", "current", "amount", "acc", "continue", "child", "total", "result", "nt", "more", "number", "num", "list", "set", "d", "cache", "core", "cast", "call"], "k": ["kn", "kit", "ack", "wk", "ak", "ka", "kh", "dk", "kk", "unk", "ek", "sk", "ks", "ijk", "ke", "key", "kt", "kid", "q", "ko", "ki", "kw", "ik", "ark", "ku", "kl", "K", "ph", "uk", "ok", "ck", "ch", "kr", "mk", "kj", "km", "g", "tk"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.StringTokenizer;\\npublic class Main\\n{\\n    static class FastReader\\n    {\\n        BufferedReader br;\\n        StringTokenizer st;\\n        public FastReader()\\n        {\\n            br = new BufferedReader(new\\n                     InputStreamReader(System.in));\\n        }\\n        String next()\\n        {\\n            while (st == null || !st.hasMoreElements())\\n            {\\n                try\\n                {\\n                    st = new StringTokenizer(br.readLine());\\n                }\\n                catch (IOException  e)\\n                {\\n                    e.printStackTrace();\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n \\n        int nextInt()\\n        {\\n            return Integer.parseInt(next());\\n        }\\n \\n        long nextLong()\\n        {\\n            return Long.parseLong(next());\\n        }\\n \\n        double nextDouble()\\n        {\\n            return Double.parseDouble(next());\\n        }\\n \\n        String nextLine()\\n        {\\n            String str = \"\";\\n            try\\n            {\\n                str = br.readLine();\\n            }\\n            catch (IOException e)\\n            {\\n                e.printStackTrace();\\n            }\\n            return str;\\n        }\\n    }\\n \\n    public static void main(String[] args)\\n    {\\n        FastReader s=new FastReader();\\n        int d=s.nextInt();\\n        int count=0;\\n        boolean ans=false;\\n        for(int i=0;i<d;i++) {\\n        \tint x=s.nextInt();\\n        \tint y=s.nextInt();\\n        \t\\n        \tif(x==y) {\\n        \t\tcount++;\\n        \t\tif(count==3) {\\n        \t\t\tans=true;\\n        \t\t\tbreak;\\n        \t\t}\\n        \t}\\n        \telse {\\n        \t\tcount=0;\\n        \t}\\n        }\\n        if(ans==true) \\n            System.out.println(\"Yes\");\\n        else\\n        \tSystem.out.println(\"No\");\\n    }\\n}", "target": "215", "substitutes": {"br": ["bp", " bro", "bb", "bre", "bm", "bc", "bh", " Br", "bridge", "dr", "bro", "bl", "bf", "ab", "ctr", "gr", "r", "rob", "tr", "shr", "bs", "bsp", "lr", "bt", "wr", "mr", "Br", "pr", "next", "rb", "jp", "brace", "bd", "cr", "ch", "kr", "BR", "b", "rel", "ptr", "hr", " bl", "fr", "buf", "Tr", "ber", "sb", "sr", "bn"], "st": ["stable", "sm", "mt", "ist", "sw", "est", "ft", "sty", "const", "ct", "sl", "t", "th", "sts", "sv", "sh", "bl", "stat", "inst", "ste", "stri", "tmp", "std", "r", "sp", "stage", "ust", " superst", "ut", "pt", "cl", "St", "bt", "ts", "l", "sam", "sta", "rest", "start", "step", "lt", "cr", "p", "sn", "td", "ST", "nd", "rt", "stack", "so", "nt", "be", "sb", "se", "ost"], "str": ["ent", "status", "sys", "sl", "t", "div", "sts", "re", "dr", "data", "msg", "gr", "r", "sp", "cont", "tr", "cur", "n", "arr", "shr", "spec", "v", "del", "Str", "STR", "set", "comment", "pr", "next", "string", "char", "enc", "res", "text", "ocr", "print", "cr", "p", "ns", "txt", "result", "url", "cs", "fr", "line"], "s": ["its", "sw", "qs", "fs", "hs", "socket", "sys", "sl", "ats", "js", "se", "sv", "sts", "gets", "sh", "bis", "is", "abs", "sq", "ses", "ins", "S", "ms", "ps", "sb", "less", "g", "bs", "ws", "l", "sam", "gs", "ools", "p", "ns", "rs", "ers", "ls", "http", "ds", "as", "stats", "sa", "cs", "ims", "ss", "xs", "ts"], "d": ["def", "dd", "did", "dep", "f", "div", "dim", "ad", "dp", "dx", "D", "da", "fd", "pd", "cd", "dom", "n", "days", "dm", "dec", "diff", "dos", "mind", "p", "dat", "di", "nd", "dt", "ds", "dir", "dist", "db", "dc", "dates", "m", "draw"], "count": ["found", "report", "length", "flag", "status", "counter", "Count", "const", "nb", "ct", "ctx", "max", "base", "ind", "sum", "find", "add", "ctr", "client", "cond", "type", "size", "cd", "z", "cont", "cycle", "code", "c", "n", "check", "index", "ount", "conf", "state", "stat", "comment", "current", "force", "amount", "acc", "print", "chain", "child", "total", "result", "nt", "number", "num", "depth", "list", "cache", "comments", "draw", "call"], "i": ["iq", "I", "ci", "io", "si", "ic", "sim", "u", "us", "xi", "me", "ai", "is", "out", "ms", "mi", "c", "n", "cli", "v", "im", "gi", "init", "ui", "q", "info", "ix", "ki", "j", "qi", "pi", "multi", "it", "e", "ii", "ex", "ini", "di", "id", "li", "ti", "bi", "m", "iu", "ip"], "x": ["fx", "px", "xp", "f", "ax", "xx", "xt", "xi", "xa", "xf", "dx", "ox", "n", "index", "v", "xc", "ix", "xe", "l", "wx", "rx", "mx", "e", "p", "xy", "ex", "tx", "X", "inx", "xxx", "xs"], "y": ["ye", "cy", "vy", "py", "t", "xx", "ic", "Y", "ies", "k", "gy", "o", "sy", "c", "n", "ery", "iy", "yt", "index", "v", "ry", "j", "ia", "l", "ey", "ya", "e", "my", "ch", "xy", "ny", "p", "b", "yi", "yy", "z", "m", "val"], "ans": ["ras", "ANS", "rors", "anks", "offs", "ces", "anes", "ats", "ads", "aps", "ums", "ann", "ies", "ols", "mn", "ants", "ins", "uns", "ms", "ys", "aus", "acs", "cks", "an", "ks", "ians", "vs", "angs", "os", "amps", " spans", "posts", "yes", " Ans", "ens", "ars", "gs", "ates", "ns", "rs", "oos", "ls", "ds", "leans", "ents", "cs", "arts", "xs", "ts"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner scn = new Scanner(System.in);\\n        int n = scn.nextInt();\\n        char[] a = scn.next().toCharArray();\\n        for(char tmp : a) {\\n            int num = 0;\\n            if((char)(tmp + n) > 'Z'){\\n                num = n - 26;\\n                System.out.print((char)(tmp + num));\\n            }else {\\n                System.out.print((char) (tmp + n));\\n            }\\n        }\\n    }\\n}", "target": "13", "substitutes": {"scn": ["csconn", "ascN", "csen", " scN", "ascne", " scne", "csn", "ccn", "scen", "cN", "ccN", "ascn", "cccn", "Scn", "sccn", "ccne", "scne", "ascconn", "cns", "asccn", "ascen", "Scr", "Scns", "cr", "cn", "scr", " scr", "ScN", " scconn", "csne", " scen", "scns", " sccn", "scconn", " scns", "scN"], "n": [" nu", "nm", "nb", "t", "ln", "nc", "net", "mn", "k", "nan", "i", " ns", "na", "ng", "on", "an", "c", " ng", "nn", "index", "tn", "v", "gn", "en", "s", "N", "j", "l", " sn", "nu", "np", "nl", "cn", " ne", "p", "sn", "ns", "nd", "nt", "number", "nr", "z", "d", "m", "ne", "g"], "a": ["aux", "aw", "ar", "aa", "t", "area", "va", "A", "da", "na", "ab", "oa", "ao", "an", "c", "am", "aos", "ea", "ga", "ia", "sta", "ta", "ae", "aaa", "ya", "apa", "p", "b", "aka", "ca", "ata", "as", "la", "array", "sa", "eas", "ma"], "tmp": ["cmp", "nm", "nb", "tab", "ctx", "t", "at", "img", "obj", "part", "mp", "node", "out", "now", "data", "dump", "tf", "tp", "tar", "sp", "pkg", "code", "c", "cur", "prop", "name", "tn", "v", "yet", "emp", "html", "prefix", "perm", "next", "elt", "buff", "np", "aaa", "ott", "tt", "p", "xy", "tm", "etc", "st", "cmd", "txt", "td", "gt", "nt", "mk", "proc", "rt", "yy", "cp", "temp", "m", "tc", "attr", "pot"], "num": ["error", "ver", "success", "zero", "mon", "tim", "eno", "dim", "Num", "node", "sum", "add", "no", "hom", "alph", "dev", "unit", "digit", "nam", "pn", "index", "NUM", "cal", " number", "info", "con", "Number", "one", "sam", "dec", "nu", "anon", "total", "um", "conv", "number", "umber", "mult", "nom", "missing", "common", "draw", "quant", "zh"]}}
{"code": "import java.util.*;\\nclass Main {\\n  public static void main(String[] args) {\\n     Scanner scan = new Scanner(System.in);\\n    int n= scan.nextInt();\\n    ArrayList<Integer> a = new ArrayList<>();\\n    int i = 1 ;\\n    while(true){\\n      \\n      \\n      //System.out.println(n);\\n      if(a.contains(n)){\\n        System.out.println(i);\\n        break;\\n      }else{\\n        a.add(n);\\n      }\\n      \\n      if( n %2 == 0){\\n        n = fe(n);\\n      }else{\\n        n = fo(n);\\n      }\\n      i++;\\n    }\\n    \\n    \\n  }\\n  \\n  static int fe(int n){\\n    return n/2 ;\\n  }\\n  \\n  static int fo(int n){\\n    return 3*n + 1 ; \\n  }\\n}\\n", "target": "166", "substitutes": {"scan": ["sm", "report", "connect", "auto", "sys", "san", "Scan", "sv", "se", "re", "ann", "send", "reach", "gate", "stat", "na", "find", "skip", "save", "parse", "r", "check", "an", "read", "nn", "ser", "scroll", "con", "query", "ner", "sin", "nl", "can", "system", " Scan", "run", "search", "seek", "nav", "row", "in", "set", "m", "sc", "get", "sr"], "n": ["nm", "nb", "f", "t", "count", "x", "on", "c", "an", "nn", "h", "name", "en", "N", "j", "l", "nu", "cn", "p", "sn", "b", "ns", "nt", "nr", "z", "d", "m", "ne"], "a": ["aa", "t", "xa", "all", "A", "na", "o", "ao", "c", "ba", "an", "y", "v", "s", "w", "ga", "j", "l", "e", "p", "b", "ca", "as", "sa", "m", "g"], "i": ["I", "ci", "si", "t", "ai", "xi", "is", "x", "c", "v", "y", "im", "set", "limit", "j", "l", "pi", "ij", "it", "ii", "p", "b", "li", "in", "bi", "z", "m", "g"]}}
{"code": "\\nimport java.util.Scanner;\\n\\n/**\\n *\\n * @author cs18097\\n */\\npublic class Main {\\n\\n    /**\\n     * @param args the command line arguments\\n     */\\n    public static void main(String[] args) {\\n        // TODO code application logic here\\n        Scanner sc = new Scanner(System.in);\\n        int min = sc.nextInt();\\n        int max = 0;\\n        for (int i = 0; i < 4; i++) {\\n            max = sc.nextInt();\\n        }\\n        int k = sc.nextInt();\\n        if (k < max - min) {\\n            System.out.print(\":(\");\\n        } else {\\n            System.out.print(\"Yay!\");\\n        }\\n\\n    }\\n\\n}\\n", "target": "66", "substitutes": {}}
{"code": "import java.util.*;\\npublic class Main{\\n\tpublic static void main(String args[]){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint N = sc.nextInt();\\n\t\tint count = 1;\\n\t\tint max = 0;\\n\t\tString[] S = new String[N];\\n\t\tfor(int i = 0;i < N;i++){\\n\t\t\tS[i] = sc.next();\\n\t\t}\\n\t\tArrays.sort(S);\\n\t\tMap<String,Integer> map = new TreeMap<>();\\n\t\tfor(int i = 0;i < N - 1;i++){\\n\t\t\tif(S[i + 1].equals(S[i])){\\n\t\t\t\tcount++;\\n\t\t\t\tif(i == N - 2){\\n\t\t\t\t\tmap.put(S[i],count);\\n\t\t\t\t\tmax = Math.max(max,count);\\n\t\t\t\t}\\n\t\t\t}else{\\n\t\t\t\tmap.put(S[i],count);\\n\t\t\t\tmax = Math.max(max,count);\\n\t\t\t\tcount = 1;\\n\t\t\t\tif(i == N - 2){\\n\t\t\t\t\tmap.put(S[i + 1],count);\\n\t\t\t\t\tmax = Math.max(max,count);\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tfor(String key : map.keySet()){\\n\t\t\tif(map.get(key) == max){\\n\t\t\t\tSystem.out.println(key);\\n\t\t\t}\\n\t\t}\\n\t}\\n}", "target": "235", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "Scan", "gc", "sq", "uc", "ng", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "src", "cl", "lc", " Sc", "arc", "ctl", "ctrl", "mc", "scl", "cr", "sel", "ch", "capt", "txt", "ss", "sci", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["None", "I", "NM", "NN", "R", "Count", "NC", "C", "ND", "L", "IN", "AN", "network", "NOTE", "NO", "Num", "NT", "M", "D", "Net", "B", "UN", "F", "NG", "V", "n", "P", "NR", "NL", "NB", "NP", "NV", "TN", "MAN", "ANY", "NI", "NEW", "GN", "NA", "K", "G", "J", "Size", "NH", "NS", "SP", "Len", "NOR", "STATE", "SN", "Length", "FN", "T", "Ns", "NPR", "NE", "NOW"], "count": ["status", "important", "ctr", "cycle", "n", "index", "next", "process", "force", "child", "empty", "result", "num", "test", "handle", "found", "counter", "Count", "const", "nb", "ct", "f", "used", "sum", "add", "only", "current", "amount", "cmd", "number", "cache", "list", "draw", "cast", "length", "history", "success", "latest", "match", "with", "stat", "find", "size", "must", "score", "cont", "state", "acc", "total", "nt", "comment", "core", "message", "all", "now", "cond", "check", "c", "weight", "code", "ount", "conf", "info", "batch", "continue", "more", "frequency", "call"], "max": ["root", "auto", "scale", "net", "Max", "right", "ox", "global", "ms", "n", "cur", "index", "head", "min", "next", "rest", "force", "pool", "append", "row", "dot", "default", "ver", "MAX", "best", "shift", "base", "out", "sum", "add", "parent", "maximum", "med", "only", "average", "hash", "lock", "co", "current", "recent", "pop", "step", "chain", "except", "pad", "cp", "cache", "set", "mod", "cast", "length", "range", "exclusive", "k", "x", "tmp", "size", "dev", "on", "rank", "up", "name", "value", "master", "replace", "grow", "rand", "can", "total", "top", "end", "act", "val", "patch", "core", "ax", "window", " Max", "last", "now", "plus", "when", "check", "c", "full", "v", "conf", "cl", "box", "limit", "cat", "res", "mx", "ck", "null", "fail", "alpha", "checked", "get", "call"], "S": ["E", "AS", "I", "FS", "R", "RS", "C", "SH", "TS", "SL", "L", "SS", "SAN", "SU", "SR", "Q", "Series", "A", "ISS", "OS", "M", "CS", "SER", "SIM", "SA", "JS", "US", "B", "PS", "VS", "F", "P", "V", "WS", "SM", "DS", "SOURCE", "Stats", "SB", "NRS", "s", "IS", "STR", "Source", "Sample", "CSS", "SF", "SI", "ES", "GS", "G", "SO", "SE", "MS", "NS", "SP", "BY", "ST", "X", "SAM", "BS", "T", "ASS", "SQL"], "i": ["io", "o", "iu", "index", "y", "ix", "pi", "ii", "id", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "ei", "xi", "base", "client", "progress", "cli", "init", "s", "ui", "j", "uri", "ik", "qi", "multi", "print", "chain", "b", "ini", "m", "si", "ic", "sim", "oi", "inner", "is", "ind", "x", "mi", "err", "gi", "ji", "it", "e", "di", "in", "z", "slice", "zi", "iq", "I", "ami", "u", "ai", "me", "iy", "by", "im", "v", "info", "q", "ri", "ki", "batch", "ij", "li", "point", "ip"], "map": ["mb", "mt", "open", "cap", "ack", "maps", "view", "window", "shape", "scale", "mm", "complete", "match", "transform", "tool", "mp", "write", "bridge", "scope", "find", "add", "save", "link", "mg", "manager", "use", "ape", "index", "ap", "app", "where", "place", "master", "MAP", "one", "load", "hash", "table", "lock", "mask", "make", "create", "mem", "mark", "process", "store", "print", "pack", "dict", "collect", "group", "cp", "cache", "set", "list", "m", "block", "tree", "message", "cast"], "key": ["poly", "cy", "pair", "select", "obj", "shift", "foo", "member", "k", "phrase", "sum", "x", "link", "tmp", "pkg", "c", "entry", "index", "mac", "name", "y", "v", "value", "by", "ry", "q", "label", "prefix", "json", "bo", "ace", "j", "Key", "hash", "a", "lock", "ey", "char", "property", "my", "chain", "ex", "bar", "mk", "id", "val", "KEY", "row", "in", "str", "list", "item", "tip", "ip"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\nclass Main{\\n  static boolean found = false;\\n  public static void main(String[] args) throws IOException {\\n    PrintWriter out = new PrintWriter(System.out);\\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n    // StringTokenizer st  = new StringTokenizer(br.readLine());\\n\\n    String s = br.readLine();\\n\\n    long sum = 0;\\n    for (int i=0; i<s.length(); i++) {\\n      sum+= Character.getNumericValue(s.charAt(i));\\n      sum = sum%9;\\n    }\\n    if (sum%9==0) {\\n      out.println(\"Yes\");\\n    }\\n    else {\\n      out.println(\"No\");\\n    }\\n    out.close();\\n  }\\n\\n  \\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n", "target": "93", "substitutes": {"out": ["exit", "error", "report", "sys", "OUT", "io", "th", "csv", "er", "write", "console", "exec", "outs", "x", "tmp", "msg", "r", "err", "n", "ser", "os", "name", "info", "output", "w", "Out", "this", "pr", "put", "screen", "res", "print", "ch", "cmd", "txt", "ex", "result", "file", "null", "to", "in", "log", "str", "message"], "br": ["or", "repl", "rc", "bh", "dr", "bro", "bl", "erd", "rin", "rr", "ered", "tr", "ird", "lr", "ri", "aer", "bt", "rys", "bd", "ch", "kr", "BR", "nr", "hr", "rl", "rd", "ry", "rain"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    String S = sc.next();\\n    char h[] = new char[4];\\n    for(int i=0;i<4;i++){\\n      h[i] = S.charAt(i);\\n    }\\n    String answer = \"No\";\\n    Arrays.sort(h);\\n    if(h[0]==h[1]&&h[1]!=h[2]&&h[2]==h[3]){\\n      answer = \"Yes\";\\n    }\\n    System.out.println(answer);\\n    \\n  }\\n  \\n  //\u6700\u5927\u516c\u7d04\u6570\u30fb\u6700\u5c0f\u516c\u500d\u6570\uff08\u30bb\u30c3\u30c8\u3067\u4f7f\u3046\uff09\\nstatic int gcd (int a, int b) {return b>0?gcd(b,a%b):a;}\\nstatic int lcm (int a, int b) {return a*b/gcd(a,b);}\\n\\n\\n//\u7d20\u6570\u5224\u5b9a\\nstatic boolean isPrime (int n) {\\n\tif (n==2) return true;\\n\tif (n<2 || n%2==0) return false;\\n\tdouble d = Math.sqrt(n);\\n\tfor (int i=3; i<=d; i+=2) if(n%i==0){return false;}\\n\treturn true;\\n}\\n\\n\\n//\u500d\u6570\u5224\u5b9a\uff0810\u9032\u6570\u4ee5\u5916\u306e\u3068\u304d\u306b\u6709\u7528\uff09\\nstatic boolean isMultiple (String s, int base, int m) {\\n\tint temp = 0;\\n\tfor (int i=0; i<s.length(); i++) {\\n\t\ttemp = (temp*base+Character.getNumericValue(s.charAt(i)))%m;\\n\t}\\n\tif (temp==0) {return true;}\\n\treturn false;\\n}\\n\\n\\n//\u968e\u4e57\\nstatic long factorial (int i) {\\n\tif (i==1) {return 1;}\\n\telse {return i*factorial(i-1);}\\n}\\n\\n\\n//\u9032\u6570\u5909\u63db\\nstatic String toNbase (String sm, int m, int n) {\\n\treturn Long.toString(Long.parseLong(sm,m),n);\\n}\\n  \\n}", "target": "33", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "syn", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "sac", "sh", "sch", "sq", "gc", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "s", "cl", "lc", "desc", "dec", "screen", "mc", "RC", "scl", "cr", "ch", "system", "ss", "cle", "cs", "ec", "tc", "Sc", "scan"], "S": ["AS", "R", "C", "RS", "SH", "L", "TS", "SL", "SS", "SU", "M", "SER", "CS", "SA", "JS", "US", "P", "V", "SM", "SOURCE", "SB", "s", "N", "SF", "SI", "GS", "SO", "G", "Si", "SE", "H", "SP", "NS", "ST", "SN", "SAM", "BS", "SQL"], "h": ["eh", "hi", "rev", "history", "hs", "hh", "hex", "t", "th", "u", "has", "bh", "kh", "dr", "sh", "ha", "ish", "o", "subject", "c", "host", "ah", "here", "ht", "q", "rh", "w", "j", "l", "hl", "hash", "dh", "he", "oh", "hp", "ih", "ph", "it", "H", "hd", "hal", "uh", "p", "hm", "hr", "hz", "cache", "ho", "help", "g", "handle"], "i": ["iter", "I", "hi", "ci", "ie", "si", "io", "ic", "sim", "u", "oi", "ai", "us", "port", "is", "ind", "ori", "x", "no", "ms", "client", "o", "point", "z", "mi", "n", "key", "index", "y", "v", "gi", "init", "q", "ix", "ui", "s", "ri", "j", "uri", "qi", "pi", "multi", "ji", "it", "e", "ii", "chain", "b", "spin", "gu", "di", "ini", "li", "in", "ti", "bi", "set", "m", "iu", "phi", "ip"], "answer": ["answered", "said", "arent", "remember", "quest", "open", "onse", "viation", "install", "reply", "offer", "swers", "response", "uration", "know", "say", "ask", "help", "request", "ache", "echo", "review", "value", "ah", "q", "output", "ve", "ace", "question", "description", "string", "ae", "swer", "Answer", "continue", "interpret", "search", "accept", "result", "audio", "wer", "option", "support", "wait", "don", "query", "haven", "message", "again", "rn"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Arrays;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.StringTokenizer;\\nimport java.io.BufferedReader;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        MyScanner in = new MyScanner(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        B solver = new B();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class B {\\n        public void solve(int testNumber, MyScanner in, PrintWriter out) {\\n            String S = in.next();\\n            List<Character> acgt = new ArrayList<>(Arrays.asList('A', 'C', 'G', 'T'));\\n            int ans = 0;\\n            int cnt = 0;\\n            for (int i = 0; i < S.length(); i++) {\\n                Character c = S.charAt(i);\\n                if (acgt.contains(c)) {\\n                    cnt++;\\n                } else {\\n                    ans = Math.max(ans, cnt);\\n                    cnt = 0;\\n                }\\n            }\\n            ans = Math.max(ans, cnt);\\n            out.println(ans);\\n        }\\n\\n    }\\n\\n    static class MyScanner {\\n        private BufferedReader in;\\n        private StringTokenizer st;\\n\\n        public MyScanner(InputStream stream) {\\n            in = new BufferedReader(new InputStreamReader(stream));\\n        }\\n\\n        public String next() {\\n            while (st == null || !st.hasMoreTokens()) {\\n                try {\\n                    String rl = in.readLine();\\n                    if (rl == null) {\\n                        return null;\\n                    }\\n                    st = new StringTokenizer(rl);\\n                } catch (IOException e) {\\n                    throw new RuntimeException(e);\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n\\n    }\\n}\\n\\n", "target": "100", "substitutes": {"inputStream": ["InputSource", " inputSteam", "openSteam", "InputSteam", " inputSource", "outputWindow", "outputSource", "outputSocket", " inputWindow", "openStream", "outputstream", " inputSocket", "inputSource", "inputSocket", "outputSteam", " inputstream", "Inputstream", "openWindow", "inputstream", "InputStream", "inputWindow", "inputSteam", "openSocket"], "outputStream": ["currentStream", "publicWriter", "outputView", "outputWriter", "resultWriter", "publicStream", "currentstream", "publicPort", "outputPort", "currentView", "inputView", "outputstream", "writestream", "writeSteam", "resultStream", "outputSteam", "writeView", "inputSteam", " outputSteam", " outputWriter", " outputPort", "inputstream", "resultPort", "resultSteam", "publicSteam", "writeStream", "currentSteam"], "in": ["or", "env", "io", "re", "raw", "sol", "n", "source", "read", "min", "en", "con", "w", "l", "doc", "cin", "In", "form", "file", "as", "ze", "line", "internal", "din", "t", "al", " IN", "thin", "nn", "isin", "init", "s", " din", "run", "win", "ini", "log", "reader", "m", "iter", "ic", "inner", "from", "mm", "bin", "er", "is", "ind", "ins", "r", "on", "mi", "err", "up", "local", "sin", "it", "p", "rt", "inf", "act", "inside", "IN", "inn", "ain", "rin", "check", "context", "lin", "h", "info", "cl", "this", "ri", "gin", "inc", "input", "null", "ssl", "kin"], "out": ["stable", "writer", "or", "report", "sys", "OUT", "io", "t", "at", "flush", "inner", "obj", "net", "er", "write", "ter", "gc", "sum", "o", "outs", "client", "conn", "gr", "r", "err", "n", "name", "os", "OU", "server", "s", "aos", "output", "w", "Out", "this", "l", "outer", "table", "co", "screen", "res", "it", "print", "ch", "pool", "txt", "ex", "rt", "nt", "null", "result", "to", "user", "end", "ou", "log", "cache", "set", "list"], "solver": ["Solution", "resolver", "resoln", "ssolve", "tsolutions", "tsolver", " solutions", "ssolver", "tsolve", " solution", "soln", "ssolution", "solutions", "tsolution", "Solve", "Solutions", "ssoln", "solve", "resolution", "Soln", " solve", "Solver", "resolve", "solution"], "testNumber": ["testnumber", " solutionNumber", " scenarioNo", " testnum", " solutionNo", "testnum", "testNo", " solutionnum", " testnumber", " solutionnumber", " scenarionum", " scenarionumber", " testNo", " scenarioNumber"], "S": ["E", " s", "R", "C", "L", "SH", "SL", "TS", "Y", "SS", "SU", "SAN", "SR", "A", "M", "CS", "SER", "SA", "JS", "B", "P", "V", "SM", "SB", "s", "Str", "N", "STR", "Source", "SF", "SI", "string", "GS", "G", "Si", "SE", "H", "NS", "SP", "ST", "X", "SN", "SAM", "T", "RAW", "SQL"], "acgt": ["aclt", " acbt", " aclt", "Acgt", "ACgat", "cbt", "clt", "ACGT", "acnt", "accnt", "accGT", "acgat", " acnt", "acclt", "Acgb", "cgt", "AcGT", "accbt", "acGT", "acgb", "Acgat", "acbt", "accgt", "ACgt", "accgat", "accgb", "ACgb"], "ans": ["nets", "cas", "ANS", "orts", "ions", "anks", "offs", "ces", "anes", "AN", "ats", "ads", "aps", "ums", "eds", "ords", "ann", "ants", "ins", "outs", "uns", "aus", "acs", "an", "ks", "ags", "angs", "ands", "os", "s", "amps", "acts", "aos", "lets", "aces", "posts", "olds", "ons", "anas", "ens", "ots", "ars", "cons", "ams", "vers", "ations", "gs", "users", "ows", "ates", "can", "ids", "ns", "ers", "oos", "as", "ames", "cs", "actions", "arms", "arts", "xs", "ents"], "cnt": ["crc", "cNT", "cnc", " cct", "cunt", "Cnt", "nct", "acnd", "Cnd", "cugt", "cuct", " cnd", "rcnd", "rcnt", "CNT", " cNT", "Cct", "rcgt", " cnc", "acnt", "acNT", "nnc", "nnt", " crc", "cct", "cgt", "rcct", "curc", "acnc", "cuNT", "cunc", "acrc", "cnd", " cgt", "nnd", "acct", "Cnc"], "i": ["zi", "I", "hi", "ci", "ami", "\u0438", "si", "ic", "u", "us", "ei", "xi", "ai", "is", "ori", "x", "o", "mi", "n", "cli", "gi", "v", "im", "y", "ix", "info", "ui", "ri", "ki", "j", "uri", "qi", "pi", "multi", "ji", "it", "ii", "p", "ex", "ini", "di", "id", "li", "ti", "bi", "major", "m", "iu", "phi", "ip"], "c": ["pc", "cos", "C", "cu", "ct", "ic", "t", "u", "bc", "gc", "fc", "r", "cont", "cc", "n", "cur", "v", "cl", "lc", "cat", "l", "arc", "a", "co", "char", "mc", "cr", "ch", "p", "b", "cm", "vc", "dc", "cp", "cs", "tc", "sc", "g", "ac"], "st": ["stable", "sm", "or", "mt", "ist", "sw", "est", "ft", "sty", "const", "first", "ct", "t", "th", "sts", "obj", "net", "sh", "fr", "stat", "inst", "ste", "no", "tmp", "std", "r", "sp", "stage", "ust", "ut", "pt", "cl", "St", "bt", "ts", "sta", "put", "rest", "start", "store", " est", "lt", "tt", "it", "stan", "td", "ST", "rt", "stack", "nd", "nt", "str", "set", "et", "sc", "se", "ost"], "stream": ["path", "Stream", "io", "window", "iterator", "inner", "secure", "ream", "transform", "console", "test", "loop", "type", "check", "context", "source", "down", "loader", "s", "output", "this", "sample", "input", "pipe", "form", "system", "chain", "file", "zip", "pool", "stack", "row", "reader", "log", "self", "channel", "message"], "rl": ["repl", "rol", "lv", "vl", "jl", "rc", "ln", "lf", "ll", "sol", " lb", "RL", "r", "rr", "rin", "ml", "pel", "lb", "arl", "lr", "pl", "rh", "lc", "gro", "rid", "l", "dl", "mr", "hl", "ctrl", "rx", "rb", "kl", "nl", "vr", "tl", "rg", "rt", "txt", "ls", "url", "fl", "rel", "ssl", "wl", "fr", "lp", "line", "sr", "rn"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.io.PrintWriter;\\nimport java.util.*;\\npublic class Main {\\n\tpublic static void main(String[] args)throws IOException {\\n\t\tFastReader sc = new FastReader();\\n\t\tPrintWriter pw = new PrintWriter(System.out);\\n\t\tint n = sc.nextInt();\\n\t\tint m = (int)Math.ceil(n * 1.0 / 1000.0);\\n\t\tSystem.out.println(1000 * m - n);\\n\\n\t}\\n}\\n\\n\\n\\n\\n\\nclass FastReader {\\n\tBufferedReader br;\\n\tStringTokenizer st;\\n\\n\tpublic FastReader() {\\n\t\tbr = new BufferedReader(new\\n\t\t                        InputStreamReader(System.in));\\n\t}\\n\\n\tString next() {\\n\t\twhile (st == null || !st.hasMoreElements()) {\\n\t\t\ttry {\\n\t\t\t\tst = new StringTokenizer(br.readLine());\\n\t\t\t} catch (IOException  e) {\\n\t\t\t\te.printStackTrace();\\n\t\t\t}\\n\t\t}\\n\t\treturn st.nextToken();\\n\t}\\n\\n\tint nextInt() {\\n\t\treturn Integer.parseInt(next());\\n\t}\\n\\n\tlong nextLong() {\\n\t\treturn Long.parseLong(next());\\n\t}\\n\\n\tdouble nextDouble() {\\n\t\treturn Double.parseDouble(next());\\n\t}\\n\\n\tString nextLine() {\\n\t\tString str = \"\";\\n\t\ttry {\\n\t\t\tstr = br.readLine();\\n\t\t} catch (IOException e) {\\n\t\t\te.printStackTrace();\\n\t\t}\\n\t\treturn str;\\n\t}\\n}", "target": "184", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "cu", "psc", "ic", "sv", "rc", "nc", "bc", "asc", "cam", "sch", "gc", "uc", "sec", "sp", "c", "cc", "tr", "isc", "esc", "cl", "lc", "desc", "mc", "scl", "cr", "rs", "proc", "scan", "dc", "cs", "ec", "tc", "Sc", "sr"], "pw": ["lpv", "lpwd", " pW", "pW", "lpW", "cpW", "cpwd", "cpw", " pwd", "lpw", "pv", " pv", "pwd", "cpv"], "n": ["nm", "nb", "t", "ln", "nc", "mn", "nan", "i", "na", "x", "o", "ms", "ng", "size", "c", "nn", "v", "en", "s", "N", "j", "l", "nu", "nl", "np", "e", "cn", "p", "sn", "ns", "nt", "number", "num", "un", "z", "d", "ne"], "m": ["mt", "nm", "f", "t", "mm", "M", "k", "mn", "i", "o", "ms", "r", "md", "mi", "c", "dm", "h", "mu", "med", "an", "v", "s", "gm", "l", "mc", "mx", "p", "tm", "b", "cm", "mk", "num", "z", "d", "km", "g"], "br": ["bp", "bre", "bn", "bm", "bc", "bh", "bridge", "bra", "dr", "bro", "bl", "ctr", "gr", "r", "sp", "tr", "shr", "bs", "bsp", "lr", "bt", "mr", "Br", "pr", "next", "rb", "jp", "itter", "bd", "cr", "ch", "kr", "b", "BR", "browser", "rel", "ptr", "hr", " bl", "fr", "buf", "ber", "wr", "vr"], "st": ["stable", "sm", "mt", "ist", "sw", "est", "ft", "sty", "const", "ct", "sl", "t", "th", "sts", "sv", "dr", "sh", "bl", "fr", "stat", "inst", "ste", "stri", "std", "z", "r", "sp", "stage", "ust", "tr", "ut", "lo", "pt", "ast", "cl", "s", "St", "bt", "l", "rest", "start", "lt", "tt", "p", "sn", "ST", "nd", "nt", "stack", "ss", "rt", "be", "set", "et", "se", "ost"], "str": ["stable", "rec", "ent", "sequence", "t", "div", "exp", "out", "inst", "ctr", "buffer", "msg", "r", "sp", "cont", "tr", "arr", "shr", "v", "s", "del", "Str", "STR", "j", "next", "string", "char", "res", "text", "e", "print", "p", "cr", "ns", "txt", "cert", "result", "pse", "ret", "rel", "fr", "buf"]}}
{"code": "import java.util.*;\\nimport java.io.*;\\n\\npublic class Main {\t\\n\\n\tprivate static void solve(){\\n\t\t//Implement solution here.\\n\t\tint N = ni();\\n\t\tint mod = N % 1000;\\n\t\tif(mod == 0) {\\n\t\t\tSystem.out.println(0);\\n\t\t} else {\\n\t\t\tSystem.out.println(1000 - mod);\\n\t\t}\\n\t\t\\n\t}\\n\\n\t//Switch input source (stdin/file)\\n\tprivate static BufferedReader br;\\n\tpublic static void main(String[] args){\\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString debugDataPath = System.getenv(\"DD_PATH\");        \\n\t\tif(debugDataPath != null){\\n\t\t\ttry{\\n\t\t\t\tbr = new BufferedReader(new InputStreamReader(new FileInputStream(new File(debugDataPath))));\\n\t\t\t}catch(Exception e){\\n\t\t\t\tthrow new RuntimeException(e);\\n\t\t\t}\\n\t\t}\\n\t\tboolean hasNext = true;\\n\t\twhile(hasNext){\\n\t\t\tsolve();\t\\n\t\t\ttry{\\n\t\t\t\tbr.mark(1);\\n\t\t\t\tif(br.read() > 0){\\n\t\t\t\t\tbr.reset();\t\t\t\\n\t\t\t\t\tSystem.out.println(\"---\");\\n\t\t\t\t} else {\\n\t\t\t\t\thasNext = false;\\n\t\t\t\t}\\n\t\t\t}catch(Exception e){\\n\t\t\t\tthrow new RuntimeException(e);\\n\t\t\t} \\n\t\t}\\n\t}\\n\\n\t//Input read utility\\n\tprivate static StringTokenizer tokenizer = null;\\n\tpublic static String next() {\\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n\t\t\ttry {\\n\t\t\t\ttokenizer = new StringTokenizer(br.readLine());\\n\t\t\t} catch (Exception e) {\\n\t\t\t\tthrow new RuntimeException(e);\\n\t\t\t}\\n\t\t}\\n\t\treturn tokenizer.nextToken();\\n\t}\\n\t//Get next single int\\n\tprivate static int ni() {\\n\t\treturn Integer.parseInt(next());\\n\t}\\n\t//Get next single long\\n\tprivate static long nl() {\\n\t\treturn Long.parseLong(next());\\n\t}\\n\t//Get next single double\\n\tprivate static double nd() {\\n\t\treturn Double.parseDouble(next());\\n\t}\\n\t//Get next int array from one line\\n\tprivate static int[] na(int n) {\\n\t\tint[] a = new int[n];\\n\t\tfor (int i = 0; i < n; i++)\\n\t\t\ta[i] = ni();\\n\t\treturn a;\\n\t}\\n\t//Get next char array from one line\\n\tprivate static char[] ns() {\\n\t\treturn next().toCharArray();\\n\t}\\n\t//Get next long array from one line\\n\tprivate static long[] nal(int n) {\\n\t\tlong[] a = new long[n];\\n\t\tfor (int i = 0; i < n; i++)\\n\t\t\ta[i] = nl();\\n\t\treturn a;\\n\t}\\n}\\n", "target": "184", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint a = scan.nextInt();\\n\t\tint b = scan.nextInt();\\n\t\tint c = scan.nextInt();\\n\t\tint d = scan.nextInt();\\n\t\tint[] alice = new int[101];\\n\t\tint[] bob = new int[101];\\n\\n\t\tfor (int i = a + 1; i <= b; i++) {\\n\t\t\talice[i] = 1;\\n\t\t}\\n\t\tfor (int i = c + 1; i <= d; i++) {\\n\t\t\tbob[i] = 1;\\n\t\t}\\n\t\tint ans = 0;\\n\t\tfor (int i = 0; i <= 100; i++) {\\n\t\t\tif (alice[i] == 1 && bob[i] == 1) {\\n\t\t\t\tans++;\\n\t\t\t}\\n\t\t}\\n\\n\t\tSystem.out.println(ans);\\n\\n\t}\\n\\n}", "target": "47", "substitutes": {"scan": ["sm", "report", "sql", "sys", "get", " scanner", "san", "pass", "Scan", "sv", "se", "ann", "bin", "sync", "send", "reach", "gate", "out", "gc", "stat", "find", "parse", "conn", "r", "sur", "check", "an", "n", "nn", "read", "v", "scroll", "en", "info", "ner", "cat", "process", "clean", "char", "gen", "start", "ch", "can", " Scan", "system", "p", "search", "cgi", "util", "proc", "fail", "row", "in", "log", "list", "set", "see", "query", "sc", "g"], "a": ["ar", "aa", "ax", "ai", "area", "va", "A", "da", "au", "ab", "pa", "oa", "ao", "an", "ba", "am", "ap", "app", "ea", "ga", "ia", "sta", "ta", "ae", "aj", "aaa", "af", "apa", "ja", "ca", "as", "la", "alpha", "sa", "act", "ma", "ac"], "b": ["mb", "nb", "back", "bb", "bc", "bf", "bl", "ub", "ab", "B", "BB", "fb", "ba", "blue", "eb", "ib", "by", "beta", "y", "bs", "ob", "cb", "bt", "j", "l", "rb", "gb", "br", "bar", "db", "be", "bi", "sb"], "c": ["ci", "f", "C", "ct", "cu", "ctx", "com", "rc", "bc", "city", "cv", "uc", "fc", "cd", "ce", "n", "cc", "cut", "con", "lc", "cb", "cat", "co", "e", "cr", "cn", "ch", "cm", "ca", "cf", "cp", "dc", "cs", "ec", "tc", "ac"], "d": ["done", "ed", "dd", "de", "div", "dra", "ad", "du", "sd", "dp", "D", "da", "data", "cd", "dev", "df", "days", "n", "dn", "del", "des", "ded", "dec", "e", "bd", "dos", "dat", "td", "di", "dt", "ds", "dir", "db", "dc", "z"], "alice": [" alient", "Alient", "halICE", "alient", "ellick", "allie", "elient", " alie", "Alice", "halient", "halicer", "Alie", " alicer", "allouse", "allicer", "ellice", "halice", "alie", "ellicer", "allice", "elice", "elICE", " alick", "alicer", " alICE", "allient", "allick", " alouse", "Alicer", "alick", "ellouse", "elicer", "alICE", "alouse"], "bob": ["bborp", " box", "obond", "cob", "obob", " beb", "obeb", "caz", "bbob", "beb", "bbox", "bioup", "baz", " borp", "coup", "box", "boup", "abob", "bond", " baz", "cox", "abox", "biorp", "bbaz", "biox", "biob", "borp", "biaz", "abond", "obox", " bond", " boup", "abeb"], "i": ["itime", "io", "umi", "ice", "ski", "o", "ani", "iu", "ir", "ix", "iii", "pi", "ii", "fi", "ti", "bi", "fire", "phi", "hi", "ci", "ei", "xi", "ori", "client", "cli", "ui", "j", "uri", "ik", "qi", "multi", "chain", "ini", "ni", "esi", "span", "si", "ic", "sim", "oi", "iri", "inner", "eu", "is", "ind", "x", "mi", "gi", "ji", "it", "di", "to", "zi", "I", "ami", "\u0438", "u", "ai", "me", "iy", "im", "v", "info", "q", "wi", "ri", "ki", "batch", "this", "ij", "cgi", "li", "point", "ip"], "ans": ["nets", "ANS", "ions", "anks", "offs", "nz", "AN", "lines", "anes", "ats", "ums", "aps", "ads", "eds", "us", "has", "ann", "is", "ants", "ins", "x", "outs", "ms", "als", "uns", "orders", "ys", "acs", "ks", "an", " scans", "ags", "vs", "lan", "sets", "flags", "s", "amps", " spans", "ends", "posts", "ens", "ows", "can", "ops", "ids", "ns", "ls", "ds", "vals", "ips", "cs", "alls", "arts", "xs", "ents"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int W = sc.nextInt();\\n        int H = sc.nextInt();\\n        int x = sc.nextInt();\\n        int y = sc.nextInt();\\n        int r = sc.nextInt();  \\n        if(x - r < 0 || y - r < 0 || x + r > W || y + r > H){\\n        \tSystem.out.println(\"No\");\\n        \t}\\n        else if(x - r >= 0 && y - r >= 0 && H >= x + r && W >= y + r){\\n        \tSystem.out.println(\"Yes\");\\n        \t}\\n\t}\\n\\n}\\n", "target": "171", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "comm", "out", "sch", "gc", "sq", "scope", "uc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "ko", "lc", "ctl", "desc", "mc", "jp", "inc", "acc", "scl", "cr", "ch", "system", "p", "ck", "cgi", "ss", "conv", "dc", "cs", "ec", "tc", "Sc", "g", "scan"], "W": ["Width", "WAR", "R", "WT", "VW", "L", "WE", "DW", "Y", "EW", "Wh", "Q", "Win", "M", "D", "S", "B", "Wi", "F", "P", "V", "WS", "CW", "SW", "WA", "w", "N", "MW", "U", "NW", "WH", "WR", "TH", "G", "WB", "X", "T", "BW", "WD", "WW", "We", "WC"], "H": ["HO", "R", "RH", "His", "He", "C", "L", "HH", "SH", "HI", "Y", " h", "HE", "A", "M", "D", "Ch", "MH", "HA", "B", "F", "V", "HR", "h", "OH", "HTML", "HL", "HB", "N", "AH", "Height", "WH", "CH", "TH", "K", "G", "HS", "NH", "Eh", "X", "T", "HT", "HC"], "x": ["fx", "px", "xp", "xml", "f", "ax", "t", "xt", "xx", "xi", "dx", "ox", "k", "i", "o", "on", "g", "c", "n", "h", "zx", "index", "v", "xc", "ix", "w", "j", "l", "wx", "a", "rx", "mx", "p", "xy", "ex", "tx", "X", "width", "z", "m", "xs"], "y": ["ye", "cy", "vy", "py", "t", "xx", "Y", "ies", "oy", "height", "i", "gy", "o", "yo", "sy", "z", "ys", "ym", "uy", "n", "h", "iy", "yt", "by", "v", "ty", "yr", "w", "j", "l", "ey", "sky", "ly", "ya", "my", "p", "xy", "ny", "ch", "b", "yy", "ry", "m", "ay"], "r": ["error", "ar", "R", "t", "ra", "u", "rc", "re", "rate", "er", "ro", "dr", "right", "rad", "fr", "i", "data", "type", "ur", "rr", "err", "g", "c", "n", "tr", "order", "h", "resource", "v", "q", "lr", "w", "term", "j", "l", "mr", "a", "rb", "rar", "res", "it", "e", "cr", "br", "p", "kr", "b", "like", "rg", "rt", "result", "rs", "nr", "rd", "rw", "ry", "d", "m", "item", "attr", "sr", "vr"]}}
{"code": "import java.util.*;\\n\\nclass Main{\\n    public static void main(String args[]){\\n        Scanner sc = new Scanner(System.in);\\n        int n = Integer.parseInt(sc.nextLine());\\n        String[] line = sc.nextLine().split(\" \");\\n        int[] arr = new int[n];\\n        int temp;\\n        int count = 0;\\n        for(int x = 0; x < n; x++){\\n            arr[x] = Integer.parseInt(line[x]);\\n        }\\n\\n        for(int i = 0;i < n; i++){\\n            for(int j = n-1; j > i; j--){\\n                if(arr[j] < arr[j-1]){\\n                    temp = arr[j-1];\\n                    arr[j-1] = arr[j];\\n                    arr[j] = temp;\\n                    count++;\\n                }\\n            }\\n        }\\n        for(int x = 0; x < n; x++){\\n            if(x == n-1){\\n                System.out.println(arr[x]);\\n            }else{\\n                System.out.print(arr[x]);\\n                System.out.print(\" \");\\n            }\\n        }\\n        System.out.println(count);\\n    }\\n}", "target": "170", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "lc", " Sc", "ctl", "desc", "mc", "inc", "scl", "cr", " scr", "ch", "system", "sel", "capt", "ss", "sci", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["length", "nm", "nb", "t", "network", "inn", "nc", "net", "mn", "nan", "out", "na", "no", "o", "ng", "conn", "size", "r", "on", "len", "c", "nn", "name", "v", "en", "dn", "q", "N", "l", "nu", " N", "np", "nl", "cn", "p", "sn", "norm", "ns", "nt", "number", "num", "un", "z", "ln", "m", "ne"], "line": ["word", "LINE", "auto", "ine", "date", "lines", "range", "re", "inline", "Line", "link", "ne", "buffer", "parse", "train", "rule", "page", "column", "space", "l", "header", "lock", "string", "force", "screen", "nl", "char", "handle", "chain", "command", "le", "file", "detail", "user", "row", "log", "comment", "ln", "query", "block", "frame", "se"], "arr": ["repl", "rec", "ack", "Array", "pret", "Ar", "bl", "expr", "parse", "alph", "emb", "msg", "cur", "load", "rest", "enc", "impl", "dat", "agg", "row", "hist", "map", "dr", "au", "inst", "gr", "arm", "var", "pl", "hash", "vol", "br", "db", "rel", "list", "buf", "str", "ARR", "aug", "art", "addr", "aa", "func", "obj", "ll", "ref", "par", "tmp", "r", "arb", "rr", "err", "ev", "fre", "buff", "aaa", "req", "frac", "nt", "fr", "val", "attr", "iq", "ar", "ray", "div", "img", "stock", "data", "ab", "rep", "app", "play", "adj", "pr", "av", "elt", "res", "coll", "dict", "bar", "ang", "att", "array"], "temp": ["iter", "cap", "perature", "fake", "cu", "t", "tim", "alt", "mm", "fac", "porary", "unt", "mp", "base", "tmp", "typ", "mint", "unit", "partial", "tr", "key", "cum", "prime", "pt", "v", "emp", "Temp", "orig", "term", "variable", " tmp", "ta", "strength", "deg", "tem", "tt", "tm", "pre", "txt", "total", "util", "Temperature", "template", "cp", "ptr", "pretty", "nom", "mod", "tc", "tip", "test"], "count": ["found", "close", "error", "report", "length", "flag", "status", "counter", "nb", "Count", "ct", "ctx", "all", "hold", "gc", "sum", "find", "add", "ctr", "cond", "size", "cd", "z", "cont", "cycle", "err", "check", "c", "weight", "code", "index", "ount", "conf", "info", "state", "comment", "process", "current", "amount", "total", "result", "nt", "number", "num", "trace", "list", "cache", "test", "call"], "x": ["fx", "px", "xp", "ick", "xd", "ctx", "ax", "at", "xx", "xt", "pe", "xi", "lex", "exp", "xf", "xa", "xxxx", "dx", "ox", "ind", "on", "c", "h", "key", "index", "php", "xc", "y", "v", "ix", "yx", "q", "pl", "w", "xe", "batch", "el", "l", "wx", "rx", "co", "nex", "ey", "mx", "e", "xy", "xes", "ex", "inx", "tx", "X", "any", "z", "act", "xxx", "ux", "xs", "Ax"], "i": ["iq", "ie", "I", "ci", "f", "si", "io", "ic", "at", "t", "u", "ai", "xi", "is", "ind", "k", "r", "mi", "c", "h", "key", "index", "im", "y", "init", "v", "q", "ix", "s", "ki", "ia", "l", "pi", "ij", "it", "e", "ii", "p", "b", "ini", "di", "li", "fi", "in", "ti", "bi", "z", "m", "iu", "phi", "g", "ip"], "j": ["jac", "bj", "at", "jl", "js", "t", "obj", "k", "out", "fr", "last", "oj", "job", "o", "z", "je", "uj", "ge", "h", "by", "jc", "y", "v", "pt", "kid", "q", "dj", "json", "adj", "pr", "aj", "jp", "jo", "jit", "ji", "ij", "J", "my", "br", "ot", "jump", "it", "b", "jj", "jet", "other", "bi", "kj", "jas", "g", "ja"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString S = sc.next();\\n\t\tint firstIndex = S.indexOf(\"A\");\\n\t\tint lastIndex = S.lastIndexOf(\"Z\");\\n\t\tSystem.out.println(S.substring(firstIndex, lastIndex + 1).length());\\n\t\tsc.close();\\n\t}\\n}", "target": "109", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "cu", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "sub", "uc", "anc", "sec", "sp", "c", "cc", "esc", "isc", "s", "cl", "ko", "lc", "arc", "desc", "mc", "nl", "cr", "capt", "ch", "ok", "ck", "ss", "cle", "cs", "ec", "tc", "Sc", "scan"], "S": ["SC", "C", "RS", "L", "SH", "SL", "TS", "SS", "SU", "A", "SER", "CS", "SA", "B", "US", "VS", "P", "V", "SM", "SOURCE", "SB", "W", "s", "IS", "N", "STR", "SF", "STAT", "SI", "GS", "SO", "Si", "SE", "H", "LS", "SP", "NS", "ST", "SN", "SAM", "BS", "T", "SQL"], "firstIndex": ["firstAddress", "firstConnect", "startindex", "startValue", "firstValue", "primaryIndex", "primaryindex", " firstAddress", "firstindex", " firstPosition", "FirstAddress", "clientIndex", "firstPosition", "clientindex", "clientValue", " firstindex", "primaryPosition", " firstConnect", " firstValue", "FirstPosition", "Firstindex", "FirstIndex", "startConnect", "clientConnect", "startIndex", "primaryAddress"], "lastIndex": ["LastIndex", "bottomValue", " lastId", "endFound", "LastId", "LastKey", "lastValue", "tailKey", "bottomFound", "endValue", "lastId", "bottomPosition", "lastPosition", "tailId", " lastFound", "LastPoint", "endIndex", " lastPoint", " lastValue", "lastPoint", "bottomIndex", "endPosition", " lastPosition", " lastKey", "tailPoint", "lastKey", "lastFound", "tailIndex"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.InputStreamReader;\\nimport java.io.OutputStream;\\nimport java.io.PrintWriter;\\nimport java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.StringTokenizer;\\n\\n/**\\n * Built using CHelper plug-in Actual solution is at the top\\n */\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tInputStream inputStream = System.in;\\n\t\tOutputStream outputStream = System.out;\\n\t\tInputReader in = new InputReader(inputStream);\\n\t\tPrintWriter out = new PrintWriter(outputStream);\\n\t\tTask solver = new Task();\\n\t\tsolver.solve(1, in, out);\\n\t\tout.close();\\n\t}\\n\\n\tstatic class Task {\\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\\n\t\t\tString S = in.next();\\n\t\t\tString ans = \"AC\";\\n\t\t\tif(S.charAt(0) != 'A') {\\n\t\t\t\tans = \"WA\";\\n\t\t\t}\\n\t\t\tint count = 0;\\n\t\t\tfor(int i = 2; i < S.length() - 1; i++) {\\n\t\t\t\tif(S.charAt(i) == 'C') {\\n\t\t\t\t\tcount++;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tif(count != 1) {\\n\t\t\t\tans = \"WA\";\\n\t\t\t}\\n\t\t\tfor(int i = 1; i < S.length(); i++) {\\n\t\t\t\tif(Character.isUpperCase(S.charAt(i)) && S.charAt(i) != 'C') {\\n\t\t\t\t\tans = \"WA\";\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tout.println(ans);\\n\t\t}\\n\t}\\n\t\\n\tstatic class InputReader {\\n\t\tpublic BufferedReader reader;\\n\t\tpublic StringTokenizer tokenizer;\\n\\n\t\tpublic InputReader(InputStream stream) {\\n\t\t\treader = new BufferedReader(new InputStreamReader(stream), 32768);\\n\t\t\ttokenizer = null;\\n\t\t}\\n\\n\t\tpublic String next() {\\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n\t\t\t\ttry {\\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\\n\t\t\t\t} catch (IOException e) {\\n\t\t\t\t\tthrow new RuntimeException(e);\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn tokenizer.nextToken();\\n\t\t}\\n\\n\t\tpublic int nextInt() {\\n\t\t\treturn Integer.parseInt(next());\\n\t\t}\\n\\n\t}\\n}\\n", "target": "209", "substitutes": {"inputStream": ["dataStream", "helloSteam", " inputSteam", "dataStreamer", "hellostream", "helloScript", "inputStreamer", "dataSteam", "inputScript", "primarySteam", "helloSocket", " inputScript", "outputstream", "helloStream", " inputSocket", "helloStreamer", "datastream", "inputSocket", "outputSteam", "primaryStream", "primarySocket", "inputstream", "primaryScript", "inputSteam", "outputStreamer"], "outputStream": ["logstream", "resultSet", "OutputSteam", "outStream", "logPoint", "inputPoint", "OutputSet", "outputForm", "inputStreamer", "outstream", "OutputForm", "outputstream", "outPoint", " outputSet", " outputForm", "logStream", "resultForm", "outputPoint", "resultStream", "outputSteam", "OutputStream", " outputSteam", "outputSet", "inputstream", "resultSteam", "outStreamer", "outputStreamer", "logStreamer"], "in": ["or", "iter", "inside", "din", "io", "IN", "al", "ic", "inner", "inn", "from", "mm", "bin", "all", "er", "raw", "re", "is", "ind", "ins", "add", "r", "on", "rin", "err", "up", "context", "source", "h", "isin", "by", "init", "en", "info", "con", "output", "local", "gin", "doc", " din", "l", "cin", "current", "In", "inc", "it", "input", "form", "run", "old", "file", "ini", "rt", "null", "inf", "log", "ry", "get"], "out": ["or", "writer", "report", "sys", "OUT", "io", "t", "at", "flush", "inner", "obj", "ln", "all", "net", "er", "write", "gc", "outs", "o", "tmp", "client", "gr", "conn", "timeout", "err", "up", "n", "name", "os", "v", "server", "OU", "s", "con", "aos", "output", "w", "Out", "this", "outer", "table", "lock", "next", "co", "current", "gen", "screen", "res", "it", "print", "run", "txt", "ex", "null", "nt", "user", "to", "end", "ou", "log", "list", "set", "cache"], "solver": ["Solution", "csolution", " sorter", "resolver", "resorter", "csorter", "csolver", "unsolution", "unsorter", "csolve", " solution", "Solve", "unsolve", "Sorter", "solve", "resolution", "unsolver", " solve", "sorter", "Solver", "resolve", "solution"], "testNumber": [" testNum", "testnumber", "taskNumber", "testNum", " attemptCounter", " attemptNum", " attemptNumber", " testnumber", " attemptnumber", "taskCounter", " testCounter", "tasknumber", "testCounter", "taskNum"], "S": ["AS", "I", "ANS", "SSL", "R", "C", "RS", "L", "TS", "SL", "SH", "SS", "SAN", "SU", "A", "M", "CS", "SER", "SA", "PS", "B", "JS", "SEC", "VS", "P", "V", "SM", "DS", "SOURCE", "SB", "s", "Str", "IS", "N", "STR", "Source", "Sample", "SF", "CSS", "SI", "GS", "SO", "G", "J", "Si", "H", "LS", "NS", "SP", "Screen", "ST", "X", "SN", "SAM", "BS", "T", "RAW", "SQL"], "ans": ["ras", "cas", "ANS", "anks", "offs", " sans", "ces", "AN", "san", "ats", "ads", "eps", "aps", "ann", "ols", "oss", "ants", "ins", " means", "uns", "ms", "aus", "acs", "ks", "an", "angs", "os", "s", "amps", "aos", "lets", "aces", "posts", "beans", "ons", " Ans", "ens", "ars", "ams", "vers", "ANT", "ates", "can", "An", "ns", "rs", "ls", "ds", "vals", "Ns", "leans", "ents", "mas", "cs", "ean", "arms", "arts", "xs", "ts"], "count": ["found", "report", "length", "flag", "zero", "counter", "Count", "const", "match", "base", "now", "sum", "find", "add", "cond", "cd", "size", "cont", "cycle", "check", "c", "n", "code", "cc", "index", "ount", "conf", "set", "batch", "force", "current", "amount", "multi", "chain", "total", "result", "nt", "list", "cache", "common", "core", "call"], "i": ["zi", "I", "hi", "ci", "ami", "\u0438", "si", "io", "ic", "u", "ai", "xi", "ei", "me", "us", "er", "base", "is", "ind", "point", "o", "x", "mi", "err", "g", "n", "cli", "key", "by", "gi", "im", "init", "y", "ix", "q", "ui", "v", "info", "ri", "ki", "j", "uri", "batch", "qi", "pi", "multi", "ji", "it", "ii", "p", "chain", "ini", "di", "ni", "li", "ti", "bi", "m", "iu", "phi", "slice", "ip"], "reader": ["writer", "iter", "liner", "builder", "zero", "window", "iterator", "rc", "inner", " parser", "er", "ro", "dr", "linger", "buffer", "r", "creator", "rr", "redo", " read", "read", "wrapper", "timer", " writer", "parser", "term", "holder", "ner", "rer", "rx", "rar", "oder", "control", "finder", "keeper", "input", "handler", "driver", "worker", "file", "Reader", "older", "runner", "user", "row", "rl", " readers", "loader", "handle"], "tokenizer": ["Tokenizer", "serialifier", "normalizable", "Tokenize", "tokenize", "okenisher", "okeniter", "characterizer", " tokenner", "characterator", " tokenifier", " tokenizers", "serializer", "okenization", "tempifier", "okenzer", "okenator", "tokenifier", "serialize", " tokenzer", "tokenner", "Tokenner", "okenifier", "tokenization", "tokenizers", "normalization", "Tokenization", " tokenization", "tempisher", "tempizable", "tokenizable", "normalator", " tokenator", "characterizable", "Tokenzer", "serialization", "normalifier", "tokeniter", "okenner", "normalizer", " tokenize", "okenizer", "Tokenifier", "Tokenator", "okenizable", "tokenator", "tokenisher", "characteriter", "okenizers", "okenize", "normalisher", " tokeniter", "normalzer", " tokenizable", "Tokenizers", "tempizer", "tokenzer"], "stream": ["time", "length", "history", "path", "Stream", "io", "view", "window", "iterator", "secure", "inner", "console", "test", "loop", "data", "buffer", "type", "message", "client", "body", "source", "down", "wrapper", "output", "sample", "input", "pipe", "system", "form", "chain", "zip", "file", "queue", "event", "row", "poll", "channel", "loader", "handle"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\t// ?????????????????\\???\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint num1 = sc.nextInt();\\n\t\tint num2 = sc.nextInt();\\n\t\tint num3 = sc.nextInt();\\n\\n\t\t// ??\\??????????????\u00b0???????????\\??????????\u00ac???????????????????????????\u00b0????????\\??????\\n\t\tint[][] table = new int[num1][num2];\\n\t\tint[][] grid = new int[num2][num3];\\n\\n\t\tfor (int cnt1 = 0; cnt1 < num1; cnt1++) {\\n\\n\t\t\tfor (int cnt2 = 0; cnt2 < num2; cnt2++) {\\n\\n\t\t\t\ttable[cnt1][cnt2] = sc.nextInt();\\n\t\t\t}\\n\t\t}\\n\\n\t\tfor (int cnt1 = 0; cnt1 < num2; cnt1++) {\\n\\n\t\t\tfor (int cnt2 = 0; cnt2 < num3; cnt2++) {\\n\\n\t\t\t\tgrid[cnt1][cnt2] = sc.nextInt();\\n\t\t\t}\\n\t\t}\\n\\n\t\t// 2??????????\u00ac????????????????????\u00a8????\\n\t\tlong [][] sum = new long[num1][num3];\\n\t\tint cnt0;\\n\t\tint cnt1;\\n\t\tint cnt2;\\n\\n\t\tfor (cnt0 = 0; cnt0 < num1; cnt0++) {\\n\\n\t\t\tfor (cnt1 = 0; cnt1 < num3; cnt1++) {\\n\\n\t\t\t\tfor (cnt2 = 0; cnt2 < num2; cnt2++) {\\n\\n\t\t\t\t\tsum[cnt0][cnt1] += table[cnt0][cnt2] * grid[cnt2][cnt1];\\n\\n\t\t\t\t}\\n\\n\t\t\t}\\n\\n\t\t}\\n\\n\t\tfor (cnt0 = 0; cnt0 < num1; cnt0++) {\\n\\n\t\t\tfor (cnt1 = 0; cnt1 < num3; cnt1++) {\\n\\n\t\t\t\tif (cnt1 >= num3-1) {\\n\\n\t\t\t\t\tSystem.out.println(sum[cnt0][cnt1]);\\n\\n\t\t\t\t} else {\\n\\n\t\t\t\t\tSystem.out.print(sum[cnt0][cnt1] + \" \");\\n\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tsc.close();\\n\t}\\n\\n}", "target": "204", "substitutes": {}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        Scanner in = new Scanner(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        B solver = new B();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class B {\\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\\n            int N = in.nextInt();\\n            int[] H = new int[N];\\n            for (int i = 0; i < N; i++) {\\n                H[i] = in.nextInt();\\n            }\\n            int count = 1;\\n            int max = H[0];\\n            for (int i = 1; i < N; i++) {\\n                if (max <= H[i]) {\\n                    count++;\\n                    max = H[i];\\n                }\\n            }\\n            out.println(count);\\n        }\\n\\n    }\\n}\\n\\n", "target": "7", "substitutes": {"inputStream": ["inputScreen", "helloScreen", "helloSteam", " inputSteam", "infoStream", "outputView", "infostream", "inputStreamer", "infoStreamer", "inScreen", "helloSocket", " inputScreen", "inputView", "outputstream", "helloStream", " inputSocket", "infoView", " inputView", "inputSocket", "inStream", " inputstream", "inSteam", " inputStreamer", "inputstream", "inSocket", "inputSteam", "outputStreamer"], "outputStream": ["successForm", "OutputSteam", "outStream", "outputForm", "inputStreamer", "outForm", "inputForm", "writeForm", "successStream", "OutputPath", "OutputForm", "writeStreamer", " outputForm", "writeSteam", " outputPath", "outPath", "outputSteam", "OutputStream", " outputSteam", "outSteam", "successSteam", "outputStreamer", "writeStream", "inputSteam", "outputPath", "successStreamer"], "in": ["or", "iter", "inside", "din", "io", "serv", "IN", "t", "at", "inn", "inner", "raw", "mm", "bin", "is", "ind", "ins", "o", "add", "r", "on", "rin", "err", "up", "mi", "c", "n", "lin", "source", "isin", "init", "conf", "en", "info", "con", "s", "output", "local", "gin", "l", "doc", "cin", "current", "In", "sin", "inc", "it", "input", "p", "can", "stream", "run", "file", "ini", "rt", "null", "as", "dir", "inf", "log", "reader", "kin", "get"], "out": ["or", "writer", "report", "sys", "OUT", "io", " OUT", "t", "at", "flush", "inner", "obj", "net", "write", "gc", "ins", "sum", "outs", "o", "client", "timeout", "err", "up", "c", "n", "by", "name", "os", "v", "OU", "server", "s", "con", "aos", "output", "w", "Out", "this", "outer", "table", "co", "screen", "res", "it", "print", "e", "p", "pool", "run", "cmd", "b", "ex", "ch", "nt", "null", "user", "to", " Out", "end", "ou", "log", "temp", "list"], "solver": ["esolver", "esolution", "gsolution", "Solution", "resolver", "resorter", "solving", "esorter", "gsolver", "gsolving", "gsolve", "Solving", "esolve", "Solve", "Sorter", "msolving", "msolution", "solve", "resolution", "sorter", "msolver", "Solver", "resolve", "solution", "msolve"], "testNumber": ["testnumber", " solutionNumber", " trialCounter", " solutionNo", "testNo", " trialnumber", " trialNo", " testnumber", " trialNumber", " solutionnumber", " testCounter", " solutionCounter", "testCounter", " testNo"], "N": ["None", "CN", "I", "NM", "NN", "Count", "NC", "C", "ND", "L", "AN", "Na", "NO", "A", "Num", "NT", "M", "D", "S", "B", "Node", "F", "NG", "V", "n", "P", "NR", "Ni", "NL", "NB", "NP", "ANY", "TN", "NI", "GN", "NA", "K", "J", "NH", "NS", "SN", "T", "Ns", "Sn", "No", "NE"], "H": ["I", "High", "RH", "His", "HEAD", "Handler", "He", "SH", "HH", "HI", "HE", "AV", "Hash", "HTTP", "Max", "M", "Host", "MH", "HA", "B", "Hz", "F", "P", "Head", "h", "Help", "OH", "HK", "HP", "HL", "HB", "History", "AC", "GO", "CH", "TH", "K", "HS", "J", "HD", "NH", "Header", "HT", "HTML", "HC", "HQ"], "i": ["zi", "iq", "ie", "sequence", "ci", "I", "status", "\u0438", "io", "si", "ic", "sim", "u", "oi", "ai", "xi", "ei", "us", "ger", "me", "exp", "is", "point", "o", "x", "mi", "c", "cli", "n", "php", "by", "gi", "im", "y", "init", "ix", "q", "ui", "s", "info", "ri", "ki", "j", "uri", "l", "ity", "qi", "pi", "multi", "ji", "ij", "it", "ii", "p", "PI", "chain", "ini", "di", "id", "li", "fi", "ti", "bi", "z", "m", "iu", "phi", "g", "ip"], "count": ["found", "report", "flag", "length", "status", "counter", "Count", "const", "nb", "ct", "C", "last", "stat", "sum", "find", "x", "ctr", "add", "cond", "client", "size", "score", "cont", "cycle", "check", "c", "n", "code", "index", "conf", "q", "hash", "quiet", "next", "current", "coll", "child", "total", "nt", "number", "num", "list", "cache", "common", "core", "draw", "cast", "call"], "max": ["MAX", "best", "huge", "ax", "t", "view", "range", " Max", "exp", "Max", "right", "k", "last", "height", "sum", "x", "full", "n", "maximum", "h", "med", "prime", "v", "min", "conf", "head", "master", "highest", "limit", "lock", "mod", "rest", "rand", "recent", "mx", "chain", "gt", " MAX", "total", "mad", "top", "end", "cp", "checked", "star", "cache", "ma"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString[] line = sc.nextLine().split(\" \");\\n\t\tint n = Integer.parseInt(line[0]);\\n\t\t\\n\t\tList<String> list = new ArrayList<String>();\\n\\n\t\tString min = \"\";\\n\t\t\\n\t\tfor(int i=0;i<n;i++){\\n\t\t\tlist.add(sc.nextLine());\\n\t\t}\\n\t\tsc.close();\\n\t\t\\n\t\tCollections.sort(list);\\n\t\tfor(String col:list) {\\n\t\t\tmin += col;\\n\t\t}\\n\t\tSystem.out.println(min);\\n\t}\\n}", "target": "224", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "sub", "uc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "irc", "arc", "ctl", "screen", "mc", "inc", "scl", "cr", "sel", "ch", "capt", "sci", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "line": ["cell", "word", "LINE", "auto", "ine", "date", "lines", "range", "pe", "se", "inline", "node", "Line", "no", "link", "ne", "lin", "ge", "page", "where", "ve", "set", "l", "lock", "string", "char", "nl", "pipe", "chain", "stroke", "le", "file", "detail", "cle", "log", "trace", "ide", "ln", "block", "row", "frame", "ip"], "n": ["nb", "t", "network", "nc", "net", "mn", "count", "nan", "na", "no", "d", "len", "c", "nn", "nor", "v", "gn", "en", "N", "j", "l", "nu", "np", "nl", "p", "sn", "ns", "nt", "nw", "ni", "num", "z", "ln", "m", "ne"], "list": ["sort", "iter", "sequence", "tree", "level", "pair", "status", "show", "L", "range", "collection", "left", "all", "ll", "sync", "map", "net", "out", "add", "parent", "copy", "cont", "ml", "check", "source", "php", "LIST", "filter", "s", "valid", "load", "batch", "l", "dl", "table", "lat", "lt", "print", "form", "chain", "st", "search", "queue", "listed", "group", "ls", "detail", "user", "dict", "li", "array", "lists", "set", "details", "test"], "min": ["format", "aug", "const", "version", "dim", "max", "sol", "member", "initial", "stat", "sum", "nom", "Minimum", "mint", "Min", "tail", "key", "beta", "mat", "name", "init", "MIN", "second", "only", "small", "man", "lower", "output", "emin", "mini", "mod", "rest", "mem", "meta", "req", "diff", "lt", "dem", "minimum", "mean", "mins", "margin", "minute", "temp", "mine", "str", "common", "m", "none", "test"], "i": ["zi", "I", "sequence", "ci", "hi", "ie", "inter", "si", "ic", "sim", "ai", "ei", "me", "us", "base", "is", "ind", "x", "ms", "mi", "err", "cli", "init", "im", "gi", "y", "q", "ix", "ui", "j", "batch", "uri", "qi", "pi", "multi", "my", "it", "ii", "chain", "gu", "di", "ini", "uu", "li", "ti", "bi", "m", "phi", "ip", "asi"], "col": ["cmp", "def", "rol", "ct", "ctx", "select", "mot", "csv", "coord", "ll", "member", "COL", "disc", "cond", "fc", "Col", "cont", "c", "cur", "prop", "mat", "cor", "cal", "con", "lc", "box", "column", "cat", "co", "crit", "sel", "coll", "ol", "cmd", "ico", "comp", "cf", "nt", "block", "row", "rl", "icol", "val", "cell", "loc"]}}
{"code": "import java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n\\n        Scanner scanNumber = new Scanner(System.in);\\n\\n        String S = scanNumber.next();\\n\\n        String T = scanNumber.next();\\n\\n        scanNumber.close();\\n\\n        char[] charS = S.toCharArray();\\n        char[] charSalfa = S.toCharArray();\\n        char[] charT = T.toCharArray();\\n\\n        String answer = \"No\";\\n\\n        char work = ' ';\\n\\n        for(int i = 0; i < T.length() ; i++){\\n            work = charS[0];\\n            for(int j=0; j<T.length()-1 ; j++){\\n                charS[j] = charS[j + 1];\\n            }\\n            charS[T.length() -1] = work;\\n            if(Arrays.equals(charS, charT)){\\n                answer = \"Yes\";\\n                break;\\n            }\\n\\n        }\\n\\n        System.out.print(answer);\\n\\n    }\\n}\\n", "target": "220", "substitutes": {"scanNumber": [" scanCounter", "Scanner", " scanBER", "scanBER", "scanner", " scanner", "rowNumbers", "scanReader", "canBER", "scrollNumber", "ScanBER", " scanNumbers", "canNumber", "canCounter", "canNumbers", "rowBER", "scrollBER", "cannumber", "scrollnumber", "ScanCounter", " scanReader", "scanCounter", "canReader", "Scannumber", "scrollCounter", "scannumber", "scanNumbers", "ScanReader", "rownumber", "rowNumber", " scannumber", "ScanNumber", "canner"], "S": ["I", "R", "C", "L", "TS", "SL", "SH", "SS", "SAN", "SU", "SR", "A", "M", "D", "SER", "CS", "SA", "JS", "B", "F", "P", "V", "SM", "SOURCE", "SB", "s", "N", "STR", "SF", "SI", "G", "Si", "SE", "H", "SP", "NS", "ST", "X", "BS", "SQL"], "T": ["E", "I", "PT", "WT", "R", "C", "L", "t", "TS", "Y", "TY", "TT", "RT", "Z", "TL", "NT", "TA", "O", "M", "Template", "XT", "IT", "B", "F", "P", "V", "TG", "TC", "VT", "N", "TN", "TO", "TH", "G", "J", "MT", "GT", "TR", "ST", "OT", "AT", "TI", "Target", "It", "TM"], "charS": ["characterT", "CharD", "cellC", "letterSA", " charV", "intS", "charD", "charWindows", " charWindows", "characterSA", "CharL", "channelS", "intL", " charUS", "byteWindows", "channelL", "byteT", "intD", "intT", "charSA", "characterL", "characterV", "CharN", "letterC", "tableSI", " charD", "tableL", "tableUS", "charL", "charN", "letterS", " charP", "charSI", "characterN", "characterC", "channelSI", "charP", "channelUS", "characterS", " charN", "cellT", " charC", "byteS", "CharV", " charL", "cellSA", "charUS", "characterWindows", "cellS", " charSI", "CharP", "CharT", "CharS", "charC", "characterP", "letterT", "byteC", "tableS", "charV"], "charSalfa": ["charSaleaa", "charSalsaa", "charSalfja", "charSallaa", "charSalsa", "charSalsja", "charSaleja", "charTalfja", "charSalla", "charTalfa", "charSalea", "charTalfas", "charTallaa", "charTalla", "charSallja", "charSalfaa", "charTallas", "charSaleas", "charTallja", "charSallas", "charSalfas", "charSalsas", "charTalfaa"], "charT": ["chT", "chWT", "letterTS", "clientT", "phraseTS", " charAT", "clientAT", "phraseS", "charWT", "clientWT", "charTS", "letterS", "phraseT", "chR", "clientR", " charTS", "charAT", " charWT", "chAT", " charR", "charR", "letterT", "letterWT", "phraseWT"], "answer": ["exit", "answered", "report", "remember", "archive", "open", "onse", "what", "install", "reply", "offer", "test", "about", "response", "say", "ask", "vote", "notice", "request", "ache", "entry", "object", "echo", "review", "value", "valid", "output", "ve", "oe", "question", "description", "ace", "string", "ae", "Answer", "print", "energy", "interpret", "command", "accept", "result", "empty", "audio", "option", "wer", "poll", "see", "query", "address", "message", "again", "uration"], "work": ["fill", "hello", "word", "join", "wd", "ack", "change", "repair", "add", "job", "link", "WORK", "week", "rank", "check", " Work", "kick", "read", "W", "working", "man", "place", "w", "update", "wh", "good", "Work", "care", "create", "process", "worked", "pay", "build", "start", "force", "form", "search", "worker", "mk", "angle", "field", "works", "align", "help", "draw", "test", "handle"], "i": ["or", "zi", "iter", "ie", "ci", "ar", "ami", "si", "io", "ic", "sim", "ai", "xi", "us", "is", "ind", "mi", "index", "by", "gi", "im", "init", "y", "ix", "ui", "ri", "ki", "ia", "pi", "ji", "it", "ii", "ini", "di", "ni", "li", "ti", "bi", "m", "iu", "phi", "g", "ip"], "j": ["jac", "bj", "off", "jl", "js", "u", "obj", "exp", "k", "out", "oj", "o", "job", "ng", "x", "msg", "z", "on", "err", "uj", "key", "by", "jc", "y", "kid", "v", "q", "dj", "json", "pr", "bot", "ju", "aj", "jp", "jo", "jump", "ji", "ij", "ph", "it", "br", "jit", "J", "b", "jj", "other", "att", "bi", "kj", "m", "jas", "g", "ja"], "length": ["sequence", "history", "time", "join", "font", "volume", "translation", "position", "collection", "capacity", "direction", "version", "product", "height", "count", "padding", "prototype", "ength", "len", "duration", "maximum", "database", "currency", "info", "factor", "distance", "ENGTH", "power", "reading", "present", "build", "form", "append", "total", "balance", "component", "angle", "Length", "properties", "depth", "display", "frequency", "split", "default"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tStringBuilder sb = new StringBuilder();\\n\t\tint a = sc.nextInt();\\n\t\tint b = sc.nextInt();\\n\t\tint max = Math.max(a + b, a -b);\\n\t\tmax = Math.max(max, a * b);\\n\t\tSystem.out.println(max);\\n\t}\\n}\\n", "target": "188", "substitutes": {"sc": ["SC", "cmp", "osc", "pc", "sys", "usc", "tk", "sv", "rc", "nc", "bc", "sync", "exec", "sch", "gc", "sq", "sub", "sec", "sk", "sp", "c", "cc", "isc", "esc", "cl", "lc", "desc", "dec", "ctrl", "mc", "nl", "scl", "cr", "sel", "ch", "system", "p", "tch", "proc", "sci", "conv", "cs", "asc", "Sc", "g", "scan"], "sb": [" kb", "mb", "sw", "bp", "sg", "pb", "si", "bb", "sf", "sh", "bf", "sq", "ub", "sp", "SB", "bs", "ob", " SB", "cb", "bt", "su", "gb", "st", " eb", "db", "sa", "lp", "Bs", "se"], "a": ["aux", "aw", "ar", "aa", "era", "ax", "at", "t", "area", "va", "A", "da", "au", "i", "ab", "pa", "oa", "ao", "act", "ba", "an", "am", "c", "m", "ea", "ga", "ia", "sta", "ta", "ae", "aj", "aaa", "apa", "aka", "ca", "alpha", "la", "as", "to", "sa", "eas", "ma", "ac"], "b": ["nb", "f", "bb", "t", "u", "bc", "bis", "i", "ab", "B", "r", "fb", "blue", "c", "n", "ba", "h", "eb", "ib", "wb", "y", "v", "bs", "ob", "j", "l", "rb", "e", "gb", "db", "be", "erb", "bi", "z", "d", "m", "g"], "max": ["aux", "or", "wrap", "largest", "scale", "Max", "right", "ms", "n", "ge", "min", "w", "gt", "mad", "id", "dot", "default", "MAX", "best", "huge", "inter", "t", "map", "base", "sum", "add", "maximum", "med", "cut", "average", "j", "step", "print", "ex", "mean", "number", "set", "ma", "mod", "m", "length", "range", "shape", "exp", "k", "x", "size", "score", "rank", "prime", "value", "highest", "grow", "diff", "p", "total", "ca", "end", "ext", "act", "cmp", "est", "first", "ax", "div", "window", "all", "dx", "last", "count", "plus", "now", "na", "c", "h", "v", "limit", "aj", "mx", "call"]}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n\t\\n    public static void main(String[] args) {\\n    \tScanner sc = new Scanner(System.in);\\n    \tint N = sc.nextInt();\\n    \tList<Integer> list = new LinkedList<>();\\n    \tint max = 0;\\n    \tint order = 0;\\n    \tfor (int i = 0; i < N; i++) {\\n    \t\tint num = sc.nextInt();\\n    \t\tif (max < num) {\\n    \t\t\tmax = num;\\n    \t\t\torder = i;\\n    \t\t}\\n    \t\tlist.add(num);\\n    \t}\\n    \tCollections.sort(list);\\n    \tint submax = list.get(list.size() - 2);\\n    \tfor (int i = 0; i < N; i++) {\\n    \t\t\tSystem.out.println(i == order ? submax : max);\\n    \t}\\n    }\\n}", "target": "142", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "ctx", "usc", "se", "sv", "rc", "nc", "bc", "sync", "gc", "sq", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "ctl", "mc", "inc", "scl", "cr", "sel", "ch", "ck", "ss", "sci", "conv", "dc", "cle", "cs", "asc", "Sc", "scan"], "N": ["I", "NN", "NM", "R", "Count", "NC", "C", "ND", "L", "AN", "Y", "Q", "NO", "Z", "Max", "Num", "NT", "M", "D", "Net", "S", "P", "V", "n", "NG", "NR", "Ni", "Number", "NB", "NI", "GN", "NA", "K", "Size", "NH", "H", "NS", "Len", "X", "NOR", "SN", "FN", "T"], "list": ["sort", "ist", "sequence", "length", "level", "status", "L", "range", "collection", "shape", "left", "all", "map", "sync", "out", "data", "add", "parent", "single", "size", "cont", "and", "n", "index", "LIST", "filter", "v", "local", "load", "batch", "l", "dl", "table", "null", "lat", "print", "pool", "form", "chain", "old", "dict", "st", "file", "queue", "group", "detail", "stack", "result", "pre", "top", "array", "number", "layout", "log", "lists", "set", "line", "block", "tree", "test"], "max": ["MAX", "length", "upper", "best", "auto", "huge", "ax", "range", "largest", "scale", "all", "Max", "right", "base", "last", "ord", "out", "ma", "sum", "count", "x", "tmp", "size", "rank", "maximum", "n", "med", "index", "head", "min", "conf", "v", "wire", "orig", "master", "limit", "high", "mod", "rest", "res", "mx", "p", "can", "gt", " MAX", "total", "mad", "major", "end", "none", "cache", "set", "m", "default", "big"], "order": ["or", "error", "over", "iter", "ie", "sort", "level", "counter", "incre", "der", "mode", "ger", "seed", "er", "die", "ter", "ice", "count", "ord", "type", "orders", "ier", "rank", "use", "ered", "code", "are", "ser", "index", "by", "page", "address", "orter", "info", "only", "where", "ator", "good", "ORD", "force", "ase", "command", "ordered", "offset", "grade", "dir", "id", "user", "number", "depth", "end", "trace", "mer", "Order"], "i": ["zi", "iq", "iter", "ie", "hi", "ci", "I", "uni", "ami", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "ei", "xi", "me", "ice", "is", "ind", "ori", "x", "z", "mi", "n", "cli", "index", "php", "gi", "y", "im", "init", "ix", "q", "ui", "info", "v", "ki", "j", "l", "ik", "ity", "qi", "pi", "multi", "ji", "ij", "it", "ii", "p", "ini", "di", "ni", "id", "to", "li", "fi", "in", "ti", "bi", "ims", "m", "iu", "phi", "g", "ip"], "num": ["cmp", "nm", "mon", "nb", "hex", "tim", "th", "obj", "dim", "net", "Num", "coord", "node", "part", "count", "ord", "mn", "sum", "na", "no", "msg", "col", "alph", "unit", "nam", "n", "NUM", "cal", "con", "orig", "valid", "non", "cat", "nu", "np", "mark", "ph", "text", "result", "um", "val", "conv", "number", "nr", "temp", "nom", "item", "get"], "submax": ["Subax", "ubhuge", " Subax", "Submad", "ubMax", " Submad", "ubmax", "submad", " subMax", "subax", " subax", "Subhuge", " SubMax", "subhuge", " submad", " Submax", "subMax", "SubMax", " subhuge", "Submax"]}}
{"code": "import java.util.*;\\nclass Main\\n{\\n  public static void main(String[] args)\\n  {\\n    Scanner sc = new Scanner(System.in);\\n    \\n    int a = sc.nextInt();\\n    int b = sc.nextInt();\\n    \\n    int max = -1000;\\n    if (a + b >= max) {\\n      max = a + b;\\n    }\\n    \\n    if (a - b >= max) {\\n      max = a - b;\\n    }\\n    \\n    if(a * b >= max) {\\n      max = a * b;\\n    }\\n    \\n    System.out.println(max); \\n  }\\n}", "target": "188", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "out", "sch", "gc", "sq", "sub", "sec", "sp", "c", "cc", "isc", "esc", "spec", "cl", "lc", "desc", "mc", "nl", "inc", "scl", "cr", "ch", "system", "ck", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "a": ["aux", "go", "ed", "ar", "aa", "era", "ax", "at", "aq", "ai", "area", "wa", "va", "A", "ak", "da", "au", "na", "ab", "oa", "ach", "ao", "ba", "an", "am", "app", "ea", "ga", "eas", "ia", "sta", "ta", "ae", "aj", "aaa", "apa", "aka", "ca", "as", "la", "alpha", "to", "sa", "act", "ma", "ama", "ac"], "b": ["or", "bool", "ed", "nb", "f", "back", "pb", "bb", "t", "bc", "bis", "base", "i", "ub", "bound", "ab", "o", "B", "r", "sb", "fb", "c", "blue", "n", "ba", "h", "eb", "ib", "zb", "beta", "by", "v", "y", "bs", "ob", "lib", "s", "cb", "bt", "j", "l", "rb", "wb", "it", "gb", "br", "p", "bar", "db", "be", "erb", "bi", "z", "d", "m", "g"], "max": ["root", "zero", "auto", "scale", "Max", "right", "global", "ms", "cur", "min", "good", "rest", "force", "mad", "default", "big", "test", "MAX", "best", "huge", "mode", "view", "map", "base", "out", "sum", "no", "maximum", "med", "init", "hash", "lock", "current", "recent", "print", "chain", "mean", "cp", "number", "cache", "set", "ma", "mod", "upper", "range", "exp", "x", "tmp", "size", "dev", "rank", "prime", "value", "always", "master", "rand", "p", "can", "total", "end", "val", "ax", "window", "all", "last", "now", "check", "full", "key", "v", "conf", "q", "orig", "box", "limit", "res", "mx", "bar", "alpha", "checked"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(String args[]) {\\n\\n        // \u5165\u529b\\n        Scanner sc = new Scanner(System.in);\\n        int n = Integer.parseInt(sc.next());\\n        int[] h = new int[n];\\n        for (int i = 0; i < n; i++) {\\n            h[i] = Integer.parseInt(sc.next());\\n        }\\n\\n        // \u4e3b\u51e6\u7406\\n        boolean judge = true;\\n        if (1 < n) {\\n            for (int i = 0; i < h.length - 1; i++) {\\n                if (h[i + 0] <= h[i + 1] - 1) {\\n                    h[i + 1] -= 1;\\n                } else if (h[i + 0] != h[i + 1]) {\\n                    judge = false;\\n                    break;\\n                }\\n            }\\n        }\\n        String result = judge ? \"Yes\" : \"No\";\\n\\n        // \u51fa\u529b\\n        System.out.println(result);\\n        sc.close();\\n    }\\n}\\n", "target": "74", "substitutes": {}}
{"code": "import java.util.*;\\nimport java.math.*;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    BigInteger ans = BigInteger.ONE;\\n    int n = sc.nextInt();\\n\\n    for (int i = 0; i < n; i++) {\\n      BigInteger next = sc.nextBigInteger();\\n\\n      if (!ans.equals(BigInteger.valueOf(-1))) {\\n        if (ans.multiply(next).compareTo(BigInteger.valueOf(1000000000000000000L)) > 0) {\\n          ans = BigInteger.valueOf(-1);\\n        } else {\\n          ans = ans.multiply(next);\\n        }\\n      } else {\\n        if (next.equals(BigInteger.ZERO)) {\\n          ans = BigInteger.ZERO;\\n          break;\\n        }\\n      }\\n    }\\n\\n    System.out.println(ans);\\n  }\\n}\\n\\n", "target": "27", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "ctx", "si", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "desc", "ctrl", "mc", "enc", "nl", "inc", "scl", "cr", "ch", "system", "st", "rs", "ss", "sci", "cle", "cs", "tc", "Sc", "sb", "scan"], "ans": ["ras", " norms", "orts", "ANN", "anes", "ads", "ants", "ports", "outs", "ms", "orders", "angs", "ands", "os", "amps", "asks", "olds", "ids", "umes", "ers", "cs", "nets", "aps", "oss", " means", "names", "aus", "ks", "an", "ians", "annot", "ags", "flags", "s", "aces", "ars", "vers", "mean", "oos", "ls", "actions", "anners", "offs", "ats", "ums", "services", "ann", "is", "ins", "marks", "uns", "lets", "yes", "ens", "ams", "can", "ns", "vals", "arms", "xs", "ents", "ANS", "AN", "lines", "inks", "eds", "ols", "anc", "vs", "aos", "ends", "ines", "posts", "books", "ores", "ons", "ations", "gs", "ates", "rs", "mas", "arts"], "n": ["nb", "network", "ln", "nc", "net", "mn", "nan", "na", "no", "ng", "size", "nn", "nor", "name", "gn", "en", "N", "l", "nu", " N", "nl", "np", "cn", "sn", "ns", "total", "nd", "nt", "nw", "ni", "nr", "number", "num", "d", "ne"], "i": ["zi", "iq", "iter", "I", "sequence", "ci", "hi", "ie", "mill", "sql", "si", "ic", "sim", "u", "ai", "us", "me", "ei", "is", "ind", "x", "ms", "mi", "err", "by", "im", "init", "y", "v", "ix", "q", "ui", "gi", "ki", "j", "qi", "pi", "multi", "it", "ii", "gu", "ini", "di", "ex", "ni", "id", "li", "ti", "bi", "m", "iu", "phi", "ip"], "next": ["first", "seq", "sys", "network", "obj", "ann", "net", "max", "last", "now", "link", "ng", "dev", "sec", "sp", "code", "nn", "entry", "mobile", "info", "non", "sen", "adj", "ner", "j", "prev", "future", "Next", "current", "jp", "np", "extra", "nl", "aj", "gen", "normal", "continue", "gt", "other", "nd", "result", "nt", "news", "li", "end", "then", "self", "fr", "ne", "big"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        // ABC149B - Greedy Takahashi\\n\\n        Scanner sc = new Scanner(System.in);\\n\\n        long a = sc.nextLong();\\n        long b = sc.nextLong();\\n        long k = sc.nextLong();\\n        long n = k - a;\\n\\n        if (a >= k) {\\n            a -= k;\\n        } else {\\n            a = 0;\\n        }\\n\\n        if (n > 0) {\\n            b -= n;\\n        }\\n\\n        if (b < 0) {\\n            b = 0;\\n        }\\n\\n        System.out.println(a + \" \" + b);\\n    }\\n}", "target": "128", "substitutes": {}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        // Your code here!\\n        \\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        \\n        int[] d = new int[n];\\n        for(int i = 0; i < n; i ++) d[i] = sc.nextInt();\\n        Arrays.sort(d);\\n        \\n        int arc_min = d[n/2];\\n        int abc_max = d[n/2-1];\\n        \\n        // K = abc_max+1, ... , arc_min\\n        int ans = arc_min - abc_max;\\n        System.out.println(ans);\\n    }\\n}", "target": "119", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n\t    // write your code here\\n        // input N S\\n        // \u6587\u5b57\u5217\u9577\u3000N \u3067\u3042\u308b\u6587\u5b57\u5217 S \u306b\u3064\u3044\u3066\u3001 S = T + T \u306a\u308b T \u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u306a\u3089 Yes \u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070 No\\n        Scanner sc = new Scanner(System.in);\\n        int strLen = sc.nextInt();\\n        String str = sc.next();\\n        if(strLen % 2 == 0){\\n            String firstStr = str.substring(0, strLen / 2);\\n            String lastStr = str.substring(strLen / 2, strLen);\\n            if(firstStr.equals(lastStr)){\\n                System.out.println(\"Yes\");\\n                return;\\n            }\\n        }\\n        System.out.println(\"No\");\\n    }\\n}\\n", "target": "161", "substitutes": {}}
{"code": "import java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        try (Scanner sc = new Scanner(System.in)) {\\n            int N = sc.nextInt();\\n            int K = sc.nextInt();\\n            int[] p = new int[N];\\n            for (int i = 0; i < N; i++) {\\n                p[i] = sc.nextInt();\\n            }\\n            Arrays.sort(p);\\n            int sum = 0;\\n            for (int k = 0; k < K; k++) {\\n                sum += p[k];\\n            }\\n            System.out.println(sum);\\n        }\\n    }\\n}\\n", "target": "41", "substitutes": {"N": ["I", "NN", "NM", "R", "NC", "AN", "ND", "L", "C", "Na", "NO", "A", "Num", "NT", "M", "D", "Net", "S", "B", "UN", "P", "V", "n", "NR", "Ni", "NB", "NP", "TN", "NI", "NA", "G", "J", "NH", "H", "NS", "SN", "T", "Ns", "Sn", "NE"], "K": ["I", "R", "Count", "C", "L", "PK", "KE", "FK", "Y", "VK", "Q", "M", "UK", "S", "B", "P", "V", "W", "KK", "SK", "KR", "Key", "TH", "G", "J", "Size", "H", "KI", "KA", "BC", "T", "KT", "KEY", "KS", "KN"], "p": ["bp", "pc", "pp", "pb", "pe", "exp", "mp", "params", "pa", "vp", "ps", "parse", "tp", "pins", "ping", "pm", "pd", "sp", "pkg", "P", "rep", "n", "pn", "ap", "pt", "per", "pl", "pers", "perm", "pr", "jp", "np", "pi", "it", "fp", "pre", "conv", "cp", "cache", "lp", "post", "g", "ip"], "i": ["zi", "iter", "ie", "hi", "ci", "I", "iso", "\u0438", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "us", "ei", "inner", "is", "ind", "ins", "ori", "o", "x", "mi", "cli", "ir", "y", "im", "v", "gi", "ix", "init", "ui", "q", "ri", "j", "uri", "batch", "a", "qi", "pi", "multi", "it", "ii", "chain", "ini", "di", "ni", "li", "ti", "bi", "iu", "phi", "ip"], "sum": ["zero", " SUM", "mass", "cost", "loss", "sim", "ums", "fac", "max", "sup", "count", "out", "union", "commit", " summed", "add", "dev", "must", "size", "sat", "cum", "tail", "med", "v", "cal", "tu", "average", "comment", "summary", "hash", "sam", "Sum", "su", "mem", "acc", "vol", "diff", "ass", "mean", "total", "result", "hum", "um", "alpha", "gam", "sa", "num", "temp", "dot", "other", "black"], "k": ["kn", "wk", "ka", "ak", "kh", "dk", "kk", "unk", "kg", "kat", "ek", "z", "sk", "ks", "kick", "ke", "key", "kt", "kid", "y", "kind", "q", "ko", "ki", "kw", "j", "ik", "isk", "ark", "ku", "kl", "acc", "ph", "uk", "ok", "ck", "kr", "mk", "kj", "m", "km", "g", "tk"]}}
{"code": "import java.util.*;\\nclass Main {\\n    public static void main(String[] args) {\\n\tScanner sc = new Scanner(System.in);\\n\tint N = sc.nextInt();\\n\tint[] l = new int[N];\\n\tint max = 0;\\n\tint maxI = 0;\\n\tfor(int i = 0; i<N; i++) {\\n\t    l[i] = sc.nextInt();\\n\t    if(max < l[i]) {\\n\t\tmax = l[i];\\n\t\tmaxI = i;\\n\t    }\\n\t}\\n\tint others = 0;\\n\tfor(int i = 0; i<N; i++) {\\n\t    if(i == maxI) continue;\\n\t    others += l[i];\\n\t}\\n\tif(others > max) {\\n\t    System.out.println(\"Yes\");\\n\t}else {\\n\t    System.out.println(\"No\");\\n\t}\\n    }\\n}", "target": "25", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sac", "sync", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "desc", "mc", "nl", "scl", "cr", "sel", "ch", "ck", "capt", "ss", "sci", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["I", "NM", "NN", "R", "NC", "C", "ND", "L", "AN", "Y", "NO", "Z", "Num", "NT", "Max", "O", "M", "D", "Net", "S", "Node", "F", "NG", "V", "n", "P", "NR", "Ni", "NL", "NB", "NP", "TN", "NI", "GN", "NA", "K", "G", "J", "NH", "NS", "X", "SN", "T", "Ns", "Sn", "No", "NE"], "l": ["ql", "L", "sl", "lu", "lv", "al", "ln", "lf", "ll", "x", "r", "ml", "c", "n", "lo", "lb", "v", "lib", "cl", "lr", "pl", "lit", "lc", "load", "j", "dl", "hl", "kl", "nl", "lt", "it", "lis", "p", "b", "le", "ls", "li", "fl", "ld", "rl", "list", "lp", "m", "line", "el", "g"], "max": ["MAX", "zero", "best", "auto", "huge", "ax", "range", "window", "largest", "scale", "exp", " Max", "all", "net", "Max", "map", "right", "used", "ox", "last", "k", "sum", "global", "x", "count", "ms", "size", "r", "full", "maximum", "n", "c", "h", "med", "v", "conf", "min", "m", "w", "limit", "good", "high", "rest", "res", "mx", "p", "can", "total", "mean", "util", "end", "checked", "act", "ma", "core", "default"], "maxI": ["basei", "baseL", "axS", " maxLI", "MAXL", "MaxL", " maxL", "MaxLI", "tmpi", "maxN", "MAXI", "axL", " maxN", "maxIP", "maxLI", "baseIP", "rootLI", " maxS", "tmpI", " maxIP", "MaxIP", "axI", "rootI", "maxi", "axN", "rootL", " maxi", "tmpL", "MAXS", "maxL", "MAXN", "tmpIP", "rootIP", "baseI", "MaxI", "maxS"], "i": ["zi", "I", "ie", "ci", "hi", "f", "io", "si", "ic", "sim", "u", "oi", "us", "xi", "ai", "ei", "me", "is", "point", "ori", "o", "client", "mi", "cli", "key", "index", "php", "mac", "gi", "im", "y", "init", "v", "ix", "ui", "info", "q", "set", "ri", "ki", "j", "batch", "uri", "json", "ity", "qi", "pi", "multi", "ji", "ij", "it", "ii", "chain", "ex", "di", "ini", "ni", "id", "to", "li", "fi", "ti", "bi", "ims", "m", "iu", "phi", "g", "ip"], "others": ["OTHERS", "Othererences", "therwise", " othererences", "Otherjs", " otherness", "thers", " otherms", "therness", "Otherwise", "otherjs", "ownjs", "Others", "OtherS", "otherness", "OTHERms", " otherS", "ownS", " otherwise", "Otherms", "otherwise", "OTHERerences", "Otherness", "OTHERjs", "OTHERwise", "OTHERs", "othererences", "otherms", "otherS", "therS", "owns"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n  \\n  public static void main (String []args){\\n    Scanner sc = new Scanner(System.in);\\n    int N = sc.nextInt();\\n    \\n    if (N == 1) { \\n      System.out.println(1); return; \\n    }\\n    \\n    int max = Integer.MIN_VALUE;\\n    for (int i = 2; i <= N; i++) {\\n      for (int j = 2; j <= N; j++ ){\\n        double pow = Math.pow((double)i, (double)j);\\n        if (pow > N) {\\n          break;\\n        }\\n        max = Math.max((int)pow, max);\\n      }\\n    }\\n    System.out.println(max);\\n  }\\n}\\n", "target": "143", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "sv", "rc", "nc", "bc", "sync", "Sync", "sch", "sq", "gc", "uc", "ng", "sec", "sp", "Desc", "c", "cc", "ser", "isc", "esc", "cl", "ner", "desc", "screen", "mc", "nl", "acc", "scl", "cr", "sel", "ch", "system", "ss", "conv", "cle", "cs", "asc", "Sc", "sb", "scan"], "N": ["None", "I", "MAX", "NN", "NM", "R", "NC", "C", "L", "Q", "NO", "Z", "Num", "NT", "M", "D", "S", "Node", "F", "P", "V", "n", "NG", "NR", "NUM", "Ni", "NL", "TW", "Number", "NB", "NP", "NV", "TN", "ANY", "NI", "GN", "NA", "K", "G", "J", "NH", "H", "NS", "Ne", "X", "SN", "T", "Sn", "ALL", "NE", "NOW"], "max": ["or", "MAX", "length", "best", "auto", "inter", "ax", "range", "view", "window", "scale", "exp", "all", "Max", "right", "last", "count", "now", "sum", "height", "x", "k", "add", "plus", "out", "size", "cd", "opt", "full", "n", "maximum", "ge", "index", "prime", "med", "v", "min", "value", "conf", "cut", "grow", "limit", "hash", "put", "next", "mod", "rest", "recent", "pop", "step", "mx", "diff", "res", "p", "can", "gt", " MAX", "total", "mean", "id", "top", "end", "dot", "set", "m", "get"], "i": ["zi", "iq", "ie", "hi", "ci", "IJ", "I", "ami", "iso", "inter", "\u0438", "si", "ic", "iri", "ai", "xi", "ei", "base", "is", "eu", "ind", "ori", "mi", "ir", "gi", "y", "im", "info", "ix", "iii", "ui", "ri", "ki", "ik", "qi", "pi", "multi", "ij", "it", "ii", "p", "b", "ini", "di", "yi", "li", "ti", "bi", "m", "iu", "phi", "ip", "asi"], "j": ["note", "ie", "cell", "bj", "jl", "js", "obj", "us", "kj", "k", "oj", "on", "sp", "son", "uj", "n", "ge", "jc", "pt", "y", "im", "v", "bs", "second", "q", "dj", "json", "l", "pr", "bot", "lock", "aj", "jp", "jo", "ji", "J", "ij", "ph", "br", "it", "meg", "p", "b", "jj", "ja", "other", "rel", "bi", "z", "jas", "ne", "g", "ion"], "pow": [" ppower", " poy", "Peff", "Poy", "vpump", "spor", "spowers", "Pew", "pood", "meff", "gpower", "ppowe", "spow", "gow", "vpood", "powers", " ponent", "mew", " pw", " peff", "gowers", "ppower", "Pow", "Ponent", "Pood", "ppow", " pood", "ppoy", " pew", "pew", "pump", " powe", "Pw", "ponent", "por", "pprix", "monent", "peff", " por", " powers", "vpw", "Pump", " prix", "sppower", "prix", "vpow", "mow", "poy", "Prix", "pw", "Powe", " pump", "powe", "gor"]}}
{"code": "import java.util.*;\\n\\n\\npublic class Main {\\n    public static void main(String[] args){\\n\\n        Scanner s = new Scanner(System.in);\\n\\n      \tint sc = s.nextInt();\\n\\n        int judge = 0;\\n        for (int i = 1; i < sc+1; i++) {\\n            if((String.valueOf( i ).length())%2 ==1){\\n                judge++;\\n            }\\n        }\\n        System.out.println(judge);\\n\\n    }\\n}", "target": "135", "substitutes": {"s": ["es", "sw", "qs", "fs", "hs", "sys", "ats", "gets", "sv", "sts", "sol", "is", "sq", "ses", "S", "ms", "ps", "ys", "sb", "c", "v", "ws", "j", "l", "sam", "gs", "p", "search", "ns", "rs", "ss", "ls", "ds", "stats", "conv", "cs", "xs", "ts"], "sc": ["SC", "osc", "pc", "sys", "seq", "psc", "si", "usc", "sv", "rc", "nc", "bc", "asc", "sd", "sup", "sch", "gc", "uc", "anc", "fc", "sec", "sk", "sp", "c", "isc", "esc", "cl", "lc", "arc", "screen", "scl", "ch", "ca", "cs", "ec", "tc", "Sc"], "judge": ["emerge", " judg", "emergrade", "hoggate", "Judgate", "judGE", "JudGE", "Judge", "dalgate", "Judger", "judg", "shieldgrade", "dalGE", "judgate", "vineg", "judger", "vinege", "emerenge", "hogenge", "shieldge", "judgrade", "vinegate", "judse", "Judg", "munger", "emergate", "munge", "vineGE", " judger", "dalge", " judse", "hoggrade", "dalg", "mung", "munse", "judenge", "shieldenge", "hogge", "Judse", "shieldgate"], "i": ["iq", "iter", "I", "ie", "ci", "hi", "\u0438", "io", "si", "ic", "sim", "u", "t", "ai", "us", "ei", "xi", "integer", "is", "ish", "ind", "y", "x", "ms", "mi", "c", "index", "im", "init", "v", "gi", "ix", "q", "ui", "iii", "ri", "ki", "j", "l", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "il", "b", "gu", "di", "ini", "id", "li", "in", "ti", "bi", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t// \u5165\u529b\u306e\u53d6\u5f97\\n      \tint r = sc.nextInt();\\n      \tString s = sc.next();\\n      \tString[] p = s.split(\"\");\\n      \tint half = r / 2;\\n      \tboolean flg = true;\\n      \tif (r % 2 == 1) {\\n      \t    System.out.println(\"No\");\\n      \t    return;\\n      \t}\\n      \tfor(int i=1; i<=half; i++) {\\n      \t    if (!p[i].equals(p[half+i])) flg = false;\\n      \t}\\n\\n        if (flg) System.out.println(\"Yes\");\\n      \telse System.out.println(\"No\");\\n    }\\n}\\n\\n", "target": "161", "substitutes": {"sc": ["SC", " SC", " sp", "sys", "sv", "rc", " sa", " sh", "sq", " cr", "sb", " scorer", "sp", "c", " ss", " sw", " Sc", "cr", " scr", "ch", "system", "ss", "proc", "sa", "cs", "Sc", " sk", "scan"]}}
{"code": "import java.util.Scanner;\\n \\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n\tint N = sc.nextInt();\\n\tint A[] = new int[N];\\n\tint B[] = new int[N];\\n\tint C[] = new int[N];\\n\t\\n\tsc.nextLine();\\n\tfor (int i=0; i<N; i++){\\n\t  A[i] = sc.nextInt();\\n\t}\\n    sc.nextLine();\\n\tfor (int i=0; i<N; i++){\\n\t  B[i] = sc.nextInt();\\n\t}\\n\tsc.nextLine();\\n\tfor (int i=0; i<N-1; i++){\\n\t  C[i] = sc.nextInt();\\n\t}\\n\t\\n    int cuisine = A[0];\\n\tint SatisfacationP = B[cuisine-1];\\n    \\n\tfor (int i=1; i<N; i++){\\n\t  cuisine = A[i];\\n\t  SatisfacationP += B[cuisine-1];\\n\t  if((A[i-1] + 1) == A[i]){\\n\t    SatisfacationP += C[cuisine-2];\\n      }\\n\t}\\n    \\n    System.out.println(SatisfacationP);\\n  }\\n}", "target": "223", "substitutes": {"sc": ["SC", " SC", "sw", "osc", "pc", "sys", "pb", "psc", "si", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sch", "sq", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "lc", "irc", " Sc", "ctl", "desc", "screen", "mc", "inc", "scl", "capt", "ch", "system", "st", "ss", "sci", "cs", "ec", "tc", "Sc", "sb", "scan"], "N": ["None", "E", "I", "NM", "NN", "R", "NC", "AN", "L", "SIZE", "ND", "Y", "NOTE", "NO", "Z", "NT", "O", "M", "D", "NAT", "S", "Node", "EN", "F", "NG", "V", "n", "P", "NR", "Ni", "NL", "Number", "NB", "NP", "ANY", "TN", "MAN", "NI", "GN", "NA", "K", "G", "J", "Size", "NH", "Name", "NS", "SN", "FN", "T", "Ns", "NE"], "A": ["Alpha", "E", "I", "AF", "R", "AL", "AN", "AE", "L", "AV", "Array", "TA", "M", "Ar", "AP", "AA", "SA", "S", "ACC", "F", "P", "V", "IA", "AU", "AB", "AH", "U", "AC", "AM", "JA", "a", "NA", "BA", "G", "AR", "H", "An", "Av", "As", "Ant", "This", "T", "AT", "API", "AST", "LA", "CA"], "B": ["E", "I", "TB", "R", "GB", "OB", "RB", "L", "Y", "BL", "M", "BU", "S", "BO", "USB", "BI", "EB", "BB", "P", "V", "CB", "DB", "BE", "SB", "BF", "NB", "AB", "U", "Reb", "BA", "G", "J", "QB", "VB", "Bern", "WB", "b", "BR", "BY", "BC", "BS", "T", "BD", "LB", "BG", "Bs"], "C": ["SC", "E", "CI", "I", "R", "CT", "L", "EC", "Y", "Q", "Z", "Car", "M", "D", "CS", "You", "S", "P", "c", "V", "CB", "DC", "U", "CD", "K", "G", "H", "CC", "CP", "BC", "T", "CA", "Cs"], "i": ["ine", "io", "iu", "index", "y", "ix", "l", "pi", "ii", "gu", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "used", "dr", "base", "ori", "parent", "client", "cli", "init", "s", "ui", "j", "uri", "qi", "multi", "my", "print", "chain", "ex", "ini", "ni", "list", "set", "m", "et", "iter", "si", "ic", "sim", "oi", "inner", "is", "ind", "x", "mi", "err", "name", "gi", "ji", "it", "p", "di", "to", "in", "ims", "details", "slice", "zi", "I", "ami", "\u0438", "u", "ai", "me", "mac", "iy", "key", "im", "v", "info", "q", "ri", "ki", "batch", "a", "ity", "ij", "PI", "ico", "ios", "li", "point", "ip"], "cuisine": ["yuisine", "culice", "cularie", "culillet", "cuirement", "guarie", "yuicer", "cuicer", " cuicer", "anguirement", "uisine", "uillet", "uuillet", "guice", "uino", " cuarie", "yuarie", "culoine", "uurescent", "anguille", "guisine", "guoine", "guirement", "luille", "uuenery", "uuirement", "cuille", "guille", "culino", "uarie", "uuicer", "anguenery", "cuice", "luisine", "luenery", "uuarie", "yurescent", "uuisine", " curescent", "uuoine", "cuenery", "cuarie", "luarie", "cuino", "cuillet", "uuino", "cuoine", "culisine", "curescent", "anguisine", "uuice", "uuille", "anguarie"], "SatisfacationP": ["SatisfACATIONE", "Satisfacificationp", "SatisfacationO", "SatisfacATIONM", "SatisfacateP", "SatisfacuationE", "SatisficationP", "SatisfACATIONP", "SatisfACATIONp", "SatisfacationF", "SatisfACatonPP", "Satisfacatonp", "SatisfacuationR", "SatisfacationPP", "SatisficationR", "SatisfacATIONE", "Satisfacatedp", "SatisfacilationP", "SatisfacicationPP", "SatisfacificationE", "SatisfacuationPP", "SatisfacATIONR", "SatisfacuationL", "SatisfACatonO", "SatisfacilationF", "SatisficationE", "SatisfacicationP", "SatisfACationO", "Satisficationp", "SatisfacificationP", "SatisficatonE", "SatisfacatedM", "SatisfacilationR", "SatisfacateO", "SatisfacatonPP", "SatisfACationPP", "SatisfacicationR", "SatisfACationL", "SatisfACatonP", "SatisfACatonF", "SatisfacificationM", "SatisfACationE", "SatisfacuationP", "Satisfacuationp", "SatisfacationL", "SatisfacicationL", "SatisfACationM", "SatisfacatonR", "SatisficatonP", "SatisfACationR", "SatisfACationp", "SatisfacatonL", "SatisfacatonE", "SatisfacATIONp", "SatisfacationE", "SatisfacationR", "SatisfacatedE", "SatisfACationP", "SatisfACATIONM", "SatisfACatonR", "SatisfacilationO", "Satisficatonp", "SatisfacationM", "SatisficatonR", "Satisfacationp", "SatisfacateF", "SatisfacateR", "SatisfACationF", "SatisfacatedP", "SatisfacatonF", "SatisfacatonO", "SatisfACatonL", "SatisfacatonP", "SatisfacATIONP"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.StringTokenizer;\\nimport java.io.IOException;\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n *\\n * @author Jaynil\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader in = new InputReader(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        BGreatOceanView solver = new BGreatOceanView();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class BGreatOceanView {\\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\\n            int n = in.nextInt();\\n            int h[] = new int[n];\\n            for (int i = 0; i < n; i++) {\\n                h[i] = in.nextInt();\\n            }\\n            int max = 0;\\n            int ans = 0;\\n            for (int i = 0; i < n; i++) {\\n                if (h[i] >= max) {\\n                    max = h[i];\\n                    ans++;\\n                }\\n            }\\n            out.println(ans);\\n        }\\n\\n    }\\n\\n    static class InputReader {\\n        public BufferedReader reader;\\n        public StringTokenizer tokenizer;\\n\\n        public InputReader(InputStream stream) {\\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\\n            tokenizer = null;\\n        }\\n\\n        public String next() {\\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n                try {\\n                    tokenizer = new StringTokenizer(reader.readLine());\\n                } catch (IOException e) {\\n                    throw new RuntimeException(e);\\n                }\\n            }\\n            return tokenizer.nextToken();\\n        }\\n\\n        public int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n    }\\n}\\n\\n", "target": "7", "substitutes": {"inputStream": [" inputSteam", "sourceStreamer", "inputStreamer", "thisStream", "sampleSteam", "inputFile", "sourceChannel", "sourceSteam", "outputSocket", "thisSocket", "sampleStreamer", " inputSocket", "inputChannel", "inputSocket", "outputSteam", "sampleChannel", "sampleStream", "thisFile", "sourceStream", "outputFile", "outputChannel", "inputSteam", "outputStreamer", "thisSteam", " inputFile"], "outputStream": ["connectionForm", "outputForm", "outputWriter", "inputStreamer", "inputForm", "connectionStream", "networkStreamer", "sourceSteam", "sourceWriter", "networkStream", "outputNow", "sourceNow", "connectionSteam", " outputNow", "networkSteam", "outputSteam", "connectionNow", " outputSteam", "connectionStreamer", " outputWriter", "sourceStream", "connectionWriter", "networkForm", "inputSteam", "outputStreamer"], "in": ["or", "iter", "inside", "din", "io", "IN", "ic", "al", "inner", "inn", "mm", "bin", "er", "ain", "is", "ind", "ins", "add", " IN", "config", "r", "on", "rin", "err", "up", "context", "source", "read", "lo", "isin", "by", "init", "conf", "en", "info", "con", "per", "output", "local", "w", "nin", " din", "gin", "l", "doc", "cin", "current", "In", "sin", "inc", "it", "input", "form", "run", "file", "ini", "rt", "null", "win", "inf", "vin", "log", "get"], "out": ["or", "writer", "sys", "OUT", "io", " OUT", "t", "at", "flush", "inner", "obj", "all", "net", "er", "write", "gc", "outs", "o", "client", "gr", "r", "err", "up", "check", "name", "os", "OU", "server", "s", "con", "aos", "output", "w", "Out", "this", "l", "outer", "table", "co", "current", "screen", "res", "it", "print", "p", "can", "cmd", "ch", "ex", "null", "nt", "to", "end", "ou", "log", "temp", "set", "list"], "solver": ["esolver", " soln", "esolution", "Solution", " sorter", "sender", "resolver", "resorter", "resender", "ssolve", "esorter", "ssolver", " solution", "soln", "ssolution", "Solve", "solve", "resolution", " sender", "Soln", " solve", "sorter", "esender", "Solver", "ssoln", "solution"], "testNumber": ["testNumbers", " scenarioNumbers", " scenarioNo", " testnum", "testnum", "testNo", " trialnum", " trialNo", " trialNumber", " testNumbers", " scenarionum", " trialNumbers", " testNo", " scenarioNumber"], "n": ["nm", "nb", "t", "ln", "nc", "all", "net", "mn", "nan", "k", "na", "o", "names", "no", "ng", "x", "len", "c", "an", "nn", "name", "v", "en", "N", "j", "l", "nu", " N", "np", "nl", "pi", "cn", "norm", "p", "sn", "ns", "nt", "nw", "num", "un", "z", "d", "m", "ne"], "h": ["hi", "history", "hs", "hh", "pp", "f", "t", "th", "bh", "hw", "sh", "ha", "k", "c", "host", "v", "ah", "q", "ht", "rh", "w", "j", "hash", "hl", "pr", "he", "oh", "hp", "ih", "ph", "H", "hd", "ch", "p", "b", "hm", "hz", "ho", "m", "phi"], "i": ["zi", "iq", "ie", "I", "ci", "ami", "f", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "ei", "xi", "me", "used", "ims", "base", "ind", "point", "o", "x", "client", "ori", "mi", "cli", "iy", "php", "im", "init", "y", "info", "ix", "gi", "ui", "q", "ri", "ki", "j", "batch", "uri", "this", "ity", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "p", "PI", "chain", "ini", "di", "li", "fi", "ti", "bi", "iu", "phi", "ip", "ion"], "max": ["MAX", "best", "auto", "huge", "ax", "view", " Max", "map", "Max", "right", "last", "ox", "k", "sum", "x", "ms", "tmp", "size", "full", "maximum", "cur", "med", "head", "min", "conf", "m", "master", "limit", "high", "pr", "hash", "mod", "rest", "current", "rand", "force", "res", "mx", "p", "can", "old", "gt", "mean", "total", "tx", "ca", "mad", "ex", "end", "temp", "ma"], "ans": ["views", "cas", "ANS", "orts", "rors", "span", "anks", "nz", "AN", "anes", "ax", "ats", "aps", "eds", "us", "ann", "nan", "ants", "ins", "outs", "names", "ms", "aus", "an", "ians", "ks", "ones", "lan", "os", "s", "amps", "aos", "lets", "aces", "posts", "ends", "ens", "ots", "cons", "ars", "ros", "ations", "users", "ows", "ids", "can", "ns", "ls", "as", "ents", "caps", "pan", "actions", "arts", "xs", "ts"], "reader": ["writer", "iter", "builder", "upper", "window", "iterator", "rc", "inner", "rier", "er", "ro", "dr", "linger", "buffer", "client", "r", "rr", " read", "read", "resource", "wrapper", " writer", "master", "parser", "term", "this", "ner", "rer", "rx", "rar", "oder", "keeper", "input", "handler", "driver", "worker", "file", "Reader", "runner", "user", "row", "rl", "fr", "loader", "handle"], "tokenizer": ["Tokenizer", "serialifier", "tokenger", "serialzer", " tokenner", "okenressor", " tokenifier", " tokenizers", "okener", "serializer", "tifier", "okenization", "tener", "okenator", "tokenifier", "Tokenner", "tokenner", " tokenzer", "okenifier", " tokenener", "tokenization", "tokenizers", "Tokenization", " tokenressor", "tizers", " tokenization", "normalger", " tokenator", "Tokener", "Tokenzer", "normalressor", "normalifier", "okenner", "normalizer", "serialator", "okenizer", "okenener", "Tokenifier", "Tokenener", "tokenator", "Tokenator", "tizer", "tokener", " tokenger", "okenizers", " tokener", "tokenzer", "tokenressor", "okenger", "tokenener"], "stream": ["length", "history", "path", "Stream", "io", "window", "iterator", "inner", "ream", "sync", "console", "phrase", "test", "data", "buffer", "body", "context", "source", "read", "down", "resource", "v", "output", "w", "sample", "input", "impl", "pipe", "form", "pool", "zip", "file", "stack", "row", "log", "channel", "draw", "message"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint n = sc.nextInt();\\n\t\tint m = sc.nextInt();\\n\\n\t\tArrayList<Integer> array = new ArrayList<Integer>();\\n\t\tInteger sum = 0;\\n\t\tint x = 0;\\n\t\t\\n\t\twhile(sc.hasNext()) {\\n\t\t\tInteger a = sc.nextInt();\\n\t\t\tsum += a;\\n\t\t\tarray.add(a);\\n\t\t}\\n\\n\t\tif(sum > n) {\\n\t\t\tSystem.out.println(-1);\\n\t\t} else {\\n\t\t\tSystem.out.println(n - sum);\\n\t\t}\\n\\n\t\tsc.close();\\n\\n\t}\\n\\n}", "target": "108", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "syn", "cu", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "sub", "uc", "mom", "anc", "fc", "sec", "sp", "cont", "c", "cc", "qu", "esc", "isc", "spec", "cl", "pl", "lc", "irc", "arc", "ctl", "ctrl", "desc", "cons", "mc", "nl", "inc", "scl", "cr", "capt", "ck", "ch", "system", "ss", "so", "sci", "conv", "cle", "cs", "ec", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "nc", "mm", "all", "mn", "out", "k", "i", "count", "na", "o", "nan", "on", "len", "c", "an", "nn", "h", "v", "en", "s", "N", "j", "l", "nu", "nl", "np", "cn", "p", "sn", "b", "ns", "nt", "number", "num", "z", "d", "ne", "g"], "m": ["sm", "nm", "f", "t", "mm", "max", "M", "k", "i", "ms", "r", "dm", "h", "im", "v", "w", "j", "l", "mem", "mx", "p", "tm", "b", "cm", "um", "num", "z", "d"], "array": ["archive", "sequence", "length", "ar", "ray", "mass", "instance", "angular", "range", "collection", "window", "our", "all", "Array", "max", "sh", "now", "buffer", "image", "object", "index", "arr", "app", "random", "hash", "table", "av", "amount", "system", "search", "audio", "angle", "alpha", "number", "row", "list", "library", "message"], "sum": ["sort", "length", "mix", "zero", "square", "mass", "si", "t", "sim", "us", "scale", "mm", "fac", "match", "all", "max", "count", "out", "ma", " summed", "add", "na", "ms", "size", "must", "mess", "weight", "cum", "tail", "index", "med", "v", "cal", "min", "average", "summary", "hash", "sam", "Sum", "mod", "su", "mem", "amount", "system", "mean", "total", "result", "um", "number", "num", "sa", "set", "ne"], "x": ["fx", "px", "ctx", "ax", "t", "xx", "xt", "xi", "xa", "dx", "ox", "key", "index", "y", "xc", "ty", "ix", "w", "set", "rx", "mx", "xy", "ex", "tx", "X", " index", "z", "xs"], "a": ["aux", "aa", "f", "instance", "u", "area", "va", "A", "ka", "ref", "au", "sha", "i", "na", "pa", "oa", "ao", "ba", "c", "am", "an", "ce", "v", "ea", "ga", "ada", "ia", "sta", "ae", "aaa", "ya", "e", "apa", "p", "b", "le", "ca", "element", "as", "la", "alpha", "sa", "act", "ma", "el", "ac"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String []args){\\n        Scanner in = new Scanner(System.in);\\n\\n        long a = in.nextLong();\\n        long b = in.nextLong();\\n        long c = in.nextLong();\\n\\n\\n        if(a==b && b==c)\\n        {\\n            System.out.println(\"No\");\\n        }\\n        else{\\n            if(a==b || b==c || a==c)\\n            {\\n                System.out.println(\"Yes\");\\n            }\\n            else\\n            {\\n                System.out.println(\"No\");\\n            }\\n        }\\n\\n    }\\n\\n}\\n", "target": "117", "substitutes": {"in": ["din", "io", "serv", "IN", "at", "inn", "inner", "raw", "mm", "bin", "all", "ma", "is", "out", "ind", "i", "ins", "sum", "o", " IN", " out", "add", "std", "r", "on", "err", "check", "n", "thin", "isin", "init", "conf", "en", "info", "con", " din", "gin", "l", "doc", "cin", "In", "inc", "it", "world", "input", "stream", "file", "ini", "null", "as", "user", "inf", "end", "vin", "reader", "log", "m", "line", "get", "scan"], "a": ["ar", "aa", "f", "era", "aq", "al", "at", "t", "ai", "area", "va", "A", "da", "au", "AA", "i", "na", "ab", "o", "oa", "ade", "ach", "ao", "ba", "an", "am", "h", "n", "app", "s", "m", "ea", "ga", "ia", "l", "isa", "ta", "admin", "ae", "aj", "aaa", "aff", "e", "p", "aka", "ca", "alpha", "la", "as", "sa", "act", "ma", "ama", "el", "ac"], "b": ["mb", "bp", "nb", "f", "back", "bb", "t", "u", "bc", "bf", "i", "ab", "o", "B", "r", "fb", "g", "n", "ba", "wb", "h", "eb", "ib", "y", "v", "amb", "bs", "ob", "bo", "cb", "bt", "j", "l", "rb", "gb", "br", "e", "db", "be", "bi", "z", "bu", "sb"], "c": ["ci", "pc", "f", "ct", "C", "cu", "t", "u", "rc", "bc", "gc", "i", "o", "fc", "unc", "r", "ce", "n", "cc", "h", "v", "ec", "con", "q", "lc", "l", "co", "mc", "e", "cr", "ch", "p", "etc", "cm", "cf", "dc", "cp", "cs", "z", "d", "m", "tc", "sc", "g", "ac"]}}
{"code": "import java.util.*;\\n \\nclass Main{\\n  public static void main(String[] args){\\n    Scanner scan = new Scanner(System.in);\\n    long n = scan.nextLong();\\n    long c1[] = new long[10000];\\n    long c2[] = new long[10000];\\n    long a=Long.MAX_VALUE;\\n    int g = 0;\\n    \\n    for(long i=1;i<(long)Math.sqrt(n)+1;i++){\\n    \tif(n%i==0){\\n        \tc1[g]=i;\\n          \tc2[g]=n/i;\\n          \tg++;\\n        }\\n    }\\n    \\n    for(int j=0;j<g;j++){\\n      a = Math.min(a,c1[j]+c2[j]-2);\\n    }\\n    System.out.println(a);\\n  }\\n}\\n", "target": "157", "substitutes": {"scan": ["sm", "report", "connect", "sql", "sys", "get", " scanner", "san", "Scan", "sv", "se", "scale", "ann", "sync", "reach", "k", "out", "gate", "stat", "na", "find", "skip", "save", "parse", "r", "check", "c", "an", "read", "nn", "v", "scroll", "query", "ner", "store", "ch", "can", "system", " Scan", "run", "search", "seek", "nav", "in", "begin", "m", "sc"], "n": ["nm", "nb", "t", "nc", "net", "ll", "mn", "nan", "na", "names", "x", "ng", "len", "gain", "c", "nn", "h", "name", "nor", "v", "gn", "en", "dn", "s", "non", "N", "w", "l", "nu", "np", "nl", "cn", "p", "sn", "ns", "total", "nt", "nw", "ni", "number", "num", "nr", "ln", "m", "ne"], "c1": ["c0", " c01", "c10", "cu0", "cu5", "C01", "c5", "c01", "C0", "rc1", "c3", "rc3", "C1", "C3", " c0", "lc01", "rc10", " c3", "lc1", "lc3", " c10", "cu1", "lc5", "rc5", " c5", "lc0", "rc0", "cu10"], "c2": ["l5", "ec3", "c4", "ec4", "C4", "arcTwo", "ec02", "ctwo", "C2", "arctwo", "n4", " c02", "cTwo", " c8", "abc2", "c5", "n14", "abcTwo", "l4", "c8", " cTwo", " c14", "c3", "n2", "arc8", "C3", "c02", " c4", " c3", " ctwo", "abctwo", "l2", "C02", "abc8", "n5", " c5", "c14", "ec2", "arc2", "l14"], "a": ["ar", "aa", "f", "t", "at", "wa", "all", "A", "fa", "ava", "au", "out", "na", "o", "x", "pa", "oa", "ab", "r", "ao", "an", "c", "am", "y", "v", "s", "m", "ea", "w", "ga", "ia", "l", "sta", "ta", "aj", "ae", "aaa", "aff", "e", "apa", "p", "qa", "another", "b", "ca", "ata", "as", "la", "sa", "z", "d", "ma", "ac"], "g": ["go", "sg", "tg", "eg", "f", "ug", "ig", "erg", "gp", "bg", "gc", "k", "yg", "global", "gr", "msg", "mg", "gpu", "c", "ge", "h", "gi", "gn", "pg", "gg", "v", "q", "gm", "ga", "gravity", "l", "ag", "greg", "gen", "G", "gs", "gh", "grid", "gb", "it", "p", "gt", "b", "gu", "di", "group", "gd", "z", "m", "og", "gl"], "i": ["zi", "ie", "hi", "ci", "I", "\u0438", "io", "si", "ic", "sim", "u", "ai", "xi", "ei", "me", "is", "ind", "ori", "o", "x", "mi", "cli", "mu", "index", "gi", "im", "y", "v", "ix", "info", "ui", "ri", "ki", "ia", "l", "ik", "qi", "pi", "ji", "ij", "it", "meg", "ii", "di", "ini", "ni", "li", "fi", "in", "ti", "bi", "m", "iu", "phi", "ip"], "j": ["note", "ie", "jac", "bj", "ax", "Ja", "jl", "js", "obj", "kh", "kj", "k", "oj", "job", "msg", "je", "uj", "ijk", "ev", "key", "by", "jc", "y", "im", "kid", "q", "ix", "dj", "json", "bo", "pr", "bot", "next", "gov", "aj", "jp", "jo", "jump", "ji", "ij", "J", "it", "br", "jit", "b", "jj", "ja", "other", "jet", "z", "ort", "og", "jas", "fr"]}}
{"code": "import java.util.Scanner;\\npublic class Main{\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        int sum = 0;\\n        if (a + b >= 0 && b >= 0) {\\n            for (int i = 0; i < a - 1; i++) {\\n                sum += b + 1 + i;\\n            }\\n        }\\n        if (a + b > 0 && b < 0) {\\n            for (int i = 0; i < a; i++) {\\n                sum += b + (i);\\n            }\\n        }\\n        if (a + b <= 0 && b < 0) {\\n            for (int i = 0; i < a - 1; i++) {\\n                sum += b + (i);\\n            }\\n        }\\n        System.out.println(sum);\\n    }\\n}", "target": "91", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "out", "sch", "gc", "sq", "sub", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "ko", "lc", "ctl", "mc", "inc", "scl", "cr", "ch", "system", "ck", "ss", "conv", "cs", "tc", "Sc", "sb", "scan"], "a": ["go", "span", "ar", "aa", "f", "era", "ax", "at", "t", "window", "ai", "area", "va", "all", "A", "da", "au", "na", "x", "o", "ab", "oa", "ach", "r", "ao", "act", "ba", "an", "am", "c", "n", "ap", "app", "m", "ea", "w", "ga", "ia", "j", "sta", "isa", "ta", "admin", "ae", "aj", "aaa", "e", "p", "aka", "total", "ca", "as", "la", "alpha", "to", "any", "sa", "z", "eas", "ma", "ama", "ac"], "b": ["mb", "bp", "nb", "f", "back", "pb", "bb", "t", "u", "bc", "bis", "bf", "bg", "ub", "ab", "B", "r", "sb", "body", "fb", "err", "c", "ba", "n", "wb", "h", "eb", "ib", "beta", "lb", "y", "v", "by", "bs", "ob", "lib", "zb", "cb", "j", "l", "bot", "rb", "it", "gb", "br", "e", "p", "big", "bar", "db", "be", "reb", "erb", "bi", "d", "m", "g"], "sum": ["report", "mix", "zero", " SUM", "cu", "si", "sim", "scale", "dim", "fac", "match", "max", "sup", "count", "out", "ash", "commit", " summed", "add", "dump", "stat", "save", "union", "size", "must", "dev", "score", "cum", "med", "tail", "index", "cal", "tu", "average", "cat", "summary", "hash", "sam", "Sum", "process", "mod", "su", "mem", "acc", "vol", "pool", "frac", "mean", "total", "result", "hum", "um", "stack", "alpha", "sa", "num", "gam", "temp", "dot", "cache", "comment", "rss", "ma", "ss", "test"], "i": ["zi", "iter", "ie", "hi", "ci", "I", "ami", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "ei", "xi", "us", "ies", "me", "umi", "dr", "ski", "is", "ind", "ori", "point", "mi", "err", "cli", "iy", "init", "im", "gi", "y", "ix", "MI", "ui", "v", "q", "ri", "ki", "j", "uri", "ity", "qi", "pi", "multi", "ji", "ij", "it", "ii", "ini", "di", "ni", "id", "ios", "li", "fi", "lie", "ti", "bi", "ims", "fire", "et", "iu", "phi", "ip", "ion"]}}
{"code": "import java.util.*;\\nimport java.util.stream.Collectors;\\n\\nclass Main {\\n    public static void main(String args[]) {\\n        Scanner sc = new Scanner(System.in);\\n      \\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        int c = sc.nextInt();\\n        int d = sc.nextInt();\\n        int result = 0;\\n\\n        for (int i = a; i <= b; i++) {\\n            for (int j = c; j <= d; j++) {\\n                if (i == j) {\\n                    result++;\\n                    break;\\n                }\\n            }\\n        }\\n\\n        if (result > 0) {\\n            result--;\\n        }\\n\\n        System.out.println(result);\\n    }\\n}", "target": "47", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "out", "sch", "sq", "gc", "uc", "anc", "fc", "sec", "sp", "cc", "isc", "esc", "cl", "ko", "lc", "ctl", "mc", "inc", "acc", "scl", "cr", " scr", "ch", "system", "capt", "ck", "cgi", "ss", "conv", "dc", "cle", "cs", "tc", "Sc", "scan"], "a": ["art", "ar", "aa", "at", "ai", "va", "da", "au", "o", "ab", "oa", "r", "ao", "ba", "an", "am", "ap", "ea", "ada", "ia", "sta", "ta", "admin", "ae", "aaa", "e", "ca", "alpha", "la", "as", "att", "sa", "act", "ma", "ac"], "b": ["mb", "beck", "nb", "back", "bb", "bc", "bis", "bf", "bl", "ab", "ble", "B", "BB", "fb", "body", "ba", "blue", "eb", "lb", "ib", "by", "y", "beta", "bs", "ob", "cb", "rb", "gb", "br", "bar", "db", "be", "bi", "sb"], "c": ["or", "ci", "C", "ct", "cu", "ctx", "com", "rc", "bc", "cv", "fc", "unc", "cd", "ce", "cc", "cut", "con", "lc", "cb", "co", "e", "cr", "cn", "ch", "can", "cm", "ca", "cf", "cp", "dc", "cs", "ec", "tc", "ac"], "d": ["done", "def", "dd", "de", "div", "dra", "ad", "sd", "dp", "da", "D", "fd", "pd", "cd", "dev", "df", "dm", "del", "des", "ded", "dec", "red", "bd", "td", "di", "nd", "dt", "ds", "dir", "db", "dc"], "result": ["division", "report", "menu", "sequence", "length", "success", "error", "zero", "status", "date", "RESULTS", "direction", "complete", "integer", "match", "operation", "jury", "count", "debug", "message", "score", "r", "different", "successful", "progress", "duration", "degree", "database", "relation", "currency", "function", "goal", "results", "valid", "json", "expected", "power", "description", "term", "processor", "process", "make", "finder", "diff", "res", "feature", "performance", "continue", "search", "command", "total", "other", "ret", "component", "reason", "Result", "number", "comment", "draw", "test"], "i": ["zi", "iq", "ie", "hi", "ci", "I", "ar", "ami", "inter", "si", "ic", "u", "iri", "ai", "xi", "ei", "ims", "is", "ind", "ori", "x", "mi", "ir", "v", "y", "im", "ix", "ui", "ki", "ia", "uri", "qi", "pi", "ji", "ij", "it", "ii", "ini", "di", "li", "ti", "z", "iu", "phi", "ip"], "j": ["cell", "jac", "f", "bj", "jl", "js", "obj", "kj", "k", "oj", "job", "ne", "on", "err", "uj", "jc", "pt", "y", "kid", "v", "q", "ix", "dj", "json", "bo", "pr", "aj", "jp", "jo", "ji", "ij", "ph", "J", "br", "ot", "it", "p", "jj", "ja", "other", "rel", "str", "z", "m", "gov", "jas", "el", "g", "fr"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main\\n{\\n  public static void main(String[] args)\\n  {\\n\t  int l,w;\\n\t  boolean t=true;\\n\t  Scanner in=new Scanner(System.in);\\n\t  \\n\t  while(t)\\n      { l=in.nextInt();\\n\t    w=in.nextInt();\\n\t\t\\n\t\tif(l==0 && w==0)\\n\t\t{   \\n\t        \\n\t\t\tbreak;\\n\t\t}\\n\t\t\\n        for(int i=0;i<l;i++)\\n        {\\n\t\t    for(int j=0;j<w;j++)\\n\t\t    {\\n\t\t\t    System.out.print(\"#\");\\n\t\t    }\\n\t\t    System.out.println(\"\");\\n\t    }\\n\t\tSystem.out.println(\"\");\\n\t\t\\n\t  }\t\t\\n\t  \\n\\n    \\n  }\\n\\n}", "target": "87", "substitutes": {"l": ["length", "ql", "sl", "L", "ul", "lu", "al", "ln", "lf", "ll", "o", "len", "ml", "lin", "h", "lo", "cl", "q", "shell", "pl", "lc", "lit", "dl", "hl", "kl", "lp", "nl", "lt", "ly", "it", "il", "tl", "ol", "le", "ls", "la", "li", "list", "d", "el", "g", "ell", "loc"], "w": ["aw", "sw", "word", "wd", "what", "weights", "wk", "wm", "window", "wal", "wa", "wp", "ln", "max", "hw", "wt", "k", "ew", "wb", "n", "weight", "h", "W", "wi", "q", "where", "widget", "ws", "kw", "wh", "we", "wx", "fw", "wcs", "win", "nw", "words", "width", "wl", "wall", "rw", "wait", "z", "d", "g", "wr"], "in": ["din", "io", "serv", "IN", "al", "inn", "inner", "from", "raw", "bin", "all", "is", "out", "ind", "ins", "sum", "o", "add", "std", "r", "rin", "err", "check", "n", "thin", "isin", "by", "init", "conf", "en", "info", "con", " din", "doc", "gin", "cin", "In", "sin", "inc", "world", "input", "stream", "ini", "null", "as", "user", "inf", "end", "reader", "log", "ma", "line", "scan"], "t": ["te", "f", "at", "tick", "all", "wt", "k", "test", "o", "r", "cont", "c", "n", "tr", "vt", "h", " T", "y", "v", "q", "tc", "true", "a", "ta", "title", "it", "e", "ot", "p", "chain", "st", "rt", "active", "T", "trace", "set", "d", "m", "tf", "tree", "g", "ts"], "i": ["zi", "iq", "iter", "ie", "hi", "ci", "I", "ami", "inter", "si", "ic", "sim", "ai", "xi", "inner", "is", "ind", "ori", "x", "mi", "im", "y", "v", "init", "ix", "ui", "ri", "ki", "a", "ity", "qi", "pi", "multi", "ij", "it", "ii", "ini", "di", "inx", "yi", "ni", "ret", "li", "bi", "ims", "m", "iu", "phi", "ip", "asi"], "j": ["bj", "jl", "js", "obj", "k", "kj", "out", "oj", "job", "err", "uj", "ge", "jc", "pt", "q", "dj", "json", "pr", "aj", "jp", "jo", "jump", "ji", "ij", "J", "ph", "br", "it", "b", "jj", "other", "nr", "bi", "z", "str", "m", "ne", "g", "ja"]}}
{"code": "import java.util.*;\\npublic class Main {\\n\tpublic static void main(String arg[]) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tString s1 = sc.next();\\n\t\tString s2 = sc.next();\\n \\n\t\ts2 = s2.substring(0, s2.length()-1);\\n\t\tif(s1.equals(s2)) {\\n\t\t\tSystem.out.println(\"Yes\");\\n\t\t}\\n\t\telse {\\n\t\t\tSystem.out.println(\"No\");\\n\t\t}\\n\t}\\n}", "target": "137", "substitutes": {"arg": ["flag", " argument", " test", " param", "foo", " Argument", " rest", " cmd", "name", "v", "argument", " arguments", "gs", "Arg", "cmd", " ar", "command", " Arg", " line", "Args", " command", "test", " flag"], "sc": ["SC", "sw", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "uc", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "ko", "lc", "desc", "dec", "ctrl", "cons", "mc", "inc", "scl", "cr", "ch", "sci", "conv", "cle", "cs", "ec", "tc", "Sc", "scan"], "s1": ["s0", "strfirst", "ps01", "gs1", "ps1", " sfirst", "S1", "gs0", "ps2", "sfirst", "psfirst", "str0", "str01", "S2", "Sfirst", " s0", "gs2", "str2", "S01", "s01", "str1", "gsfirst"], "s2": ["sqltwo", "bis2", "s0", "sql1", " s3", "string02", "e3", "e1", " sTwo", "S64", "s22", "sol64", "S02", "string1", "stwo", "sol256", "ss02", "e2", "s02", "S1", "gs0", "S256", "Ssecond", "lssecond", "gsTwo", "S2", "Stwo", "etwo", "bisTwo", "bis0", "S3", " ssecond", "s256", "bis22", "ss64", "ss256", " s0", "ss2", "sTwo", "sol2", "gs22", "lstwo", "gs2", "string3", "string2", " s22", "str3", " stwo", "sql2", "ls3", "s3", "str2", "s64", "sql3", "ssecond", "str1", "str02", "ls2", "sol02"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n\\n        Scanner sc = new Scanner(System.in);\\n\\n        for(int i = 0; i < 300; i++) {\\n          String line = sc.nextLine();\\n          String[] l = line.split(\" \");\\n          int H = Integer.parseInt(l[0]);\\n          int W = Integer.parseInt(l[1]);\\n          if(H == 0 && W == 0) {\\n            break;\\n          }\\n\\n          for(int h = 0; h < H; h++) {\\n            for(int w = 0; w < W; w++) {\\n              System.out.print(\"#\");\\n            }\\n            System.out.println();\\n          }\\n          System.out.println();\\n        }\\n    }\\n}", "target": "87", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "sub", "anc", "sec", "sp", "c", "cc", "esc", "isc", "ser", "cl", "lc", "desc", "dec", "screen", "mc", "nl", "scl", "cr", "capt", "ch", "system", "sel", "ss", "cle", "cs", "tc", "Sc", "sb", "scan"], "i": ["zi", "iter", "I", "ci", "status", "sql", "inter", "si", "sim", "ai", "xi", "me", "us", "is", "ind", "x", "mi", "n", "cli", "index", "im", "init", "ix", "q", "ui", "ki", "j", "batch", "pi", "multi", "it", "ii", "p", "chain", "ex", "di", "ini", "id", "li", "ti", "bi", "m", "iu", "phi", "ip"], "line": ["liner", "word", "LINE", "ine", "lines", "sl", "pe", "inline", "Line", "ste", "link", "lin", "source", "page", "q", "shell", "lc", "header", "string", "frame", "nl", "text", "sample", "chain", "le", "file", "detail", "block", "row", "rl", "in", "str", "comment", "ln", "m", "point", "cell", "message", "se"], "l": ["sql", "ql", "L", "t", "sl", "lv", "split", "jl", "ll", "sol", "len", "ml", "lin", "league", "v", "s", "cl", "shell", "pl", "lc", "lit", "j", "dl", "kl", "lp", "nl", "lt", "ol", "b", "le", "ls", "la", "url", "li", "fl", "list", "z", "ln", "el", "ell"], "H": ["HO", "High", "RH", "His", "He", "L", "HH", "HI", "HE", "Y", "M", "Host", "MH", "HA", "GH", "IM", "P", "Th", "HR", "OH", "HTML", "HK", "HL", "FH", "HB", "AH", "Height", "DH", "WH", "CH", "TH", "HS", "NH", "Eh", "IL", "X", "HT", "HC", "HQ"], "W": ["Width", "WAR", "WT", "AL", "VW", "L", "WE", "DW", "OW", "Wh", "EW", "Win", "M", "B", "WP", "F", "P", "V", "WS", "IF", "CW", "SW", "WM", "WA", "OU", "TW", "NB", "N", "MW", "Watch", "NW", "IV", "WH", "WR", "Widget", "T", "BW", "WD", "WW", "FW", "We", "WC"], "h": ["go", "hi", "history", "hs", "hh", "hex", "change", "th", "window", "exp", "bh", "kh", "sh", "height", "k", "ha", "ach", "err", "head", "html", "q", "ht", "rh", "j", "high", "hl", "he", "oh", "ph", "ih", "it", "hd", "hm", "ex", "http", "hr", "z", "ho", "phi", "g", "zh", "loc"], "w": ["writer", "way", "aw", "sw", "word", "wd", "wk", "window", "iw", "wal", "wa", "wp", "ww", "wt", "ew", "wb", "var", "pt", "v", "tw", "wi", "q", "widget", "term", "ws", "kw", "wh", "we", "wx", "fw", "wid", "p", "win", "ex", "ow", "nw", "width", "wall", "rw", "z", "el", "wr"]}}
{"code": "import java.io.*;\\n \\nclass Main{\\n    public static void main (String[ ] args) throws Exception{\\n        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\\n        String str = br.readLine();\\n\\n        int a = Integer.parseInt(str);\\n        \\n        System.out.println((a/3600) + \":\" + (a%3600/60) + \":\" +(a%3600%60));\\n    }\\n}", "target": "84", "substitutes": {"br": ["bp", "div", "bn", "bm", "bc", "bh", "bridge", "dr", "bro", "bl", "bf", "out", "ctr", "gr", "sp", "tr", "shr", "bs", "bsp", "lr", "bt", "mr", "Br", "sr", "pr", "rb", "bd", "cr", "ch", "kr", "BR", "be", "browser", "hr", "fr", "buf", "bi", "ber", "wr", "vr"], "str": ["sl", "t", "div", "obj", "exp", "dr", "out", "i", "data", "stri", "gr", "r", "sp", "n", "tr", "arr", "spec", "s", "Str", "STR", "pr", "dec", "next", "string", "char", "enc", "res", "vol", "text", "print", "cr", "ch", "p", "form", "st", "b", "txt", "dat", "in", "fr", "m", "g"], "a": ["ami", "aa", "era", "angular", "t", "area", "wa", "xa", "va", "A", "fa", "au", "sha", "na", "pa", "o", "oa", "asha", "ao", "ba", "n", "an", "am", "h", "ea", "aos", "aura", "ga", "eas", "ada", "sta", "ta", "aj", "ae", "ya", "apa", "b", "aka", "total", "ca", "ata", "alpha", "as", "la", "sa", "d", "ma", "ana", "ac"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String args[]){\\n        Scanner stdIn = new Scanner(System.in);\\n        int x[] = new int[5];\\n        for(int i = 0; i < 5; i++){\\n            x[i] = stdIn.nextInt();\\n        }\\n        \\n        //int a = stdIn.nextInt();\\n        //int b = stdIn.nextInt();\\n        //int n = stdIn.nextInt();\\n        int k = stdIn.nextInt();\\n        \\n        if(x[4] - x[0] <= k){\\n            System.out.println(\"Yay!\");\\n        }else{\\n            System.out.println(\":(\");\\n        }\\n        \\n        //System.out.println();\\n        //System.out.print();\\n    }\\n}\\n", "target": "66", "substitutes": {"stdIn": ["stdIng", "stOut", "standardIt", " stdIt", "STDIns", "sysOut", " stdIng", "standardIns", "sysIn", "sysIns", " stdOut", "stIn", "stIt", "STDIn", " stdIns", "standardIn", "stdIns", "STDOut", "stIns", "standardOut", "stdOut", "STDIng", "sysIng", "stdIt"], "x": ["fill", "px", "xp", "f", "ct", "xd", "ctx", "t", "xx", "xt", "xi", "xf", "xa", "dx", "ox", "c", "n", "h", "y", "xc", "v", "ix", "w", "xe", "wx", "ey", "rx", "mx", "e", "p", "xy", "xes", "ex", "tx", "X", "z", "ux", "xs"], "i": ["iq", "iter", "I", "sequence", "ci", "hi", "ie", "io", "si", "ic", "t", "u", "sim", "ai", "us", "me", "ei", "xi", "is", "ori", "o", "ms", "client", "mi", "n", "cli", "mu", "init", "im", "v", "gi", "ix", "q", "ui", "ri", "ki", "j", "batch", "uri", "qi", "pi", "multi", "ji", "ij", "it", "ii", "chain", "gu", "ini", "uu", "di", "id", "li", "in", "ti", "bi", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\npublic class Main{\\n\tpublic static void main(String[]args)throws Exception{\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString str;\\n\t\tint n=0;\\n\t\t\\n\t\twhile((str=br.readLine())!=null){\\n\t\t\tn=Integer.parseInt(str);\\n\t\t\tfor(int i=1;i<=n;i++){\\n\t\t\t\tint x=i;\\n\t\t\t\tif(x%3==0){\\n\t\t\t\t\tSystem.out.print(\" \"+i);\\n\t\t\t\t\tcontinue;\\n\t\t\t\t}\\n\t\t\t\tdo{\\n\t\t\t\t\tif(x%10==3){\\n\t\t\t\t\t\tSystem.out.print(\" \"+i);\\n\t\t\t\t\t\tbreak;\\n\t\t\t\t\t}\\n\t\t\t\t\tx/=10;\\n\t\t\t\t}while(x!=0);\\n\t\t\t}\\n\t\t\tSystem.out.print(\"\\n\");\\n\t\t\tbreak;\\n\t\t}\\n\t\tbr.close();\\n\t}\\n}", "target": "154", "substitutes": {"br": ["repl", "bp", "bn", "bm", "bc", "bh", "bridge", "dr", "bro", "bl", "gr", "r", "tr", "eb", "shr", "bs", "bsp", "yr", "lr", "bt", "mr", "Br", "pr", "rb", "cr", "bd", "ch", "kr", "ck", "b", "BR", "db", "browser", "rel", "hr", "fr", "buf", "ber", "wr", "vr"], "str": ["ent", "t", "div", "obj", "raw", "dr", "out", "bl", "gr", "z", "r", "msg", "sp", "cont", "c", "tr", "cur", "arr", "name", "spec", "v", "s", "html", "cl", "Str", "del", "STR", "j", "l", "pr", "desc", "dec", "string", "char", "vol", "res", "text", "print", "cr", "ch", "p", "form", "st", "b", "txt", "pre", "dat", "in", "fr", "list", "m"], "n": ["nb", "t", "ln", "nc", "net", "ll", "max", "k", "nan", "na", "no", "o", "ng", "size", "len", "an", "c", "nn", "name", "y", "v", "min", "en", "non", "N", "j", "l", "nu", " N", "nl", "np", "cn", "p", "sn", "ns", "ni", "nt", "nw", "num", "un", "z", "d", "m", "ne"], "i": ["zi", "I", "ie", "ci", "hi", "f", "si", "io", "ic", "sim", "u", "iri", "ai", "xi", "ei", "oi", "integer", "is", "ish", "ind", "k", "ori", "o", "client", "point", "mi", "index", "y", "im", "init", "v", "ix", "s", "ui", "gi", "ri", "j", "l", "uri", "qi", "pi", "multi", "ji", "ij", "it", "ii", "p", "ini", "di", "yi", "id", "to", "li", "number", "in", "ti", "bi", "m", "iu", "phi", "ip", "asi"], "x": ["fx", "px", "mix", "status", "xp", "hex", "xd", "ctx", "ax", "ic", "xx", "t", "xt", " xx", "xi", "lex", "exp", "xf", "xa", "max", "dx", "k", "ox", "key", "index", "php", "v", "xc", "y", "ix", "w", "xe", "j", "l", "wx", "rx", "mx", "p", "xy", "tx", "inx", "X", "ex", "any", "pan", "z", "act", "mod", "ux", "test"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int[] a = new int[n];\\n        for (int i = 0; i < n; i++) a[i] = sc.nextInt();\\n\\n        long result = 0;\\n        int max = a[0];\\n        for(int i = 0; i < n; i++) {\\n            if (max <= a[i]) max = a[i];\\n            result += max - a[i];\\n        }\\n        System.out.println(result);\\n    }\\n}\\n", "target": "202", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "irc", "desc", "ctl", "mc", "nl", "scl", "cr", "sel", "ch", "ck", "capt", "ss", "sci", "cle", "cs", "tc", "Sc", "scan"], "n": ["nm", "nb", "ct", "t", "network", "nc", "all", "net", "mn", "k", "nan", "na", "x", "o", "no", "ng", "size", "on", "and", "len", "c", "nn", "fn", "nor", "name", "v", "en", "N", "j", "l", "nu", " N", "nl", "np", "after", "cn", "p", "sn", "ns", "nt", "number", "num", "un", "z", "ln", "m", "ne", "g"], "a": ["aux", "aw", "auto", "aa", "ack", "f", "era", "at", "wa", "area", "va", "all", "A", "xa", "fa", "da", "au", "abs", "na", "ab", "o", "oa", "ao", "ba", "am", "an", "c", "app", "s", "m", "ea", "aos", "ga", "ia", "sta", "l", "ta", "ae", "aaa", "apa", "p", "aka", "b", "le", "ca", "as", "alpha", "la", "array", "sa", "eas", "ma", "ac"], "i": ["status", "io", "us", "o", "iu", "ir", "y", "ix", "pi", "ii", "id", "ti", "bi", "fire", "phi", "g", "ie", "hi", "ci", "xi", "ei", "ger", "vi", "ori", "client", "progress", "cli", "init", "ui", "j", "uri", "qi", "multi", "chain", "ini", "list", "m", "iter", "span", "si", "ic", "sim", "oi", "is", "ind", "mi", "err", "gi", "ji", "it", "di", "in", "ims", "zi", "I", "\u0438", "u", "ai", "me", "ies", "iy", "im", "v", "info", "q", "ri", "ki", "batch", "ity", "ij", "PI", "li", " I", "point", "ip"], "result": ["error", "sequence", "success", "zero", "status", "date", "ULT", "RESULTS", "complete", "integer", "match", "ful", "sum", "message", "score", "r", "progress", "duration", "currency", "value", "goal", "results", "trade", "correct", "term", "power", "true", "ult", "valid", "process", "mask", "recent", "res", "neutral", "feature", "command", "other", "total", "search", "ret", "Result", "number", "mult", "comment", "test"], "max": ["MAX", "best", "huge", "ax", "t", "view", "window", "range", "scale", "exp", "all", "Max", "right", "k", "last", "ma", "now", "sum", "out", "x", "height", "ms", "size", "full", "maximum", "h", "med", "prime", "v", "min", "head", "master", "box", "grow", "mod", "rest", "recent", "np", "res", "mx", "gt", "total", "mad", "top", "end", "temp", "m", "big"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tint seven = 0;\\n\t\tint five = 0;\\n\t\tint[] num = new int[3];\\n\t\tScanner scanner = new Scanner(System.in);\\n\t\tfor (int i = 0; i < num.length; i++) {\\n\\n\t\t\tnum[i] = scanner.nextInt();\\n\t\t}\\n\t\tfor (int i = 0; i < 3; i++) {\\n\t\t\tif (num[i] == 5) {\\n\t\t\t\tfive=five+1;\\n\t\t\t}\\n\t\t\tif (num[i] == 7) {\\n\t\t\t\tseven=seven+1;\\n\t\t\t}\\n\\n\t\t}\\n\\n\t\tif (five == 2 && seven == 1) {\\n\t\t\tSystem.out.println(\"YES\");\\n\t\t} else {\\n\t\t\tSystem.out.println(\"NO\");\\n\t\t}\\n\t}\\n}", "target": "16", "substitutes": {"seven": ["rose", "mill", "rown", "iron", "hello", "male", "forge", "three", "universal", "ul", "weekly", "human", "ward", "four", "inches", "ipper", "manager", "approximately", "rue", "rus", "two", "imil", "meal", "higher", "water", "one", "necessary", "six", "Seven", "each", "safe", "smith", "nine", "spring", "ten", "sharp", "series", "mother", "fish", "minimum", "meet", "healthy", "um", "eight", "username", "nil", "row", "undred", "conservative", "ven"], "five": ["mill", "length", "hello", "zero", "little", "Five", "three", "tight", "lex", "floor", "integer", "fifth", "tie", "license", "leigh", "four", "single", "minus", "inches", "few", "money", "silver", "lo", "two", "prime", "teen", "low", "where", "one", "shit", "fif", "six", "power", "nine", "ffe", "rice", "ten", "yellow", "fish", "system", "le", "healthy", "fruit", "eight", "knife", "number", "pocket", "lift", "pie", "rot", "sharp", "life"], "num": ["go", "uf", "om", "nm", "zero", "mon", "mix", "nb", "hex", "prim", "cu", "tim", "img", "dim", "net", "Num", "mn", "sum", "na", "save", "tmp", "col", "alph", "phy", "nam", "n", "mu", "index", "mat", "im", "NUM", "cal", "init", "tu", "con", "orig", "dec", "nu", "gen", "np", "multi", "mem", "enc", "oct", "form", "mont", "dat", "total", "nt", "um", "mun", "conv", "number", "news", "stab", "nom", "rub"], "scanner": ["Scanner", "Scaner", "scaner", "scanener", " scanter", "scer", "canter", "Scanener", " scanener", " scaner", "scner", "Scanter", "caner", "canener", "scter", "scener", "scanter", "canner"], "i": ["io", "us", "n", "y", "ix", "load", "pi", "ii", "gu", "id", "fi", "ti", "bi", "fire", "phi", "g", "ie", "hi", "ci", "sql", "xi", "ei", "used", "base", "ori", "client", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "print", "chain", "ex", "ini", "set", "iter", "si", "ic", "sim", "oi", "is", "ind", "x", "mi", "err", "name", "gi", "ji", "it", "di", "in", "zi", "I", "\u0438", "u", "ai", "me", "iy", "im", "v", "info", "q", "ri", "ki", "batch", "ity", "ij", "inx", "li", "iu", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n\tpublic static void main(String args[]){\\n\\n\t\t//????????\u00a8?\u00a8???????????????????\\n\t\tScanner sc = new Scanner(System.in);\\n\t\twhile(true){\\n\t\t\tint intH = sc.nextInt();\\n\t\t\tint intW = sc.nextInt();\\n\\n\t\t\t//??????H???W???0?????\u00a3???????????????????????????\\n\t\t\tif((intH == 0) && (intW == 0)){\\n\t\t\t\tbreak;\\n\t\t\t}\\n\\n\t\t\t//??????\\n\t\t\t//???????????????????????????\\n\t\t\tfor (int i = 0; i < intH; i++) {\\n\t\t\t\t//String????????\u00a3?\u00a8?????????????\\n\t\t\t\tString A = \"\";\\n\t\t\t\t//?\u00a8?????????????????????????\\n\t\t\t\tfor (int j = 0; j < intW; j++) {\\n\t\t\t\t\t//?????????????????\u00b6??\u00b0??\u00a7?\u00a8??????\u00b6??\u00b0?????\u00a3??????\\n\t\t\t\t\tif ((i % 2 == 0) && (j % 2 == 0)) {\\n\t\t\t\t\t\t//String??????A???????????\\??????\\n\t\t\t\t\t\tA += \"#\";\\n\t\t\t\t\t//???????????\u00b6??\u00b0??\u00a7?\u00a8?????\\???\u00b0?????\u00a3??????\\n\t\t\t\t\t}else if((i % 2 == 0) && (j % 2 == 1)){\\n\t\t\t\t\t\tA += \".\";\\n\\n\t\t\t\t\t\t//??????????\\???\u00b0??\u00a7?\u00a8??????\u00b6??\u00b0?????\u00a3??????\\n\t\t\t\t\t}else if((i % 2 == 1) && (j % 2 == 0)){\\n\t\t\t\t\t\tA += \".\";\\n\t\t\t\t\t\t//??????????\u00a8?????\\???\u00b0?????\u00a3??????\\n\t\t\t\t\t}else{\\n\t\t\t\t\t\tA += \"#\";\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t\t//?????????????????????\\n\t\t\t\tSystem.out.println(A);\\n\t\t\t}\\n\t\t\t//???????????????????????\u00a3????????????\\n\t\t\tSystem.out.println(\"\");\\n\t\t}\\n\t}\\n}", "target": "131", "substitutes": {}}
{"code": "import java.util.*;\\npublic class Main {\\n    public static void main(String args[]) {\\n        Scanner sc=new Scanner(System.in);\\n        int n=sc.nextInt();\\n        int h[]=new int[n+1];\\n        for(int i=1;i<=n;i++)\\n        h[i]=sc.nextInt();\\n\\n        int dp[]=new int[n+1];\\n        dp[1]=0;\\n        for(int i=2;i<=n;i++)\\n        {\\n            int ans1=1000000000,ans2=1000000000;\\n            ans1=dp[i-1]+Math.abs(h[i]-h[i-1]);\\n            if(i-2>=1)\\n            ans2=dp[i-2]+Math.abs(h[i]-h[i-2]);\\n\\n            dp[i]=Math.min(ans1,ans2);\\n        }\\n        System.out.println(dp[n]);\\n\\n        \\n    }\\n}", "target": "1", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "psc", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "anc", "sec", "sp", "Desc", "c", "cc", "esc", "isc", "cl", "lc", " Sc", "desc", "ctl", "mc", "scl", "cr", "sel", "ch", "system", "ck", "ss", "conv", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["nm", "nb", "t", "network", "ic", "ln", "nc", "all", "net", "ll", "mn", "count", "nan", "out", "na", "no", "o", "x", "ng", "size", "r", "on", "an", "c", "nn", "name", "nor", "v", "en", "m", "w", "N", "j", "l", "a", "nu", " N", "np", "nl", "pi", "cn", "p", "sn", "ns", "nt", "ni", "number", "num", "none", "in", "un", "d", "ne"], "h": ["eh", "go", "its", "hi", "history", "hs", "hh", "pp", "hex", "f", "th", "has", "exp", "bh", "kh", "hw", "sh", "ha", "r", "host", "y", "v", "ah", "s", "m", "ht", "rh", "j", "hl", "hash", "he", "oh", "hp", "ih", "gh", "ph", "it", "H", "hd", "p", "uh", "ch", "hm", "http", "hr", "hz", "ho", "help", "phi", "g", "handle", "loc"], "i": ["status", "io", "us", "o", "index", "y", "ix", "iii", "pi", "ii", "gu", "id", "ti", "bi", "phi", "g", "asi", "ie", "hi", "ci", "f", "xi", "ei", "client", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "print", "chain", "ini", "um", "list", "set", "m", "iter", "si", "ic", "sim", "oi", "exp", "is", "k", "ind", "x", "r", "mi", "err", "mu", "gi", "ji", "it", "p", "di", "to", "z", "go", "iq", "zi", "I", "ami", "\u0438", "u", "ai", "me", "c", "key", "im", "v", "info", "q", "ri", "ki", "batch", "this", "a", "ity", "ij", "li", "iu", "ip"], "dp": ["imp", "bps", "wd", "dd", "pb", "pp", "dep", "dq", "csv", "wp", "drop", "dim", "dr", "dk", "DP", "gp", "deb", "vp", "pa", "ps", "pd", "tp", "pm", "dial", "pkg", "df", "dm", "bsp", "dj", "dl", "dh", "lp", "jp", "hp", "pi", "adr", "p", "fp", "di", "dt", "ds", "db", "dc", "cp", "d", "tap"], "ans1": [" ans91", "an11", "ams91", "ann1", "antsone", "als91", "oss001", "oss1", " ans001", "ans001", "ants11", "an1", "ans91", "als1", "ams001", "ants01", "ans11", "ann11", "amps1", "xs1", "amps91", "ams30", "ans01", "ann01", "als01", " ans30", "xs001", "ans30", "ants1", "ams1", "oss30", "annone", "als001", "amps01", "ansone", "an01", "xs01", "anone", "xs91", "amps001", "oss91"], "ans2": ["ians3", "an2", "anTwo", "rasTwo", "asTwo", "ANSTwo", "ians4", "nstwo", "an4", "as2", "as22", "ans22", "ANS4", "ans4", "ans62", "ants62", "ras22", "ns62", "ansTwo", "iansTwo", "verstwo", "ras3", "ANS2", "vers1", "ras2", "ns1", "as3", "an3", "ians2", "ants1", "ns2", "ans3", "antstwo", "ants2", "anstwo", "vers2", "ANS3", "vers62", "an22"]}}
{"code": "import java.util.Scanner;\\n \\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scan = new Scanner(System.in);\\n        int a = scan.nextInt();\\n      \tint b = scan.nextInt();\\n      \\n      \tif (b >= a) {\\n          System.out.println(\"unsafe\");\\n        } else {\\n          System.out.println(\"safe\");\\n        }\\n \\n        scan.close();\\n    }\\n}", "target": "177", "substitutes": {"scan": ["connect", "access", "auto", "sys", "black", "syn", "pass", "san", "Scan", "sv", "se", "scale", "ann", "sync", "send", "reach", "gate", "out", "gc", "stat", "find", "sum", "save", "skip", "parse", "check", "an", "n", "read", "nn", "by", "scroll", "ner", "serial", "clean", "char", "gen", "sin", "store", "warn", "can", "system", "run", "search", "seek", "cgi", "util", "proc", "row", "in", "see", "set", "query", "sc", "get"], "a": ["ar", "aa", "u", "ai", "area", "va", "A", "au", "i", "ab", "x", "oa", "ach", "ao", "an", "ba", "c", "index", "s", "m", "ea", "lower", "ga", "ia", "sta", "l", "ta", "ae", "aj", "aaa", "e", "p", "ca", "as", "la", "alpha", "sa", "ma", "val", "ac"], "b": ["bp", "nb", "f", "back", "bb", "t", "bc", "bis", "base", "i", "bound", "ab", "B", "sb", "body", "c", "ba", "n", "blue", "h", "eb", "ib", "v", "bs", "ob", "j", "l", "next", "rb", "gb", "br", "p", "bi", "z", "d", "m", "g"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        \\n        Scanner scanner = new Scanner(System.in);\\n        \\n        int N = scanner.nextInt();\\n        boolean hantei = false;\\n        \\n        Map<Integer,Integer> map = new HashMap<Integer,Integer>();\\n        \\n        for(int i=0; i<N; i++){\\n            \\n            int x = scanner.nextInt();\\n            if(map.containsKey(x)){\\n                hantei = true;\\n            }else{\\n                map.put(x,1);\\n            }\\n            \\n        }\\n        \\n        if(hantei){\\n            System.out.println(\"NO\");\\n        }else{\\n            System.out.println(\"YES\");\\n        }\\n        \\n    }\\n}\\n", "target": "44", "substitutes": {"scanner": ["Scanner", " scanning", "Scaner", "scanning", "Scanning", "scaner", "scanener", " scanter", "canter", "caninner", "Scaninner", "rowner", "Scanener", " scanener", " scaner", " scaninner", "Scanter", "caner", "rowener", "rowter", "canener", "rowning", "scanter", "canner", "scaninner"], "N": ["I", "NN", "NM", "C", "L", "Y", "Na", "NO", "Num", "NT", "M", "D", "Net", "NG", "V", "n", "P", "NR", "Ni", "Number", "NB", "NP", "TN", "NI", "GN", "NA", "K", "J", "NH", "H", "NS", "X", "SN", "No", "T", "Sn", "Ns"], "map": ["mb", "mt", "cap", "addr", "ack", "maps", "view", "window", "shape", "scale", "mm", "mp", "age", "save", "link", "ms", "size", "add", "gr", "use", "code", "index", "ap", "place", "one", "MAP", "load", "allow", "hash", "table", "make", "mask", "process", "create", "store", "mem", "print", "form", "pack", "dict", "collect", "apper", "group", "cache", "set", "list", "m", "block"], "i": ["zi", "iter", "I", "hi", "ci", "ie", "si", "ic", "sim", "u", "t", "ai", "xi", "us", "is", "ind", "no", "mi", "c", "n", "cli", "im", "y", "v", "init", "s", "ix", "ui", "q", "gi", "j", "batch", "pi", "multi", "it", "ii", "chain", "gu", "ini", "di", "ex", "id", "li", "in", "ti", "bi", "z", "m", "iu", "phi", "ip"], "x": ["fx", "px", "xp", "hex", "ctx", "ax", "xx", "xt", "xi", "lex", "exp", "xa", "xf", "xxxx", "dx", "ox", "n", "key", "php", "y", "v", "xc", "ix", "pl", "w", "xe", "j", "l", "el", "wx", "rx", "lat", "mx", "my", "xy", "tx", "ex", "X", "z", "ux", "xs"], "hantei": ["hardeu", "heanteit", "hasea", " hasteu", "hantis", "hastea", "hastei", "hazeli", "haseu", "heandeit", "handeis", "hanteu", "handee", "hanteit", "hantit", "hanta", "heantee", "hanti", " hanteu", "hazeit", "hantea", "haseis", "hazee", "hantee", "heandei", "hanteli", "heandee", "heanteli", " hastea", "hanei", "hantlya", " handeis", "hazei", "heandeli", "hasteu", " hanteis", " hastei", "hasteis", " hanteit", "hantlyis", "haneit", "handeli", " handea", " handeit", "handea", "hardeis", "handeit", " hantea", "hardei", "hanteis", "handei", " hasteis", "hasei", "heantei", "haneli", "hantlyi", "hardea", " handei", "hantlyit", "hanee"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scan = new Scanner(System.in);\\n        Integer lenChara = Integer.valueOf(scan.nextLine());\\n        String targetChara = scan.nextLine();\\n\\n        if (lenChara % 2 == 0) {\\n            int divide = lenChara / 2;\\n            String start = targetChara.substring(0, divide);\\n            String end = targetChara.substring(divide, targetChara.length());\\n            if (start.equals(end)) {\\n                System.out.println(\"Yes\");\\n            } else {\\n                System.out.println(\"No\");\\n            }\\n        } else {\\n            System.out.println(\"No\");\\n        }\\n    }\\n}", "target": "161", "substitutes": {"scan": ["sm", "report", "sort", "connect", "sql", "sys", "show", "get", "san", "Scan", "sv", "re", "scale", "ann", "match", "sync", "send", "reach", "gate", "out", "gc", "find", "sum", "skip", "parse", "sur", "check", "an", "n", "read", "ser", "by", "scroll", "info", "con", "ner", "store", "sin", "system", "can", "run", "spin", "search", "seek", "util", "proc", "row", "in", "see", "query", "sc", "sb", "se"], "lenChara": ["lenchra", "LenCHda", "LenChula", "lengthCHara", "lenchula", "lengthCHard", "lengthchula", "lenScda", "lenChra", "lenCHula", "lenCHra", "lenChda", "lenCara", "LenChra", "lenchara", "lenCHara", "lenchda", "lenChula", "lengthChra", "lenCra", "LenCHra", "LenCHara", "lengthChara", "lenchard", "LenCHula", "lengthchda", "lenScara", "lenChard", "lengthChard", "LenChara", "lenCula", "lengthchra", "lenCHda", "lengthCHula", "lenScula", "lenCda", "lengthChula", "LenChda", "lengthchara", "lengthCHda", "lenScard", "lenCHard", "lengthChda"], "targetChara": ["TargetCHara", "targetChar", "targetEraro", "targetComparet", "argetChar", "targetchara", "targetGraro", " targetGrara", "TargetChar", "targetCompar", " targetGrma", " targetChma", "targetCharet", "targetGrma", " targetCHra", "targetCHula", "TargetChara", "targetchar", "targetCara", "targetCompamo", "argetCharo", "targetErale", "targetCHaret", "argetChara", "TargetCHamo", "targetCommaro", "targetChma", "TargetCHaret", "TargetChamo", "targetCHamo", "argetCompar", "targetChale", "targetErma", "targetGrara", "targetCommra", "targetChra", " targetGraro", "argetChra", " targetCharo", "targetCHaro", "targetCHara", " targetChao", "targetChamo", "targetScra", "targetcharet", "targetChao", "targetCompra", " targetChale", "TargetCharet", "targetCHao", "targetCula", " targetChula", "argetCompara", "argetCompra", " targetGrale", "targetCHra", "targetScula", " targetCHara", "targetErara", "targetGrale", "targetCommar", "targetScara", "targetComparo", "targetchamo", " targetCHao", "targetCao", "targetCharo", "targetCHar", "argetComparo", " targetCHula", "targetCra", "targetCompara", "TargetCHar", "targetCHale", "targetChula", "targetScao", "targetCommara", " targetChra", "targetCHma"], "divide": ["division", "posided", "Division", "divine", "decided", "descine", "Decision", "devider", "devide", "Divine", "Decide", "descade", "decide", "Divided", "devision", "posider", " divine", "Divade", " divided", "descided", " divade", "Divide", "divider", "divided", "posision", " divend", "decision", "poside", "descide", "Decend", "divade", "Divend", "divend", "Decade", " division", "devided", "decider"], "start": ["art", "first", "back", "get", "before", "window", "from", "part", "base", "test", "starting", "reset", "use", "check", "source", "entry", "key", "index", "name", "init", "info", "Start", "local", "space", "char", "stop", "step", "it", "st", "pre", "offset", "alpha", "id", "row", "in", "begin", "set", "str", "help"], "end": ["close", "ent", "est", "join", "ment", "ad", "all", "send", "max", "last", "END", "add", "and", "eng", "hend", "ended", "ends", "pend", "good", "next", "ue", "rest", "stop", "ase", "e", "st", "edge", "nd", "url", "ending", "event", "ff", "begin", "set", "line", "End", "rend"]}}
{"code": "import java.util.*;\\nimport static java.lang.System.*;\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(in);\\n\t\tint a = sc.nextInt();\\n\t\tint b = sc.nextInt();\\n\t\tif((a+b)%2==0) {\\n\t\t\tout.println((a+b)/2);\\n\t\t}\\n\t\telse out.println(\"IMPOSSIBLE\");\\n\t\tsc.close();\\n\t}\\n}", "target": "31", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "out", "sch", "sq", "gc", "sub", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "ko", "lc", "irc", "arc", "desc", "ctrl", "mc", "nl", "scl", "cr", "capt", "ch", "ck", "sel", "conv", "cle", "cs", "ec", "tc", "Sc", "scan"], "a": ["ar", "aa", "era", "t", "aq", "ai", "area", "va", "da", "au", "na", "pa", "x", "ab", "oa", "r", "ao", "ba", "an", "ea", "ga", "ia", "sta", "isa", "ta", "aj", "ae", "aaa", "aff", "apa", "aka", "ca", "alpha", "la", "as", "sa", "act", "ma", "ama", "ac"], "b": ["mb", "bp", "ed", "nb", "back", "bb", "bc", "bis", "base", "bf", "abs", "i", "ub", "ab", "B", "sb", "fb", "ba", "n", "c", "blue", "eb", "ib", "beta", "by", "v", "bs", "ob", "cb", "j", "rb", "gb", "br", "bar", "db", "be", "erb", "bi", "d", "g"]}}
{"code": "import java.util.*;\\npublic class Main {\\n    public static void main(String[] args) {\\n    \\n    Scanner sc = new Scanner(System.in);\\n      \\n      //\u5165\u529b\\n      int N =sc.nextInt();//\u751f\u5f92\u6570\\n      int kids[] = new int[N+1];\\n      \\n      //\u51fa\u5e2d\u756a\u53f7\u3067\u307e\u308f\u3059\\n      for(int i=1; i<=N; i++){\\n      \tint s = sc.nextInt();\\n        kids[s] =  i;\\n      }\\n      //Arrays.sort(kids);\\n      \\n      for(int i=1; i<=N; i++){\\n        System.out.print(kids[i]+\" \");\\n      //System.out.println(index_i);\\n      }\\n    }\\n}", "target": "227", "substitutes": {"sc": ["SC", " SC", " sp", "sys", "sv", "rc", " sa", " sh", "sq", " cr", "sb", " scorer", "sp", "c", " ss", " sw", " Sc", "cr", " scr", "ch", "system", "ss", "proc", "sa", "cs", "Sc", " sk", "scan"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n    public static void main(String[] args){\\n\tScanner scan = new Scanner(System.in);\\n\\n\t/* \u5165\u529b */\\n\tString w = scan.next();\\n\tint[] eng = new int[26];\\n\\n\t/* \u6587\u5b57\u6570\u30ab\u30a6\u30f3\u30c8 */\\n\tfor(int i = 0; i < w.length(); i++){\\n\t    eng[w.charAt(i)-97]++;\\n\t}\\n\\n\t/* \u9047\u5947\u5224\u5b9a */\\n\tint flag = 1;\\n\tfor(int i = 0; i < 26; i++){\\n\t    if(eng[i] % 2 != 0){\\n\t\tflag = -1;\\n\t\tbreak;\\n\t    }\\n\t}\\n\\n\tif(flag == 1){\\n\t    System.out.println(\"Yes\");\\n\t}else{\\n\t    System.out.println(\"No\");\\n\t}\\n    }\\n}\\n", "target": "103", "substitutes": {"scan": ["sm", "connect", "auto", "sys", "get", "san", "Scan", "sv", "se", "re", "scale", "ann", "sync", "reach", "gate", "out", "stat", "na", "find", "save", "skip", "sum", "parse", "check", "an", "n", "read", "ser", "con", "ner", "sky", "gen", "sin", "ch", "can", "system", " Scan", "run", "search", "seek", "nav", "conv", "in", "set", "ln", "query", "sc", "g", "scroll"], "w": ["aw", "sw", "word", "wd", "f", "wk", "t", "wal", "wa", "wp", "raw", "hw", "wt", "out", "now", "rew", "x", "r", "ew", "c", "n", "wb", "h", "y", "v", "W", "s", "q", "widget", "web", "ws", "kw", "wh", "l", "wx", "fw", "p", "ow", "nw", "wl", "wall", "sword", "temp", "rw", "z", "d", "m", "g", "wr"], "eng": ["eh", "alg", "enger", "ent", "pen", " Eng", "eg", "incre", "enge", "ense", "ine", "ench", "mot", "eur", "gener", "net", "oss", "erg", "gate", "enz", "ng", "ek", "ength", "atten", "EN", "ew", "uan", "ge", "ess", "ender", "ah", "en", "enh", "ef", "adj", "her", "we", "rez", "enth", "ung", "ens", "ey", "nex", "fg", "ENG", "ene", "ener", "ang", "eight", "hen", "eman", "ean", "ze", "og", "Eng", "rend"], "i": ["zi", "iter", "I", "hi", "ci", "iti", "span", "status", "ami", "\u0438", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "ei", "ogi", "me", "base", "is", "ind", "point", "x", "o", "mi", "cli", "index", "iy", "php", "gi", "im", "y", "init", "ix", "ui", "ri", "ki", "j", "uri", "batch", "ity", "qi", "pi", "multi", "ji", "it", "print", "ii", "PI", "chain", "gu", "di", "ini", "ex", "yi", "id", "to", "asi", "li", "fi", "in", "ti", "bi", "m", "iu", "phi", "g", "ip", "ion"], "charAt": ["charPoint", "keyPoint", "keyAfter", "letterPoint", "CharPoint", "CharAt", "letterAt", "keyAt", "charBefore", "letterAfter", "CharBefore", "keyBefore", "CharAfter", "letterBefore", "charAfter"], "flag": ["error", "done", "level", "status", "const", "FLAG", "tag", "window", "ment", "sync", "member", "condition", "ord", "age", "save", "fd", "cond", "link", "bit", "band", "Flag", "err", "stage", "weight", "flags", "bird", "set", "lag", "mask", "char", "bug", "store", "ground", "continue", "cmd", "group", "fail", "id", "cloud", "event", "field", "ld", "log", "sign", "wait", "line"]}}
{"code": "import java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        PrintWriter pw = new PrintWriter(System.out);\\n\\n        int n = sc.nextInt();\\n        int q = sc.nextInt();\\n\\n        Queue queue = new Queue(n);\\n        for (int i = 0; i < n; i++) {\\n            String name = sc.next();\\n            int time = sc.nextInt();\\n            Process x = new Process(name, time);\\n            queue.enqueue(x);\\n        }\\n\\n        int time = 0;\\n        while (!queue.isEmpty()) {\\n            Process x = queue.dequeue();\\n            if (x.time - q <= 0) {\\n                time += x.time;\\n                pw.print(x.name + \" \");\\n                pw.println(time);\\n            } else {\\n                time += q;\\n                x.time -= q;\\n                queue.enqueue(x);\\n            }\\n        }\\n\\n        pw.flush();\\n    }\\n\\n    static class Process {\\n        String name;\\n        int time;\\n\\n        Process(String name, int time) {\\n            this.name = new String(name);\\n            this.time = time;\\n        }\\n    }\\n\\n    static class Queue {\\n        Process[] Q;\\n        int lastIndex;\\n        int head;\\n        int tail;\\n\\n        Queue(int n) {\\n            Q = new Process[n + 1];\\n            lastIndex = n;\\n            head = 0;\\n            tail = 0;\\n        }\\n\\n        void enqueue(Process x) {\\n            Q[tail++] = new Process(x.name, x.time);\\n            if (tail > lastIndex)\\n                tail = 0;\\n        }\\n\\n        Process dequeue() {\\n            Process x = Q[head++];\\n            if (head > lastIndex)\\n                head = 0;\\n            return x;\\n        }\\n\\n        boolean isEmpty() {\\n            return head == tail ? true : false;\\n        }\\n    }\\n}\\n", "target": "231", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "pb", "ctx", "si", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "ng", "anc", "parse", "fc", "sec", "sp", "cont", "c", "cc", "qu", "isc", "esc", "cl", "pl", "lc", "irc", " Sc", "ctl", "desc", "co", "mc", "nl", "inc", "scl", "cr", "ch", "p", "st", "cgi", "sci", "conv", "sche", "cs", "tc", "Sc", "scan"], "pw": ["lpwd", "dpw", "cpwb", "ppwk", " pwt", "pwt", "dpwa", "spw", "pwk", "ppW", "pwb", "spwb", "cpws", "ppwa", "dpW", "ipwt", "ppws", " pwr", "ppw", "pwa", " pwk", "lpW", "ppwr", "spW", " pwd", " pwb", "lpwt", " pW", "ppwb", "spwr", "pwr", "pW", "pws", "ipwd", "cpwa", "cpw", "ipw", " pws", "ipW", "dpwk", "pwd", "lpw", " pwa"], "n": ["nb", "t", "u", "ln", "nc", "net", "ll", "k", "nan", "na", "o", "conn", "r", "on", "c", "nn", "h", "y", "v", "en", "s", "dn", "w", "N", "j", "l", "nu", "nl", "np", "cn", "p", "sn", "b", "ns", "nt", "number", "num", "nr", "z", "d", "m", "ne", "g"], "q": ["iq", "qs", "f", "qt", "ime", "t", "u", "dq", "eq", "k", "sq", "r", "que", "g", "qq", "c", "qu", "h", "v", "w", "query", "l", "lock", "ue", "qi", "it", "qa", "p", "ch", "qual", "quit", "wait", "z", "m", "quant"], "queue": ["menu", "archive", "sequence", "history", "library", "seq", "priority", "profile", "pause", "collection", "dq", "me", "match", "sync", "console", "port", "gc", "test", "buffer", "quote", "que", "order", "qu", "layer", "page", "index", "play", "journal", "set", "batch", "we", "space", "processor", "ue", "process", "store", "quality", "control", "pool", "pipe", "run", "register", "search", "result", "stack", "block", "log", "trace", "cache", "wait", "list", "channel", "buf", "line", "tree", "message"], "i": ["iter", "I", "ie", "ci", "hi", "inter", "si", "sim", "ai", "me", "us", "is", "ind", "o", "ms", "mi", "err", "cli", "index", "y", "im", "init", "info", "ix", "ui", "j", "batch", "qi", "pi", "multi", "my", "it", "ii", "p", "ini", "di", "id", "li", "ti", "bi", "set", "m", "phi", "ip"], "name": ["word", "status", "filename", "prefix", "summary", "admin", "process", "title", "Name", "old", "file", "id", "num", "default", "test", "ame", "path", "nm", "def", "hello", "family", "base", "out", "parent", "names", "no", "named", "table", "create", "string", "normal", "run", "group", "number", "str", "common", "ma", "address", "alias", "sequence", "length", "tag", "version", "type", "size", "class", "value", "local", "description", "lat", "mem", "NAME", "user", "end", "message", "error", "me", "part", "domain", "data", "code", "key", "label", "resource", "memory", "start", "system", "search", "call"], "time": ["before", "race", "port", "estamp", "TIME", "duration", "power", "process", "thread", "text", "tm", "tx", "offset", "clock", "id", "test", "mt", "path", "speed", "zone", "priority", "cost", "tim", "t", "sum", "runtime", "timer", "ace", "string", "step", "tt", "delay", "minute", "cache", "Time", "ts", "sequence", "length", "history", "month", "ime", "pe", "tag", "rate", "version", "transform", "type", "size", "etime", "value", "total", "depth", "trace", "comment", "z", "tree", "message", "error", "date", "instance", "window", "count", "now", "hour", "age", "times", "timeout", "code", "weight", "context", "money", "key", "ty", "info", "memory", "start", "command", "frequency"], "x": ["ux", "fx", "XX", "px", "def", "mix", "xp", "xml", "f", "ct", "xd", "ax", "t", "xx", "xt", " xx", "xi", "lex", "exp", "xf", "xa", "xxxx", "obj", "cross", "ox", "k", "test", "dx", "expr", "o", "r", "and", "re", "check", "full", "h", "key", "php", "y", "xc", "v", "ix", "w", "xe", "l", "wx", "rx", "nex", "mx", "e", "p", "xy", "xes", "ex", "yn", "X", "inx", "tx", "rex", "xs", "ext", "z", "xxx", "el", "g"], "Q": ["PC", "E", "Buffer", "R", "Qu", "C", "L", "Y", "TY", "Z", "Array", "D", "PS", "S", "UE", "B", "F", "MP", "P", "V", "W", "Query", "Pen", "NB", "N", "QU", "Pool", "MQ", "IO", "CH", "K", "G", "J", "QB", "H", "X", "IQ", "T", "Que", "Group", "PO"], "lastIndex": ["LastIndex", " lastindex", "firstValue", "samePosition", "lastValue", "astPos", "firstPos", "lastPos", "firstindex", " lastPos", "astPosition", "firstPosition", "LastPos", "sameIndex", "astIndex", "LastPosition", "sameInd", "firstIndex", "lastPosition", " lastInd", "LastInd", " lastValue", "samePos", "LastValue", "Lastindex", " lastPosition", "lastindex", "lastInd", "astindex"], "head": ["root", "zero", "back", "mit", "before", "front", "port", "commit", "index", "next", "thread", "form", "offset", "id", "row", "heads", "HEAD", "view", "heading", "shift", "ad", "max", "loop", "sum", "link", "md", "len", "host", "lock", "pop", "push", "cmd", "mean", "foot", "ptr", "then", "d", "ac", "iter", "length", "art", "tag", "left", "ind", "size", "master", "it", "nt", "top", "end", "depth", "star", "act", "go", "cap", "wind", "first", "window", "th", "count", " HEAD", "check", "Head", "h", "headed", "key", " heads", "limit", "header", "miss", "start", "ck", "mk"], "tail": ["iter", "length", "tails", "tle", "itness", "t", "flush", "style", "alt", "latest", "tag", "left", "max", "port", "last", "loop", "sum", "buffer", "size", "timeout", "unit", "len", "body", "weight", "pull", "index", "lo", "fat", "tailed", "shell", "term", "limit", "lock", "table", "elt", "thread", "nl", "jump", "lead", "lt", "it", "il", "start", "child", "offset", "le", "total", "empty", "foot", "top", "end", "leaf", "trace", "list", "query", "line", "tip", "tree", "slice", "scroll", "ail"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tvoid run() {\\n\t\tint min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tfor (int i = 0; i < 5; i++) {\\n\t\t\tint n = scan.nextInt();\\n\t\t\tmax = Math.max(max, n);\\n\t\t\tmin = Math.min(min, n);\\n\t\t}\\n\t\tint k = scan.nextInt();\\n\t\tSystem.out.println((k >= (max - min) ? \"Yay!\" : \":(\"));\\n\t}\\n    public static void main(String[] args) {\\n    \tnew Main().run();\\n    }\\n}\\n", "target": "66", "substitutes": {"min": ["default", "cmp", "sort", "span", "first", "range", "shift", "scale", "me", "left", "mm", "part", "mn", "minus", "sub", "stat", "x", "skip", "amin", "mi", "Min", "len", "partial", "mid", "beta", "v", "MIN", "only", "small", "lower", "low", "local", "Mini", "j", "average", "l", "mini", "mel", "mod", "start", "aj", "sin", "step", "lt", "diff", "p", "minimum", "mind", "pre", "mean", "le", "mins", "mis", "rel", "num", "none", "in", "un", "minute", "begin", "temp", "m", "rain", "ne"], "max": ["root", "MAX", "upper", "huge", "first", "ax", "range", "div", "re", "largest", "scale", "shape", "all", "ro", "Max", "right", "cross", "out", "ma", "last", "height", "x", "add", "ms", "parent", "size", "r", "up", "full", "maximum", "c", "h", "med", "prime", "cover", "v", "con", "box", "grow", "outer", "mod", "rest", "co", "start", "res", "step", "mx", "p", "can", "chain", "gt", "total", "ca", "ex", "mad", "top", "pad", "end", "num", "dot", "major", "act", "m", "default"], "scan": ["report", "connect", "auto", "sql", "sys", " scanner", "san", "watch", "Scan", "sv", "se", "ann", "sync", "send", "reach", "out", "gate", "gc", "find", "look", "skip", "sum", "parse", "na", "r", "check", "an", "read", "ser", "scroll", "con", "set", "ner", "cat", "char", "sin", "ch", "can", "system", " Scan", "p", "run", "seek", "search", "nav", "proc", "conv", "row", "in", "z", "query", "sc", "g"], "i": ["iq", "I", "hi", "ci", "ie", "si", "io", "ic", "t", "u", "sim", "ai", "us", "me", "is", "ind", "x", "ms", "mi", "cli", "gi", "y", "init", "im", "q", "ix", "ui", "j", "batch", "qi", "pi", "multi", "it", "my", "ii", "gu", "ini", "di", "ex", "li", "ti", "bi", "z", "m", "phi", "g", "ip"], "n": ["note", "nm", "nb", "t", "net", "node", "mn", "nan", "na", "x", "ng", "on", "an", "c", "nn", "y", "v", "N", "j", "l", "nu", "np", "ot", "cn", "p", "sn", "ns", "nt", "nw", "nr", "number", "num", "z", "ln", "m", "ne", "g"], "k": ["t", "kh", "ka", "kk", "unk", "kj", "kat", "ek", "sk", "ask", "c", "ks", "ke", "kick", "key", "y", "v", "kid", "q", "ko", "ki", "j", "kw", "ik", "ikk", "ku", "kl", "K", "ck", "p", "kr", "mk", "z", "m", "km", "g", "tk"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        Scanner in = new Scanner(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        ABC101_B solver = new ABC101_B();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class ABC101_B {\\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\\n            String n = in.nextLine();\\n            long l = Long.parseLong(n);\\n\\n            long sum = 0;\\n\\n            for (char c : n.toCharArray()) {\\n                sum += Character.digit(c, 10);\\n            }\\n\\n            if (l % sum == 0) {\\n                out.print(\"Yes\");\\n            } else {\\n                out.print(\"No\");\\n            }\\n        }\\n\\n    }\\n}\\n\\n", "target": "195", "substitutes": {"inputStream": ["currentStream", " inputSteam", " inputSource", "inputStreamer", "sampleSteam", "outputSource", "outputStyle", "sourceSteam", "currentstream", "sourceStyle", "sampleStreamer", "currentStreamer", "inputStyle", "outputstream", " inputStyle", "inputSource", "sourceSource", "outputSteam", "inputSteam", "sampleStream", "sourceStream", "inputstream", "currentSteam", "samplestream", "outputStreamer"], "outputStream": ["OutputSteam", "outStream", "displayStream", "outputForm", "outForm", "inputForm", "OutputPath", "outstream", "OutputForm", "outputstream", " outputForm", "displaySteam", " outputPath", "outPath", "outputSteam", "OutputStream", " outputSteam", "outSteam", "displayForm", "inputstream", "displaystream", "inputSteam", "outputPath"], "in": ["iter", "inside", "ar", "fs", "din", "io", "serv", "IN", "t", "inn", "inner", "mm", "bin", "er", "sol", "is", "ind", "i", "ins", "o", "r", "on", "rin", "err", "mi", "lin", "source", "isin", "init", "en", "info", "con", "s", "output", "local", "this", "ri", "ner", "gin", "mr", "doc", "cin", "current", "In", "sin", "inc", "mc", "it", "input", "p", "can", "run", "file", "ini", "rt", "null", "as", "dir", "inf", "log", "reader", "kin", "get"], "out": ["writer", "report", "over", "sys", "OUT", "io", " OUT", "t", "at", "flush", "inner", "all", "net", "write", "gc", "ins", "outs", "o", "no", "client", "msg", "conn", "r", "on", "err", "up", "by", "name", "os", "OU", "conf", "info", "con", "s", "aos", "output", "w", "json", "Out", "this", "pas", "summary", "outer", "table", "co", "screen", "res", "crit", "it", "print", "ch", "can", "run", "cmd", "p", "ex", "pool", "group", "null", "nt", "user", "to", " Out", "conv", "end", "ou", "log", "cache", "list"], "solver": [" soln", "Solution", "unsoln", "resolver", "resoln", "solving", "ssolve", "unsolution", "ssolver", " solution", "resolving", "soln", "ssolution", "Solve", "unsolving", "ssolving", "solve", "resolution", "unsolver", "Soln", " solve", "Solver", "ssoln", "solution"], "testNumber": [" testNum", "caseNum", "testNum", " proofNR", " testNR", "testNR", " proofInterface", "caseNR", " testInterface", "caseInterface", " proofNum", " proofNumber", "testInterface", "caseNumber"], "n": ["note", "nm", "f", "t", "nc", "ll", "i", "na", "o", "ng", "r", "on", "nn", "fn", "nor", "v", "gn", "s", "dn", "w", "N", "sen", "j", "nu", "nl", "np", "cn", "p", "sn", "b", "ns", "nt", "nw", "nr", "num", "z", "ln", "m", "ne", "g", "rn"], "l": ["length", "f", "L", "t", "sl", "lv", "lu", "ln", "ll", "x", "lam", "len", "h", "lo", "v", "pl", "lit", "lc", "lag", "kl", "lp", "nl", "lt", "ly", "p", "b", "le", "ls", "la", "li", "z", "d", "m", "el", "g"], "sum": ["length", "zero", "cos", "cu", "si", "cost", "login", "sim", "ums", "u", "lu", "scale", "fac", "match", "sol", "with", "count", "add", "lam", "size", "must", "len", "sat", "cum", "tail", "index", "cal", "set", "average", "j", "sam", "hash", "summary", "Sum", "ity", "su", "vol", "mean", "total", "um", "alpha", "sa", "num", "temp", "cache", "sign", "d", "mod"], "c": ["pc", "C", "ct", "cu", "ic", "u", "rc", "nc", "bc", "abc", "k", "Char", "unc", "cd", "fc", "code", "cc", "ce", "xc", "v", "lc", "cat", "arc", "ctrl", "char", "co", "mc", "cr", "ch", "chain", "b", "vc", "cf", "dc", "cp", "tc", "sc", "cell", "ac"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner scan = new Scanner(System.in);\\n\t\tint i,v;\\n\t\tfor(;;){\\n\t\t\tint h = scan.nextInt();\\n\t\t\tint w = scan.nextInt();\\n\t\t\tif(h == 0 && w == 0)\\n\t\t\t\tbreak;\\n\t\t\t\tfor(i = 1; i <= h; ++i){\\n\t\t\t\t\tfor(v = 1; v <= w; ++v){\\n\t\t\t\t\tif(i == h || i == 1){\\n\t\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t\t}\\n\t\t\t\t\telse if(i != 1 || i != h){\\n\t\t\t\t\t\tif(v == 1 || v == w){\\n\t\t\t\t\t\t\tSystem.out.print(\"#\");\\n\t\t\t\t\t\t}\\n\t\t\t\t\t\telse if(v != 1 || v != w){\\n\t\t\t\t\t\t\tSystem.out.print(\".\");\\n\t\t\t\t\t\t}\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t\t\tSystem.out.println(\"\");\\n\t\t}\\n\t\t\t\tSystem.out.println(\"\");\\n\t}\\n}\\n}", "target": "19", "substitutes": {"scan": ["connect", "sql", "sys", "get", " scanner", "san", "range", "sim", "Scan", "sv", "se", "re", "scale", "ann", "sync", "send", "reach", "gate", "out", "stat", "find", "sum", "skip", "parse", "sur", "an", "n", "nn", "read", "scroll", "info", "ner", "char", "gen", "sin", "store", "ch", "can", " Scan", "system", "run", "search", "cgi", "util", "proc", "row", "in", "set", "query", "sc", "g"], "i": ["zi", "iter", "I", "hi", "ci", "ie", "ami", "si", "ic", "sim", "u", "ai", "xi", "ei", "is", "k", "ind", "ish", "ori", "o", "x", "mi", "cli", "index", "y", "im", "info", "ix", "init", "ui", "gi", "ri", "ki", "j", "ia", "l", "qi", "pi", "multi", "ji", "ih", "it", "ii", "di", "ini", "yi", "li", "in", "ti", "bi", "ims", "iu", "phi", "ip"], "v": ["ver", "nv", "rev", "vy", "f", "tv", "lv", "view", "u", "sv", "version", "ov", "va", "all", "max", "vi", "inv", "cv", "vp", "x", "dev", "d", "uv", "V", "c", "var", "ev", "vs", "vt", "vert", "y", "value", "s", "q", "ve", "j", "l", "av", "iv", "vv", "pi", "vol", "e", "br", "can", "vector", "nov", "vc", "detail", "qv", "conv", "vo", "z", "m", "el", "g"], "h": ["hi", "history", "hs", "hh", "f", "hex", "HH", "t", "th", "bh", "kh", "hw", "sh", "ha", "ish", "k", "x", "r", "c", "n", "host", "y", "ah", "html", "q", "ht", "rh", "j", "high", "hl", "hash", "l", "he", "oh", "gh", "ih", "ph", "it", "H", "hd", "ch", "b", "hm", "hr", "hz", "ho", "m", "phi", "g", "zh"], "w": ["aw", "sw", "wd", "wk", "t", "window", "iw", "wal", "wa", "wp", "ln", "wy", "hw", "wt", "out", "x", "ew", "n", "wb", "W", "tw", "wi", "ht", "ws", "kw", "wh", "l", "we", "wx", "fw", "ch", "p", "wcs", "b", "win", "nw", "width", "wl", "wall", "rw", "z", "d", "m", "g", "wr"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        // \u6574\u6570\u306e\u5165\u529b\\n        int n = sc.nextInt();\\n        int k = sc.nextInt();\\n        int q = sc.nextInt();\\n        \\n        int[] point;\\n        point = new int[n];\\n      \\n        for (int i = 0; i <n; i++) {\\n          point[i] = k;\\n        }\\n      \\n        for (int i = 0; i < q; i++) {\\n          int number = sc.nextInt();\\n          point[number - 1] = point[number - 1] + 1;\\n        }\\n        \\n      \\n        int border = q;\\n        for (int i = 0; i <n; i++) {\\n          if (point[i] > border) {\\n            System.out.println(\"Yes\");\\n          } else {\\n            System.out.println(\"No\");\\n          }\\n        }\\n    }\\n}", "target": "102", "substitutes": {"sc": ["SC", " SC", " sp", "sys", "sv", "rc", " sa", " sh", "sq", " cr", "sb", " scorer", "sp", "c", " ss", " sw", " Sc", "cr", " scr", "ch", "system", "ss", "proc", "sa", "cs", "Sc", " sk", "scan"]}}
{"code": "import java.util.NoSuchElementException;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    private static int MIN = -1000000;\\n    private static int MAX = 1000000;\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        try {\\n            int n = Integer.parseInt(sc.nextLine());\\n            int min = MAX;\\n            int max = MIN;\\n            double total = 0;\\n            while (sc.hasNext()) {\\n                int a = sc.nextInt();\\n                max = Integer.max(a, max);\\n                min = Integer.min(a, min);\\n                total += a;\\n            }\\n            System.out.printf(\"%d %d %.0f\\n\", min, max, total);\\n        } catch (NoSuchElementException\\n                | NumberFormatException e) {\\n            System.out.println(e);\\n        }\\n    }\\n}\\n\\n", "target": "21", "substitutes": {"MIN": ["VERSION", "MOD", "DIR", "SIZE", "IN", "POS", "SET", "M", "MED", "VER", "Minimum", "TYPE", "MN", "PIN", "IM", "FAULT", "Min", "MODE", "MP", "INT", "NR", "SM", "TAG", "NUM", "MAP", "N", "STAR", "STAT", "NA", "NAME", "MS", "minimum", "BY", "KEY", "DATA", "ALL", "TM"], "MAX": ["MA", "MOD", "VERSION", "HEAD", "CAN", "Maximum", "SIZE", "OUT", "IN", "ND", "AN", "NO", "Max", "PER", "MED", "TYPE", "LOCK", "MAG", "FAULT", "MODE", "TIME", "NR", "NUM", "N", "MAP", "INFO", "NA", "VALUE", "NAME", "MX", "MS", "X", "DATA", "ALL", "TM", "ACTION"], "sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "syn", "usc", "se", "rc", "sv", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "sub", "scrib", "disc", "anc", "sec", "sp", "c", "cc", "esc", "ser", "isc", "cl", "lc", "irc", "ctl", "desc", "mc", "scl", "cr", "ch", "system", "ck", "tch", "cgi", "ss", "sci", "conv", "dc", "cle", "cs", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "net", "mn", "nan", "count", "i", "na", "x", "nn", "name", "tn", "N", "j", "nu", " N", "p", "sn", "ns", "nt", "ni", "id", "nr", "z", "d", "m", "ne"], "min": ["cmp", "sort", "first", "mode", "div", "sim", "pos", "from", "mm", "left", "floor", "part", "sol", "mn", "initial", "ind", "minus", "sub", "amin", "mi", "Min", "len", "mid", "index", "spec", "init", "m", "small", "lower", "low", "only", "local", "emin", "average", "l", "sam", "next", "start", "step", "lt", "diff", "minimum", "pre", "le", "mean", "mins", "rel", "minute", "in", "un", "begin", "none", "mod", "default", "loc"], "max": ["root", "cmp", "ver", "upper", "show", "ax", "t", "range", "div", "window", "scale", "all", "net", "Max", "right", "base", "last", "out", "k", "sum", "na", "x", "add", "tmp", "size", "full", "maximum", "ge", "h", "cur", "med", "cover", "v", "cut", "m", "master", "highest", "grow", "mod", "rest", "co", "mx", "pool", "ex", "mad", "alpha", "pad", "end", "set", "act", "ma", "fr"], "total": ["note", "done", "huge", "otal", " Tot", "t", "translation", "planned", "complete", "used", " TOTAL", "human", "out", "completely", "sum", " summed", " Total", "eta", "successful", "full", "mu", "info", " all", "average", "unique", "ta", "current", "meta", "it", " tot", "normal", "created", "mean", " sum", "Total", " totals", "number", "pie", "checked", "temp", "shared", "OTAL", "quant"], "a": ["aw", "aa", "era", "t", "at", "obj", "area", "va", "xa", "A", "integer", "fa", "au", "i", "sha", "na", "pa", "data", "oa", "ao", "ba", "an", "am", "app", "s", "m", "ea", "ga", "ada", "ia", "sta", "isa", "ta", "aj", "ae", "aaa", "acc", "ya", "e", "apa", "p", "b", "aka", "ca", "alpha", "la", "as", "sa", "z", "act", "ma", "ac"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Arrays;\\nimport java.util.StringTokenizer;\\nimport java.io.IOException;\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.InputStream;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream    inputStream    = System.in;\\n        OutputStream outputStream = System.out;\\n        InputReader    in                      = new InputReader(inputStream);\\n        PrintWriter      out                    = new PrintWriter(outputStream);\\n        Task                 solver               = new Task();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class Task {\\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\\n        \tString n = in.next();\\n        \tfor(int i = 0; i < n.length(); i++) {\\n        \t\tif(n.charAt(i) == '1') {\\n        \t\t\tout.print(\"9\");\\n        \t\t}else {\\n        \t\t\tout.print(\"1\");\\n        \t\t}\\n        \t}\\n        \tout.println(\"\");\\n        }\\n    }\\n\\n    static class InputReader {\\n        public BufferedReader reader;\\n        public StringTokenizer tokenizer;\\n\\n        public InputReader(InputStream stream) {\\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\\n            tokenizer = null;\\n        }\\n\\n        public String next() {\\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\\n                try {\\n                    tokenizer = new StringTokenizer(reader.readLine());\\n                } catch (IOException e) {\\n                    throw new RuntimeException(e);\\n                }\\n            }\\n            return tokenizer.nextToken();\\n        }\\n\\n        public int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n    }\\n}\\n\\n", "target": "111", "substitutes": {"inputStream": ["dataStream", "quickStream", " inputSteam", "dataSocket", "inputPoint", "inputStreamer", "quickStreamer", "dataSteam", "sourceSteam", "quickstream", "outputstream", " inputSocket", "sourceSocket", "inputSocket", "sourcePoint", "outputSteam", " inputstream", " inputStreamer", "quickSteam", "sourceStream", "inputstream", "dataPoint", " inputPoint", "inputSteam", "outputStreamer"], "outputStream": ["thisStyle", "outStream", " outputStreamer", "outScreen", "responseSteam", "outputWriter", "thisStream", "outputStyle", "putStyle", "putStream", "responseScreen", "putSteam", "thisWriter", "outputSteam", " outputStyle", " outputSteam", " outputWriter", "responseStream", "outSteam", "responseStreamer", "outStreamer", "outputScreen", "outputStreamer", " outputScreen", "thisSteam", "putWriter"], "in": ["or", "iter", "inside", "env", "din", "io", "IN", "ic", "al", "inner", "inn", "from", "mm", "bin", "ro", "er", "is", "ind", "ins", "add", "config", "r", "on", "rin", "err", "up", "c", "context", "source", "h", "by", "init", "en", "info", "con", "per", "local", "w", "ri", " din", "doc", "gin", "l", "cin", "current", "In", "sin", "inc", "it", "input", "form", "run", "file", "ini", "win", "null", "as", "inf", "log", "kin", "get", "ac"], "out": ["writer", "report", "over", "sys", "OUT", "io", "t", "at", "flush", "inner", "obj", "all", "net", "write", "last", "gc", "o", "outs", "tmp", "client", "gr", "conn", "r", "buffer", "timeout", "err", "check", "name", "os", "v", "OU", "aos", "output", "w", "Out", "this", "batch", "outer", "table", "lock", "co", "current", "screen", "res", "it", "print", "p", "pool", "cmd", "ex", "file", "result", "null", "nt", "user", "to", "group", "conv", "ou", "log", "temp", "set", "list", "cache"], "solver": ["Solution", "csolution", " sorter", "resolver", "resorter", "searcher", "sol", "csorter", "csolver", "researcher", " solution", "Sol", "Solve", " searcher", "solution", "solve", "resolution", "resol", "csearcher", " solve", "sorter", "Solver", "resolve", " sol"], "testNumber": [" testNum", "testnumber", "testNumbers", "taskNumber", "testNum", " attemptNum", " attemptNumber", " testnumber", " testNumbers", " attemptnumber", "taskNumbers", "tasknumber", " attemptNumbers", "taskNum"], "n": ["note", "nm", "nb", "t", "network", "ren", "nc", "ll", "na", "o", "ng", "r", "on", "nn", "fn", "pn", "gn", "dn", "s", "N", "l", "nu", "np", "nl", "br", "cn", "p", "norm", "sn", "ns", "nt", "nw", "nr", "str", "ln", "m", "ne", "g", "rn"], "i": ["iq", "I", "hi", "ci", "ami", "\u0438", "si", "ic", "u", "ai", "us", "ei", "me", "xi", "eu", "is", "ski", "ind", "x", "o", "ms", "mi", "cli", "key", "y", "gi", "init", "info", "ix", "q", "ui", "load", "ki", "j", "batch", "uri", "some", "ri", "qi", "pi", "multi", "ji", "my", "it", "ii", "p", "PI", "ex", "ini", "di", "li", "ti", "bi", "ims", "list", "m", "point", "phi", "g", "ip"], "reader": ["writer", "iter", "builder", "dd", "window", "iterator", "inner", "rc", "er", "ro", "dr", "linger", "buffer", "client", "r", "rr", "context", " read", "read", "resource", "timer", "wrapper", "random", "parser", "ner", "rer", "mr", "rx", "rar", "oder", "finder", "keeper", "input", "handler", "owner", "driver", "worker", "file", "Reader", "older", "runner", "user", "row", "rl", "fr", "loader"], "tokenizer": ["Tokenizer", "wordifier", "zeroizer", "initialerer", "okenifer", "timizer", "serialzer", "serialifier", "tokenifer", " tokenerer", "tokenize", "zeroizable", " tokenifier", "serializer", "okenization", "timifier", "initialator", "timifer", "okenoder", "Tokenizable", "zerooder", "tener", "wordizer", "tokenifier", "okenator", " tokenzer", "wordization", "okenifier", "tokenization", " tokenener", "Tokenization", " tokenization", "zeroener", "tokenoder", " tokenifer", "tokenizable", " tokenator", "Tokener", "Tokenzer", "serialization", "tization", "tize", "timize", " tokenize", "okenizer", "okenener", "Tokenifier", "Tokenener", "okenizable", "initializer", "worder", "tokenator", "tizer", "tokener", "okenerer", "okenize", "tokenerer", "initialifier", "Tokenoder", " tokener", "tokenzer", "tokenener"], "stream": ["history", "path", "level", "status", "Stream", "socket", "view", "window", "collection", "iterator", "secure", "ream", "console", "phrase", "data", "buffer", "body", "progress", "context", "source", "wrapper", "output", "this", "present", "sample", "input", "pipe", "form", "pool", "file", "stack", "null", "ssl", "row", "log", "channel", "message"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.lang.Math;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        try {\\n            BufferedReader stdReader = new BufferedReader(new InputStreamReader(System.in));\\n            \\n            String line;\\n            \\n            while((line = stdReader.readLine()) != null) {\\n                String[] input = line.split(\" \", 0);\\n                long a = Long.parseLong(input[0]);\\n                long b = Long.parseLong(input[1]);\\n                \\n                long d = a / b;\\n                long r = a % b;\\n                double f = (double)a / (double)b;\\n                String after = String.format(\"%.5f\", f);\\n                System.out.println(d + \" \" + r + \" \" + after);\\n            }\\n            stdReader.close();\\n        } catch(Exception e) {\\n            e.getStackTrace();\\n            System.exit(-1);\\n        }\\n    }\\n}", "target": "90", "substitutes": {"stdReader": ["cmdreader", "cmdParser", "standardReader", "stdParser", "streader", "STDReader", " stdLoader", "cmdReader", "STDLoader", " stdRead", "standardParser", " stdBuilder", "ndBuilder", "stdBuilder", "ndLoader", "stdRead", "ndParser", "ndReader", "standardRead", "cmdRead", " stdParser", "stdLoader", "stRead", "stParser", "stReader", "STDParser", "STDBuilder", " stdreader", "stdreader", "standardreader"], "line": ["mail", "sequence", "record", "word", "LINE", "ine", "lines", "range", "network", "base", "online", "Line", "no", "link", "lin", "entry", "lo", "page", "label", "shell", "peer", "eline", "l", "next", "lock", "string", "frame", "nl", "text", "sample", "e", "continue", "print", "le", "file", "row", "log", "in", "comment", "ln", "block", "point", "cell", "message"], "input": ["hello", "join", "attribute", "feed", "view", "select", "raw", "integer", "hidden", "Input", "add", "parse", "config", "check", "request", "context", "source", "image", "label", "spec", "init", "info", "q", "prefix", "output", "json", "table", "unknown", "pattern", "lat", "char", "step", "my", "sample", "qa", "print", "form", "command", "field", "att", "in", "list", "str", "query", "point", "ip"], "a": ["aux", "ar", "aa", "era", "ax", "t", "al", "ai", "area", "ad", "va", "A", "da", "au", "ava", "i", "abs", "o", "ab", "oa", "dev", "ao", "ba", "n", "am", "an", "c", "ea", "ga", "ia", "l", "sta", "ta", "ae", "aaa", "e", "p", "aka", "ca", "as", "la", "alpha", "sa", "ma", "ac"], "b": ["nb", "bb", "t", "bc", "bis", "base", "i", "ab", "B", "fb", "g", "ba", "c", "n", "wb", "h", "eb", "ib", "beta", "y", "v", "bs", "ob", "w", "cb", "j", "l", "rb", "e", "gb", "p", "db", "be", "bi", "z", "m", "sb"], "d": ["dd", "xd", "de", "t", "div", "ad", "sd", "dr", "dx", "da", "D", "i", "x", "o", "fd", "pd", "cd", "md", "c", "n", "dm", "y", "dn", "j", "l", "dh", "dl", "e", "bd", "p", "td", "dt", "ds", "z", "m", "g"], "r": ["ar", "R", "t", "range", "u", "rate", "er", "ro", "dr", "rad", "i", "ur", "rr", "n", "h", "y", "rh", "ri", "j", "l", "mr", "rx", "rb", "rf", "rar", "res", "e", "p", "rs", "rt", "nr", "hr", "rd", "fr", "m", "g", "sr"], "f": ["fx", "fs", "t", "fort", "sf", "fac", "fa", "bf", "x", "fd", "fc", "z", "F", "df", "fb", "c", "n", "full", "h", "v", "s", "q", "w", "fed", "alf", "l", "e", "p", "fp", "cf", "fi", "ff", "fm", "m", "tf", "g", "fr"], "after": ["format", "report", "draw", "feed", "before", "fort", "ment", "dr", "right", "last", "data", "later", "and", "progress", "full", "function", "After", "update", "next", "pattern", "extra", "step", "normal", "continue", "render", "cmd", "append", "group", "ret", "reason", "dir", "end", "ext", "dot", "pretty", "graph", "post", "follow", "details", "again"]}}
{"code": "/* package codechef; // don't place package name! */\\n\\nimport java.util.*;\\nimport java.lang.*;\\nimport java.io.*;\\n\\n/* Name of the class has to be \"Main\" only if the class is public. */\\nclass Main\\n{\\n\tpublic static void main (String[] args) throws java.lang.Exception\\n\t{\\n\t\t// your code goes here\\n\t\t\t\tScanner sc=new Scanner (System.in);\\n\t\t\\n\t\tint ass=0;\\n\t\tint nod=sc.nextInt();\\n\t\tint t=sc.nextInt();\\n\t\twhile (t>0)\\n\t\t{\\n\t\t    ass=ass+sc.nextInt();\\n\t\t    t--;\\n\t\t}\\n\t\tif(nod>=ass)\\n\t\tSystem.out.println(nod-ass);\\n\t\telse System.out.println(-1);\\n\t\t\\n\t}\\n}\\n", "target": "108", "substitutes": {}}
{"code": "import java.util.*;\\n\\nclass Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint A = sc.nextInt();\\n\t\tint B = sc.nextInt();\\n\t\tint C = sc.nextInt();\\n\t\tint X = sc.nextInt();\\n\\n\t\tint cnt=0;\\n\t\tfor (int a=0;a<A+1;a++) {\\n\t\t\tfor (int b=0;b<B+1;b++) {\\n\t\t\t\tint x = X-a*500-b*100;\\n\t\t\t\tif (x>=0 && x%50==0 && x/50<=C) {\\n\t\t\t\t\tcnt++;\\n\t\t\t\t}\\n\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(cnt);\\n\t}\\n}", "target": "127", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "out", "sch", "sq", "gc", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "ko", "lc", "ctl", "wx", "mc", "inc", "scl", "cr", "ch", "system", "ck", "st", "cgi", "ss", "sci", "conv", "dc", "cs", "tc", "Sc", "sb", "scan"], "A": ["E", "AS", "ATA", "AD", "AF", "GA", "AL", "AN", "L", "Array", "TA", "D", "AA", "AP", "SA", "S", "P", "V", "At", "IA", "AU", "AB", "N", "AC", "NA", "BA", "G", "AR", "PA", "An", "As", "CA", "AT", "LA", "API", "Ax"], "B": ["E", "I", "R", "TB", "GB", "L", "RB", "Y", "Z", "BUS", "M", "D", "BU", "S", "BO", "Bi", "BI", "EB", "BB", "F", "P", "V", "CB", "DB", "BE", "IB", "NB", "AB", "N", "BA", "G", "J", "WB", "BR", "BY", "BC", "T", "BD", "LB", "VB", "Bs"], "C": ["SC", "E", "CI", "I", "MAX", "YC", "R", "Count", "L", "EC", "Q", "Z", "O", "M", "D", "CS", "S", "F", "P", "c", "V", "JC", "N", "U", "AC", "K", "G", "CL", "CC", "BC", "T", "CA"], "X": ["PC", "SC", "E", "XX", "I", "Width", "TX", "R", "L", "Y", "Q", "Z", "M", "D", "XT", "S", "F", "P", "V", "W", "N", "U", "XL", "XP", "K", "G", "J", "H", "DX", "Int", "ZX", "T", "Index"], "cnt": ["cNT", "scnc", "cnc", " cOUNT", "Count", " cct", "Cnt", "Ccount", "tNT", "count", "CNT", "rcnt", " cNT", "Cct", "cst", "cOUNT", "COUNT", "rcNT", "tnt", "scct", " cnc", "Cst", "rcount", " cst", "tst", " count", "scNT", "cct", "rccount", "ccount", "scnt", "tOUNT", " ccount", "Cnc"], "a": ["ar", "aa", "back", "era", "ax", "t", "al", "u", "aq", "ai", "at", "from", "area", "va", "fa", "da", "au", "i", "ab", "oa", "r", "ao", "ba", "an", "am", "v", "ea", "ga", "j", "ia", "isa", "ta", "aj", "ae", "e", "ca", "bar", "as", "la", "att", "alpha", "sa", "ee", "act", "ma", "ac"], "b": ["or", "mb", "business", "bp", "nb", "f", "back", "bb", "obj", "bc", "bin", "bh", "base", "bis", "bg", "bf", "ub", "bl", "i", "ben", "body", "ba", "c", "eb", "lb", "ib", "by", "y", "beta", "two", "bs", "ob", "one", "bo", "cb", "bt", "j", "l", "rb", "binary", "bd", "br", "bar", "db", "be", "bi", "other", "sb"], "x": ["fx", "px", "mix", "xp", "hex", "xd", "ax", "xx", "xt", " xx", "xi", "exp", "xf", "xa", "dx", "ox", "i", "g", "c", "zx", "php", "xc", "v", "ix", "w", "xe", "wx", "rx", "mx", "p", "xy", "ex", "tx", "z", "act", "xxx", "xs"]}}
{"code": "import java.util.Scanner;\\n \\npublic class Main\\n{\\n \\n\tpublic static void main(String[] args)\\n\t{\\n\t\tScanner sc = new Scanner(System.in);\\n \\n\t\tint age = Integer.parseInt(sc.next());\\n \t\tint b = Integer.parseInt(sc.next());\\n\t\t\\n      \tif(age>=13){\\n          System.out.println(b);\\n        }else if(age<=5){\\n          System.out.println(\"0\");\\n        }else{\\n          System.out.println(b/2);\\n        }\\n\t}\\n}", "target": "249", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "exec", "sch", "gc", "sq", "scrib", "sec", "sp", "cont", "c", "cc", "isc", "esc", "src", "cl", "lc", " Sc", "desc", "ctl", "screen", "mc", "nl", "inc", "scl", "cr", "sel", "ch", "tch", "cgi", "conv", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "age": ["ie", "length", "flag", "f", "date", "ime", "pe", "ager", "Age", "area", "hold", "base", "au", "mage", "ages", "type", "ade", "ure", "usage", "code", "ge", "h", "anch", "page", "pg", "ace", "AGE", "a", "ag", "ae", "p", "aka", "le", "file", "grade", "angle", "id", "older", "agen", "ide", "d", "m", "line", "aged", "g", "se"], "b": ["mb", "bp", "nb", "f", "bb", "t", "base", "out", "bf", "i", "ab", "buffer", "B", "r", "sb", "fb", "ba", "n", "wb", "c", "eb", "ib", "by", "v", "bs", "ob", "m", "cb", "j", "l", "a", "rb", "gb", "br", "e", "p", "db", "be", "number", "bi", "z", "d", "bu", "g"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n\\n    new Main().run();\\n  }\\n  public void run() {\\n\\n    try(BufferedReader in = new BufferedReader(new InputStreamReader(System.in))) {\\n      String S = in.readLine();\\n\\n      int f = Integer.parseInt(S.substring(0, 2));\\n      int s = Integer.parseInt(S.substring(2, 4));\\n\\n      String ans;\\n      if(isMonth(f) && isMonth(s)) ans = \"AMBIGUOUS\";\\n      else if (isMonth(f) && !isMonth(s)) ans = \"MMYY\";\\n      else if (!isMonth(f) && isMonth(s)) ans = \"YYMM\";\\n      else ans = \"NA\";\\n\\n      System.out.println(ans);\\n    }\\n    catch(IOException e) {\\n\\n      System.err.println(e);\\n    }\\n  }\\n\\n  public boolean isMonth(int m) {\\n    return 1 <= m && m <= 12;\\n  }\\n}", "target": "5", "substitutes": {"S": ["I", "ASC", "R", "C", "RS", "L", "TS", "SL", "SAN", "SS", "SU", "SR", "A", "M", "SER", "CS", "SA", "JS", "B", "SEC", "PS", "F", "P", "V", "SM", "DS", "SOURCE", "SB", "IS", "N", "STR", "Source", "SF", "SI", "GS", "SO", "Si", "SE", "SP", "NS", "BY", "ST", "Screen", "SN", "SAM", "BS", "RAW", "SQL"], "f": ["format", "month", "fs", "t", "fort", "family", "sf", "xf", "fac", "lf", "er", "fa", "bf", "i", "x", "fo", "fd", "fc", "z", "r", "F", "c", "h", "y", "fe", "v", "w", "fed", "j", "l", "e", "p", "form", "b", "file", "cf", "field", "fl", "fi", "fm", "fr", "d", "tf"], "s": ["its", "es", "qs", "fs", "hs", "si", "t", "ats", "js", "sts", "se", "sv", "ies", "is", "i", "ins", "ms", "ps", "als", "times", "c", "n", "ves", "os", "south", "tes", "v", "ends", "gs", "p", "b", "ns", "rs", "ls", "ds", "cs", "z", "ss", "xs", "ts"], "ans": ["ras", "ANS", "orts", "offs", " sans", "AN", "anes", "ats", "san", "aps", " pan", "ads", " plans", "eps", "ann", "ums", "ols", "eds", "oss", "ants", "ins", " means", " fans", " asks", "ms", "names", "uns", "ys", "aus", "ks", "an", " scans", "ians", "ones", "os", "amps", "terms", "aos", " spans", "ends", "aces", "posts", "rans", "ts", "beans", "ons", "ens", "anas", " os", " answers", "ots", "ams", "ars", "vers", "ows", "ates", "can", "An", "ns", "ant", "ls", "xs", "Ant", "ean", "works", "leans", "cs", "arms", "arts", "ays", "ents"], "m": ["mmm", "sm", "mt", "month", "mon", "t", "u", "mo", "mm", "M", "k", "mn", "i", "o", "ms", "md", "mi", "months", "c", "n", "dm", "mat", "y", "v", "min", "im", "gm", "j", "l", "mc", "e", "p", "b", "cm", "num", "fm", "z", "d", "g"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner s = new Scanner(System.in);\\n\t\tlong lNum = s.nextInt();\\n\t\tlong rNum = s.nextInt();\\n\t\ts.close();\\n\t\tlong min = 2019;\\n\t\tif (lNum / 2019 == rNum / 2019) {\\n\t\t\tfor (long i = lNum; i < rNum; i++) {\\n\t\t\t\tfor (long j = i + 1; j <= rNum; j++) {\\n\t\t\t\t\tlong amari = (i * j) % 2019;\\n\t\t\t\t\tif (amari < min) {\\n\t\t\t\t\t\tmin = amari;\\n\t\t\t\t\t}\\n\t\t\t\t\tif(amari == 0) {\\n\t\t\t\t\t\tmin = 0;\\n\t\t\t\t\t\tbreak;\\n\t\t\t\t\t}\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}else {\\n\t\t\tmin = 0;\\n\t\t}\\n\t\tSystem.out.println(min);\\n\\n\t}\\n\\n}\\n", "target": "193", "substitutes": {"s": ["sm", "es", "sys", "sl", "ats", "js", "sts", "sv", "obj", "aws", "bis", "is", "abs", "sq", "ses", "ins", "S", "ms", "ps", "r", "ys", "less", "g", "c", "h", "south", "y", "v", "w", "ws", "ts", "l", "sam", "a", "gs", "p", "ns", "rs", "http", "ls", "as", "xs", "ds", "stats", "conv", "sa", "so", "ssl", "ss", "sb", "se"], "lNum": ["iMon", "lUn", "dlDat", "lbDat", "iNumber", "lbBas", "lbNumber", "lbNow", " lDat", "lBas", "iTon", "lNumber", "lLen", " lTon", " lNumber", " lBas", "llUn", "lTon", " lMon", "llLen", " lUn", " lNow", "llNum", "llNow", "iNum", "lbUn", " lLen", "LNumber", "LNum", "dlNumber", "LMon", "lbNum", "lNow", "LTon", "dlNum", "lMon", "dlBas", "lDat", "lbLen"], "rNum": [" rBuff", "rGen", " rOrig", " rNumber", "RNumber", "arNum", "jGener", "rnum", "arDist", " rnum", "jOrd", "lGen", "lNumber", "lLen", "srNum", " rDist", "rOrd", " rGener", "srRange", " rRange", "arGener", "mNum", "rLen", "jNum", " rLen", "mOrig", "rGener", "srnum", " rGen", "srNumber", "rRange", "mNumber", " rOrd", "lRange", "rNumber", "rBuff", "mrLen", "mBuff", "RBuff", "ROrig", "RNum", "rOrig", "rDist", "mrNum", "lnum", "arOrd", "mrGen", "jDist"], "min": ["sort", "status", "sol", "Min", "emin", "summary", "rest", "margin", "none", "default", "test", "max", "minus", "sum", "mint", "len", "init", "Mini", "small", "man", "only", "lock", "step", "print", "delay", "dem", "rel", "minute", "mine", "begin", "ma", "mod", "m", "format", "aug", "tag", "version", "stat", "Minimum", "size", "mi", "err", "tail", "value", "MIN", "second", "master", "local", "mini", "dec", "rand", "lt", "diff", "p", "mins", "in", "temp", "val", "date", "me", "dim", "initial", "amin", "partial", "im", "lower", "aj", "start", "mind", "minimum", "pre"], "i": ["zi", "ie", "hi", "ci", "I", "ami", "si", "ic", "iri", "ai", "ei", "xi", "ims", "is", "ind", "ori", "x", "o", "mi", "y", "im", "gi", "ix", "ui", "ri", "ki", "ia", "l", "ik", "qi", "pi", "multi", "ji", "ij", "it", "ii", "di", "ini", "yi", "li", " Xi", "ti", "bi", "m", "iu", "phi", "ip"], "j": ["jac", "bj", "sim", "js", "jl", "obj", "kh", "k", "ind", "oj", "o", "z", "son", "uj", "h", "jc", "pt", "im", "v", "kid", "jack", "q", "ix", "dj", "json", "l", "pr", "aj", "jp", "jo", "jump", "ji", "J", "ij", "ph", "it", "br", "jit", "meg", "b", "jj", "ja", "other", "rel", "bi", "kj", "str", "gov", "jas", "g", "fr"], "amari": ["Amai", "ammARI", "Amrav", "aminai", "amai", "Amaldi", " amai", "famai", "Amarian", "pmari", " amarian", "amario", " amario", "aminario", "aminarian", "famari", "pmarian", " amrav", "famarian", "amARI", "pmARI", "ammari", " amARI", " amaldi", "ammai", "ammarian", "pmrav", "aminari", "amarian", "amrav", "famaldi", "Amario", "AmARI", "Amari", "amaldi"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint A = sc.nextInt(), B = sc.nextInt(), C = sc.nextInt(), D = sc.nextInt();\\n\t\tint count = 0;\\n\t\tint ans = 0;\\n\t\twhile(count < 101) {\\n\t\t\tif(count >= A && count >= C &&\\n\t\t\t\tcount < B && count < D) {\\n\t\t\t\tans++;\\n\t\t\t}\\n\t\t\tcount++;\\n\t\t}\\n\t\tSystem.out.println(ans);\\n\t}\\n}\\n", "target": "47", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "exp", "sh", "out", "gc", "sq", "scope", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "ko", "lc", " Sc", "ctl", "mc", "jp", "nl", "inc", "acc", "scl", "cr", "ch", "system", "tch", "ck", "ss", "conv", "cle", "cs", "tc", "Sc", "g", "scan"], "A": ["Alpha", "Al", "AS", "AF", "AL", "RA", "AE", "AV", "App", "Ar", "AA", "AP", "AY", "SA", "Act", "ACC", "ACE", "At", "AU", "IA", "AB", "AH", "ART", "AC", "a", "AR", "An", "As", "X", "This", "Ant", "CA", "AT", "LA", "AST", "API", "Ax"], "B": ["Ber", "FB", "TB", "GB", "OB", "RB", "BL", "Ab", "JB", "BO", "Bi", "BI", "EB", "BB", "DB", "BE", "SB", "Base", "BF", "IB", "NB", "AB", "Blue", "BA", "WB", "By", "BR", "Bar", "BC", "BS", "Be", "LB", "VB", "Bs"], "C": ["CI", "CN", "YC", "CT", "EC", "CE", "CF", "Cond", "CS", "Ch", "You", "Cu", "Cl", "CB", "CW", "Co", "CR", "JC", "CNN", "DC", "AC", "CD", "G", "CM", "CL", "Config", "CC", "CP", "BC", "CON", "LC", "CG", "Ca", "CO", "Cons", "CA", "Cs"], "D": ["DIR", "MD", "FD", "Both", "DI", "Ds", "Dir", "Do", "DP", "Dr", "Def", "DO", "DB", "DEV", "DS", "DF", "DM", "DC", "DVD", "CD", "GO", "PD", "TH", "DX", "DR", "DE", "DA", "Date", "WD", "DOM", "TD", "d", "DD"], "count": ["time", "flag", "debug", "n", "index", "con", "next", "process", "force", "child", "offset", "empty", "id", "parts", "cs", "test", "found", "counter", "Count", "nb", "ct", "sum", "add", "cd", "cc", "only", "consider", "current", "amount", "print", "cmd", "number", "cache", "list", "cell", "report", "length", "match", "hold", "ind", "stat", "find", "size", "cont", "order", "always", "state", "total", "nt", "depth", "trace", "comment", "act", "details", "message", "OUNT", "ctx", "show", "now", "cond", "ach", "check", "c", "code", "ount", "conf", "q", "batch", "quiet", "contact", "continue", "search", "more", "att", "call"], "ans": ["ANS", "orts", "anks", "offs", "anes", "ats", "ums", "faces", "aps", "eds", "ads", "ann", "ints", "ants", "ins", "outs", "uns", "ms", "orders", "mails", "aus", "acs", "an", "n", "ks", "annot", "vs", "ills", "ags", "amps", "books", "ends", "posts", "olds", "asks", "ons", "ens", "ots", "ars", "ows", "ates", "can", "ids", "ns", "ls", "stats", "vals", "ents", "cs", "arts", "atches", "ts"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint x = sc.nextInt();\\n\t\tsc.close();\\n\\n\t\twhile(! primeJudg(x)) {\\n\t\t\tx++;\\n\t\t}\\n\t\tSystem.out.print(x);\\n\t}\\n\\n\t//\u7d20\u6570\u3092\u5224\u65ad\u3059\u308b\u30e1\u30bd\u30c3\u30c9\\n\tpublic static boolean primeJudg(int a){\\n\t\tfor(int i=2 ; i<a ; i++) {\\n\t\t\tif(a%i == 0) {\\n\t\t\t\treturn false;\\n\t\t\t}\\n\t\t}\\n\t\treturn true;\\n\t}\\n}", "target": "183", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "usc", "rc", "sv", "nc", "bc", "asc", "sh", "sch", "sq", "sub", "cv", "uc", "ng", "anc", "fc", "sec", "sp", "c", "cc", "cur", "esc", "isc", "cl", "lc", "Sc", "sr", "ctrl", "desc", "dec", "mc", "RC", "scl", "cr", "ch", "system", "ck", "tch", "txt", "cle", "cs", "ec", "tc", "ss", "scan"], "x": ["fx", "px", "xp", "xd", "ax", "xx", "xt", " xx", "xi", "xf", "xa", "xxxx", "max", "dx", "ox", "i", "client", "g", "n", "index", "xxxxxxxx", "xc", "y", "v", "ix", "yx", "xe", "wx", "yk", "rx", "ue", "xb", "mx", "xy", "xes", "ex", "inx", "X", "tx", "number", "num", "z", "xxx", "ux", "xs"]}}
{"code": "import java.io.*;\\nimport java.util.StringTokenizer;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner in = new Scanner(System.in);\\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\\n\\n        int[][] c = new int[3][3];\\n        for (int i = 0; i < 3; i++) {\\n            c[i] = in.nextIntArray(3);\\n        }\\n        for (int j = 1; j < 3; j++) {\\n            for (int i = 1; i < 3; i++) {\\n                if (c[i][j] - c[i][j - 1] != c[i - 1][j] - c[i - 1][j - 1]) {\\n                    out.println(\"No\");\\n                    out.close();\\n                    return;\\n                }\\n\\n                if (c[j][i] - c[j - 1][i] != c[j][i - 1] - c[j - 1][i - 1]) {\\n                    out.println(\"No\");\\n                    out.close();\\n                    return;\\n                }\\n            }\\n        }\\n        out.println(\"Yes\");\\n\\n\\n        out.close();\\n        //INT OVERFLOW -> USE LONG\\n        //ARR OUT OF BOUNDS\\n    }\\n\\n    static class Scanner {\\n        StringTokenizer st;\\n        BufferedReader br;\\n\\n        public Scanner(InputStream s) {\\n            br = new BufferedReader(new InputStreamReader(s));\\n        }\\n\\n        public Scanner(String s) {\\n            try {\\n                br = new BufferedReader(new FileReader(s));\\n            } catch (FileNotFoundException e) {\\n                e.printStackTrace();\\n            }\\n        }\\n\\n        public String next() {\\n            while (st == null || !st.hasMoreTokens()) {\\n                try {\\n                    st = new StringTokenizer(br.readLine());\\n                } catch (IOException e) {\\n                    e.printStackTrace();\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n\\n        public int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n        public String nextLine() {\\n            String str = \"\";\\n            try {\\n                str = br.readLine();\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            return str;\\n        }\\n\\n        public long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n\\n        public double nextDouble() {\\n            return Double.parseDouble(next());\\n        }\\n\\n        public int[] nextIntArray(int n) {\\n            int[] arr = new int[n];\\n            for (int i = 0; i < n; i++) {\\n                arr[i] = nextInt();\\n            }\\n            return arr;\\n        }\\n\\n        public double[] nextDoubleArray(int n) {\\n            double[] arr = new double[n];\\n            for (int i = 0; i < n; i++) {\\n                arr[i] = nextDouble();\\n            }\\n            return arr;\\n        }\\n\\n        public long[] nextLongArray(int n) {\\n            long[] arr = new long[n];\\n            for (int i = 0; i < n; i++) {\\n                arr[i] = nextLong();\\n            }\\n            return arr;\\n        }\\n\\n        public char[] nextCharArray(int n) {\\n            char[] arr = nextLine().trim().replaceAll(\"\\\\s\", \"\").toCharArray();\\n            return arr;\\n        }\\n\\n        public String[] nextStringArray(int n) {\\n            String[] arr = new String[n];\\n            for (int i = 0; i < n; i++) {\\n                arr[i] = next();\\n            }\\n            return arr;\\n        }\\n    }\\n}\\n", "target": "88", "substitutes": {"in": ["iter", "inside", "din", "io", "IN", "t", "inn", "inner", "from", "ai", "bin", "all", "is", "ind", "ins", "arg", "conn", "r", "on", "rin", "err", "source", "thin", "read", "isin", "init", "en", "info", "con", "s", "local", "l", "doc", "cin", "In", "sin", "inc", "input", "stream", "run", "file", "ini", "rt", "user", "inf", "reader", "str", "ln", "get", "scan"], "out": ["or", "io", "at", "net", "outs", "o", "conn", "n", "os", "en", "con", "output", "w", "hit", "put", "outer", "cin", "screen", "cn", "pool", "gt", "file", "conv", "ou", "pretty", "OUT", "t", "flush", "write", "gc", "sum", "client", "init", "Out", "co", "warn", "print", "ch", "ex", "log", "cache", "set", "list", "ion", "format", "exit", "over", "obj", "r", "on", "err", "name", "external", "it", "can", "nt", "dir", "to", "user", "writer", "error", "sys", "check", "by", "v", "conf", "info", "aos", "update", "res", "null"], "c": ["cmp", "ci", "pc", "C", "cu", "ct", "t", "ic", "u", "rc", "csv", "nc", "k", "gc", "cv", "o", "x", "cd", "fc", "r", "config", "ce", "n", "cc", "cur", "xc", "v", "cal", "conf", "con", "tc", "lc", "cb", "cat", "arc", "a", "co", "mc", "enc", "cr", "p", "ch", "chain", "etc", "b", "dict", "cm", "ca", "cf", "conv", "cp", "dc", "cs", "cache", "ec", "m", "unc", "ac"], "i": ["io", "at", "us", "o", "ir", "index", "y", "ix", "pi", "ii", "id", "fi", "ti", "bi", "phi", "ie", "hi", "ci", "inter", "xi", "ei", "init", "ui", "ik", "qi", "multi", "ex", "ini", "ni", "um", "m", "ion", "iter", "si", "ic", "sim", "oi", "is", "ind", "x", "mi", "ib", "gi", "iat", "ji", "it", "di", "ims", "zi", "iq", "I", "ami", "u", "ai", "me", "im", "v", "info", "q", "this", "ki", "ia", "ri", "ity", "ij", "li", "iu", "ip"], "j": ["ver", "f", "bj", "io", "at", "jl", "js", "t", "obj", "us", "k", "ind", "kj", "x", "job", "o", "fr", "d", "sp", "err", "uj", "n", "jc", "pt", "y", "v", "im", "bs", "q", "s", "dj", "json", "l", "pr", "next", "aj", "jp", "jump", "let", "J", "ij", "ot", "br", "it", "res", "ji", "p", "b", "jj", "other", "to", "rel", "bi", "z", "str", "m", "g", "ja"]}}
{"code": "import java.util.*;\\nclass Main{\\n  public static void main(String[] args){\\n    Scanner scan=new Scanner(System.in);\\n    int x=scan.nextInt();\\n    int y=x;\\n    if(x==2){\\n      System.out.println(x);\\n    }else {\\n      while(true){\\n        boolean ok=true;\\n        for(int i=2;i<y;i++){\\n          if(y%i==0){\\n            ok=false;\\n            break;\\n          }\\n        }\\n        if(ok){\\n          break;\\n        }\\n        y++;\\n      }\\n      System.out.println(y);\\n    }\\n  }\\n}", "target": "183", "substitutes": {"scan": ["connect", "sys", "get", "san", "Scan", "sv", "re", "ann", "sync", "send", "reach", "k", "out", "gate", "stat", "na", "find", "save", "skip", "parse", "sum", "r", "check", "an", "n", "read", "ser", "by", "v", "scroll", "query", "ner", "sky", "sin", "ch", "can", "system", " Scan", "run", "search", "seek", "row", "in", "begin", "m", "sc", "g", "se"], "x": ["fx", "px", "xp", "xd", "ax", "t", "xx", "xt", " xx", " cx", "xi", "xf", "xa", "xxxx", "max", "dx", "ox", "height", "g", "c", "n", "index", "v", "xc", "s", "ix", "yx", "w", "xe", "l", "wx", "rx", "ey", "step", "mx", "p", "xy", "ex", "tx", "X", "id", "width", "xxx", "z", "d", "m", "xs"], "y": ["ye", "cy", "vy", "py", "sys", "t", "xx", "Y", "wy", "ies", "oy", "count", "year", "out", "gy", "sum", "yo", "size", "uy", "sy", "z", "ym", "ys", "c", "n", "iy", "yt", "index", "dy", "ty", "ry", "v", "j", "l", "ey", "sky", "my", "iny", "e", "p", "xy", "ny", "ch", "b", "yi", "yy", "ady", "m", "ay"], "i": ["zi", "iter", "I", "hi", "ci", "\u0438", "si", "io", "t", "sim", "ic", "oi", "us", "xi", "ai", "ei", "base", "is", "ori", "mi", "n", "cli", "uli", "mu", "gi", "im", "init", "ix", "ui", "ri", "ki", "j", "qi", "pi", "multi", "ji", "it", "ii", "chain", "di", "ini", "yi", "li", "fi", "ti", "bi", "d", "m", "iu", "phi", "g", "ip"], "ok": ["iter", "ack", "Ok", "boot", "rc", "town", "bc", "ak", "k", "out", "op", "o", "par", "ms", "oc", "md", "err", "check", "arm", "ir", "app", "ob", "ko", "ook", "OK", "valid", "bo", "ready", "good", "ik", "res", "req", "ocr", "it", "ot", "oly", "ck", "ops", "warn", "fail", "fresh", "none", "mod", "og"]}}
{"code": "import java.util.Scanner;\\n\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner input = new Scanner(System.in);\\n        int N = input.nextInt();\\n        int A = input.nextInt();\\n        int B = input.nextInt();\\n        if (N+A+B > 21){\\n            System.out.println(\"bust\");\\n        }else {\\n            System.out.println(\"win\");\\n        }\\n\\n//        for (int i = 0; i < N; i++){\\n//            for (int j = 0; j < A; j++){\\n//\\n//            }\\n//        }\\n    }\\n}\\n", "target": "129", "substitutes": {"input": ["format", " Input", "history", "socket", "utils", "storage", "view", "select", "iterator", "inner", "raw", " inputs", "exec", "sum", "agent", "Input", "add", "client", "conn", "subject", "source", "image", "index", "submit", "unsigned", "init", "q", "output", "parser", "kernel", "json", "next", "process", "pattern", "lat", "char", "service", "inc", "start", "print", "system", "cmd", "quick", "command", "active", "accept", "proc", "row", "in", "reader", "str", "list", "self", "get", "scan"], "N": ["E", "CN", "I", "NN", "NM", "R", "NC", "C", "L", "Na", "NO", "NT", "M", "D", "S", "F", "P", "V", "n", "NR", "CNN", "Ni", "DN", "NP", "NB", "TN", "NW", "GN", "NA", "K", "G", "J", "NH", "H", "New", "NS", "X", "SN", "T"], "A": ["AS", "AD", "AF", "GA", "AL", "RA", "AN", "AV", "AA", "AP", "AY", "ACT", "SA", "HA", "ACC", "ACE", "P", "AU", "AK", "IA", "AB", "AH", "AC", "AGE", "AM", "a", "Ast", "JA", "BA", "ESS", "AR", "An", "Av", "As", "Ant", "This", "AT", "LA", "Ax"], "B": ["FB", "E", "I", "R", "TB", "C", "L", "Y", "Z", "O", "M", "D", "S", "BI", "EB", "BB", "F", "P", "V", "DB", "BE", "W", "BF", "IB", "AB", "Two", "BA", "G", "J", "b", "BR", "BY", "Bar", "BC", "T", "LB", "VB"]}}
{"code": "import java.util.*;\\n\\nimport static java.lang.System.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        long N = sc.nextLong();\\n\\n        // \u30eb\u30fc\u30c8N * \u30eb\u30fc\u30c8N\u306e\u3068\u304d\u304c\u6700\u3082\u6700\u5c0f\\n        long divide1 = (long) Math.sqrt(N);\\n\\n        while(N % divide1 != 0) {\\n            divide1--;\\n        }\\n        long divide2 = N / divide1;\\n\\n        int len1 = String.valueOf(divide1).length();\\n        int len2 = String.valueOf(divide2).length();\\n\\n        out.println(Math.max(len1, len2));\\n    }\\n}", "target": "61", "substitutes": {"sc": ["SC", "sm", "osc", "pc", "sys", "syn", "sl", "usc", "tk", "sv", "rc", "nc", "bc", "sync", "sh", "cam", "sch", "sq", "sub", "anc", "sec", "sp", "c", "isc", "esc", "soc", "cl", "lc", "Sc", "desc", "mc", "acc", "scl", "cr", "capt", "ch", "system", "sel", "sa", "dc", "cs", "ec", "asc", "ss", "sb", "scan"], "N": ["E", "I", "R", "nb", "C", "L", "Z", "NT", "M", "D", "S", "B", "F", "P", "V", "n", "nn", "NUM", " n", "nu", "K", "J", "H", "sn", "NS", "X", "nt", "T"]}}
{"code": "import java.io.InputStream;\\nimport java.io.IOException;\\nimport java.util.NoSuchElementException;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        final MyScanner sc = new MyScanner();\\n        int n = sc.nextInt();\\n        int m = sc.nextInt();\\n        int[] a = new int[m];\\n        for (int i = 0; i < m; i++) {\\n            a[i] = sc.nextInt();\\n        }\\n\\n        final int MOD = 1000000007;\\n        long dp[] = new long[n + 1];\\n        dp[0] = 1;\\n        int temp = 0;\\n        for (int i = 1; i <= n; i++) {\\n            if (temp < m && a[temp] == i) {\\n                temp++;\\n                continue;\\n            }\\n            dp[i] += dp[i - 1];\\n            /*while (dp[i] >= MOD) {\\n                dp[i] -= MOD;\\n            }*/\\n            dp[i] %= MOD;\\n            if (i - 2 >= 0) {\\n                dp[i] += dp[i - 2];\\n                /*while (dp[i] >= MOD) {\\n                    dp[i] -= MOD;\\n                }*/\\n                dp[i] %= MOD;\\n            }\\n        }\\n        System.out.println(dp[n]);\\n    }\\n}\\n\\nclass MyScanner {\\n    private final InputStream in = System.in;\\n    private final byte[] buffer = new byte[1024];\\n    private int pointer = 0;\\n    private int bufLength = 0;\\n\\n    private boolean hasNextByte() {\\n        if (pointer < bufLength) {\\n            return true;\\n        } else {\\n            pointer = 0;\\n            try {\\n                bufLength = in.read(buffer);\\n            } catch (final IOException e) {\\n                e.printStackTrace();\\n            }\\n            if (bufLength <= 0) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    private int readByte() {\\n        if (hasNextByte()) {\\n            return buffer[pointer++];\\n        } else {\\n            return -1;\\n        }\\n    }\\n\\n    private static boolean isNumberChar(final int c) {\\n        return '0' <= c && c <= '9';\\n    }\\n\\n    private static boolean isPrintableChar(final int c) {\\n        return 33 <= c && c <= 126;\\n    }\\n\\n    public boolean hasNext() {\\n        while (hasNextByte() && !isPrintableChar(buffer[pointer])) {\\n            pointer++;\\n        }\\n        return hasNextByte();\\n    }\\n\\n    public String next() {\\n        if (!hasNext()) {\\n            throw new NoSuchElementException();\\n        }\\n        final StringBuilder sb = new StringBuilder();\\n        int b = readByte();\\n        while (isPrintableChar(b)) {\\n            sb.appendCodePoint(b);\\n            b = readByte();\\n        }\\n        return sb.toString();\\n    }\\n\\n    public long nextLong() {\\n        if (!hasNext()) {\\n            throw new NoSuchElementException();\\n        }\\n        long num = 0;\\n        boolean isNegative = false;\\n        int b = readByte();\\n        if (b == '-') {\\n            isNegative = true;\\n            b = readByte();\\n        }\\n        if (!isNumberChar(b)) {\\n            throw new NumberFormatException();\\n        }\\n        while (true) {\\n            if (isNumberChar(b)) {\\n                num *= 10;\\n                num += b - '0';\\n            } else if (b == -1 || !isPrintableChar(b)) {\\n                return isNegative ? -num : num;\\n            } else {\\n                throw new NumberFormatException();\\n            }\\n            b = readByte();\\n        }\\n    }\\n\\n    public int nextInt() {\\n        final long temp = nextLong();\\n        if (temp < Integer.MIN_VALUE || Integer.MAX_VALUE < temp) {\\n            throw new NumberFormatException();\\n        }\\n        return (int) temp;\\n    }\\n\\n    public double nextDouble() {\\n        return Double.parseDouble(next());\\n    }\\n}\\n", "target": "174", "substitutes": {"sc": ["SC", " SC", "osc", "pc", "sys", "ctx", "si", "ic", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "mp", "sh", "gc", "sch", "sq", "fc", "sec", "sp", "cc", "isc", "esc", "ser", "cl", "lc", "irc", "Sc", " Sc", "arc", "ctl", "desc", "ctrl", "mc", "scl", "cr", "ch", "st", "conv", "dc", "cs", "ec", "tc", "ss"], "n": ["nm", "nb", "t", "ic", "nc", "net", "mn", "nan", "na", "x", "o", "no", "ng", "ms", "size", "r", "on", "len", "an", "nn", "h", "name", "y", "v", "en", "N", "j", "l", "nl", "np", "pi", "e", "cn", "p", "sn", "ns", "nt", "number", "z", "d", "ne", "g"], "m": ["sm", "mb", "mt", "length", "em", "nm", "t", "mo", "bm", "mm", "M", "mn", "k", "ma", "o", "ms", "module", "r", "md", "mi", "len", "dm", "h", "mu", "med", "v", "man", "gm", "N", "j", "perm", "l", "mc", "mem", "mx", "e", "p", "tm", "cm", "d", "mod"], "a": ["aw", "ar", "aa", "ai", "wa", "area", "xa", "all", "A", "fa", "da", "au", "ma", "ava", "na", "ab", "pa", "oa", "ao", "ba", "an", "am", "ap", "s", "ea", "ga", "sta", "ta", "aaa", "e", "apa", "p", "ca", "ata", "alpha", "as", "att", "sa", "d", "ac"], "i": ["io", "o", "iu", "index", "y", "ix", "l", "you", "pi", "ii", "id", "ti", "bi", "phi", "ie", "hi", "ci", "t", "ei", "xi", "ori", "parent", "client", "cli", "init", "ui", "j", "qi", "multi", "chain", "ex", "ini", "list", "ion", "iter", "iso", "si", "ic", "sim", "oi", "inner", "mm", "is", "ind", "x", "mi", "err", "gi", "ji", "it", "p", "di", "z", "zi", "I", "ami", "\u0438", "u", "ai", "me", "iy", "im", "v", "info", "q", "ri", "ki", "batch", "ij", "PI", "li", "point", "ip"], "MOD": ["MAC", "MAX", "AD", " Mod", "MD", "FD", "R", "RO", "OUT", "SIZE", "REM", "MAT", "RT", "POS", "M", "MED", "VER", "TYPE", "MC", "MODE", "MP", "P", "LOC", "TAG", "NUM", "TW", "MIN", "SPEC", "MW", "N", "MAP", "OK", "Mod", "Mods", "PD", "RED", "VALUE", "MS", "MT", " MAX", "METHOD", " mod", "BC", "Length", "mod", "TM"], "dp": ["px", "bps", "wd", "bp", "dep", " df", "pb", "dd", "pp", "grad", "dq", "wp", "dim", "wordpress", "DP", "deb", "gp", "vp", "dump", "ps", "pa", "pd", "tp", "pm", "dial", "pkg", "df", "rpm", "dm", "lip", "php", "password", "pas", "dl", "dh", "lp", "jp", "hp", "lat", "dos", "adr", "p", "pipe", "resp", "di", "dt", "ds", "dc", "cp", "d", " gp"], "temp": ["iter", "perature", "cu", "t", "tim", "sim", "mm", "fac", "porary", "stem", "max", "vi", "base", "k", "tmp", "mint", "mi", "partial", "tr", "mu", "index", "prime", "pt", "v", "emp", "Temp", "prefix", "term", "j", "variable", "ta", "mod", "current", "pi", "multi", "tem", "p", "tm", "pre", "total", "di", "ex", "null", "template", "Temperature", "ptr", "nom", "d", "tc", "test"], "in": ["ar", "din", "io", "ic", "t", "IN", "inn", "inner", "from", "mm", "is", "out", "ind", "ins", "r", "on", "rin", "err", "read", "isin", "h", "min", "conf", "info", "con", "nin", "l", "gin", "cin", "In", "inc", "diff", "it", "input", "p", "run", "stream", "file", "ini", "ex", "as", "user", "to", "inf", "log", "reader", "get"], "buffer": ["Buffer", "uf", "iter", "length", "sequence", "library", "bb", "window", "display", "bone", "base", "phrase", "data", "button", "size", "reference", "code", "context", "source", "read", "database", "page", "bytes", "password", "value", "device", "output", "limit", "batch", "variable", "header", "available", "memory", "table", "buff", "binary", "screen", "mem", "input", "document", "p", "stream", "queue", "command", "bar", "result", "stack", "template", "file", "null", "row", "buf", "cache", "block", "address", "frame", "message"], "pointer": ["Ptr", "sequence", "length", "path", "word", "pc", "slot", "pod", "counter", "inter", "location", "relative", "zone", "position", "collection", "iterator", "inner", "shift", "operation", "axis", "condition", "forward", "primary", "padding", "adjusted", "reset", "button", "tmp", "tip", "client", "loop", "progress", "reference", "request", "dimension", "context", "key", "index", "page", "address", "peer", "column", "processor", "points", "next", "hole", "memory", "current", "positive", "step", "created", "continue", "p", "handler", "fp", "chain", "connection", "child", "offset", "seek", "pointers", "mouse", "vector", "top", "pad", "number", "ptr", "row", "trace", "point", "frame"], "bufLength": ["bufSize", "bufDuration", "bufferLen", "buffLength", "buffCount", "bufferENGTH", "bufferDuration", "ufLen", "buflength", "ufLength", " buflength", "buffENGTH", "queueDuration", "uflength", "bufferCount", " bufCount", "bufferlength", "bufferLength", "ufENGTH", "bufENGTH", "queueLength", " bufLen", "bufLen", "queueENGTH", "buffSize", "queueLen", "ufSize", "queuelength", " bufDuration", "bufferSize", "bufCount", "buffLen", " bufENGTH"], "c": ["cap", "pc", "const", "f", "C", "ct", "cu", "t", "ic", "u", "content", "rc", "bc", "fac", "abc", "count", "gc", "x", "uc", "cond", "cod", "col", "r", "fc", "z", "cont", "cd", "code", "cc", "ce", "h", "y", "v", "con", "tc", "w", "lc", "cb", "cat", "l", "arc", "char", "mc", "enc", "acc", "e", "ch", "p", "etc", "cm", "vc", "cf", "ca", "conv", "dc", "cp", "cs", "cache", "ec", "d", "unc", "cell", "g", "ac"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\tint N = sc.nextInt();\\n\t\tint M = sc.nextInt();\\n\\n\t\tint maxL = 0;\\n\t\tint minR = 0;\\n\t\tfor(int i=0; i<M; i++) {\\n\t\t\tif(i == 0) {\\n\t\t\t\tmaxL = sc.nextInt();\\n\t\t\t\tminR = sc.nextInt();\\n\t\t\t} else {\\n\t\t\t\tint L = sc.nextInt();\\n\t\t\t\tint R = sc.nextInt();\\n\\n\t\t\t\tmaxL = maxL < L ? L : maxL;\\n\t\t\t\tminR = minR > R ? R : minR;\\n\t\t\t}\\n\t\t}\\n\\n\t\tint count = maxL>minR ? 0 : minR-maxL+1;\\n\t\tprintln(count);\\n\t}\\n\\n\tpublic static void println(Object o) {\\n\t\tSystem.out.println(o);\\n\t}\\n}", "target": "124", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "sv", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "uc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "ser", "cl", "ko", "lc", "irc", " Sc", "ctl", "dec", "ctrl", "desc", "mc", "inc", "scl", "cr", "capt", "ch", "ck", "tch", "cgi", "ss", "sci", "conv", "dc", "ssl", "cs", "tc", "Sc", "sb", "scan"], "N": ["E", "I", "NN", "NM", "C", "Z", "NT", "D", "S", "MN", "F", "P", "V", "n", "NR", "NL", "NA", "K", "G", "J", "H", "NS", "X", "SN", "T", "Ns"], "M": ["MA", "I", "NM", "MD", "C", "O", "D", "S", "B", "MC", "MN", "IM", "MP", "F", "P", "V", "MI", "U", "MAN", "MM", "K", "G", "MX", "J", "CM", "H", "MS", "MT", "LM", "T", "Mi", "m"], "maxL": ["medM", "axM", "axS", "maxH", "fullM", " maxH", "MaxS", "axR", "maxG", "MaxR", "MaxL", "currentR", "minH", "maxN", "medR", "minN", "MaxM", "axL", " maxN", "maxl", "minl", "currentL", "axV", "loadR", " maxM", " maxR", "bestl", " maxG", "loadl", "axl", "fullN", " maxS", "fullR", "bestM", "minG", "bestR", "loadL", "currentM", "currentN", "axN", " maxV", "fullL", "MaxV", "medH", "MaxG", "maxV", "minL", "bestL", "minM", "maxM", "maxR", "MaxN", "medL", "maxS", " maxl"], "minR": ["minimumR", "minRT", "minusN", "maxRE", "maxW", "mCR", "MinRO", "intOR", "maxN", "specRT", "maxRes", "MinCR", "intL", "MinR", " minRE", "minN", "mL", " minr", "MinM", " minRO", " minRes", "minimumRT", "minusL", "specL", "minusRes", "intR", "minOR", "preL", "minimumL", "minRE", " minCR", "maxRT", " minP", "preRO", " minM", "MinRE", "MinL", "maxP", "minW", "specR", " minL", "minusR", " minN", "intr", "minRO", "mR", "mM", "maxOR", "minCR", " minW", " minOR", " minRT", "preR", "minRes", "maxr", "MinP", "minP", "minL", "minM", "maxR", "Minr", "minr", "specW", "minimumRE", "prer"], "i": ["iter", "I", "hi", "ci", "ie", "status", "io", "si", "t", "ic", "u", "sim", "ai", "xi", "us", "ind", "x", "mi", "cli", "index", "init", "v", "y", "gi", "q", "ix", "ui", "info", "j", "batch", "l", "a", "qi", "pi", "multi", "ji", "ij", "it", "e", "ii", "chain", "gu", "di", "ex", "ini", "id", "li", "ti", "bi", "set", "m", "iu", "phi", "ip"], "L": ["LV", "DL", "PL", "FL", "EL", "LI", "AL", "Lu", "SL", "BL", "TL", "O", "LO", "Li", "VL", "GL", "Line", "RL", "P", "OL", "LL", "LG", "NL", " l", "HL", "ML", "l", "LT", "XL", "G", "CL", "IL", "X", "LM", "UL", "dL", "LC", "LE", "LA", "LY", "Left"], "R": ["E", "RG", "RES", "Row", "RH", "RO", "RA", "RS", "JR", "Res", "RB", "C", "SR", "RT", "Q", "Z", "O", "D", "B", "RL", "r", "RGB", "P", "V", "HR", "NR", "CR", "RE", "RR", "IR", "KR", "RC", "G", "AR", "H", "Right", "TR", "MR", "BR", "RM", "DR", "GR", "Rs", "ER", "T", "RF"], "count": ["report", "flag", "length", "status", "counter", "Count", "nb", "const", "ct", "ind", "stat", "sum", "ctr", "cd", "size", "cycle", "check", "c", "n", "index", "ount", "value", "info", "q", "current", "amount", "print", "continue", "child", "total", "result", "nt", "number", "num", "list", "comment", "val"], "o": ["go", "zero", "iso", "f", "t", "u", "obj", "mo", "O", "k", "ooo", "oa", "c", "n", "lo", "object", "os", "y", "v", "s", "q", "w", "bo", "oo", "j", "po", "a", "oin", "e", "p", "so", "vo", "d", "m", "g"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\npublic class Main\\n{\\n    static PrintWriter out=new PrintWriter((System.out));\\n    public static void main(String args[])throws IOException\\n    {\\n        Reader sc=new Reader();\\n        int a=sc.nextInt();\\n        int b=sc.nextInt();\\n        out.println(a*b);\\n        out.close();\\n    }\\n\\n    public static void solve()\\n    {\\n    }\\n\\n    static class Reader\\n    {\\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\\n        StringTokenizer st=new StringTokenizer(\"\");\\n        public String next()\\n        {\\n            while(!st.hasMoreTokens())\\n            {\\n                try\\n                {\\n                    st=new StringTokenizer(br.readLine());\\n                }\\n                catch(Exception e)\\n                {\\n                    e.printStackTrace();\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n\\n        public int nextInt()\\n        {\\n            return Integer.parseInt(next());\\n        }\\n\\n        public long nextLong()\\n        {\\n            return Long.parseLong(next());\\n        }\\n\\n        public double nextDouble()\\n        {\\n            return Double.parseDouble(next());\\n        }\\n\\n        public String nextLine()\\n        {\\n            try\\n            {\\n                return br.readLine();\\n            }\\n            catch(Exception e)\\n            {\\n                e.printStackTrace();\\n            }\\n            return null;\\n        }\\n\\n        public boolean hasNext()\\n        {\\n            String next=null;\\n            try\\n            {\\n                next=br.readLine();\\n            }\\n            catch(Exception e)\\n            {\\n            }\\n            if(next==null)\\n            {\\n                return false;\\n            }\\n            st=new StringTokenizer(next);\\n            return true;\\n        }\\n    }\\n}\\n", "target": "35", "substitutes": {"out": ["writer", "error", "sys", "OUT", "io", "t", "at", "window", "flush", "obj", "net", "write", "console", "outs", "o", "conn", "std", "r", "err", "c", "n", "fn", "name", "os", "v", "info", "con", "aos", "output", "w", "Out", "this", "screen", "co", "println", "res", "print", "input", "p", "ch", "stream", "txt", "file", "nt", "null", "dir", "to", "ou", "in", "log", "str", "list", "cache"], "sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "ic", "usc", "sv", "rc", "nc", "bc", "asc", "sac", "sh", "sch", "gc", "sq", "fc", "r", "sp", "c", "cc", "esc", "isc", "cl", "lc", "ctl", "mc", "scl", "cr", "ch", "tch", "rs", "dc", "cs", "ec", "tc", "Sc", "cus"], "a": ["eff", "aa", "era", "aq", "ai", "area", "xa", "va", "A", "au", "ava", "na", "x", "ab", "oa", "r", "ao", "c", "ba", "n", "an", "s", "ea", "ia", "sta", "ta", "aj", "ae", "aaa", "aff", "e", "p", "ca", "as", "la", "alpha", "sa", "z", "d", "ma", "ac"], "b": ["nb", "back", "bb", "bc", "bis", "bl", "bf", "i", "ab", "B", "r", "sb", "body", "fb", "blue", "n", "ba", "c", "wb", "eb", "ib", "beta", "y", "v", "ob", "s", "l", "rb", "BA", "gb", "e", "p", "bar", "db", "be", "bi", "z", "d", "g"], "br": ["bp", "pb", "bb", "bre", "bc", "bh", "dr", "bro", "bl", "bf", "ctr", "gr", "r", "sp", "err", "tr", "shr", "bsp", "yr", "lr", "bt", "pr", "Br", "sr", "mr", "rb", "cr", "vr", "ch", "kr", "p", "BR", "pre", "browser", "rel", "ptr", "nr", "hr", "buf", "fr", "bi", "ber", "el", "wr", "bn"], "st": ["sm", "stable", "mt", "ist", "sw", "est", "sty", "const", " ST", "storage", "ct", "sl", "t", "th", "sts", "sv", "dr", "irst", "wt", "inst", "struct", "stat", "stri", "ste", "spe", "tmp", "std", "r", "sp", "ust", "tr", "ut", "lo", "pt", "fe", "ast", "s", "cl", "St", "bt", "sta", "rest", "start", "nl", "stop", " St", "tt", "cr", "form", "ST", "nd", "nt", "so", "null", "ss", "ld", "str", "fr", "et", "ts", "ost"], "next": ["env", "net", "front", "node", "about", "expr", "response", "sec", "subject", "cur", "n", "read", "page", "index", "head", "valid", "output", "future", "Next", " NEXT", "append", "result", "see", "line", "sequ", "test", "path", "iterator", "write", "link", "ng", "j", "current", "nl", "chain", "nd", "txt", "ptr", "then", "str", "draw", "sen", "want", "sequence", "success", "match", "stat", "lo", "value", "second", "ner", "prev", "extra", "tri", "queue", "end", "ext", "trace", "fr", "frame", " Next", "first", "all", "reply", "last", "forward", "primary", "inv", "code", "entry", "key", "label", "info", "expected", "space", "desc", "start", "jp", "continue", "search", "accept", "null", "ln", "query", "ne", "get"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        // Your code here!\\n        Scanner sc = new Scanner(System.in);\\n        \\n        int N = sc.nextInt();\\n        int L = sc.nextInt();\\n        sc.nextLine();\\n        String S[] = new String[N];\\n        \\n        for(int i=0 ; i< N ; i++){\\n            S[i] = sc.nextLine();\\n        }\\n        \\n        Arrays.sort(S);\\n        \\n        for(String i:S){\\n            System.out.print(i);\\n        }\\n    }\\n}\\n", "target": "224", "substitutes": {}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        Scanner in = new Scanner(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        ABC120_2 solver = new ABC120_2();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class ABC120_2 {\\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\\n            int A = in.nextInt();\\n            int B = in.nextInt();\\n            int K = in.nextInt();\\n            int a = Math.max(A, B);\\n            int b = Math.min(A, B);\\n            int counter = b;\\n            while (true) {\\n                if ((a % counter == 0) && (b % counter == 0)) {\\n                    K--;\\n                    if (K == 0) {\\n                        out.println(counter);\\n                        return;\\n                    }\\n                }\\n                counter--;\\n            }\\n        }\\n\\n    }\\n}\\n\\n", "target": "134", "substitutes": {"inputStream": ["fileStreamer", " inputSteam", "sourceStreamer", "filestream", " inputSource", "addressSource", "inputStreamer", "outputSource", "outputStyle", "sourceSteam", "inputStyle", "outputstream", "addressSteam", " inputStyle", "inputSource", "outputSteam", "addressStream", "fileSteam", "addressStyle", "sourcestream", "fileStream", "sourceStream", "inputstream", "inputSteam", "outputStreamer"], "outputStream": ["outputView", "OutputSteam", "outStream", "updateView", "outputForm", "outputWriter", "inputStreamer", "outForm", "networkWriter", "networkStreamer", "OutputPath", "OutputForm", "inputView", "networkStream", " outputForm", "updateWriter", " outputPath", "outPath", "outputSteam", "OutputStream", " outputSteam", "outSteam", "updateStream", "outputStreamer", "inputWriter", "updateStreamer", "outputPath", "networkView"], "in": ["io", "serv", "raw", "sol", "i", "o", "conn", "n", "source", "ir", "en", "con", "l", "doc", "cin", "In", "form", "file", "id", "din", "t", "add", "client", "thin", "isin", "init", "s", "current", "stream", "run", "ini", "log", "reader", "scan", "iter", "ic", "inner", "mm", "bin", "is", "ind", "ins", "r", "on", "mi", "err", "local", "sin", "it", "p", "can", "rt", "dir", "inf", "end", "inside", "IN", "inn", "rin", "lin", "context", "h", "im", "info", "this", "gin", "inc", "input", "cm", "null", "kin", "get", "call"], "out": ["writer", "report", "auto", "sys", "OUT", "io", "t", "at", "flush", "inner", "net", "write", "gc", "ins", "outs", "o", "client", "err", "up", "c", "n", "by", "name", "os", "v", "server", "en", "s", "OU", "aos", "output", "w", "Out", "this", "update", "comment", "outer", "table", "co", "current", "screen", "res", "it", "print", "cn", "p", "can", "run", "cmd", "ch", "txt", "ex", "group", "null", "nt", "user", "to", " Out", "end", "ou", "log", "list", "set", "ln", "help", "scan"], "solver": ["esolver", " soln", "esolution", "Solution", "resolver", "resoln", "resorter", "esorter", " solution", "soln", "esolve", "Solve", "Sorter", "solve", "resolution", "Soln", " solve", "sorter", "Solver", "resolve", "solution"], "testNumber": [" testNum", "testnumber", " testnum", "testnum", "testNum", " attemptNum", " attemptNumber", " simNum", " simNumber", " testnumber", " attemptnum", " attemptnumber", " simnumber", " simnum"], "A": ["Alpha", "AS", "AF", "AL", "RA", "AN", "C", "L", "Area", "AV", "Array", "TA", "AA", "AP", "ACT", "SA", "HA", "ACC", "IA", "AU", "AB", "AC", "EA", "AGE", "AM", "JA", "ACA", "ESS", "BA", "AR", "An", "As", "X", "mA", "This", "ALL", "LA", "AST", "AT", "API", "UA", "CA"], "B": ["Ber", "FB", "I", "TB", "GB", "OB", "C", "L", "RB", "Y", "BL", "PB", "BU", "BO", "USB", "BI", "EB", "BB", "V", "DB", "BE", "SB", "IB", "NB", "AB", "N", "GO", "BA", "J", "VB", "WB", "BR", "BY", "Bar", "BC", "Other", "BS", "BW", "LB", "BG", "Bs", "BER"], "K": ["E", "I", "KING", "R", "Count", "C", "L", "PK", "FK", "Y", "Q", "Z", "O", "M", "k", "D", "S", "Counter", "BB", "F", "P", "V", "key", "W", "KK", "N", "kernel", "KR", "KER", "Ka", "G", "J", "H", "KI", "KB", "KA", "BC", "X", "T", "State", "KS"], "a": ["ar", "aa", "t", "at", "u", "re", "ai", "au", "ma", "AA", "i", "na", "ab", "x", "oa", "r", "ao", "an", "ba", "n", "am", "s", "ea", "ga", "ia", "ua", "ta", "aj", "e", "p", "ca", "ata", "alpha", "as", "sa", "z", "m", "ac"], "b": ["bp", "zero", "auto", "nb", "f", "bb", "t", "bc", "integer", "k", "i", "ab", "r", "BI", "sb", "BB", "fb", "c", "ba", "n", "eb", "beta", "ib", "by", "y", "v", "bs", "ob", "Number", "NB", "OK", "N", "cb", "j", "l", "rb", "e", "br", "p", "bar", "db", "be", "number", "bi", "z", "d", "m", "g"], "counter": ["writer", "sequence", "inter", "nb", "C", "book", "instance", "window", "re", "inner", "TER", "er", "chance", "ter", "card", "count", "k", "condition", "loop", "i", "pointer", "x", "ctr", "walker", "parent", "buffer", "consumer", "r", "Counter", "code", "c", "n", "entry", "key", "index", "currency", "name", "timer", "loader", "value", "function", "second", "page", "NB", "widget", "kernel", "term", "ner", "comment", "processor", "outer", "memory", "finder", "continue", "vector", "controller", "offset", "result", "clock", "nt", "ounter", "callback", "number", "KEY", "register", "frequency", "tc", "point", "cell", "message", "BER"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner scanner = new Scanner(System.in);\\n        int n = Integer.parseInt(scanner.next());\\n        Integer minValue = Integer.parseInt(scanner.next());\\n        Integer maxDiff = -1000000001;\\n        for (int i = 1; i < n; i++) {\\n            int value = Integer.parseInt(scanner.next());\\n            maxDiff = Math.max(maxDiff, value - minValue);\\n            minValue = Math.min(minValue, value);\\n        }\\n        System.out.println(maxDiff);\\n    }\\n}", "target": "208", "substitutes": {"scanner": ["Scanner", "granrer", "canning", " Scanter", " scanning", " Scanner", "Scaner", "scanning", "identener", "scaner", "searchner", "canrer", " Scanener", "scanener", " scanter", "corner", "canter", " Scaner", "scanrer", "corning", "searchners", "corter", "searchener", "granners", "Scanener", " scanener", "scanners", "identn", "granner", "identner", " scaner", "granener", " scann", "identter", "Scanter", "Scann", "corener", "searchrer", "canener", "canner", "scanter", "scann", "canners"], "n": ["nb", "network", "t", "window", "ln", "nc", "net", "count", "nan", "mn", "k", "na", "x", "no", "size", "len", "c", "nn", "name", "v", "en", "N", "j", "l", "nu", "np", "nl", "cn", "p", "sn", "ns", "total", "nt", "number", "num", "nr", "z", "d", "m", "ne"], "minValue": ["preDiff", "minimumVersion", "minString", " minTime", " minString", "maxNumber", "MINVal", "MINValue", "minDiff", "preImage", " minImage", " minvalue", "maxVersion", "maxTime", "minimumValue", "minimumString", "MINvalue", "maxVal", "minvalue", "minimumVal", "minVal", "minVersion", "MinDiff", "minImage", "preString", "minimumNumber", "lowNumber", "smallValue", "minimumImage", " minVal", "smallvalue", "minimumDiff", "minTime", "MinTime", "lowValue", "smallVal", "minNumber", "lowVal", "preValue", "maxValue", "MinVal", " minDiff", "lowVersion", "MinValue"], "maxDiff": ["axDelta", "maxChange", "lastDifferent", "axdiff", "axDifferent", "axDiff", "minDiff", "minDifferent", "lastDiff", "MaxDelta", "maxDelta", "Maxdiff", " maxDist", "MaxDifferent", " maxdiff", "minChange", "axChange", "MaxDist", " maxChange", "maxdiff", "maxDist", "lastDelta", "maxDifferent", "lastDist", "minDelta", " maxDelta", " maxDifferent", "MaxDiff"], "i": ["zi", "iq", "I", "sequence", "ci", "hi", "ie", "si", "sim", "us", "xi", "ei", "me", "ai", " j", "is", "ind", "x", "o", "ms", "z", "mi", "sp", "cli", "y", "init", "im", "gi", "q", "ix", "ui", "j", "qi", "pi", "multi", "my", "it", "ii", "chain", "gu", "ini", "di", "id", "li", " ii", "ti", "bi", "set", "m", "phi", "ip", "asi"], "value": ["sequence", "length", "hello", "attribute", "values", "get", "instance", "position", "window", "version", "scale", "integer", "max", "now", "data", "size", "unit", "maximum", "image", "entry", "key", "index", "object", "v", "function", "expression", "widget", "distance", "this", "variable", "efficiency", "power", "ue", "unknown", "current", "VALUE", "sample", "feature", "Value", "p", "vector", "child", "total", "result", "field", "number", "val", "message"]}}
{"code": "import java.util.Scanner;\\nclass Main{\\n    public static void main(String[] args) {\\n        Scanner scn=new Scanner(System.in);\\n        String a = scn.next();\\n        String b = scn.next();\\n        String answer = \"No\";\\n        int num=Integer.parseInt(a+b);\\n        for(int i=1;i*i<=num;i++){\\n            if(num==i*i){\\n                answer = \"Yes\";\\n                break;\\n            }\\n        }\\n        System.out.println(answer);\\n    }\\n}\\n", "target": "83", "substitutes": {"scn": ["pcb", "pcn", "csain", "Scb", "scanner", " scN", "pcain", " scb", " scner", " scne", "csn", "chns", "pcne", "pcN", "Scn", " scain", "chne", "scain", "pcr", "scne", "csner", "pcner", "scanne", "chner", "chn", "Scr", "scner", "scann", " scr", "scr", "scb", "scanns", "ScN", "csne", "scns", " scns", "scN"], "a": ["ar", "aa", "era", "ax", "at", "al", "aq", "ai", "va", "A", "au", "abs", "ab", "oa", "aria", "ao", "an", "n", "am", "ba", "app", "ea", "ia", "l", "ta", "aj", "ae", "aaa", "aff", "\u00e0", "apa", "aka", "as", "la", "sa", "act", "ma", "ac"], "b": ["mb", "f", "bb", "bc", "bis", "abs", "ub", "ab", "B", "fb", "g", "blue", "ba", "n", "c", "eb", "ib", "beta", "y", "bs", "ob", "s", "cb", "j", "rb", "br", "bar", "bas", "db", "be", "erb", "bi", "d", "sb"], "answer": ["uit", "answered", "said", "quest", "exit", "arent", "remember", "archive", "onse", "open", "aq", "install", "complete", "reply", "offer", "about", "response", "say", "ask", " answered", "maybe", "request", "echo", "review", "value", "q", "output", "ve", "question", "description", "header", "ell", "Answer", "qa", "interpret", "command", "search", "accept", "result", "audio", "wer", "option", "support", " unanswered", "query", "message", "again", "uration"], "num": ["done", "nm", "zero", "mon", "nb", "dim", "net", "Num", "max", "count", "mn", "out", "sum", "na", "no", "alph", "len", "n", "mu", "index", "NUM", "cal", "en", "uno", "con", "Number", "valid", "one", "non", "nu", "ten", "su", "np", "multi", "total", "result", "nt", "um", "number", "nr", "nom", "m", "draw"], "i": ["zi", "iter", "I", "sequence", "ci", "hi", "si", "io", "ic", "sim", "ai", "ei", "xi", "me", "is", "ind", "x", "mi", "n", "cli", "mu", "index", "init", "y", "gi", "v", "ix", "q", "ui", "s", "info", "ri", "ki", "j", "ik", "qi", "pi", "multi", "it", "ii", "p", "chain", "di", "ini", "inx", "ni", "li", "number", "ti", "bi", "z", "m", "iu", "phi", "ip"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\nclass Main{\\n    InputReader in;\\n    final long mod=1000000007;\\n    StringBuilder sb;\\n    public static void main(String[] args) throws java.lang.Exception{\\n        new Main().run();\\n    }\\n    void run() throws Exception {\\n        in=new InputReader(System.in);\\n        sb = new  StringBuilder();\\n        int t=1;\\n        while(t-->0)\\n            solve();\\n        //System.out.print(sb);\\n    } \\n    void solve() {\\n        int i,j;\\n        int n=i(), k=i();\\n        int a[]=new int[n];\\n        int dp[][]=new int[n][k+1];\\n        for(i=0;i<n;i++)\\n            a[i]=i();\\n        for(i=0;i<n;i++)\\n            dp[i][0]=Integer.MAX_VALUE;\\n        for(i=1;i<=k;i++)\\n            dp[1][i]=Math.abs(a[1]-a[0]);\\n        for(i=2;i<n;i++) {\\n            if(i<=k) {\\n                for(j=1;j<=i;j++)\\n                    dp[i][j]=Math.min(dp[i][j-1], dp[i-j][k] + Math.abs(a[i-j]-a[i]));\\n                for(j=i+1;j<=k;j++)\\n                    dp[i][j]=dp[i][j-1];\\n            }\\n            else {\\n                for(j=1;j<=k;j++)\\n                    dp[i][j]=Math.min(dp[i][j-1], dp[i-j][k] + Math.abs(a[i-j]-a[i]));\\n            }\\n        }\\n        System.out.println(dp[n-1][k]);\\n    }\\n    long power(long x, long y, long p) {  \\n        long res = 1;       \\n        x = x % p;  \\n        if (x == 0) return 0;   \\n        while (y > 0) {\\n            if((y & 1)==1) \\n                res = (res * x) % p;  \\n            y = y >> 1;  \\n            x = (x * x) % p;  \\n        } \\n        return res%p; \\n    } \\n    int gcd(int a, int b) {\\n        return (b==0)?a:gcd(b,a%b);\\n    }\\n    String s(){return in.next();}\\n    int i(){return in.nextInt();}\\n    long l(){return in.nextLong();}\\n    class InputReader {\\n        private InputStream stream;\\n        private byte[] buf = new byte[1024];\\n        private int curChar;\\n        private int numChars;\\n        public InputReader(InputStream stream) {\\n            this.stream = stream;\\n        }\\n        public int read() {\\n            if (numChars == -1)\\n                throw new UnknownError();\\n            if (curChar >= numChars) {\\n                curChar = 0;\\n                try {\\n                    numChars = stream.read(buf);\\n                } catch (IOException e) {\\n                    throw new UnknownError();\\n                }\\n                if (numChars <= 0)\\n                    return -1;\\n            }\\n            return buf[curChar++];\\n        }\\n        public int peek() {\\n            if (numChars == -1)\\n                return -1;\\n            if (curChar >= numChars) {\\n                curChar = 0;\\n                try {\\n                    numChars = stream.read(buf);\\n                } catch (IOException e) {\\n                    return -1;\\n                }\\n                if (numChars <= 0)\\n                    return -1;\\n            }\\n            return buf[curChar];\\n        }\\n        public void skip(int x) {\\n            while (x-->0)\\n                read();\\n        }\\n        public int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n        public long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n        public String nextString() {\\n            return next();\\n        }\\n        public String next() {\\n            int c = read();\\n            while (isSpaceChar(c))\\n                c = read();\\n            StringBuffer res = new StringBuffer();\\n            do {\\n                res.appendCodePoint(c);\\n                c = read();\\n            } while (!isSpaceChar(c));\\n \\n            return res.toString();\\n        }\\n        public String nextLine() {\\n            StringBuffer buf = new StringBuffer();\\n            int c = read();\\n            while (c != '\\n' && c != -1) {\\n                if (c != '\\r')\\n                    buf.appendCodePoint(c);\\n                c = read();\\n            }\\n            return buf.toString();\\n        }\\n        public double nextDouble() {\\n            int c = read();\\n            while (isSpaceChar(c))\\n                c = read();\\n            int sgn = 1;\\n            if (c == '-') {\\n                sgn = -1;\\n                c = read();\\n            }\\n            double res = 0;\\n            while (!isSpaceChar(c) && c != '.') {\\n                if (c == 'e' || c == 'E')\\n                    return res * Math.pow(10, nextInt());\\n                if (c < '0' || c > '9')\\n                    throw new InputMismatchException();\\n                res *= 10;\\n                res += c - '0';\\n                c = read();\\n            }\\n            if (c == '.') {\\n                c = read();\\n                double m = 1;\\n                while (!isSpaceChar(c)) {\\n                    if (c == 'e' || c == 'E')\\n                        return res * Math.pow(10, nextInt());\\n                    if (c < '0' || c > '9')\\n                        throw new InputMismatchException();\\n                    m /= 10;\\n                    res += (c - '0') * m;\\n                    c = read();\\n                }\\n            }\\n            return res * sgn;\\n        }\\n        public boolean hasNext() {\\n            int value;\\n            while (isSpaceChar(value = peek()) && value != -1)\\n                read();\\n            return value != -1;\\n        }\\n        private boolean isSpaceChar(int c) {\\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\\n        }\\n    }\\n}", "target": "241", "substitutes": {"in": ["or", "f", "din", "io", "serv", "IN", "inas", "inn", "from", "mm", "bin", "all", "out", "ind", "i", "ins", " IN", " out", "std", "r", "amin", "rin", "err", "help", "n", "cli", "thin", "read", "isin", "en", "info", "con", " input", "ri", "gin", "l", " din", "asin", "rx", "cin", "mc", "In", "sin", "readable", "input", "stream", "ini", "as", "user", "inf", "reader", "ln", "m", "line"], "mod": ["ran", "stable", "MOD", "fun", " Mod", " stamp", "off", "max", "base", "add", "tmp", " mult", "tr", "lo", "prime", "m", "load", "Mod", "dec", "ta", "lock", "start", "mem", "step", "offset", "ptr", "log", "set"], "sb": ["mb", "bp", "sg", "nb", "pb", "bj", "si", "bb", "sf", "sv", "bh", "bf", "sq", "bg", "sp", "BB", "eb", "lb", "kb", "zb", "ib", "SB", "bs", "s", " SB", "ob", "bsp", "bt", "sbm", "rb", "xb", "gb", "bd", "b", "sa", "ssl", "erb", "lp", "sc", "bn"], "t": ["ties", "ent", "sequence", "te", "f", "qt", "window", "wt", "k", "tie", "loop", "i", "tp", "c", "n", "tr", " T", "pt", "y", "tw", "tu", "q", "tc", "j", "ta", "title", "thread", "step", "tt", "p", "tl", "total", "top", "T", "z", "d", "m", "tf", "tree", "g", "ts"]}}
{"code": "import java.util.*;\\n \\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int N = sc.nextInt();\\n    String[] str = new String[N];\\n    Set<String> set = new HashSet<>();\\n    for (int i = 0; i < N; i++) {\\n      str[i] = sc.next();\\n      set.add(str[i]);\\n    }\\n    for (int i = 1; i < N; i++) {\\n      if (str[i].charAt(0) != str[i - 1].charAt(str[i - 1].length() - 1)) {\\n        System.out.println(\"No\");\\n        return;\\n      }\\n    }\\n    if(set.size() == N){\\n      System.out.println(\"Yes\");\\n    }else{\\n      System.out.println(\"No\");\\n    }\\n  }\\n}\\n", "target": "70", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "gc", "sq", "sub", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "ser", "src", "cl", "lc", "arc", "ctl", "desc", "screen", "mc", "scl", "cr", "capt", "ch", "sel", "st", "ss", "sci", "cle", "cs", "tc", "Sc", "scan"], "N": ["I", "NM", "NN", "R", "NC", "C", "ND", "L", "AN", "OUT", "NO", "Z", "Num", "NT", "O", "M", "D", "Net", "S", "B", "Node", "F", "NG", "V", "n", "P", "NR", "NUM", "Ni", "NL", "NB", "TN", "NI", " n", "GN", "NA", "K", "J", "Size", "NH", "H", "NS", "Ne", "Len", "SN", "T", "No", "ALL", "NE", "NOW"], "str": ["format", "iter", "note", "ist", "def", "ct", "sl", "pass", "pos", "sts", "raw", "exp", "sync", "dr", "exec", "inst", "expr", "parse", "gr", "msg", "r", "sp", "err", "rep", "tr", "cur", "arr", "spec", "s", "del", "Str", "STR", "cat", "pr", "desc", "char", "string", "vol", "req", "text", "it", "print", "br", "ch", "form", "chain", "st", "dat", "rs", "txt", "ns", "url", "stack", "ring", "log", "fr", "list", "cache", "tree", "ts"], "set": ["open", "status", "select", "split", "sync", "map", "send", "SET", "sa", "base", "out", "sum", "reset", "add", "save", "no", "size", "use", "check", "n", "sets", "en", "local", "hash", "start", "store", "stop", "it", "seen", "st", "empty", "null", "group", "so", "block", "export", "scan", "end", "num", "sche", "see", "list", "clear", "et", "sign", "get", "se"], "i": ["status", "io", "us", "o", "iu", "n", "y", "ix", "load", "l", "pi", "ii", "id", "fi", "ti", "bi", "fire", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "base", "loop", "ori", "client", "cli", "init", "ui", "j", "uri", "qi", "multi", "print", "chain", "ini", "m", "iter", "sequence", "si", "ic", "sim", "oi", "inner", "is", "ind", "mi", "err", "gi", "ji", "it", "di", "to", "in", "ims", "z", "details", "slice", "zi", "I", "ami", "u", "ai", "me", "c", "im", "v", "info", "q", "ri", "ki", "batch", "this", "ity", "ij", "li", "point", "ip"]}}
{"code": "import java.util.*;\\n \\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    String[] initial = sc.nextLine().split(\"\");\\n    long K = sc.nextLong();\\n    long index = 1;\\n    String answer = \"1\";\\n    for (String num: initial) {\\n      if (num.equals(\"1\") && index < K) {\\n        index++; \\n      } else {\\n        answer = num;\\n        break;\\n      }\\n    }  \\n    System.out.println(answer);\\n  }\\n}", "target": "38", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "sch", "sub", "anc", "sec", "sp", "c", "cc", "isc", "esc", "src", "cl", "lc", "irc", "ctl", "ctrl", "screen", "mc", "inc", "scl", "cr", "sel", "ch", "system", "ck", "ss", "cle", "cs", "tc", "Sc", "sb", "scan"], "initial": [" initials", "UAL", "actual", "special", "history", "internal", "first", "IAL", "before", "amiliar", "given", "human", "primary", "starting", "information", "ial", "Initial", "successful", "full", "ual", "specified", "initialized", "init", "second", "random", "local", "capital", "serial", "available", "current", "normal", "finals", "itial", "nil", "missing", "ital"], "K": ["I", "MAX", "R", "L", "PK", "FK", "VK", "Q", "Z", "A", "M", "k", "D", "S", "B", "F", "P", "V", "Kind", "KK", "N", "SK", "Height", "KR", "Mask", "G", "J", "Size", "H", "KI", "KA", "X", "T", "KEY", "KS", "KN"], "index": ["iter", "open", "access", "length", "zero", "location", "speed", "instance", "position", "pos", "max", "axis", "count", "condition", "ind", "i", "k", "IND", "x", "find", "no", "add", "size", "n", "context", "nn", "key", "label", "address", "column", "j", "lock", "next", "thread", "inc", "loc", "search", "connection", "offset", "id", "Index", "number", "row", "EX", "block", "point", "alias", "ion"], "answer": ["answered", "said", "quest", "archive", "remember", "open", "onse", "aq", "equ", "install", "our", "reply", "offer", "about", "swers", "response", "uration", "say", "quote", "ask", "request", "entry", "echo", "review", "expression", "q", "valid", "output", "ve", "question", "average", "example", "description", "Answer", "form", "interpret", "command", "search", "accept", "result", "ret", "wer", "option", "support", "see", "poll", " unanswered", "query", "message", "again", "vey"], "num": ["note", "nm", "zero", "mon", "snap", "prim", "tim", "sim", "Num", "mn", "sum", "na", "x", "no", "mom", "alph", "rem", "unit", "nam", "n", "NUM", "en", "con", "one", "local", "sam", "a", "nu", "next", "np", "text", "sel", "old", "uu", "result", "um", "ker", "conv", "number", "str", "nom", "m", "block", "draw"]}}
{"code": "import java.util.Arrays;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int n = Integer.parseInt(sc.next());\\n        int k = Integer.parseInt(sc.next());\\n        Boolean[] s = new Boolean[n];\\n        Arrays.fill(s, false);\\n        for (int i = 0; i < k; i++) {\\n            int d = Integer.parseInt(sc.next());\\n            for (int j = 0; j < d; j++) {\\n                int a = Integer.parseInt(sc.next()) - 1;\\n                s[a] = true;\\n            }\\n        }\\n        int c = 0;\\n        for (int i = 0; i < n; i++) {\\n            if (!s[i]) {\\n                c++;\\n            }\\n        }\\n        System.out.println(c);\\n    }\\n}", "target": "81", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "func", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "anc", "fc", "sec", "sp", "cc", "esc", "isc", "cl", "lc", "irc", "cus", "Sc", " Sc", "ctl", "desc", "ctrl", "cons", "mc", "nl", "scl", "cr", "ch", "ck", "tch", "cgi", "sci", "conv", "dc", "sche", "cle", "cs", "tc", "ss", "sb", "scan"], "n": ["kn", "nb", "t", "nc", "net", "mn", "nan", "na", "x", "o", "no", "ng", "r", "an", "nn", "name", "y", "v", "en", "N", "l", "nu", "np", "nl", "cn", "p", "sn", "ns", "nt", "ni", "nr", "num", "un", "z", "m", "ne"], "k": ["kn", "kh", "ka", "ak", "dk", "kk", "kj", "x", "ek", "r", "sk", "ks", "ke", "key", "kid", "v", "kind", "q", "ko", "w", "ki", "kw", "l", "ik", "ku", "kl", "K", "p", "ck", "kr", "mk", "z", "m", "km"], "s": ["its", "es", "qs", "bes", "fs", "hs", "f", "t", "services", "js", "sts", "ats", "bis", "is", "sq", "ins", "S", "ms", "ps", "als", "z", "ys", "vs", "h", "sets", "v", "tes", "bs", "set", "ws", "l", "gs", "p", "b", "ns", "rs", "stats", "ls", "ds", "cs", "ims", "m", "ss", "sb", "ts"], "i": ["zi", "iq", "iti", "ie", "hi", "ci", "iter", "I", "ami", "inter", "\u0438", "si", "ic", "sim", "ai", "ei", "xi", "me", "eu", "is", "ind", "mi", "cli", "mu", "index", "iy", "im", "init", "gi", "info", "ix", "q", "ui", "iii", "this", "ki", "ia", "ri", "ity", "qi", "pi", "multi", "ji", "ij", "it", "ii", "p", "PI", "ini", "di", "ret", "yi", "id", "ni", "li", "ti", "bi", "ims", "m", "iu", "phi", "ip"], "d": ["def", "dd", "de", "div", "dim", "ad", "sd", "dk", "dp", "da", "D", "fd", "pd", "dev", "dom", "df", "dm", "dn", "dh", "dec", "diff", "p", "mind", "dat", "nd", "di", "dt", "ds", "db", "dist", "dc", "ld", "z"], "j": ["note", "ie", "bj", "ax", "jl", "js", "obj", "oj", "o", "job", "no", "z", "je", "sp", "err", "uj", "ge", "y", "v", "kid", "q", "dj", "json", "bo", "pr", "aj", "jp", "jo", "jump", "ph", "ji", "ij", "J", "br", "it", "b", "jj", "other", "kj", "ort", "jas", "g", "ja"], "a": ["aux", "aa", "ax", "ai", "area", "va", "A", "fa", "ha", "pa", "add", "o", "oa", "ab", "ao", "ba", "an", "am", "ea", "ga", "ia", "sta", "ta", "aj", "ae", "aaa", "qa", "apa", "b", "ja", "ca", "ata", "alpha", "la", "as", "sa", "ma", "ac"], "c": ["f", "C", "ct", "cu", "t", "u", "content", "rc", "nc", "count", "gc", "out", "add", "o", "uc", "fc", "cd", "r", "cont", "err", "ce", "h", "v", "ec", "con", "tc", "w", "lc", "cb", "l", "mc", "e", "cr", "p", "b", "cm", "ca", "cf", "total", "dc", "cs", "cache", "z", "m", "unc", "\u00e7", "g", "ac"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n    static int[] A,L,R;\\n    static int N,Q;\\n    static String str;\\n    static int ans;\\n    public static void main(String args[]){\\n      Scanner sc = new Scanner(System.in);\\n      N = sc.nextInt();\\n      Q = sc.nextInt();\\n      str = sc.next();\\n      A = new int[N];\\n      R = new int[Q];\\n      L = new int[Q];\\n      for(int i=0;i<Q;i++){\\n        L[i]=sc.nextInt();\\n        R[i]=sc.nextInt();\\n      }\\n      A[0]=0;\\n      if(str.charAt(0)=='A' && str.charAt(1)=='C'){\\n        A[1]=1;\\n      }\\n      else{\\n        A[1]=0;\\n      }\\n      for(int i=2;i<N;i++){\\n        if(str.charAt(i-1)=='A' && str.charAt(i)=='C'){\\n          A[i]=A[i-1]+1;\\n        }\\n        else{\\n          A[i]=A[i-1];\\n        }\\n      }\\n      for(int i=0;i<Q;i++){\\n        ans = A[R[i]-1]-A[L[i]-1];\\n        System.out.println(ans);\\n      }\\n    }\\n\\n}", "target": "52", "substitutes": {"A": ["Alpha", "MA", "E", "AS", "I", "AF", "GA", "AL", "C", "RA", "AE", "Area", "Action", "AV", "Array", "App", "ARC", "M", "D", "Ar", "AA", "AP", "The", "ACT", "SA", "S", "B", "HA", "ACC", "What", "F", "P", "At", "V", "AU", "AB", "U", "AC", "EA", "AM", "JA", "a", "NA", "BA", "K", "G", "J", "Answer", "AR", "H", "Default", "An", "As", "X", "Ant", "This", "T", "All", "ARCH", "AT", "LA", "AST", "ALL", "API", "CA"], "L": ["E", "LR", "I", "DL", "FL", "PL", "EL", "LI", "Lu", "C", "SL", "Sl", "LD", "LIN", "BL", "TL", "M", "Li", "GL", "S", "B", "RL", "P", "V", "LL", "LG", "NL", "ML", "LT", "l", "XL", "LP", "G", "J", "CL", "H", "LS", "IL", "Len", "LM", "LC", "LE", "T", "LB", "Left"], "R": ["RG", "I", "RH", "RO", "C", "RA", "RS", "Res", "Y", "SR", "RT", "O", "M", "D", "RP", "S", "B", "RL", "r", "P", "V", "NR", "RE", "RR", "Re", "U", "RC", "G", "J", "AR", "H", "TR", "RM", "DR", "GR", "Rs", "T", "RF", "Ren", "ER"], "N": ["CN", "I", "NN", "NM", "NC", "C", "AN", "IN", "ND", "Y", "NO", "Na", "NT", "O", "M", "D", "Net", "You", "S", "MN", "P", "V", "n", "NG", "NR", "NL", "NB", "TN", "NI", "NA", "K", "G", "Mon", "J", "NH", "H", "NS", "Len", "X", "SN", "T", "Ns", "Sn", "NPR", "NE"], "Q": ["I", "Qu", "C", "Y", "Z", "O", "M", "D", "UK", "S", "UE", "F", "P", "V", "NG", "OU", "Query", "q", "QU", "U", "QL", "MQ", "CH", "IO", "K", "G", "J", "QB", "H", "NS", "X", "IQ", "T", "Que", "IX", "Qual", "NE", "HQ"], "str": ["or", "sw", "ar", "f", "seq", "hex", "sl", "t", "sts", "obj", "re", "raw", "exp", "er", "dr", "out", "data", "o", "stri", "gr", "msg", "r", "sp", "err", "c", "tr", "n", "cur", "arr", "name", "spec", "s", "Str", "STR", "j", "l", "pr", "desc", "string", "char", "enc", "vol", "text", "ocr", "print", "br", "oct", "ch", "p", "chain", "st", "txt", "nt", "stack", "url", "list", "g", "fr"], "ans": ["ANS", "orts", "ions", "anks", "offs", " sans", "AN", "ats", "ads", "aps", "eps", "eds", "ann", "nan", "ants", "ins", " means", "outs", "uns", "ps", "orders", "aus", "acs", "an", " scans", "ks", "os", "sets", "s", "acts", "amps", "rans", " spans", " offsets", "posts", "ends", "ens", " answers", "ars", "vers", "ros", "uploads", "ows", "ates", "ids", "An", "can", "ns", "rs", "ls", " stats", "cs", "arts", "xs", "ents"], "sc": ["SC", "cmp", " SC", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "ng", "anc", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "ser", "cl", "lc", "irc", " Sc", "ctl", "desc", "mc", "inc", "scl", "cr", "capt", "ch", "system", "st", "ss", "sci", "cs", "ec", "tc", "Sc", "sb", "scan"], "i": ["status", "io", "us", "o", "iu", "index", "y", "ix", "l", "pi", "ii", "gu", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "ei", "xi", "base", "ori", "parent", "cli", "init", "ui", "j", "uri", "qi", "multi", "chain", "ini", "list", "set", "m", "esi", "iter", "si", "ic", "sim", "oi", "exp", "eu", "is", "ind", "x", "mi", "mu", "gi", "ji", "it", "di", "in", "z", "ims", "zi", "I", "ami", "\u0438", "u", "ai", "me", "iy", "by", "im", "v", "info", "ri", "ki", "batch", "this", "a", "ity", "ij", "cgi", "li", "point", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\tString S = sc.next();\\n\t\t\\n\t\tchar[] ch = new char[S.length()];\\n\t\tString ans = \"\";\\n\t\tfor(int i=0; i<ch.length; i++) {\\n\t\t\tch[i] = 'x';\\n\t\t\tans += ch[i];\\n\t\t}\\n\t\t\\n\t\tSystem.out.println(ans);\\n\t}\\n\\n}", "target": "122", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "sub", "uc", "anc", "sec", "sp", "c", "cc", "isc", "ser", "esc", "cl", "s", "ko", "lc", "dec", "desc", "mc", "RC", "inc", "scl", "cr", "system", "ss", "conv", "cle", "cs", "ec", "tc", "Sc", "scan"], "S": ["SC", " s", "R", "C", "RS", "L", "TS", "SL", "SS", "SU", "A", "M", "SER", "CS", "SA", "B", "P", "V", "SM", "SB", "s", "Str", "N", "Source", "SF", "SI", "GS", "SO", "G", "Si", "SE", "H", "HS", "NS", "ST", "X", "SN", "BS"], "ch": ["or", "cht", "ct", "ich", "che", "th", "se", "math", "bh", "sh", "cha", "sch", "Ch", "ech", "cd", "cod", "ach", "arch", "c", "ce", "chan", "qu", "och", "cho", "pt", "cl", "cb", "we", "l", "pr", "CH", "char", "he", "gh", "ih", "ph", "br", "tch", "cm", "pol", "ca", "cp", "cs", "et", "zh"], "ans": ["ras", "ran", "ANS", "anks", " sans", " beans", "AN", "anes", "ats", "san", "aps", " pan", "eps", " plans", "ads", "ann", "ols", "ants", "ins", " means", "x", "uns", "outs", "aus", "ks", "an", " scans", "unes", "vs", "angs", "s", "amps", "rans", "aos", " spans", "posts", " names", "yes", "ons", " Ans", "ens", " os", "ars", "cons", "ros", "res", "gs", "ows", "ates", "can", "ns", "rs", "as", "wan", "mas", "cs", "arts", "xs", "ents"], "i": ["or", "zi", "I", "hi", "ci", "ie", "span", "\u0438", "si", "ic", "sim", "u", "oi", "ai", "ei", "us", "me", "eu", "is", "ind", "ori", "x", "o", "mi", "n", "cli", "key", "index", "y", "im", "gi", "init", "ix", "q", "ui", "ri", "j", "uri", "a", "qi", "pi", "multi", "ji", "my", "e", "ii", "it", "print", "gu", "di", "ini", "ex", "li", "fi", "ti", "bi", "set", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int P = sc.nextInt();\\n    int Q = sc.nextInt();\\n    int R = sc.nextInt();\\n    int result = 201;\\n    if (P+Q < result) {\\n      result = P+Q;\\n    }\\n    if (Q+R < result) {\\n      result = Q+R;\\n    }\\n    if (P+R < result) {\\n      result = P+R;\\n    }\\n    System.out.println(result);\\n  }\\n}", "target": "89", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "sq", "out", "gc", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "spec", "cl", "ko", "lc", "ner", " Sc", "ctl", "mc", "inc", "scl", "cr", "p", "system", "ch", "ck", "st", "cgi", "conv", "dc", "cs", "tc", "Sc", "g", "scan"], "P": ["PC", "E", "I", "PUT", "IP", "PT", "PU", "C", "L", "PP", "PK", "Y", "PAR", "PRE", "POS", "A", "M", "DP", "D", "PS", "S", "B", "PG", "PIN", "MP", "F", "V", "PRO", "UP", "RE", "PART", "N", "PORT", "XP", "PD", "K", "G", "J", "PA", "H", "p", "PI", "Port", "SP", "FP", "CP", "X", "T", "Pod", "PR", "IX", "API", "PE", "TP", "Pers", "PO"], "Q": ["E", "UT", "I", "TX", "Question", "IP", "Qu", "Quick", "AL", "C", "L", "PK", "HH", "Y", "TER", "Z", "A", "ED", "M", "D", "UK", "FF", "S", "UE", "B", "PG", "F", "V", "UR", "RE", "UP", "W", "Query", "q", "N", "QU", "U", "AC", "IV", "QL", "MQ", "CH", "K", "G", "QB", "AR", "PA", "IL", "TR", "DR", "X", "IQ", "ER", "Que", "IX", "CAP", "SQL", "Qual", "CA", "HQ"], "R": ["E", "RG", "I", "RES", "TX", "RH", "RO", "RA", "RS", "L", "JR", "Res", "C", "SR", "RT", "A", "M", "D", "VR", "RP", "S", "B", "RL", "r", "V", "HR", "NR", "UR", "RE", "RR", "Re", "N", "U", "IR", "KR", "RC", "G", "AR", "H", "TR", "MR", "RM", "DR", "GR", "Reader", "ER", "T", "RAM", "PR"], "result": ["status", "important", "back", "RESULTS", "folder", "direction", "integer", "response", "duration", "request", "goal", "function", "prefix", "valid", "output", "power", "summary", "process", "mask", "answer", "grade", "reason", "work", "default", "test", "view", "complete", "progress", "relation", "currency", "only", "results", "table", "string", "performance", "ret", "Result", "cache", "confirmed", "report", "sequence", "success", "match", "params", "type", "successful", "description", "diff", "proc", "event", "required", "comment", "message", "error", "date", "operation", "product", "all", "ful", "this", "expected", "true", "term", "contact", "res", "feature", "continue", "command", "search", "option"]}}
{"code": "import java.util.*;import java.io.*;import java.math.*;\\n\\npublic class Main\\n{\\n\\n    public static void process()throws IOException\\n    {\\n        int n=ni(),arr[]=new int[n+1];\\n        for(int i=1;i<=n;i++)\\n            arr[i]=ni();\\n\\n        int mx1=0,mx2=0;\\n\\n        for(int i=1;i<=n;i++){\\n            if(arr[i]>=mx1){\\n                mx2=mx1;\\n                mx1=arr[i];\\n            }\\n            else if(arr[i]>mx2)\\n                mx2=arr[i];\\n        }\\n\\n        for(int i=1;i<=n;i++)\\n            pn((arr[i]==mx1)?mx2:mx1);\\n    }\\n\\n\\n    static FastReader sc;\\n    static PrintWriter out;\\n    public static void main(String[]args)throws IOException\\n    {\\n        out = new PrintWriter(System.out);\\n        sc=new FastReader();\\n\\n        long s = System.currentTimeMillis();\\n        int t=1;\\n        //t=ni();\\n        while(t-->0)\\n            process();\\n\\n        out.flush();\\n        System.err.println(System.currentTimeMillis()-s+\"ms\");\\n        System.out.close();  \\n    }\\n    \\n    \\n    static void pn(Object o){out.println(o);}\\n    static void p(Object o){out.print(o);}\\n    static void pni(Object o){out.println(o);System.out.flush();}\\n    static int ni()throws IOException{return Integer.parseInt(sc.next());}\\n    static long nl()throws IOException{return Long.parseLong(sc.next());}\\n    static double nd()throws IOException{return Double.parseDouble(sc.next());}\\n    static String nln()throws IOException{return sc.nextLine();}\\n    static long gcd(long a, long b)throws IOException{return (b==0)?a:gcd(b,a%b);}\\n    static int gcd(int a, int b)throws IOException{return (b==0)?a:gcd(b,a%b);}\\n    static int bit(long n)throws IOException{return (n==0)?0:(1+bit(n&(n-1)));}\\n    static boolean multipleTC=false;\\n    static long mod=(long)1e9+7l;\\n\\n    static<T> void r_sort(T arr[],int n){\\n        Random r = new Random(); \\n        for (int i = n-1; i > 0; i--){ \\n            int j = r.nextInt(i+1); \\n                  \\n            T temp = arr[i]; \\n            arr[i] = arr[j]; \\n            arr[j] = temp; \\n        } \\n        Arrays.sort(arr); \\n    }\\n    \\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n    static class FastReader \\n    { \\n        BufferedReader br; \\n        StringTokenizer st; \\n  \\n        public FastReader() { \\n            br = new BufferedReader(new\\n                     InputStreamReader(System.in)); \\n        } \\n  \\n        String next(){ \\n            while (st == null || !st.hasMoreElements()) \\n            { \\n                try\\n                { \\n                    st = new StringTokenizer(br.readLine()); \\n                } \\n                catch (IOException  e) \\n                { \\n                    e.printStackTrace(); \\n                } \\n            } \\n            return st.nextToken(); \\n        } \\n  \\n        String nextLine() { \\n            String str = \"\"; \\n            try{ \\n                str = br.readLine(); \\n            } \\n            catch (IOException e) { \\n                e.printStackTrace(); \\n            } \\n            return str; \\n        } \\n    } \\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n}", "target": "142", "substitutes": {"n": ["None", "nm", "nb", "f", "network", "nc", "all", "net", "mn", "count", "k", "na", "x", "no", "o", "ng", "nan", "r", "len", "g", "c", "an", "nn", "h", "nor", "v", "en", "w", "N", "j", "l", "nu", " N", "np", "nl", "pi", "cn", "p", "sn", "ns", "nt", "nia", "number", "num", "none", "un", "z", "d", "m", "ne"], "arr": ["ras", "repl", "iq", "art", "ar", "addr", "hist", "ray", "img", "obj", "all", "map", "Array", "dr", "mp", "ll", "stock", "bl", "au", "inst", "data", "ab", "par", "arg", "expr", "vec", "gr", "alph", "r", "emb", "msg", "arb", "err", "tmp", "mg", "var", "ev", "mat", "conf", "play", "ix", "fre", "pl", "adj", "pr", "av", "elt", "rest", "deg", "mem", "aaa", "res", "req", "ij", "br", "coll", "dict", "dat", "rs", "agg", "nt", "stack", "db", "parts", "array", "rel", "vals", "buf", "fr", "list", "str", "val", "attr"], "i": ["status", "io", "ogi", "us", "o", "iu", "ir", "index", "y", "ix", "iii", "pi", "ii", "gu", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "ei", "xi", "base", "loop", "ori", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "chain", "ex", "ini", "list", "set", "m", "iter", "span", "si", "ic", "sim", "oi", "is", "ind", "x", "mi", "err", "gi", "json", "ji", "it", "di", "to", "ims", "slice", "go", "iq", "zi", "I", "\u0438", "ai", "me", "iy", "im", "v", "info", "q", "this", "ki", "batch", "ri", "ity", "ij", "li", "point", "ip"], "mx1": ["mp9", "ox01", "mp2", "mp4", "mt1", "x1", "wm3", "mm9", "mt01", "mx0", "wm1", "ox1", "x2", "mx01", "mr2", "mt0", "mx7", "x3", "mm2", "mm12", "wm2", "oxOne", "mx9", "mp0", "MX9", "mp1", "mr12", "mt4", "wmOne", "ox12", "mx4", "mr0", "m1", "m2", "ox2", "mm01", "mm7", "mx3", "mm4", "mp7", "xOne", "MX7", "mx12", "mOne", "mm0", "MXOne", "MX01", "mm1", "ox0", "m3", "MX2", "mt2", "mr1", "MX1", "mmOne", "mxOne"], "mx2": ["mx32", "mxtwo", "mac2", "mt1", "x4", "vm2", "memtwo", "macTwo", "vm1", "MX5", "ox1", "x2", "ms02", "ox6", "nz32", "ms2", "vm02", "mm2", "mem02", "vm5", "mem6", "mem2", "mem32", "MX4", "oxTwo", "mx5", "mx4", "m2", "ox32", "m1", "mt5", "ms1", "ox2", "m02", "mt02", "mac4", "mxTwo", "xTwo", "mtwo", "mt2", "memTwo", "nz2", "mm6", "mx6", "mem1", "mm1", "MX02", "MX6", "nz6", "mstwo", "mx02", "MX2", "nzTwo", "MX1", "MXTwo"], "sc": ["SC", "sw", "ci", "osc", "pc", "ct", "psc", "rc", "sv", "nc", "bc", "asc", "mp", "sh", "gc", "sch", "uc", "fc", "sp", "c", "cc", "isc", "esc", "cl", "lc", "mc", "cr", "ch", "tch", "dc", "cle", "cs", "ec", "tc", "Sc", "WC"], "out": ["writer", "go", "error", "report", "sys", "OUT", "io", "inner", "write", "ins", "outs", "o", "client", "std", "r", "err", "c", "os", "name", "aos", "output", "w", "hit", "Out", "oe", "co", "screen", "println", "res", "it", "ot", "print", "input", "p", "ch", "pool", "b", "txt", "ex", "result", "nt", "null", "file", "to", "ou", "in", "log", "list", "str", "g"], "s": ["its", "es", "fs", "sys", "js", "se", "eds", "ies", "is", "outs", "ms", "S", "ps", "times", "ys", "seconds", "os", "l", "gs", "st", "ns", "ers", "ls", "ds", "ss", "xs", "ts"], "t": ["time", "f", "u", "pos", "k", "x", "o", "c", "h", "y", "q", "w", "j", "l", "a", "it", "e", "p", "total", "T", "set", "d", "m", "g", "ts"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n\\n    int n = sc.nextInt();\\n    int halfN = n / 2;\\n\\n    List<Integer> list = new ArrayList<>();\\n    for (int i = 0; i < n; i++) {\\n      list.add(sc.nextInt());\\n    }\\n\\n    Collections.sort(list);\\n\\n    int result = list.get(halfN) - list.get(halfN - 1);\\n\\n    System.out.println(result);\\n  }\\n}\\n", "target": "119", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "sq", "gc", "disc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "ctl", "mc", "scl", "cr", "capt", "ch", "sel", "ck", "ss", "conv", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "n": ["nm", "nb", "t", "network", "ln", "nc", "all", "net", "mn", "nan", "na", "names", "o", "no", "ng", "len", "c", "nn", "nor", "v", "gn", "en", "N", "j", "l", "nu", " N", "np", "nl", "cn", "norm", "p", "sn", "ns", "nt", "num", "missing", "z", "d", "m", "ne"], "halfN": ["middleC", "middleS", "keyNR", "middleN", "halfn", "subL", "fullNR", "halfNB", "subN", "HalfNB", "HalfS", "halfL", "HalfC", "middleNB", "keyL", "subn", "HalfM", "pairM", "fullN", "keyN", "fulln", "halfNR", "halfC", "pairS", "fullS", " halfS", "HalfN", "subNR", "halfM", "halfS", "fullL", "fullC", " halfM", "fullNB", "keyn", "pairN"], "list": ["format", "sort", "ist", "sequence", "length", "def", "tree", "pair", "level", "menu", "history", "bool", "L", "collection", "display", "left", "sync", "all", "ll", "item", "loop", "add", "parent", "cont", "check", "entry", "index", "LIST", "filter", "valid", "local", "batch", "l", "dl", "table", "lat", "acl", "print", "pool", "form", "st", "search", "queue", "pre", "detail", "ls", "stack", "listed", "dict", "array", "li", "null", "group", "log", "lists", "set", "block", "details"], "i": ["iter", "I", "ie", "ci", "hi", "iso", "io", "si", "t", "sim", "u", "ic", "ai", "ei", "us", "is", "ind", "x", "ms", "client", "mi", "err", "cli", "im", "init", "gi", "y", "q", "ix", "ui", "j", "uri", "qi", "pi", "multi", "it", "my", "ii", "b", "gu", "di", "ini", "uu", "ex", "id", "li", "in", "ti", "bi", "m", "iu", "phi", "ip"], "result": ["report", "success", "mate", "pair", "date", "profile", "direction", "product", "integer", " resulted", "complete", "same", "match", "score", "different", "successful", "duration", "relation", "currency", "value", "function", "prefix", "results", "correct", "distance", "description", "true", "power", "summary", "process", "neutral", "res", "feature", "continue", "command", "search", "ret", "Result", "mult", "comb", "other", "test"]}}
{"code": "import java.io.File;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.util.NoSuchElementException;\\nimport java.util.TreeMap;\\nimport java.util.*;\\n\\nclass FastScanner {\\n    private final InputStream in = System.in;\\n    private final byte[] buffer = new byte[1024];\\n    private int ptr = 0;\\n    private int buflen = 0;\\n\\n    private boolean hasNextByte() {\\n        if (ptr < buflen) {\\n            return true;\\n        } else {\\n            ptr = 0;\\n            try {\\n                buflen = in.read(buffer);\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            if (buflen <= 0) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    private int readByte() {\\n        if (hasNextByte())\\n            return buffer[ptr++];\\n        else\\n            return -1;\\n    }\\n\\n    private static boolean isPrintableChar(int c) {\\n        return 33 <= c && c <= 126;\\n    }\\n\\n    public boolean hasNext() {\\n        while (hasNextByte() && !isPrintableChar(buffer[ptr]))\\n            ptr++;\\n        return hasNextByte();\\n    }\\n\\n    public String next() {\\n        if (!hasNext())\\n            throw new NoSuchElementException();\\n        StringBuilder sb = new StringBuilder();\\n        int b = readByte();\\n        while (isPrintableChar(b)) {\\n            sb.appendCodePoint(b);\\n            b = readByte();\\n        }\\n        return sb.toString();\\n    }\\n\\n    public long nextLong() {\\n        if (!hasNext())\\n            throw new NoSuchElementException();\\n        long n = 0;\\n        boolean minus = false;\\n        int b = readByte();\\n        if (b == '-') {\\n            minus = true;\\n            b = readByte();\\n        }\\n        if (b < '0' || '9' < b) {\\n            throw new NumberFormatException();\\n        }\\n        while (true) {\\n            if ('0' <= b && b <= '9') {\\n                n *= 10;\\n                n += b - '0';\\n            } else if (b == -1 || !isPrintableChar(b)) {\\n                return minus ? -n : n;\\n            } else {\\n                throw new NumberFormatException();\\n            }\\n            b = readByte();\\n        }\\n    }\\n\\n    public int nextInt() {\\n        long nl = nextLong();\\n        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)\\n            throw new NumberFormatException();\\n        return (int) nl;\\n    }\\n\\n    public double nextDouble() {\\n        return Double.parseDouble(next());\\n    }\\n}\\n\\npublic class Main {\\n    static int[] w = new int[100010];\\n    static int[] v = new int[100010];\\n    static int[][] dp = new int[110][100010];\\n    static int k;\\n\\n    static int chmin(int a, int b) {\\n        if (a > b) {\\n            a = b;\\n            return a;\\n        }\\n        return a;\\n    }\\n\\n    static int chmax(int a, int b) {\\n        if (a < b) {\\n            a = b;\\n            return a;\\n        }\\n        return a;\\n    }\\n\\n    public static void main(String[] args) {\\n        FastScanner fs = new FastScanner();\\n        long n = fs.nextLong();\\n        long min = Long.MAX_VALUE;\\n        for (long i = 1; i <= Math.sqrt(n); i++) {\\n            if (n % i == 0) {\\n                long a = i;\\n                long b = n / a;\\n                long dis1 = Math.abs(a - 1) + Math.abs(b - 1);\\n                if (dis1 < min)\\n                    min = dis1;\\n            }\\n        }\\n        System.out.println(min);\\n    }\\n}\\n", "target": "157", "substitutes": {"in": ["ar", "sys", "f", "din", "io", "IN", "t", "ic", "inn", "inner", "from", "bin", "all", "is", "out", "ins", "o", "add", "std", "r", "on", "rin", "mi", "lin", "include", "conf", "en", "info", "con", "nin", "l", "asin", "cin", "In", "inc", "it", "input", "session", "run", "stream", "file", "ini", "win", "as", "id", "to", "inf", "log", "m", "get"], "buffer": ["Buffer", "iter", "sequence", "length", "history", "view", "window", "display", "bone", "base", "phrase", "count", "out", "data", "pointer", "button", "program", "face", "reference", "source", "read", "database", "index", "page", "address", "password", "device", "output", "limit", "batch", "header", "available", "memory", "table", "buff", "binary", "mem", "screen", "document", "p", "queue", "command", "paste", "detail", "template", "stack", "row", "buf", "cache", "block", "black", "library", "message", "scroll"], "ptr": ["Ptr", "pert", "iter", "bp", "pc", "addr", "inter", "dep", "snap", "ctx", "prim", "pos", "ped", "coord", "dr", "ind", "point", "pointer", "expr", "ctr", "tip", "tp", "ps", "Po", " pointer", "rob", "tr", "index", "prime", "pt", "src", "peer", "pl", "pers", "pend", "ts", "pr", "jp", "np", "pi", "req", "adr", "br", "p", "fp", "offset", "seek", "pointers", "inters", "proc", "ret", "pad", "rel", "depth", "buf", "fr", "address", "wr", "loc"], "buflen": ["bufilen", "boflens", "buvlen", "boflEN", "bupleng", "bofrens", "bofrEN", "buflatten", "buflun", "bofreng", "bufcen", "bufilatten", "bullens", "bufilan", "Buflan", "Bufilan", "buflEN", " buflens", " buplens", " buplEN", "buvlEN", "bofren", "buplen", "buflan", "buflength", "bulfens", "buplens", "bulfan", " buflength", "bufreng", "Bufilen", "bufcun", "buplan", "bublatten", "bufcatten", "bufcan", " buplen", " buflan", " buflEN", "bufleng", "bufren", "Bufilun", "bullen", "bublun", "Buflen", "Buflun", "bullength", "Bufilatten", "bulfen", "bufrens", "bufilun", "boflen", "buvlens", "bofleng", "bufrEN", "Buflatten", "buflens", "buplEN", "bullEN", "bublan", "buplength", "bublen", " buplan", " buplength", "buvlength", "bullan", "bulfength"], "c": ["cmp", "ci", "pc", "f", "C", "ct", "cu", "t", "ic", "u", "rc", "bc", "fac", "abc", "count", "x", "uc", "fc", "cd", "cod", "cont", "cc", "ce", "tc", "lc", "l", "dec", "char", "enc", "e", "ch", "p", "etc", "cm", "ca", "cf", "vc", "dc", "cp", "cs", "z", "d", "m", "unc", "ac"], "sb": ["mb", "bp", "sg", "nb", "pb", "bj", "bb", "sf", "bh", "bis", "bf", "bg", "abs", "sq", "ub", "BB", "rob", "abb", "eb", "lb", "zb", "kb", "ib", "SB", "bs", "ob", "bsp", "cb", "bt", "sam", "sbm", "rb", "gs", "gb", "bd", "db", "sa", "erb", "gob", "ssl", "orb", "stab", "lp", "bn"], "b": ["mb", "go", "bp", "nb", "f", "pb", "back", "bb", "t", "bu", "obj", "bc", "bin", "base", "bis", "bf", "bg", "bound", "bl", "ab", "x", "B", "emb", "r", "bit", "body", "fb", "g", "wb", "h", "eb", "ib", "beta", "by", "y", "kb", "bs", "ob", "s", "bo", "cb", "bt", "j", "l", "rb", "buff", "binary", "xb", "it", "gb", "bd", "br", "p", "e", "ch", "bar", "db", "be", "reb", "bi", "z", "d", "m"], "n": ["nm", "nb", "t", "u", "ln", "nc", "mn", "nan", "out", "na", "o", "x", "no", "ng", "size", "r", "on", "nn", "y", "s", "N", "j", "l", "nu", " N", "np", "e", "p", "sn", "ns", "total", "nt", "ni", "number", "num", "z", "d", "m", "ne", "g"], "minus": ["division", "nos", "below", "zero", "mon", "cos", "snap", "little", "de", "pos", "doesn", "us", "bra", "nan", "plus", "no", "danger", "dependent", "neg", "unit", "less", "partial", "video", "beta", "prime", "south", "two", "second", "mobile", "small", "value", "multiple", "gone", "space", "mini", "some", "negative", " negative", "positive", "diff", "not", "more", "number", "none", "missing", "dot", "sign", "nom", "digit", "ne", "pot"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void debug(String str) {\\n        boolean debug = false;\\n        if (debug != false) {\\n            return;\\n        }\\n        System.out.println(str);\\n    }\\n\\n    public static void main(String[] args) {\\n\\n        int N;\\n        long A[];\\n        long B[];\\n\\n        try (Scanner sc = new Scanner(System.in)) {\\n            N = sc.nextInt();\\n            A = new long[N+1];\\n            B = new long[N];\\n            for(int i =0;i < N+1;i++){\\n                A[i] = sc.nextLong();\\n            }\\n            for(int i =0;i < N;i++){\\n                B[i] = sc.nextLong();\\n            }\\n        }\\n        long result = 0;\\n        for(int i =0;i < N;i++){\\n            if(B[i] > A[i]){\\n                result += A[i];\\n                long temp = A[i];\\n                A[i]-=temp;\\n                B[i] -=temp;\\n            }else{\\n                result += B[i];\\n                long temp = B[i];\\n                B[i]-=temp;\\n                A[i] -=temp;\\n            }\\n            if(B[i] > A[i+1]){\\n                result += A[i+1];\\n                long temp = A[i+1];\\n                A[i+1]-=temp;\\n                B[i] -=temp;\\n            }else{\\n                result += B[i];\\n                long temp = B[i];\\n                B[i]-=temp;\\n                A[i+1] -=temp;\\n            }\\n        }\\n        System.out.println(result);\\n\\n\\n\\n\\n        return;\\n    }\\n}\\n", "target": "159", "substitutes": {"str": ["t", "obj", "dr", "comm", "out", "data", "msg", "r", "sp", "err", "c", "n", "arr", "name", "v", "s", "Str", "STR", "j", "dec", "string", "char", "enc", "vol", "text", "print", "br", "cfg", "cmd", "st", "txt", "z", "m", "g"], "debug": ["format", "close", "error", "open", "status", "sys", "show", "div", "enable", "tag", "write", "console", "develop", "hidden", "deb", "dump", "buffer", "module", "dev", "config", "d", "g", "DEBUG", "development", "init", " debugging", "dirty", "info", " Debug", "output", "comment", "doc", "Debug", "mod", "string", "start", "bug", "warn", "print", " DEBUG", "google", " debugger", "di", "export", "db", "depth", "log", "trace", "display", "cache", "help", "test"], "N": ["None", "CN", "I", "NM", "NN", "R", "NC", "Count", "C", "AN", "L", "SIZE", "ND", "OUT", "NO", "Z", "Num", "NT", "M", "D", "S", "MN", "Node", "UN", "P", "V", "n", "NR", "NUM", "Ni", "NL", "Number", "NB", "NP", "NV", "TN", "NI", "GN", "NA", "K", "NAME", "G", "J", "Size", "NH", "Name", "NS", "Len", "NOR", "SN", "Length", "FN", "No", "Ns", "Sn", "T", "NE"], "A": ["Al", "Alpha", "AS", "I", "AF", "GA", "AL", "C", "AN", "L", "AE", "AI", "RA", "Art", "Action", "AV", "Array", "App", "M", "Ar", "AA", "The", "AP", "ACT", "SA", "S", "ACC", "HA", "P", "At", "AU", "IA", "Ag", "One", "AB", "AH", "ART", "AC", "Ac", "EA", "AM", "a", "JA", "NA", "BA", "AR", "H", "PA", "An", "Ex", "Av", "As", "mA", "This", "Ant", "All", "AT", "API", "AST", "LA", "To", "CA"], "B": ["Ber", "Buffer", "I", "TB", "BP", "Both", "GB", "OB", "C", "L", "RB", "BM", "Y", "BL", "O", "JB", "D", "PB", "Back", "S", "BO", "Library", "USB", "BI", "EB", "BB", "BG", "V", "DB", "BT", "BE", "SB", "BF", "IB", "NB", "AB", "But", "Block", "Blue", "Builder", "Reb", "Two", "BA", "Bus", "J", "Bytes", "Bern", "WB", "Bill", "b", "BR", "BY", "Bar", "BC", "Other", "BS", "T", "Be", "BD", "LB", "VB", "Bs", "BER"], "i": ["status", "io", "o", "iu", "source", "page", "index", "y", "ix", "iii", "pi", "ii", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "xi", "ei", "out", "ori", "parent", "client", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "print", "chain", "ini", "list", "set", "m", "et", "ion", "iter", "history", "si", "ic", "sim", "oi", "inner", "iri", "is", "ind", "mi", "err", "gi", "ji", "it", "e", "di", "in", "slice", "zi", "iti", "ami", "\u0438", "u", "ai", "me", "c", "key", "iy", "im", "v", "info", "q", "this", "ki", "batch", "ia", "ri", "ity", "ij", "ios", "li", "item", "point", "ip"], "result": ["report", "sequence", "success", "done", "status", "date", "tag", "complete", "product", "match", "coord", "sum", "data", "global", "tmp", "message", "response", "r", "err", "duration", "relation", "wrapper", "currency", "resource", "value", "function", "goal", "results", "output", "valid", "term", "power", "json", "true", "description", "summary", "process", "make", "current", "su", "res", "diff", "feature", "continue", "command", "search", "total", "ret", "reason", "event", "Result", "number", "cache", "comment", "draw", "test"], "temp": ["time", "status", "storage", "sync", "copy", "config", "index", "valid", "output", "pool", "dat", "pretty", "tc", "test", "f", "tim", "t", "content", "condition", "mag", "sum", "cum", "Temp", "dest", "method", "pattern", "current", "txt", "ptr", "cache", "mod", "format", "iter", "sequence", "length", "success", "level", "style", "mm", "coord", "stat", "tmp", "size", "dev", "unit", "cont", "tr", "tail", "prime", "value", "diff", "wait", "message", "attr", "stable", "cap", "date", "stem", "data", "buffer", "timeout", "partial", "v", "term", "variable", "perm", "adj", "desc", "strength", "deg", "tem", "pre", "cert", "template"]}}
{"code": "import java.util.*;\\nimport java.util.Scanner;\\n\\nclass Main {\\n\\n    public static void main(String args[]) {\\n        Scanner sc = new Scanner(System.in);\\n        final int N = sc.nextInt();\\n        int[] H = new int[N];\\n\\n        for(int i=0;i<N;i++){\\n            H[i]=sc.nextInt()-1;\\n        }\\n\\n        for(int i=0;i<N-1;i++){\\n            if(H[i]>H[i+1]){\\n                H[i+1]++;\\n                if(H[i]>H[i+1]){\\n                    System.out.println(\"No\");\\n                    return;\\n                }\\n            }\\n        }\\n        System.out.println(\"Yes\");\\n    }\\n}", "target": "74", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "Desc", "c", "cc", "isc", "esc", "cl", "lc", " Sc", "ctl", "mc", "nl", "scl", "cr", "sel", "ch", "system", "capt", "ss", "sci", "conv", "dc", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["I", "NM", "NN", "R", "NC", "C", "ND", "L", "AN", "Na", "NO", "Num", "NT", "M", "D", "Net", "S", "F", "NG", "V", "n", "P", "NR", "Ni", "NB", "NP", "TN", "NI", "GN", "NA", "K", "J", "NH", "NS", "NOR", "SN", "Length", "T", "Ns", "Sn", "No", "NE"], "H": ["I", "HO", "RH", "His", "Handler", "R", "He", "PH", "C", "PP", "HH", "L", "HI", "HE", "Y", "Q", "Hash", "HTTP", "M", "D", "Host", "MH", "HA", "GH", "B", "F", "P", "V", "Head", "h", "HTML", "OH", "W", "HP", "HL", "HK", "HB", "History", "DH", "GO", "Ha", "CH", "K", "TH", "HS", "J", "NH", "Eh", "Hi", "Graph", "Length", "Header", "T", "Distance", "HT", "HC", "HQ"], "i": ["status", "io", "us", "iu", "index", "y", "ix", "l", "pi", "ii", "yi", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "ei", "xi", "base", "ori", "client", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "print", "chain", "ini", "ni", "list", "set", "m", "iter", "history", "si", "ic", "sim", "oi", "is", "k", "ind", "x", "mi", "err", "gi", "ji", "it", "p", "di", "to", "in", "zi", "I", "\u0438", "u", "ai", "me", "key", "iy", "im", "v", "info", "ri", "ki", "batch", "ity", "ij", "li", "point", "ip"]}}
{"code": "import java.util.*; import java.io.*; import java.math.*;\\npublic class Main{\\n\t//Don't have to see. start------------------------------------------\\n\tstatic class InputIterator{\\n\t\tArrayList<String> inputLine = new ArrayList<String>(1024);\\n\t\tint index = 0; int max; String read;\\n\t\tInputIterator(){\\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\t\ttry{\\n\t\t\t\twhile((read = br.readLine()) != null){\\n\t\t\t\t\tinputLine.add(read);\\n\t\t\t\t}\\n\t\t\t}catch(IOException e){}\\n\t\t\tmax = inputLine.size();\\n\t\t}\\n\t\tboolean hasNext(){return (index < max);}\\n\t\tString next(){\\n\t\t\tif(hasNext()){\\n\t\t\t\treturn inputLine.get(index++);\\n\t\t\t}else{\\n\t\t\t\tthrow new IndexOutOfBoundsException(\"There is no more input\");\\n\t\t\t}\\n\t\t}\\n\t}\\n\tstatic HashMap<Integer, String> CONVSTR = new HashMap<Integer, String>();\\n\tstatic InputIterator ii = new InputIterator();//This class cannot be used in reactive problem.\\n\tstatic PrintWriter out = new PrintWriter(System.out);\\n\tstatic void flush(){out.flush();}\\n\tstatic void myout(Object t){out.println(t);}\\n\tstatic void myerr(Object t){System.err.print(\"debug:\");System.err.println(t);}\\n\tstatic String next(){return ii.next();}\\n\tstatic boolean hasNext(){return ii.hasNext();}\\n\tstatic int nextInt(){return Integer.parseInt(next());}\\n\tstatic long nextLong(){return Long.parseLong(next());}\\n\tstatic double nextDouble(){return Double.parseDouble(next());}\\n\tstatic ArrayList<String> nextStrArray(){return myconv(next(), 8);}\\n\tstatic ArrayList<String> nextCharArray(){return myconv(next(), 0);}\\n\tstatic ArrayList<Integer> nextIntArray(){\\n\t\tArrayList<String> input = nextStrArray(); ArrayList<Integer> ret = new ArrayList<Integer>(input.size());\\n\t\tfor(int i = 0; i < input.size(); i++){\\n\t\t\tret.add(Integer.parseInt(input.get(i)));\\n\t\t}\\n\t\treturn ret;\\n\t}\\n\tstatic ArrayList<Long> nextLongArray(){\\n\t\tArrayList<String> input = nextStrArray(); ArrayList<Long> ret = new ArrayList<Long>(input.size());\\n\t\tfor(int i = 0; i < input.size(); i++){\\n\t\t\tret.add(Long.parseLong(input.get(i)));\\n\t\t}\\n\t\treturn ret;\\n\t}\\n\tstatic String myconv(Object list, int no){//only join\\n\t\tString joinString = CONVSTR.get(no);\\n\t\tif(list instanceof String[]){\\n\t\t\treturn String.join(joinString, (String[])list);\\n\t\t}else if(list instanceof ArrayList){\\n\t\t\treturn String.join(joinString, (ArrayList)list);\\n\t\t}else{\\n\t\t\tthrow new ClassCastException(\"Don't join\");\\n\t\t}\\n\t}\\n\tstatic ArrayList<String> myconv(String str, int no){//only split\\n\t\tString splitString = CONVSTR.get(no);\\n\t\treturn new ArrayList<String>(Arrays.asList(str.split(splitString)));\\n\t}\\n\tpublic static void main(String[] args){\\n\t\tCONVSTR.put(8, \" \"); CONVSTR.put(9, \"\\n\"); CONVSTR.put(0, \"\");\\n\t\tsolve();flush();\\n\t}\\n\t//Don't have to see. end------------------------------------------\\n\tstatic void solve(){//Here is the main function\\n\tArrayList<Integer> one = nextIntArray();\\n\tint N = one.get(0);\\n\tint M = one.get(1);\\n\tint[] dp = new int[N + 1];\\n    Arrays.fill(dp, -1);\\n\tdp[0] = 1;\\n\tfor(int i = 0; i < M; i++){\\n\t\tdp[nextInt()] = 0;\\n\t}\\n\tint mod = 1000000007;\\n\tfor(int i = 1; i <= N; i++){\\n\t\tif(dp[i] == -1){\\n\t\t\tif(i == 1){\\n\t\t\t\tdp[i] = 1;\\n\t\t\t}else{\\n\t\t\t\tdp[i] = dp[i - 2] + dp[i - 1];\\n\t\t\t\tdp[i] %= mod;\\n\t\t\t}\\n\t\t}\\n\t}\\n\tmyout(dp[N]);\\n\t}\\n\t//Method addition frame start\\n\\n\\n\\n\t//Method addition frame end\\n}\\n", "target": "174", "substitutes": {}}
{"code": "import java.util.*;\\nimport static java.lang.System.*;\\n\\nclass Main {\\n  public static final int MOD = 1000000007;\\n  public static final int INF = 1000000000;\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(in);\\n    Integer c[][] = new Integer[3][3];\\n    for(int i=0; i<3; i++){\\n      for(int j=0; j<3; j++){\\n        c[i][j] = sc.nextInt();\\n      }\\n    }\\n    int a,b;\\n    a = c[0][0] - c[0][1];\\n    b = c[0][1] - c[0][2];\\n    String ans = \"Yes\";\\n    for(int i=1; i<3; i++){\\n      if(a != c[i][0] - c[i][1] || b != c[i][1] - c[i][2]){\\n        ans = \"No\";\\n        break;\\n      }\\n    }\\n    for(int j=1; j<3; j++){\\n      if(c[0][0] - c[1][0] != c[0][j] - c[1][j] || c[1][0] - c[2][0] != c[1][j] - c[2][j]){\\n        ans = \"No\";\\n        break;\\n      }\\n    }\\n    out.println(ans);\\n          \\n  }\\n\\n  public static int gcd(int a, int b){\\n    if(b == 0) return a;\\n    return gcd(b, a%b);\\n  }\\n}", "target": "88", "substitutes": {"MOD": ["MA", "MAC", "RES", "MAX", "AD", "MD", "LOG", "FD", "RO", "COM", "REM", "LD", "RT", "EXP", "NET", "REG", "INC", "DEC", "MODE", "REF", "MIN", "Mod", "FIN", "RC", "MT", "RM", " mod", "mod"], "INF": ["INH", "INZ", " INFD", " INH", "ANH", "ANZ", "InZ", " INZ", "InFD", "ANF", "InF", "InH", "INFD", "ANFD"], "sc": ["SC", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sch", "sq", "out", "sub", "uc", "anc", "sec", "sp", "cc", "isc", "esc", "ser", "cl", "lc", "desc", "screen", "mc", "nl", "scl", "cr", "capt", "ch", "sel", "ss", "cs", "ec", "tc", "Sc", "sb", "scan"], "c": ["cmp", "ci", "pc", "cos", "f", "C", "cu", "ct", "ic", "t", "u", "circle", "rc", "csv", "com", "abc", "count", "gc", "cv", "toc", "x", "o", "data", "col", "fc", "r", "config", "cont", "cycle", "err", "n", "ce", "cc", "cur", "codes", "spec", "xc", "v", "conf", "cal", "cl", "con", "lib", "lc", "cb", "cats", "cat", "l", "arc", "co", "mc", "it", "cr", "p", "ch", "chain", "etc", "cm", "comp", "cf", "vc", "conv", "cp", "dc", "cs", "cache", "ec", "tc", "g", "ac"], "i": ["io", "at", "us", "o", "index", "y", "ix", "iii", "l", "pi", "ii", "id", "ti", "bi", "fire", "phi", "ie", "hi", "ci", "xi", "ei", "II", "base", "ori", "init", "ui", "uri", "qi", "multi", "my", "print", "ex", "ini", "m", "ion", "iter", "si", "ic", "sim", "is", "ind", "x", "mi", "name", "gi", "it", "p", "di", "ims", "z", "zi", "iq", "I", "ar", "u", "ai", "me", "key", "iy", "im", "v", "info", "q", "this", "ki", "ia", "ri", "ity", "ij", "li", "item", "iu", "ip"], "j": ["or", "note", "off", "at", "bl", "o", "n", "y", "next", "jump", "jit", "other", "el", "g", "ie", "f", "bj", "t", "jl", "out", "ng", "jc", "pt", "dj", "J", "br", "jj", "str", "d", "jas", "obj", "exp", "er", "k", "ind", "on", "sp", "err", "ev", "org", "name", "json", "ji", "it", "to", "fr", "z", "og", "ja", "ax", "js", "oj", "job", "uj", "h", "key", "by", "im", "v", "q", "bo", "pr", "aj", "jp", "jo", "let", "ij", "ot", "kj", "ne"], "a": ["ar", "aa", "f", "t", "at", "u", "al", "ai", "ra", "aq", "area", "va", "A", "au", "na", "x", "o", "ab", "oa", "pa", "add", "ach", "d", "r", "ao", "ba", "an", "am", "h", "n", "ap", "y", "app", "s", "m", "ea", "ga", "ia", "l", "sta", "ta", "aj", "ae", "aaa", "aff", "e", "apa", "p", "ca", "ata", "as", "la", "alpha", "to", "sa", "eas", "ma", "val", "g", "ac"], "b": ["mb", "bool", "bp", "nb", "f", "back", "bb", "t", "u", "bc", "bh", "bin", "base", "bis", "bl", "bf", "ab", "o", "x", "B", "r", "fb", "g", "ba", "n", "wb", "eb", "beta", "ib", "y", "v", "by", "bs", "ob", "cb", "l", "rb", "binary", "it", "e", "br", "bd", "p", "gb", "bar", "db", "be", "bi", "z", "d", "m", "sb"], "ans": ["ras", "ANS", "orts", "anks", "offs", "ats", "ads", "eps", "aps", "eds", "csv", "ann", "ols", "ants", "ins", " means", "outs", "uns", "ms", "helps", "aus", "uts", "ks", "an", " scans", "els", "vs", "angs", "ags", "ups", "os", "amps", "s", "rans", "acts", "aos", "posts", "olds", "ons", "ens", "ots", "ars", "ows", "uploads", "ids", "ns", "rs", "aints", "ls", "ds", "utters", "vals", "ents", "cs", "mas", "actions", "arms", "caps", "arts", "jas", "ts"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner in = new Scanner(System.in);\\n\\n\t\tint p = in.nextInt();\\n\t\tint q = in.nextInt();\\n\t\tint r = in.nextInt();\\n\\n\t\tint max = 0;\\n\t\tif ( p >= q && p >= r ) max = p;\\n\t\tif ( q >= p && q >= r ) max = q;\\n\t\tif ( r >= q && r >= p ) max = r;\\n\\n\t\tSystem.out.println(p + q + r - max);\\n\t\tin.close();\\n\t}\\n}", "target": "89", "substitutes": {"in": ["or", "din", "io", "serv", "IN", "window", "inn", "inner", "from", "mm", "bin", "all", "net", "is", "out", "ind", "i", "ins", "sum", "add", " IN", "client", "conn", "std", "on", "err", "and", "check", "n", "thin", "read", "isin", "by", "init", "en", "info", "con", "per", " din", "gin", "doc", "asin", "cin", "In", "inc", "it", "world", "input", "stream", "old", "file", "ini", "cgi", "null", "as", "user", "id", "inf", "reader", "log", "ma", "get", "scan"], "p": ["pc", "art", "ar", "pp", "f", "pb", "t", "pe", "pos", "u", "part", "pro", "dp", "port", "op", "k", "i", "x", "pa", "vp", "ps", "tp", "par", "ping", "sp", "pkg", "up", "P", "c", "pid", "n", "php", "pt", "ap", "v", "pg", "per", "pl", "j", "perm", "l", "pr", "a", "lp", "jp", "np", "pi", "ph", "e", "pre", "cp", "d", "m", "point", "g", "ip"], "q": ["iq", "qs", "ql", "f", "qt", "pp", "aq", "u", "re", "dq", "Q", "er", "eq", "sh", "k", "ox", "sq", "i", "x", "gr", "quote", "ur", "pkg", "g", "qq", "n", "c", "qu", "h", "cur", "pt", "y", "v", "pg", "ry", "ix", "m", "ve", "j", "l", "ue", "qi", "req", "qa", "ch", "ck", "requ", "mk", "quit", "cp", "z", "query", "quant", "ip"], "r": ["ar", "R", "f", "ru", "t", "u", "re", "rc", "dq", "er", "ro", "dr", "k", "out", "i", "gr", "ur", "rr", "err", "c", "n", "tr", "ir", "h", "v", "w", "rh", "j", "l", "mr", "pr", "rm", "rb", "rar", "res", "e", "cr", "br", "kr", "b", "rg", "rt", "rs", "nr", "hr", "rd", "vr", "d", "m", "g", "sr", "fr"], "max": ["aux", "root", "MAX", "auto", "huge", "show", "ax", "view", "mode", "range", "scale", "exp", "all", "net", "Max", "map", "right", "base", "last", "k", "with", "out", "global", "parent", "x", "ms", "size", "dev", "use", "full", "maximum", "n", "cur", "med", "name", "prime", "v", "conf", "min", "master", "load", "limit", "mr", "pr", "lock", "rest", "force", "rand", "recent", "res", "step", "mx", "gt", "total", "tx", "mad", "major", "end", "depth", "checked", "dot", "star", "set", "mod", "default", "big"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n    public static void main(String[]args) {\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        try {\\n       String isSafe = \"\";\\n    \\n       int [] a = new int [2];\\n     \\n       \\n       String  lines = br.readLine();    \\n    \\n       String[] strs = lines.trim().split(\"\\\\s+\");\\n      \\n       for (int i = 0; i < strs.length; i++) {\\n       a[i] = Integer.parseInt(strs[i]);\\n       }\\n\\n       if(a[1]>=a[0]){\\n           isSafe = \"unsafe\";\\n       }\\n       else{\\n           isSafe = \"safe\";\\n       }\\n       System.out.println(isSafe);\\n    }catch (Exception e) {\\n    }\\n    \\n}}", "target": "177", "substitutes": {"br": ["bp", "bh", "bridge", "ro", "er", "dr", "bro", "bl", "abs", "ctr", "gr", "r", "sp", "tr", "shr", "lr", "yr", "bt", "mr", "Br", "pr", "sr", "rb", "cr", "bd", "ch", "kr", "BR", "be", "browser", "rel", "hr", "buf", "fr", "str", "ber", "wr", "vr"], "isSafe": [" isEmpty", "isFree", "hasOk", "isaSecure", "isOk", "ISOk", " isSecure", "isSmart", "issafe", "isinEmpty", "isinSafety", "wassafe", "Issafe", "IsSafe", "wasSafe", "issEmpty", "isProtect", "IsSafety", "isasafe", "ISSafe", "ISProtect", "isSecure", "isinOk", " isSafety", "isaSafety", "ISEmpty", "ISFree", "ISSafety", "issSafety", "wasSafety", "hasProtect", "hasSafety", "isSafety", "isEmpty", "issSafe", "isinSafe", "isinFree", "isinSmart", "wasEmpty", "ISSmart", "IsSecure", " isSmart", "isssafe", "isinProtect", "hasSafe", "isaSafe", " issafe", " isFree"], "a": ["aux", "aw", "ar", "aa", "ack", "at", "t", "area", "all", "A", "ka", "da", "au", "ava", "abs", "na", "ab", "marks", "o", "oa", "ao", "ba", "an", "am", "c", "h", "s", "m", "aos", "ga", "eas", "ia", "sta", "ae", "aaa", "pi", "e", "apa", "p", "aka", "b", "ca", "ata", "as", "la", "att", "array", "sa", "act", "ma", "ac"], "lines": ["odes", "cells", "qs", "runs", "ues", "values", " ls", "rows", " contents", "inline", "strings", " Lines", "names", "prints", "elines", "pins", " stretches", "links", "vs", "bytes", "los", " spans", "ines", "blocks", "locks", "olds", " objects", "lins", "l", " issues", "points", " traces", " rows", "nl", "ids", "breaks", "ls", "parts", "vals", "works", "reads", "line", "rates", "comments"], "strs": ["Strrs", "collis", "strms", " strms", " strps", "Strms", "Strn", "intn", "strn", "intps", "grrs", "collrs", " strjs", "ints", "strps", "grs", " stris", "STRjs", "colls", "intms", " strrs", "STRs", "gris", " strn", "strjs", "STRrs", "Strjs", "Strps", "Strs", "stris", "strrs"], "i": ["iter", "I", "span", "ci", "\u0438", "si", "io", "ic", "sim", "u", "ai", "us", "ei", "me", "used", "is", "ind", "x", "o", "no", "mi", "c", "n", "cli", "key", "v", "y", "init", "im", "ix", "gi", "ui", "q", "info", "json", "ri", "ki", "j", "uri", "batch", "qi", "pi", "multi", "ji", "it", "my", "ii", "p", "PI", "chain", "di", "ini", "id", "li", "in", "ti", "bi", "set", "list", "m", "point", "phi", "slice", "ip"]}}
{"code": "import java.util.Scanner;\\nimport java.util.Arrays;\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scan = new Scanner(System.in);\\n      int N = scan.nextInt();\\n      int K = scan.nextInt();\\n      int[] pn = new int[N];\\n      int result = 0;\\n      \\n      for(int i=0; i<N; i++){\\n        pn[i] = scan.nextInt();\\n      }\\n      Arrays.sort(pn);\\n      for(int i=0; i<K; i++)\\n        result += pn[i];\\n      System.out.println(result);\\n    }\\n}\\n", "target": "41", "substitutes": {"scan": ["sm", "go", "sort", "report", "connect", "sql", "sys", "black", "pass", "san", "Scan", "sv", "se", "re", "ann", "sync", "send", "reach", "k", "out", "gate", "gc", "find", "sum", "save", "skip", "parse", "na", "r", "sb", "sur", "sp", "check", "an", "n", "read", "nn", "ser", "scroll", "con", "ner", "cat", "build", "store", "sin", "p", "can", "system", "ch", "search", "sn", "seek", "cgi", "util", "proc", "sche", "row", "in", "see", "sign", "pan", "query", "sc", "g"], "N": ["I", "NM", "NN", "R", "NC", "AN", "ND", "L", "C", "NO", "A", "Num", "NT", "Z", "O", "M", "D", "S", "UN", "F", "P", "V", "n", "NG", "NR", "Ni", "NB", "NP", "TN", "NW", "NI", "GN", "NA", "J", "NH", "NS", "SN", "T", "Ns", "Sn", "KN", "NE"], "K": ["I", "KING", "KC", "R", "C", "L", "FK", "KE", "PK", "Q", "M", "k", "UK", "Kent", "P", "V", "AK", "W", "KK", "Sch", "SK", "KR", "WH", "Mask", "TH", "G", "J", "H", "KI", "KA", "T", "KT", "KEY", "KS", "KN"], "pn": ["pen", "pc", "pir", "wn", "pp", "pb", "pes", "von", "ppa", "pron", "pak", "port", "mn", "pa", "vp", "tp", "pd", "ping", "pm", "phy", "xon", "son", "pu", "n", "nn", "fn", "php", "pt", "tn", "gn", "dn", "pl", "pers", "pas", "phe", "rn", "pr", "np", "pose", "p", "pin", "png", "ny", "pol", "pse", "ni", "nw", "PN", "cp", "pps", "atan", "pan", "kin", "ln", "pres", "bn"], "result": ["found", "error", "sequence", "length", "success", "done", "def", "date", "ULT", "direction", "product", "integer", "match", "complete", "transform", "params", "test", "the", "sum", "data", "tmp", "score", "different", "relation", "currency", "cup", "value", "goal", "function", "results", "output", "valid", "term", "true", "power", "description", "summary", "red", "current", "res", "diff", "feature", "continue", "command", "other", "total", "search", "ret", "null", "Result", "number", "trace", "comment", "default", "message"], "i": ["zi", "ie", "hi", "ci", "I", "iso", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "ei", "xi", "inner", "us", "me", "base", "is", "ind", "point", "ori", "o", "client", "mi", "err", "cli", "mu", "iy", "im", "y", "init", "gi", "q", "ix", "ui", "ri", "ki", "batch", "j", "uri", "ity", "qi", "pi", "multi", "ji", "ij", "it", "print", "ii", "PI", "chain", "gu", "ini", "di", "ni", "id", "li", "ti", "bi", "ims", "fire", "iu", "phi", "g", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        final Scanner scanner = new Scanner(System.in);\\n\\n        final int w = scanner.nextInt();\\n        final int h = scanner.nextInt();\\n        final int x = scanner.nextInt();\\n        final int y = scanner.nextInt();\\n\\n        final double max = w / 2.0 * h;\\n        final int multi = x == w / 2.0 && y == h / 2.0 ? 1 : 0;\\n\\n        System.out.println(max + \" \" + multi);\\n    }\\n}", "target": "182", "substitutes": {"scanner": ["Scanner", "canning", "reachner", "Scaner", "scanning", "scaner", " scanator", "canutor", "reachutor", "scanener", " scanter", "reachning", "canter", "parsening", "scanator", "serialNER", "spener", "scanNER", "canator", "speener", "Scanener", " scanener", "parseutor", "parseener", "scanutor", " scaner", "speNER", "Scanter", "caner", "serialner", "spening", "canNER", "canener", "serialener", "Scanator", "parsener", "reachener", "scanter", "canner", "serialning"], "w": ["sw", "word", "wd", "t", "window", "iw", "wa", "wp", "ww", "wt", "hw", "r", "ew", "n", "wb", "v", "W", "wi", "m", "ws", "kw", "wh", "l", "we", "wx", "fw", "wid", "p", "win", "ex", "ow", "nw", "words", "width", "wl", "rw", "z", "d", "work", "g", "wr"], "h": ["hi", "length", "history", "hh", "hs", "kh", "hw", "sh", "k", "height", "ha", "c", "n", "v", "ah", "ht", "rh", "her", "j", "high", "l", "hl", "hash", "oh", "he", "ih", "ph", "it", "H", "ch", "p", "hd", "hal", "b", "hm", "hr", "z", "ho", "m"], "x": ["fx", "px", "xp", "xd", "ax", "t", "xt", "xx", "xi", "xf", "dx", "ox", "i", "o", "r", "n", "xc", "ix", "wx", "rx", "mx", "p", "xy", "tx", "ex", "X", "inx", "width", "z", "m", "ux", "xs"], "y": ["ye", "cy", "yl", "py", "t", "Y", "ies", "oy", "out", "i", "o", "sy", "ys", "ym", "ery", "n", "iy", "yt", "v", "ry", "yr", "ay", "j", "ey", "ya", "ch", "p", "ny", "xy", "b", "yy", "z", "m", "yo"], "max": ["aux", "MAX", "huge", "ax", "range", "re", "exp", "map", "Max", "right", "dx", "last", "ox", "inv", "sum", "size", "r", "rank", "full", "maximum", "med", "prime", "min", "conf", "m", "box", "mod", "res", "mx", "norm", "gt", "tx", "ca", "mad", "total", "end", "dot", "ma"], "multi": ["stable", "broad", "done", "mix", "auto", "mode", "div", "sim", "loop", "i", "sum", "single", "multipl", "partial", "cli", "mu", "min", "tu", "multiple", "perm", "batch", "unique", "extra", "tri", "pool", "managed", "cm", "di", "group", "total", "mean", "li", "num", "none", "mult", "complex", "m", "split", "phi", "Multi"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner in = new Scanner(System.in);\\n    int num = Integer.parseInt(in.nextLine());\\n    List<Integer> dif = new ArrayList<>();\\n    while(in.hasNext()){\\n      dif.add(Integer.parseInt(in.next()));\\n    }\\n    Collections.sort(dif);\\n    int ans = dif.get(num / 2) - dif.get(num / 2 - 1);\\n    System.out.println(ans);\\n  }\\n}\\n", "target": "119", "substitutes": {"in": ["din", "io", "lines", "IN", "serv", "al", "inn", "inner", "from", "raw", "bin", "all", "re", "sol", "is", "out", "ind", "i", "ins", "sum", " out", "std", "d", "r", "on", "rin", "err", "check", "n", "source", "thin", "isin", "by", "init", "conf", "en", "con", "per", "gin", "doc", "l", "asin", "cin", "In", "sin", "inc", "it", "world", "input", "run", "stream", "file", "ini", "null", "as", "user", "inf", "vin", "reader", "log", "ln", "line", "scan"], "num": ["nm", "mon", "nb", "snap", "tim", "coord", "Num", "max", "phys", "count", "mn", "out", "sum", "na", "no", "hom", "alph", "nam", "n", "nn", "cum", "index", "mat", "NUM", "cal", "en", "con", "Number", "den", "sam", "nu", "su", "np", "multi", "total", "nt", "um", "conv", "number", "un", "nom", "mult"], "dif": ["dselta", "ldif", "def", " def", "dsif", "sdif", "dsef", "Dift", "dim", " difi", "sdim", "Dif", "ldIF", "odift", "dsIF", "delta", "Diff", "Def", "difi", " diff", " dIF", "fdif", "ldifi", "dift", "dsiff", "fdIF", " dIf", " dift", "ldIf", "dsim", "fdifi", "dIF", " delta", "fdIf", "dsifi", " dim", "diff", "DIF", "odIF", "Difi", "sdIF", "dIf", "dsift", "sdelta", "Dim", "odiff", "odif"], "ans": ["nets", "arts", "ANS", "orts", "anks", "offs", "AN", "anes", "ats", "ads", "aps", "eds", "ann", "idents", "ants", "ins", " means", "uns", "outs", "ms", "ps", "orders", "an", "ks", " scans", "ians", "lan", "sets", "amps", "rans", " spans", "books", "posts", "olds", "asks", " Ans", "ens", "ots", "ates", "ls", "ales", "aned", "pan", "una", "izes", "ents"]}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main{\\n    static public void main(String[] args) throws Exception{\\n        //BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\\n        //String[] buf = reader.readLine().split(\" \")\\n        Main main = new Main();\\n        main.solve();\\n    }\\n    void solve(){\\n        Scanner sc = new Scanner(System.in);\\n        char[] s = sc.next().toCharArray();\\n        char c = s[0];\\n        char a = (char)(c+1);\\n        System.out.println(a);\\n    }\\n}\\n\\n", "target": "150", "substitutes": {}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tstatic Scanner sc = new Scanner(System.in);\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tint n = sc.nextInt();\\n\t\tint ans = 1;\\n\\n\t\twhile (n >= ans) {\\n\t\t\tans *= 2;\\n\t\t}\\n\t\tSystem.out.print(ans / 2);\\n\\n\t}\\n}", "target": "225", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "syn", "Scan", "sv", "rc", "nc", "bc", "sch", "gc", "sq", "cv", "uc", "ng", "anc", "sk", "sp", "c", "cc", "isc", "cl", "lc", "mc", "res", "cr", " scr", "ch", "system", "ok", "ss", "sa", "dc", "cs", "ec", "tc", "Sc", "sb", "scan"], "n": ["nm", "nb", " gn", "nc", "net", "mn", "nan", "i", "na", " ns", "x", "names", "ng", "an", "c", " ng", "nn", "name", "v", "gn", "s", "non", "N", "j", "nl", "np", "cn", "norm", "sn", "ns", "nt", "ni", "nw", "num", "un", "d", "m", "rn"], "ans": ["nets", "nos", "ANS", "orts", "ions", "anks", "anners", "offs", "checks", "nan", "AN", "lines", "anes", "ats", "aps", "us", "rows", "eds", "ann", "is", " opens", "mn", "ants", "ins", "na", "outs", " fans", "ms", "x", "names", "ps", "uns", "aus", "an", " scans", "ians", "ks", "angs", "nn", "lan", "os", "tn", "s", " spans", "N", "beans", "ons", "anas", "ens", "vers", "nl", "ations", "ids", "ns", "rs", "ls", "as", " orphans", "scan", "nas", "ents", "cs", "un", "actions", "arts", "xs", "ts"]}}
{"code": "import java.util.*;\\npublic class Main {\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int n = sc.nextInt();\\n    int t = sc.nextInt();\\n    int c1;\\n    int t1;\\n    int cmin = 1024;\\n    for(int i=0; i<n; i++){\\n      c1 = sc.nextInt();\\n      t1 = sc.nextInt();\\n      if(t1 <= t){\\n        if(c1 < cmin)\\n          cmin = c1;\\n      }\\n    }\\n    if(cmin == 1024)\\n      System.out.println(\"TLE\");\\n    else\\n      System.out.println(cmin);\\n  }\\n}\\n", "target": "8", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "exp", "sh", "sch", "gc", "sq", "anc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "ko", "lc", "irc", "ctl", "desc", "dec", "mc", "inc", "scl", "cr", " scr", "ch", "system", "ck", "cgi", "ss", "sci", "conv", "dc", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "n": ["nv", "nm", "nb", "network", "ln", "nc", "net", "mn", "na", "x", "no", "ng", "c", "nn", "name", "en", "N", "j", "l", "nu", " N", "np", "nl", "p", "sn", "ns", "nt", "nw", "ni", "number", "num", "nr", "d", "m", "ne"], "t": ["te", "f", "at", "wt", "k", "o", "type", "r", "c", "tr", "h", " T", "y", "v", "tw", "ty", "tu", "q", "j", "l", "ta", "tt", "ot", "p", "tm", "total", "nt", "dt", "T", "d", "m", "tc", "g", "ts"], "c1": [" c_", "cOnce", "cf7", "pc2", "tmin", "cfOnce", "con1", " c01", "pc1", "dc01", "conmin", "t3", " c7", "dcmin", "scOnce", "cf1", "pc6", " cOnce", "c01", "c6", "sc1", "c3", "cf51", " c6", "t01", " c51", "t6", "con3", "con01", " c3", "t2", "c_", "c7", "sc7", "dc3", "t_", " c2", "sc51", "c2", "dc1", "pc_", "c51"], "t1": ["tt91", "t9", "c0", "c4", " t2", "t91", "tc4", " t9", "int1", "tc1", "t3", "pt1", "c11", "tc2", "tt3", " t4", " t0", "t11", " t3", "c91", "t2", " t11", "pt91", "pt3", "int2", "tt9", "tc11", "c2", "t0", "tt1", "pt9", "int0", "t4", " t91", "int91"], "cmin": ["lcmini", "ccmini", " clt", "lcmin", " cminute", "tmax", "tMin", "cMin", "gmin", "tmin", "gMin", " cerr", "ccmode", "cerr", "lclt", "arcmin", "fmin", "lcminimum", "clt", "tminute", "csmall", "tdiff", "cachesmall", "cminimum", " cMin", "lcmode", "ccmin", " cdiff", "cachediff", "cachemax", "tsmall", " cmini", "lclower", "ferr", "cmini", "cachemin", "cacheminute", "cmode", "cminute", "arcmode", "clower", "gmini", "arcmini", "cacheMin", " cmax", " cminimum", "cdiff", "cmax", "flt", "lcerr", "gmax", "arclower", "tmini", " csmall", "cclower", "fminimum"], "i": ["zi", "iter", "I", "hi", "ci", "ie", "sql", "si", "sim", "ai", "xi", "us", "me", " j", "is", "ind", "loop", "x", "ms", "z", "mi", "c", "cli", "index", "init", "im", "gi", "q", "ix", "ui", "j", "batch", "a", "qi", "pi", "multi", "it", "ii", "chain", "gu", "ini", "di", "ex", "id", "li", "bi", "set", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner scan = new Scanner(System.in);\\n        int a = scan.nextInt();\\n        int b = scan.nextInt();\\n        int T = scan.nextInt();\\n        int result = b * (int) ((T + 0.5) / a);\\n        System.out.println(\"\" + result);\\n    }\\n\\n}\\n", "target": "4", "substitutes": {"scan": ["report", "auto", "sql", "sys", "black", "get", "san", "range", "Scan", "sv", "se", "re", "ann", "bin", "scale", "send", "reach", "gate", "out", "gc", "find", "save", "skip", "parse", "r", "sur", "g", "check", "an", "n", "nn", "read", "scroll", "info", "ner", "serial", "char", "sin", "ch", "can", "system", "p", "run", "search", "cgi", "util", "proc", "row", "in", "see", "list", "set", "log", "query", "sc", "sb"], "a": ["aa", "f", "t", "window", "u", "ai", "area", "all", "A", "count", "i", "x", "ab", "oa", "r", "ao", "an", "ba", "n", "am", "c", "index", "ea", "power", "ia", "l", "sta", "isa", "ta", "aj", "ae", "e", "p", "ca", "alpha", "la", "sa", "z", "ma", "val", "ac"], "b": ["bp", "nb", "f", "t", "bb", "bc", "A", "base", "i", "ab", " B", "B", "r", "sb", "fb", "c", "ba", "n", "h", "ib", "y", "v", "bs", "ob", "bt", "j", "l", "rb", "e", "gb", "p", "bi", "z", "d", "m", "g"], "T": ["E", "I", "R", "TB", "C", "L", "t", "TS", "Y", "TY", "TT", "Q", "A", "Z", "O", "TA", "M", "D", "S", "B", "F", "P", "V", "TC", "W", "N", "TN", "K", "TH", "G", "J", "H", "GT", "TI", "TP", "TM"], "result": ["report", "sequence", "success", "ULT", "RESULTS", "direction", "product", "integer", "complete", "operation", "match", "test", "response", "score", "r", "successful", "object", "relation", "currency", "value", "function", "results", "output", "correct", "valid", "power", "true", "term", "su", "answer", "res", "feature", "continue", "ret", "Result", "message"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args)throws IOException{\\n\t\tBufferedReader buf = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString s;\\n\t\tint i=0,x;\\n\\n\t\tdo{\\n\t\t\ts= buf.readLine();\\n\t\t\tx= Integer.parseInt(s);\\n\t\t\ti=i+1;\\n\t\tif(x!=0){\\n\t\t\tSystem.out.println(\"Case \"+i+\": \"+x);\\n\t\t}\\n\t\telse{}\\n\t\t}while(x!=0);\\n\t}\\n}", "target": "97", "substitutes": {"buf": ["mb", "Buffer", "uf", "cap", "bp", "nb", "pb", "tab", "ctx", "book", "img", "window", "bed", "foo", "bc", "bh", "ref", "cam", "bg", "bl", "cv", "buffer", "tmp", "alph", "pkg", "ered", "mu", "ah", "bo", "cb", "rb", "buff", "mem", "req", "br", "cmd", "b", "queue", "bar", "db", "Buff", "block", "bag"], "s": ["its", "es", "qs", "hs", "sql", " ts", "t", "ats", "js", " ls", "sv", "sts", "gets", "csv", "raw", "aws", "is", "sq", "S", "ms", "ps", "less", "full", " str", "source", "h", "os", "spec", "w", "ws", "space", "l", "string", "gs", "e", "b", "ns", "rs", "ls", "str", "ims", "m", "ss", "g", "ts", "comments"], "i": ["zi", "I", "hi", "ci", "ami", "f", "si", "ic", "u", "oi", "ai", "ei", "xi", "is", "ind", "o", "mi", "index", "im", "v", "init", "iat", "ix", "ui", "ri", "j", "pi", "multi", "ij", "it", "ii", "p", "di", "ini", "yi", "id", "li", "conv", "in", "ti", "bi", "d", "m", "iu", "phi", "ip"], "x": ["px", "xp", "xml", "xd", "ctx", "ax", "xx", "xt", "xi", "lex", "xf", "xa", "dx", "ox", "o", "check", "php", "xxxxxxxx", "xc", "v", "y", "ix", "one", "xe", "wx", "rx", "mod", "co", "xb", "mx", "e", "xy", "xes", "tx", "ex", "X", "rex", "conv", "checked", "z", "xxx", "ux", "xs"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.*;\\nimport java.util.*;\\nimport java.util.ArrayList;\\nimport java.util.Iterator;\\nimport java.util.List;\\nimport java.util.Collections;\\npublic class Main {\\n\tpublic static void main(final String[] args){\\n    \\n    Scanner sc = new Scanner(System.in);\\n    \\n    int a = sc.nextInt();\\n    int b = sc.nextInt();\\n    int c = sc.nextInt();\\n    int d = sc.nextInt();\\n    int e = sc.nextInt();\\n\\n    if(a == 0){\\n        System.out.println(1);\\n    }else if(b == 0){\\n        System.out.println(2);\\n    }else if(c == 0){\\n        System.out.println(3);\\n    }else if(d == 0){\\n        System.out.println(4);\\n    }else{\\n        System.out.println(5);\\n    }\\n\\n    \\n\\n\\n    \\n    \\n\\n\\n    \\n\\n\\n    \\n    \\n\\n\\n    \\n\t}\\n}", "target": "222", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "syn", "ctx", "pb", "psc", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "scope", "fc", "sec", "sem", "sp", "cc", "isc", "esc", "cl", "ko", "lc", "ctl", "ctrl", "mc", "inc", "scl", "cr", "capt", "ch", "sci", "sic", "conv", "sa", "dc", "cle", "cs", "tc", "Sc", "sb"], "a": ["aa", "ai", "area", "va", "A", "da", "au", "ava", "na", "ab", "oa", "r", "ach", "ao", "ba", "an", "am", "app", "ea", "ga", "ia", "ua", "ta", "av", "admin", "aj", "ae", "aaa", "af", "ca", "as", "la", "any", "sa", "act", "ma", "ac"], "b": ["mb", "bp", "nb", "bb", "bc", "bis", "bl", "bf", "ab", " B", "B", "r", "fb", "g", "ba", "n", "rob", "eb", "ib", "y", "bs", "ob", "cb", "rb", "br", "db", "be", "erb", "bi", "sb"], "c": ["ci", "ct", "C", "cu", "com", "rc", "bc", "cv", "uc", "cd", "fc", "unc", "cod", "ce", "cc", "lc", "cb", "red", "co", "enc", "cn", "ch", "etc", "cm", "ca", "cf", "dc", "cp", "cs", "ec", "tc", "g", "ac"], "d": ["dd", "f", "de", "div", "t", "dra", "ad", "du", "dr", "dp", "dx", "D", "da", "data", "fd", "pd", "cd", "r", "md", "df", "n", "des", "dh", "dec", "dl", "red", "bd", "td", "di", "nd", "dt", "ds", "db", "dc", "g"], "e": ["E", "eff", "f", "t", "pe", "me", "er", "ne", "n", "ev", "h", "eb", "v", "fe", "ef", "w", "xe", "l", "ue", "p", "le", "ee", "ec", "et", "el", "g", "se"]}}
{"code": "import java.util.Scanner;\\n\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO ?????????????????????????????????????????????\\n\\n\t\tint n,i,j,a,maxv,minv;\\n\t\tScanner sc=new Scanner(System.in);\\n\t\tn=Integer.parseInt(sc.next());\\n\t\tint r[]=new int[n];\\n\t\tfor(i=0;i<n;i++){\\n\t\t\tr[i]=Integer.parseInt(sc.next());\\n\t\t}\\n\\n\t\tmaxv=r[1]-r[0];\\n\t\tminv=r[0];\\n\t\tfor(j=1;j<n;j++){\\n\t\t\tmaxv=Math.max(maxv, r[j]-minv);\\n\t\t\tminv=Math.min(minv, r[j]);\\n\t\t}\\n\\n\t\tSystem.out.println(maxv);\\n\\n\\n\t}\\n\\n}", "target": "208", "substitutes": {}}
{"code": "import java.util.Scanner; \\npublic class Main {\\n    public static void main(String[] args) {\\n       Scanner sc = new Scanner(System.in); \\n        int N = sc.nextInt();        \\n        String S = sc.next();  \\n\\n       int i ;\\n       int m = 0 ;\\n\\n       String[]  stringArray;        \\n       stringArray= new  String[N];\\n\\n       for(i = 1 ; i <= N ; i++) {\\n\\n             stringArray[i-1]  = S.substring(i-1, i);\\n      //    System.out.println(stringArray[i-1]);\\n       }\\n    \\n       for(i = 1 ; i < N ; i++) {\\n\\n             if  (stringArray[i-1].equals(stringArray[i] ) )  {\\n            \\n             } else  {\\n               m = m + 1;\\n             }\\n\\n       }\\n     if (N > 0 ) {  \\n          System.out.println(m+1);\\n           }\\n     }\\n\\n} \\n", "target": "218", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "ng", "anc", "sec", "sp", "c", "cc", "esc", "isc", "ser", "cl", "ko", "lc", "ctl", "desc", "cons", "mc", "inc", "scl", "cr", "ok", "ch", "sel", "ss", "sci", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "N": ["I", "NN", "NM", "R", "NC", "C", "ND", "L", "Q", "Num", "NT", "O", "M", "D", "B", "EN", "F", "P", "V", "n", "NR", "Ni", "TN", "NI", "GN", "NA", "K", "G", "J", "H", "NS", "X", "SN", "Length", "T", "Ns"], "S": ["I", "R", "C", "RS", "SH", "TS", "SL", "SS", "SU", "M", "SER", "CS", "SA", "PS", "B", "F", "P", "V", "SOURCE", "s", "IS", "SF", "SI", "GS", "SO", "G", "Si", "SE", "MS", "SP", "NS", "SAM", "BS", "T", "ASS", "RAW"], "i": ["zi", "iter", "I", "ie", "ci", "hi", "status", "ami", "f", "io", "si", "ic", "t", "u", "sim", "ai", "xi", "ei", "oi", "k", "ish", "ind", "is", "o", "x", "mi", "n", "cli", "index", "v", "y", "im", "gi", "ix", "info", "ui", "s", "ri", "ki", "ia", "j", "l", "batch", "uri", "qi", "pi", "multi", "ji", "it", "ii", "p", "ini", "di", "ni", "id", "li", "fi", "ti", "bi", "ims", "iu", "phi", "ip", "asi"], "m": ["sm", "em", "nm", "mode", "t", "max", "M", "mn", " M", "ms", "mi", "c", "n", "mu", "im", "v", "w", "rm", "j", "l", "mask", "mem", "p", "b", "cm", "set", "d"], "stringArray": ["StringArray", "stringList", " stringMemory", " stringValue", "listObject", "listArray", "arrayIndex", " stringList", " stringAr", "stringCount", "valueArray", "arrayMap", "arrayList", "listAr", "stringMap", "valueIndex", "StringCount", "valueList", "StringValue", "stringIndex", "passwordObject", " stringIndex", " stringCount", "listMemory", "ringCount", " stringMap", "arrayArray", "valueMap", "ringArray", " stringObject", "StringList", "ringValue", "stringObject", "stringValue", "passwordArray", "passwordAr", "passwordMemory", "stringMemory", "stringAr", "ringList"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\\n\t\twhile (true) {\\n\t\t\tString[] lines =  sc.nextLine().split(\"\");\\n\t\t\tint sum = 0;\\n\t\t\tfor(int i = 0;i < lines.length;i++) {\\n\t\t\t\tsum += Integer.parseInt(lines[i]);\\n\t\t\t}\\n\t\t\tif(sum == 0) {\\n\t\t\t\tbreak;\\n\t\t\t}\\n\t\t\tSystem.out.println(sum);\\n\t\t}\\n\t}\\n}", "target": "144", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "usc", "se", "sv", "tk", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "sch", "anc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", "desc", "dec", "mc", "scl", "cr", "capt", "ch", "system", "sel", "ss", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "lines": ["nets", "its", "odes", "cells", "qs", "ues", "values", "frames", "faces", "sts", "gets", "rows", "strings", "ms", "elines", "pins", "phones", "mails", "links", "vs", "fts", "bytes", "codes", "ends", "ines", "posts", "blocks", "plays", "olds", "lights", "files", "locks", "points", "gs", "fields", "ids", "plates", "xes", "ls", "dates", "ds", "words", "pages", "parts", "vals", "works", "issues", "lists", "items", "details", "xs"], "sum": ["zero", "square", "cu", "si", "cost", "sim", "us", "prof", "scale", "dim", "fac", "max", "count", "out", "union", " summed", "add", "size", "must", "alph", "score", "weight", "cum", "med", "index", "cal", "tu", "average", "summary", "hash", "sam", "bot", "Sum", "SI", "su", "mem", "acc", "vol", "ass", "sample", "system", "mean", "total", "result", "hum", "um", "stats", "sa", "num", "mary", "temp", "set", "black", "ne"], "i": ["I", "sequence", "ci", "hi", "ie", "\u0438", "si", "io", "ic", "t", "u", "oi", "ai", "us", "xi", "ei", "inner", "me", "is", "point", "x", "o", "ms", "client", "mi", "c", "cli", "init", "im", "y", "gi", "ix", "q", "ui", "json", "ri", "ki", "j", "uri", "qi", "pi", "multi", "ji", "my", "it", "ii", "gu", "ini", "di", "any", "li", "ti", "bi", "m", "iu", "phi", "g", "ip"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc =new Scanner(System.in);\\n        StringBuilder build = new StringBuilder();\\n        int z = sc.nextInt();\\n        int[] ary = new int[z];\\n        for(int i = 0 ; i < ary.length; i++){\\n            ary[i] = sc.nextInt();\\n        }\\n        int count = 0;\\n        for(int i = 0; i < ary.length; i++){\\n            int min = i;\\n            for(int j = i; j < ary.length; j++){\\n                min = ary[min] > ary[j] ? j : min;\\n            }\\n            if(ary[i] != ary[min]){\\n                int temp = ary[i];\\n                ary[i] = ary[min];\\n                ary[min] = temp;\\n                count++;\\n            }\\n        }\\n        for(int i = 0; i < ary.length; i++){\\n            build.append(ary[i]);\\n            build.append(i==ary.length-1 ? \"\\n\" : \" \");\\n        }\\n        build.append(count);\\n        System.out.println(build.toString());\\n    }\\n}", "target": "199", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "pb", "psc", "ctx", "usc", "se", "sv", "rc", "nc", "bc", "sync", "sh", "gc", "sch", "sq", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "lc", " Sc", "arc", "ctl", "mc", "scl", "cr", "ch", "system", "st", "ss", "sci", "conv", "cs", "asc", "Sc", "sb", "scan"], "build": ["mb", "report", "sort", "length", "word", "builder", "construct", "dd", "show", "select", "install", "tag", "ward", "now", "find", "add", "BU", "buffer", "parse", "link", "bind", "train", "use", "son", "full", "burn", "read", "php", "Build", "output", "web", "load", "update", "lock", "make", "create", "binary", "store", "push", "print", "uild", "b", "agg", "dict", "url", "ow", "built", "att", "db", "be", "fail", "row", "log", "ld", "cache", "list", "printf", "work", "call"], "z": ["zi", "ed", "nz", "zone", "zo", "t", "window", "Z", "max", "tz", "ind", "x", "gz", "iz", "ez", "c", "n", "h", "y", "oz", "conf", "s", "q", "yz", "set", "zer", "rand", "ot", "zip", "ze", "cz", "ld", "d", "mod", "hz", "az", "g", "zh"], "ary": ["aux", "ory", "note", "important", "re", "bis", "the", "arf", "parse", "less", "y", "prefix", "ories", "ta", "sky", "rex", "dylib", "row", "etry", "inter", "urry", "xx", "along", "ter", "arity", "ari", "tar", "jiang", "arry", "maybe", "ery", "bird", "afe", "ready", "also", "itary", "binary", "my", "ARY", "nr", "list", "tf", "embed", "sequence", "art", "basic", "si", "exclusive", "er", "dry", "ham", "ical", "must", "arb", "are", "tr", "aries", "stone", "red", "buff", "secondary", "tif", "arie", "bare", "yy", "wise", "jing", "library", "ay", "iq", "archive", "ar", "ray", "sys", "phrase", "primary", "bell", "na", "buffer", "ty", "ere", "uary", "necessary", "aro", "nil", "ry"], "i": ["status", "io", "at", "integer", "iu", "n", "ir", "index", "php", "y", "ix", "iii", "l", "pi", "ii", "id", "ti", "bi", "phi", "g", "ie", "hi", "ci", "t", "xi", "ei", "ori", "client", "cli", "init", "ui", "uri", "qi", "multi", "print", "chain", "ini", "ret", "ni", "um", "rel", "m", "iter", "iso", "si", "ic", "sim", "iri", "inner", "mm", "is", "ind", "x", "mi", "err", "gi", "ji", "it", "e", "p", "di", "to", "in", "ims", "zi", "iq", "iti", "I", "ami", "\u0438", "u", "ai", "me", "ish", "entry", "iy", "im", "v", "info", "q", "ri", "this", "batch", "ia", "ki", "a", "ity", "ij", "PI", "li", "point", "ip"], "count": ["found", "error", "report", "iter", "length", "nb", "Count", "counter", "t", "hold", "ind", "sum", "find", "add", "ctr", "buffer", "cond", "size", "score", "cont", "cycle", "check", "c", "n", "weight", "code", "index", "ount", "info", "q", "state", "summary", "hash", "next", "force", "dict", "total", "result", "nt", "number", "num", "log", "list", "cache", "core", "draw", "test", "call"], "min": ["span", "aug", "first", "mit", "sim", "me", "dim", "left", "mm", "part", "max", "mp", "sol", "mn", "ind", "sum", "minus", "stat", "reset", "Minimum", "tmp", "size", "mint", "amin", "mi", "Min", "partial", "n", "tail", "beta", "index", "init", "MIN", "v", "m", "small", "lower", "low", "local", "only", "s", "mini", "mr", "lock", "next", "rest", "start", "lt", "my", "minimum", "old", "st", "pre", "mins", "ni", "li", "rel", "minute", "common", "begin", "mod", "ne"], "j": ["note", "jac", "f", "bj", "at", "jl", "js", "obj", "left", "max", "k", "ind", "oj", "x", "job", "o", "uj", "n", "false", "ge", "jc", "pt", "y", "v", "s", "q", "dj", "json", "l", "ju", "next", "aj", "jp", "jo", "jump", "ph", "ji", "ij", "J", "br", "it", "jit", "b", "jj", "other", "ang", "kj", "m", "g", "ja"], "temp": ["iter", "cap", "em", "perature", "fake", "cu", "tim", "t", "porary", "stem", "unt", " Temp", "tmp", "mint", "unit", "partial", "tr", "tail", "prime", "pt", "emp", "Temp", "orig", "dest", "term", " tmp", "deg", "stop", "tem", "tt", "tm", "txt", "result", "template", "ptr", "mod", "tc", "cell", "test", "ts"]}}
{"code": "import java.util.Scanner;\\n\\nimport javax.sql.rowset.serial.SerialArray;\\n\\npublic class Main {\\n\\n\t\tpublic static void main(String[] args){\\n\t\t\t\\n\t\t\tScanner sc = new Scanner(System.in);\\n\t\t\t// \u6574\u6570\u306e\u5165\u529b\\n\t\t\t// \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\\n\t\t\tString str = sc.next();\\n\t\t\tString[] strArray = str.split(\"\");\\n\\n\t\t\tint cnt = 0;\\n\t\t\tfor (int i = 0; i < strArray.length; i++) {\\n//\t\t\t\tfor (int j = i + 1; j < strArray.length; j++) {\\n\t\t\t\t    // 1\u6587\u5b57\u305a\u3064\u8868\u793a\\n\t\t\t        if (strArray[i].toString().equals(\"+\")){\\n\t\t\t\t\t    cnt++;\\n\t\t\t        }else{\\n\t\t\t        \tcnt--;\\n\t\t\t        }\\n//\t\t\t\t}\\n\t\t\t}\\n\t\t    System.out.println(cnt);\\n    \t    return;\\n\t\t\t\\n\\n\t\t}\\n}\\n", "target": "54", "substitutes": {"sc": ["SC", " SC", "sw", "sys", "tk", "sv", "rc", " sh", "ka", "na", "r", "sk", "c", "ser", " rc", "Sc", " Sc", "res", "sel", "cr", "ch", "system", " scr", "scan", "sa", "cs", "ss", "se"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main {\\n\tpublic static void main(String[] $) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tlong a=sc.nextInt(),b=sc.nextInt(),c=sc.nextInt(),x=sc.nextInt(),y=sc.nextInt();\\n\t\tlong res1=a*x+b*y,res2=Math.max(x, y)*c*2,res3=Long.MAX_VALUE;\\n\t\tif(x>y) {\\n\t\t\tres3=y*c*2+(x-y)*a;\\n\t\t}else if(x<y) {\\n\t\t\tres3=x*c*2+(y-x)*b;\\n\t\t}\\n\t\tSystem.out.println((long)Math.min(res1, Math.min(res2, res3)));\\n\t}\\n}\\n\\n", "target": "125", "substitutes": {"sc": ["SC", "cmp", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sch", "out", "sq", "scope", "ng", "anc", "fc", "sec", "sp", "cont", "cc", "esc", "isc", "cl", "ko", "lc", "ner", "ctl", "desc", "sharp", "mc", "jp", "res", "inc", "acc", "scl", "cr", "ch", "system", "cgi", "ss", "conv", "dc", "cs", "tc", "Sc", "g", "scan"], "a": ["ar", "aa", "ax", "t", "at", "al", "aq", "ai", "area", "ak", "A", "au", "ab", "pa", "oa", "o", "r", "ao", "act", "an", "ba", "am", "ast", "ea", "ia", "l", "ta", "ae", "aj", "af", "ca", "as", "alpha", "sa", "d", "ma", "ac"], "b": ["f", "bb", "bc", "bg", "bf", "i", "ub", "ab", "o", "ble", "B", "r", "fb", "ba", "n", "eb", "ib", "by", "v", "amb", "bs", "ob", "lb", "bo", "cb", "j", "l", "rb", "e", "gb", "br", "db", "be", "bi", "bu", "g"], "c": ["cmp", "cy", "ci", "cos", "f", "cu", "ct", "C", "com", "rc", "bc", "gc", "i", "o", "fc", "category", "z", "unc", "ce", "cc", "conf", "con", "lc", "cb", "cat", "l", "arc", "cin", "co", "e", "cr", "ch", "chain", "etc", "cm", "vc", "cf", "cp", "dc", "cs", "cache", "ec", "d", "tc", "g", "ac"], "x": ["fx", "ci", "px", "xp", "xml", "f", "ct", "io", "ax", "xt", "xx", " xx", "xi", "xa", "xf", "dx", "ox", "i", "o", "r", "on", "n", "h", "xc", "v", "ix", "yx", "q", "w", "xe", "j", "l", "wx", "rx", "lat", "e", "xy", "ex", "inx", "X", "tx", "z", "act", "xxx", "el", "xs"], "y": ["ye", "cy", "yl", "vy", "py", "io", "xx", "Y", "wy", "ies", "oy", "year", "yer", "i", "gy", "o", "yo", "sy", "z", "uy", "ym", "yout", "ys", "g", "h", "iy", "yt", "by", "dy", "ty", "ry", "yr", "j", "l", "yk", "ey", "sky", "yd", "ly", "my", "ya", "ch", "xy", "ny", "axy", "yi", "yy", "hy", "ay"], "res1": ["re1", "re001", "Res0", "RES0", "res001", "Res001", "ResFirst", "vec001", "resOne", "RES1", "Res2", "res0", " res0", " resOne", "vec1", "resFirst", "ResOne", "re2", "vec2", "RES2", "reFirst", "Res1", "vecFirst", "RESOne"], "res2": ["resTwo", "resetb", "reset2", " res7", "res62", "res7", " resb", "reqTwo", "resb", " res02", "rss7", "resB", "rssb", "solTwo", "res02", "req62", "reqB", "reset7", "rss02", "sol62", "rss2", " resB", " res62", "sol2", "req2", "reset02", "solB", " resTwo"], "res3": ["reshthird", " resIII", "expr3", "ress03", "res03", "rekIII", " resThree", "exprment", "resment", "ress3", "rand3", "RES03", "mont003", "montthree", " res003", "respthree", "rek3", "rand003", "resthird", "reshIII", "randthree", "resp3", " res03", "resthree", "randment", "ressIII", " resment", "rekThree", "RES3", "reshThree", "resIII", "expr003", "expr03", "resp003", " resthird", "RES2", "ress2", "rand03", "mont3", "res003", "resh3", "resThree", "rekthird", "RESIII"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.ArrayList;\\nimport java.util.Collections;\\n\\nclass Main {\\n\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tString strNum = br.readLine();\\n\t\tString[] strNumArrays = strNum.split(\" \");\\n\t\tArrayList<Integer> numList = new ArrayList<Integer>();\\n\t\tfor (int i = 0; i < strNumArrays.length; i++) {\\n\t\t\tnumList.add(Integer.parseInt(strNumArrays[i]));\\n\t\t}\\n\t\tCollections.sort(numList);\\n\t\tString out = String.valueOf(numList.get(0));\\n\t\tfor (int i = 1; i < numList.size(); i++) {\\n\t\t\tout += \" \" + numList.get(i);\\n\t\t}\\n\t\tSystem.out.println(out);\\n\t}\\n\\n}", "target": "37", "substitutes": {"br": ["repl", "bp", "div", "bm", "bc", "bh", "bridge", "er", "ger", "dr", "bro", "bl", "Fr", "ctr", "gr", "r", "sp", "tr", "bsp", "lr", "yr", "bt", "mr", "Br", "pr", "next", "rb", "cr", "bd", "ch", "kr", "b", "BR", "be", "nr", "hr", "str", "fr", "buf", "ber", "wr", "bn"], "strNum": ["strNUM", "stringnum", "encNum", "encNUM", "intNUM", "strSym", "intNet", "StrMon", "intNum", " strNet", "stringNum", " strMon", "encnum", "intMon", "stringNUM", "strNet", "stringSym", " strNUM", "StrNum", "strnum", "encSym", "StrNUM", "StrNet", "StrSym", "Strnum", "strMon"], "strNumArrays": ["strNumMatrices", "strNumArays", "strNumArrors", "strNUMArrayays", "strNetARrors", "strNumArrayrors", "strNumArrys", "strNumAlrors", "strNumUrrays", "strNumArrayays", "strNumMatays", "strSumArrays", "strNumARrys", "strNumMatrays", "strNetArrays", "strSumArrors", "strNumAlrys", "strNetARrys", "strNumUrrors", "strSumArreements", "strNumArrayrays", "strNumArrayreements", "strNUMArrayrices", "strNumArrices", "strNetArrys", "strNumArreements", "strSumArrayreements", "strNumARrays", "strNumAlreements", "strNUMArrayrays", "strNUMArays", "strNumAlrays", "strNetArrors", "strNetARrays", "strNumUrreements", "strSumArrayrors", "strNumARrors", "strNumArrayrices", "strSumArrayrays", "strNUMArrays", "strNUMArrices"], "numList": ["NumL", "numMap", "umList", "divList", " numLibrary", "intLibrary", " numL", " numLock", "floatList", "intL", "NumListener", "divLIST", "hexSet", "NumLayer", " numLIST", "numberMap", "NumSet", "numberL", "hexLIST", "numberSet", " numListener", "floatSet", "numberList", "numLibrary", "intLIST", "hexMap", "numLIST", "numListener", "NumLIST", "umListener", "floatLock", "umL", " numLayer", "hexList", "intSet", "numLock", "NumList", "numberLIST", "numSet", "numLayer", "intLock", "numL", " numSet", "numberListener", " numMap", "umLayer", "divL", "floatLIST", "intList", "NumLibrary"], "i": ["zi", "iq", "I", "sequence", "ci", "hi", "ie", "span", "ami", "si", "io", "ic", "sim", "u", "ai", "me", "ei", "us", "xi", "ims", "base", "is", "k", "ind", "o", "ms", "mi", "err", "c", "cli", "iu", "y", "im", "init", "gi", "q", "info", "ui", "ix", "json", "this", "ki", "j", "uri", "ri", "a", "qi", "pi", "multi", "ji", "my", "e", "ii", "it", "chain", "gu", "ini", "di", "ni", "cgi", "id", "to", "ex", "li", "yi", "ti", "bi", "z", "m", "point", "phi", "g", "ip"], "out": ["format", "writer", "exit", "report", "ent", "status", "sys", "OUT", "io", "t", "flush", "obj", "raw", "inner", "exp", "ln", "all", "net", "write", "console", "sum", "outs", "o", "client", "msg", "gr", "std", "r", "err", "check", "n", "name", "v", "aos", "output", "set", "Out", "external", "summary", "outer", "string", "screen", "println", "res", "text", "it", "print", "cn", "pool", "cfg", "chain", "cmd", "file", "result", "null", "conv", "ou", "in", "ext", "str", "list", "pretty", "log", "task", "tree"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n  public static void main(final String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n    int a = sc.nextInt();\\n    int b = sc.nextInt();\\n    sc.close();\\n\\n    int o = -1;\\n    for (int i = 1;i< (int)(100/0.08)+1;i++) {\\n      if ((int)(i*0.08)== a && (int)(i*0.1) == b) {\\n        o = i;\\n        break;\\n      }\\n    }\\n\\n    System.out.println(o);\\n  }\\n}", "target": "121", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "out", "gc", "sq", "sub", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "ko", "lc", "arc", "ctl", "ctrl", "desc", "mc", "nl", "inc", "acc", "scl", "cr", "capt", "ch", "system", "ck", "conv", "cle", "cs", "ec", "tc", "Sc", "scan"], "a": ["ar", "aa", "aq", "at", "u", "ai", "area", "va", "A", "da", "au", "na", "oa", "ach", "ao", "an", "ba", "n", "am", "ea", "ga", "ia", "sta", "ta", "ae", "aaa", "ca", "alpha", "la", "as", "sa", "act", "ma", "ama", "el", "ac"], "b": ["mb", "nb", "back", "pb", "bb", "bc", "bis", "base", "B", "r", "body", "fb", "c", "ba", "blue", "n", "wb", "eb", "ib", "lb", "y", "v", "by", "bs", "ob", "cb", "l", "rb", "gb", "br", "bar", "db", "be", "erb", "bi", "sb"], "o": ["go", "oid", "iso", "f", "t", "u", "pos", "oi", "mo", "O", "ox", "out", "ooo", "no", "elo", "oa", "oS", "d", "ota", "r", "ao", "g", "c", "n", "h", "os", "y", "v", "q", "ko", "oto", "w", "bo", "oo", "j", "l", "po", "ta", "oin", "co", "ot", "e", "p", "total", "offset", "oos", "ow", "so", "to", "vo", "z", "ho", "m", "yo"], "i": ["zi", "iter", "I", "hi", "ci", "si", "io", "ic", "t", "u", "sim", "ai", "us", "xi", "ei", "oi", "me", "is", "ish", "ind", "point", "x", "client", "ori", "mi", "n", "cli", "mu", "index", "im", "v", "y", "init", "ix", "gi", "ui", "info", "ri", "ki", "j", "uri", "ik", "qi", "pi", "multi", "ji", "series", "it", "my", "ii", "ij", "gu", "ini", "di", "yi", "to", "li", "ti", "iu", "phi", "ip"]}}
{"code": "import java.io.OutputStream;\\nimport java.io.IOException;\\nimport java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Arrays;\\nimport java.util.Scanner;\\n\\n/**\\n * Built using CHelper plug-in\\n * Actual solution is at the top\\n */\\npublic class Main {\\n    public static void main(String[] args) {\\n        InputStream inputStream = System.in;\\n        OutputStream outputStream = System.out;\\n        Scanner in = new Scanner(inputStream);\\n        PrintWriter out = new PrintWriter(outputStream);\\n        C solver = new C();\\n        solver.solve(1, in, out);\\n        out.close();\\n    }\\n\\n    static class C {\\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\\n            // \u5165\u529b\\n            int n = Integer.parseInt(in.next());\\n            String s[] = new String[n];\\n            for (int i = 0; i < n; i++) {\\n                s[i] = in.next();\\n            }\\n            char c[] = new char[10];\\n            for (int i = 0; i < n; i++) {\\n                c = s[i].toCharArray();\\n                Arrays.sort(c);\\n                s[i] = String.valueOf(c);\\n            }\\n            long ans = 0;\\n            long cnt = 0;\\n            Arrays.sort(s);\\n            String tmp = s[0];\\n\\n            for (int i = 1; i < n; i++) {\\n                if (tmp.equals(s[i])) {\\n                    cnt++;\\n                    ans += cnt;\\n                } else {\\n                    cnt = 0;\\n                    tmp = s[i];\\n                }\\n            }\\n            // \u51fa\u529b\\n            out.println(ans);\\n\\n        }\\n\\n    }\\n}\\n\\n", "target": "32", "substitutes": {"inputStream": ["imageStreamer", "helloSteam", " inputSteam", "inputStreamer", "inputFile", "rawstream", "outputSocket", "rawStream", "helloSocket", "outputstream", "helloStream", " inputSocket", "rawStreamer", "imagestream", "helloFile", "inputSocket", "outputSteam", "imageStream", "rawSteam", "imageSteam", "inputstream", "outputFile", "inputSteam", "outputStreamer", " inputFile"], "outputStream": ["inputScreen", "outputView", "outputForm", "thisStream", "inputForm", "writeForm", "inputView", " outputView", " outputForm", "writeSteam", "outputSteam", "thisScreen", "writeView", "inputSteam", " outputSteam", "thisForm", "writeStream", "outputScreen", " outputScreen", "thisSteam"], "in": ["iter", "inside", "env", "din", "io", "IN", "al", "ic", "kin", "inn", "inner", "t", "bin", "all", "er", "is", "ind", "i", "ins", "o", "r", "on", "rin", "err", "source", "thin", "read", "isin", "h", "by", "name", "init", "en", "info", "s", "output", "local", "this", "gin", "l", "cin", "current", "In", "sin", "inc", "it", "input", "run", "st", "file", "ini", "rt", "null", "id", "inf", "reader", "login", "get"], "out": ["writer", "report", "env", "sys", "OUT", "io", " OUT", "t", "at", "inner", "all", "net", "er", "write", "exec", "gc", "sum", "outs", "o", "no", "client", "gr", "msg", "r", "cmd", "err", "check", "c", "n", "class", "name", "os", "OU", "s", "aos", "output", "w", "Out", "this", "outer", "good", "table", "co", "res", "it", "p", "can", "run", "gt", "ch", "ex", "b", "result", "null", "nt", "user", "to", "group", "conv", "ou", "log", "temp", "list", "cache"], "solver": ["Solution", "csolving", "csolution", "osolving", "resolver", "solved", "solving", "osolver", "csolver", "Solved", "csolve", "osolve", "Solving", "resolved", "Solve", "csolved", "solve", "resolution", "osolution", "Solver", "resolve", "solution"], "testNumber": [" caseCounter", "testnumber", " casenumber", " solutionNumber", " caseNo", " solutionNo", " caseNumber", "testNo", " testnumber", " solutionnumber", " testCounter", " solutionCounter", "testCounter", " testNo"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        \\n        Scanner scn = new Scanner(System.in);\\n        long N = scn.nextLong();\\n        long A = scn.nextLong();\\n        long B = scn.nextLong();\\n        \\n        if(A!=0){\\n            long tmp = (N/(A+B))*A;\\n            tmp += N%(A+B)<=A ? N%(A+B) : A;\\n            System.out.println(tmp);\\n        }\\n        else System.out.println(0);\\n    }\\n}\\n", "target": "217", "substitutes": {"scn": [" scN", " scnr", "iscnr", "rcnr", " SCn", "scv", "Scen", "scnr", " scan", "scen", "scanv", "secan", " SCN", "scnn", "scg", "SCn", "secg", "Scn", "rcns", "rcn", "scanN", " scv", "SCv", "iscn", "iscN", "SCnn", "SCN", "rcN", "Scr", "scannn", "scann", "secN", " scr", "scr", " SCr", "ScN", " scnn", "iscns", "secn", " scen", " SCen", "rcg", "scns", " scg", " scns", "scN", "rcan", "scan"], "N": ["I", "NN", "NM", "R", "C", "AN", "L", "OUT", "IN", "Y", "Q", "NO", "Z", "NT", "M", "D", "S", "F", "P", "V", "n", "NG", "NR", "INT", "NUM", "W", "NB", "NP", "NV", "TN", "GN", "NA", "K", "G", "J", "H", "NS", "X", "SN", "FN", "T", "NE"], "A": ["Alpha", "E", "AS", "I", "AF", "R", "GA", "AL", "AN", "C", "L", "AE", "AI", "Area", "Q", "AV", "Array", "AW", "TA", "O", "M", "D", "AA", "AP", "AX", "SA", "S", "HA", "ACC", "F", "P", "At", "V", "AU", "IA", "W", "AB", "AH", "U", "AC", "AGE", "AM", "a", "JA", "NA", "K", "BA", "G", "J", "AR", "H", "An", "Av", "This", "T", "AT", "API", "AST", "LA", "ALL", "CA"], "B": ["FB", "E", "I", "R", "TB", "C", "OB", "L", "RB", "BM", "Y", "BL", "Z", "M", "D", "S", "BO", "BI", "EB", "BB", "BG", "P", "V", "DB", "BT", "BE", "W", "SB", "IB", "NB", "AB", "BA", "G", "J", "H", "WB", "b", "BR", "BY", "Bar", "BC", "T", "BW", "BD", "LB", "VB"], "tmp": ["cmp", "important", "nb", "t", "obj", "amp", "TT", "mp", "sup", "out", "tp", "sp", "MP", "pkg", "partial", "prop", "prime", "tn", "emp", "Temp", "tu", "prefix", "term", "utm", "perm", "sam", "buff", "np", "aaa", "tt", "p", "resp", "offset", "comp", "txt", "nt", "alpha", "td", "top", "T", "cp", "ret", "temp", "nom", "pretty", "m", "tf", "stuff"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tchar[] c = sc.next().toCharArray();\\n\t\tsc.close();\\n\\n\t\tint max = 0;\\n\t\tint ans = 0;\\n\t\tfor (int i = 0; i < c.length; i++) {\\n\t\t\tif (c[i] == 'A' || c[i] == 'C' || c[i] == 'G' || c[i] == 'T') {\\n\t\t\t\tans++;\\n\t\t\t\tmax = Math.max(max, ans);\\n\t\t\t} else {\\n\t\t\t\tans = 0;\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(max);\\n\t}\\n}\\n", "target": "100", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "psc", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "sch", "sub", "uc", "anc", "fc", "sec", "sp", "cc", "isc", "esc", "ser", "cl", "lc", "arc", "dec", "mc", "inc", "scl", "cr", "ch", "system", "ss", "cle", "cs", "ec", "tc", "Sc", "sb", "scan"], "c": ["C", "ct", "cu", "t", "ic", "u", "com", "rc", "nc", "bc", "abc", "gc", "fc", "cod", "cd", "col", "cont", "cc", "ce", "cur", "xc", "v", "cl", "con", "tc", "lc", "cb", "cat", "l", "arc", "a", "co", "char", "mc", "enc", "ch", "p", "chain", "etc", "cm", "ca", "vc", "cf", "conv", "dc", "cp", "cs", "cache", "ec", "unc", "g", "ac"], "max": ["or", "MAX", "best", "huge", "inter", "ax", " Max", "scale", "all", "map", "Max", "right", "base", "last", "ox", "count", "sum", "ma", "x", "add", "ms", "plus", "size", "times", "r", "dev", "and", "rank", "an", "n", "full", "maximum", "ge", "med", "index", "head", "min", "v", "master", "grow", "cat", "put", "move", "mod", "rest", "after", "res", "mx", "can", "chain", "gt", "mean", "total", "mad", "end", "ext", "dot", "act", "m", "default", "scan"], "ans": ["nets", "ANS", "orts", "anks", "anes", "lines", "ats", "ums", "aps", "eds", "obs", "rows", "ann", "ants", "ins", "outs", "x", "ms", "orders", "times", "aus", "an", "ians", "ks", "vs", "os", "s", "amps", "ends", "aces", "posts", "olds", "asks", "ons", "ens", "anas", "ots", "ars", "cons", "ations", "ows", "users", "actions", "ids", "can", "ops", "ns", "rs", "ls", "ds", "vals", "ents", "cs", "ims", "arts", "xs", "ts"], "i": ["zi", "I", "hi", "ci", "span", "history", "menu", "ami", "sql", "\u0438", "si", "ic", "u", "oi", "ai", "ei", "xi", "ogi", "me", "iri", "ski", "eu", "ind", "point", "ori", "x", "mi", "cli", "uli", "gi", "im", "init", "y", "ix", "info", "ui", "iii", "ri", "ki", "j", "uri", "a", "qi", "pi", "multi", "ji", "ij", "my", "it", "ii", "ini", "di", "li", " ii", "ti", "bi", "set", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.*;\\nimport java.lang.*;\\n\\n/**\\n * StandardDeviation\\n */\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n\\n        while (true) {\\n            int n = sc.nextInt();\\n\\n            if (n == 0)\\n                break;\\n\\n            int list[] = new int[n];\\n            double sum = 0;\\n            for (int i = 0; i < n; i++) {\\n                list[i] = sc.nextInt();\\n                sum += list[i];\\n            }\\n\\n            sum /= n;\\n            double ans = 0;\\n            for (int i = 0; i < n; i++) {\\n                ans += Math.pow((list[i] - sum), 2);\\n            }\\n\\n            System.out.printf(\"%.8f\\n\", Math.sqrt((double) ans / n));\\n        }\\n    }\\n}\\n", "target": "203", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "irc", "Sc", "ctl", "mc", "nl", "scl", "cr", "ch", "ck", "sci", "conv", "dc", "cle", "cs", "tc", "ss", "sb", "scan"], "n": ["nat", "note", "nm", "nb", "t", "network", "ln", "nc", "net", "ll", "node", "mn", "count", "k", "nan", "na", "no", "names", "o", "ng", "x", "len", "c", "out", "nn", "nor", "y", "v", "gn", "name", "s", "q", "N", "j", "l", "nu", " N", "nl", "np", "cn", "norm", "p", "sn", "ns", "nt", "nw", "ni", "number", "num", "un", "z", "d", "m", "ne", "g"], "list": ["note", "ist", "sequence", "def", "pair", "level", "status", "L", "range", "match", "net", "map", "all", "item", "count", "out", "link", "type", "config", "object", "index", "filter", "LIST", "v", "batch", "l", "dl", "table", "print", "chain", "dict", "listed", "st", "result", "detail", "nt", "null", "li", "array", "number", "see", "log", "lists", "set", "val", "tree", "test"], "sum": ["sort", "mix", "zero", "volume", "sys", " SUM", "square", "si", "sim", "ums", "ul", "us", "scale", "share", "count", "out", " summed", "na", "add", "ms", "tmp", "size", "score", "sat", "cum", "mu", "v", "cal", "average", "summary", "sam", "hash", "Sum", "SI", "su", "mem", "vol", "ass", "norm", "mean", "total", "um", "so", " sums", "scan", "sa", "mary", "num", "un", "cache", "ho", "ma", "ss", "se"], "i": ["zi", "ie", "hi", "ci", "I", "status", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "ei", "xi", "iri", "inner", "ger", "ies", "me", "eu", "is", "ind", "point", "ori", "o", "client", "mi", "cli", "iy", "page", "php", "im", "y", "init", "gi", "q", "ix", "ui", "info", "remote", "json", "ri", "ki", "j", "uri", "batch", "ity", "qi", "pi", "multi", "ji", "ij", "it", "print", "ii", "PI", "chain", "ico", "details", "ini", "di", "id", "li", "fi", "ti", "bi", " I", "et", "iu", "phi", "g", "ip"], "ans": ["nets", "ran", "ANS", "lines", "ats", "ums", "aps", "ann", "ants", "ins", "outs", "uns", "ms", "ps", "als", "names", "aus", "ks", "an", "ians", "ags", "ones", "os", "s", "amps", "rans", "lets", "ons", "cons", "ars", "vers", "gs", "ows", "users", "can", "ids", "ns", "rs", "mean", "ls", "stats", "ds", "nas", "vals", "cs", "pan", "actions", "arts", "xs", "scan"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main{\\n\tpublic static void main(String[] args) \t{\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint alphabet[];\\n\t\talphabet = new int[26];\\n\t\tfor(int i = 0;i < 26; i++) {\\n\t\t\talphabet[i] = 0;\\n\t\t}\\n\t\twhile(sc.hasNext()) {\\n\t\t\tString str = sc.next();\\n\t\t\tstr = str.toLowerCase();\\n\t\t\tfor(int i = 0;i < str.length();i++) {\\n\t\t\t\tif(97 <= str.charAt(i) && str.charAt(i) <= 122) alphabet[str.charAt(i) - 97]++;\\n\t\t\t}\\n\t\t}\\n\t\tfor(int i = 0;i < 26;i++) {\\n\t\t\tSystem.out.printf(\"%c : %d\\n\",i + 97,alphabet[i]);\\n\t\t}\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "242", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "pb", "syn", "usc", "sv", "rc", "nc", "bc", "sync", "sh", "gc", "sq", "sch", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "cl", "tc", "lc", "irc", "arc", "desc", "ctl", "mc", "nl", "inc", "scl", "cr", "capt", "ch", "ck", "sci", "conv", "cle", "cs", "asc", "Sc", "scan"], "alphabet": ["alphaphabet", "archabetic", "alabet", "character", "archphabet", "alacter", "variphabet", "alendant", "charab", "phab", "phabetic", "alphphabet", "balabetic", "alphendant", "alabetic", "charphabet", "alphabetic", "alphaendant", "alonent", "alphab", "expphabet", "balab", "expabet", "phabet", "balabet", "alphonent", "balphabet", "exponent", "alphaabet", "variacter", "variab", "charabet", "alphacter", "alphaabetic", "phphabet", "archabet", "archendant", "variabet", "expabetic", "alab", "phonent"], "i": ["io", "us", "o", "y", "ix", "pi", "ii", "gu", "yi", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "ei", "xi", "ori", "client", "cli", "edi", "init", "s", "ui", "j", "uri", "ik", "qi", "multi", "chain", "ex", "ini", "ni", "m", "esi", "iter", "si", "ic", "sim", "oi", "iri", "eu", "is", "ind", "x", "mi", "err", "mu", "gi", "ji", "it", "e", "di", "to", "ims", "zi", "iq", "I", "ami", "\u0438", "u", "ai", "me", "iy", "im", "v", "wi", "q", "ri", "ki", "this", "ity", "cgi", "li", "iu", "ip"], "str": ["raw", "comm", "expr", "stri", "ctr", "msg", "n", "cur", "arr", "priv", "text", "ocr", "form", "st", "dat", "g", "mt", "f", "syn", "sl", "t", "dr", "console", "gr", "progress", "pt", "spec", "s", "pl", "string", "vol", "print", "br", "ch", "chain", "txt", "dist", "list", "m", "iter", "exp", "ll", "r", "sp", "err", "tr", "ev", "Str", "char", "it", "p", "url", "nt", "stack", "temp", "z", "fr", "tree", "stable", "seq", "div", "pos", "c", "v", "STR", "bo", "pr", "desc", "elt", "res", "input", "coll", "comp"], "charAt": ["characterSet", "cellOf", "characterPoint", "charAfter", "charPoint", "letterOf", "chAt", "chAfter", "charOf", "chOf", "cellSet", "letterPoint", "characterBefore", "cellAt", "characterAt", "charSet", " charOf", "CharBefore", "CharAfter", "cellPoint", "CharOf", "chPoint", "CharAt", " charBefore", "letterAt", "letterSet", "charBefore", " charAfter", "characterOf", "chBefore", "letterBefore"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  static Scanner sc = new Scanner(System.in);\\n  public static void main(String[] args) {\\n\\n    int len = sc.nextInt();\\n    // sc = new Scanner(System.in);\\n    String str = sc.next();\\n\\n    if (len%2 == 1){System.out.println(\"No\");return;}\\n\\n    // String substr_former = str.substring(0, len/2);\\n    String substr_later = str.substring((len/2), len);\\n\\n    if (str.startsWith(substr_later)){\\n      System.out.println(\"Yes\");\\n    }else {\\n      System.out.println(\"No\");\\n    }\\n  }\\n}", "target": "161", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "sl", "usc", "sv", "rc", "nc", "bc", "sch", "gc", "sq", "uc", "fc", "sk", "sp", "c", "cc", "isc", "esc", "cl", "lc", "mc", "scl", "cr", " scr", "ch", "ss", "sa", "cs", "ec", "tc", "Sc", "sb", "scan"], "len": ["fin", " length", "length", "seq", "t", "ll", "count", "vec", "size", "sp", "err", "lan", " Len", "en", "lib", " l", "lc", "dec", "next", "lp", "nl", "Len", "nt", "ln", "line"]}}
{"code": "import java.io.InputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\n/*\\n * AtCoder Beginner Contest 087 C \"Candies\"\\n *   https://abc087.contest.atcoder.jp/tasks/arc090_a/\\n */\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\\n\t\tInputScanner in = new InputScanner(System.in);\\n\t\tPrintWriter out = new PrintWriter(System.out);\\n\\n\t\tint N = in.nextInt();\\n\t\tint[][] A = in.nextIntArray(2, N);\\n\\n\t\tint sum1 = A[0][0];\\n\t\tint sum2 = 0;\\n\t\tfor (int i = 0; i < N; i++) {\\n\t\t\tsum2 += A[1][i];\\n\t\t}\\n\\n\t\tint ans = sum1 + sum2;\\n\t\tfor (int i = 1; i < N; i++) {\\n\t\t\tsum1 += A[0][i];\\n\t\t\tsum2 -= A[1][i - 1];\\n\t\t\tans = Math.max(ans, sum1 + sum2);\\n\t\t}\\n\\n\t\tout.println(ans);\\n\\n\t\tin.close();\\n\t\tout.close();\\n\t}\\n\\n\t/*\\n\t * extends java.util.Scanner\\n\t */\\n\tstatic class InputScanner {\\n\\n\t\tScanner scanner;\\n\\n\t\tpublic InputScanner(InputStream inputStream) {\\n\t\t\tthis.scanner = new Scanner(inputStream);\\n\t\t}\\n\\n\t\tpublic int nextInt() {\\n\t\t\treturn scanner.nextInt();\\n\t\t}\\n\\n\t\tpublic long nextLong() {\\n\t\t\treturn scanner.nextLong();\\n\t\t}\\n\\n\t\tpublic double nextDouble() {\\n\t\t\treturn scanner.nextDouble();\\n\t\t}\\n\t\tpublic String next() {\\n\t\t\treturn scanner.next();\\n\t\t}\\n\\n\t\tpublic int[] nextIntArray(int n) {\\n\t\t\tint[] ret = new int[n];\\n\t\t\tfor (int i = 0; i < n; i++) {\\n\t\t\t\tret[i] = scanner.nextInt();\\n\t\t\t}\\n\t\t\treturn ret;\\n\t\t}\\n\\n\t\tpublic int[][] nextIntArray(int h, int w) {\\n\t\t\tint[][] ret = new int[h][w];\\n\t\t\tfor (int i = 0; i < h; i++) {\\n\t\t\t\tfor (int j = 0; j < w; j++) {\\n\t\t\t\t\tret[i][j] = scanner.nextInt();\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn ret;\\n\t\t}\\n\\n\t\tpublic long[] nextLongArray(int n) {\\n\t\t\tlong[] ret = new long[n];\\n\t\t\tfor (int i = 0; i < n; i++) {\\n\t\t\t\tret[i] = scanner.nextLong();\\n\t\t\t}\\n\t\t\treturn ret;\\n\t\t}\\n\\n\t\tpublic long[][] nextlongArray(int h, int w) {\\n\t\t\tlong[][] ret = new long[h][w];\\n\t\t\tfor (int i = 0; i < h; i++) {\\n\t\t\t\tfor (int j = 0; j < w; j++) {\\n\t\t\t\t\tret[i][j] = scanner.nextLong();\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn ret;\\n\t\t}\\n\\n\t\tpublic double[] nextDoubleArray(int n) {\\n\t\t\tdouble[] ret = new double[n];\\n\t\t\tfor (int i = 0; i < n; i++) {\\n\t\t\t\tret[i] = scanner.nextDouble();\\n\t\t\t}\\n\t\t\treturn ret;\\n\t\t}\\n\\n\t\tpublic double[][] nextDoubleArray(int h, int w) {\\n\t\t\tdouble[][] ret = new double[h][w];\\n\t\t\tfor (int i = 0; i < h; i++) {\\n\t\t\t\tfor (int j = 0; j < w; j++) {\\n\t\t\t\t\tret[i][j] = scanner.nextLong();\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn ret;\\n\t\t}\\n\\n\t\tpublic String[] nextStringArray(int n) {\\n\t\t\tString[] ret = new String[n];\\n\t\t\tfor (int i = 0; i < n; i++) {\\n\t\t\t\tret[i] = scanner.next();\\n\t\t\t}\\n\t\t\treturn ret;\\n\t\t}\\n\\n\t\tpublic String[] nextStringArray(int n, String split) {\\n\t\t\tString[] ret = scanner.next().split(split);\\n\t\t\treturn ret;\\n\t\t}\\n\\n\t\tpublic String[][] nextStringArray(int h, int w) {\\n\t\t\tString[][] ret = new String[h][w];\\n\t\t\tfor (int i = 0; i < h; i++) {\\n\t\t\t\tfor (int j = 0; j < w; j++) {\\n\t\t\t\t\tret[i][j] = scanner.next();\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\treturn ret;\\n\t\t}\\n\\n\t\tpublic String[][] nextStringArray(int h, int w, String split) {\\n\t\t\tString[][] ret = new String[h][w];\\n\t\t\tfor (int i = 0; i < h; i++) {\\n\t\t\t\tret[i] = scanner.next().split(split);\\n\t\t\t}\\n\t\t\treturn ret;\\n\t\t}\\n\\n\t\tpublic void close() {\\n\t\t\tscanner.close();\\n\t\t}\\n\\n\t}\\n\\n}\\n", "target": "140", "substitutes": {"in": ["iter", "din", "io", "IN", "at", "ic", "inn", "inner", "from", "mm", "bin", "ai", "er", "raw", "all", "is", "ind", "ins", "add", "conn", "r", "on", "rin", "err", "lin", "thin", "isin", "source", "init", "conf", "en", "info", "con", "local", "ner", "gin", "l", "lock", "cin", "In", "inc", "it", "input", "ch", "stream", "run", "st", "file", "ini", "rt", "win", "inf", "reader", "str", "scan"], "out": ["writer", "error", "sys", "OUT", "io", "t", "at", "obj", "net", "er", "write", "sum", "o", "outs", "buffer", "conn", "r", "on", "err", "os", "v", "info", "con", "aos", "output", "Out", "this", "put", "outer", "screen", "co", "res", "it", "print", "ch", "can", "pool", "ex", "file", "nt", "to", "ou", "log", "list"], "N": ["None", "I", "NM", "NN", "NC", "C", "ND", "L", "AN", "NO", "Z", "NT", "Num", "M", "D", "Net", "S", "B", "P", "V", "NR", "Ni", "Number", "NB", "NP", "TN", "NI", "GN", "NA", "K", "J", "Size", "NH", "H", "NS", "SN", "T", "Ns", "Sn", "No", "NE"], "A": ["E", "AS", "I", "R", "AF", "GA", "C", "AN", "AE", "L", "AI", "Area", "Action", "Ray", "Array", "App", "TA", "ARC", "M", "Ar", "AA", "AP", "ACT", "SA", "S", "B", "HA", "ACC", "P", "V", "AU", "WA", "Face", "AB", "AC", "EA", "AM", "a", "JA", "NA", "BA", "G", "Answer", "AR", "H", "PA", "An", "BY", "As", "T", "All", "RAM", "AT", "LA", "Address", "API", "CA"], "sum1": ["cache2", "sum6", " sum0", "um2", " sum6", "Sum3", "mean2", " sum001", "mean0", "cache9", " sum100", "sim2", "um001", "cache1", "sum001", "sum3", "summary6", "um9", "mean3", "um1", "summary2", "sum100", "summary001", "mean1", "summary1", "sim100", " sum9", "sum0", "sim001", "sum9", "cache001", "Sum0", " sum3", "um6", "Sum2", "sim1", "um100", "Sum1"], "sum2": [" sum002", "mean02", "sum22", "total3", "um2", "total2", "sum4", "mean2", " sum252", "sumtwo", " sum02", "um22", "average2", "summary252", "average002", "average22", "sum3", " sum7", "um02", "total1", "summary42", " sum42", "tree3", "meanTwo", "sum252", " sumtwo", " sum22", "um252", "um1", "summary2", " sum4", "treetwo", "average1", " sumTwo", "sum7", "sumTwo", "mean1", "summary1", "um002", "sum42", "tree2", "tree1", "um7", "totaltwo", " sum3", "sum002", "Sum4", "Sum2", "sum02", "um4", "um42", "Sum1", "Sum7", "umTwo"], "i": ["itime", "io", "us", "o", "iu", "ir", "php", "y", "MI", "ix", "pi", "ii", "id", "fi", "ti", "bi", "fire", "phi", "g", "ie", "hi", "ci", "f", "ei", "xi", "base", "cli", "init", "s", "ui", "uri", "qi", "multi", "my", "ini", "m", "iter", "span", "si", "ic", "sim", "oi", "inner", "is", "ind", "x", "mi", "gi", "ji", "it", "e", "di", "ims", "zi", "iq", "iti", "I", "ami", "\u0438", "u", "ai", "me", "c", "iy", "im", "v", "info", "q", "wi", "this", "ki", "ri", "batch", "ia", "a", "ity", "ij", "PI", "li", "point", "ip"], "ans": ["nets", "cas", "ANS", "anks", "offs", "AN", "lines", "anes", "ats", "ads", "aps", "sts", "faces", "ann", "ints", "ants", "ports", "ins", "names", "uns", "ms", "outs", "aus", "ks", "an", " scans", "angs", "lan", "fts", "os", "amps", "aos", " spans", "ends", "books", "ons", "ens", "anas", "ots", "ars", "gs", "ids", "can", "ns", "rs", "ls", "as", "vals", "cs", "pan", "actions", "arts", "xs", "ents"], "scanner": ["Scanner", "markNER", "gateener", "Scaner", "gatener", "scaner", "markener", "statner", "scanener", " scanter", "canter", "ScanNER", "caninner", "stater", "markner", "banner", "scanNER", "Scaninner", "gateter", "Scanener", " scanener", "statter", " scaner", "banNER", "banter", "Scanter", "caner", "statinner", "canNER", "gateinner", "canener", "markter", "banener", "scanter", "canner", "scaninner"], "inputStream": ["InputSource", " inputSteam", "InputSteam", "outputForm", " inputSource", "instream", "inputForm", "outputSource", "outputstream", " inputForm", "inputSource", "inSource", "outputSteam", "inStream", "Inputstream", "inSteam", "inputstream", "outputStream", "InputStream", "InputForm", "inputSteam"], "n": ["nos", "nm", "nb", "network", "t", "ln", "nc", "all", "net", "k", "nan", "na", "no", "o", "names", "x", "ng", "r", "on", "c", "an", "nn", "name", "y", "v", "en", "l", "nu", "nl", "np", "it", "p", "sn", "ny", "ns", "nt", "ni", "mn", "num", "un", "z", "d", "m", "ne", "g"], "ret": ["aux", "repl", "rev", "status", "back", "alt", "re", "net", "pret", "expr", "rem", "arr", "mat", "backed", "mont", "gt", "resp", "result", "detail", "el", "test", "mt", "ft", "def", "inter", "nz", "complete", "dr", "reset", "add", "progress", "del", "des", "tt", "print", "txt", "rel", "et", "iter", "ent", "report", "over", "art", "rets", "obj", "match", "ll", "ert", "irm", "tr", "det", "rm", "mem", "lt", "it", "RET", "rt", "nt", "ext", "val", "tree", "sys", "Ret", "lit", "pas", "cat", "elt", "jp", "res", "continue", "dt", "att", "ry"], "h": ["hi", "hs", "hh", "t", "th", "bh", "kh", "hw", "sh", "k", "height", "ha", "x", "o", "r", "c", "host", "y", "v", "ah", "im", "html", "q", "ht", "rh", "l", "hash", "hl", "he", "pi", "ph", "ih", "H", "ch", "p", "hd", "b", "ow", "hr", "hz", "z", "m", " H", "g"], "w": ["aw", "sw", "wd", "wn", "t", "window", "iw", "wal", "wa", "wp", "hw", "ww", "wt", "x", "r", "ew", "c", "weight", "wb", "y", "v", "W", "wi", "ws", "kw", "wh", "we", "wx", "fw", "wid", "p", "win", "ow", "nw", "width", "wl", "wall", "rw", "z", "m", "wr"], "j": ["ie", "jac", "py", "bj", "io", "jl", "js", "obj", "us", "k", "kj", "o", "oj", "je", "r", "uj", "c", "key", "jc", "pt", "y", "v", "s", "q", "dj", "json", "ia", "l", "pr", "ju", "aj", "jp", "jo", "jump", "ji", "J", "ij", "e", "br", "jit", "p", "ii", "it", "b", "jj", "other", "di", "li", "bi", "z", "jas", "g", "ja"]}}
{"code": "\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tlong N = sc.nextLong(),A= sc.nextLong(),B= sc.nextLong();\\n\t\tlong wa =A+B;\\n\t\tif(wa==0) {\\n\t\t\tSystem.out.println(0);\\n\t\t}else {\\n\t\t\tlong ans = (N/wa)*A;\\n\t\t\tif (N%wa<=A) {\\n\t\t\t\tans+= N%wa;\\n\t\t\t}else{\\n\t\t\t\tans+= A;\\n\t\t\t}\\n\t\t\tSystem.out.println(ans);\\n\t\t}\\n\t}\\n\\n}", "target": "217", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sh", "out", "sch", "gc", "sq", "anc", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "ser", "cl", "ko", "lc", " Sc", "ctl", "ctrl", "desc", "mc", "nl", "inc", "scl", "cr", "ch", "system", "ck", "ss", "conv", "dc", "cs", "tc", "Sc", "g", "scan"], "N": ["E", "CN", "I", "NN", "NM", "R", "NC", "C", "AN", "L", "Y", "Q", "Na", "NO", "Z", "Num", "O", "NT", "M", "D", "S", "F", "P", "V", "n", "NG", "NR", "CNN", "Ni", "W", "NL", "NUM", "NB", "NV", "TN", "GN", "NA", "G", "J", "NH", "H", "NS", "X", "SN", "T", "Ns", "Sn", "NE"], "A": ["Alpha", "AS", "I", "ASC", "AF", "Wa", "R", "AD", "AL", "AN", "RA", "L", "C", "AI", "AE", "GA", "App", "M", "AA", "AP", "ACT", "SA", "S", "ACC", "HA", "P", "At", "V", "AU", "IA", "WA", "W", "AB", "U", "AC", "AM", "JA", "a", "NA", "BA", "G", "Ax", "AR", "H", "PA", "An", "As", "T", "AT", "API", "LA", "CA"], "B": ["E", "I", "R", "TB", "GB", "C", "L", "Y", "BL", "Z", "M", "D", "S", "BI", "BB", "F", "P", "V", "DB", "W", "IB", "NB", "AB", "Blue", "Reb", "BA", "G", "J", "H", "b", "BR", "BC", "T", "Bs"], "wa": ["aw", "sw", "wd", "wn", "aa", "wm", "phi", "wal", "lambda", "xa", "awa", "ka", "aws", "wy", "ww", "wt", "fa", "ha", "da", "wat", "sha", "ma", "na", "pa", "SA", "au", "oa", "HA", "ao", "ew", "WA", "W", "wi", "w", "ws", "kw", "wh", "a", "ta", "wx", "NA", "appa", "wid", "qa", "apa", "aka", " Wa", "la", "wan", "sa", "wait", "Wa", "ho", "Ta", "wo", "ja"], "ans": ["ANS", "offs", "ces", "AN", "anes", "ats", "ums", "aps", "eps", "eds", "ann", "ants", "ins", " means", "uns", "outs", "ms", "ps", "aus", "an", " scans", "ians", "ks", "ags", "angs", "lan", "os", "sets", "amps", "rans", "aos", " spans", "posts", "asks", "olds", "ons", " Ans", "ens", "cons", "ars", "ates", "An", "ns", "ls", "as", "wan", "mas", "pan", "arts", "xs", "ents"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n\\n\tpublic static void main (String[] args) throws IOException{\\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n\t\tint n = Integer.parseInt(br.readLine());\\n\t\tint[] a = new int[n];\\n\t\tString[] elements = br.readLine().split(\" \");\\n\t\t\\n\t\tfor (int i = 0; i < n; i++){\\n\t\t\ta[i] = Integer.parseInt(elements[i]);\\n\t\t}\\n\t\t\\n\t\tint swap = 0;\\n\t\t\\n\t\tfor (int i = 0; i < a.length - 1; i++){\\n\t\t\tfor(int j = a.length - 1; j >= i + 1; j--){\\n\t\t\t\tif(a[j] < a[j-1]){\\n\t\t\t\t\tint v = a[j-1];\\n\t\t\t\t\ta[j-1] = a[j];\\n\t\t\t\t\ta[j] = v;\\n\t\t\t\t\tswap++;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\t\\n\t\tSystem.out.print(a[0]);\t\\n\t\tif(n > 1){\\n\t\t\tfor (int i = 1; i < a.length; i++) {\\n\t\t\t\tSystem.out.print(\" \" + a[i]);\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println();\\n\t\tSystem.out.println(swap);\\n\t}\\n}", "target": "170", "substitutes": {"br": ["bp", "bm", "bc", "bh", "bridge", "ger", "er", "dr", "bro", "bl", "ctr", "gr", "r", "rem", "tr", "shr", "bs", "lr", "yr", "bt", "mr", "Br", "pr", "rb", "rys", "jp", "gb", "cr", "bd", "kr", "b", "BR", "db", "be", "rel", "browser", "nr", "hr", "buf", "fr", "ber", "wr", "vr"], "n": ["length", "nm", "nb", "t", "network", "ln", "nc", "net", "mn", "count", "nan", "k", "na", "no", "o", "names", "ng", "conn", "size", "r", "on", "len", "c", "nn", "fn", "name", "nor", "en", "w", "N", "l", "nu", "np", "nl", "cn", "p", "norm", "sn", "ns", "total", "nt", "number", "num", "un", "z", "d", "m", "ne", "g"], "a": ["aux", "history", "ed", "ar", "aa", "ack", "f", "era", "at", "u", "wa", "area", "va", "all", "A", "changes", "xa", "fa", "da", "au", "ava", "na", "ab", "o", "oa", "ao", "ba", "an", "am", "c", "arr", "ap", "y", "app", "m", "ea", "aos", "ga", "eas", "ada", "ia", "ace", "l", "sta", "ae", "aaa", "e", "apa", "p", "form", "aka", "b", "ca", "ata", "as", "alpha", "att", "la", "array", "sa", "parts", "trace", "cache", "act", "ma", "el", "ac"], "elements": ["slements", "leresses", "Elements", "lelem", "slem", "ledates", "elems", "lelements", "lelems", "sles", "Eresses", "Eles", "sresses", "eresses", "Elem", "enlems", " elem", "endates", " edates", "enlements", "elem", "leles", "eles", " elems", "edates", "enlem"], "i": ["status", "io", "us", "o", "iu", "index", "y", "ix", "l", "pi", "ii", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "inter", "f", "ei", "xi", "base", "ori", "cli", "init", "ui", "uri", "qi", "multi", "my", "chain", "ini", "um", "m", "ion", "iter", "si", "ic", "sim", "inner", "is", "k", "ind", "x", "mi", "err", "gi", "ji", "it", "e", "p", "di", "to", "ims", "It", "zi", "iq", "iti", "I", "ami", "\u0438", "u", "ai", "me", "iy", "im", "info", "q", "wi", "this", "ri", "batch", "ki", "ia", "ity", "ij", "PI", "li", "point", "ip"], "swap": [" swaps", "Swarp", "slat", "scAP", " swat", "wrap", "swaps", "slrap", "Swaj", "swAP", "awat", "awop", "Swrap", "waps", "SWrap", "swop", "Swap", "swrap", "swarp", "scap", "scrap", " swop", "awap", "slop", " swrap", "wap", "slap", "SWAP", "SWaj", " swarp", "SwAP", "scaj", "warp", "Swaps", "SWap", "awrap", "swat", "swaj"], "j": ["jac", "last", "zone", "bj", "ct", "div", "jl", "js", "at", "obj", "out", "k", "fr", "oj", "x", "job", "o", "z", "uj", "ev", "h", "jc", "pt", "y", "bs", "jack", "q", "dj", "json", "bo", "adj", "pr", "next", "ju", "aj", "jp", "jo", "vol", "ph", "ij", "J", "ji", "jit", "it", "jump", "res", "p", "b", "jj", "other", "user", "row", "bi", "kj", "el", "g", "ja"], "v": ["nv", "vy", "tv", "lv", "t", "u", "sv", "va", "vi", "k", "inv", "cv", "vp", "x", "dev", "uv", "V", "var", "ev", "vs", "vt", "value", "q", "ve", "av", "vv", "p", "vm", "vc", "qv", "conv", "z", "m", "val", "g"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        String s = sc.next();\\n        //System.err.println(s);\\n        boolean flag = true;\\n        if(s.startsWith(\"A\")) {\\n            String ns = s.substring(2, s.length()-1);\\n            int count = 0;\\n            for(char c : ns.toCharArray()) {\\n                if(c=='C') {\\n                    count++;\\n                }\\n            }\\n            if(count!=1) {\\n                //System.err.println(\"not 1\");\\n                flag = false;\\n            }\\n            for(char c : s.substring(1).toCharArray()) {\\n                if(c!='C' && !String.valueOf(c).toLowerCase().equals(String.valueOf(c))) {\\n                    flag = false;\\n                }\\n            }\\n        } else {\\n            //System.err.println(\"not A\");\\n            flag = false;\\n        }\\n        System.out.println(flag ? \"AC\" : \"WA\");\\n    }\\n}", "target": "209", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "usc", "tk", "sv", "rc", "nc", "bc", "sync", "cam", "sch", "sq", "gc", "sub", "anc", "sec", "sp", "c", "cc", "ser", "isc", "esc", "cl", "lc", "desc", "dec", "mc", "cr", "capt", "ch", "ss", "sche", "cle", "cs", "ec", "asc", "Sc", "scan"], "s": ["es", "fs", "lines", " ls", "strings", "S", "ms", "c", "n", " ss", "name", "y", "v", "results", "a", "string", "res", "gs", "p", "ids", "b", "ns", "rs", "ls", "str", "m", "ss"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\ttry (Scanner scanner = new Scanner(System.in)) {\\n\t\t\tint n = scanner.nextInt();\\n\t\t\tint[] b = new int[n + 1];\\n\\n\t\t\tfor (int i = 1; i < n; i++) {\\n\t\t\t\tb[i] = scanner.nextInt();\\n\t\t\t}\\n\t\t\tb[0] = b[n] = 1000000;\\n\\n\t\t\tint ans = 0;\\n\t\t\tfor (int i = 0; i < n; i++) {\\n\t\t\t\tans += Math.min(b[i], b[i+1]);\\n\t\t\t}\\n\\n\t\t\tSystem.out.println(ans);\\n\t\t}\\n\t}\\n}\\n", "target": "240", "substitutes": {"n": ["nm", "nb", "f", "t", "network", "ul", "ln", "nc", "all", "net", "ll", "comm", "mn", "nan", "count", "out", "na", "no", "o", "names", "ng", "x", "size", "on", "and", "len", "c", "nn", "name", "v", "en", "s", "m", "q", "N", "j", "l", "a", "nu", " N", "np", "nl", "cn", "norm", "p", "sn", "ns", "nd", "nt", "number", "num", "nr", "un", "z", "d", "ne", "g"], "b": ["mb", "bp", "nb", "f", "bb", "bc", "bh", "bis", "base", "bg", "bf", "bl", "ab", "buffer", "B", "emb", "bit", "body", "fb", "ba", "blue", "wb", "c", "eb", "ib", "h", "y", "v", "bs", "ob", "lib", "bo", "cb", "bt", "l", "a", "rb", "buff", "binary", "it", "gb", "br", "p", "ch", "bank", "bar", "db", "be", "bi", "z", "d", "sb"], "i": ["zi", "iter", "ie", "hi", "ci", "I", "ami", "\u0438", "si", "io", "ic", "sim", "oi", "ai", "ei", "xi", "me", "umi", "eu", "is", "ind", "ori", "o", "client", "mi", "err", "cli", "uli", "iy", "im", "y", "init", "gi", "q", "ix", "ui", "info", "ri", "ki", "j", "uri", "this", "ik", "ity", "qi", "pi", "multi", "ji", "it", "my", "ii", "PI", "di", "ini", "id", "li", "ti", "bi", "ims", "iu", "phi", "g", "ip", "ion"], "ans": ["nets", "ANS", "orts", "es", "ions", "anks", "offs", "lines", "ats", "ads", "aps", "ums", "eds", "ann", "is", "ants", "ins", " means", "x", "outs", "ms", "uns", "aus", "acs", "ks", "an", " scans", "ians", "vs", "lan", "sets", "s", "amps", "rans", "lets", "ends", "ons", "ens", "ots", "ars", "ros", "ows", "ids", "ns", "rs", "ls", "as", "ds", "vals", "ents", "cs", "arts", "xs", "ts"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scanner = new Scanner(System.in);\\n\t\tint a = scanner.nextInt(), b = scanner.nextInt(), c = scanner.nextInt(), count = 0;\\n\t\tfor (int i = a; i <= b; i++)\\n\t\t\tif (c % i == 0)\\n\t\t\t\tcount++;\\n\\n\t\tSystem.out.println(count);\\n\t}\\n}", "target": "190", "substitutes": {"scanner": ["Scanner", "Scaner", "scaner", "Scanrator", "scrollter", " scanator", "scanener", " scanter", "scrollener", "canrator", "canter", "scanator", "baner", "banner", "canator", "Scanener", " scanener", "Scanpenter", "banpenter", "scanrator", " scaner", " scanpenter", "scrollner", "banter", "Scanter", "caner", "scanpenter", "canener", "scrollrator", "Scanator", "scanter", "canner"], "a": ["aa", "at", "ai", "area", "va", "A", "au", "na", "o", "ab", "oa", "ach", "ao", "up", "ba", "n", "aaaa", "ea", "ga", "ada", "ia", "l", "sta", "ta", "aj", "ae", "aaa", "e", "apa", "aka", "ca", "alpha", "la", "as", "sa", "ma", "ac"], "b": ["mb", "business", "nb", "bb", "bc", "bis", "base", "bound", "ab", "ble", "B", "r", "body", "fb", "ba", "n", "wb", "eb", "ib", "lb", "y", "bs", "ob", "bo", "cb", "l", "rb", "e", "br", "gb", "bas", "bar", "db", "be", "erb", "bi"], "c": ["f", "C", "cu", "ct", "t", "u", "com", "bc", "abc", "k", "gc", "cv", "fc", "ce", "n", "cc", "cum", "v", "conf", "cl", "con", "tc", "lc", "cb", "l", "mc", "crit", "e", "ch", "p", "etc", "cm", "cf", "conv", "dc", "cp", "cs", "ec", "d", "m", "unc", "g"], "count": ["found", "report", "iter", "length", "flag", "status", "counter", "nb", "Count", "ct", "th", "hold", "max", "with", "now", "sum", "find", "stat", "debug", "size", "must", "score", "check", "n", "index", "ount", "scroll", "conf", "state", "valid", "quiet", "force", "current", "contact", "print", "coll", "other", "total", "result", "nt", "number", "num", "trace", "list", "set", "frequency", "common", "test", "cast", "call"], "i": ["zi", "I", "hi", "ci", "ie", "span", "f", "si", "t", "sim", "ic", "ai", "xi", "ei", "is", "k", "ind", "ori", "x", "o", "client", "mi", "n", "cli", "isi", "mu", "gi", "y", "im", "v", "q", "ix", "ui", "ri", "ki", "j", "ik", "qi", "pi", "multi", "ij", "it", "ii", "chain", "uu", "ini", "di", "id", "li", "ti", "bi", "z", "d", "m", "iu", "phi", "ip", "asi"]}}
{"code": "\\n\\nimport java.io.BufferedReader;\\nimport java.util.ArrayList;\\nimport java.util.Arrays;\\nimport java.util.Collections;\\nimport java.util.HashMap;\\nimport java.util.HashSet;\\nimport java.util.List;\\nimport java.util.Map;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\nimport java.util.Scanner;\\nimport java.util.Set;\\nimport java.util.StringTokenizer;\\n\\n\\npublic class Main {\\n\t static class FastReader \\n\t    { \\n\t        BufferedReader br; \\n\t        StringTokenizer st; \\n\t       \\n\t  \\n\t        public FastReader() \\n\t        { \\n\t            br = new BufferedReader(new\\n\t                     InputStreamReader(System.in)); \\n\t        } \\n\t  \\n\t        String next() \\n\t        { \\n\t            while (st == null || !st.hasMoreTokens()) \\n\t            { \\n\t                try\\n\t                { \\n\t                    st = new StringTokenizer(br.readLine()); \\n\t                } \\n\t                catch (IOException  e) \\n\t                { \\n\t                    e.printStackTrace(); \\n\t                } \\n\t            } \\n\t            return st.nextToken();\\n\t            \\n\t        } \\n\t  \\n\t        int nextInt() \\n\t        { \\n\t            return Integer.parseInt(next()); \\n\t        } \\n\t  \\n\t        long nextLong() \\n\t        { \\n\t            return Long.parseLong(next()); \\n\t        } \\n\t  \\n\t        double nextDouble() \\n\t        { \\n\t            return Double.parseDouble(next()); \\n\t        } \\n\t  \\n\t        String nextLine() \\n\t        { \\n\t            String str = \"\"; \\n\t            try\\n\t            { \\n\t                str = br.readLine(); \\n\t            } \\n\t            catch (IOException e) \\n\t            { \\n\t                e.printStackTrace(); \\n\t            } \\n\t            return str; \\n\t        }\\n\\n\t\t\tpublic Character charAt(int i) {\\n\t\t\t\t// TODO Auto-generated method stub\\n\t\t\t\treturn null;\\n\t\t\t} \\n\t    }\\n\\n\t static int gcd(int a , int b) {\\n\t\t if(b==0)return a;\\n\t\t return gcd(b,a%b);\\n\t }\\n\\n\t/**\\n\t * @param args\\n\t * @throws IOException\\n\t */\\n\t static int m =(int) (1e9+7);\\n\t static long mod(long x) {\\n\t\t \\n\t\t return ((x%m+m)%m);\\n\t }\\n\t static long add(long x,long y) {\\n\t\t return mod((mod(x)+mod(y)));\\n\t }\\n\t static long mul(long x,long y) {\\n\t\t return mod((mod(x)*mod(y)));\\n\t }\\n\t \\n\tpublic static void main(String[] args)throws IOException  {\\n\t\tFastReader s=new FastReader();\t\t\\n\t\tint n = s.nextInt();\\n\t\tint d = s.nextInt();\\n\t\tSystem.out.println((int)Math.ceil((double)n/(double)((2*d)+1)));\\n\t}\\n}\\n\t\\n\\n", "target": "238", "substitutes": {"br": ["bp", "bb", "bre", "bn", "bm", " Br", "bh", "bc", "bridge", "dr", "bro", "bl", "bf", "ctr", "gr", "r", "tr", "shr", "bs", "bsp", "lr", "bt", "mr", "Br", "pr", "next", "rb", "jp", "brace", "itter", "cr", "bd", "kr", "b", "BR", "rel", "nr", "ptr", "hr", "fr", "buf", "bi", "Tr", "ber", "wr", "vr"], "st": ["stable", "sm", "mt", "ist", "sw", "est", "sty", "const", "first", "ct", "sl", "t", "th", "sts", "se", "sv", "net", "sh", "bl", "stat", "inst", "ste", "stri", "tmp", "std", "r", "sp", "stage", "ust", " superst", "ut", "pt", "cl", "St", "bt", "rest", "start", "stop", "lt", "tt", "cr", "p", "sn", "ST", "nd", "rt", "nt", "stack", "be", "set", "ss", "sb", "ts", "ost"], "str": ["stable", "sequence", "hex", "sl", "t", "raw", "dr", "out", "stri", "ctr", "gr", "msg", "r", "sp", "cont", "c", "cur", "tr", "n", "arr", "shr", "s", "del", "Str", "output", "STR", "comment", "doc", "pr", "next", "string", "char", "res", "text", "print", "cr", "coll", "p", "ns", "txt", "ret", "result", "temp", "fr", "buf", "list", "g"], "i": ["I", "ci", "si", "t", "k", " j", "x", "o", "c", "n", "key", "index", "v", "y", "j", "a", "ij", "e", "ii", "p", "ch", "b", "id", "z", "d", "m", "val"]}}
{"code": "import java.util.Scanner;\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\t// TODO Auto-generated method stub\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint a = sc.nextInt() , b = sc.nextInt(), \\n\t\t\t\tc = sc.nextInt(), d = sc.nextInt();\\n\t\t\\n\t\tif(Math.min(b, d)-Math.max(a, c)>0) {\\n\t\t\tSystem.out.print(Math.min(b, d)-Math.max(a, c));\\n\t\t}\\n\t\telse System.out.print(\"0\");\\n\t}\\n\\n}", "target": "47", "substitutes": {}}
{"code": "import java.io.*;\\nimport java.util.*;\\n\\npublic class Main {\\n    static int gcd(int a, int b)\\n    {\\n        // Everything divides 0\\n        if (a == 0)\\n            return b;\\n        if (b == 0)\\n            return a;\\n\\n        // base case\\n        if (a == b)\\n            return a;\\n\\n        // a is greater\\n        if (a > b)\\n            return gcd(a-b, b);\\n        return gcd(a, b-a);\\n    }\\n    public static void main(String[] args) throws Exception{\\n\\n        FastReader fs = new FastReader();\\n        out = new PrintWriter(new BufferedOutputStream(System.out));\\n\\n\\n        int k = fs.nextInt();\\n      long ans = 0 ;\\n        for(int i=1 ; i<=k ; i++){\\n          for(int j=1 ; j<=k ; j++){\\n          \tfor(int l=1 ; l<=k ; l++){\\n            \tans += gcd(gcd(i,j),l);\\n            }\\n          }\\n        }\\n       \\n        out.println(ans);\\n        \\n\\n\\n        out.close();\\n    }\\n    //-----------PrintWriter for faster output---------------------------------\\n    public static PrintWriter out;\\n\\n    //-----------MyScanner class for faster input----------\\n    public static class FastReader {\\n        BufferedReader br;\\n        StringTokenizer st;\\n\\n        public FastReader() {\\n            br = new BufferedReader(new InputStreamReader(System.in));\\n        }\\n\\n        String next() {\\n            while (st == null || !st.hasMoreElements()) {\\n                try {\\n                    st = new StringTokenizer(br.readLine());\\n                } catch (IOException e) {\\n                    e.printStackTrace();\\n                }\\n            }\\n            return st.nextToken();\\n        }\\n\\n        int nextInt() {\\n            return Integer.parseInt(next());\\n        }\\n\\n        long nextLong() {\\n            return Long.parseLong(next());\\n        }\\n\\n        double nextDouble() {\\n            return Double.parseDouble(next());\\n        }\\n\\n        String nextLine() {\\n            String str = \"\";\\n            try {\\n                str = br.readLine();\\n            } catch (IOException e) {\\n                e.printStackTrace();\\n            }\\n            return str;\\n        }\\n\\n    }\\n    //--------------------------------------------------------\\n}\\n", "target": "6", "substitutes": {"a": ["aa", "f", "ra", "t", "va", "A", "da", "i", "o", "x", "ab", "oa", "r", "c", "ba", "an", "v", "j", "ta", "ae", "e", "p", "ca", "as", "sa", "d"], "b": ["nb", "bb", "ub", "i", "B", "r", "sb", "fb", "ba", "c", "n", "eb", "y", "v", "ob", "w", "rb", "e", "bd", "p", "be", "bi", "z", "d", "m", "g"]}}
{"code": "import java.util.Scanner;\\n \\nclass Main{\\n  public static void main(String[] arg){\\n    int H, W;\\n\\n    Scanner in = new Scanner(System.in);\\n\\n    while(true){\\n        H = in.nextInt();\\n        W = in.nextInt();\\n\\n        if(H == 0 && W == 0) return;\\n        \\n        for(int i=0; i<H; i++){\\n            for(int j=0; j<W; j++){\\n                System.out.print(\"#\");\\n            }\\n            System.out.println();\\n        }\\n        System.out.println();\\n    }\\n    \\n  }\\n}", "target": "87", "substitutes": {"arg": ["flag", "word", "range", "re", "parse", "use", "spec", "name", "fe", "argument", "dest", "arp", "rest", "Arg", "cmd", "command", "txt", " Arg", "param", "event", "Args", "line", "test"], "H": ["I", "HO", "High", "RH", "His", "He", "SH", "HH", "HI", "HE", "Q", "AV", "HTTP", "M", "D", "Host", "MH", "HA", "IM", "V", "h", "HM", "OH", "HTML", "HL", "HB", "AH", "History", "AC", "GO", "WH", "CH", "TH", "G", "HS", "J", "HD", "NH", "Eh", "This", "HT", "HQ"], "W": ["I", "Week", "WAR", "Width", "WT", "VW", "L", "OW", "DW", "WE", "Wh", "WI", "EW", "SU", "BL", "Win", "M", "D", "What", "VS", "WP", "F", "IF", "V", "WS", "CW", "SW", "WM", "WA", "TW", "NB", "MW", "N", "w", "MAN", "NW", "Watch", "WH", "WR", "J", "MS", "BW", "WD", "WW", "All", "FW", "We", "WC"], "in": ["or", "din", "io", "serv", "IN", "al", "window", "inn", "inner", "from", "re", "bin", "all", "raw", "is", "out", "ind", "ins", "sum", "add", "client", "conn", "std", "r", "rin", "err", "check", "n", "thin", "isin", "by", "init", "conf", "en", "info", "con", "per", "gin", " din", "l", "doc", "cin", "In", "inc", "world", "input", "stream", "ini", "null", "as", "user", "inf", "reader", "ma", "line", "scan"], "i": ["zi", "iter", "ie", "I", "ci", "ami", "inter", "si", "io", "t", "ic", "u", "sim", "ai", "xi", "inner", "is", "ish", "ind", "x", "mi", "gi", "y", "v", "im", "ix", "init", "ui", "info", "ri", "ki", "a", "jo", "pi", "ji", "ij", "it", "ii", "ini", "di", "ni", "id", "li", "ti", "bi", "ims", "iu", "phi", "ip"], "j": ["bj", "jl", "js", "obj", "k", "oj", "job", "z", "sp", "err", "uj", "ge", "jc", "pt", "im", "y", "q", "dj", "json", "pr", "aj", "jp", "jo", "jump", "ji", "J", "ij", "ph", "it", "br", "b", "jj", "other", "bi", "kj", "m", "jas", "ne", "g", "ja"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String...args){\\n        Scanner sc= new Scanner(System.in);\\n        int N = sc.nextInt();\\n        String S = sc.next();\\n        int found= 0;\\n        char[] ch= new char[S.length()];\\n        for(int i=0; i<N-2;i++){\\n            String check = Character.toString(S.charAt(i));\\n            if(check.equals(\"A\") ){\\n                check = Character.toString(S.charAt(i+1));\\n                if(check.equals(\"B\")){\\n                    check = Character.toString(S.charAt(i+2));\\n                    if(check.equals(\"C\")){\\n                        found++;\\n                    }\\n                }\\n            }\\n        }\\n        System.out.println(found);\\n    }\\n}", "target": "110", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "Sync", "sch", "gc", "sq", "sub", "anc", "sec", "sp", "cc", "c", "isc", "esc", "cl", "ko", "lc", "ctl", "sr", "mc", "RC", "inc", "scl", "cr", "capt", "system", "sel", "txt", "ss", "sci", "cle", "cs", "tc", "Sc", "sb", "scan"], "N": ["I", "NN", "NM", "R", "C", "ND", "L", "AN", "NO", "Num", "NT", "M", "D", "B", "F", "P", "V", "n", "NR", "NL", "NB", "NI", "GN", "NA", "K", "J", "NH", "NS", "SN", "FN", "T", "Ns", "Sn", "No", "NE"], "S": ["SC", "SSL", "JSON", "R", "C", "RS", "L", "TS", "SL", "SH", "SS", "SU", "SR", "HTTP", "OS", "M", "SER", "CS", "SA", "JS", "B", "PS", "VS", "P", "V", "WS", "SM", "DS", "SOURCE", "SB", "s", "Str", "IS", "STR", "Source", "SF", "CSS", "SI", "GS", "SO", "G", "Si", "SE", "H", "NS", "SP", "ST", "SN", "SAM", "BS", "T", "RAW", "SQL"], "found": ["fun", "length", "done", "installed", "ed", "matched", "sent", "Found", "t", "added", "started", "loaded", "used", "all", "count", "out", "focus", "find", "enabled", "err", "printed", "successful", "n", "ound", "index", "name", "Find", "valid", "results", "expected", "good", "available", "tested", "failed", "finder", "seen", " Found", "search", "functional", "total", "errors", "result", "built", "fl", "num", "checked", "d", "finished"], "ch": ["ct", "ich", "th", "sh", "sch", "Ch", "col", "ach", "c", "cur", "h", "chan", "y", "v", "cl", "q", "j", "CH", "char", "ph", "ih", "br", "ok", "tch", "p", "cp", "cs", "str"], "i": ["go", "iter", "I", "hi", "ci", "status", "ami", "si", "io", "ic", "t", "u", "sim", "ai", "ei", "iri", "xi", "exp", "me", "is", "ish", "ind", "point", "ori", "x", "mi", "cli", "index", "name", "im", "init", "y", "gi", "ix", "q", "ui", "info", "ri", "j", "uri", "a", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "gu", "di", "ini", "ex", "major", "id", "to", "li", "ti", "bi", "set", "list", "m", "iu", "phi", "slice", "ip"], "check": ["cmp", "guard", "Check", "def", "status", "checks", "view", "style", "exp", "match", "send", "fix", "CHECK", "look", "find", "save", "link", "parse", "c", "read", "key", "entry", "info", "valid", "load", "update", "query", "good", "mod", "clean", "pattern", "char", "control", "req", "print", "ok", "ck", "form", "search", "command", "quick", "fail", "block", "work", "checked", "see", "cp", "str", "comment", "help", "task", "test", "handle", "call"]}}
{"code": "\\nimport java.util.*;\\n\\n\\npublic class Main {\\n\t\\n\t\\n\tpublic static void main(String[] args) {\\n\\n\t\tScanner s = new Scanner(System.in);\\n\t\t\\n\t\tint n = s.nextInt();\\n\t\tint[] a = new int[n+1];\\n\t\tfor(int i = 1;i<=n;i++)a[i] = s.nextInt();\\n\t\tint c=  0;\\n\t\tfor(int i = 2;i<n;i++)\\n\t\t{\\n\t\t\tif((a[i]>a[i-1]&&a[i]>a[i+1])||(a[i]<a[i-1]&&a[i]<a[i+1]))\\n\t\t\t{}else c++;\\n\t\t}\\n\t\t\\n\t\t System.out.println(c);\\n\t}\\n}\\n", "target": "96", "substitutes": {"s": ["sm", "sw", "es", "qs", "hs", "sys", "sl", "ats", "js", "sf", "sv", "gets", "sts", "bis", "is", "abs", "sq", "ses", "ins", "S", "ms", "ps", "sb", "less", "h", "ws", "ts", "l", "sam", "gs", "search", "ns", "rs", "ss", "ls", "as", "ds", "conv", "sa", "ssl", "in", "cs", "sc", "xs", "se"], "n": ["nm", "nb", "t", "network", "u", "nc", "all", "net", "max", "mn", "nan", "count", "k", "na", "no", "o", "ng", "d", "on", "len", "an", "nn", "v", "en", "m", "N", "j", "l", "nu", " N", "np", "nl", "pi", "cn", "p", "sn", "ns", "nt", "nia", "number", "num", "none", "ln", "ne"], "a": ["aux", "go", "ar", "aa", "ack", "f", "era", "at", "window", "area", "wa", "va", "all", "A", "changes", "fa", "da", "au", "na", "ab", "o", "data", "oa", "ao", "act", "err", "an", "ba", "am", "ce", "ap", "app", "ea", "ga", "ia", "sta", "ta", "ae", "aaa", "e", "qa", "p", "aka", "b", "ca", "result", "ata", "as", "alpha", "la", "to", "array", "sa", "eas", "ma", "ac"], "i": ["status", "io", "us", "o", "iu", "ir", "y", "ix", "pi", "ii", "gu", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "xi", "ei", "base", "ori", "cli", "init", "ui", "j", "uri", "ik", "qi", "multi", "print", "chain", "ini", "ni", "m", "ion", "iter", "si", "ic", "sim", "oi", "iri", "eu", "is", "ind", "x", "mi", "err", "mu", "gi", "ji", "it", "di", "to", "ims", "zi", "go", "I", "ami", "\u0438", "u", "ai", "me", "ish", "key", "im", "v", "q", "ri", "ki", "this", "ij", "li", "point", "ip"], "c": ["cy", "ci", "pc", "f", "C", "ct", "cu", "t", "u", "nc", "bc", "k", "gc", "out", "count", "o", "x", "uc", "unc", "z", "r", "cont", "err", "code", "ce", "cc", "call", "h", "v", "conf", "con", "w", "lc", "cb", "l", "co", "mc", "acc", "e", "p", "ca", "result", "dc", "cs", "cache", "ec", "d", "m", "tc", "sc", "ac"]}}
{"code": "\\nimport java.io.BufferedReader;\\nimport java.io.IOException;\\nimport java.io.InputStreamReader;\\n\\npublic class Main {\\n    public static void main (String[] args) throws IOException {\\n        \\n        BufferedReader reader = new BufferedReader (new InputStreamReader (System.in));\\n        StringBuilder builder = new StringBuilder();\\n\\n        String line = reader.readLine();\\n        int count = Integer.parseInt(line);\\n\\n        line = reader.readLine();\\n        String[] columns = line.split(\" \");\\n        int[] numbers = new int[count];\\n        for (int i = count-1; i >= 0 ; i-- ) {\\n            if ( builder.length() != 0 ) {\\n                builder.append(\" \");\\n            }\\n            builder\\n                .append(Integer.parseInt(columns[i]));\\n        }\\n        System.out.println(builder);\\n    }\\n}", "target": "79", "substitutes": {"reader": ["writer", "iter", "length", "upper", "dd", "view", "range", "iterator", "rc", "inner", "er", "ro", "console", "radio", "buffer", "client", "dev", "r", "rr", "ipper", "read", "entry", "layer", "image", "info", "parser", "ner", "reading", "rx", "rar", "via", "author", "handler", "document", "driver", "stream", "http", "Reader", "older", "runner", "field", "row", "rl", "rot", "rd", "address", "loader"], "builder": ["or", "writer", "iter", "length", "history", "upper", "join", "builders", "utils", "der", "building", "inner", "generation", "human", "ward", "base", "language", "now", "test", "BU", "job", "buffer", "message", "alph", "sb", "full", "order", "php", "wrapper", "address", "atter", "html", "oster", "operator", "lower", "parser", "prefix", "bo", "web", "outer", "Builder", "string", "build", "control", "buff", "board", "b", "append", "ener", "bar", "url", "built", "older", "bean", "runner", "conv", "row", "log", "buf", "trace", "temp", "black", "loader"], "line": ["sequence", "record", "liner", "word", "LINE", "section", "ine", "date", "dd", "lines", "pe", "se", "inline", "lf", "base", "phrase", "side", "out", "data", "Line", "buffer", "link", "parse", "code", "source", "entry", "read", "page", "lo", "value", "output", "eline", "column", "comment", "l", "header", "string", "frame", "store", "nl", "text", "normal", "print", "sample", "chain", "le", "file", "url", "detail", "number", "row", "in", "log", "list", "ln", "query", "block", "then", "cell", "message", "handle"], "count": ["found", "sequence", "length", "level", "counter", "Count", "nb", "const", "ct", "first", "max", "base", "now", "sum", "find", "ctr", "type", "size", "col", "cont", "len", "cycle", "check", "c", "n", "code", "index", "ount", "name", "conf", "scroll", "consider", "process", "current", "start", "amount", "chain", "total", "group", "nt", "cloud", "top", "number", "num", "depth", "cache", "z", "frequency", "core", "handle"], "columns": ["cols", "visualS", "colS", "displayular", "normals", "columners", "columnients", "normalS", "Columnients", "controls", "columnular", "ColumnS", "controlients", "normalular", "visuals", "displays", "columnS", "Columns", "colients", "displayS", "Columners", "colers", "visualular", "controlS", "controlers"], "numbers": ["Numbers", "nNumbers", "Nodes", "cNumbers", "Nums", "dodes", "nums", "cumbers", "NNumbers", "dums", "cums", "dumbers", "nodes", "codes", "dNumbers"], "i": ["zi", "I", "hi", "ci", "si", "ic", "t", "sim", "ai", "xi", "me", "exp", "is", "ind", "ori", "x", "point", "ms", "o", "mi", "cli", "mu", "y", "v", "gi", "ix", "ui", "ki", "j", "uri", "l", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "ini", "di", "ni", "yi", "id", "li", "conv", "ti", "bi", "z", "m", "iu", "g", "ip"]}}
{"code": "// \u63d0\u51fa\u6642\u306b\u6d88\u3059\\n// package app;\\n\\nimport java.util.Scanner;\\n\\n// \u63d0\u51fa\u6642\u306bMain\u306b\u5909\u66f4\u3059\u308b\\npublic class Main {\\n    public static void main(String[] args) throws Exception {\\n        Scanner sc = new Scanner(System.in);\\n\\n        int n = sc.nextInt();\\n        int x = sc.nextInt();\\n        int t = sc.nextInt();\\n\\n        int kaisu = n / x;\\n        if (n % x > 0) {\\n            kaisu++;\\n        }\\n\\n        System.out.println(t * kaisu);\\n\\n        sc.close();\\n    }\\n}", "target": "34", "substitutes": {}}
{"code": "import java.io.*;\\nimport java.util.StringTokenizer;\\n\\nclass Main {\\n\tpublic static void main(String args[]) {\\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\\n\t\tBufferedReader br = new BufferedReader(isr);\\n\\n\t\ttry {\\n\t\t\tint w = Integer.parseInt(br.readLine());\\n\t\t\tint n = Integer.parseInt(br.readLine());\\n\t\t\tint amida[] = new int[w];\\n\t\t\tfor (int i=0;i<w;i++) amida[i] = i+1;\\n\t\t\tfor (int i=0;i<n;i++) {\\n\t\t\t\tStringTokenizer st = new StringTokenizer(br.readLine(),\",\");\\n\t\t\t\tint a = Integer.parseInt(st.nextToken());\\n\t\t\t\tint b = Integer.parseInt(st.nextToken());\\n\t\t\t\tamida[a-1] = amida[a-1]^amida[b-1];\\n\t\t\t\tamida[b-1] = amida[a-1]^amida[b-1];\\n\t\t\t\tamida[a-1] = amida[a-1]^amida[b-1];\\n\t\t\t}\\n\t\t\tfor (int i=0;i<w;i++) System.out.println(amida[i]);\\n\t\t} catch (Exception e) {\\n\t\t\tSystem.out.println(\"Exception!\");\\n\t\t}\\n\t}\\n}", "target": "156", "substitutes": {"isr": ["isrs", "issrs", "itsrc", "ssrc", "risrb", "isrc", "risrs", "risr", "isser", "isn", " isrs", "ssrr", " isrr", "iser", "issrb", "ssn", " isrb", "itsrr", "riser", "itsn", "issr", " iser", " isrc", "isrb", "ssr", "itsr", " isn", "isrr"], "br": ["or", "repl", "bp", "bj", "bre", "bn", "bm", "bh", "bridge", "er", "dr", "bro", "bf", "bl", "gr", "r", "err", "tr", "shr", "bs", "bsp", "yr", "lr", "bt", "wr", "roller", "j", "mr", "Br", "pr", "rb", "rys", "jp", "bd", "cr", "ch", "BR", "browser", "nr", "ptr", "hr", "bi", "fr", "str", "buf", "ber", "sr", "vr"], "w": ["aw", "sw", "length", "wind", "wd", "wn", "t", "window", "iw", "wal", "wa", "wp", "hw", "wt", "k", "x", "r", "ew", "weight", "h", "wb", "y", "v", "W", "wi", "s", "ws", "kw", "wh", "we", "l", "wx", "wid", "p", "win", "ow", "nw", "width", "wl", "wall", "rw", "wait", "z", "d", "m", "wr"], "n": ["nm", "t", "network", "ln", "nc", "net", "k", "nan", "na", "x", "o", "no", "r", "on", "c", "h", "nn", "nor", "y", "v", "en", "s", "N", "non", "j", "l", "nu", "nl", "np", "p", "ns", "nt", "ni", "nw", "un", "z", "d", "m", "ne"], "amida": [" samaria", "madi", "ramadi", "lamida", "amelta", "amista", "masterdam", "omidi", "amlda", "AMidi", "ambida", "lamidi", "samidi", "demida", "iamidi", "lemira", "maida", "aramistic", "ammidi", "famaria", "maria", "amsterdam", "AMido", "lammaria", "armyna", "ammido", "asmido", "asmida", "camelta", "asmidi", "omida", "lammidi", "lemidi", "armelta", "anidi", "samida", "demido", "armista", "emista", "camidi", "camaria", " samadi", "aniza", "lammiza", "pmido", "lamaria", "amaria", "samaria", "lamido", "amyna", " amyna", "lammida", " amaria", " samiga", "aramidi", "mida", "ambido", "camido", "emida", "pmsterdam", "ramaria", "amidi", "famidi", "gamidi", "emidi", "pmida", "emido", "famanta", "ramida", "camiza", "ramidi", "demaria", "asmsterdam", "anida", "gamanta", "omista", " amsterdam", "amanta", "ambsterdam", "anaria", "ramiga", "camida", "armaria", "amblda", "iamido", "AMida", "pmlda", "amistic", "amiga", "lemida", "miga", "armanta", "gamida", "famido", "amira", "lemaria", "aramida", "ammelta", "ramido", "amiza", "aramido", "amadi", " amido", "amido", "iamistic", "famida", "gamido", "maido", "gamaria", "omido", "samido", "armida", " amidi", "demidi", "iamida", "armidi", " samida", "AMaria", "omistic", "famira", "armido", "ramsterdam", "malda", "iamyna", "ammida", " amira"], "i": ["io", "us", "umi", "ice", "o", "index", "y", "ix", "l", "pi", "ii", "gu", "id", "fi", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "cli", "init", "s", "ui", "j", "qi", "multi", "chain", "ini", "ni", "m", "ion", "si", "ic", "sim", "oi", "eu", "k", "is", "ind", "x", "mi", "err", "gi", "ji", "it", "p", "di", "to", "in", "ims", "zi", "iq", "iti", "I", "go", "u", "ai", "me", "ies", "c", "iy", "im", "v", "info", "q", "this", "ki", "ri", "ia", "ity", "ij", "cgi", "li", "iu", "ip"], "st": ["mt", "ist", "est", "ft", "sty", "ct", "sl", "t", "th", "sts", "sv", "obj", "sd", "irst", "sh", "stat", "inst", "ste", "std", "sp", "ust", "pt", "cl", "St", "set", "bt", "sta", "start", "nl", "tt", "it", "cr", "sn", "ST", "nd", "nt", "rt", "so", "ss", "str", "fr", "et", "sc", "sb", "se", "ost"], "a": ["ar", "ami", "aa", "f", "era", "t", "at", "u", "ai", "area", "va", "A", "da", "au", "ma", "o", "ab", "pa", "oa", "x", "dev", "ao", "ba", "an", "am", "c", "h", "v", "app", "ea", "ga", "ia", "j", "l", "sta", "ta", "aj", "ae", "aaa", "e", "p", "ca", "as", "la", "alpha", "db", "sa", "z", "d", "m", "g", "ac"], "b": ["nb", "f", "t", "bb", "u", "bc", "o", "ab", "x", "B", "sb", "fb", "c", "ba", "wb", "h", "eb", "ib", "beta", "lb", "y", "v", "bs", "bo", "cb", "j", "l", "rb", "e", "bd", "p", "gb", "bar", "db", "to", "be", "bi", "z", "d", "m", "g"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n\t \tint a = sc.nextInt();\\n \t\tint b = sc.nextInt();\\n\t\tint c = sc.nextInt();\\n\t\tint k = sc.nextInt();\\n\t\tint powk = ((int) Math.pow(2, k));\\n\t\tint answer = 0;\\n\\n\t\tif (a > b && a > c) {\\n\t\t\tanswer = a * powk + b + c;\\n\t\t} else if (b > a && b > c) {\\n\t\t\tanswer = b * powk + a + c;\\n\t\t} else {\\n\t\t\tanswer = c * powk + a + b;\\n\t\t}\\n\\n\t\tSystem.out.println(answer);\\n  }\\n}\\n", "target": "201", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "gc", "sq", "uc", "anc", "fc", "sec", "sp", "cc", "isc", "esc", "cl", "ko", "lc", "irc", "ctl", "desc", "mc", "inc", "scl", "cr", "ch", "system", "ck", "cgi", "sa", "dc", "cs", "tc", "Sc", "sb", "scan"], "a": ["aux", "art", "ar", "aa", "f", "ack", "era", "ax", "at", "al", "aq", "ai", "area", "ad", "va", "A", "ak", "da", "au", "abs", "i", "x", "ab", "oa", "r", "ach", "ao", "an", "ba", "am", "h", "ah", "app", "ea", "ace", "ia", "l", "ta", "aj", "ae", "aaa", "aff", "acc", "af", "e", "p", "ca", "ant", "as", "alpha", "att", "sa", "act", "ma", "asc", "ac"], "b": ["nb", "f", "back", "bb", "t", "u", "bc", "bis", "bf", "bl", "i", "bg", "ab", "o", "B", "r", "g", "fb", "ba", "n", "wb", "h", "eb", "ib", "y", "v", "bs", "ob", "bo", "cb", "bt", "j", "l", "rb", "gb", "br", "e", "p", "ch", "ca", "db", "be", "erb", "bi", "z", "sb", "ac"], "c": ["ci", "ar", "f", "C", "ct", "cu", "t", "u", "rc", "bc", "gc", "ab", "uc", "fc", "cd", "r", "n", "cc", "ce", "cur", "v", "conf", "ec", "con", "tc", "lc", "cb", "cat", "l", "co", "mc", "e", "cr", "p", "ch", "can", "etc", "cm", "ca", "cf", "cp", "dc", "cs", "z", "d", "m", "unc", "g", "ac"], "k": ["f", "t", "ak", "ka", "dk", "kk", "i", "o", "ek", "sk", "n", "ks", "ke", "key", "v", "q", "ko", "w", "j", "kw", "ik", "ku", "kl", "K", " K", "ok", "p", "ck", "kr", "mk", "z", "d", "m", "g", "tk"], "powk": ["powerk", "pawek", "pawko", "pownk", "prowke", "pownek", "opowko", "povk", "opowerko", "povn", "spowerk", "powtk", "pownko", "dowd", "powerkl", "prownki", "pumpd", "powske", "poxkl", "pumpmk", "powek", "poxmk", "powg", "powkl", "dowermk", "powski", "prowm", "dowmk", "powd", "poxd", "spown", "pawc", "opowek", "opowk", "poadg", "powerko", "powerc", "pumpkl", "powerki", "pawk", "pownki", "spowk", "spowerg", "pownm", "powsk", "powki", "pumpk", "powerm", "pownc", "opowc", "prowk", "spowertk", "powerg", "powc", "povg", "prownm", "opowerek", "spowern", "dowerkl", "prownk", "povtk", "powertk", "dowkl", "powermk", "opowerk", "powerke", "powmk", "opowerc", "powern", "poadk", "poadn", "powko", "pown", "poadtk", "pownke", "prownke", "spowg", "powerek", "powerd", "prowki", "powke", "powm", "spowtk", "dowerk", "dowk", "powsm", "poxk", "dowerd"], "answer": ["answered", "exit", "remember", "archive", "sequence", "urn", "onse", "aq", "equ", "window", "imate", "install", "our", "reply", "offer", "about", "come", "swers", "oa", "response", "say", "ask", "vote", "notice", "request", "eni", "rep", "approximately", "entry", "erv", "echo", "review", "value", "q", "man", "ve", "consider", "oe", "question", "description", "example", "blank", "define", "store", "Answer", "energy", "form", "interpret", "option", "result", "wer", "array", "poll", "see", "cache", "query", "ell"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner sc = new Scanner(System.in);\\n\\n    int age = sc.nextInt();\\n    int price = sc.nextInt();\\n\\n    int pay = 0;\\n\\n    if (age >= 13) {\\n      pay = price;\\n    } else if (age >= 6 && age <= 12) {\\n      pay = price / 2;\\n    } else if (age <= 6) {\\n      pay = 0;\\n    }\\n\\n    System.out.println(pay);\\n  }\\n}\\n", "target": "249", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "src", "cl", "lc", "desc", "ctl", "dec", "cons", "screen", "mc", "inc", "acc", "scl", "cr", "sel", "ch", "system", "ss", "conv", "sa", "dc", "cs", "tc", "Sc", "sb", "scan"], "age": ["gage", "go", "ie", "flag", "length", "date", "ime", "pe", "ager", "style", "al", "ear", "Age", "me", "ad", "hold", "ice", "rage", "au", "mage", "now", "save", "ages", "ade", "code", "ce", "ge", "image", "page", "pg", "one", "ve", "ace", "flow", "average", "AGE", "lag", "ag", "ae", "store", "ase", "e", "old", "le", "issue", "grade", "angle", "id", "event", "row", "ship", "agen", "ide", "ure", "line", "aged", "ay", "se"], "price": ["time", "length", "date", "priority", "cost", "peg", "position", "pe", "rate", "scale", "product", "ice", "pro", "offer", "euro", "size", "score", "quote", "order", "money", "payment", "php", "currency", "market", "fee", "value", "tax", "where", "trade", "power", "Price", "rice", "amount", "p", "total", "offset", "grade", "sale", "pie", "margin", "val", "address", "message"], "pay": ["cmp", "fill", " Pay", "cas", "trans", "pc", "snap", "cost", "hold", "transform", "send", "gate", "deb", "sum", "cash", "par", "add", "cond", "tip", "paid", "ping", "bill", "check", "order", "money", "payment", "php", "fee", "biz", "tax", "play", "app", "trade", "fund", "ay", "lat", "mem", "np", "amount", "tt", "push", "ac", "pack", "pre", "pat", "att", "pad", "cp", "ship", "trace", "sign", "wait", "post", "patch", "quant", "cast", "Pay"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args)\\n    {\\n        Scanner sc = new Scanner(System.in);\\n        String a = sc.next();\\n\\n        int cnt = 0;\\n        for(int i =0; i < a.length(); i++){\\n            if(a.charAt(i)=='1'){\\n                cnt += 1;\\n            }\\n        }\\n\\n        System.out.println(cnt);\\n\\n    }\\n}\\n", "target": "165", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "usc", "tk", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "sub", "out", "anc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "ko", "lc", "desc", "dec", "mc", "scl", "cr", "capt", "ch", "system", "sel", "ss", "conv", "cle", "cs", "ec", "tc", "Sc", "scan"], "a": ["aux", "aw", "aa", "at", "t", "area", "tta", "va", "wa", "A", "fa", "au", "now", "na", "o", "ab", "oa", "r", "ao", "ba", "an", "am", "c", "h", "s", "ea", "aos", "w", "ga", "ia", "sta", "ta", "aaa", "apa", "b", "aka", "ca", "ata", "as", "la", "att", "sa", "act", "ma", "el", "ac"], "cnt": ["pcn", "cNT", "pcst", " cct", "Cnt", "Ccount", "nct", "Cpt", "CNT", " cNT", "Cct", "cst", "rct", "pcnt", "nNT", "Cst", "rcount", " cn", "nnt", " cst", "Cn", "rNT", "cct", " cpt", "npt", "ccount", "cn", "cpt", "pcNT", " ccount", "rnt"], "i": ["I", "hi", "ci", "ie", "\u0438", "si", "io", "ic", "t", "u", "oi", "ai", "xi", "ei", "us", "is", "ori", "ms", "mi", "n", "cli", "mu", "index", "gi", "im", "init", "y", "q", "ix", "ui", "ri", "ki", "uri", "qi", "pi", "multi", "ji", "it", "ii", "gu", "ini", "di", "ex", "yi", "id", "li", "conv", "ti", "bi", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n\\n    public static void main(String[] args) {\\n\\n        new Main().solve();\\n    }\\n\\n    void solve(){\\n\\n        int a, b;\\n\\n        Scanner sc = new Scanner(System.in);\\n        a = Integer.parseInt(sc.next());\\n        b = Integer.parseInt(sc.next());\\n        sc.close();\\n\\n        double ataxfreemax, ataxfreemin; \\n        double btaxfreemax, btaxfreemin;\\n\\n        ataxfreemax = (a + 1) / 0.08;\\n        ataxfreemin = a / 0.08;\\n        btaxfreemax = (b + 1) / 0.1;\\n        btaxfreemin = b / 0.1;\\n\\n        int amax, amin;\\n        if (Math.floor(ataxfreemax) == ataxfreemax){\\n            amax = (int) ataxfreemax - 1;\\n        }\\n        else {\\n            amax = (int) ataxfreemax;\\n        }\\n\\n        if(Math.ceil(ataxfreemin) == ataxfreemin){\\n            amin = (int) ataxfreemin;\\n        }\\n        else{\\n            amin = (int) ataxfreemin + 1;\\n        }\\n\\n        int bmax, bmin;\\n        if (Math.floor(btaxfreemax) == btaxfreemax){\\n            bmax = (int) btaxfreemax - 1;\\n        }\\n        else {\\n            bmax = (int) btaxfreemax;\\n        }\\n\\n        if(Math.ceil(btaxfreemin) == btaxfreemin){\\n            bmin = (int) btaxfreemin;\\n        }\\n        else{\\n            bmin = (int) btaxfreemin + 1;\\n        }\\n\\n        if(amax>bmax && bmax>amin){\\n            if(bmin>amin){\\n                System.out.println(bmin);\\n            }\\n            else{\\n                System.out.println(amin);\\n            }\\n        }\\n        else if(amax>bmin && bmin>amin){\\n            System.out.println(bmin);\\n        }\\n        else if(bmax>amax && amax>bmin){\\n            if(amin>bmin){\\n                System.out.println(amin);\\n            }\\n            else{\\n                System.out.println(bmin);\\n            }\\n        }\\n        else if(bmax>amin && amin>bmin){\\n            System.out.println(amin);\\n        }\\n        else{\\n            System.out.println(\"-1\");\\n        }\\n    }\\n}", "target": "121", "substitutes": {"a": ["art", "ar", "ami", "aa", "era", "ax", "aq", "t", "at", "ra", "ai", "obj", "area", "va", "A", "au", "i", "na", "x", "ab", "oa", "r", "ao", "an", "ba", "am", "c", "n", "app", "s", "ea", "eas", "ia", "l", "ta", "ae", "aj", "aaa", "e", "apa", "aka", "ca", "as", "la", "sa", "act", "ma", "ac"], "b": ["nb", "f", "bb", "t", "u", "bc", "bis", "base", "bg", "i", "ab", "o", "B", "r", "fb", "g", "ba", "n", "c", "wb", "h", "eb", "ib", "by", "y", "v", "bs", "ob", "s", "cb", "j", "l", "rb", "br", "p", "bas", "db", "to", "be", "bi", "z", "d", "m", "sb"], "sc": ["SC", "cmp", " SC", "osc", "pc", "sys", "syn", "ctx", "sv", "rc", "nc", "bc", "asc", "sync", "gc", "sch", "sq", "sub", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "lc", " Sc", "arc", "ctl", "desc", "mc", "res", "scl", "sel", "ch", "ss", "dc", "cs", "ec", "tc", "Sc", "sb", "scan"], "ataxfreemax": ["ataxfreiemae", "ataxfreiemmax", "ataxtypemaxy", "ataxfreemanad", "ataxfreemeae", "ataxfreiemaxy", "ataxfreemix", "ataxfreemeoad", "ataxfreemanmax", "ataxfeeemap", "ataxfreEMix", "ataxfreedomux", "ataxtypemax", "ataxfreidemax", "ataxfreinemart", "ataxfreelax", "ataxfaemax", "ataxfilemad", "ataxfreemeact", "ataxfreedomat", "ataxfreememax", "ataxfreEMad", "ataxfreinemax", "ataxfrememmax", "ataxfreemux", "ataxfremix", "ataxfeelemaz", "ataxtypinemaxy", "ataxfeelemap", "ataxfrelemax", "ataxfaemmax", "ataxfreemad", "ataxfrememax", "ataxfilemart", "ataxfreelmax", "ataxfalemmax", "ataxfilemax", "ataxfreemead", "ataxfaemeask", "ataxfaemux", "ataxfreemeart", "ataxfreemat", "ataxfilinemad", "ataxfrelemap", "ataxfaemad", "ataxfeelemoad", "ataxfreemmax", "ataxfeeemoad", "ataxfreidemaxy", "ataxfalemad", "ataxfalemux", "ataxfreemaz", "ataxtypinemux", "ataxfreEMoad", "ataxfilinemart", "ataxfreinemaxy", "ataxfreelaxy", "ataxfreemeax", "ataxfreiemart", "ataxfreemae", "ataxfreidemux", "ataxfreemeap", "ataxfreiemad", "ataxfrEMmax", "ataxfreeemmax", "ataxfrelemmax", "ataxfrEMaxy", "ataxfreEMaxy", "ataxtypemux", "ataxfreEMaz", "ataxfreemart", "ataxtypemat", "ataxfreemeaz", "ataxfreEMmax", "ataxfrelemoad", "ataxfreiemix", "ataxfreemaxy", "ataxfreEMux", "ataxfreemask", "ataxfreeemax", "ataxfalemax", "ataxfrelemux", "ataxfeelemax", "ataxfreinemad", "ataxfreEMap", "ataxfremmax", "ataxfreemoad", "ataxfaemeax", "ataxfreemeask", "ataxfrememask", "ataxfrEMix", "ataxfaemask", "ataxfreeemact", "ataxfreemap", "ataxfreemact", "ataxfremax", "ataxfreemanux", "ataxfreelix", "ataxtypinemax", "ataxfrelemad", "ataxfreinemae", "ataxfreEMax", "ataxfreinemux", "ataxfrEMax", "ataxfilinemae", "ataxfilemae", "ataxfrelemaz", "ataxfrememact", "ataxfreedomaxy", "ataxfreedomax", "ataxfaemeact", "ataxfreiemax", "ataxfeeemax", "ataxfaemact", "ataxfilinemax", "ataxtypinemat", "ataxfeeemaz", "ataxfreidemat", "ataxfaememax", "ataxfreeemask", "ataxfremaxy", "ataxfreinemat", "ataxfreemanax"], "ataxfreemin": ["ataxconfemin", "ataxfreeme", "atoxfemin", "atoxfreemark", "atalktypmin", "ataxconfmin", "ataxfleamin", "ataxfemin", "ataxfreemark", "atmaxfreeme", "ataxfleel", "ataxfinelin", "ataxfireemin", "atmaxfreelin", "ataxreiji", "ataxfremin", "ataxfemark", "ataxfreiji", "ataxfenel", "ataxfastiji", "atoxfmin", "ataxconfemate", "ataxfireemed", "atoxfreemed", "atalkfreemin", "ataxfeiji", "atalktypemate", "atalktypemin", "ataxfmems", "ataxfreimer", "ataxfastelin", "ataxfreems", "ataxfeelin", "atmaxfreiji", "ataxfenelin", "ataxfireem", "ataxfmessen", "atmaxfeemin", "ataxfeemin", "ataxreelin", "atackfenamin", "atoxfemark", "atmaxfeeme", "atoxfreemen", "ataxpieemate", "ataxreemin", "ataxfreelin", "atmaxfreemin", "ataxfmin", "ataxfinel", "ataxpieemen", "atmaxfeimer", "ataxfineemin", "ataxfenemin", "ataxfreessen", "ataxfenamin", "atoxfimer", "atackfenel", "ataxfineeme", "ataxfeems", "atmaxfreimer", "atmaxfeiji", "atmaxfeessen", "ataxremin", "ataxtypemin", "atalkfreemate", "ataxpieemin", "ataxfreemed", "ataxpiemin", "ataxfeem", "ataxtypmin", "atmaxfeems", "ataxfineems", "ataxtypemate", "atmaxfreems", "atoxfremin", "ataxfarimer", "atoxfreemin", "atackfenelin", "ataxfastimer", "atalkfremin", "ataxfreemen", "ataxfreem", "ataxfastemin", "ataxfarmin", "atalktypemen", "ataxfmeme", "ataxfreel", "atmaxfeelin", "atmaxfreessen", "atackfreelin", "ataxfreamin", "atackfreemin", "ataxfleelin", "atoxfreimer", "ataxfinamin", "ataxfeessen", "ataxfeimer", "atackfenemin", "ataxfeeme", "ataxtypemen", "ataxfaremin", "ataxfimer", "ataxfeemen", "ataxfinemin", "ataxfeemed", "ataxreimer", "atalkfreemen", "ataxfleemin", "ataxfreemate", "ataxconfemen", "ataxfmemin", "atackfreamin", "ataxfaremark", "ataxreemark", "ataxfireemen", "ataxfineessen", "atackfreel", "atoxfreem"], "btaxfreemax": ["btaxfreemx", "btaxfreeminap", "btaxfrelemory", "btaxfreeminory", "btaxfreiemax", "btaxfreomux", "btaxfreemact", "btaxfreiemory", "btaxfiinemart", "btaxfreemory", "btaxfreeemax", "btaxfreemaz", "btaxfrememag", "btaxfreemix", "btaxfreeminox", "btaxfreemsand", "btaxfiemart", "btaxfreinemae", "btaxfreeemap", "btaxfiinemae", "btaxfreiemord", "btaxfeemax", "btaxfiniemox", "btaxfreomand", "btaxfreemag", "btaxfimemag", "btaxfreiemaz", "btaxfreinemord", "btaxfinemox", "btaxfiinemax", "btaxfreermart", "btaxfimemox", "btaxfreeminag", "btaxfreemmax", "btaxfrelemox", "btaxfreemsax", "btaxfrelemage", "btaxfreemoad", "btaxfreremand", "btaxfrelemax", "btaxfinemax", "btaxfrelemart", "btaxfrememact", "btaxfiemage", "btaxfreremx", "btaxfreeminax", "btaxfinemory", "btaxfreeminix", "btaxfimemax", "btaxfreemord", "btaxfreemsmax", "btaxfeemact", "btaxfiniemoad", "btaxfreiemag", "btaxfeomux", "btaxfremand", "btaxfreeminux", "btaxfremax", "btaxfiemag", "btaxfreemux", "btaxfreomax", "btaxfreeminoad", "btaxfiemax", "btaxfreinemaz", "btaxfreinemage", "btaxfreeminact", "btaxfromand", "btaxfromx", "btaxfreremmax", "btaxfiemae", "btaxfreiemact", "btaxfreomap", "btaxfreiemoad", "btaxfrelemae", "btaxfreemox", "btaxfreommax", "btaxfreremax", "btaxfrememax", "btaxfreemap", "btaxfreomx", "btaxfreemsx", "btaxfeomax", "btaxfreinemix", "btaxfiemox", "btaxfreemart", "btaxfeemux", "btaxfremmax", "btaxfreemand", "btaxfreeemux", "btaxfiinemage", "btaxfreemage", "btaxfreermage", "btaxfreermax", "btaxfreomact", "btaxfimemact", "btaxfromax", "btaxfreeminord", "btaxfeomap", "btaxfinemoad", "btaxfreinemax", "btaxfremx", "btaxfreeminaz", "btaxfreiemix", "btaxfiniemory", "btaxfrelemoad", "btaxfiemact", "btaxfeemap", "btaxfreinemart", "btaxfreermae", "btaxfreiemox", "btaxfiniemax", "btaxfeomact", "btaxfrommax", "btaxfrememox", "btaxfreeemact", "btaxfreemae"], "btaxfreemin": ["btaxfeeme", "btixfreoton", "btaxfreeman", "btaxfreeimer", "btaxfiemer", "btixfreemi", "btaxfeemin", "btaxfiemi", "btoxfinemi", "btaxfreoton", "btaxreebin", "btaxfreeemer", "btoxfreemer", "btaxfineebin", "btaxfreeigi", "btaxfiigi", "btaxfinemi", "btoxfreemi", "btaxfiems", "btaxreemen", "btaxtreeter", "btaxreemed", "btaxfreeemin", "btoxfreigi", "btaxisfreemen", "btangfreeimer", "btixtreemin", "btaxfineemen", "btangfreeinn", "btaxfinemer", "btaxfreemen", "btoxfinemin", "btoxfineman", "btaxfreems", "btaxfinemin", "btangfreeemin", "btaxfeeman", "btixfreemin", "btaxfreeems", "btangfreimer", "btaxisfreemed", "btaxfinigi", "btaxfreeter", "btaxfreemed", "btoxfinemer", "btixtreoton", "btaxmuemen", "btangfreemin", "btaxfreemi", "btaxfiemin", "btaxfaeme", "btaxfreeinn", "btaxisfreebin", "btaxismuemin", "btaxfaeman", "btixtreemi", "btangfreeeman", "btoxfreemin", "btaxmuebin", "btaxtreemi", "btaxfreinn", "btoxfreeman", "btaxfreeeman", "btoxfinigi", "btoxfinems", "btaxfreebin", "btaxfinimer", "btaxfrezik", "btaxfazik", "btaxismuebin", "btaxfininn", "btaxtreoton", "btoxfrezik", "btaxfeems", "btaxfeemi", "btaxfreeme", "btixfreeter", "btoxfreeme", "btaxfioton", "btaxmuemin", "btangfreinn", "btaxfineman", "btoxfreems", "btaxfreeemi", "btaxreemin", "btaxfreigi", "btaxfineemed", "btaxfineemin", "btixtreeter", "btaxmuemed", "btaxfieter", "btaxismuemed", "btaxisfreemin", "btaxfinems", "btaxfaemin", "btaxfreimer", "btangfreeman", "btaxtreemin", "btaxismuemen", "btaxfreemer", "btaxfezik"], "amax": ["avaz", "amox", "Amaxy", "irmax", "immax", "pmax", "avaj", "iamox", "armax", "umaddr", "emake", "ammox", " amox", "umax", "avox", " amaz", "armaj", "acox", "asmox", "pmox", "irmmax", " amaxy", "amaddr", "amale", "armox", "Amox", "emaz", "umox", "amake", "ommax", "pmaj", "asmax", "armmax", "asmmax", "armAX", "bmaddr", "emaj", "bmox", "imax", "Amax", "Ammax", "emax", "avake", " amaj", "ummax", "acaj", "imale", "avax", "imox", "omox", "bmaj", "amAX", "imAX", "amaz", "iamAX", "iamale", "irmin", "umaj", "ammin", "avale", "avmax", " ammax", "ammmax", "pmmax", "ammax", " amake", "acax", "omax", "amaj", "armaddr", "irmox", "iammax", "amaxy", "acmax", "omin", "asmaxy", "iamax"], "amin": ["pai", "ira", "mia", "endum", "ril", "ayn", "amber", "istan", "min", "aman", "emin", "AMI", "another", "margin", "sama", "nm", "ima", "mag", "iam", "addon", "uma", "am", "amn", "ilk", "igi", "amd", "mis", "minute", "atan", "nom", "don", "ldon", "aug", "amination", "mi", "arb", "nam", "emis", "MIN", "asin", "mem", "sin", "urai", "il", "aka", "mins", "iman", "ema", "imer", "attr", "abin", "unal", "ami", "ebin", "amina", "asar", "ain", "assin", "rison", "lam", "ifa", "lin", "abl", "wi", "alin", "aim", "asm", "gin", "isen", "amen", "morning", "alpha", "aram", "agi", "umin", "irin", "amac"], "bmax": ["bcross", "vcur", "btcur", " bmx", "bmx", "bax", "bsize", "ibsize", "vrow", "bbcur", "rmod", " brange", "nbgen", "Bsize", "Bend", "Bmx", "bmod", " bax", "bbsize", "btrow", "nbmx", "bbstart", " bsize", "bbgen", "ibrest", "bbend", "bgen", "bbax", "bbcross", "ibmax", "rmin", " bgen", "Brox", "bbrox", "ibmin", "bcur", "btmin", " brest", "Bmax", "nbax", "bbmax", " bstart", "Brest", "Bmin", "btmax", "bstart", "Bcross", "bbmin", "bend", "ibcross", "ibmod", "brox", "brest", "brange", "brow", "bbrow", "Bstart", "ibrox", "Brange", "vmin", " bend", "rmax", "vmax", "rsize", "bbmod", "nbmax", "bbmx", "bbrange"], "bmin": ["nbdel", "bbname", "abstar", "ibserv", "bblock", "rbmini", "bonly", "ibmin", "bbnone", "bpart", "Bmax", "abmin", "rbmethod", "bdoc", "vsize", " bmn", "bbmethod", "nbmin", "fbname", "fbmin", "nbserv", "vlock", "bbdoc", "abMIN", "bname", "bbmod", "bbpart", "bmethod", "Bonly", "Bsize", "bbminus", "Binner", "barmin", "rbMIN", "ibmethod", "bbmini", "Breq", "bnone", "Bmod", "rbmin", "breq", "Bmn", " block", "ibreq", "barname", "bbstore", "barmethod", "fbminute", "bbmin", "Bstore", "bbinner", "fbpart", "bminute", "rbdoc", "fbMIN", "ibname", "nbmax", " bmethod", " bserv", "bstar", " bminus", "bbminute", "bbmind", "bpre", "Bpart", "bbstar", "ibmax", "ibpart", "ibmn", " binner", "bstore", "Bmin", "bminus", " bmind", " bname", "vmin", "vserv", "BMIN", "block", "bbpre", " bstore", "binner", "fbpre", "bbMIN", "bsize", "bdel", " bonly", "bMIN", "bmod", " bpart", " breq", "bbsize", "vdel", " bsize", "fbstar", "bmn", "Bminus", "barmind", "bbserv", "nbnone", "rbserv", "rbmax", "ibpre", "bbmax", "bbonly", "bmind", "abminute", "bmini", " bdel", "Bmini", "nbsize", "bserv", "ibdoc", " bmod", "Bnone", "vmax"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint[] A, B;\\n\t\tint min,max;\\n\t\tA = new int[2];\\n\t\tB = new int[2];\\n\t\tfor(int i = 0; i < 2; i++) {\\n\t\t\tA[i] = sc.nextInt();\\n\t\t}\\n\t\tfor(int i = 0; i < 2; i++) {\\n\t\t\tB[i] = sc.nextInt();\\n\t\t}\\n\\n\t\tif(A[1] <= B[0] || B[1] <= A[0]) {\\n\t\t\tSystem.out.println(0);\\n\t\t\tSystem.exit(0);\\n\t\t}\\n\\n\t\tif(A[0] < B[0]) {\\n\t\t\tmin = B[0];\\n\t\t}else {\\n\t\t\tmin = A[0];\\n\t\t}\\n\\n\t\tif(A[1] < B[1]) {\\n\t\t\tmax = A[1];\\n\t\t}else {\\n\t\t\tmax = B[1];\\n\t\t}\\n\\n\t\tSystem.out.println(max - min);\\n\t\tsc.close();\\n\t}\\n}\\n", "target": "47", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "ctx", "pb", "usc", "Scan", "sv", "rc", "nc", "bc", "asc", "sync", "mp", "gc", "sch", "uc", "ng", "anc", "fc", "r", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", "irc", "ner", " Sc", "arc", "ctl", "desc", "mc", "nl", "scl", "cr", "capt", "ch", "system", "ck", "st", "ss", "conv", "cs", "tc", "Sc", "scan"], "A": ["MA", "Al", "E", "I", "ATA", "ASC", "R", "AF", "GA", "AD", "AL", "RA", "C", "AE", "AN", "AI", "L", "Art", "AV", "Array", "App", "M", "Ar", "D", "AA", "The", "AP", "AY", "SA", "S", "ACT", "HA", "ACC", "P", "V", "At", "AU", "IA", "Ag", "AB", "U", "ART", "AC", "AH", "AM", "JA", "OA", "BA", "ESS", "AR", "An", "Av", "As", "X", "mA", "This", "Ant", "AT", "LA", "AST", "API", "CA"], "B": ["FB", "TB", "GB", "OB", "C", "RB", "BM", "Y", "BL", "JB", "O", "PB", "BU", "BO", "USB", "BI", "EB", "BB", "BG", "V", "CB", "DB", "BT", "BE", "SB", "BF", "IB", "NB", "AB", "But", "Blue", "Builder", "GO", "BA", "AR", "Bytes", "Bern", "WB", "b", "BR", "BY", "Bar", "BC", "LIB", "Other", "BS", "T", "MB", "BD", "LB", "VB", "Bs"], "min": [" mins", "sort", "span", "aug", "first", "from", "dim", "map", "part", "sol", "initial", "ind", "stat", "find", "sub", "sum", "amin", "mi", "Min", "partial", "just", "lo", "index", "init", "MIN", "low", "small", "lower", "master", "local", "emin", "l", "mel", "lock", "mod", "start", "rand", "sin", "lt", "diff", "minimum", "pre", "mean", "mins", "ni", "rel", "minute", "in", "temp", "begin", "act", "m", "call"], "max": ["MAX", "length", "huge", "show", "ax", "range", "view", "scale", "exp", "map", "Max", "right", "last", "out", "height", "sum", "inv", "x", "size", "full", "maximum", "c", "key", "med", "prime", "v", "conf", "m", "master", "box", "grow", "load", "limit", "high", "pr", "next", "mod", "rest", "co", "current", "rand", "pi", "res", "recent", "print", "can", "gt", "total", "ex", "mad", "ca", "end", "raise", "cache", "act", "ma", "call"], "i": ["zi", "iter", "ie", "sequence", "ci", "I", "hi", "\u0438", "si", "io", "ic", "sim", "u", "oi", "us", "xi", "me", "ai", "ei", "ies", "used", "base", "is", "ind", "loop", "point", "o", "ori", "client", "ms", "parent", "mi", "err", "cli", "mac", "iy", "y", "init", "im", "v", "ix", "gi", "ui", "q", "info", "j", "batch", "uri", "a", "ity", "qi", "pi", "multi", "it", "print", "ii", "PI", "chain", "ex", "di", "ini", "id", "li", "in", "ti", "bi", "set", "str", "fire", "list", "iu", "phi", "ip"]}}
{"code": "import java.util.*;\\n\\nclass Main{\\n    public static void main(String[] args){\\n        \\n        Scanner sc = new Scanner(System.in);\\n\\n        int K = sc.nextInt();\\n        int sum = 0;\\n\\n        for(int i=1; i<=K; i++){\\n            for(int j=1; j<=K; j++){\\n                int a = i;\\n                int b = j;\\n                int kou = 0;\\n                for(int x=0; x<10; x++){\\n                    int max = Math.max(a, b);\\n                    int min = Math.min(a, b);\\n                    if(max%min==0 && x==0){\\n                        kou = min;\\n                        break;\\n                    }\\n                    a = min;\\n                    b = max % min;\\n                    if(a%b==0){\\n                        kou = b;\\n                        break;\\n                    }\\n                }\\n                for(int k=1; k<=K; k++){\\n                    int c = k;\\n                    int d = kou;\\n                    for(int x=0; x<10; x++){\\n                        int max = Math.max(c, d);\\n                        int min = Math.min(c, d);\\n                        if(max%min==0 && x==0){\\n                            d = min;\\n                            sum += d;\\n                            break;\\n                        }\\n                        c = min;\\n                        d = max % min;\\n                        if(c%d==0){\\n                            sum += d;\\n                            break;\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        System.out.println(sum);\\n    }\\n}", "target": "6", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "se", "sv", "Scan", "nc", "bc", "rc", "sync", "sch", "sq", "gc", "out", "uc", "r", "sp", "cc", "isc", "esc", "ser", "src", "cl", "lc", "ner", " Sc", "desc", "mc", "nl", "scl", "cr", "sel", "ch", "system", "ss", "proc", "cs", "asc", "Sc", "sb", "scan"], "K": ["None", "I", "KC", "C", "PK", "FK", "KE", "VK", "Q", "ID", "Z", "Max", "A", "O", "M", "UK", "S", "B", "F", "P", "V", "NK", "Kind", "KK", "OK", "N", "SK", "KR", "Key", "Mask", "CH", "G", "J", "Size", "Context", "KI", "KB", "KA", "X", "T", "KEY", "KS"], "sum": ["success", "zero", "status", " SUM", "mass", "cost", "si", "loss", "sim", "tex", "us", "mm", "match", "count", "out", "cam", "union", " summed", "dump", "size", "unit", "sat", "weight", "mu", "cum", "tail", "index", "cal", "term", "average", "comment", "summary", "hash", "sam", "doc", "Sum", "su", "mem", "vol", "amount", "diff", "acc", "frac", "mean", "total", "result", "stack", "um", "alpha", "hum", "num", "temp", "star", "cache", "set", "list", "mod", "val", "ss", "cast"], "i": ["zi", "iq", "ie", "hi", "ci", "I", "ami", "si", "ic", "sim", "u", "ai", "xi", "is", "ori", "mi", "by", "y", "gi", "im", "init", "ix", "info", "ui", "v", "this", "ri", "ia", "l", "ik", "pi", "multi", "ij", "it", "ii", "p", "ini", "di", "li", "ti", "bi", "m", "iu", "phi", "ip"], "j": ["bj", "off", "jl", "js", "t", "obj", "kj", "ion", "oj", "job", "o", "add", "son", "uj", "n", "ge", "jc", "pt", "y", "v", "bs", "q", "dj", "json", "bo", "l", "pr", "aj", "jp", "jo", "jump", "ji", "J", "ij", "e", "br", "it", "p", "jj", "bi", "z", "m", "ne", "g", "ja"], "a": ["aux", "ar", "aa", "f", "t", "at", "ra", "aq", "ai", "obj", "al", "area", "va", "u", "A", "ak", "au", "na", "o", "ab", "oa", "pa", "r", "ach", "ao", "an", "n", "ba", "am", "ap", "y", "app", "ea", "ia", "l", "sta", "isa", "ta", "ae", "aj", "aaa", "aff", "acc", "e", "p", "ca", "as", "alpha", "att", "la", "sa", "eas", "m", "ac"], "b": ["nb", "f", "bb", "t", "u", "bc", "bin", "bis", "bl", "bf", "ub", "ab", "B", "r", "sb", "fb", "ba", "n", "wb", "eb", "ib", "lb", "y", "v", "bs", "ob", "s", "cb", "l", "rb", "e", "br", "p", "db", "be", "bi", "z", "m", "g"], "kou": ["kau", "ak\u00fc", "akou", "ikao", " k\u00fc", "akui", "ik\u00fc", "akao", "kidou", " koul", " kui", "skoul", "Koul", "ikOU", "gui", "akoul", "Kui", " kau", "gou", "kao", "kour", "ikui", "kidau", "tkui", "goul", "ikau", "kidOU", "Kour", "akour", "ikou", "kOU", "tkou", "tkao", "ku", "sku", "kui", " kOU", "k\u00fc", "skou", "koul", " ku", "skui", "gu", "Kou", "tk\u00fc", " kour", "kid\u00fc"], "x": ["fx", "sw", "px", "mix", "xml", "xp", "ick", "ct", "ax", "t", "xx", "xt", "xi", "lex", "xf", "dx", "ox", "axis", "cross", "Tx", "no", "on", "n", "h", "key", "index", "php", "xc", "y", "ty", "v", "ix", "q", "yx", "pl", "w", "el", "l", "wx", "rx", "step", "mx", "xy", "xes", "ex", "tx", "inx", "X", "any", "ext", "z", "act", "xxx", "post", "ux", "xs", "Ax"], "max": ["aux", "root", "rev", "largest", "scale", "Max", "right", "cross", "ox", "cv", "cycle", "n", "w", "load", "rest", "force", "gt", "most", "tx", "wall", "work", "default", "ver", "MAX", "huge", "inter", "view", "base", "cam", "out", "parent", "add", "rox", "maximum", "med", "co", "current", "mean", "nw", "log", "cache", "set", "ma", "m", "mod", "post", "over", "iter", "length", "upper", "range", "radius", "lex", "exp", "rad", "size", "dev", "grow", "kw", "dec", "rand", "total", "end", "star", "z", "act", "est", "first", "ctx", "ax", "div", "count", "last", "inv", "check", "full", "h", "v", "conf", "cl", "box", "roll", "mx"], "min": ["sort", "mix", "net", "sol", "mn", "bl", "ms", "rem", "Min", "body", "ba", "n", "index", "emin", "doc", "rest", "lem", "sample", "sun", "hide", "none", "sign", "default", "loc", "mon", "inter", "minus", "no", "link", "len", "an", "just", "am", "arm", "spec", "init", "s", "only", "small", "man", "del", "lock", "method", "store", "vol", "mean", "mis", "dist", "minute", "log", "begin", "don", "ma", "m", "mod", "span", "sim", "inner", "latest", "bm", "mm", "left", "ref", "ind", "stat", "dev", "size", "mi", "err", "mu", "name", "value", "MIN", "local", "mini", "mel", "mem", "sin", "rand", "req", "diff", "lt", "p", "ca", "mins", "dir", "temp", "un", "in", "val", "block", "first", "div", "ai", "dim", "part", "initial", "na", "ab", "cond", "amin", "when", "lin", "mid", "key", "v", "lower", "start", "minimum", "pre", "null", "mult"], "k": ["kn", "ick", "wk", "ak", "ka", "kh", "kk", "unk", "add", "ek", "sk", "ask", "ijk", "n", "ke", "kar", "key", "kid", "kt", "y", "kind", "v", "q", "m", "ko", "w", "ki", "kw", "isk", "ik", "ark", "ku", "kl", "ikk", "acc", "ph", "ok", "ck", "p", "kr", "mk", "z", "work", "g", "tk", "ac"], "c": ["cos", "f", "C", "cu", "ct", "t", "ic", "u", "com", "rc", "bc", "gc", "cv", "o", "col", "fc", "r", "err", "n", "cc", "ce", "cur", "h", "y", "v", "cal", "con", "tc", "w", "lc", "cat", "l", "co", "mc", "e", "cr", "cn", "p", "chain", "cm", "cf", "cp", "dc", "cs", "cache", "z", "m", "unc", "g", "ac"], "d": ["def", "done", "dd", "f", "xd", "de", "t", "div", "u", "dra", "dim", "ad", "du", "sd", "dr", "dx", "D", "da", "ord", "o", "fd", "pd", "dev", "cd", "r", "n", "dis", "dm", "v", "s", "del", "des", "dn", "w", "l", "dh", "dec", "red", "e", "bd", "p", "dict", "td", "di", "dat", "nd", "dt", "ds", "dir", "db", "dc", "z", "m", "g"]}}
{"code": "import java.io.BufferedInputStream;\\nimport java.io.BufferedOutputStream;\\nimport java.io.PrintWriter;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n    private static long n;\\n\\n    // 15:41-\\n    public static void main(String[] args) throws Exception {\\n        try (BufferedInputStream in = new BufferedInputStream(System.in);\\n             PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out))) {\\n\\n            Scanner sc = new Scanner(in);\\n\\n            String s = sc.next();\\n\\n            int i = 0;\\n            int ml = 0;\\n            while (i < s.length()) {\\n                while (i < s.length() && !b(s.charAt(i))) i++;\\n                int start = i;\\n                while (i < s.length() && b(s.charAt(i))) ml = Math.max(ml, ++i - start);\\n            }\\n\\n            out.println(ml);\\n        }\\n    }\\n\\n    private static boolean b(char c) {\\n        switch (c) {\\n            case 'A':\\n            case 'C':\\n            case 'G':\\n            case 'T':\\n                return true;\\n            default:\\n                return false;\\n        }\\n    }\\n}\\n", "target": "100", "substitutes": {"n": ["nat", "note", "nb", " nat", "node", " fn", "nan", "na", " ns", "ng", "nn", "tn", "N", "l", "nu", " N", "nl", "ns", "nd", "nt", "nil", "ry", "ln", "m", "line", "ne", "g"]}}
{"code": "import java.util.*;\\nimport static java.lang.Math.*;\\nimport java.math.BigInteger;\\n\\npublic class Main {\\n\tpublic static void main(String[] args){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\t\\n\t\t// \u5165\u529b\\n\t\tint n = sc.nextInt();\\n\t\t\\n\t\t// \u8a08\u7b97\\n\t\tString result = \"No\";\\n\t\tfor(int i = 0; i <= 100/4; i++){\\n\t\t    for(int j = 0; j <= 100/7; j++){\\n\t\t        if(n == 4*i + 7*j){\\n\t\t            result = \"Yes\";\\n\t\t            System.out.println(result);\\n\t\t            return;\\n\t\t        }\\n\t\t    }\\n\t\t}\\n\t\t\\n\t\t// \u51fa\u529b\\n\t\tSystem.out.println(result);\\n\t}\\n}\\n", "target": "172", "substitutes": {"sc": ["SC", " SC", " sp", "sys", "Scan", "rc", " unsc", " sh", "sch", "sk", " scorer", "n", "ser", " rc", "Sc", " Sc", " sn", " enc", " cons", " scr", "ch", " sk", " ser", "sa", "cs", "ss", "sb", "scan"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        long days = 500000000000000L;\\n        Scanner sc = new Scanner(System.in);\\n        String S = sc.next();\\n        long K = sc.nextLong();\\n        long temp = 0;\\n\\n        for (int i = 0; i<S.length(); i++) {\\n            long target = S.charAt(i) - '0';\\n            //System.out.println(target);\\n\\n            temp += Math.pow(target, days);\\n\\n            if (temp >= K) {\\n                System.out.println(target);\\n              \treturn;\\n            }\\n        }\\n    }\\n}\\n", "target": "38", "substitutes": {"days": [" delay", "DAY", "DT", " DAY", "date", " stamp", "window", " D", "JD", " day", "duration", "DS", " d", "today", "flags", "goal", "Days", "DH", "dh", "Day", "stop", "DX", "day", "dt", "ds", "dir", "Date", "task"], "sc": ["SC", "osc", "pc", "sys", "syn", "si", "sl", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "exp", "sch", "sq", "gc", "anc", "sec", "sp", "cont", "c", "cc", "esc", "isc", "ser", "src", "cl", "ko", "lc", "Sc", "desc", "dec", "mc", "inc", "scl", "cr", "capt", "ch", "sel", "sci", "dc", "cle", "cs", "ec", "tc", "ss", "sb", "scan"], "S": ["AS", "R", "C", "RS", "L", "TS", "SL", "SH", "SS", "SU", "A", "M", "SER", "CS", "SA", "PS", "B", "US", "P", "V", "SM", "DS", "SB", "s", "IS", "N", "STR", "SF", "SI", "GS", "SO", "G", "Si", "SE", "H", "LS", "SP", "NS", "ST", "SN", "SAM", "BS", "T", "ASS", "RAW", "SQL"], "K": [" k", "R", "L", "kB", "Y", "Q", "Z", "Sk", "O", "M", "k", "D", "B", "F", "P", "V", "ks", "W", "OK", "N", "SK", "j", "Key", "G", "J", "H", "T"], "temp": ["flag", "record", "level", "counter", "t", "TL", "max", "count", "tmp", "z", "sp", "DEV", "key", "index", "value", "Temp", "dest", "w", "term", "load", "mask", "stop", "offset", "field", "VAL", "ptr", "set"], "i": ["zi", "go", "iter", "I", "hi", "ci", "\u0438", "si", "io", "ic", "u", "ogi", "ai", "ei", "xi", "us", "me", "ind", "point", "ori", "x", "mi", "n", "cli", "mu", "im", "y", "gi", "q", "ix", "ui", "ri", "ki", "j", "uri", "a", "qi", "pi", "multi", "ji", "ij", "it", "ii", "gu", "ini", "di", "ex", "li", "in", "ti", "bi", "ims", "m", "iu", "phi"], "target": ["t", " h", " D", "TL", "link", "tmp", "eta", "INT", " T", "prime", "value", "goal", "dest", "term", "j", "ARGET", " tmp", "TH", "start", "stop", "step", "H", "p", "offset", " Target", "end", " J", "Target"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.HashMap;\\nimport java.util.HashSet;\\nimport java.util.Map;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\\n\tpublic static void main(String[] args) {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint a = sc.nextInt();\\n\t\tint b = sc.nextInt();\\n\t\tint k = sc.nextInt();\\n\t\tArrayList<Integer> ans = new ArrayList<>();\\n\t\tfor(int i=1 ; i <= 100 ; i++) {\\n\t\t\tif(a%i == 0 && b%i ==0) {\\n\t\t\t\tans.add(i);\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(ans.get(ans.size()-k));\\n\t}\\n}\\n", "target": "134", "substitutes": {"sc": ["SC", " SC", "sw", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "anc", "fc", "sec", "sp", "c", "cc", "esc", "isc", "spec", "cl", "lc", " Sc", "ctl", "ctrl", "cons", "mc", "inc", "acc", "scl", "cr", " scr", "ch", "conv", "dc", "cs", "tc", "Sc", "scan"], "a": ["ar", "ami", "aa", "anta", "aq", "ra", "ai", "va", "A", "au", "sha", "pa", "oa", "eta", "ach", "ao", "ba", "an", "n", "am", "ea", "ga", "ua", "sta", "isa", "ta", "aj", "ae", "aaa", "apa", "alpha", "la", "sa", "ma", "ama", "ac"], "b": ["bp", "nb", "f", "bb", "t", "bc", "bis", "bf", "ab", "B", "r", "fb", "c", "ba", "n", "wb", "h", "eb", "ib", "y", "v", "bs", "ob", "j", "l", "rb", "e", "br", "gb", "p", "db", "bi", "z", "d", "m", "g"], "k": ["kn", "f", "t", "ka", "ak", "kh", "dk", "kk", "max", "kg", "ek", "sk", "ks", "n", "c", "ke", "v", "s", "q", "w", "j", "kw", "ik", "ku", "kl", "K", "e", "ok", "ck", "p", "mk", "z", "d", "m", "g", "tk"], "ans": ["ras", "ANS", "orts", "ees", "anks", "offs", "anes", "akens", "ats", "ums", "inks", "ads", "aps", "eds", "ols", "ems", "ants", "ins", "mos", "outs", "uns", "ms", "als", "helps", "aus", "ks", "an", "ags", "unes", "angs", "ands", "amps", "acts", "rans", "aos", "aces", "olds", "ons", "ens", "ars", "ams", "ros", "uploads", "ates", "ids", "umes", "aints", "vals", "leans", "arms", "arts", "xs", "ents"], "i": ["zi", "iq", "iter", "I", "hi", "ci", "span", "f", "si", "io", "sim", "u", "ai", "ei", "xi", "me", "is", "ind", "point", "ori", "x", "ms", "mi", "n", "cli", "isi", "mu", "index", "gi", "im", "y", "init", "ix", "v", "ui", "q", "ri", "ki", "batch", "j", "l", "qi", "pi", "multi", "ij", "it", "print", "ii", "ji", "p", "ini", "di", "yi", "li", "fi", "conv", "ti", "bi", "d", "m", "iu", "phi", "ip"]}}
{"code": "import java.util.*;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        Set<String> set = new HashSet<>();\\n        String blank = sc.nextLine();\\n        for (int i=0; i<n; i++) {\\n          String str = sc.nextLine();\\n          set.add(str);\\n        }\\n        System.out.println(set.size());\\n    }\\n}\\n", "target": "98", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "pb", "ctx", "sl", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "sub", "disc", "anc", "sec", "sp", "cont", "c", "cc", "esc", "isc", "ec", "cl", "lc", "irc", "ctl", "desc", "dec", "mc", "inc", "scl", "cr", "sel", "ch", "capt", "ck", "sci", "dc", "cle", "cs", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "ln", "nc", "net", "count", "nan", "mn", "na", "ng", "c", "nn", "nor", "v", "gn", "en", "N", "j", "l", "nu", "nl", "np", "ot", "cn", "sn", "ns", "nd", "nt", "nw", "nr", "num", "d", "m", "ne"], "set": ["sort", "done", "show", "change", "split", "complete", "sync", "map", "match", "SET", "sh", "base", "test", "sub", "sum", "reset", "find", "save", "add", "parse", "size", "subject", "are", "use", "local", "load", "hash", "dec", "mod", "start", "store", "mark", "it", "seen", "system", "dict", "collect", "st", "empty", "group", "sche", "see", "common", "list", "clear", "sign", "et", "draw", "get", "se"], "blank": [" banner", " marker", " buf", " buffer", " val", " dummy", " arg", "bl", "buffer", " len", " repl", " ss", " guard", " block", " fmt", " unused", " BL", " din", " obj", " msg", " label", "sel", " baseline", " prompt", " bl", " ans", "block", " start"], "i": ["zi", "iter", "I", "ie", "ci", "hi", "\u0438", "si", "t", "sim", "us", "me", "ai", "is", "ms", "mi", "err", "cli", "init", "im", "gi", "q", "ix", "ui", "j", "batch", "qi", "pi", "multi", "my", "it", "ii", "chain", "gu", "di", "ini", "id", "li", " ii", "fire", "ti", "bi", "ims", "m", "iu", "phi", "ip"], "str": ["stable", "iter", "def", "hex", "sl", "t", "div", "obj", "dr", "out", "stri", "ctr", "gr", "r", "sp", "c", "tr", "key", "arr", "name", "s", "del", "Str", "prefix", "STR", "j", "l", "next", "string", "char", "text", "e", "cr", "print", "p", "br", "chain", "st", "dat", "txt", "z", "line", "g", "fr"]}}
{"code": "import java.io.*;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) throws IOException {\\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\\n\t\tStringBuilder sb = new StringBuilder();\\n\t\tint[][][] houses = new int[4][3][10];\\n\t\tint n = Integer.parseInt(in.readLine());\\n\t\tfor (int i = 0; i < n; i += 1) {\\n\t\t\tString[] info = in.readLine().split(\" \");\\n\t\t\tint b = Integer.parseInt(info[0]);\\n\t\t\tint f = Integer.parseInt(info[1]);\\n\t\t\tint r = Integer.parseInt(info[2]);\\n\t\t\tint v = Integer.parseInt(info[3]);\\n\t\t\thouses[b - 1][f - 1][r - 1] += v;\\n\t\t}\\n\t\tfor (int x = 0; x < 4; x += 1) {\\n\t\t\tfor (int y = 0; y < 3; y += 1) {\\n\t\t\t\tfor (int z = 0; z < 10; z += 1) {\\n\t\t\t\t\tsb.append(\" \");\\n\t\t\t\t\tsb.append(houses[x][y][z]);\\n\t\t\t\t}\\n\t\t\t\tsb.append(System.getProperty(\"line.separator\"));\\n\t\t\t}\\n\t\t\tif (x != 3) {\\n\t\t\t\tsb.append(\"####################\"\\n\t\t\t\t\t\t+ System.getProperty(\"line.separator\"));\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.print(sb);\\n\t}\\n}", "target": "211", "substitutes": {"in": ["or", "din", "io", "serv", "IN", "at", "ic", "inner", "inn", "from", "mm", "bin", "is", "out", "ind", "ins", "sum", "add", " out", "std", "on", "err", "c", "source", "thin", "ks", "isin", "by", "conf", "init", "con", "s", "state", "per", "en", " din", "asin", "cin", "In", "sin", "it", "input", "stream", "old", "file", "ini", "rt", "null", "user", "inf", "reader", "log", "get"], "sb": ["sm", "mb", "bps", "sg", "sth", "nb", "sql", "pb", "bj", "si", "bash", "bb", "kB", "sf", "sv", "bh", "sync", "bis", "ssh", "bg", "sq", "ub", "bf", "gc", "sp", "rob", "fb", "rpm", "wb", "eb", "zb", "lb", "ib", "kb", "SB", "bs", "ob", " SB", "usb", "cb", "bt", "rm", "sbm", "rb", "xb", "gb", "sn", "ls", "db", "conv", "gob", "erb", "sa", "ssl", "orb", "stab", "lp", "suff", "obb"], "houses": ["urers", "ues", "house", "builders", "ouses", "modules", "grounds", "quarters", "values", "sticks", "services", "ris", "ways", "hops", "woods", "holes", "sters", " homes", "prints", "oms", "ps", "adders", "asha", "nuts", "devices", "housing", "mys", "ves", "agons", "ups", "vs", "tops", "las", "men", "rings", "chers", "ories", "lights", "ubes", "ths", "heres", "players", "rooms", "omes", "rs", "yards", "itals", "mas", "mers", "details"], "n": ["nb", "t", "ln", "nc", "net", "max", "mn", "nan", "k", "na", "no", "o", "c", "nn", "name", "w", "N", "j", "l", "nu", " N", "nl", "np", "ot", "p", "sn", "ns", "nt", "nr", "num", "d", "m", "ne"], "i": ["iq", "I", "ci", "ami", "si", "t", "sim", "u", "at", "ai", "xi", "is", "ind", "o", "mi", "c", "index", "gi", "im", "ix", "ui", "init", "this", "j", "l", "a", "qi", "pi", "multi", "it", "ii", "p", "di", "ini", "ni", "id", "li", "m", "iu", "phi", "ip"], "info": ["error", "iter", "isu", "def", "success", "join", "history", "status", "show", "inner", "used", "ro", "op", "now", "about", "information", "data", "fo", "stat", "type", "train", "check", "entry", "os", "by", "init", "conf", "where", "json", "Info", "query", "j", "ready", "good", "INFO", "extra", "res", "it", "http", "group", "id", "inf", "list", "help", "details", "ip"], "b": ["bp", "nb", "bb", "t", "u", "bl", "bf", "ab", "B", "fb", "ba", "c", "h", "eb", "lb", "ib", "bs", "bt", "j", "l", "a", "rb", "e", "gb", "p", "db", "bi", "d", "m"], "f": ["ft", "fs", "fort", "t", "u", "sf", "fa", "o", "fd", "fc", "F", "fb", "h", "fe", "w", "fed", "j", "l", "fg", "e", "p", "file", "cf", "fl", "fi", "fm", "ff", "d", "m", "tf", "fr"], "r": ["or", "ar", "R", "t", "u", "re", "rc", "er", "ro", "dr", "fr", "o", "gr", "ur", "rr", "c", "tr", "ir", "h", "s", "w", "ri", "l", "pr", "mr", "rb", "e", "p", "rt", "rd", "ry", "d", "m", "attr", "sr", "vr"], "v": ["lv", "t", "u", "sv", "va", "vi", "k", "o", "uv", "c", "V", "h", "vt", "value", "s", "w", "j", "l", "e", "p", "vr", "d", "m", "val", "g"], "x": ["fx", "px", "xp", "xml", "ct", "xd", "ax", "at", "xt", "xx", "xi", "lex", "xa", "race", "xf", "dx", "ox", "k", "ord", "o", "no", "on", "check", "h", "key", "index", "xc", "ix", "w", "xe", "j", "el", "l", "wx", "a", "rx", "step", "mx", "e", "p", "xy", "ex", "inx", "tx", "X", "id", "att", "width", "act", "ux", "xs"], "y": ["ye", "cy", "kit", "yl", "vy", "py", "hot", "Y", "wy", "ies", "oy", "fy", "gy", "o", "sy", "uy", "ym", "iy", "yt", "by", "ty", "ry", "yr", "yle", "j", "ey", "asy", "my", "ly", "ya", "ot", "ch", "xy", "ny", "axy", "yn", "yi", "yy", "ay"], "z": ["zi", "cy", "zone", "nz", "zo", "t", "ll", "Z", "tz", "ox", "o", "gz", "iz", "ez", "d", "err", "zz", "zx", "pt", "os", "oz", "zy", "s", "q", "yz", "w", "zu", "j", "l", "zer", "step", "ph", "az", "zip", "zes", "zen", "fl", "ze", "ld", "str", "cz", "uz", "g", "zh"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n\\n    public static void main(String args[]){\\n\t\tsolve();\\n    }\\n\t\\n\tprivate static void solve(){\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint H = sc.nextInt();\\n\t\tint A = sc.nextInt();\\n\t\tif(H%A == 0){\\n\t\t\tSystem.out.println(H/A);\\n\t\t}else{\\n\t\t\tSystem.out.println(H/A + 1);\\n\t\t}\\n\t}\\n}", "target": "147", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "pb", "usc", "rc", "nc", "bc", "asc", "sync", "sh", "exec", "sch", "gc", "sq", "anc", "sec", "sp", "c", "esc", "isc", "src", "s", "cl", "ko", "lc", " Sc", "desc", "ctrl", "mc", "enc", "nl", "RC", "scl", "cr", "ch", "p", "system", "ck", "ss", "conv", "cle", "cs", "tc", "Sc", "scan"], "H": ["HO", "High", "RH", "His", "HEAD", "He", "L", "HH", "SH", "HI", "HE", " h", "HTTP", "M", "SHA", "Host", "MH", "HA", "GH", "ASH", "P", "V", "HR", "h", "HTML", "OH", "HP", "HL", "HB", "N", "AH", "U", "ANG", "DH", "GO", " HH", "CH", "TH", "K", "HS", "HD", "Eh", "NH", "X", "HT", "HC"], "A": ["Alpha", "MA", "E", "AS", "I", "AF", "GA", "C", "AN", "AE", "L", "Array", "O", "M", "SHA", "AA", "AP", "The", "SA", "S", "B", "HA", "ACC", "F", "P", "V", "AU", "IA", "W", "AB", "N", "U", "EA", "AC", "a", "JA", "Blake", "NA", "BA", "Ax", "PA", "AR", "An", "As", "AT", "LA", "AST", "CA"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int n = sc.nextInt();\\n        int max = 1;\\n        Map<String, Integer> map = new HashMap<>();\\n        for (int i=0; i<n; i++) {\\n            String s = sc.next();\\n            if (map.containsKey(s)) {\\n                max = Math.max(max, map.get(s) +1);\\n                map.put(s, map.get(s) +1);\\n            } else {\\n                map.put(s, 1);\\n            }\\n        }\\n//        String[] array = new String[map.size()];\\n        List<String> array = new ArrayList<>();\\n        int i = 0;\\n        for (String key : map.keySet()) {\\n            if (map.get(key) == max) {\\n//                array[i] = key;\\n                array.add(key);\\n                i++;\\n            }\\n        }\\n//        Arrays.sort(array);\\n        Collections.sort(array);\\n        for (String s : array) {\\n            System.out.println(s);\\n        }\\n    }\\n}", "target": "235", "substitutes": {"sc": ["SC", "sm", "sw", "osc", "pc", "sys", "sl", "usc", "ic", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "gc", "sq", "anc", "fc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "src", "cl", "lc", "ctl", "sr", "desc", "screen", "mc", "inc", "scl", "cr", "ok", "ch", "sci", "dc", "cle", "cs", "ec", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "network", "ln", "nc", "net", "mn", "na", "no", "ng", "nn", "fn", "nor", "gn", "en", "N", "j", "l", "nu", "np", "nl", "cn", "norm", "sn", "ns", "nd", "nt", "ni", "nw", "num", "d", "m", "ne"], "max": ["or", "MAX", "est", "length", "upper", "ax", "t", "range", "window", "div", "scale", "exp", "all", "Max", "right", "base", "k", "last", "count", "now", "ma", "sum", "ox", "x", "add", "size", "full", "maximum", "key", "med", "index", "v", "min", "head", "conf", "cl", "master", "grow", "put", "good", "hash", "next", "mod", "rest", "recent", "pop", "step", "mx", "diff", "p", "gt", "append", "total", "pad", "end", "checked", "ext", "dot", "set", "m", "default", "get"], "map": ["mb", "cmp", "mt", "cap", "open", "addr", "ack", "maps", "show", "view", "shape", "scale", "mm", "complete", "match", "tool", "mp", "age", "save", "link", "add", "parse", "message", "pm", "mg", "msg", "manager", "use", "ape", "index", "ap", "app", "man", "per", "master", "place", "MAP", "where", "load", "hash", "lock", "make", "table", "mask", "mod", "mem", "store", "print", "form", "pack", "dict", "mean", "apper", "group", "cp", "cache", "set", "list", "m", "block", "metadata", "cast"], "i": ["zi", "iq", "mill", "I", "hi", "ci", "ie", "sql", "si", "io", "ic", "sim", "u", "t", "ai", "xi", "us", "ei", "eu", "is", "ish", "ind", "x", "ms", "mi", "im", "y", "init", "q", "gi", "ui", "ix", "j", "qi", "pi", "multi", "it", "ii", "gu", "ini", "di", "ex", "li", " ii", " I", "bi", "ti", "m", "iu", "phi", "g", "ip"], "s": ["its", "es", "qs", "hs", "sql", "sys", "f", "ats", "js", "sts", "sv", "us", "er", "ims", "is", "sq", "S", "ms", "ps", "simple", "less", "g", "c", "source", "h", "os", "y", "v", "south", "q", "state", "w", "ws", "string", "series", "gs", "search", "ns", "rs", "ls", "ds", "xs", "cs", "str", "sym", "m", "ss", "sb", "ts"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        String[] x = sc.nextLine().split(\" \");\\n        String[] d = sc.nextLine().split(\" \");\\n        int a = Integer.parseInt(x[0]);\\n        int c = Integer.parseInt(x[2]);\\n\\n        int count = 0;\\n        for (int i=c; i <= a; i++) {\\n            for (String e : d) {\\n                if (Integer.parseInt(e) == i) {\\n                    count++;\\n                }\\n            }\\n        }\\n        int count2 = 0;\\n        for (int i = c; i >= 0; i--) {\\n            for (String e : d) {\\n                if (Integer.parseInt(e) == i) {\\n                    count2++;\\n                }\\n            }\\n        }\\n        if (count < count2) {\\n            System.out.println(count);\\n        } else {\\n            System.out.println(count2);\\n        }\\n    }\\n\\n    static int getInt(String val) {\\n        return Integer.parseInt(val);\\n    }\\n}", "target": "197", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "exp", "sh", "sch", "gc", "sq", "sub", "uc", "ng", "anc", "sec", "sp", "cont", "cc", "isc", "esc", "src", "cl", "lc", " Sc", "ctl", "mc", "nl", "inc", "scl", "cr", "ch", "system", "ck", "st", "ss", "conv", "cs", "tc", "Sc", "sb", "scan"], "x": ["fx", "px", "xp", "xml", "ax", "at", "xx", "xt", "xi", "lex", "xf", "xa", "dx", "ox", "check", "y", "v", "xc", "s", "ix", "xe", "l", "wx", "rx", "mx", "p", "xy", "xes", "tx", "ex", "X", "parts", "conv", "ux", "xs"], "d": ["dd", "der", "t", "dra", "sd", "da", "D", "out", "pd", "r", "n", "dm", "y", "v", "s", "j", "l", "dl", "p", "b", "dat", "dict", "di", "td", "dt", "ds", "db", "dir", "ld", "dos", "m", "g"], "a": ["aa", "t", "at", "ai", "area", "va", "all", "A", "au", "na", "o", "pa", "oa", "ba", "n", "an", "ea", "ada", "ia", "l", "ta", "aj", "ae", "p", "b", "ca", "as", "alpha", "la", "sa", "z", "ma", "ac"], "c": ["ci", "ar", "f", "C", "ct", "t", "ic", "rc", "bc", "o", "cd", "r", "n", "cc", "h", "v", "ec", "tc", "w", "lc", "l", "co", "p", "b", "cm", "dc", "cp", "cs", "z", "m", "unc", "g", "ac"], "count": ["OUNT", "found", "report", "length", "success", "zero", "counter", "Count", "ct", "collection", "hold", "ind", "sum", "find", "reset", "ctr", "cond", "message", "size", "must", "score", "cont", "err", "check", "n", "code", "index", "ount", "conf", "value", "info", "set", "comment", "next", "make", "current", "store", "amount", "finder", "coll", "child", "search", "total", "result", "nt", "number", "num", "trace", "cache", "list", "common", "tf", "draw", "test", "scroll", "call"], "i": ["zi", "iq", "iti", "ie", "hi", "ci", "I", "\u0438", "si", "io", "ic", "u", "oi", "ai", "xi", "ei", "me", "is", "point", "ori", "o", "client", "mi", "cli", "mac", "iy", "php", "mu", "y", "im", "v", "gi", "ix", "ui", "ri", "ki", "j", "uri", "l", "ity", "qi", "pi", "multi", "ij", "it", "ii", "ini", "di", "ni", "um", "to", "li", "ti", "bi", "ims", "iu", "phi", "ip", "asi"], "e": ["or", "E", "note", "ent", "est", "ie", "eg", "ine", "f", "t", "pe", "me", "ei", "eur", "ger", "er", "eu", "o", "ne", "ade", "ce", "ev", "entry", "fe", "ate", "ec", "ale", "ea", "one", "ve", "entity", "oe", "ace", "l", "ue", "ode", "p", "ome", "edge", "element", "ele", "ite", "event", "be", "ee", "see", "ze", "line", "ide", "m", "et", "el", "ame"], "count2": ["cache3", "ount1", "counter2", "cache2", "Counttwo", " countDB", "counter62", "force1", " counttwo", "cache1", "CountLog", "ountLog", "count3", "Count3", "counterDB", "counter1", "Count2", " count62", "counttwo", "length3", "ount62", "forceTwo", "length1", "ountDB", "ount2", "countDB", "length2", " count1", "countLog", "forceLog", "force2", "Count1", "ountTwo", "count1", "cachetwo", " count3", "countTwo", "CountTwo", "count62"], "val": ["Val", "slot", "rol", "func", "al", "sv", "sol", "ival", "data", " v", "o", "vt", "key", "index", "v", "value", "ty", "cal", "q", "aval", "local", "valid", "l", "elt", "vol", "text", "sel", "Value", "p", "b", "eval", "tx", "pol", "ret", "vals", "VAL", "str", "z", "line", "m", "item", "test", "loc"]}}
{"code": "import java.util.*;\\npublic class Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n    int N = sc.nextInt();\\n    int K = sc.nextInt();\\n    long answer =0;\\n    long H[] = new long[N];\\n    for(int i=0;i<N;i++){\\n      H[i]=sc.nextLong();\\n    }\\n    if(N<=K){\\n      System.out.println(0);\\n      return;\\n    }\\n    Arrays.sort(H);\\n    for(int i=0;i<N-K;i++){\\n      answer = answer+H[i];\\n    }\\n    System.out.println(answer);\\n  }\\n}", "target": "230", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "cont", "cc", "c", "esc", "isc", "cl", "lc", "irc", " Sc", "ctl", "ctrl", "mc", "inc", "scl", "cr", "capt", "ch", "cgi", "ss", "sci", "scan", "conv", "sa", "dc", "cs", "tc", "Sc", "sb", "sr"], "N": ["CN", "I", "NN", "NM", "R", "NC", "AN", "ND", "L", "C", "Q", "NO", "Na", "Z", "Num", "NT", "O", "M", "D", "S", "B", "Node", "F", "P", "V", "n", "NG", "NR", "Ni", "NL", "NB", "NP", "TN", "NI", "GN", "NA", "G", "J", "NH", "NS", "NOR", "SN", "T", "Ns", "No", "NPR", "NE"], "K": ["E", "I", "KING", "KC", "C", "PK", "FK", "KE", "L", "VK", "Y", "Q", "Z", "Sk", "M", "k", "UK", "S", "B", "P", "V", "NK", "W", "Kind", "KK", "HK", "OK", "SK", "KR", "Key", "G", "J", "KI", "KB", "KA", "KEY", "T", "KT", "KS", "KN"], "answer": ["answered", "remember", "fill", "archive", "open", "record", "zero", "aq", "equ", "window", "install", "reply", "offer", "x", "response", "say", "ask", "vote", " answered", "request", "order", "approximately", "entry", "echo", "review", "value", "q", "random", "one", "valid", "ve", "distance", "ace", "question", "term", "rn", "next", "string", "after", "Answer", "energy", "continue", "interpret", "search", "accept", "result", "option", "wer", "array", "number", "support", "poll", "ze", " unanswered", "cache", "query", "address", "draw", "message", "uration"], "H": ["I", "RH", "He", "PH", "SH", "HH", "L", "HI", "HE", " h", "AV", "Hash", "HTTP", "M", "MH", "HA", "HF", "GH", "USB", "B", "P", "HR", "h", "HM", "OH", "HK", "HP", "HL", "HB", "AH", "DH", "CH", "TH", "HS", "NH", "HD", "HT", "HC", "HQ"], "i": ["zi", "ie", "I", "ci", "uni", "\u0438", "si", "io", "ic", "sim", "u", "oi", "ai", "xi", "ei", "inner", "us", "me", "base", "is", "ski", "ind", "point", "ori", "client", "mi", "err", "cli", "iy", "y", "init", "im", "gi", "ix", "q", "ui", "info", "ri", "ki", "j", "batch", "uri", "you", "ity", "qi", "pi", "multi", "ji", "ij", "it", "ii", "PI", "chain", "ini", "di", "ni", "id", "li", "in", "ti", "bi", "ims", "m", "iu", "phi", "g", "ip", "asi"]}}
{"code": "import java.util.*;\\n\\npublic class Main{\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        String s = sc.next();\\n        char a = s.charAt(0);\\n\\n        if ( Character.isUpperCase(a)) {\\n            System.out.print('A');\\n        } else {\\n            System.out.print('a');\\n        }\\n    }\\n\\n}", "target": "80", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "usc", "sv", "nc", "bc", "asc", "sync", "sac", "sch", "sq", "gc", "sub", "anc", "sec", "sp", "c", "cc", "isc", "esc", "ser", "cl", "lc", "desc", "dec", "mc", "inc", "scl", "cr", "sel", "ch", "system", "ss", "conv", "cle", "cs", "tc", "Sc", "scan"], "s": ["sw", "sql", "sys", "sl", "ats", "js", "sf", "sv", "se", "sts", "gets", "strings", "is", "sq", "S", "ps", "sp", "g", "spec", "src", "v", "ws", "j", "space", "sam", "string", "gs", "p", "st", "ns", "rs", "b", "ls", "ss", "sa", "str", "m", "sb", "ts"], "a": ["ar", "aa", "f", "era", "t", "u", "area", "xa", "A", "sha", "o", "pa", "oa", "ao", "act", "an", "am", "aaaa", "v", "ea", "eas", "ia", "j", "sta", "ta", "ae", "aj", "aaa", "aff", "e", "b", "aka", "ca", "ata", "as", "alpha", "la", "att", "sa", "z", "d", "ma", "ana"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args){\\n        Scanner sc = new Scanner(System.in);\\n        int N = sc.nextInt();\\n        sc.close();\\n\\n        if(N%1000==0){\\n            System.out.println(0);\\n        }\\n        else{\\n            System.out.println(1000-N%1000);\\n        }\\n    }\\n}", "target": "184", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "syn", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sh", "sch", "sq", "gc", "sub", "uc", "anc", "fc", "sec", "sp", "c", "cc", "ser", "esc", "isc", "cl", "lc", "desc", "dec", "mc", "RC", "nl", "inc", "cr", "sel", "ch", "system", "ck", "ss", "cle", "cs", "reader", "ec", "tc", "Sc", "scan"], "N": ["CN", "I", "NN", "NM", "R", "NC", "C", "ND", "L", "IN", "Z", "NT", "M", "D", "S", "B", "MN", "P", "V", "n", "NG", "NR", "CNN", "Ni", "NUM", "NB", "NP", "NV", "TN", "NI", " n", "GN", "NA", "K", "J", "NH", "H", "NS", "SN", "T", "Ns", "NE"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main{\\n  public static void main(String[] args){\\n    Scanner sc = new Scanner(System.in);\\n\tint a = Integer.parseInt(sc.next());\\n    int b = Integer.parseInt(sc.next());\\n    int c = Integer.parseInt(sc.next());\\n    boolean flag = ( a==b && a!=c) || (a==c && b!=c) || (b==c && b!=a);\\n    if(flag){\\n      System.out.print(\"Yes\");\\n    }else{\\n      System.out.print(\"No\");\\n    }\\n    System.out.flush();\\n  }\\n}", "target": "117", "substitutes": {"sc": ["SC", " SC", "osc", "pc", "sys", "usc", "se", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "gc", "sq", "uc", "anc", "fc", "sec", "sp", "cc", "isc", "esc", "cl", "ko", "lc", "irc", " Sc", "ctl", "desc", "ctrl", "mc", "nl", "inc", "acc", "scl", "cr", " scr", "ch", "sel", "ck", "cgi", "cle", "cs", "tc", "Sc", "scan"], "a": ["ar", "aa", "f", "at", "al", "aq", "t", "ai", "va", "A", "da", "au", "i", "na", "ab", "o", "oa", "r", "ach", "ao", "ba", "an", "am", "h", "ap", "v", "m", "ea", "ga", "ia", "j", "l", "sta", "ta", "ae", "aj", "aaa", "af", "e", "apa", "p", "ca", "alpha", "la", "as", "sa", "act", "ma", "g", "ac"], "b": ["nb", "f", "back", "bb", "t", "u", "bc", "bl", "bf", "i", "ab", "o", "B", "r", "sb", "fb", "n", "ba", "abb", "wb", "eb", "ib", "cc", "h", "y", "v", "bs", "ob", "s", "bo", "cb", "bt", "j", "l", "bot", "rb", "it", "e", "br", "gb", "p", "db", "be", "bi", "z", "d", "m", "g"], "c": ["ci", "f", "C", "ct", "cu", "t", "u", "rc", "bc", "i", "o", "ab", "x", "cd", "r", "ce", "n", "cc", "h", "v", "ec", "q", "lc", "cb", "l", "co", "e", "cr", "ch", "cm", "vc", "cf", "ca", "be", "dc", "cp", "cs", "z", "d", "m", "tc", "g", "ac"], "flag": ["mail", "bool", "success", "status", "lv", "enable", "tag", "FLAG", "sync", "hold", "model", "condition", "save", "car", "cond", "bit", "Flag", "check", "specified", "key", "flags", "land", "flow", "lag", "lock", "char", "bug", "force", "lead", "store", "print", "ground", "supp", "command", "sun", "group", "qual", "cloud", "field", "id", "leaf", "ld", "set"]}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Main main = new Main();\\n        main.solve();\\n    }\\n\\n    public void solve() {\\n        Scanner scan = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\\n        int N = scan.nextInt();\\n        int ans = N / 2;\\n        if (N % 2 == 1) {\\n            ans += 1;\\n        }\\n        System.out.println(ans);\\n    }\\n}\\n", "target": "233", "substitutes": {"scan": ["auto", "syn", "sys", "pass", "san", "Scan", "sv", "se", "ann", "sync", "send", "reach", "gate", "out", "stat", "find", "sum", "skip", "parse", "sp", "check", "an", "n", "read", "nn", "en", "con", "ner", "cat", "char", "gen", "nl", "sin", "can", "system", "p", "run", "search", "seek", "nav", "conv", "row", "in", "pan", "set", "begin", "query", "sc"], "N": ["I", "NN", "NM", "R", "NC", "AN", "C", "L", "Na", "NO", "Z", "Num", "NT", "A", "O", "M", "D", "S", "B", "MN", "P", "V", "n", "NR", "CNN", "NB", "NP", "NV", "TN", "NI", "GN", "NA", "K", "G", "J", "NH", "H", "New", "NS", "X", "NOR", "SN", "FN", "T", "Ns", "Sn"], "ans": ["nets", "ANS", "anks", "ANN", "AN", "lines", "anes", "ats", "ums", "aps", "eps", "eds", "ann", "nan", "ants", "ins", "uns", "outs", "ms", "aus", "an", " scans", "ks", "lan", "os", "s", "amps", "rans", " spans", "posts", "asks", "ts", "olds", "ons", "ens", " Ans", "ars", "ros", "can", "An", "ids", "ns", "anon", "ls", "as", " orphans", "stats", "pan", "arms", "arts", "xs", "ents"]}}
{"code": "//Small, Large, or Equal\\nimport java.util.Scanner;\\n\\nclass Main {\\n    public void cubic() {\\n        Scanner sc = new Scanner(System.in);\\n        int a = sc.nextInt();\\n        int b = sc.nextInt();\\n        \\n        String out = \"a > b\";\\n        if (a == b ) {\\n            out = \"a == b\";\\n        }else if(a < b) {\\n            out = \"a < b\";\\n        }\\n\\n\\n                                        \\n        System.out.println(out);\\n    }\\n    \\n    public static void main(String[] args){\\n    new Main().cubic();\\n    }\\n}", "target": "179", "substitutes": {}}
{"code": "import java.io.*;\\nimport java.util.*;\\nimport java.lang.*;\\n\\npublic class Main {\\n\tint mod = 1000000007;\\n\\n\tstatic FastScanner sc = new FastScanner();\\n\t\\n\tpublic static void main(String[] args) {\\n\t\tout = new PrintWriter(new BufferedOutputStream(System.out));\\n\t\tint n=sc.nextInt();\\n\t\tint m=sc.nextInt();\\n\t\tout.println((n*(n-1)+m*(m-1))/2);\\n\t\tout.close();\\n\t}\\n\\n\t// ----------------------------------------------------------\\n\\n\tstatic int l_min(int[] a) {\\n\t\tArrays.sort(a);\\n\t\treturn a[0];\\n\t}\\n\\n\tstatic int l_max(int[] a) {\\n\t\tint l = a.length;\\n\t\tArrays.sort(a);\\n\t\treturn a[l - 1];\\n\t}\\n\\n\tstatic int gcd(int a, int b) {\\n\\n\t\tif (a == 0) {\\n\t\t\treturn b;\\n\t\t}\\n\t\treturn gcd(b % a, a);\\n\\n\t}\\n\tstatic int[] fill(int[] a){\\n\t\tint n=a.length;\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\ta[i]=sc.nextInt();\\n\t\t}\\n\t\treturn a;\\n\t}\\n\\n\tpublic static PrintWriter out;\\n\\n}\\n\\nclass UnionFind {\\n\tint parent[];\\n\tint rank[];\\n\tint size[];\\n\\n\tUnionFind(int n) {\\n\t\tparent = new int[n];\\n\t\trank = new int[n];\\n\t\tsize = new int[n];\\n\t\tfor (int i = 0; i < n; i++) {\\n\t\t\tparent[i] = i;\\n\t\t\trank[i] = 0;\\n\t\t\tsize[i] = 1;\\n\t\t}\\n\t}\\n\\n\tvoid union(int x, int y) {\\n\t\tint xRoot = find(x);\\n\t\tint yRoot = find(y);\\n\\n\t\tif (xRoot != yRoot) {\\n\\n\t\t\tif (rank[xRoot] > rank[yRoot]) {\\n\t\t\t\tparent[yRoot] = xRoot;\\n\t\t\t\tsize[xRoot] += size[yRoot];\\n\\n\t\t\t} else if (rank[xRoot] < rank[yRoot]) {\\n\t\t\t\tparent[xRoot] = yRoot;\\n\t\t\t\tsize[yRoot] += size[xRoot];\\n\\n\t\t\t} else {\\n\t\t\t\tparent[yRoot] = xRoot;\\n\t\t\t\trank[xRoot]++;\\n\t\t\t\tsize[xRoot] += size[yRoot];\\n\t\t\t}\\n\t\t}\\n\\n\t}\\n\\n\tint find(int x) {\\n\t\tif (parent[x] == x) {\\n\t\t\treturn x;\\n\t\t} else {\\n\t\t\treturn find(parent[x]);\\n\t\t}\\n\\n\t}\\n\\n\tboolean same(int x, int y) {\\n\t\treturn find(x) == find(y);\\n\t}\\n\\n}\\n\\nclass FastScanner {\\n\tprivate final InputStream in = System.in;\\n\tprivate final byte[] buffer = new byte[1024];\\n\tprivate int ptr = 0;\\n\tprivate int buflen = 0;\\n\\n\tprivate boolean hasNextByte() {\\n\t\tif (ptr < buflen) {\\n\t\t\treturn true;\\n\t\t} else {\\n\t\t\tptr = 0;\\n\t\t\ttry {\\n\t\t\t\tbuflen = in.read(buffer);\\n\t\t\t} catch (IOException e) {\\n\t\t\t\te.printStackTrace();\\n\t\t\t}\\n\t\t\tif (buflen <= 0) {\\n\t\t\t\treturn false;\\n\t\t\t}\\n\t\t}\\n\t\treturn true;\\n\t}\\n\\n\tprivate int readByte() {\\n\t\tif (hasNextByte())\\n\t\t\treturn buffer[ptr++];\\n\t\telse\\n\t\t\treturn -1;\\n\t}\\n\\n\tprivate static boolean isPrintableChar(int c) {\\n\t\treturn 33 <= c && c <= 126;\\n\t}\\n\\n\tpublic boolean hasNext() {\\n\t\twhile (hasNextByte() && !isPrintableChar(buffer[ptr]))\\n\t\t\tptr++;\\n\t\treturn hasNextByte();\\n\t}\\n\\n\tpublic String next() {\\n\t\tif (!hasNext())\\n\t\t\tthrow new NoSuchElementException();\\n\t\tStringBuilder sb = new StringBuilder();\\n\t\tint b = readByte();\\n\t\twhile (isPrintableChar(b)) {\\n\t\t\tsb.appendCodePoint(b);\\n\t\t\tb = readByte();\\n\t\t}\\n\t\treturn sb.toString();\\n\t}\\n\\n\tpublic long nextLong() {\\n\t\tif (!hasNext())\\n\t\t\tthrow new NoSuchElementException();\\n\t\tlong n = 0;\\n\t\tboolean minus = false;\\n\t\tint b = readByte();\\n\t\tif (b == '-') {\\n\t\t\tminus = true;\\n\t\t\tb = readByte();\\n\t\t}\\n\t\tif (b < '0' || '9' < b) {\\n\t\t\tthrow new NumberFormatException();\\n\t\t}\\n\t\twhile (true) {\\n\t\t\tif ('0' <= b && b <= '9') {\\n\t\t\t\tn *= 10;\\n\t\t\t\tn += b - '0';\\n\t\t\t} else if (b == -1 || !isPrintableChar(b)) {\\n\t\t\t\treturn minus ? -n : n;\\n\t\t\t} else {\\n\t\t\t\tthrow new NumberFormatException();\\n\t\t\t}\\n\t\t\tb = readByte();\\n\t\t}\\n\t}\\n\\n\tpublic int nextInt() {\\n\t\tlong nl = nextLong();\\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE)\\n\t\t\tthrow new NumberFormatException();\\n\t\treturn (int) nl;\\n\t}\\n\\n\tpublic double nextDouble() {\\n\t\treturn Double.parseDouble(next());\\n\t}\\n}\\n", "target": "49", "substitutes": {"mod": ["MOD", " Mod", " ret", "fac", " x", "max", "ref", "x", " scale", "size", " p", "prime", "min", " seed", " c", "Mod", "start", "mem", " reg", " max", "id", "d", " rem", " maj", " start"], "sc": ["SC", "osc", " sp", "pc", " subsc", "sys", "pb", "psc", "si", "usc", "ic", "sv", "rc", "nc", " unsc", "bc", "asc", "sync", "sh", "gc", "sch", "fc", "sec", "sp", "c", "cc", "isc", "esc", "spec", "cl", "lc", "irc", "ctl", "desc", "mc", "scl", "cr", " scr", "p", "ch", " resc", "ss", "sci", "sic", "conv", "dc", "cs", "tc", "Sc", "sb", "scan"], "out": ["writer", "error", "report", "ent", "sys", "OUT", "io", "at", "t", "window", "obj", "all", "net", "write", "console", "sum", "o", "outs", "gr", "r", "err", "c", "ut", "os", "name", "v", "info", "aos", "output", "Out", "outer", "lock", "next", "screen", "co", "println", "it", "print", "input", "p", "ch", "st", "ex", "file", "result", "null", "txt", "ou", "in", "log", "pretty", "str", "ln", "list"], "n": ["nm", "nb", "wn", "t", "ln", "nc", "all", "ll", "mn", "k", "i", "nan", "na", "x", "o", "conn", "on", "c", "an", "nn", "h", "name", "en", "dn", "s", "N", "j", "l", "nu", " N", "nl", "np", "cn", "p", "sn", "b", "ns", "nt", "nw", "num", "un", "z", "d", "ne", "g", "rn"], "m": ["sm", "mt", "om", "nm", "f", "t", "mo", "bm", "mm", "M", "mn", "k", "ma", "i", "ms", "r", "pm", "md", "mi", "c", "dm", "h", "mu", "v", "gm", "j", "rm", "l", "mr", "perm", "mc", "mem", "mx", "p", "tm", "b", "vm", "cm", "mk", "mis", "fm", "d", "km", "g"]}}
{"code": "import java.util.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        //\u30b3\u30fc\u30c9\\n        Scanner scanner = new Scanner(System.in);\\n        Long N = scanner.nextLong();\\n        Long K = scanner.nextLong();\\n        Long R1 = N % K;\\n        Long R2 = Math.abs(R1 - K);\\n\\n        System.out.println(Math.min(R1,R2));\\n    }\\n}\\n", "target": "22", "substitutes": {}}
{"code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.util.*;\\n\\npublic class Main {\\n\\n    public static int createNumber(int x){\\n        int n = (x*10 + x) * 10 + x;\\n        return n;\\n    }\\n\\n    public static void main(String[] args) {\\n        Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\\n        int n = in.nextInt();\\n        if (n > 999){\\n            System.out.println(1111);\\n        }\\n        else {\\n            int first = (n /10) /10;\\n            if (n <= createNumber(first))\\n                System.out.println(createNumber(first));\\n            else System.out.println(createNumber(first+1));\\n        }\\n    }\\n    \\n}", "target": "106", "substitutes": {"x": ["fx", "ci", "px", "xp", "f", "xd", "ax", "t", "xx", "xt", "ic", " cx", " xx", "xi", "xf", "xxxx", "dx", "ox", "i", "g", "c", "h", "y", "xc", "v", "ix", "xe", "wx", "rx", "mx", "p", "xy", "ex", "tx", "X", "z", "xxx", "xs"], "n": ["nv", "nm", "nb", "t", "ren", "nc", "ll", "mn", "nan", "i", "na", "no", "o", "ng", "on", "c", "nn", " numer", "nor", "tn", "v", "en", "dn", "w", "N", "j", "l", "nu", "next", "np", "nl", "cn", "p", "norm", "sn", "b", "ns", "nt", "ni", "nw", "number", "num", "nr", "none", "d", "m", "ne", "g", "rn"], "in": ["xml", "f", "din", "IN", "t", "inn", "inner", "from", "bin", "is", "out", "ind", "k", "ins", "i", "add", "std", "r", "rin", "err", "c", "thin", "isin", "v", "conf", "en", "info", "ner", "gin", "doc", " din", "cin", "char", "In", "sin", "inc", "world", "input", "stream", "b", "file", "ini", "rt", "user", "inf", "reader", "log", "d", "m", "default", "get"], "first": ["sort", "basic", "before", "th", "latest", "part", "max", "front", "last", "primary", "initial", "now", "sum", "client", "must", "full", "head", "min", "second", "First", "only", "small", "lower", "master", "prefix", "this", "each", "local", "third", "prev", "next", "start", "current", "rand", "st", "quick", "pre", "alpha", "top", "minute", "star", "fr", "default", "starter"]}}
{"code": "import java.util.ArrayList;\\nimport java.util.Collections;\\nimport java.util.List;\\nimport java.util.Scanner;\\n\\npublic class Main {\\n\tpublic static void main(String[] args) {\\n\t\tScanner scanner = new Scanner(System.in);\\n\t\tint num = scanner.nextInt();\\n\t\tif (num <= 100) {\\n\t\t\tint array[] = new int[num];\\n\t\t\tList<Integer> list = new ArrayList<Integer>();\\n\t\t\tfor (int i = 0; i < array.length; i++) {\\n\t\t\t\tint next = scanner.nextInt();\\n\t\t\t\tif (0 <= next && next < 1000) {\\n\t\t\t\t\tlist.add(next);\\n\t\t\t\t}\\n\t\t\t}\\n\t\t\tCollections.reverse(list);\\n\\n\t\t\tfor (int i = 0; i < list.size(); i++) {\\n\t\t\t\tif (i == (list.size()-1)) {\\n\t\t\t\t\tSystem.out.println(list.get(i));\\n\t\t\t\t} else {\\n\t\t\t\t\tSystem.out.print(list.get(i) + \" \");\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t}\\n}", "target": "79", "substitutes": {"scanner": ["Scanner", "canning", "Scaner", "synener", "scanning", "Scanning", "scaner", "scanener", " scanter", "canter", "Scanener", " scanener", "synner", "kinter", " scaner", "synning", "kinener", "Scanter", "caner", "kinner", "canener", "kinning", "syner", "scanter", "canner"], "num": ["length", "nm", "zero", "mon", "nb", "snap", "dim", "coord", "net", "Num", "node", "all", "max", "count", "sum", "na", "no", "hom", "type", "alph", "msg", "col", "len", "nam", "n", "eng", "cum", "index", "NUM", "cal", "conf", "init", "con", "orig", "valid", "non", "good", "nu", "current", "np", "multi", "total", "um", "to", "conv", "number", "end", "nom", "draw"], "array": ["root", "aw", "RAY", "archive", "record", "pair", "length", "ar", "auto", "ray", "instance", "view", "window", "ary", "collection", "raw", "area", "our", "integer", "range", "map", "Array", "all", "now", "data", "age", " Array", "arr", "object", "v", "value", "hash", "a", "rest", "string", "binary", "current", "amount", "my", "vector", "number", "row", "trace", "message", "ion"], "list": ["sort", "ist", "sequence", "def", "pair", "history", "status", "back", "show", "L", "range", "lv", "collection", "re", "left", "all", "sync", "ll", "map", "queue", "out", "test", "the", "add", "parent", "single", "alist", "cont", "entry", "index", "LIST", "filter", "local", "load", "batch", "l", "dl", "table", "acl", "print", "pool", "form", "chain", "dict", "st", "details", "search", "listed", "detail", "stack", "null", "pre", "user", "li", "ls", "see", "log", "lists", "set", "cache", "block", "tree", "get"], "i": ["zi", "iq", "iter", "ie", "hi", "ci", "I", "ami", "f", "si", "ic", "sim", "u", "ai", "ei", "us", "me", "xi", "ims", "is", "ind", "ori", "o", "x", "client", "mi", "err", "c", "cli", "index", "by", "php", "y", "im", "gi", "info", "ix", "q", "ui", "init", "this", "ki", "j", "batch", "uri", "ri", "qi", "pi", "multi", "ji", "ij", "it", "my", "ii", "p", "chain", "ini", "di", "ni", "cgi", "id", "yi", "li", "fi", "ti", "bi", "z", "m", "iu", "phi", "g", "ip"], "next": ["sequence", "success", "def", "first", "seq", "div", "iterator", "obj", "latest", "version", "foo", "net", "max", "last", "primary", "fr", "data", "button", "link", "ng", "ne", "response", "tmp", "sec", "dev", "n", "eni", "entry", "prop", "page", "prime", "label", "mobile", "info", "second", "this", "expected", "j", "prev", "future", "Next", "current", " NEXT", "step", "normal", "continue", "append", "txt", "nd", "result", "nt", "any", "end", "ptr", "then", "nr", "self", "z", "xxx", "frame"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main{\\n    public static void main(String[] args){\\n        int sum=0,i=0,j;\\n        String t;\\n        Scanner s = new Scanner(System.in);\\n        while(true){\\n            t = s.next();\\n            if(t.charAt(0) =='0'&&t.length()==1)break;\\n            for(i=0;i<t.length();i++){\\n                sum+=t.charAt(i)-'0';\\n            }\\n            System.out.println(sum);\\n            sum = 0;\\n        }\\n    }\\n}\\n", "target": "144", "substitutes": {"sum": ["length", "zero", "hist", "square", "mass", "cu", "cost", "si", "sim", "fac", "match", "max", "sup", "count", "out", " summed", "add", "sub", "tmp", "size", "alph", "body", "sat", "weight", "cum", "mu", "med", "index", "cal", "average", "summary", "hash", "sam", "Sum", "SI", "mem", "vol", "amount", "diff", "mean", "total", "result", "hum", "um", "num", "cache", "comment", "mod", "black", "percent"], "i": ["zi", "iter", "I", "hi", "ci", "ie", "span", "uni", "inter", "\u0438", "si", "ic", "sim", "oi", "ai", "xi", "ei", "u", "inner", "is", "ind", "ori", "x", "o", "imm", "mi", "n", "cli", "index", "im", "gi", "init", "ix", "y", "ui", "ri", "ki", "uri", "qi", "pi", "multi", "ji", "ij", "it", "ii", "PI", "ini", "di", "yi", "li", "in", "ti", "bi", "ims", "m", "iu", "phi", "ip"], "j": ["f", "jl", "js", "obj", "k", "x", "c", "n", "jc", "v", "q", "json", "l", "jp", "jump", "ji", "ij", "J", "jit", "ii", "it", "p", "b", "jj", "z", "m", "g", "ja"], "t": ["ent", "te", "tg", "f", "at", "tk", "obj", "wt", "out", "o", "tmp", "type", "r", "z", "n", "tr", "pt", "y", "q", "info", "tc", "term", "l", "a", "ta", "table", "title", "string", "text", "tt", "ot", "e", "it", "p", "tm", "st", "txt", "rt", "total", "nt", "template", "td", "to", "T", "temp", "trace", "token", "comment", "m", "tf", "str", "tree", "g", "ts"], "s": ["sw", "es", "qs", "fs", "sys", "ats", "js", "sts", "sv", "eds", "us", "se", "aws", "bis", "is", "sq", "ses", "S", "ms", "ps", "ys", "less", "h", "by", "pers", "ws", "gs", "ns", "rs", "ls", "stats", "xs", "ds", "cs", "ss", "sb", "ts"]}}
{"code": "\\nimport java.util.*;\\nimport java.lang.*;\\nimport java.util.stream.*;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        //\u30b3\u30fc\u30c9\\n        Scanner scanner = new Scanner(System.in);\\n        Integer n = Integer.parseInt(scanner.next());\\n        Integer x = Integer.parseInt(scanner.next());\\n\\n        Integer[] l = new Integer[n];\\n        Integer[] d = new Integer[n + 1];\\n\\n        for(int i = 0; i < n; i++) {\\n            l[i] = Integer.parseInt(scanner.next());\\n        }\\n\\n        d[0] = 0;\\n        for(int i = 0; i < l.length; i++) {\\n            d[i+1] = d[i] + l[i];\\n        }\\n\\n        int count = 0;\\n        for(int i = 0; i < d.length; i++) {\\n            if(d[i] <= x) count++;\\n        }\\n\\n        System.out.println(count);\\n    }\\n}\\n", "target": "130", "substitutes": {}}
{"code": "import java.io.IOException;\\n\\nimport java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\n\\nimport java.io.PrintWriter;\\n\\nimport java.util.HashSet;\\n\\n@SuppressWarnings(\"unchecked\")\\npublic class Main {\\n    static int f(int s) {\\n        int cnt = 0;\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        cnt++;\\n        hs.add(s);\\n\\n        boolean flg = true;\\n\\n        while (flg) {\\n            int tmp;\\n\\n            cnt++;\\n\\n            if (s % 2 == 0) tmp = s / 2;\\n            else tmp = 3 * s + 1;\\n\\n            if (hs.contains(tmp)) {\\n                flg = false;\\n            }\\n\\n            hs.add(tmp);\\n\\n            s = tmp;\\n        }\\n\\n        return cnt;\\n    }\\n\\n    public static void main(String[] args) throws IOException {\\n        final String S;\\n\\n        try (\\n            BufferedReader reader = new BufferedReader(\\n                new InputStreamReader(System.in))) {\\n            S = reader.readLine();\\n        }\\n\\n        PrintWriter out = new PrintWriter(System.out);\\n\\n        int s = Integer.parseInt(S);\\n\\n        out.println(f(s));\\n\\n        out.flush();\\n    }\\n}\\n", "target": "166", "substitutes": {"s": ["its", " ts", "ords", " samples", "uments", "aws", "abs", "sq", "i", "single", "ms", "less", "seconds", "n", "os", "w", "series", "ances", "sample", "ids", "ers", "stats", "ss", "g", "sm", "es", "fs", "ashes", "t", "ings", "ps", "ities", "b", "ls", "d", "m", "ts", "span", "si", "ats", "gets", "sv", "itions", " inputs", "ints", "is", "stat", "ins", "sp", "south", "second", "state", "ens", "p", "ns", "ds", "vals", "sing", "ims", "xs", "qs", "js", "sts", "eds", "ies", "ses", "simple", "c", "h", "a", "gs", "ches", "rs", "ssl", "sym", "sb"], "cnt": ["rust", "cNT", "cnc", "conount", " cOUNT", "Count", "rnc", " cct", "Cnt", "Ccount", "lcct", "conNT", "cant", "caount", "lcOUNT", "count", "uncOUNT", "rcnt", "CNT", " cNT", "cst", "cOUNT", "rcnc", " cnc", "canton", "rcount", "lcnt", " cst", "cust", " count", "cct", "ccount", "uncnt", "rount", "uncst", "cnton", "lcst", "concount", "cacount", " cust", "uncct", " ccount", "Cnton", "rnt", "rcust", "connt", " cnton"], "hs": ["its", "opens", "qs", "bps", "gins", "checks", "hh", "hands", "ashes", "dds", "maps", "sts", "ours", "ols", "hops", "hw", "ems", "hess", "his", "icks", "helps", "cks", "iffs", "ags", "vs", "ges", "tops", "amps", "bs", "sels", "rh", "ws", "hes", "aches", "archs", "phis", "HS", "ths", "gs", "hd", "wcs", "hm", "rs", "inters", "ls", "pps", "hz", "ims", "xs", "ts"], "flg": [" flmsg", " flgu", "flog", " fleg", "folog", "flgs", "slmsg", "folgl", "flgm", "slgs", "fdg", "fdgc", "foleg", "folmsg", "fdgu", "complg", "ulgl", "flmsg", "folfg", "fdgm", "ulfg", " flgc", "folg", "FLg", "FLgc", "complgl", "flgu", "flgl", "complog", "folgs", "ulg", "complfg", "fleg", "slg", "flfg", " flgm", " flgs", "ulog", "sleg", "FLgu", "FLgm", "flgc"], "tmp": ["mb", "tab", "alt", "sq", "copy", "pkg", "cur", "prefix", "sample", "tm", "gt", "offset", "tc", "test", "snap", "t", "share", "max", "mp", "pty", "col", "src", "gm", "j", "np", "tt", "cmd", "etc", "txt", "angle", "pad", "cp", "ptr", "m", "tf", "mod", "obj", "latest", "mm", "ref", "tty", "sup", "sp", "prime", "buff", "acc", "p", "xy", "td", "rt", "nt", "yy", "temp", "attr", "slice", "cmp", "ctx", "img", "partial", "key", "beta", "v", "emp", "orig", "term", "perm", "sam", "pre", "mk", "alpha"], "S": ["I", "R", "C", "RS", "L", "TS", "SL", "OUT", "SS", "SU", "SR", "A", "M", "D", "SER", "CS", "SA", "JS", "B", "P", "V", "SM", "DS", "SB", "W", "Str", "N", "STR", "U", "SI", "GS", "SO", "G", "Si", "SE", "H", "NS", "ST", "SN", "SAM", "T", "SQL"], "out": ["writer", "error", "exit", "over", "sys", "OUT", "io", "t", "at", "flush", "window", "inner", "csv", "obj", "all", "net", "write", "console", "exec", "sum", "o", "outs", "client", "conn", "r", "err", "up", "n", "os", "name", "v", "con", "aos", "output", "w", "Out", "outer", "screen", "store", "res", "it", "print", "cn", "p", "ch", "cmd", "file", "ex", "null", "nt", "user", "to", "end", "ou", "in", "log", "pretty", "str", "list"]}}
{"code": "import java.util.Arrays;\\nimport java.util.BitSet;\\nimport java.util.HashSet;\\nimport java.util.Scanner;\\nimport java.util.Set;\\nimport java.util.stream.Collectors;\\n\\npublic class Main {\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int H = sc.nextInt();\\n        int A = sc.nextInt();\\n        System.out.println((int) Math.ceil(((float) H) / A));\\n    }\\n}", "target": "147", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "syn", "psc", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "gc", "sq", "sec", "sp", "c", "cc", "isc", "esc", "spec", "cl", "ko", "lc", "ctl", "desc", "mc", "enc", "scl", "cr", "ch", "system", "p", "tch", "ck", "txt", "ss", "conv", "sa", "dc", "cs", "tc", "Sc", "scan"], "H": ["HO", "High", "His", "He", "L", "HH", "HI", "HE", " h", "AV", "HTTP", "M", "D", "MH", "HA", "B", "ASH", "P", "h", "HM", "W", "OH", "HL", "HB", "N", "AH", "DH", "CH", "TH", "HS", "HD", "NH", "Eh", "HT", "HC"], "A": ["MA", "Alpha", "I", "AF", "GA", "RA", "AN", "C", "Ma", "Area", "AI", "Array", "TA", "M", "AA", "AP", "The", "AY", "SA", "S", "HA", "B", "ACC", "P", "AU", "IA", "AB", "AC", "AGE", "a", "NA", "BA", "Ax", "PA", "An", "KA", "As", "mA", "LA", "CA"]}}
{"code": "import java.util.Scanner;\\n\\npublic class Main {\\n\\n    public static void main(String[] args) {\\n        Scanner sc = new Scanner(System.in);\\n        int count = sc.nextInt();\\n        int sum = 0;\\n        for (int i = 0; i < count; i++) {\\n            sum += isPrimeNumber(sc.nextLong()) ? 1 : 0;\\n        }\\n        System.out.println(sum);\\n    }\\n\\n    private static boolean isPrimeNumber(long a) {\\n        if (a == 2) {\\n            return true;\\n        } else if (a < 2 || a % 2 == 0) {\\n            return false;\\n        }\\n\\n        long sqrt = (long) Math.sqrt(a);\\n        for (int i = 3; i <= sqrt; i += 2) {\\n            if (a % i == 0) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}", "target": "226", "substitutes": {"sc": ["SC", "sw", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sh", "sch", "sq", "gc", "sub", "ng", "anc", "sec", "sp", "c", "cc", "esc", "isc", "cl", "lc", " Sc", "ctl", "desc", "mc", "scl", "cr", "sel", "ch", "ck", "ss", "conv", "cs", "tc", "Sc", "sb", "scan"], "count": ["found", "length", "history", "counter", "Count", "nb", "first", "ctx", "range", "match", "hold", "max", "gc", "find", "cond", "size", "cont", "len", "code", "c", "n", "check", "index", "ount", "conf", "limit", "batch", "next", "current", "start", "amount", "ch", "total", "result", "nt", "number", "num", "list", "z", "cache", "mount"], "sum": ["length", "mass", "si", "sim", "mm", "fac", "match", "share", "max", "sup", "out", "union", " summed", "add", "size", "must", "sat", "weight", "cum", "cal", "tu", "average", "summary", "hash", "sam", "Sum", "su", "mem", "acc", "amount", "vol", "ass", "sample", "mean", "total", "result", "empty", "um", "hum", "sa", "num", "temp", "set", "test"], "i": ["zi", "ie", "hi", "ci", "I", "ami", "f", "io", "si", "ic", "sim", "u", "t", "ai", "us", "me", "xi", "ei", "is", "k", "o", "x", "client", "mi", "err", "cli", "gi", "im", "y", "init", "ix", "q", "ui", "info", "v", "s", "ri", "ki", "j", "batch", "l", "ity", "qi", "pi", "multi", "ij", "it", "print", "ii", "gu", "ini", "di", "ex", "ni", "id", "li", "fi", "in", "ti", "bi", "d", "m", "iu", "phi", "g", "ip"], "a": ["aux", "ar", "ami", "aa", "f", "t", "at", "al", "ai", "area", "all", "A", "da", "au", "abs", "sha", "now", "na", "o", "ab", "out", "oa", "ao", "ba", "an", "am", "c", "index", "aaaa", "y", "ea", "ga", "ia", "sta", "isa", "ta", "aaa", "amount", "acc", "apa", "p", "b", "aka", "total", "ca", "result", "alpha", "as", "la", "att", "to", "sa", "z", "act", "ma", "val", "g", "ac"], "sqrt": ["squarelat", " sqRT", "sqrd", "qRT", "qri", "sqRT", " sqr", "qrt", "squarerd", " sqrd", "squlat", "squrt", "syrt", "syRT", "squarert", "squareRT", "sqri", "squr", "qrd", "sqr", "squRT", "syri", "squrd", "qr", " sqri", "sqlat", " sqlat", "syr"]}}
{"code": "import java.util.Scanner;\\n\\nclass Main {\\n    public static void main(String[] args) {\\n\tScanner sc = new Scanner(System.in);\\n\\n\tint W, H, x, y;\\n\tW = sc.nextInt();\\n\tH = sc.nextInt();\\n\tx = sc.nextInt();\\n\ty = sc.nextInt();\\n\\n\tint judge;\\n\tif (x + x == W && y + y == H)\\n\t    judge = 1;\\n\telse\\n\t    judge = 0;\\n\\n\tSystem.out.println((double)(((double)W * (double)H) / 2) + \" \" + judge);\\n    }\\n}", "target": "182", "substitutes": {"sc": ["SC", "cmp", "sw", "osc", "pc", "sys", "pb", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "out", "sch", "gc", "sq", "uc", "anc", "fc", "sec", "sp", "cont", "c", "cc", "isc", "esc", "cl", "ko", "lc", " Sc", "ctl", "desc", "mc", "scl", "cr", "ch", "system", "p", "st", "cgi", "ss", "conv", "dc", "cs", "ec", "tc", "Sc", "g", "scan"], "W": ["Week", "Width", "WT", "VW", "L", "OW", "DW", "WE", "Y", "EW", "Wh", "SH", "Win", "M", "D", "Word", "What", "RW", "WP", "F", "Web", "V", "WS", "CW", "SW", "WM", "WA", "HTML", "w", "N", "NW", "Watch", "WH", "ESS", "TH", "WR", "G", "Window", "WB", "X", "BW", "WD", "WW", "HT", "FW", "We", "WC"], "H": ["HO", "High", "RH", "His", "He", "SH", "HH", "HI", "Y", "HE", "HY", "M", "Host", "IT", "MH", "HA", "HR", "V", "h", "OH", "HK", "HL", "FH", "HB", "AH", "Height", "DH", "WH", "CH", "TH", "G", "HS", "HD", "NH", "Eh", "IL", "X", "It", "HT", "HTML", "HC", "HQ"], "x": ["fx", "px", "wd", "xp", "f", "ax", "at", "xt", "xx", "u", "al", "xi", "xf", "ww", "dx", "ox", "i", "on", "n", "h", "index", "xc", "im", "v", "ix", "yx", "w", "wh", "l", "el", "wx", "rx", "lat", "cel", "xy", "ex", "tx", "X", "width", "z", "d", "m", "ux", "xs"], "y": ["ye", "cy", "yl", "vy", "py", "sys", "Y", "ies", "oy", "fy", "year", "i", "sy", "uy", "ym", "ys", "n", "h", "iy", "yt", "by", "v", "ty", "w", "ay", "j", "l", "ey", "sky", "my", "ly", "ch", "xy", "ny", "axy", "b", "yi", "yy", "z", "yo"], "judge": ["juge", "Judged", " judg", "Judgate", "shotge", "juage", "judged", "bragrade", "Judge", "Judger", "judg", "shotger", "shotgrade", "juged", "judgate", "judger", "Judage", " judged", "judage", "judgrade", "Judgrade", " Judger", "Judg", "jug", "munger", "munge", " judger", " Judge", "mung", "brager", "bragate", " Judg", "juger", "shotgate", "munage", "brage"]}}
{"code": "\\nimport java.util.Scanner;\\npublic class Main {\\n\tpublic static void main(String[] args) throws Exception {\\n\t\tScanner sc = new Scanner(System.in);\\n\t\tint n = sc.nextInt();\\n\t\tint m = sc.nextInt();\\n\t\tint[] a = new int[n];\\n\t\tboolean[] jdg = new boolean[n+1];\\n\t\tlong mod = 1000000007;\\n\t\tfor(int i = 0; i < m; i++) {\\n\t\t\ta[i] = sc.nextInt();\\n\t\t\tjdg[a[i]] = true;\\n\t\t}\\n\t\tlong[] dp = new long[n+1];\\n\t\tdp[0] = 1;\\n\t\tfor(int i = 0; i < n; i++) {\\n\t\t\tfor(int j = i+1; j <= Math.min(n, i+2); j++) {\\n\t\t\t\tif(jdg[j] == false) {\\n\t\t\t\t\tdp[j] += dp[i];\\n\t\t\t\t\tdp[j] %= mod;\\n\t\t\t\t}\\n\t\t\t}\\n\t\t}\\n\t\tSystem.out.println(dp[n]);\\n\t}\\n}\\n", "target": "174", "substitutes": {"sc": ["SC", "osc", "pc", "sys", "ctx", "usc", "sv", "rc", "nc", "bc", "asc", "sync", "sch", "gc", "sq", "ng", "anc", "fc", "sec", "sb", "sp", "c", "cc", "isc", "ser", "esc", "cl", "lc", " Sc", "desc", "ctl", "mc", "inc", "scl", "cr", "ch", "system", "ck", "cgi", "ss", "sci", "conv", "cle", "cs", "tc", "Sc", "g", "scan"], "n": ["nm", "nb", "t", "network", "u", "ic", "ln", "nc", "all", "net", "ll", "M", "mn", "nan", "na", "x", "o", "no", "ng", "on", "len", "c", "an", "nn", "fn", "h", "name", "y", "v", "en", "dn", "N", "l", "nu", "np", "nl", "pi", "cn", "p", "sn", "norm", "ns", "nd", "nt", "ni", "number", "num", "in", "un", "z", "d", "ne", "g"], "m": ["sm", "mt", "nm", "f", "t", "me", "bm", "mm", "M", "mn", "k", "ma", "ms", "r", "mi", "c", "an", "h", "mu", "y", "v", "im", "min", "man", "gm", "w", "l", "mc", "mx", "p", "tm", "b", "cm", "z", "d", "km", "g"], "a": ["aux", "ar", "aa", "f", "t", "ai", "area", "wa", "A", "fa", "na", "pa", "o", "ab", "oa", "ao", "act", "ba", "an", "am", "c", "ap", "app", "ga", "ia", "sta", "ta", "aj", "aaa", "aff", "apa", "p", "b", "ca", "ata", "as", "alpha", "att", "sa", "d", "ma", "g", "ac"], "jdg": ["jpdog", "jdcgd", "jpdlgg", "jdogd", "jidcgg", "jdoga", "jfdbg", "jpdlg", "jpdgg", "jdlbg", "jpdg", "jbdg", "jidcg", "jdlg", "jdlgg", "jpdbg", "jdcg", "jbdgs", "jpdd", " jdgs", "jdogg", "jdbg", "jdgs", "jpdlbg", "jdog", "jddd", "jidgd", " jbdog", "jddg", " jdd", "jfdg", "jidg", "jddog", " jbdg", "jbdd", "jbdog", " jbdd", "jdlgd", "jidcga", " jbdgs", "jdlga", "jddgs", "jidga", "jdgd", "jidcgd", "jdcga", "jdcgg", "jidgg", "jdga", " jdog", "jfdgg", "jpdgs", "jdd", "jdgg"], "mod": ["reg", "MOD", "dig", "fun", " Mod", "cu", "div", "scale", "fac", "max", "base", "mag", "sub", "sum", "add", "ms", "odd", "d", "bit", "lo", "prime", "min", "man", "mods", "set", "perm", "Mod", "red", "crit", "oct", "pre", "comp", " MOD", "temp", "mult", "bad", "rot", "sign", "val", "modified", "log", "od"], "i": ["io", "us", "o", "iu", "y", "ix", "pi", "ii", "id", "ti", "bi", "fire", "phi", "ie", "hi", "ci", "f", "xi", "ei", "ori", "init", "ui", "uri", "ik", "qi", "multi", "my", "chain", "ex", "ini", "iter", "si", "ic", "sim", "oi", "iri", "inner", "is", "k", "ind", "x", "mi", "gi", "ji", "it", "p", "di", "to", "ims", "z", "zi", "iq", "iti", "I", "ami", "\u0438", "u", "ai", "me", "im", "v", "info", "q", "this", "ri", "batch", "ia", "ki", "ity", "ij", "li", "point", "ip"], "dp": ["px", "wd", "dep", "pb", "dd", "pp", "dq", "wp", "dr", "gp", "deb", "DP", "vp", "pa", "ps", "pd", "tp", "cd", "pm", "df", "rpm", "dm", "eb", "php", "dj", "dl", "dh", "lp", "jp", "osp", "np", "hp", "adr", "dos", "p", "pipe", "fp", "resp", "di", "dt", "ds", "db", "dc", "cp", "d"], "j": ["bj", "jl", "js", "obj", "kh", "er", "k", "fr", "oj", "job", "x", "o", "z", "je", "err", "uj", "ge", "ev", "key", "jc", "pt", "y", "kid", "v", "q", "dj", "json", "aj", "jp", "jo", "jump", "ji", "J", "ph", "ij", "br", "jit", "it", "ii", "p", "jj", "other", "li", "bi", "kj", "jas", "ne", "g", "ja"]}}
{"code": "import java.util.*;\\n\\nclass Main{\\n  public static void main(String[] args){\\n    Scanner sc=new Scanner(System.in);\\n    int n=sc.nextInt();\\n    int[][] dp=new int[2][n];\\n    for(int i=0;i<2;i++){\\n      for(int j=0;j<n;j++){\\n        dp[i][j]=sc.nextInt();\\n      }\\n    }\\n    for(int i=1;i<n;i++){\\n      dp[0][i]=dp[0][i-1]+dp[0][i];\\n    }\\n    dp[1][0]=dp[0][0]+dp[1][0];\\n    for(int i=1;i<n;i++){\\n      dp[1][i]=dp[1][i]+Math.max(dp[0][i],dp[1][i-1]);\\n    }\\n    System.out.println(dp[1][n-1]);\\n  }\\n}", "target": "140", "substitutes": {"sc": ["SC", "rec", "sw", "osc", "pc", "sys", "usc", "sv", "rc", "nc", "bc", "asc", "sac", "sync", "sh", "sch", "sq", "gc", "anc", "fc", "sec", "sp", "Desc", "c", "cc", "esc", "isc", "cl", "lc", " Sc", "arc", "desc", "mc", "enc", "scl", "cr", "capt", "ch", "sel", "ss", "sci", "conv", "cs", "tc", "Sc", "scan"], "n": ["nm", "nb", "t", "network", "ln", "nc", "all", "net", "ll", "mn", "count", "nan", "k", "na", "o", "no", "ng", "size", "r", "and", "len", "c", "nn", "fn", "nor", "name", "v", "en", "dn", "m", "q", "w", "N", "l", "a", "nu", " N", "np", "nl", "cn", "p", "sn", "ns", "nt", "number", "num", "in", "un", "d", "ne"], "dp": ["imp", "uf", "def", "px", "wd", "bps", "xp", "dd", "pb", "pp", "dep", "grad", "bb", "dq", "csv", "dim", "drop", "wp", "du", "dk", "sup", "DP", "deb", "gp", "vp", "pa", "ps", "tp", "pd", "cd", "pm", "dial", "pkg", "df", "rpm", "dm", "isp", "dro", "php", "dn", "bsp", "decl", "dj", "dl", "lp", "dll", "hp", "ph", "dos", "adr", "p", "delay", "fp", "gt", "cmd", "htt", "resp", "di", "pipe", "dt", "ds", "dc", "cp", "see", "d", "tap", "ip"], "i": ["status", "io", "at", "us", "iu", "ir", "index", "y", "ix", "iii", "pi", "ii", "id", "ti", "bi", "phi", "g", "ie", "hi", "ci", "f", "xi", "ei", "ger", "II", "ori", "cli", "init", "ui", "uri", "ik", "qi", "multi", "print", "chain", "ini", "ni", "m", "iter", "si", "ic", "sim", "mm", "is", "ind", "x", "mi", "gi", "ji", "it", "p", "di", "in", "ims", "zi", "iq", "I", "ami", "\u0438", "u", "ai", "me", "key", "iy", "im", "v", "info", "q", "this", "ki", "ri", "a", "ity", "ij", "li", "item", "point", "ip"], "j": ["note", "ie", "jac", "bj", "ax", "jl", "js", "obj", "us", "k", "oj", "o", "job", "x", "z", "je", "uj", "h", "jc", "pt", "y", "v", "kid", "s", "q", "dj", "json", "l", "pr", "aj", "jp", "jo", "jump", "ji", "ij", "J", "ph", "br", "ot", "it", "b", "jj", "other", "rel", "kj", "jas", "g", "ja"]}}
